
e1000-sfi.ko:     file format elf64-x86-64

Disassembly of section .text:

0000000000000000 <eth_validate_addr>:
       0:	55                   	push   %rbp
       1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4: R_X86_64_32S	.rodata.str1.1
       8:	48 89 e5             	mov    %rsp,%rbp
       b:	e8 00 00 00 00       	callq  10 <eth_validate_addr+0x10>
			c: R_X86_64_PC32	record_function+0xfffffffffffffffc
      10:	c9                   	leaveq 
      11:	31 c0                	xor    %eax,%eax
      13:	c3                   	retq   

0000000000000014 <param_array_get>:
      14:	55                   	push   %rbp
      15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18: R_X86_64_32S	.rodata.str1.1+0x12
      1c:	48 89 e5             	mov    %rsp,%rbp
      1f:	e8 00 00 00 00       	callq  24 <param_array_get+0x10>
			20: R_X86_64_PC32	record_function+0xfffffffffffffffc
      24:	c9                   	leaveq 
      25:	31 c0                	xor    %eax,%eax
      27:	c3                   	retq   

0000000000000028 <param_array_set>:
      28:	55                   	push   %rbp
      29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c: R_X86_64_32S	.rodata.str1.1+0x22
      30:	48 89 e5             	mov    %rsp,%rbp
      33:	e8 00 00 00 00       	callq  38 <param_array_set+0x10>
			34: R_X86_64_PC32	record_function+0xfffffffffffffffc
      38:	c9                   	leaveq 
      39:	31 c0                	xor    %eax,%eax
      3b:	c3                   	retq   

000000000000003c <param_get_uint>:
      3c:	55                   	push   %rbp
      3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			40: R_X86_64_32S	.rodata.str1.1+0x32
      44:	48 89 e5             	mov    %rsp,%rbp
      47:	e8 00 00 00 00       	callq  4c <param_get_uint+0x10>
			48: R_X86_64_PC32	record_function+0xfffffffffffffffc
      4c:	c9                   	leaveq 
      4d:	31 c0                	xor    %eax,%eax
      4f:	c3                   	retq   

0000000000000050 <param_set_uint>:
      50:	55                   	push   %rbp
      51:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			54: R_X86_64_32S	.rodata.str1.1+0x41
      58:	48 89 e5             	mov    %rsp,%rbp
      5b:	e8 00 00 00 00       	callq  60 <param_set_uint+0x10>
			5c: R_X86_64_PC32	record_function+0xfffffffffffffffc
      60:	c9                   	leaveq 
      61:	31 c0                	xor    %eax,%eax
      63:	c3                   	retq   

0000000000000064 <param_get_int>:
      64:	55                   	push   %rbp
      65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			68: R_X86_64_32S	.rodata.str1.1+0x50
      6c:	48 89 e5             	mov    %rsp,%rbp
      6f:	e8 00 00 00 00       	callq  74 <param_get_int+0x10>
			70: R_X86_64_PC32	record_function+0xfffffffffffffffc
      74:	c9                   	leaveq 
      75:	31 c0                	xor    %eax,%eax
      77:	c3                   	retq   

0000000000000078 <param_set_int>:
      78:	55                   	push   %rbp
      79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7c: R_X86_64_32S	.rodata.str1.1+0x5e
      80:	48 89 e5             	mov    %rsp,%rbp
      83:	e8 00 00 00 00       	callq  88 <param_set_int+0x10>
			84: R_X86_64_PC32	record_function+0xfffffffffffffffc
      88:	c9                   	leaveq 
      89:	31 c0                	xor    %eax,%eax
      8b:	c3                   	retq   

000000000000008c <ethtool_op_set_sg>:
      8c:	55                   	push   %rbp
      8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			90: R_X86_64_32S	.rodata.str1.1+0x6c
      94:	48 89 e5             	mov    %rsp,%rbp
      97:	e8 00 00 00 00       	callq  9c <ethtool_op_set_sg+0x10>
			98: R_X86_64_PC32	record_function+0xfffffffffffffffc
      9c:	c9                   	leaveq 
      9d:	31 c0                	xor    %eax,%eax
      9f:	c3                   	retq   

00000000000000a0 <ethtool_op_get_link>:
      a0:	55                   	push   %rbp
      a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a4: R_X86_64_32S	.rodata.str1.1+0x7e
      a8:	48 89 e5             	mov    %rsp,%rbp
      ab:	e8 00 00 00 00       	callq  b0 <ethtool_op_get_link+0x10>
			ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
      b0:	c9                   	leaveq 
      b1:	31 c0                	xor    %eax,%eax
      b3:	c3                   	retq   

00000000000000b4 <e1000_release_software_flag>:
      b4:	55                   	push   %rbp
      b5:	48 89 e5             	mov    %rsp,%rbp
      b8:	41 55                	push   %r13
      ba:	49 89 fd             	mov    %rdi,%r13
      bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c0: R_X86_64_32S	.rodata.str1.1+0x92
      c4:	41 54                	push   %r12
      c6:	53                   	push   %rbx
      c7:	48 83 ec 08          	sub    $0x8,%rsp
      cb:	e8 00 00 00 00       	callq  d0 <e1000_release_software_flag+0x1c>
			cc: R_X86_64_PC32	record_function+0xfffffffffffffffc
      d0:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
      d5:	75 35                	jne    10c <e1000_release_software_flag+0x58>
      d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			da: R_X86_64_32S	.rodata.str1.1+0xae
      de:	49 8b 5d 00          	mov    0x0(%r13),%rbx
      e2:	e8 00 00 00 00       	callq  e7 <e1000_release_software_flag+0x33>
			e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
      e7:	44 8b a3 00 0f 00 00 	mov    0xf00(%rbx),%r12d
      ee:	49 8b 5d 00          	mov    0x0(%r13),%rbx
      f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f5: R_X86_64_32S	.rodata.str1.1+0xb4
      f9:	41 83 e4 df          	and    $0xffffffffffffffdf,%r12d
      fd:	e8 00 00 00 00       	callq  102 <e1000_release_software_flag+0x4e>
			fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
     102:	48 81 c3 00 0f 00 00 	add    $0xf00,%rbx
     109:	44 89 23             	mov    %r12d,(%rbx)
     10c:	58                   	pop    %rax
     10d:	5b                   	pop    %rbx
     10e:	41 5c                	pop    %r12
     110:	41 5d                	pop    %r13
     112:	c9                   	leaveq 
     113:	c3                   	retq   

0000000000000114 <e1000_check_phy_reset_block>:
     114:	55                   	push   %rbp
     115:	48 89 e5             	mov    %rsp,%rbp
     118:	53                   	push   %rbx
     119:	48 89 fb             	mov    %rdi,%rbx
     11c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f: R_X86_64_32S	.rodata.str1.1+0xbb
     123:	48 83 ec 08          	sub    $0x8,%rsp
     127:	e8 00 00 00 00       	callq  12c <e1000_check_phy_reset_block+0x18>
			128: R_X86_64_PC32	record_function+0xfffffffffffffffc
     12c:	8b 43 10             	mov    0x10(%rbx),%eax
     12f:	83 f8 12             	cmp    $0x12,%eax
     132:	75 1b                	jne    14f <e1000_check_phy_reset_block+0x3b>
     134:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			137: R_X86_64_32S	.rodata.str1.1+0xae
     13b:	48 8b 1b             	mov    (%rbx),%rbx
     13e:	e8 00 00 00 00       	callq  143 <e1000_check_phy_reset_block+0x2f>
			13f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     143:	8b 83 54 5b 00 00    	mov    0x5b54(%rbx),%eax
     149:	a8 40                	test   $0x40,%al
     14b:	75 2a                	jne    177 <e1000_check_phy_reset_block+0x63>
     14d:	eb 21                	jmp    170 <e1000_check_phy_reset_block+0x5c>
     14f:	83 f8 0d             	cmp    $0xd,%eax
     152:	76 23                	jbe    177 <e1000_check_phy_reset_block+0x63>
     154:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			157: R_X86_64_32S	.rodata.str1.1+0xae
     15b:	48 8b 1b             	mov    (%rbx),%rbx
     15e:	e8 00 00 00 00       	callq  163 <e1000_check_phy_reset_block+0x4f>
			15f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     163:	8b 83 20 58 00 00    	mov    0x5820(%rbx),%eax
     169:	a9 00 00 04 00       	test   $0x40000,%eax
     16e:	74 07                	je     177 <e1000_check_phy_reset_block+0x63>
     170:	b8 0c 00 00 00       	mov    $0xc,%eax
     175:	eb 02                	jmp    179 <e1000_check_phy_reset_block+0x65>
     177:	31 c0                	xor    %eax,%eax
     179:	5a                   	pop    %rdx
     17a:	5b                   	pop    %rbx
     17b:	c9                   	leaveq 
     17c:	c3                   	retq   

000000000000017d <e1000_put_hw_eeprom_semaphore>:
     17d:	55                   	push   %rbp
     17e:	48 89 e5             	mov    %rsp,%rbp
     181:	41 55                	push   %r13
     183:	49 89 fd             	mov    %rdi,%r13
     186:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			189: R_X86_64_32S	.rodata.str1.1+0xd7
     18d:	41 54                	push   %r12
     18f:	53                   	push   %rbx
     190:	48 83 ec 08          	sub    $0x8,%rsp
     194:	e8 00 00 00 00       	callq  199 <e1000_put_hw_eeprom_semaphore+0x1c>
			195: R_X86_64_PC32	record_function+0xfffffffffffffffc
     199:	41 83 7d 68 00       	cmpl   $0x0,0x68(%r13)
     19e:	74 47                	je     1e7 <e1000_put_hw_eeprom_semaphore+0x6a>
     1a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a3: R_X86_64_32S	.rodata.str1.1+0xae
     1a7:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     1ab:	e8 00 00 00 00       	callq  1b0 <e1000_put_hw_eeprom_semaphore+0x33>
			1ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
     1b0:	8b 83 50 5b 00 00    	mov    0x5b50(%rbx),%eax
     1b6:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
     1bb:	75 09                	jne    1c6 <e1000_put_hw_eeprom_semaphore+0x49>
     1bd:	41 89 c4             	mov    %eax,%r12d
     1c0:	41 83 e4 fc          	and    $0xfffffffffffffffc,%r12d
     1c4:	eb 07                	jmp    1cd <e1000_put_hw_eeprom_semaphore+0x50>
     1c6:	41 89 c4             	mov    %eax,%r12d
     1c9:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
     1cd:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     1d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d4: R_X86_64_32S	.rodata.str1.1+0xb4
     1d8:	e8 00 00 00 00       	callq  1dd <e1000_put_hw_eeprom_semaphore+0x60>
			1d9: R_X86_64_PC32	record_function+0xfffffffffffffffc
     1dd:	48 81 c3 50 5b 00 00 	add    $0x5b50,%rbx
     1e4:	44 89 23             	mov    %r12d,(%rbx)
     1e7:	59                   	pop    %rcx
     1e8:	5b                   	pop    %rbx
     1e9:	41 5c                	pop    %r12
     1eb:	41 5d                	pop    %r13
     1ed:	c9                   	leaveq 
     1ee:	c3                   	retq   

00000000000001ef <e1000_check_mng_mode>:
     1ef:	55                   	push   %rbp
     1f0:	48 89 e5             	mov    %rsp,%rbp
     1f3:	41 54                	push   %r12
     1f5:	49 89 fc             	mov    %rdi,%r12
     1f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fb: R_X86_64_32S	.rodata.str1.1+0xf5
     1ff:	53                   	push   %rbx
     200:	e8 00 00 00 00       	callq  205 <e1000_check_mng_mode+0x16>
			201: R_X86_64_PC32	record_function+0xfffffffffffffffc
     205:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			208: R_X86_64_32S	.rodata.str1.1+0xae
     20c:	49 8b 1c 24          	mov    (%r12),%rbx
     210:	e8 00 00 00 00       	callq  215 <e1000_check_mng_mode+0x26>
			211: R_X86_64_PC32	record_function+0xfffffffffffffffc
     215:	8b 83 54 5b 00 00    	mov    0x5b54(%rbx),%eax
     21b:	41 83 7c 24 10 12    	cmpl   $0x12,0x10(%r12)
     221:	75 08                	jne    22b <e1000_check_mng_mode+0x3c>
     223:	83 e0 0e             	and    $0xe,%eax
     226:	83 f8 04             	cmp    $0x4,%eax
     229:	eb 06                	jmp    231 <e1000_check_mng_mode+0x42>
     22b:	83 e0 0e             	and    $0xe,%eax
     22e:	83 f8 06             	cmp    $0x6,%eax
     231:	5b                   	pop    %rbx
     232:	41 5c                	pop    %r12
     234:	c9                   	leaveq 
     235:	0f 94 c0             	sete   %al
     238:	0f b6 c0             	movzbl %al,%eax
     23b:	c3                   	retq   

000000000000023c <e1000_write_vfta>:
     23c:	55                   	push   %rbp
     23d:	48 89 e5             	mov    %rsp,%rbp
     240:	41 57                	push   %r15
     242:	49 89 ff             	mov    %rdi,%r15
     245:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			248: R_X86_64_32S	.rodata.str1.1+0x10a
     24c:	41 56                	push   %r14
     24e:	41 89 f6             	mov    %esi,%r14d
     251:	41 55                	push   %r13
     253:	41 89 d5             	mov    %edx,%r13d
     256:	41 54                	push   %r12
     258:	53                   	push   %rbx
     259:	48 83 ec 18          	sub    $0x18,%rsp
     25d:	e8 00 00 00 00       	callq  262 <e1000_write_vfta+0x26>
			25e: R_X86_64_PC32	record_function+0xfffffffffffffffc
     262:	41 8b 47 10          	mov    0x10(%r15),%eax
     266:	83 f8 12             	cmp    $0x12,%eax
     269:	0f 84 10 01 00 00    	je     37f <e1000_write_vfta+0x143>
     26f:	83 f8 04             	cmp    $0x4,%eax
     272:	0f 85 ba 00 00 00    	jne    332 <e1000_write_vfta+0xf6>
     278:	41 f6 c6 01          	test   $0x1,%r14b
     27c:	0f 84 b0 00 00 00    	je     332 <e1000_write_vfta+0xf6>
     282:	42 8d 04 b5 fc ff ff 	lea    0xfffffffffffffffc(,%r14,4),%eax
     289:	ff 
     28a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28d: R_X86_64_32S	.rodata.str1.1+0xae
     291:	49 8b 1f             	mov    (%r15),%rbx
     294:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
     298:	e8 00 00 00 00       	callq  29d <e1000_write_vfta+0x61>
			299: R_X86_64_PC32	record_function+0xfffffffffffffffc
     29d:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
     2a1:	48 8d 9c 03 00 56 00 	lea    0x5600(%rbx,%rax,1),%rbx
     2a8:	00 
     2a9:	8b 03                	mov    (%rbx),%eax
     2ab:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
     2ae:	41 8b 47 10          	mov    0x10(%r15),%eax
     2b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b5: R_X86_64_32S	.rodata.str1.1+0xb4
     2b9:	4d 8b 27             	mov    (%r15),%r12
     2bc:	83 f8 03             	cmp    $0x3,%eax
     2bf:	19 db                	sbb    %ebx,%ebx
     2c1:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
     2c7:	81 c3 00 56 00 00    	add    $0x5600,%ebx
     2cd:	e8 00 00 00 00       	callq  2d2 <e1000_write_vfta+0x96>
			2ce: R_X86_64_PC32	record_function+0xfffffffffffffffc
     2d2:	42 8d 04 b5 00 00 00 	lea    0x0(,%r14,4),%eax
     2d9:	00 
     2da:	48 63 db             	movslq %ebx,%rbx
     2dd:	49 01 dc             	add    %rbx,%r12
     2e0:	89 c0                	mov    %eax,%eax
     2e2:	49 01 c4             	add    %rax,%r12
     2e5:	45 89 2c 24          	mov    %r13d,(%r12)
     2e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ec: R_X86_64_32S	.rodata.str1.1+0xae
     2f0:	49 8b 1f             	mov    (%r15),%rbx
     2f3:	e8 00 00 00 00       	callq  2f8 <e1000_write_vfta+0xbc>
			2f4: R_X86_64_PC32	record_function+0xfffffffffffffffc
     2f8:	8b 43 08             	mov    0x8(%rbx),%eax
     2fb:	41 8b 47 10          	mov    0x10(%r15),%eax
     2ff:	4d 8b 27             	mov    (%r15),%r12
     302:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			305: R_X86_64_32S	.rodata.str1.1+0xb4
     309:	83 f8 03             	cmp    $0x3,%eax
     30c:	19 db                	sbb    %ebx,%ebx
     30e:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
     314:	81 c3 00 56 00 00    	add    $0x5600,%ebx
     31a:	48 63 db             	movslq %ebx,%rbx
     31d:	e8 00 00 00 00       	callq  322 <e1000_write_vfta+0xe6>
			31e: R_X86_64_PC32	record_function+0xfffffffffffffffc
     322:	49 01 dc             	add    %rbx,%r12
     325:	8b 45 d4             	mov    0xffffffffffffffd4(%rbp),%eax
     328:	4c 03 65 c8          	add    0xffffffffffffffc8(%rbp),%r12
     32c:	41 89 04 24          	mov    %eax,(%r12)
     330:	eb 3b                	jmp    36d <e1000_write_vfta+0x131>
     332:	41 8b 47 10          	mov    0x10(%r15),%eax
     336:	4d 8b 27             	mov    (%r15),%r12
     339:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33c: R_X86_64_32S	.rodata.str1.1+0xb4
     340:	83 f8 03             	cmp    $0x3,%eax
     343:	19 db                	sbb    %ebx,%ebx
     345:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
     34b:	81 c3 00 56 00 00    	add    $0x5600,%ebx
     351:	e8 00 00 00 00       	callq  356 <e1000_write_vfta+0x11a>
			352: R_X86_64_PC32	record_function+0xfffffffffffffffc
     356:	42 8d 04 b5 00 00 00 	lea    0x0(,%r14,4),%eax
     35d:	00 
     35e:	48 63 db             	movslq %ebx,%rbx
     361:	49 01 dc             	add    %rbx,%r12
     364:	89 c0                	mov    %eax,%eax
     366:	49 01 c4             	add    %rax,%r12
     369:	45 89 2c 24          	mov    %r13d,(%r12)
     36d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			370: R_X86_64_32S	.rodata.str1.1+0xae
     374:	49 8b 1f             	mov    (%r15),%rbx
     377:	e8 00 00 00 00       	callq  37c <e1000_write_vfta+0x140>
			378: R_X86_64_PC32	record_function+0xfffffffffffffffc
     37c:	8b 43 08             	mov    0x8(%rbx),%eax
     37f:	48 83 c4 18          	add    $0x18,%rsp
     383:	5b                   	pop    %rbx
     384:	41 5c                	pop    %r12
     386:	41 5d                	pop    %r13
     388:	41 5e                	pop    %r14
     38a:	41 5f                	pop    %r15
     38c:	c9                   	leaveq 
     38d:	c3                   	retq   

000000000000038e <e1000_rar_set>:
     38e:	55                   	push   %rbp
     38f:	48 89 e5             	mov    %rsp,%rbp
     392:	41 57                	push   %r15
     394:	41 56                	push   %r14
     396:	49 89 fe             	mov    %rdi,%r14
     399:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39c: R_X86_64_32S	.rodata.str1.1+0x11b
     3a0:	41 55                	push   %r13
     3a2:	41 54                	push   %r12
     3a4:	53                   	push   %rbx
     3a5:	48 89 f3             	mov    %rsi,%rbx
     3a8:	48 83 ec 28          	sub    $0x28,%rsp
     3ac:	89 55 b8             	mov    %edx,0xffffffffffffffb8(%rbp)
     3af:	e8 00 00 00 00       	callq  3b4 <e1000_rar_set+0x26>
			3b0: R_X86_64_PC32	record_function+0xfffffffffffffffc
     3b4:	8a 03                	mov    (%rbx),%al
     3b6:	88 45 be             	mov    %al,0xffffffffffffffbe(%rbp)
     3b9:	8a 53 02             	mov    0x2(%rbx),%dl
     3bc:	44 8a 7b 01          	mov    0x1(%rbx),%r15b
     3c0:	88 55 bf             	mov    %dl,0xffffffffffffffbf(%rbp)
     3c3:	8a 43 03             	mov    0x3(%rbx),%al
     3c6:	88 45 c0             	mov    %al,0xffffffffffffffc0(%rbp)
     3c9:	44 0f b6 6b 05       	movzbl 0x5(%rbx),%r13d
     3ce:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
     3d2:	41 c1 e5 08          	shl    $0x8,%r13d
     3d6:	41 09 c5             	or     %eax,%r13d
     3d9:	41 8b 46 10          	mov    0x10(%r14),%eax
     3dd:	83 f8 0e             	cmp    $0xe,%eax
     3e0:	74 0a                	je     3ec <e1000_rar_set+0x5e>
     3e2:	83 f8 0f             	cmp    $0xf,%eax
     3e5:	74 05                	je     3ec <e1000_rar_set+0x5e>
     3e7:	83 f8 11             	cmp    $0x11,%eax
     3ea:	75 0a                	jne    3f6 <e1000_rar_set+0x68>
     3ec:	41 80 be 1a 01 00 00 	cmpb   $0x0,0x11a(%r14)
     3f3:	00 
     3f4:	75 07                	jne    3fd <e1000_rar_set+0x6f>
     3f6:	41 81 cd 00 00 00 80 	or     $0x80000000,%r13d
     3fd:	41 8b 46 10          	mov    0x10(%r14),%eax
     401:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			404: R_X86_64_32S	.rodata.str1.1+0xb4
     408:	4d 8b 26             	mov    (%r14),%r12
     40b:	83 f8 03             	cmp    $0x3,%eax
     40e:	19 db                	sbb    %ebx,%ebx
     410:	e8 00 00 00 00       	callq  415 <e1000_rar_set+0x87>
			411: R_X86_64_PC32	record_function+0xfffffffffffffffc
     415:	8b 45 b8             	mov    0xffffffffffffffb8(%rbp),%eax
     418:	81 e3 40 ac ff ff    	and    $0xffffac40,%ebx
     41e:	41 0f b6 d7          	movzbl %r15b,%edx
     422:	81 c3 00 54 00 00    	add    $0x5400,%ebx
     428:	c1 e2 08             	shl    $0x8,%edx
     42b:	48 63 db             	movslq %ebx,%rbx
     42e:	c1 e0 03             	shl    $0x3,%eax
     431:	49 01 dc             	add    %rbx,%r12
     434:	89 c0                	mov    %eax,%eax
     436:	49 01 c4             	add    %rax,%r12
     439:	0f b6 45 bf          	movzbl 0xffffffffffffffbf(%rbp),%eax
     43d:	c1 e0 10             	shl    $0x10,%eax
     440:	09 c2                	or     %eax,%edx
     442:	0f b6 45 be          	movzbl 0xffffffffffffffbe(%rbp),%eax
     446:	09 c2                	or     %eax,%edx
     448:	8a 45 c0             	mov    0xffffffffffffffc0(%rbp),%al
     44b:	c1 e0 18             	shl    $0x18,%eax
     44e:	09 c2                	or     %eax,%edx
     450:	41 89 14 24          	mov    %edx,(%r12)
     454:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			457: R_X86_64_32S	.rodata.str1.1+0xae
     45b:	49 8b 1e             	mov    (%r14),%rbx
     45e:	e8 00 00 00 00       	callq  463 <e1000_rar_set+0xd5>
			45f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     463:	8b 43 08             	mov    0x8(%rbx),%eax
     466:	41 8b 46 10          	mov    0x10(%r14),%eax
     46a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			46d: R_X86_64_32S	.rodata.str1.1+0xb4
     471:	4d 8b 26             	mov    (%r14),%r12
     474:	83 f8 03             	cmp    $0x3,%eax
     477:	19 db                	sbb    %ebx,%ebx
     479:	e8 00 00 00 00       	callq  47e <e1000_rar_set+0xf0>
			47a: R_X86_64_PC32	record_function+0xfffffffffffffffc
     47e:	8b 55 b8             	mov    0xffffffffffffffb8(%rbp),%edx
     481:	81 e3 40 ac ff ff    	and    $0xffffac40,%ebx
     487:	81 c3 00 54 00 00    	add    $0x5400,%ebx
     48d:	48 63 db             	movslq %ebx,%rbx
     490:	8d 04 d5 04 00 00 00 	lea    0x4(,%rdx,8),%eax
     497:	49 01 dc             	add    %rbx,%r12
     49a:	49 01 c4             	add    %rax,%r12
     49d:	45 89 2c 24          	mov    %r13d,(%r12)
     4a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4a4: R_X86_64_32S	.rodata.str1.1+0xae
     4a8:	49 8b 1e             	mov    (%r14),%rbx
     4ab:	e8 00 00 00 00       	callq  4b0 <e1000_rar_set+0x122>
			4ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
     4b0:	8b 43 08             	mov    0x8(%rbx),%eax
     4b3:	48 83 c4 28          	add    $0x28,%rsp
     4b7:	5b                   	pop    %rbx
     4b8:	41 5c                	pop    %r12
     4ba:	41 5d                	pop    %r13
     4bc:	41 5e                	pop    %r14
     4be:	41 5f                	pop    %r15
     4c0:	c9                   	leaveq 
     4c1:	c3                   	retq   

00000000000004c2 <e1000_is_onboard_nvm_eeprom>:
     4c2:	55                   	push   %rbp
     4c3:	48 89 e5             	mov    %rsp,%rbp
     4c6:	53                   	push   %rbx
     4c7:	48 89 fb             	mov    %rdi,%rbx
     4ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4cd: R_X86_64_32S	.rodata.str1.1+0x129
     4d1:	48 83 ec 08          	sub    $0x8,%rsp
     4d5:	e8 00 00 00 00       	callq  4da <e1000_is_onboard_nvm_eeprom+0x18>
			4d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
     4da:	8b 53 10             	mov    0x10(%rbx),%edx
     4dd:	31 c0                	xor    %eax,%eax
     4df:	83 fa 12             	cmp    $0x12,%edx
     4e2:	74 28                	je     50c <e1000_is_onboard_nvm_eeprom+0x4a>
     4e4:	83 fa 10             	cmp    $0x10,%edx
     4e7:	b0 01                	mov    $0x1,%al
     4e9:	75 21                	jne    50c <e1000_is_onboard_nvm_eeprom+0x4a>
     4eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4ee: R_X86_64_32S	.rodata.str1.1+0xae
     4f2:	48 8b 1b             	mov    (%rbx),%rbx
     4f5:	e8 00 00 00 00       	callq  4fa <e1000_is_onboard_nvm_eeprom+0x38>
			4f6: R_X86_64_PC32	record_function+0xfffffffffffffffc
     4fa:	8b 43 10             	mov    0x10(%rbx),%eax
     4fd:	c1 e8 0f             	shr    $0xf,%eax
     500:	83 e0 03             	and    $0x3,%eax
     503:	83 f8 03             	cmp    $0x3,%eax
     506:	0f 95 c0             	setne  %al
     509:	0f b6 c0             	movzbl %al,%eax
     50c:	5e                   	pop    %rsi
     50d:	5b                   	pop    %rbx
     50e:	c9                   	leaveq 
     50f:	c3                   	retq   

0000000000000510 <e1000_force_mac_fc>:
     510:	55                   	push   %rbp
     511:	48 89 e5             	mov    %rsp,%rbp
     514:	41 55                	push   %r13
     516:	49 89 fd             	mov    %rdi,%r13
     519:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			51c: R_X86_64_32S	.rodata.str1.1+0x145
     520:	41 54                	push   %r12
     522:	53                   	push   %rbx
     523:	48 83 ec 08          	sub    $0x8,%rsp
     527:	e8 00 00 00 00       	callq  52c <e1000_force_mac_fc+0x1c>
			528: R_X86_64_PC32	record_function+0xfffffffffffffffc
     52c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			52f: R_X86_64_32S	.rodata.str1.1+0xae
     533:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     537:	e8 00 00 00 00       	callq  53c <e1000_force_mac_fc+0x2c>
			538: R_X86_64_PC32	record_function+0xfffffffffffffffc
     53c:	8b 03                	mov    (%rbx),%eax
     53e:	41 8b 55 38          	mov    0x38(%r13),%edx
     542:	85 d2                	test   %edx,%edx
     544:	74 16                	je     55c <e1000_force_mac_fc+0x4c>
     546:	83 fa 01             	cmp    $0x1,%edx
     549:	74 1d                	je     568 <e1000_force_mac_fc+0x58>
     54b:	83 fa 02             	cmp    $0x2,%edx
     54e:	74 2b                	je     57b <e1000_force_mac_fc+0x6b>
     550:	83 fa 03             	cmp    $0x3,%edx
     553:	b9 fd ff ff ff       	mov    $0xfffffffd,%ecx
     558:	75 64                	jne    5be <e1000_force_mac_fc+0xae>
     55a:	eb 32                	jmp    58e <e1000_force_mac_fc+0x7e>
     55c:	41 89 c4             	mov    %eax,%r12d
     55f:	41 81 e4 ff ff ff e7 	and    $0xe7ffffff,%r12d
     566:	eb 30                	jmp    598 <e1000_force_mac_fc+0x88>
     568:	41 89 c4             	mov    %eax,%r12d
     56b:	41 81 e4 ff ff ff ef 	and    $0xefffffff,%r12d
     572:	41 81 cc 00 00 00 08 	or     $0x8000000,%r12d
     579:	eb 1d                	jmp    598 <e1000_force_mac_fc+0x88>
     57b:	41 89 c4             	mov    %eax,%r12d
     57e:	41 81 e4 ff ff ff f7 	and    $0xf7ffffff,%r12d
     585:	41 81 cc 00 00 00 10 	or     $0x10000000,%r12d
     58c:	eb 0a                	jmp    598 <e1000_force_mac_fc+0x88>
     58e:	41 89 c4             	mov    %eax,%r12d
     591:	41 81 cc 00 00 00 18 	or     $0x18000000,%r12d
     598:	44 89 e0             	mov    %r12d,%eax
     59b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			59e: R_X86_64_32S	.rodata.str1.1+0xb4
     5a2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     5a6:	25 ff ff ff ef       	and    $0xefffffff,%eax
     5ab:	41 83 7d 10 01       	cmpl   $0x1,0x10(%r13)
     5b0:	44 0f 44 e0          	cmove  %eax,%r12d
     5b4:	e8 00 00 00 00       	callq  5b9 <e1000_force_mac_fc+0xa9>
			5b5: R_X86_64_PC32	record_function+0xfffffffffffffffc
     5b9:	44 89 23             	mov    %r12d,(%rbx)
     5bc:	31 c9                	xor    %ecx,%ecx
     5be:	5f                   	pop    %rdi
     5bf:	5b                   	pop    %rbx
     5c0:	41 5c                	pop    %r12
     5c2:	41 5d                	pop    %r13
     5c4:	c9                   	leaveq 
     5c5:	89 c8                	mov    %ecx,%eax
     5c7:	c3                   	retq   

00000000000005c8 <e1000_config_collision_dist>:
     5c8:	55                   	push   %rbp
     5c9:	48 89 e5             	mov    %rsp,%rbp
     5cc:	41 55                	push   %r13
     5ce:	49 89 fd             	mov    %rdi,%r13
     5d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5d4: R_X86_64_32S	.rodata.str1.1+0x158
     5d8:	41 54                	push   %r12
     5da:	53                   	push   %rbx
     5db:	48 83 ec 08          	sub    $0x8,%rsp
     5df:	e8 00 00 00 00       	callq  5e4 <e1000_config_collision_dist+0x1c>
			5e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
     5e4:	41 8b 45 10          	mov    0x10(%r13),%eax
     5e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5eb: R_X86_64_32S	.rodata.str1.1+0xae
     5ef:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     5f3:	83 f8 03             	cmp    $0x3,%eax
     5f6:	45 19 e4             	sbb    %r12d,%r12d
     5f9:	41 f7 d4             	not    %r12d
     5fc:	41 83 c4 40          	add    $0x40,%r12d
     600:	e8 00 00 00 00       	callq  605 <e1000_config_collision_dist+0x3d>
			601: R_X86_64_PC32	record_function+0xfffffffffffffffc
     605:	8b 83 00 04 00 00    	mov    0x400(%rbx),%eax
     60b:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     60f:	25 ff 0f c0 ff       	and    $0xffc00fff,%eax
     614:	41 c1 e4 0c          	shl    $0xc,%r12d
     618:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			61b: R_X86_64_32S	.rodata.str1.1+0xb4
     61f:	41 09 c4             	or     %eax,%r12d
     622:	e8 00 00 00 00       	callq  627 <e1000_config_collision_dist+0x5f>
			623: R_X86_64_PC32	record_function+0xfffffffffffffffc
     627:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
     62e:	44 89 23             	mov    %r12d,(%rbx)
     631:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			634: R_X86_64_32S	.rodata.str1.1+0xae
     638:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     63c:	e8 00 00 00 00       	callq  641 <e1000_config_collision_dist+0x79>
			63d: R_X86_64_PC32	record_function+0xfffffffffffffffc
     641:	8b 43 08             	mov    0x8(%rbx),%eax
     644:	41 58                	pop    %r8
     646:	5b                   	pop    %rbx
     647:	41 5c                	pop    %r12
     649:	41 5d                	pop    %r13
     64b:	c9                   	leaveq 
     64c:	c3                   	retq   

000000000000064d <e1000_initialize_hardware_bits>:
     64d:	55                   	push   %rbp
     64e:	48 89 e5             	mov    %rsp,%rbp
     651:	41 57                	push   %r15
     653:	41 56                	push   %r14
     655:	49 89 fe             	mov    %rdi,%r14
     658:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			65b: R_X86_64_32S	.rodata.str1.1+0x174
     65f:	41 55                	push   %r13
     661:	41 54                	push   %r12
     663:	53                   	push   %rbx
     664:	48 83 ec 08          	sub    $0x8,%rsp
     668:	e8 00 00 00 00       	callq  66d <e1000_initialize_hardware_bits+0x20>
			669: R_X86_64_PC32	record_function+0xfffffffffffffffc
     66d:	41 83 7e 10 0d       	cmpl   $0xd,0x10(%r14)
     672:	0f 86 e8 02 00 00    	jbe    960 <e1000_initialize_hardware_bits+0x313>
     678:	41 80 be 12 01 00 00 	cmpb   $0x0,0x112(%r14)
     67f:	00 
     680:	0f 85 da 02 00 00    	jne    960 <e1000_initialize_hardware_bits+0x313>
     686:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			689: R_X86_64_32S	.rodata.str1.1+0xae
     68d:	49 8b 1e             	mov    (%r14),%rbx
     690:	e8 00 00 00 00       	callq  695 <e1000_initialize_hardware_bits+0x48>
			691: R_X86_64_PC32	record_function+0xfffffffffffffffc
     695:	44 8b ab 40 38 00 00 	mov    0x3840(%rbx),%r13d
     69c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			69f: R_X86_64_32S	.rodata.str1.1+0xae
     6a3:	45 89 ef             	mov    %r13d,%r15d
     6a6:	49 8b 1e             	mov    (%r14),%rbx
     6a9:	41 81 e7 ff ff ff 87 	and    $0x87ffffff,%r15d
     6b0:	e8 00 00 00 00       	callq  6b5 <e1000_initialize_hardware_bits+0x68>
			6b1: R_X86_64_PC32	record_function+0xfffffffffffffffc
     6b5:	44 8b a3 28 38 00 00 	mov    0x3828(%rbx),%r12d
     6bc:	49 8b 1e             	mov    (%r14),%rbx
     6bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6c2: R_X86_64_32S	.rodata.str1.1+0xb4
     6c6:	41 81 cc 00 00 40 00 	or     $0x400000,%r12d
     6cd:	e8 00 00 00 00       	callq  6d2 <e1000_initialize_hardware_bits+0x85>
			6ce: R_X86_64_PC32	record_function+0xfffffffffffffffc
     6d2:	48 81 c3 28 38 00 00 	add    $0x3828,%rbx
     6d9:	44 89 23             	mov    %r12d,(%rbx)
     6dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6df: R_X86_64_32S	.rodata.str1.1+0xae
     6e3:	49 8b 1e             	mov    (%r14),%rbx
     6e6:	e8 00 00 00 00       	callq  6eb <e1000_initialize_hardware_bits+0x9e>
			6e7: R_X86_64_PC32	record_function+0xfffffffffffffffc
     6eb:	44 8b a3 28 39 00 00 	mov    0x3928(%rbx),%r12d
     6f2:	49 8b 1e             	mov    (%r14),%rbx
     6f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6f8: R_X86_64_32S	.rodata.str1.1+0xb4
     6fc:	41 81 cc 00 00 40 00 	or     $0x400000,%r12d
     703:	e8 00 00 00 00       	callq  708 <e1000_initialize_hardware_bits+0xbb>
			704: R_X86_64_PC32	record_function+0xfffffffffffffffc
     708:	48 81 c3 28 39 00 00 	add    $0x3928,%rbx
     70f:	44 89 23             	mov    %r12d,(%rbx)
     712:	41 8b 46 10          	mov    0x10(%r14),%eax
     716:	83 f8 0e             	cmp    $0xe,%eax
     719:	74 21                	je     73c <e1000_initialize_hardware_bits+0xef>
     71b:	83 f8 0f             	cmp    $0xf,%eax
     71e:	74 1c                	je     73c <e1000_initialize_hardware_bits+0xef>
     720:	83 f8 10             	cmp    $0x10,%eax
     723:	74 79                	je     79e <e1000_initialize_hardware_bits+0x151>
     725:	83 f8 11             	cmp    $0x11,%eax
     728:	0f 84 d7 00 00 00    	je     805 <e1000_initialize_hardware_bits+0x1b8>
     72e:	83 f8 12             	cmp    $0x12,%eax
     731:	0f 85 10 02 00 00    	jne    947 <e1000_initialize_hardware_bits+0x2fa>
     737:	e9 3e 01 00 00       	jmpq   87a <e1000_initialize_hardware_bits+0x22d>
     73c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			73f: R_X86_64_32S	.rodata.str1.1+0xae
     743:	49 8b 1e             	mov    (%r14),%rbx
     746:	e8 00 00 00 00       	callq  74b <e1000_initialize_hardware_bits+0xfe>
			747: R_X86_64_PC32	record_function+0xfffffffffffffffc
     74b:	44 8b a3 40 39 00 00 	mov    0x3940(%rbx),%r12d
     752:	41 81 e4 ff ff ff 9f 	and    $0x9fffffff,%r12d
     759:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			75c: R_X86_64_32S	.rodata.str1.1+0xae
     760:	49 8b 1e             	mov    (%r14),%rbx
     763:	45 89 e5             	mov    %r12d,%r13d
     766:	41 81 cd 00 00 00 07 	or     $0x7000000,%r13d
     76d:	e8 00 00 00 00       	callq  772 <e1000_initialize_hardware_bits+0x125>
			76e: R_X86_64_PC32	record_function+0xfffffffffffffffc
     772:	8b 83 00 04 00 00    	mov    0x400(%rbx),%eax
     778:	a9 00 00 00 10       	test   $0x10000000,%eax
     77d:	74 0c                	je     78b <e1000_initialize_hardware_bits+0x13e>
     77f:	45 89 ec             	mov    %r13d,%r12d
     782:	41 81 e4 ff ff ff ef 	and    $0xefffffff,%r12d
     789:	eb 07                	jmp    792 <e1000_initialize_hardware_bits+0x145>
     78b:	41 81 cc 00 00 00 17 	or     $0x17000000,%r12d
     792:	41 81 cf 00 00 80 07 	or     $0x7800000,%r15d
     799:	e9 90 01 00 00       	jmpq   92e <e1000_initialize_hardware_bits+0x2e1>
     79e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7a1: R_X86_64_32S	.rodata.str1.1+0xae
     7a5:	49 8b 1e             	mov    (%r14),%rbx
     7a8:	e8 00 00 00 00       	callq  7ad <e1000_initialize_hardware_bits+0x160>
			7a9: R_X86_64_PC32	record_function+0xfffffffffffffffc
     7ad:	44 8b 63 18          	mov    0x18(%rbx),%r12d
     7b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7b4: R_X86_64_32S	.rodata.str1.1+0xae
     7b8:	41 81 e4 ff ff 7f ff 	and    $0xff7fffff,%r12d
     7bf:	49 8b 1e             	mov    (%r14),%rbx
     7c2:	41 81 cc 00 00 40 00 	or     $0x400000,%r12d
     7c9:	e8 00 00 00 00       	callq  7ce <e1000_initialize_hardware_bits+0x181>
			7ca: R_X86_64_PC32	record_function+0xfffffffffffffffc
     7ce:	44 8b 2b             	mov    (%rbx),%r13d
     7d1:	49 8b 1e             	mov    (%r14),%rbx
     7d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7d7: R_X86_64_32S	.rodata.str1.1+0xb4
     7db:	41 81 e5 ff ff ff df 	and    $0xdfffffff,%r13d
     7e2:	e8 00 00 00 00       	callq  7e7 <e1000_initialize_hardware_bits+0x19a>
			7e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
     7e7:	48 83 c3 18          	add    $0x18,%rbx
     7eb:	44 89 23             	mov    %r12d,(%rbx)
     7ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f1: R_X86_64_32S	.rodata.str1.1+0xb4
     7f5:	49 8b 1e             	mov    (%r14),%rbx
     7f8:	e8 00 00 00 00       	callq  7fd <e1000_initialize_hardware_bits+0x1b0>
			7f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
     7fd:	44 89 2b             	mov    %r13d,(%rbx)
     800:	e9 42 01 00 00       	jmpq   947 <e1000_initialize_hardware_bits+0x2fa>
     805:	41 8b 46 1c          	mov    0x1c(%r14),%eax
     809:	83 f8 01             	cmp    $0x1,%eax
     80c:	75 0c                	jne    81a <e1000_initialize_hardware_bits+0x1cd>
     80e:	45 89 ef             	mov    %r13d,%r15d
     811:	41 81 e7 ff ff ef 87 	and    $0x87efffff,%r15d
     818:	eb 0e                	jmp    828 <e1000_initialize_hardware_bits+0x1db>
     81a:	41 81 e5 ff ff ef 87 	and    $0x87efffff,%r13d
     821:	83 f8 02             	cmp    $0x2,%eax
     824:	45 0f 44 fd          	cmove  %r13d,%r15d
     828:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			82b: R_X86_64_32S	.rodata.str1.1+0xae
     82f:	49 8b 1e             	mov    (%r14),%rbx
     832:	e8 00 00 00 00       	callq  837 <e1000_initialize_hardware_bits+0x1ea>
			833: R_X86_64_PC32	record_function+0xfffffffffffffffc
     837:	44 8b a3 00 04 00 00 	mov    0x400(%rbx),%r12d
     83e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			841: R_X86_64_32S	.rodata.str1.1+0xae
     845:	49 8b 1e             	mov    (%r14),%rbx
     848:	e8 00 00 00 00       	callq  84d <e1000_initialize_hardware_bits+0x200>
			849: R_X86_64_PC32	record_function+0xfffffffffffffffc
     84d:	8b 83 40 39 00 00    	mov    0x3940(%rbx),%eax
     853:	41 81 e4 00 00 00 10 	and    $0x10000000,%r12d
     85a:	74 0f                	je     86b <e1000_initialize_hardware_bits+0x21e>
     85c:	41 89 c4             	mov    %eax,%r12d
     85f:	41 81 e4 ff ff ff ef 	and    $0xefffffff,%r12d
     866:	e9 c3 00 00 00       	jmpq   92e <e1000_initialize_hardware_bits+0x2e1>
     86b:	41 89 c4             	mov    %eax,%r12d
     86e:	41 81 cc 00 00 00 10 	or     $0x10000000,%r12d
     875:	e9 b4 00 00 00       	jmpq   92e <e1000_initialize_hardware_bits+0x2e1>
     87a:	41 80 be ee 00 00 00 	cmpb   $0x2,0xee(%r14)
     881:	02 
     882:	77 09                	ja     88d <e1000_initialize_hardware_bits+0x240>
     884:	41 81 cf 00 00 00 30 	or     $0x30000000,%r15d
     88b:	eb 20                	jmp    8ad <e1000_initialize_hardware_bits+0x260>
     88d:	66 41 8b 96 e6 00 00 	mov    0xe6(%r14),%dx
     894:	00 
     895:	66 81 fa 49 10       	cmp    $0x1049,%dx
     89a:	74 11                	je     8ad <e1000_initialize_hardware_bits+0x260>
     89c:	44 89 f8             	mov    %r15d,%eax
     89f:	0d 00 00 00 30       	or     $0x30000000,%eax
     8a4:	66 81 fa 4d 10       	cmp    $0x104d,%dx
     8a9:	44 0f 45 f8          	cmovne %eax,%r15d
     8ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8b0: R_X86_64_32S	.rodata.str1.1+0xae
     8b4:	49 8b 1e             	mov    (%r14),%rbx
     8b7:	e8 00 00 00 00       	callq  8bc <e1000_initialize_hardware_bits+0x26f>
			8b8: R_X86_64_PC32	record_function+0xfffffffffffffffc
     8bc:	44 8b 63 18          	mov    0x18(%rbx),%r12d
     8c0:	49 8b 1e             	mov    (%r14),%rbx
     8c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8c6: R_X86_64_32S	.rodata.str1.1+0xb4
     8ca:	41 81 cc 00 00 40 00 	or     $0x400000,%r12d
     8d1:	e8 00 00 00 00       	callq  8d6 <e1000_initialize_hardware_bits+0x289>
			8d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
     8d6:	48 83 c3 18          	add    $0x18,%rbx
     8da:	44 89 23             	mov    %r12d,(%rbx)
     8dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8e0: R_X86_64_32S	.rodata.str1.1+0xae
     8e4:	49 8b 1e             	mov    (%r14),%rbx
     8e7:	e8 00 00 00 00       	callq  8ec <e1000_initialize_hardware_bits+0x29f>
			8e8: R_X86_64_PC32	record_function+0xfffffffffffffffc
     8ec:	44 8b a3 00 04 00 00 	mov    0x400(%rbx),%r12d
     8f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8f6: R_X86_64_32S	.rodata.str1.1+0xae
     8fa:	49 8b 1e             	mov    (%r14),%rbx
     8fd:	e8 00 00 00 00       	callq  902 <e1000_initialize_hardware_bits+0x2b5>
			8fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
     902:	8b 83 40 39 00 00    	mov    0x3940(%rbx),%eax
     908:	41 81 e4 00 00 00 10 	and    $0x10000000,%r12d
     90f:	74 07                	je     918 <e1000_initialize_hardware_bits+0x2cb>
     911:	25 ff ff ff ef       	and    $0xefffffff,%eax
     916:	eb 05                	jmp    91d <e1000_initialize_hardware_bits+0x2d0>
     918:	0d 00 00 00 10       	or     $0x10000000,%eax
     91d:	41 89 c4             	mov    %eax,%r12d
     920:	41 81 cf 00 00 80 0d 	or     $0xd800000,%r15d
     927:	41 81 cc 00 00 00 45 	or     $0x45000000,%r12d
     92e:	49 8b 1e             	mov    (%r14),%rbx
     931:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			934: R_X86_64_32S	.rodata.str1.1+0xb4
     938:	e8 00 00 00 00       	callq  93d <e1000_initialize_hardware_bits+0x2f0>
			939: R_X86_64_PC32	record_function+0xfffffffffffffffc
     93d:	48 81 c3 40 39 00 00 	add    $0x3940,%rbx
     944:	44 89 23             	mov    %r12d,(%rbx)
     947:	49 8b 1e             	mov    (%r14),%rbx
     94a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			94d: R_X86_64_32S	.rodata.str1.1+0xb4
     951:	e8 00 00 00 00       	callq  956 <e1000_initialize_hardware_bits+0x309>
			952: R_X86_64_PC32	record_function+0xfffffffffffffffc
     956:	48 81 c3 40 38 00 00 	add    $0x3840,%rbx
     95d:	44 89 3b             	mov    %r15d,(%rbx)
     960:	41 59                	pop    %r9
     962:	5b                   	pop    %rbx
     963:	41 5c                	pop    %r12
     965:	41 5d                	pop    %r13
     967:	41 5e                	pop    %r14
     969:	41 5f                	pop    %r15
     96b:	c9                   	leaveq 
     96c:	c3                   	retq   

000000000000096d <e1000_set_media_type>:
     96d:	55                   	push   %rbp
     96e:	48 89 e5             	mov    %rsp,%rbp
     971:	41 54                	push   %r12
     973:	49 89 fc             	mov    %rdi,%r12
     976:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			979: R_X86_64_32S	.rodata.str1.1+0x193
     97d:	53                   	push   %rbx
     97e:	e8 00 00 00 00       	callq  983 <e1000_set_media_type+0x16>
			97f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     983:	41 83 7c 24 10 03    	cmpl   $0x3,0x10(%r12)
     989:	74 09                	je     994 <e1000_set_media_type+0x27>
     98b:	41 c6 84 24 0e 01 00 	movb   $0x0,0x10e(%r12)
     992:	00 00 
     994:	66 41 8b 84 24 e6 00 	mov    0xe6(%r12),%ax
     99b:	00 00 
     99d:	66 3d 28 10          	cmp    $0x1028,%ax
     9a1:	74 24                	je     9c7 <e1000_set_media_type+0x5a>
     9a3:	66 3d 7b 10          	cmp    $0x107b,%ax
     9a7:	74 1e                	je     9c7 <e1000_set_media_type+0x5a>
     9a9:	66 3d 60 10          	cmp    $0x1060,%ax
     9ad:	74 18                	je     9c7 <e1000_set_media_type+0x5a>
     9af:	66 3d d9 10          	cmp    $0x10d9,%ax
     9b3:	74 12                	je     9c7 <e1000_set_media_type+0x5a>
     9b5:	66 3d da 10          	cmp    $0x10da,%ax
     9b9:	74 0c                	je     9c7 <e1000_set_media_type+0x5a>
     9bb:	66 3d 7f 10          	cmp    $0x107f,%ax
     9bf:	74 06                	je     9c7 <e1000_set_media_type+0x5a>
     9c1:	66 3d 98 10          	cmp    $0x1098,%ax
     9c5:	75 0b                	jne    9d2 <e1000_set_media_type+0x65>
     9c7:	41 c7 44 24 1c 02 00 	movl   $0x2,0x1c(%r12)
     9ce:	00 00 
     9d0:	eb 5a                	jmp    a2c <e1000_set_media_type+0xbf>
     9d2:	41 8b 44 24 10       	mov    0x10(%r12),%eax
     9d7:	83 f8 01             	cmp    $0x1,%eax
     9da:	74 11                	je     9ed <e1000_set_media_type+0x80>
     9dc:	83 f8 02             	cmp    $0x2,%eax
     9df:	74 0c                	je     9ed <e1000_set_media_type+0x80>
     9e1:	83 f8 12             	cmp    $0x12,%eax
     9e4:	74 3d                	je     a23 <e1000_set_media_type+0xb6>
     9e6:	83 f8 10             	cmp    $0x10,%eax
     9e9:	75 0d                	jne    9f8 <e1000_set_media_type+0x8b>
     9eb:	eb 36                	jmp    a23 <e1000_set_media_type+0xb6>
     9ed:	41 c7 44 24 1c 01 00 	movl   $0x1,0x1c(%r12)
     9f4:	00 00 
     9f6:	eb 34                	jmp    a2c <e1000_set_media_type+0xbf>
     9f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9fb: R_X86_64_32S	.rodata.str1.1+0xae
     9ff:	49 8b 1c 24          	mov    (%r12),%rbx
     a03:	e8 00 00 00 00       	callq  a08 <e1000_set_media_type+0x9b>
			a04: R_X86_64_PC32	record_function+0xfffffffffffffffc
     a08:	8b 43 08             	mov    0x8(%rbx),%eax
     a0b:	a8 20                	test   $0x20,%al
     a0d:	74 14                	je     a23 <e1000_set_media_type+0xb6>
     a0f:	41 c7 44 24 1c 01 00 	movl   $0x1,0x1c(%r12)
     a16:	00 00 
     a18:	41 c6 84 24 0e 01 00 	movb   $0x0,0x10e(%r12)
     a1f:	00 00 
     a21:	eb 09                	jmp    a2c <e1000_set_media_type+0xbf>
     a23:	41 c7 44 24 1c 00 00 	movl   $0x0,0x1c(%r12)
     a2a:	00 00 
     a2c:	5b                   	pop    %rbx
     a2d:	41 5c                	pop    %r12
     a2f:	c9                   	leaveq 
     a30:	c3                   	retq   

0000000000000a31 <e1000_vlan_rx_add_vid>:
     a31:	55                   	push   %rbp
     a32:	48 89 e5             	mov    %rsp,%rbp
     a35:	41 57                	push   %r15
     a37:	41 56                	push   %r14
     a39:	41 89 f6             	mov    %esi,%r14d
     a3c:	41 55                	push   %r13
     a3e:	41 54                	push   %r12
     a40:	49 89 fc             	mov    %rdi,%r12
     a43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a46: R_X86_64_32S	.rodata.str1.1+0x1a8
     a4a:	4d 8d ac 24 b8 0b 00 	lea    0xbb8(%r12),%r13
     a51:	00 
     a52:	53                   	push   %rbx
     a53:	48 83 ec 08          	sub    $0x8,%rsp
     a57:	e8 00 00 00 00       	callq  a5c <e1000_vlan_rx_add_vid+0x2b>
			a58: R_X86_64_PC32	record_function+0xfffffffffffffffc
     a5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a5f: R_X86_64_32S	.rodata.str1.1+0x1be
     a63:	e8 00 00 00 00       	callq  a68 <e1000_vlan_rx_add_vid+0x37>
			a64: R_X86_64_PC32	record_function+0xfffffffffffffffc
     a68:	41 f6 85 c4 00 00 00 	testb  $0x2,0xc4(%r13)
     a6f:	02 
     a70:	49 8d 84 24 00 08 00 	lea    0x800(%r12),%rax
     a77:	00 
     a78:	74 0a                	je     a84 <e1000_vlan_rx_add_vid+0x53>
     a7a:	66 44 3b b0 98 00 00 	cmp    0x98(%rax),%r14w
     a81:	00 
     a82:	74 68                	je     aec <e1000_vlan_rx_add_vid+0xbb>
     a84:	44 89 f0             	mov    %r14d,%eax
     a87:	4d 8b a4 24 b8 0b 00 	mov    0xbb8(%r12),%r12
     a8e:	00 
     a8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a92: R_X86_64_32S	.rodata.str1.1+0xae
     a96:	66 c1 e8 05          	shr    $0x5,%ax
     a9a:	41 89 c7             	mov    %eax,%r15d
     a9d:	41 8b 45 10          	mov    0x10(%r13),%eax
     aa1:	41 83 e7 7f          	and    $0x7f,%r15d
     aa5:	83 f8 03             	cmp    $0x3,%eax
     aa8:	19 db                	sbb    %ebx,%ebx
     aaa:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
     ab0:	81 c3 00 56 00 00    	add    $0x5600,%ebx
     ab6:	e8 00 00 00 00       	callq  abb <e1000_vlan_rx_add_vid+0x8a>
			ab7: R_X86_64_PC32	record_function+0xfffffffffffffffc
     abb:	42 8d 04 bd 00 00 00 	lea    0x0(,%r15,4),%eax
     ac2:	00 
     ac3:	48 63 db             	movslq %ebx,%rbx
     ac6:	49 01 dc             	add    %rbx,%r12
     ac9:	89 c0                	mov    %eax,%eax
     acb:	49 01 c4             	add    %rax,%r12
     ace:	41 8b 14 24          	mov    (%r12),%edx
     ad2:	44 89 f1             	mov    %r14d,%ecx
     ad5:	b8 01 00 00 00       	mov    $0x1,%eax
     ada:	44 89 fe             	mov    %r15d,%esi
     add:	83 e1 1f             	and    $0x1f,%ecx
     ae0:	4c 89 ef             	mov    %r13,%rdi
     ae3:	d3 e0                	shl    %cl,%eax
     ae5:	09 c2                	or     %eax,%edx
     ae7:	e8 50 f7 ff ff       	callq  23c <e1000_write_vfta>
     aec:	41 5a                	pop    %r10
     aee:	5b                   	pop    %rbx
     aef:	41 5c                	pop    %r12
     af1:	41 5d                	pop    %r13
     af3:	41 5e                	pop    %r14
     af5:	41 5f                	pop    %r15
     af7:	c9                   	leaveq 
     af8:	c3                   	retq   

0000000000000af9 <e1000_io_write>:
     af9:	55                   	push   %rbp
     afa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			afd: R_X86_64_32S	.rodata.str1.1+0x1ca
     b01:	48 89 e5             	mov    %rsp,%rbp
     b04:	41 54                	push   %r12
     b06:	49 89 f4             	mov    %rsi,%r12
     b09:	53                   	push   %rbx
     b0a:	89 d3                	mov    %edx,%ebx
     b0c:	e8 00 00 00 00       	callq  b11 <e1000_io_write+0x18>
			b0d: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b11:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b14: R_X86_64_32S	.rodata.str1.1+0x1d9
     b18:	e8 00 00 00 00       	callq  b1d <e1000_io_write+0x24>
			b19: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b1d:	41 0f b7 d4          	movzwl %r12w,%edx
     b21:	89 d8                	mov    %ebx,%eax
     b23:	ef                   	out    %eax,(%dx)
     b24:	5b                   	pop    %rbx
     b25:	41 5c                	pop    %r12
     b27:	c9                   	leaveq 
     b28:	c3                   	retq   

0000000000000b29 <e1000_configure_rx>:
     b29:	55                   	push   %rbp
     b2a:	48 89 e5             	mov    %rsp,%rbp
     b2d:	41 57                	push   %r15
     b2f:	41 56                	push   %r14
     b31:	41 55                	push   %r13
     b33:	41 54                	push   %r12
     b35:	53                   	push   %rbx
     b36:	48 83 ec 18          	sub    $0x18,%rsp
     b3a:	48 89 7d c8          	mov    %rdi,0xffffffffffffffc8(%rbp)
     b3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b41: R_X86_64_32S	.rodata.str1.1+0x1de
     b45:	e8 00 00 00 00       	callq  b4a <e1000_configure_rx+0x21>
			b46: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b4a:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
     b4e:	4c 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%r15
     b52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b55: R_X86_64_32S	.rodata.str1.1+0xae
     b59:	48 8b 82 20 02 00 00 	mov    0x220(%rdx),%rax
     b60:	49 81 c7 b8 03 00 00 	add    $0x3b8,%r15
     b67:	8b 40 14             	mov    0x14(%rax),%eax
     b6a:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
     b6d:	48 c7 82 10 02 00 00 	movq   $0x0,0x210(%rdx)
     b74:	00 00 00 00 
			b74: R_X86_64_32S	.text+0x38a4d
     b78:	48 c7 82 18 02 00 00 	movq   $0x0,0x218(%rdx)
     b7f:	00 00 00 00 
			b7f: R_X86_64_32S	.text+0x3a4f3
     b83:	48 8b 9a b8 03 00 00 	mov    0x3b8(%rdx),%rbx
     b8a:	e8 00 00 00 00       	callq  b8f <e1000_configure_rx+0x66>
			b8b: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b8f:	8b 8b 00 01 00 00    	mov    0x100(%rbx),%ecx
     b95:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
     b99:	89 4d d4             	mov    %ecx,0xffffffffffffffd4(%rbp)
     b9c:	41 89 cc             	mov    %ecx,%r12d
     b9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ba2: R_X86_64_32S	.rodata.str1.1+0xb4
     ba6:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
     baa:	48 8b 98 b8 03 00 00 	mov    0x3b8(%rax),%rbx
     bb1:	e8 00 00 00 00       	callq  bb6 <e1000_configure_rx+0x8d>
			bb2: R_X86_64_PC32	record_function+0xfffffffffffffffc
     bb6:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
     bbd:	44 89 23             	mov    %r12d,(%rbx)
     bc0:	41 8b 47 10          	mov    0x10(%r15),%eax
     bc4:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
     bc8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bcb: R_X86_64_32S	.rodata.str1.1+0xb4
     bcf:	83 f8 03             	cmp    $0x3,%eax
     bd2:	4c 8b a2 b8 03 00 00 	mov    0x3b8(%rdx),%r12
     bd9:	44 8b aa d4 02 00 00 	mov    0x2d4(%rdx),%r13d
     be0:	19 db                	sbb    %ebx,%ebx
     be2:	81 e3 e8 d8 ff ff    	and    $0xffffd8e8,%ebx
     be8:	81 c3 20 28 00 00    	add    $0x2820,%ebx
     bee:	48 63 db             	movslq %ebx,%rbx
     bf1:	e8 00 00 00 00       	callq  bf6 <e1000_configure_rx+0xcd>
			bf2: R_X86_64_PC32	record_function+0xfffffffffffffffc
     bf6:	49 01 dc             	add    %rbx,%r12
     bf9:	45 89 2c 24          	mov    %r13d,(%r12)
     bfd:	41 83 7f 10 04       	cmpl   $0x4,0x10(%r15)
     c02:	76 69                	jbe    c6d <e1000_configure_rx+0x144>
     c04:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
     c08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c0b: R_X86_64_32S	.rodata.str1.1+0xb4
     c0f:	48 8b 99 b8 03 00 00 	mov    0x3b8(%rcx),%rbx
     c16:	44 8b a1 d8 02 00 00 	mov    0x2d8(%rcx),%r12d
     c1d:	e8 00 00 00 00       	callq  c22 <e1000_configure_rx+0xf9>
			c1e: R_X86_64_PC32	record_function+0xfffffffffffffffc
     c22:	48 81 c3 2c 28 00 00 	add    $0x282c,%rbx
     c29:	44 89 23             	mov    %r12d,(%rbx)
     c2c:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
     c30:	83 b8 2c 01 00 00 00 	cmpl   $0x0,0x12c(%rax)
     c37:	74 34                	je     c6d <e1000_configure_rx+0x144>
     c39:	8b 88 28 01 00 00    	mov    0x128(%rax),%ecx
     c3f:	bb 00 ca 9a 3b       	mov    $0x3b9aca00,%ebx
     c44:	4c 8b a0 b8 03 00 00 	mov    0x3b8(%rax),%r12
     c4b:	31 d2                	xor    %edx,%edx
     c4d:	89 d8                	mov    %ebx,%eax
     c4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c52: R_X86_64_32S	.rodata.str1.1+0xb4
     c56:	c1 e1 08             	shl    $0x8,%ecx
     c59:	49 81 c4 c4 00 00 00 	add    $0xc4,%r12
     c60:	f7 f1                	div    %ecx
     c62:	89 c3                	mov    %eax,%ebx
     c64:	e8 00 00 00 00       	callq  c69 <e1000_configure_rx+0x140>
			c65: R_X86_64_PC32	record_function+0xfffffffffffffffc
     c69:	41 89 1c 24          	mov    %ebx,(%r12)
     c6d:	41 83 7f 10 0d       	cmpl   $0xd,0x10(%r15)
     c72:	76 5d                	jbe    cd1 <e1000_configure_rx+0x1a8>
     c74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c77: R_X86_64_32S	.rodata.str1.1+0xae
     c7b:	49 8b 1f             	mov    (%r15),%rbx
     c7e:	e8 00 00 00 00       	callq  c83 <e1000_configure_rx+0x15a>
			c7f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     c83:	44 8b 63 18          	mov    0x18(%rbx),%r12d
     c87:	49 8b 1f             	mov    (%r15),%rbx
     c8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c8d: R_X86_64_32S	.rodata.str1.1+0xb4
     c91:	41 81 cc 00 00 00 28 	or     $0x28000000,%r12d
     c98:	e8 00 00 00 00       	callq  c9d <e1000_configure_rx+0x174>
			c99: R_X86_64_PC32	record_function+0xfffffffffffffffc
     c9d:	83 c8 ff             	or     $0xffffffffffffffff,%eax
     ca0:	48 81 c3 e0 00 00 00 	add    $0xe0,%rbx
     ca7:	89 03                	mov    %eax,(%rbx)
     ca9:	49 8b 1f             	mov    (%r15),%rbx
     cac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			caf: R_X86_64_32S	.rodata.str1.1+0xb4
     cb3:	e8 00 00 00 00       	callq  cb8 <e1000_configure_rx+0x18f>
			cb4: R_X86_64_PC32	record_function+0xfffffffffffffffc
     cb8:	48 83 c3 18          	add    $0x18,%rbx
     cbc:	44 89 23             	mov    %r12d,(%rbx)
     cbf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cc2: R_X86_64_32S	.rodata.str1.1+0xae
     cc6:	49 8b 1f             	mov    (%r15),%rbx
     cc9:	e8 00 00 00 00       	callq  cce <e1000_configure_rx+0x1a5>
			cca: R_X86_64_PC32	record_function+0xfffffffffffffffc
     cce:	8b 43 08             	mov    0x8(%rbx),%eax
     cd1:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
     cd5:	4d 8b 27             	mov    (%r15),%r12
     cd8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cdb: R_X86_64_32S	.rodata.str1.1+0xb4
     cdf:	48 8b 82 20 02 00 00 	mov    0x220(%rdx),%rax
     ce6:	4c 8b 70 08          	mov    0x8(%rax),%r14
     cea:	41 8b 47 10          	mov    0x10(%r15),%eax
     cee:	83 f8 03             	cmp    $0x3,%eax
     cf1:	19 db                	sbb    %ebx,%ebx
     cf3:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
     cf9:	81 c3 08 28 00 00    	add    $0x2808,%ebx
     cff:	e8 00 00 00 00       	callq  d04 <e1000_configure_rx+0x1db>
			d00: R_X86_64_PC32	record_function+0xfffffffffffffffc
     d04:	48 63 db             	movslq %ebx,%rbx
     d07:	c1 65 d0 04          	shll   $0x4,0xffffffffffffffd0(%rbp)
     d0b:	49 01 dc             	add    %rbx,%r12
     d0e:	8b 4d d0             	mov    0xffffffffffffffd0(%rbp),%ecx
     d11:	41 89 0c 24          	mov    %ecx,(%r12)
     d15:	41 8b 47 10          	mov    0x10(%r15),%eax
     d19:	4d 89 f5             	mov    %r14,%r13
     d1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d1f: R_X86_64_32S	.rodata.str1.1+0xb4
     d23:	4d 8b 27             	mov    (%r15),%r12
     d26:	83 f8 03             	cmp    $0x3,%eax
     d29:	19 db                	sbb    %ebx,%ebx
     d2b:	49 c1 ed 20          	shr    $0x20,%r13
     d2f:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
     d35:	81 c3 04 28 00 00    	add    $0x2804,%ebx
     d3b:	48 63 db             	movslq %ebx,%rbx
     d3e:	e8 00 00 00 00       	callq  d43 <e1000_configure_rx+0x21a>
			d3f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     d43:	49 01 dc             	add    %rbx,%r12
     d46:	45 89 2c 24          	mov    %r13d,(%r12)
     d4a:	41 8b 47 10          	mov    0x10(%r15),%eax
     d4e:	4d 8b 27             	mov    (%r15),%r12
     d51:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d54: R_X86_64_32S	.rodata.str1.1+0xb4
     d58:	83 f8 03             	cmp    $0x3,%eax
     d5b:	19 db                	sbb    %ebx,%ebx
     d5d:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
     d63:	81 c3 00 28 00 00    	add    $0x2800,%ebx
     d69:	48 63 db             	movslq %ebx,%rbx
     d6c:	e8 00 00 00 00       	callq  d71 <e1000_configure_rx+0x248>
			d6d: R_X86_64_PC32	record_function+0xfffffffffffffffc
     d71:	49 01 dc             	add    %rbx,%r12
     d74:	45 89 34 24          	mov    %r14d,(%r12)
     d78:	41 8b 47 10          	mov    0x10(%r15),%eax
     d7c:	4d 8b 27             	mov    (%r15),%r12
     d7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d82: R_X86_64_32S	.rodata.str1.1+0xb4
     d86:	83 f8 03             	cmp    $0x3,%eax
     d89:	19 db                	sbb    %ebx,%ebx
     d8b:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
     d91:	81 c3 18 28 00 00    	add    $0x2818,%ebx
     d97:	48 63 db             	movslq %ebx,%rbx
     d9a:	e8 00 00 00 00       	callq  d9f <e1000_configure_rx+0x276>
			d9b: R_X86_64_PC32	record_function+0xfffffffffffffffc
     d9f:	49 01 dc             	add    %rbx,%r12
     da2:	31 c0                	xor    %eax,%eax
     da4:	41 89 04 24          	mov    %eax,(%r12)
     da8:	41 8b 47 10          	mov    0x10(%r15),%eax
     dac:	4d 8b 27             	mov    (%r15),%r12
     daf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			db2: R_X86_64_32S	.rodata.str1.1+0xb4
     db6:	83 f8 03             	cmp    $0x3,%eax
     db9:	19 db                	sbb    %ebx,%ebx
     dbb:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
     dc1:	81 c3 10 28 00 00    	add    $0x2810,%ebx
     dc7:	48 63 db             	movslq %ebx,%rbx
     dca:	e8 00 00 00 00       	callq  dcf <e1000_configure_rx+0x2a6>
			dcb: R_X86_64_PC32	record_function+0xfffffffffffffffc
     dcf:	49 01 dc             	add    %rbx,%r12
     dd2:	31 c0                	xor    %eax,%eax
     dd4:	41 89 04 24          	mov    %eax,(%r12)
     dd8:	41 8b 47 10          	mov    0x10(%r15),%eax
     ddc:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
     de0:	83 f8 03             	cmp    $0x3,%eax
     de3:	48 8b 91 20 02 00 00 	mov    0x220(%rcx),%rdx
     dea:	19 c0                	sbb    %eax,%eax
     dec:	66 25 10 d9          	and    $0xd910,%ax
     df0:	66 05 10 28          	add    $0x2810,%ax
     df4:	66 89 42 2c          	mov    %ax,0x2c(%rdx)
     df8:	41 8b 47 10          	mov    0x10(%r15),%eax
     dfc:	48 8b 91 20 02 00 00 	mov    0x220(%rcx),%rdx
     e03:	83 f8 03             	cmp    $0x3,%eax
     e06:	19 c0                	sbb    %eax,%eax
     e08:	66 25 10 d9          	and    $0xd910,%ax
     e0c:	66 05 18 28          	add    $0x2818,%ax
     e10:	66 89 42 2e          	mov    %ax,0x2e(%rdx)
     e14:	41 83 7f 10 02       	cmpl   $0x2,0x10(%r15)
     e19:	76 51                	jbe    e6c <e1000_configure_rx+0x343>
     e1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e1e: R_X86_64_32S	.rodata.str1.1+0xae
     e22:	49 8b 1f             	mov    (%r15),%rbx
     e25:	e8 00 00 00 00       	callq  e2a <e1000_configure_rx+0x301>
			e26: R_X86_64_PC32	record_function+0xfffffffffffffffc
     e2a:	8b 83 00 50 00 00    	mov    0x5000(%rbx),%eax
     e30:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
     e34:	80 ba dc 02 00 00 00 	cmpb   $0x0,0x2dc(%rdx)
     e3b:	74 0c                	je     e49 <e1000_configure_rx+0x320>
     e3d:	41 89 c4             	mov    %eax,%r12d
     e40:	41 81 cc 00 02 00 00 	or     $0x200,%r12d
     e47:	eb 0a                	jmp    e53 <e1000_configure_rx+0x32a>
     e49:	41 89 c4             	mov    %eax,%r12d
     e4c:	41 81 e4 ff fd ff ff 	and    $0xfffffdff,%r12d
     e53:	49 8b 1f             	mov    (%r15),%rbx
     e56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e59: R_X86_64_32S	.rodata.str1.1+0xb4
     e5d:	e8 00 00 00 00       	callq  e62 <e1000_configure_rx+0x339>
			e5e: R_X86_64_PC32	record_function+0xfffffffffffffffc
     e62:	48 81 c3 00 50 00 00 	add    $0x5000,%rbx
     e69:	44 89 23             	mov    %r12d,(%rbx)
     e6c:	49 8b 1f             	mov    (%r15),%rbx
     e6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e72: R_X86_64_32S	.rodata.str1.1+0xb4
     e76:	e8 00 00 00 00       	callq  e7b <e1000_configure_rx+0x352>
			e77: R_X86_64_PC32	record_function+0xfffffffffffffffc
     e7b:	8b 4d d4             	mov    0xffffffffffffffd4(%rbp),%ecx
     e7e:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
     e85:	89 0b                	mov    %ecx,(%rbx)
     e87:	48 83 c4 18          	add    $0x18,%rsp
     e8b:	5b                   	pop    %rbx
     e8c:	41 5c                	pop    %r12
     e8e:	41 5d                	pop    %r13
     e90:	41 5e                	pop    %r14
     e92:	41 5f                	pop    %r15
     e94:	c9                   	leaveq 
     e95:	c3                   	retq   

0000000000000e96 <e1000_setup_rctl>:
     e96:	55                   	push   %rbp
     e97:	48 89 e5             	mov    %rsp,%rbp
     e9a:	41 55                	push   %r13
     e9c:	41 54                	push   %r12
     e9e:	49 89 fc             	mov    %rdi,%r12
     ea1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ea4: R_X86_64_32S	.rodata.str1.1+0x1f1
     ea8:	4d 8d ac 24 b8 03 00 	lea    0x3b8(%r12),%r13
     eaf:	00 
     eb0:	53                   	push   %rbx
     eb1:	48 83 ec 08          	sub    $0x8,%rsp
     eb5:	e8 00 00 00 00       	callq  eba <e1000_setup_rctl+0x24>
			eb6: R_X86_64_PC32	record_function+0xfffffffffffffffc
     eba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ebd: R_X86_64_32S	.rodata.str1.1+0xae
     ec1:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
     ec8:	00 
     ec9:	e8 00 00 00 00       	callq  ece <e1000_setup_rctl+0x38>
			eca: R_X86_64_PC32	record_function+0xfffffffffffffffc
     ece:	8b 83 00 01 00 00    	mov    0x100(%rbx),%eax
     ed4:	41 8b 95 a0 00 00 00 	mov    0xa0(%r13),%edx
     edb:	80 e4 cf             	and    $0xcf,%ah
     ede:	c1 e2 0c             	shl    $0xc,%edx
     ee1:	81 ca 02 80 00 00    	or     $0x8002,%edx
     ee7:	09 c2                	or     %eax,%edx
     ee9:	41 80 bd 0f 01 00 00 	cmpb   $0x0,0x10f(%r13)
     ef0:	00 
     ef1:	74 05                	je     ef8 <e1000_setup_rctl+0x62>
     ef3:	83 ca 04             	or     $0x4,%edx
     ef6:	eb 03                	jmp    efb <e1000_setup_rctl+0x65>
     ef8:	83 e2 fb             	and    $0xfffffffffffffffb,%edx
     efb:	49 8b 84 24 f0 02 00 	mov    0x2f0(%r12),%rax
     f02:	00 
     f03:	81 b8 6c 01 00 00 dc 	cmpl   $0x5dc,0x16c(%rax)
     f0a:	05 00 00 
     f0d:	77 07                	ja     f16 <e1000_setup_rctl+0x80>
     f0f:	89 d0                	mov    %edx,%eax
     f11:	83 e0 df             	and    $0xffffffffffffffdf,%eax
     f14:	eb 05                	jmp    f1b <e1000_setup_rctl+0x85>
     f16:	89 d0                	mov    %edx,%eax
     f18:	83 c8 20             	or     $0x20,%eax
     f1b:	89 c2                	mov    %eax,%edx
     f1d:	41 8b 84 24 a0 00 00 	mov    0xa0(%r12),%eax
     f24:	00 
     f25:	81 e2 ff ff fc ff    	and    $0xfffcffff,%edx
     f2b:	89 d1                	mov    %edx,%ecx
     f2d:	81 c9 00 00 00 02    	or     $0x2000000,%ecx
     f33:	3d 00 01 00 00       	cmp    $0x100,%eax
     f38:	74 13                	je     f4d <e1000_setup_rctl+0xb7>
     f3a:	3d 00 02 00 00       	cmp    $0x200,%eax
     f3f:	74 18                	je     f59 <e1000_setup_rctl+0xc3>
     f41:	3d 00 04 00 00       	cmp    $0x400,%eax
     f46:	41 89 cc             	mov    %ecx,%r12d
     f49:	75 24                	jne    f6f <e1000_setup_rctl+0xd9>
     f4b:	eb 18                	jmp    f65 <e1000_setup_rctl+0xcf>
     f4d:	41 89 d4             	mov    %edx,%r12d
     f50:	41 81 cc 00 00 03 02 	or     $0x2030000,%r12d
     f57:	eb 16                	jmp    f6f <e1000_setup_rctl+0xd9>
     f59:	41 89 d4             	mov    %edx,%r12d
     f5c:	41 81 cc 00 00 02 02 	or     $0x2020000,%r12d
     f63:	eb 0a                	jmp    f6f <e1000_setup_rctl+0xd9>
     f65:	41 89 d4             	mov    %edx,%r12d
     f68:	41 81 cc 00 00 01 02 	or     $0x2010000,%r12d
     f6f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
     f73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f76: R_X86_64_32S	.rodata.str1.1+0xb4
     f7a:	41 81 e4 ff ff ff fd 	and    $0xfdffffff,%r12d
     f81:	e8 00 00 00 00       	callq  f86 <e1000_setup_rctl+0xf0>
			f82: R_X86_64_PC32	record_function+0xfffffffffffffffc
     f86:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
     f8d:	44 89 23             	mov    %r12d,(%rbx)
     f90:	41 5b                	pop    %r11
     f92:	5b                   	pop    %rbx
     f93:	41 5c                	pop    %r12
     f95:	41 5d                	pop    %r13
     f97:	c9                   	leaveq 
     f98:	c3                   	retq   

0000000000000f99 <e1000_check_64k_bound>:
     f99:	55                   	push   %rbp
     f9a:	48 89 e5             	mov    %rsp,%rbp
     f9d:	41 55                	push   %r13
     f9f:	49 89 d5             	mov    %rdx,%r13
     fa2:	41 54                	push   %r12
     fa4:	49 89 f4             	mov    %rsi,%r12
     fa7:	53                   	push   %rbx
     fa8:	48 89 fb             	mov    %rdi,%rbx
     fab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fae: R_X86_64_32S	.rodata.str1.1+0x202
     fb2:	48 83 ec 08          	sub    $0x8,%rsp
     fb6:	e8 00 00 00 00       	callq  fbb <e1000_check_64k_bound+0x22>
			fb7: R_X86_64_PC32	record_function+0xfffffffffffffffc
     fbb:	8b 93 c8 03 00 00    	mov    0x3c8(%rbx),%edx
     fc1:	83 fa 06             	cmp    $0x6,%edx
     fc4:	74 0a                	je     fd0 <e1000_check_64k_bound+0x37>
     fc6:	83 fa 08             	cmp    $0x8,%edx
     fc9:	b8 01 00 00 00       	mov    $0x1,%eax
     fce:	75 12                	jne    fe2 <e1000_check_64k_bound+0x49>
     fd0:	4b 8d 44 25 ff       	lea    0xffffffffffffffff(%r13,%r12,1),%rax
     fd5:	4c 31 e0             	xor    %r12,%rax
     fd8:	48 c1 e8 10          	shr    $0x10,%rax
     fdc:	0f 94 c0             	sete   %al
     fdf:	0f b6 c0             	movzbl %al,%eax
     fe2:	5b                   	pop    %rbx
     fe3:	5b                   	pop    %rbx
     fe4:	41 5c                	pop    %r12
     fe6:	41 5d                	pop    %r13
     fe8:	c9                   	leaveq 
     fe9:	c3                   	retq   

0000000000000fea <e1000_release_manageability>:
     fea:	55                   	push   %rbp
     feb:	48 89 e5             	mov    %rsp,%rbp
     fee:	41 55                	push   %r13
     ff0:	41 54                	push   %r12
     ff2:	49 89 fc             	mov    %rdi,%r12
     ff5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ff8: R_X86_64_32S	.rodata.str1.1+0x218
     ffc:	4d 8d ac 24 b8 03 00 	lea    0x3b8(%r12),%r13
    1003:	00 
    1004:	53                   	push   %rbx
    1005:	48 83 ec 08          	sub    $0x8,%rsp
    1009:	e8 00 00 00 00       	callq  100e <e1000_release_manageability+0x24>
			100a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    100e:	41 83 bc 24 ac 00 00 	cmpl   $0x0,0xac(%r12)
    1015:	00 00 
    1017:	74 4e                	je     1067 <e1000_release_manageability+0x7d>
    1019:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			101c: R_X86_64_32S	.rodata.str1.1+0xae
    1020:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    1027:	00 
    1028:	e8 00 00 00 00       	callq  102d <e1000_release_manageability+0x43>
			1029: R_X86_64_PC32	record_function+0xfffffffffffffffc
    102d:	8b 9b 20 58 00 00    	mov    0x5820(%rbx),%ebx
    1033:	80 cf 20             	or     $0x20,%bh
    1036:	4d 8b a4 24 b8 03 00 	mov    0x3b8(%r12),%r12
    103d:	00 
    103e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1041: R_X86_64_32S	.rodata.str1.1+0xb4
    1045:	89 d8                	mov    %ebx,%eax
    1047:	25 ff ff df ff       	and    $0xffdfffff,%eax
    104c:	41 80 bd 1d 01 00 00 	cmpb   $0x0,0x11d(%r13)
    1053:	00 
    1054:	0f 45 d8             	cmovne %eax,%ebx
    1057:	49 81 c4 20 58 00 00 	add    $0x5820,%r12
    105e:	e8 00 00 00 00       	callq  1063 <e1000_release_manageability+0x79>
			105f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1063:	41 89 1c 24          	mov    %ebx,(%r12)
    1067:	41 5c                	pop    %r12
    1069:	5b                   	pop    %rbx
    106a:	41 5c                	pop    %r12
    106c:	41 5d                	pop    %r13
    106e:	c9                   	leaveq 
    106f:	c3                   	retq   

0000000000001070 <e1000_init_manageability>:
    1070:	55                   	push   %rbp
    1071:	48 89 e5             	mov    %rsp,%rbp
    1074:	41 56                	push   %r14
    1076:	49 89 fe             	mov    %rdi,%r14
    1079:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			107c: R_X86_64_32S	.rodata.str1.1+0x234
    1080:	41 55                	push   %r13
    1082:	41 54                	push   %r12
    1084:	4d 8d a6 b8 03 00 00 	lea    0x3b8(%r14),%r12
    108b:	53                   	push   %rbx
    108c:	e8 00 00 00 00       	callq  1091 <e1000_init_manageability+0x21>
			108d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1091:	41 83 be ac 00 00 00 	cmpl   $0x0,0xac(%r14)
    1098:	00 
    1099:	0f 84 8b 00 00 00    	je     112a <e1000_init_manageability+0xba>
    109f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a2: R_X86_64_32S	.rodata.str1.1+0xae
    10a6:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    10ad:	e8 00 00 00 00       	callq  10b2 <e1000_init_manageability+0x42>
			10ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
    10b2:	44 8b ab 20 58 00 00 	mov    0x5820(%rbx),%r13d
    10b9:	41 81 e5 ff df ff ff 	and    $0xffffdfff,%r13d
    10c0:	41 80 bc 24 1d 01 00 	cmpb   $0x0,0x11d(%r12)
    10c7:	00 00 
    10c9:	74 42                	je     110d <e1000_init_manageability+0x9d>
    10cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ce: R_X86_64_32S	.rodata.str1.1+0xae
    10d2:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    10d9:	e8 00 00 00 00       	callq  10de <e1000_init_manageability+0x6e>
			10da: R_X86_64_PC32	record_function+0xfffffffffffffffc
    10de:	44 8b a3 60 58 00 00 	mov    0x5860(%rbx),%r12d
    10e5:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    10ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ef: R_X86_64_32S	.rodata.str1.1+0xb4
    10f3:	41 81 cd 00 00 20 00 	or     $0x200000,%r13d
    10fa:	41 83 cc 60          	or     $0x60,%r12d
    10fe:	e8 00 00 00 00       	callq  1103 <e1000_init_manageability+0x93>
			10ff: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1103:	48 81 c3 60 58 00 00 	add    $0x5860,%rbx
    110a:	44 89 23             	mov    %r12d,(%rbx)
    110d:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    1114:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1117: R_X86_64_32S	.rodata.str1.1+0xb4
    111b:	e8 00 00 00 00       	callq  1120 <e1000_init_manageability+0xb0>
			111c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1120:	48 81 c3 20 58 00 00 	add    $0x5820,%rbx
    1127:	44 89 2b             	mov    %r13d,(%rbx)
    112a:	5b                   	pop    %rbx
    112b:	41 5c                	pop    %r12
    112d:	41 5d                	pop    %r13
    112f:	41 5e                	pop    %r14
    1131:	c9                   	leaveq 
    1132:	c3                   	retq   

0000000000001133 <e1000_get_hw_control>:
    1133:	55                   	push   %rbp
    1134:	48 89 e5             	mov    %rsp,%rbp
    1137:	41 56                	push   %r14
    1139:	41 55                	push   %r13
    113b:	49 89 fd             	mov    %rdi,%r13
    113e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1141: R_X86_64_32S	.rodata.str1.1+0x24d
    1145:	4d 8d b5 b8 03 00 00 	lea    0x3b8(%r13),%r14
    114c:	41 54                	push   %r12
    114e:	53                   	push   %rbx
    114f:	e8 00 00 00 00       	callq  1154 <e1000_get_hw_control+0x21>
			1150: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1154:	41 8b 46 10          	mov    0x10(%r14),%eax
    1158:	83 f8 10             	cmp    $0x10,%eax
    115b:	74 16                	je     1173 <e1000_get_hw_control+0x40>
    115d:	83 f8 0e             	cmp    $0xe,%eax
    1160:	74 4b                	je     11ad <e1000_get_hw_control+0x7a>
    1162:	83 f8 0f             	cmp    $0xf,%eax
    1165:	74 46                	je     11ad <e1000_get_hw_control+0x7a>
    1167:	83 f8 11             	cmp    $0x11,%eax
    116a:	74 41                	je     11ad <e1000_get_hw_control+0x7a>
    116c:	83 f8 12             	cmp    $0x12,%eax
    116f:	75 6c                	jne    11dd <e1000_get_hw_control+0xaa>
    1171:	eb 3a                	jmp    11ad <e1000_get_hw_control+0x7a>
    1173:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1176: R_X86_64_32S	.rodata.str1.1+0xae
    117a:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    1181:	e8 00 00 00 00       	callq  1186 <e1000_get_hw_control+0x53>
			1182: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1186:	44 8b a3 50 5b 00 00 	mov    0x5b50(%rbx),%r12d
    118d:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    1194:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1197: R_X86_64_32S	.rodata.str1.1+0xb4
    119b:	41 83 cc 08          	or     $0x8,%r12d
    119f:	e8 00 00 00 00       	callq  11a4 <e1000_get_hw_control+0x71>
			11a0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    11a4:	48 81 c3 50 5b 00 00 	add    $0x5b50,%rbx
    11ab:	eb 2d                	jmp    11da <e1000_get_hw_control+0xa7>
    11ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11b0: R_X86_64_32S	.rodata.str1.1+0xae
    11b4:	49 8b 1e             	mov    (%r14),%rbx
    11b7:	e8 00 00 00 00       	callq  11bc <e1000_get_hw_control+0x89>
			11b8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    11bc:	44 8b 63 18          	mov    0x18(%rbx),%r12d
    11c0:	49 8b 1e             	mov    (%r14),%rbx
    11c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11c6: R_X86_64_32S	.rodata.str1.1+0xb4
    11ca:	41 81 cc 00 00 00 10 	or     $0x10000000,%r12d
    11d1:	e8 00 00 00 00       	callq  11d6 <e1000_get_hw_control+0xa3>
			11d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    11d6:	48 83 c3 18          	add    $0x18,%rbx
    11da:	44 89 23             	mov    %r12d,(%rbx)
    11dd:	5b                   	pop    %rbx
    11de:	41 5c                	pop    %r12
    11e0:	41 5d                	pop    %r13
    11e2:	41 5e                	pop    %r14
    11e4:	c9                   	leaveq 
    11e5:	c3                   	retq   

00000000000011e6 <e1000_release_hw_control>:
    11e6:	55                   	push   %rbp
    11e7:	48 89 e5             	mov    %rsp,%rbp
    11ea:	41 56                	push   %r14
    11ec:	41 55                	push   %r13
    11ee:	49 89 fd             	mov    %rdi,%r13
    11f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f4: R_X86_64_32S	.rodata.str1.1+0x262
    11f8:	4d 8d b5 b8 03 00 00 	lea    0x3b8(%r13),%r14
    11ff:	41 54                	push   %r12
    1201:	53                   	push   %rbx
    1202:	e8 00 00 00 00       	callq  1207 <e1000_release_hw_control+0x21>
			1203: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1207:	41 8b 46 10          	mov    0x10(%r14),%eax
    120b:	83 f8 10             	cmp    $0x10,%eax
    120e:	74 16                	je     1226 <e1000_release_hw_control+0x40>
    1210:	83 f8 0e             	cmp    $0xe,%eax
    1213:	74 4b                	je     1260 <e1000_release_hw_control+0x7a>
    1215:	83 f8 0f             	cmp    $0xf,%eax
    1218:	74 46                	je     1260 <e1000_release_hw_control+0x7a>
    121a:	83 f8 11             	cmp    $0x11,%eax
    121d:	74 41                	je     1260 <e1000_release_hw_control+0x7a>
    121f:	83 f8 12             	cmp    $0x12,%eax
    1222:	75 6c                	jne    1290 <e1000_release_hw_control+0xaa>
    1224:	eb 3a                	jmp    1260 <e1000_release_hw_control+0x7a>
    1226:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1229: R_X86_64_32S	.rodata.str1.1+0xae
    122d:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    1234:	e8 00 00 00 00       	callq  1239 <e1000_release_hw_control+0x53>
			1235: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1239:	44 8b a3 50 5b 00 00 	mov    0x5b50(%rbx),%r12d
    1240:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    1247:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			124a: R_X86_64_32S	.rodata.str1.1+0xb4
    124e:	41 83 e4 f7          	and    $0xfffffffffffffff7,%r12d
    1252:	e8 00 00 00 00       	callq  1257 <e1000_release_hw_control+0x71>
			1253: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1257:	48 81 c3 50 5b 00 00 	add    $0x5b50,%rbx
    125e:	eb 2d                	jmp    128d <e1000_release_hw_control+0xa7>
    1260:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1263: R_X86_64_32S	.rodata.str1.1+0xae
    1267:	49 8b 1e             	mov    (%r14),%rbx
    126a:	e8 00 00 00 00       	callq  126f <e1000_release_hw_control+0x89>
			126b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    126f:	44 8b 63 18          	mov    0x18(%rbx),%r12d
    1273:	49 8b 1e             	mov    (%r14),%rbx
    1276:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1279: R_X86_64_32S	.rodata.str1.1+0xb4
    127d:	41 81 e4 ff ff ff ef 	and    $0xefffffff,%r12d
    1284:	e8 00 00 00 00       	callq  1289 <e1000_release_hw_control+0xa3>
			1285: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1289:	48 83 c3 18          	add    $0x18,%rbx
    128d:	44 89 23             	mov    %r12d,(%rbx)
    1290:	5b                   	pop    %rbx
    1291:	41 5c                	pop    %r12
    1293:	41 5d                	pop    %r13
    1295:	41 5e                	pop    %r14
    1297:	c9                   	leaveq 
    1298:	c3                   	retq   

0000000000001299 <e1000_irq_enable>:
    1299:	55                   	push   %rbp
    129a:	48 89 e5             	mov    %rsp,%rbp
    129d:	41 54                	push   %r12
    129f:	49 89 fc             	mov    %rdi,%r12
    12a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12a5: R_X86_64_32S	.rodata.str1.1+0x27b
    12a9:	53                   	push   %rbx
    12aa:	e8 00 00 00 00       	callq  12af <e1000_irq_enable+0x16>
			12ab: R_X86_64_PC32	record_function+0xfffffffffffffffc
    12af:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    12b6:	00 
    12b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12ba: R_X86_64_32S	.rodata.str1.1+0xb4
    12be:	e8 00 00 00 00       	callq  12c3 <e1000_irq_enable+0x2a>
			12bf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    12c3:	b8 9d 00 00 00       	mov    $0x9d,%eax
    12c8:	48 81 c3 d0 00 00 00 	add    $0xd0,%rbx
    12cf:	89 03                	mov    %eax,(%rbx)
    12d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12d4: R_X86_64_32S	.rodata.str1.1+0xae
    12d8:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    12df:	00 
    12e0:	e8 00 00 00 00       	callq  12e5 <e1000_irq_enable+0x4c>
			12e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    12e5:	8b 43 08             	mov    0x8(%rbx),%eax
    12e8:	5b                   	pop    %rbx
    12e9:	41 5c                	pop    %r12
    12eb:	c9                   	leaveq 
    12ec:	c3                   	retq   

00000000000012ed <Nonstub_sk_buff_get_length>:
    12ed:	55                   	push   %rbp
    12ee:	48 89 e5             	mov    %rsp,%rbp
    12f1:	53                   	push   %rbx
    12f2:	48 89 fb             	mov    %rdi,%rbx
    12f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12f8: R_X86_64_32S	.rodata.str1.1+0x28c
    12fc:	48 83 ec 08          	sub    $0x8,%rsp
    1300:	e8 00 00 00 00       	callq  1305 <Nonstub_sk_buff_get_length+0x18>
			1301: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1305:	5a                   	pop    %rdx
    1306:	48 8d 83 d8 01 00 00 	lea    0x1d8(%rbx),%rax
    130d:	5b                   	pop    %rbx
    130e:	c9                   	leaveq 
    130f:	c3                   	retq   

0000000000001310 <MICRODRIVERS__MODIF_skb_copy_and_csum_dev>:
    1310:	55                   	push   %rbp
    1311:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1314: R_X86_64_32S	.rodata.str1.1+0x2a7
    1318:	48 89 e5             	mov    %rsp,%rbp
    131b:	e8 00 00 00 00       	callq  1320 <MICRODRIVERS__MODIF_skb_copy_and_csum_dev+0x10>
			131c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1320:	c9                   	leaveq 
    1321:	c3                   	retq   

0000000000001322 <MICRODRIVERS__MODIF_init_timer>:
    1322:	55                   	push   %rbp
    1323:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1326: R_X86_64_32S	.rodata.str1.1+0x2d1
    132a:	48 89 e5             	mov    %rsp,%rbp
    132d:	e8 00 00 00 00       	callq  1332 <MICRODRIVERS__MODIF_init_timer+0x10>
			132e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1332:	c9                   	leaveq 
    1333:	c3                   	retq   

0000000000001334 <MICRODRIVERS__MODIF_cancel_rearming_delayed_work>:
    1334:	55                   	push   %rbp
    1335:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1338: R_X86_64_32S	.rodata.str1.1+0x2f0
    133c:	48 89 e5             	mov    %rsp,%rbp
    133f:	e8 00 00 00 00       	callq  1344 <MICRODRIVERS__MODIF_cancel_rearming_delayed_work+0x10>
			1340: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1344:	c9                   	leaveq 
    1345:	c3                   	retq   

0000000000001346 <MICRODRIVERS__MODIF_free_irq>:
    1346:	55                   	push   %rbp
    1347:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			134a: R_X86_64_32S	.rodata.str1.1+0x321
    134e:	48 89 e5             	mov    %rsp,%rbp
    1351:	e8 00 00 00 00       	callq  1356 <MICRODRIVERS__MODIF_free_irq+0x10>
			1352: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1356:	c9                   	leaveq 
    1357:	c3                   	retq   

0000000000001358 <MICRODRIVERS__MODIF_skb_over_panic>:
    1358:	55                   	push   %rbp
    1359:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			135c: R_X86_64_32S	.rodata.str1.1+0x33e
    1360:	48 89 e5             	mov    %rsp,%rbp
    1363:	e8 00 00 00 00       	callq  1368 <MICRODRIVERS__MODIF_skb_over_panic+0x10>
			1364: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1368:	c9                   	leaveq 
    1369:	c3                   	retq   

000000000000136a <MICRODRIVERS__MODIF_pci_set_power_state>:
    136a:	55                   	push   %rbp
    136b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			136e: R_X86_64_32S	.rodata.str1.1+0x361
    1372:	48 89 e5             	mov    %rsp,%rbp
    1375:	e8 00 00 00 00       	callq  137a <MICRODRIVERS__MODIF_pci_set_power_state+0x10>
			1376: R_X86_64_PC32	record_function+0xfffffffffffffffc
    137a:	c9                   	leaveq 
    137b:	31 c0                	xor    %eax,%eax
    137d:	c3                   	retq   

000000000000137e <MICRODRIVERS__MODIF_pci_set_mwi>:
    137e:	55                   	push   %rbp
    137f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1382: R_X86_64_32S	.rodata.str1.1+0x389
    1386:	48 89 e5             	mov    %rsp,%rbp
    1389:	e8 00 00 00 00       	callq  138e <MICRODRIVERS__MODIF_pci_set_mwi+0x10>
			138a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    138e:	c9                   	leaveq 
    138f:	31 c0                	xor    %eax,%eax
    1391:	c3                   	retq   

0000000000001392 <MICRODRIVERS__MODIF_pci_set_master>:
    1392:	55                   	push   %rbp
    1393:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1396: R_X86_64_32S	.rodata.str1.1+0x3a9
    139a:	48 89 e5             	mov    %rsp,%rbp
    139d:	e8 00 00 00 00       	callq  13a2 <MICRODRIVERS__MODIF_pci_set_master+0x10>
			139e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    13a2:	c9                   	leaveq 
    13a3:	c3                   	retq   

00000000000013a4 <MICRODRIVERS__MODIF_pci_set_dma_mask>:
    13a4:	55                   	push   %rbp
    13a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13a8: R_X86_64_32S	.rodata.str1.1+0x3cc
    13ac:	48 89 e5             	mov    %rsp,%rbp
    13af:	e8 00 00 00 00       	callq  13b4 <MICRODRIVERS__MODIF_pci_set_dma_mask+0x10>
			13b0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    13b4:	c9                   	leaveq 
    13b5:	31 c0                	xor    %eax,%eax
    13b7:	c3                   	retq   

00000000000013b8 <MICRODRIVERS__MODIF_pci_set_consistent_dma_mask>:
    13b8:	55                   	push   %rbp
    13b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13bc: R_X86_64_32S	.rodata.str1.1+0x3f1
    13c0:	48 89 e5             	mov    %rsp,%rbp
    13c3:	e8 00 00 00 00       	callq  13c8 <MICRODRIVERS__MODIF_pci_set_consistent_dma_mask+0x10>
			13c4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    13c8:	c9                   	leaveq 
    13c9:	31 c0                	xor    %eax,%eax
    13cb:	c3                   	retq   

00000000000013cc <MICRODRIVERS__MODIF_pci_save_state>:
    13cc:	55                   	push   %rbp
    13cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13d0: R_X86_64_32S	.rodata.str1.1+0x421
    13d4:	48 89 e5             	mov    %rsp,%rbp
    13d7:	e8 00 00 00 00       	callq  13dc <MICRODRIVERS__MODIF_pci_save_state+0x10>
			13d8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    13dc:	c9                   	leaveq 
    13dd:	31 c0                	xor    %eax,%eax
    13df:	c3                   	retq   

00000000000013e0 <MICRODRIVERS__MODIF_pci_restore_state>:
    13e0:	55                   	push   %rbp
    13e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13e4: R_X86_64_32S	.rodata.str1.1+0x444
    13e8:	48 89 e5             	mov    %rsp,%rbp
    13eb:	e8 00 00 00 00       	callq  13f0 <MICRODRIVERS__MODIF_pci_restore_state+0x10>
			13ec: R_X86_64_PC32	record_function+0xfffffffffffffffc
    13f0:	c9                   	leaveq 
    13f1:	31 c0                	xor    %eax,%eax
    13f3:	c3                   	retq   

00000000000013f4 <MICRODRIVERS__MODIF_pci_release_regions>:
    13f4:	55                   	push   %rbp
    13f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13f8: R_X86_64_32S	.rodata.str1.1+0x46a
    13fc:	48 89 e5             	mov    %rsp,%rbp
    13ff:	e8 00 00 00 00       	callq  1404 <MICRODRIVERS__MODIF_pci_release_regions+0x10>
			1400: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1404:	c9                   	leaveq 
    1405:	c3                   	retq   

0000000000001406 <MICRODRIVERS__MODIF_pci_enable_wake>:
    1406:	55                   	push   %rbp
    1407:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			140a: R_X86_64_32S	.rodata.str1.1+0x492
    140e:	48 89 e5             	mov    %rsp,%rbp
    1411:	e8 00 00 00 00       	callq  1416 <MICRODRIVERS__MODIF_pci_enable_wake+0x10>
			1412: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1416:	c9                   	leaveq 
    1417:	31 c0                	xor    %eax,%eax
    1419:	c3                   	retq   

000000000000141a <MICRODRIVERS__MODIF_pci_enable_device>:
    141a:	55                   	push   %rbp
    141b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			141e: R_X86_64_32S	.rodata.str1.1+0x4b6
    1422:	48 89 e5             	mov    %rsp,%rbp
    1425:	e8 00 00 00 00       	callq  142a <MICRODRIVERS__MODIF_pci_enable_device+0x10>
			1426: R_X86_64_PC32	record_function+0xfffffffffffffffc
    142a:	c9                   	leaveq 
    142b:	31 c0                	xor    %eax,%eax
    142d:	c3                   	retq   

000000000000142e <MICRODRIVERS__MODIF_pci_disable_device>:
    142e:	55                   	push   %rbp
    142f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1432: R_X86_64_32S	.rodata.str1.1+0x4dc
    1436:	48 89 e5             	mov    %rsp,%rbp
    1439:	e8 00 00 00 00       	callq  143e <MICRODRIVERS__MODIF_pci_disable_device+0x10>
			143a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    143e:	c9                   	leaveq 
    143f:	c3                   	retq   

0000000000001440 <MICRODRIVERS__MODIF_pci_clear_mwi>:
    1440:	55                   	push   %rbp
    1441:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1444: R_X86_64_32S	.rodata.str1.1+0x503
    1448:	48 89 e5             	mov    %rsp,%rbp
    144b:	e8 00 00 00 00       	callq  1450 <MICRODRIVERS__MODIF_pci_clear_mwi+0x10>
			144c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1450:	c9                   	leaveq 
    1451:	c3                   	retq   

0000000000001452 <MICRODRIVERS__MODIF_pci_choose_state>:
    1452:	55                   	push   %rbp
    1453:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1456: R_X86_64_32S	.rodata.str1.1+0x525
    145a:	48 89 e5             	mov    %rsp,%rbp
    145d:	e8 00 00 00 00       	callq  1462 <MICRODRIVERS__MODIF_pci_choose_state+0x10>
			145e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1462:	c9                   	leaveq 
    1463:	31 c0                	xor    %eax,%eax
    1465:	c3                   	retq   

0000000000001466 <MICRODRIVERS__MODIF_page_address>:
    1466:	55                   	push   %rbp
    1467:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			146a: R_X86_64_32S	.rodata.str1.1+0x54a
    146e:	48 89 e5             	mov    %rsp,%rbp
    1471:	e8 00 00 00 00       	callq  1476 <MICRODRIVERS__MODIF_page_address+0x10>
			1472: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1476:	c9                   	leaveq 
    1477:	31 c0                	xor    %eax,%eax
    1479:	c3                   	retq   

000000000000147a <MICRODRIVERS__MODIF___netif_rx_schedule>:
    147a:	55                   	push   %rbp
    147b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			147e: R_X86_64_32S	.rodata.str1.1+0x56b
    1482:	48 89 e5             	mov    %rsp,%rbp
    1485:	e8 00 00 00 00       	callq  148a <MICRODRIVERS__MODIF___netif_rx_schedule+0x10>
			1486: R_X86_64_PC32	record_function+0xfffffffffffffffc
    148a:	c9                   	leaveq 
    148b:	c3                   	retq   

000000000000148c <MICRODRIVERS__MODIF_netif_rx>:
    148c:	55                   	push   %rbp
    148d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1490: R_X86_64_32S	.rodata.str1.1+0x593
    1494:	48 89 e5             	mov    %rsp,%rbp
    1497:	e8 00 00 00 00       	callq  149c <MICRODRIVERS__MODIF_netif_rx+0x10>
			1498: R_X86_64_PC32	record_function+0xfffffffffffffffc
    149c:	c9                   	leaveq 
    149d:	31 c0                	xor    %eax,%eax
    149f:	c3                   	retq   

00000000000014a0 <MICRODRIVERS__MODIF_netif_receive_skb>:
    14a0:	55                   	push   %rbp
    14a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14a4: R_X86_64_32S	.rodata.str1.1+0x5b0
    14a8:	48 89 e5             	mov    %rsp,%rbp
    14ab:	e8 00 00 00 00       	callq  14b0 <MICRODRIVERS__MODIF_netif_receive_skb+0x10>
			14ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
    14b0:	c9                   	leaveq 
    14b1:	31 c0                	xor    %eax,%eax
    14b3:	c3                   	retq   

00000000000014b4 <MICRODRIVERS__MODIF_kfree_skb>:
    14b4:	55                   	push   %rbp
    14b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14b8: R_X86_64_32S	.rodata.str1.1+0x5d6
    14bc:	48 89 e5             	mov    %rsp,%rbp
    14bf:	e8 00 00 00 00       	callq  14c4 <MICRODRIVERS__MODIF_kfree_skb+0x10>
			14c0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    14c4:	c9                   	leaveq 
    14c5:	c3                   	retq   

00000000000014c6 <MICRODRIVERS__MODIF_dma_free_coherent>:
    14c6:	55                   	push   %rbp
    14c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ca: R_X86_64_32S	.rodata.str1.1+0x5f4
    14ce:	48 89 e5             	mov    %rsp,%rbp
    14d1:	e8 00 00 00 00       	callq  14d6 <MICRODRIVERS__MODIF_dma_free_coherent+0x10>
			14d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    14d6:	c9                   	leaveq 
    14d7:	c3                   	retq   

00000000000014d8 <MICRODRIVERS__MODIF_dev_kfree_skb_any>:
    14d8:	55                   	push   %rbp
    14d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14dc: R_X86_64_32S	.rodata.str1.1+0x61a
    14e0:	48 89 e5             	mov    %rsp,%rbp
    14e3:	e8 00 00 00 00       	callq  14e8 <MICRODRIVERS__MODIF_dev_kfree_skb_any+0x10>
			14e4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    14e8:	c9                   	leaveq 
    14e9:	c3                   	retq   

00000000000014ea <MICRODRIVERS__MODIF_pci_bus_write_config_word>:
    14ea:	55                   	push   %rbp
    14eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ee: R_X86_64_32S	.rodata.str1.1+0x640
    14f2:	48 89 e5             	mov    %rsp,%rbp
    14f5:	e8 00 00 00 00       	callq  14fa <MICRODRIVERS__MODIF_pci_bus_write_config_word+0x10>
			14f6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    14fa:	c9                   	leaveq 
    14fb:	31 c0                	xor    %eax,%eax
    14fd:	c3                   	retq   

00000000000014fe <MICRODRIVERS__MODIF_dev_driver_string>:
    14fe:	55                   	push   %rbp
    14ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1502: R_X86_64_32S	.rodata.str1.1+0x66e
    1506:	48 89 e5             	mov    %rsp,%rbp
    1509:	e8 00 00 00 00       	callq  150e <MICRODRIVERS__MODIF_dev_driver_string+0x10>
			150a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    150e:	c9                   	leaveq 
    150f:	31 c0                	xor    %eax,%eax
    1511:	c3                   	retq   

0000000000001512 <MICRODRIVERS__DUMMY>:
    1512:	55                   	push   %rbp
    1513:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1516: R_X86_64_32S	.rodata.str1.1+0x694
    151a:	48 89 e5             	mov    %rsp,%rbp
    151d:	e8 00 00 00 00       	callq  1522 <MICRODRIVERS__DUMMY+0x10>
			151e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1522:	c9                   	leaveq 
    1523:	c3                   	retq   

0000000000001524 <MICRODRIVERS__MODIF_schedule_work>:
    1524:	55                   	push   %rbp
    1525:	48 89 e5             	mov    %rsp,%rbp
    1528:	53                   	push   %rbx
    1529:	48 89 fb             	mov    %rdi,%rbx
    152c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			152f: R_X86_64_32S	.rodata.str1.1+0x6a8
    1533:	48 83 ec 08          	sub    $0x8,%rsp
    1537:	e8 00 00 00 00       	callq  153c <MICRODRIVERS__MODIF_schedule_work+0x18>
			1538: R_X86_64_PC32	record_function+0xfffffffffffffffc
    153c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    1540:	e8 00 00 00 00       	callq  1545 <MICRODRIVERS__MODIF_schedule_work+0x21>
			1541: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1545:	59                   	pop    %rcx
    1546:	5b                   	pop    %rbx
    1547:	c9                   	leaveq 
    1548:	31 c0                	xor    %eax,%eax
    154a:	c3                   	retq   

000000000000154b <MICRODRIVERS__MODIF_cancel_work_sync>:
    154b:	55                   	push   %rbp
    154c:	48 89 e5             	mov    %rsp,%rbp
    154f:	53                   	push   %rbx
    1550:	48 89 fb             	mov    %rdi,%rbx
    1553:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1556: R_X86_64_32S	.rodata.str1.1+0x6ca
    155a:	48 83 ec 08          	sub    $0x8,%rsp
    155e:	e8 00 00 00 00       	callq  1563 <MICRODRIVERS__MODIF_cancel_work_sync+0x18>
			155f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1563:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    1567:	e8 00 00 00 00       	callq  156c <MICRODRIVERS__MODIF_cancel_work_sync+0x21>
			1568: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    156c:	5e                   	pop    %rsi
    156d:	5b                   	pop    %rbx
    156e:	c9                   	leaveq 
    156f:	31 c0                	xor    %eax,%eax
    1571:	c3                   	retq   

0000000000001572 <MICRODRIVERS__MODIF_mii_link_ok>:
    1572:	55                   	push   %rbp
    1573:	48 89 e5             	mov    %rsp,%rbp
    1576:	53                   	push   %rbx
    1577:	48 89 fb             	mov    %rdi,%rbx
    157a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			157d: R_X86_64_32S	.rodata.str1.1+0x6ef
    1581:	48 83 ec 08          	sub    $0x8,%rsp
    1585:	e8 00 00 00 00       	callq  158a <MICRODRIVERS__MODIF_mii_link_ok+0x18>
			1586: R_X86_64_PC32	record_function+0xfffffffffffffffc
    158a:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    158e:	e8 00 00 00 00       	callq  1593 <MICRODRIVERS__MODIF_mii_link_ok+0x21>
			158f: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1593:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    1597:	e8 00 00 00 00       	callq  159c <MICRODRIVERS__MODIF_mii_link_ok+0x2a>
			1598: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    159c:	48 63 3b             	movslq (%rbx),%rdi
    159f:	e8 00 00 00 00       	callq  15a4 <MICRODRIVERS__MODIF_mii_link_ok+0x32>
			15a0: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15a4:	5f                   	pop    %rdi
    15a5:	5b                   	pop    %rbx
    15a6:	c9                   	leaveq 
    15a7:	31 c0                	xor    %eax,%eax
    15a9:	c3                   	retq   

00000000000015aa <MICRODRIVERS__MODIF_schedule_delayed_work>:
    15aa:	55                   	push   %rbp
    15ab:	48 89 e5             	mov    %rsp,%rbp
    15ae:	53                   	push   %rbx
    15af:	48 89 fb             	mov    %rdi,%rbx
    15b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15b5: R_X86_64_32S	.rodata.str1.1+0x70f
    15b9:	48 83 ec 08          	sub    $0x8,%rsp
    15bd:	e8 00 00 00 00       	callq  15c2 <MICRODRIVERS__MODIF_schedule_delayed_work+0x18>
			15be: R_X86_64_PC32	record_function+0xfffffffffffffffc
    15c2:	48 8b 3b             	mov    (%rbx),%rdi
    15c5:	e8 00 00 00 00       	callq  15ca <MICRODRIVERS__MODIF_schedule_delayed_work+0x20>
			15c6: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15ca:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    15ce:	e8 00 00 00 00       	callq  15d3 <MICRODRIVERS__MODIF_schedule_delayed_work+0x29>
			15cf: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15d3:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    15d7:	e8 00 00 00 00       	callq  15dc <MICRODRIVERS__MODIF_schedule_delayed_work+0x32>
			15d8: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15dc:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    15e0:	e8 00 00 00 00       	callq  15e5 <MICRODRIVERS__MODIF_schedule_delayed_work+0x3b>
			15e1: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15e5:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    15e9:	e8 00 00 00 00       	callq  15ee <MICRODRIVERS__MODIF_schedule_delayed_work+0x44>
			15ea: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15ee:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    15f2:	e8 00 00 00 00       	callq  15f7 <MICRODRIVERS__MODIF_schedule_delayed_work+0x4d>
			15f3: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    15f7:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
    15fb:	e8 00 00 00 00       	callq  1600 <MICRODRIVERS__MODIF_schedule_delayed_work+0x56>
			15fc: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1600:	41 58                	pop    %r8
    1602:	5b                   	pop    %rbx
    1603:	c9                   	leaveq 
    1604:	31 c0                	xor    %eax,%eax
    1606:	c3                   	retq   

0000000000001607 <MICRODRIVERS__MODIF_unregister_netdev>:
    1607:	55                   	push   %rbp
    1608:	48 89 e5             	mov    %rsp,%rbp
    160b:	53                   	push   %rbx
    160c:	48 89 fb             	mov    %rdi,%rbx
    160f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1612: R_X86_64_32S	.rodata.str1.1+0x739
    1616:	48 83 ec 08          	sub    $0x8,%rsp
    161a:	e8 00 00 00 00       	callq  161f <MICRODRIVERS__MODIF_unregister_netdev+0x18>
			161b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    161f:	8b bb 30 04 00 00    	mov    0x430(%rbx),%edi
    1625:	e8 00 00 00 00       	callq  162a <MICRODRIVERS__MODIF_unregister_netdev+0x23>
			1626: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    162a:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    162e:	e8 00 00 00 00       	callq  1633 <MICRODRIVERS__MODIF_unregister_netdev+0x2c>
			162f: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1633:	48 8d bb 18 04 00 00 	lea    0x418(%rbx),%rdi
    163a:	e8 00 00 00 00       	callq  163f <MICRODRIVERS__MODIF_unregister_netdev+0x38>
			163b: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    163f:	48 89 df             	mov    %rbx,%rdi
    1642:	e8 00 00 00 00       	callq  1647 <MICRODRIVERS__MODIF_unregister_netdev+0x40>
			1643: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1647:	48 8b bb 18 07 00 00 	mov    0x718(%rbx),%rdi
    164e:	e8 00 00 00 00       	callq  1653 <MICRODRIVERS__MODIF_unregister_netdev+0x4c>
			164f: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1653:	48 8b bb e8 01 00 00 	mov    0x1e8(%rbx),%rdi
    165a:	e8 00 00 00 00       	callq  165f <MICRODRIVERS__MODIF_unregister_netdev+0x58>
			165b: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    165f:	48 63 bb f0 01 00 00 	movslq 0x1f0(%rbx),%rdi
    1666:	e8 00 00 00 00       	callq  166b <MICRODRIVERS__MODIF_unregister_netdev+0x64>
			1667: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    166b:	41 59                	pop    %r9
    166d:	5b                   	pop    %rbx
    166e:	c9                   	leaveq 
    166f:	c3                   	retq   

0000000000001670 <MICRODRIVERS__MODIF_pci_unregister_driver>:
    1670:	55                   	push   %rbp
    1671:	48 89 e5             	mov    %rsp,%rbp
    1674:	53                   	push   %rbx
    1675:	48 89 fb             	mov    %rdi,%rbx
    1678:	48 83 c3 60          	add    $0x60,%rbx
    167c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			167f: R_X86_64_32S	.rodata.str1.1+0x75f
    1683:	48 83 ec 08          	sub    $0x8,%rsp
    1687:	e8 00 00 00 00       	callq  168c <MICRODRIVERS__MODIF_pci_unregister_driver+0x1c>
			1688: R_X86_64_PC32	record_function+0xfffffffffffffffc
    168c:	48 89 df             	mov    %rbx,%rdi
    168f:	e8 00 00 00 00       	callq  1694 <MICRODRIVERS__MODIF_pci_unregister_driver+0x24>
			1690: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1694:	41 5a                	pop    %r10
    1696:	5b                   	pop    %rbx
    1697:	c9                   	leaveq 
    1698:	c3                   	retq   

0000000000001699 <MICRODRIVERS__MODIF_pci_request_regions>:
    1699:	55                   	push   %rbp
    169a:	48 89 e5             	mov    %rsp,%rbp
    169d:	53                   	push   %rbx
    169e:	48 89 fb             	mov    %rdi,%rbx
    16a1:	48 81 c3 00 03 00 00 	add    $0x300,%rbx
    16a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16ab: R_X86_64_32S	.rodata.str1.1+0x789
    16af:	48 83 ec 08          	sub    $0x8,%rsp
    16b3:	e8 00 00 00 00       	callq  16b8 <MICRODRIVERS__MODIF_pci_request_regions+0x1f>
			16b4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    16b8:	48 89 df             	mov    %rbx,%rdi
    16bb:	e8 00 00 00 00       	callq  16c0 <MICRODRIVERS__MODIF_pci_request_regions+0x27>
			16bc: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    16c0:	41 5b                	pop    %r11
    16c2:	5b                   	pop    %rbx
    16c3:	c9                   	leaveq 
    16c4:	31 c0                	xor    %eax,%eax
    16c6:	c3                   	retq   

00000000000016c7 <MICRODRIVERS__MODIF___pci_register_driver>:
    16c7:	55                   	push   %rbp
    16c8:	48 89 e5             	mov    %rsp,%rbp
    16cb:	53                   	push   %rbx
    16cc:	48 89 fb             	mov    %rdi,%rbx
    16cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16d2: R_X86_64_32S	.rodata.str1.1+0x7b1
    16d6:	48 83 ec 08          	sub    $0x8,%rsp
    16da:	e8 00 00 00 00       	callq  16df <MICRODRIVERS__MODIF___pci_register_driver+0x18>
			16db: R_X86_64_PC32	record_function+0xfffffffffffffffc
    16df:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
    16e3:	e8 00 00 00 00       	callq  16e8 <MICRODRIVERS__MODIF___pci_register_driver+0x21>
			16e4: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    16e8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    16ec:	e8 00 00 00 00       	callq  16f1 <MICRODRIVERS__MODIF___pci_register_driver+0x2a>
			16ed: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    16f1:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    16f5:	e8 00 00 00 00       	callq  16fa <MICRODRIVERS__MODIF___pci_register_driver+0x33>
			16f6: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    16fa:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
    16fe:	e8 00 00 00 00       	callq  1703 <MICRODRIVERS__MODIF___pci_register_driver+0x3c>
			16ff: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1703:	48 8d bb c0 00 00 00 	lea    0xc0(%rbx),%rdi
    170a:	e8 00 00 00 00       	callq  170f <MICRODRIVERS__MODIF___pci_register_driver+0x48>
			170b: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    170f:	48 8d bb f0 00 00 00 	lea    0xf0(%rbx),%rdi
    1716:	e8 00 00 00 00       	callq  171b <MICRODRIVERS__MODIF___pci_register_driver+0x54>
			1717: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    171b:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
    171f:	e8 00 00 00 00       	callq  1724 <MICRODRIVERS__MODIF___pci_register_driver+0x5d>
			1720: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1724:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    1728:	e8 00 00 00 00       	callq  172d <MICRODRIVERS__MODIF___pci_register_driver+0x66>
			1729: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    172d:	5b                   	pop    %rbx
    172e:	5b                   	pop    %rbx
    172f:	c9                   	leaveq 
    1730:	31 c0                	xor    %eax,%eax
    1732:	c3                   	retq   

0000000000001733 <MICRODRIVERS__MODIF_pci_bus_read_config_word>:
    1733:	55                   	push   %rbp
    1734:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1737: R_X86_64_32S	.rodata.str1.1+0x7db
    173b:	48 89 e5             	mov    %rsp,%rbp
    173e:	53                   	push   %rbx
    173f:	48 89 cb             	mov    %rcx,%rbx
    1742:	48 83 ec 08          	sub    $0x8,%rsp
    1746:	e8 00 00 00 00       	callq  174b <MICRODRIVERS__MODIF_pci_bus_read_config_word+0x18>
			1747: R_X86_64_PC32	record_function+0xfffffffffffffffc
    174b:	48 89 df             	mov    %rbx,%rdi
    174e:	e8 00 00 00 00       	callq  1753 <MICRODRIVERS__MODIF_pci_bus_read_config_word+0x20>
			174f: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1753:	5a                   	pop    %rdx
    1754:	5b                   	pop    %rbx
    1755:	c9                   	leaveq 
    1756:	31 c0                	xor    %eax,%eax
    1758:	c3                   	retq   

0000000000001759 <MICRODRIVERS__MODIF_pci_bus_read_config_byte>:
    1759:	55                   	push   %rbp
    175a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			175d: R_X86_64_32S	.rodata.str1.1+0x808
    1761:	48 89 e5             	mov    %rsp,%rbp
    1764:	53                   	push   %rbx
    1765:	48 89 cb             	mov    %rcx,%rbx
    1768:	48 83 ec 08          	sub    $0x8,%rsp
    176c:	e8 00 00 00 00       	callq  1771 <MICRODRIVERS__MODIF_pci_bus_read_config_byte+0x18>
			176d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1771:	48 89 df             	mov    %rbx,%rdi
    1774:	e8 00 00 00 00       	callq  1779 <MICRODRIVERS__MODIF_pci_bus_read_config_byte+0x20>
			1775: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1779:	59                   	pop    %rcx
    177a:	5b                   	pop    %rbx
    177b:	c9                   	leaveq 
    177c:	31 c0                	xor    %eax,%eax
    177e:	c3                   	retq   

000000000000177f <MICRODRIVERS__MODIF___netif_schedule>:
    177f:	55                   	push   %rbp
    1780:	48 89 e5             	mov    %rsp,%rbp
    1783:	53                   	push   %rbx
    1784:	48 89 fb             	mov    %rdi,%rbx
    1787:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			178a: R_X86_64_32S	.rodata.str1.1+0x835
    178e:	48 83 ec 08          	sub    $0x8,%rsp
    1792:	e8 00 00 00 00       	callq  1797 <MICRODRIVERS__MODIF___netif_schedule+0x18>
			1793: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1797:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    179b:	e8 00 00 00 00       	callq  17a0 <MICRODRIVERS__MODIF___netif_schedule+0x21>
			179c: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    17a0:	5e                   	pop    %rsi
    17a1:	5b                   	pop    %rbx
    17a2:	c9                   	leaveq 
    17a3:	c3                   	retq   

00000000000017a4 <MICRODRIVERS__MODIF_netif_device_detach>:
    17a4:	55                   	push   %rbp
    17a5:	48 89 e5             	mov    %rsp,%rbp
    17a8:	53                   	push   %rbx
    17a9:	48 89 fb             	mov    %rdi,%rbx
    17ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17af: R_X86_64_32S	.rodata.str1.1+0x85a
    17b3:	48 83 ec 08          	sub    $0x8,%rsp
    17b7:	e8 00 00 00 00       	callq  17bc <MICRODRIVERS__MODIF_netif_device_detach+0x18>
			17b8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    17bc:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    17c0:	e8 00 00 00 00       	callq  17c5 <MICRODRIVERS__MODIF_netif_device_detach+0x21>
			17c1: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    17c5:	5f                   	pop    %rdi
    17c6:	5b                   	pop    %rbx
    17c7:	c9                   	leaveq 
    17c8:	c3                   	retq   

00000000000017c9 <MICRODRIVERS__MODIF_netif_device_attach>:
    17c9:	55                   	push   %rbp
    17ca:	48 89 e5             	mov    %rsp,%rbp
    17cd:	53                   	push   %rbx
    17ce:	48 89 fb             	mov    %rdi,%rbx
    17d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17d4: R_X86_64_32S	.rodata.str1.1+0x882
    17d8:	48 83 ec 08          	sub    $0x8,%rsp
    17dc:	e8 00 00 00 00       	callq  17e1 <MICRODRIVERS__MODIF_netif_device_attach+0x18>
			17dd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    17e1:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    17e5:	e8 00 00 00 00       	callq  17ea <MICRODRIVERS__MODIF_netif_device_attach+0x21>
			17e6: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    17ea:	41 58                	pop    %r8
    17ec:	5b                   	pop    %rbx
    17ed:	c9                   	leaveq 
    17ee:	c3                   	retq   

00000000000017ef <MICRODRIVERS__MODIF_netif_carrier_off>:
    17ef:	55                   	push   %rbp
    17f0:	48 89 e5             	mov    %rsp,%rbp
    17f3:	53                   	push   %rbx
    17f4:	48 89 fb             	mov    %rdi,%rbx
    17f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17fa: R_X86_64_32S	.rodata.str1.1+0x8aa
    17fe:	48 83 ec 08          	sub    $0x8,%rsp
    1802:	e8 00 00 00 00       	callq  1807 <MICRODRIVERS__MODIF_netif_carrier_off+0x18>
			1803: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1807:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
    180b:	e8 00 00 00 00       	callq  1810 <MICRODRIVERS__MODIF_netif_carrier_off+0x21>
			180c: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1810:	41 59                	pop    %r9
    1812:	5b                   	pop    %rbx
    1813:	c9                   	leaveq 
    1814:	c3                   	retq   

0000000000001815 <MICRODRIVERS__MODIF_mii_nway_restart>:
    1815:	55                   	push   %rbp
    1816:	48 89 e5             	mov    %rsp,%rbp
    1819:	53                   	push   %rbx
    181a:	48 89 fb             	mov    %rdi,%rbx
    181d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1820: R_X86_64_32S	.rodata.str1.1+0x8d0
    1824:	48 83 ec 08          	sub    $0x8,%rsp
    1828:	e8 00 00 00 00       	callq  182d <MICRODRIVERS__MODIF_mii_nway_restart+0x18>
			1829: R_X86_64_PC32	record_function+0xfffffffffffffffc
    182d:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    1831:	e8 00 00 00 00       	callq  1836 <MICRODRIVERS__MODIF_mii_nway_restart+0x21>
			1832: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1836:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    183a:	e8 00 00 00 00       	callq  183f <MICRODRIVERS__MODIF_mii_nway_restart+0x2a>
			183b: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    183f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    1843:	e8 00 00 00 00       	callq  1848 <MICRODRIVERS__MODIF_mii_nway_restart+0x33>
			1844: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1848:	48 63 3b             	movslq (%rbx),%rdi
    184b:	e8 00 00 00 00       	callq  1850 <MICRODRIVERS__MODIF_mii_nway_restart+0x3b>
			184c: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1850:	41 5a                	pop    %r10
    1852:	5b                   	pop    %rbx
    1853:	c9                   	leaveq 
    1854:	31 c0                	xor    %eax,%eax
    1856:	c3                   	retq   

0000000000001857 <MICRODRIVERS__MODIF_mii_ethtool_sset>:
    1857:	55                   	push   %rbp
    1858:	48 89 e5             	mov    %rsp,%rbp
    185b:	53                   	push   %rbx
    185c:	48 89 fb             	mov    %rdi,%rbx
    185f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1862: R_X86_64_32S	.rodata.str1.1+0x8f5
    1866:	48 83 ec 08          	sub    $0x8,%rsp
    186a:	e8 00 00 00 00       	callq  186f <MICRODRIVERS__MODIF_mii_ethtool_sset+0x18>
			186b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    186f:	48 63 7b 04          	movslq 0x4(%rbx),%rdi
    1873:	e8 00 00 00 00       	callq  1878 <MICRODRIVERS__MODIF_mii_ethtool_sset+0x21>
			1874: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1878:	40 8a 7b 10          	mov    0x10(%rbx),%dil
    187c:	40 d0 ef             	shr    %dil
    187f:	83 e7 01             	and    $0x1,%edi
    1882:	e8 00 00 00 00       	callq  1887 <MICRODRIVERS__MODIF_mii_ethtool_sset+0x30>
			1883: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1887:	41 5b                	pop    %r11
    1889:	5b                   	pop    %rbx
    188a:	c9                   	leaveq 
    188b:	31 c0                	xor    %eax,%eax
    188d:	c3                   	retq   

000000000000188e <MICRODRIVERS__MODIF_mii_ethtool_gset>:
    188e:	55                   	push   %rbp
    188f:	48 89 e5             	mov    %rsp,%rbp
    1892:	53                   	push   %rbx
    1893:	48 89 fb             	mov    %rdi,%rbx
    1896:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1899: R_X86_64_32S	.rodata.str1.1+0x91a
    189d:	48 83 ec 08          	sub    $0x8,%rsp
    18a1:	e8 00 00 00 00       	callq  18a6 <MICRODRIVERS__MODIF_mii_ethtool_gset+0x18>
			18a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    18a6:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    18aa:	e8 00 00 00 00       	callq  18af <MICRODRIVERS__MODIF_mii_ethtool_gset+0x21>
			18ab: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    18af:	48 63 3b             	movslq (%rbx),%rdi
    18b2:	e8 00 00 00 00       	callq  18b7 <MICRODRIVERS__MODIF_mii_ethtool_gset+0x29>
			18b3: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    18b7:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    18bb:	e8 00 00 00 00       	callq  18c0 <MICRODRIVERS__MODIF_mii_ethtool_gset+0x32>
			18bc: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    18c0:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    18c4:	e8 00 00 00 00       	callq  18c9 <MICRODRIVERS__MODIF_mii_ethtool_gset+0x3b>
			18c5: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    18c9:	5b                   	pop    %rbx
    18ca:	5b                   	pop    %rbx
    18cb:	c9                   	leaveq 
    18cc:	31 c0                	xor    %eax,%eax
    18ce:	c3                   	retq   

00000000000018cf <MICRODRIVERS__MODIF_mii_check_media>:
    18cf:	55                   	push   %rbp
    18d0:	48 89 e5             	mov    %rsp,%rbp
    18d3:	53                   	push   %rbx
    18d4:	48 89 fb             	mov    %rdi,%rbx
    18d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18da: R_X86_64_32S	.rodata.str1.1+0x93f
    18de:	48 83 ec 08          	sub    $0x8,%rsp
    18e2:	e8 00 00 00 00       	callq  18e7 <MICRODRIVERS__MODIF_mii_check_media+0x18>
			18e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    18e7:	40 b7 01             	mov    $0x1,%dil
    18ea:	23 7b 10             	and    0x10(%rbx),%edi
    18ed:	40 0f b6 ff          	movzbl %dil,%edi
    18f1:	e8 00 00 00 00       	callq  18f6 <MICRODRIVERS__MODIF_mii_check_media+0x27>
			18f2: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    18f6:	48 63 7b 04          	movslq 0x4(%rbx),%rdi
    18fa:	e8 00 00 00 00       	callq  18ff <MICRODRIVERS__MODIF_mii_check_media+0x30>
			18fb: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    18ff:	48 8b 43 18          	mov    0x18(%rbx),%rax
    1903:	48 8b 78 48          	mov    0x48(%rax),%rdi
    1907:	e8 00 00 00 00       	callq  190c <MICRODRIVERS__MODIF_mii_check_media+0x3d>
			1908: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    190c:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    1910:	e8 00 00 00 00       	callq  1915 <MICRODRIVERS__MODIF_mii_check_media+0x46>
			1911: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1915:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    1919:	e8 00 00 00 00       	callq  191e <MICRODRIVERS__MODIF_mii_check_media+0x4f>
			191a: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    191e:	48 63 3b             	movslq (%rbx),%rdi
    1921:	e8 00 00 00 00       	callq  1926 <MICRODRIVERS__MODIF_mii_check_media+0x57>
			1922: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1926:	5a                   	pop    %rdx
    1927:	5b                   	pop    %rbx
    1928:	c9                   	leaveq 
    1929:	31 c0                	xor    %eax,%eax
    192b:	c3                   	retq   

000000000000192c <MICRODRIVERS__MODIF_generic_mii_ioctl>:
    192c:	55                   	push   %rbp
    192d:	48 89 e5             	mov    %rsp,%rbp
    1930:	53                   	push   %rbx
    1931:	48 89 fb             	mov    %rdi,%rbx
    1934:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1937: R_X86_64_32S	.rodata.str1.1+0x963
    193b:	48 83 ec 08          	sub    $0x8,%rsp
    193f:	e8 00 00 00 00       	callq  1944 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x18>
			1940: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1944:	48 63 3b             	movslq (%rbx),%rdi
    1947:	e8 00 00 00 00       	callq  194c <MICRODRIVERS__MODIF_generic_mii_ioctl+0x20>
			1948: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    194c:	48 63 7b 04          	movslq 0x4(%rbx),%rdi
    1950:	e8 00 00 00 00       	callq  1955 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x29>
			1951: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1955:	48 63 7b 08          	movslq 0x8(%rbx),%rdi
    1959:	e8 00 00 00 00       	callq  195e <MICRODRIVERS__MODIF_generic_mii_ioctl+0x32>
			195a: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    195e:	48 63 7b 0c          	movslq 0xc(%rbx),%rdi
    1962:	e8 00 00 00 00       	callq  1967 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x3b>
			1963: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1967:	40 b7 01             	mov    $0x1,%dil
    196a:	23 7b 10             	and    0x10(%rbx),%edi
    196d:	40 0f b6 ff          	movzbl %dil,%edi
    1971:	e8 00 00 00 00       	callq  1976 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x4a>
			1972: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1976:	40 8a 7b 10          	mov    0x10(%rbx),%dil
    197a:	40 d0 ef             	shr    %dil
    197d:	83 e7 01             	and    $0x1,%edi
    1980:	e8 00 00 00 00       	callq  1985 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x59>
			1981: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1985:	40 8a 7b 10          	mov    0x10(%rbx),%dil
    1989:	40 c0 ef 02          	shr    $0x2,%dil
    198d:	83 e7 01             	and    $0x1,%edi
    1990:	e8 00 00 00 00       	callq  1995 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x69>
			1991: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1995:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    1999:	e8 00 00 00 00       	callq  199e <MICRODRIVERS__MODIF_generic_mii_ioctl+0x72>
			199a: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    199e:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    19a2:	e8 00 00 00 00       	callq  19a7 <MICRODRIVERS__MODIF_generic_mii_ioctl+0x7b>
			19a3: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    19a7:	59                   	pop    %rcx
    19a8:	5b                   	pop    %rbx
    19a9:	c9                   	leaveq 
    19aa:	31 c0                	xor    %eax,%eax
    19ac:	c3                   	retq   

00000000000019ad <MICRODRIVERS__MODIF_free_netdev>:
    19ad:	55                   	push   %rbp
    19ae:	48 89 e5             	mov    %rsp,%rbp
    19b1:	53                   	push   %rbx
    19b2:	48 89 fb             	mov    %rdi,%rbx
    19b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19b8: R_X86_64_32S	.rodata.str1.1+0x989
    19bc:	48 83 ec 08          	sub    $0x8,%rsp
    19c0:	e8 00 00 00 00       	callq  19c5 <MICRODRIVERS__MODIF_free_netdev+0x18>
			19c1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    19c5:	8b bb 30 04 00 00    	mov    0x430(%rbx),%edi
    19cb:	e8 00 00 00 00       	callq  19d0 <MICRODRIVERS__MODIF_free_netdev+0x23>
			19cc: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    19d0:	5e                   	pop    %rsi
    19d1:	5b                   	pop    %rbx
    19d2:	c9                   	leaveq 
    19d3:	c3                   	retq   

00000000000019d4 <MICRODRIVERS__MODIF_eth_type_trans>:
    19d4:	55                   	push   %rbp
    19d5:	48 89 e5             	mov    %rsp,%rbp
    19d8:	53                   	push   %rbx
    19d9:	48 89 fb             	mov    %rdi,%rbx
    19dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19df: R_X86_64_32S	.rodata.str1.1+0x9a9
    19e3:	48 83 ec 08          	sub    $0x8,%rsp
    19e7:	e8 00 00 00 00       	callq  19ec <MICRODRIVERS__MODIF_eth_type_trans+0x18>
			19e8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    19ec:	40 b7 07             	mov    $0x7,%dil
    19ef:	40 22 7b 7d          	and    0x7d(%rbx),%dil
    19f3:	40 0f b6 ff          	movzbl %dil,%edi
    19f7:	e8 00 00 00 00       	callq  19fc <MICRODRIVERS__MODIF_eth_type_trans+0x28>
			19f8: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    19fc:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
    1a03:	e8 00 00 00 00       	callq  1a08 <MICRODRIVERS__MODIF_eth_type_trans+0x34>
			1a04: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a08:	8b 7b 68             	mov    0x68(%rbx),%edi
    1a0b:	e8 00 00 00 00       	callq  1a10 <MICRODRIVERS__MODIF_eth_type_trans+0x3c>
			1a0c: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a10:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
    1a17:	e8 00 00 00 00       	callq  1a1c <MICRODRIVERS__MODIF_eth_type_trans+0x48>
			1a18: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a1c:	5f                   	pop    %rdi
    1a1d:	5b                   	pop    %rbx
    1a1e:	c9                   	leaveq 
    1a1f:	31 c0                	xor    %eax,%eax
    1a21:	c3                   	retq   

0000000000001a22 <MICRODRIVERS__MODIF_dma_alloc_coherent>:
    1a22:	55                   	push   %rbp
    1a23:	48 89 e5             	mov    %rsp,%rbp
    1a26:	53                   	push   %rbx
    1a27:	48 89 fb             	mov    %rdi,%rbx
    1a2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a2d: R_X86_64_32S	.rodata.str1.1+0x9cc
    1a31:	48 83 ec 08          	sub    $0x8,%rsp
    1a35:	e8 00 00 00 00       	callq  1a3a <MICRODRIVERS__MODIF_dma_alloc_coherent+0x18>
			1a36: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1a3a:	48 8b bb b8 01 00 00 	mov    0x1b8(%rbx),%rdi
    1a41:	e8 00 00 00 00       	callq  1a46 <MICRODRIVERS__MODIF_dma_alloc_coherent+0x24>
			1a42: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a46:	41 58                	pop    %r8
    1a48:	5b                   	pop    %rbx
    1a49:	c9                   	leaveq 
    1a4a:	31 c0                	xor    %eax,%eax
    1a4c:	c3                   	retq   

0000000000001a4d <MICRODRIVERS__MODIF___alloc_skb>:
    1a4d:	55                   	push   %rbp
    1a4e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a51: R_X86_64_32S	.rodata.str1.1+0x9f3
    1a55:	48 89 e5             	mov    %rsp,%rbp
    1a58:	53                   	push   %rbx
    1a59:	48 83 ec 08          	sub    $0x8,%rsp
    1a5d:	e8 00 00 00 00       	callq  1a62 <MICRODRIVERS__MODIF___alloc_skb+0x15>
			1a5e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1a62:	8b bb d0 00 00 00    	mov    0xd0(%rbx),%edi
    1a68:	e8 00 00 00 00       	callq  1a6d <MICRODRIVERS__MODIF___alloc_skb+0x20>
			1a69: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a6d:	48 8b bb c0 00 00 00 	mov    0xc0(%rbx),%rdi
    1a74:	e8 00 00 00 00       	callq  1a79 <MICRODRIVERS__MODIF___alloc_skb+0x2c>
			1a75: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a79:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
    1a80:	e8 00 00 00 00       	callq  1a85 <MICRODRIVERS__MODIF___alloc_skb+0x38>
			1a81: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a85:	8b bb b4 00 00 00    	mov    0xb4(%rbx),%edi
    1a8b:	e8 00 00 00 00       	callq  1a90 <MICRODRIVERS__MODIF___alloc_skb+0x43>
			1a8c: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a90:	8b bb b8 00 00 00    	mov    0xb8(%rbx),%edi
    1a96:	e8 00 00 00 00       	callq  1a9b <MICRODRIVERS__MODIF___alloc_skb+0x4e>
			1a97: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1a9b:	41 59                	pop    %r9
    1a9d:	48 89 d8             	mov    %rbx,%rax
    1aa0:	5b                   	pop    %rbx
    1aa1:	c9                   	leaveq 
    1aa2:	c3                   	retq   

0000000000001aa3 <MICRODRIVERS__MODIF_alloc_etherdev_mq>:
    1aa3:	55                   	push   %rbp
    1aa4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aa7: R_X86_64_32S	.rodata.str1.1+0xa13
    1aab:	48 89 e5             	mov    %rsp,%rbp
    1aae:	53                   	push   %rbx
    1aaf:	48 83 ec 08          	sub    $0x8,%rsp
    1ab3:	e8 00 00 00 00       	callq  1ab8 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x15>
			1ab4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1ab8:	48 8b bb 78 07 00 00 	mov    0x778(%rbx),%rdi
    1abf:	e8 00 00 00 00       	callq  1ac4 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x21>
			1ac0: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1ac4:	48 8b bb 58 07 00 00 	mov    0x758(%rbx),%rdi
    1acb:	e8 00 00 00 00       	callq  1ad0 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x2d>
			1acc: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1ad0:	0f b7 bb 70 01 00 00 	movzwl 0x170(%rbx),%edi
    1ad7:	e8 00 00 00 00       	callq  1adc <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x39>
			1ad8: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1adc:	0f b7 bb 72 01 00 00 	movzwl 0x172(%rbx),%edi
    1ae3:	e8 00 00 00 00       	callq  1ae8 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x45>
			1ae4: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1ae8:	8b bb 6c 01 00 00    	mov    0x16c(%rbx),%edi
    1aee:	e8 00 00 00 00       	callq  1af3 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x50>
			1aef: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1af3:	0f b6 bb a0 01 00 00 	movzbl 0x1a0(%rbx),%edi
    1afa:	e8 00 00 00 00       	callq  1aff <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x5c>
			1afb: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1aff:	48 8b bb 10 03 00 00 	mov    0x310(%rbx),%rdi
    1b06:	e8 00 00 00 00       	callq  1b0b <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x68>
			1b07: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1b0b:	8b bb 60 01 00 00    	mov    0x160(%rbx),%edi
    1b11:	e8 00 00 00 00       	callq  1b16 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x73>
			1b12: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1b16:	48 8d bb 60 02 00 00 	lea    0x260(%rbx),%rdi
    1b1d:	e8 00 00 00 00       	callq  1b22 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x7f>
			1b1e: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1b22:	48 89 df             	mov    %rbx,%rdi
    1b25:	e8 00 00 00 00       	callq  1b2a <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x87>
			1b26: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1b2a:	48 8b bb 00 03 00 00 	mov    0x300(%rbx),%rdi
    1b31:	e8 00 00 00 00       	callq  1b36 <MICRODRIVERS__MODIF_alloc_etherdev_mq+0x93>
			1b32: R_X86_64_PC32	MICRODRIVERS__DUMMY+0xfffffffffffffffc
    1b36:	41 5a                	pop    %r10
    1b38:	48 89 d8             	mov    %rbx,%rax
    1b3b:	5b                   	pop    %rbx
    1b3c:	c9                   	leaveq 
    1b3d:	c3                   	retq   

0000000000001b3e <e1000_wol_exclusion>:
    1b3e:	55                   	push   %rbp
    1b3f:	48 89 e5             	mov    %rsp,%rbp
    1b42:	41 55                	push   %r13
    1b44:	49 89 f5             	mov    %rsi,%r13
    1b47:	41 54                	push   %r12
    1b49:	49 89 fc             	mov    %rdi,%r12
    1b4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b4f: R_X86_64_32S	.rodata.str1.1+0xa39
    1b53:	53                   	push   %rbx
    1b54:	48 83 ec 08          	sub    $0x8,%rsp
    1b58:	e8 00 00 00 00       	callq  1b5d <e1000_wol_exclusion+0x1f>
			1b59: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1b5d:	49 8d 94 24 b8 03 00 	lea    0x3b8(%r12),%rdx
    1b64:	00 
    1b65:	66 8b 82 e6 00 00 00 	mov    0xe6(%rdx),%ax
    1b6c:	66 3d 00 10          	cmp    $0x1000,%ax
    1b70:	0f 84 e1 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1b76:	66 3d 01 10          	cmp    $0x1001,%ax
    1b7a:	0f 84 d7 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1b80:	66 3d 04 10          	cmp    $0x1004,%ax
    1b84:	0f 84 cd 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1b8a:	66 3d 09 10          	cmp    $0x1009,%ax
    1b8e:	0f 84 c3 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1b94:	66 3d 1d 10          	cmp    $0x101d,%ax
    1b98:	0f 84 b9 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1b9e:	66 3d 11 10          	cmp    $0x1011,%ax
    1ba2:	0f 84 af 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1ba8:	66 3d 0f 10          	cmp    $0x100f,%ax
    1bac:	0f 84 a5 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1bb2:	66 3d 99 10          	cmp    $0x1099,%ax
    1bb6:	0f 84 9b 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1bbc:	66 3d 8a 10          	cmp    $0x108a,%ax
    1bc0:	0f 84 91 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1bc6:	66 3d da 10          	cmp    $0x10da,%ax
    1bca:	0f 84 87 00 00 00    	je     1c57 <e1000_wol_exclusion+0x119>
    1bd0:	66 3d 12 10          	cmp    $0x1012,%ax
    1bd4:	74 38                	je     1c0e <e1000_wol_exclusion+0xd0>
    1bd6:	66 3d 7a 10          	cmp    $0x107a,%ax
    1bda:	74 32                	je     1c0e <e1000_wol_exclusion+0xd0>
    1bdc:	66 3d 5f 10          	cmp    $0x105f,%ax
    1be0:	74 2c                	je     1c0e <e1000_wol_exclusion+0xd0>
    1be2:	66 3d 60 10          	cmp    $0x1060,%ax
    1be6:	74 26                	je     1c0e <e1000_wol_exclusion+0xd0>
    1be8:	66 3d 5e 10          	cmp    $0x105e,%ax
    1bec:	74 20                	je     1c0e <e1000_wol_exclusion+0xd0>
    1bee:	66 3d a4 10          	cmp    $0x10a4,%ax
    1bf2:	74 32                	je     1c26 <e1000_wol_exclusion+0xe8>
    1bf4:	66 3d a5 10          	cmp    $0x10a5,%ax
    1bf8:	74 2c                	je     1c26 <e1000_wol_exclusion+0xe8>
    1bfa:	66 3d bc 10          	cmp    $0x10bc,%ax
    1bfe:	74 26                	je     1c26 <e1000_wol_exclusion+0xe8>
    1c00:	66 3d d5 10          	cmp    $0x10d5,%ax
    1c04:	74 20                	je     1c26 <e1000_wol_exclusion+0xe8>
    1c06:	66 3d b5 10          	cmp    $0x10b5,%ax
    1c0a:	75 25                	jne    1c31 <e1000_wol_exclusion+0xf3>
    1c0c:	eb 18                	jmp    1c26 <e1000_wol_exclusion+0xe8>
    1c0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c11: R_X86_64_32S	.rodata.str1.1+0xae
    1c15:	48 8b 1a             	mov    (%rdx),%rbx
    1c18:	e8 00 00 00 00       	callq  1c1d <e1000_wol_exclusion+0xdf>
			1c19: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1c1d:	8b 43 08             	mov    0x8(%rbx),%eax
    1c20:	a8 04                	test   $0x4,%al
    1c22:	74 42                	je     1c66 <e1000_wol_exclusion+0x128>
    1c24:	eb 31                	jmp    1c57 <e1000_wol_exclusion+0x119>
    1c26:	41 80 bc 24 c7 07 00 	cmpb   $0x0,0x7c7(%r12)
    1c2d:	00 00 
    1c2f:	eb 24                	jmp    1c55 <e1000_wol_exclusion+0x117>
    1c31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c34: R_X86_64_32S	.rodata.str1.1+0xae
    1c38:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    1c3f:	00 
    1c40:	e8 00 00 00 00       	callq  1c45 <e1000_wol_exclusion+0x107>
			1c41: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1c45:	8b 43 08             	mov    0x8(%rbx),%eax
    1c48:	a8 04                	test   $0x4,%al
    1c4a:	74 1a                	je     1c66 <e1000_wol_exclusion+0x128>
    1c4c:	41 83 bc 24 d0 07 00 	cmpl   $0x0,0x7d0(%r12)
    1c53:	00 00 
    1c55:	75 0f                	jne    1c66 <e1000_wol_exclusion+0x128>
    1c57:	b8 01 00 00 00       	mov    $0x1,%eax
    1c5c:	41 c7 45 04 00 00 00 	movl   $0x0,0x4(%r13)
    1c63:	00 
    1c64:	eb 02                	jmp    1c68 <e1000_wol_exclusion+0x12a>
    1c66:	31 c0                	xor    %eax,%eax
    1c68:	41 5b                	pop    %r11
    1c6a:	5b                   	pop    %rbx
    1c6b:	41 5c                	pop    %r12
    1c6d:	41 5d                	pop    %r13
    1c6f:	c9                   	leaveq 
    1c70:	c3                   	retq   

0000000000001c71 <e1000_get_sset_count>:
    1c71:	55                   	push   %rbp
    1c72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c75: R_X86_64_32S	.rodata.str1.1+0xa4d
    1c79:	48 89 e5             	mov    %rsp,%rbp
    1c7c:	53                   	push   %rbx
    1c7d:	89 f3                	mov    %esi,%ebx
    1c7f:	48 83 ec 08          	sub    $0x8,%rsp
    1c83:	e8 00 00 00 00       	callq  1c88 <e1000_get_sset_count+0x17>
			1c84: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1c88:	85 db                	test   %ebx,%ebx
    1c8a:	ba 05 00 00 00       	mov    $0x5,%edx
    1c8f:	74 0c                	je     1c9d <e1000_get_sset_count+0x2c>
    1c91:	b2 2f                	mov    $0x2f,%dl
    1c93:	ff cb                	dec    %ebx
    1c95:	b8 a1 ff ff ff       	mov    $0xffffffa1,%eax
    1c9a:	0f 45 d0             	cmovne %eax,%edx
    1c9d:	5b                   	pop    %rbx
    1c9e:	5b                   	pop    %rbx
    1c9f:	c9                   	leaveq 
    1ca0:	89 d0                	mov    %edx,%eax
    1ca2:	c3                   	retq   

0000000000001ca3 <e1000_get_eeprom_len>:
    1ca3:	55                   	push   %rbp
    1ca4:	48 89 e5             	mov    %rsp,%rbp
    1ca7:	53                   	push   %rbx
    1ca8:	48 89 fb             	mov    %rdi,%rbx
    1cab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cae: R_X86_64_32S	.rodata.str1.1+0xa62
    1cb2:	48 83 ec 08          	sub    $0x8,%rsp
    1cb6:	e8 00 00 00 00       	callq  1cbb <e1000_get_eeprom_len+0x18>
			1cb7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1cbb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cbe: R_X86_64_32S	.rodata.str1.1+0x1be
    1cc2:	e8 00 00 00 00       	callq  1cc7 <e1000_get_eeprom_len+0x24>
			1cc3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1cc7:	0f b7 83 04 0c 00 00 	movzwl 0xc04(%rbx),%eax
    1cce:	5a                   	pop    %rdx
    1ccf:	5b                   	pop    %rbx
    1cd0:	c9                   	leaveq 
    1cd1:	01 c0                	add    %eax,%eax
    1cd3:	c3                   	retq   

0000000000001cd4 <e1000_get_regs_len>:
    1cd4:	55                   	push   %rbp
    1cd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cd8: R_X86_64_32S	.rodata.str1.1+0xa77
    1cdc:	48 89 e5             	mov    %rsp,%rbp
    1cdf:	e8 00 00 00 00       	callq  1ce4 <e1000_get_regs_len+0x10>
			1ce0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1ce4:	c9                   	leaveq 
    1ce5:	b8 80 00 00 00       	mov    $0x80,%eax
    1cea:	c3                   	retq   

0000000000001ceb <e1000_get_tx_csum>:
    1ceb:	55                   	push   %rbp
    1cec:	48 89 e5             	mov    %rsp,%rbp
    1cef:	53                   	push   %rbx
    1cf0:	48 89 fb             	mov    %rdi,%rbx
    1cf3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cf6: R_X86_64_32S	.rodata.str1.1+0xa8a
    1cfa:	48 83 ec 08          	sub    $0x8,%rsp
    1cfe:	e8 00 00 00 00       	callq  1d03 <e1000_get_tx_csum+0x18>
			1cff: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1d03:	48 8b 43 70          	mov    0x70(%rbx),%rax
    1d07:	59                   	pop    %rcx
    1d08:	5b                   	pop    %rbx
    1d09:	c9                   	leaveq 
    1d0a:	48 c1 e8 03          	shr    $0x3,%rax
    1d0e:	83 e0 01             	and    $0x1,%eax
    1d11:	c3                   	retq   

0000000000001d12 <register_globals>:
    1d12:	55                   	push   %rbp
    1d13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d16: R_X86_64_32S	.rodata.str1.1+0xa9c
    1d1a:	48 89 e5             	mov    %rsp,%rbp
    1d1d:	e8 00 00 00 00       	callq  1d22 <register_globals+0x10>
			1d1e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1d22:	be 6f 06 00 00       	mov    $0x66f,%esi
    1d27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d2a: R_X86_64_32S	str_163318145
    1d2e:	e8 00 00 00 00       	callq  1d33 <register_globals+0x21>
			1d2f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d33:	be 4b 04 00 00       	mov    $0x44b,%esi
    1d38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d3b: R_X86_64_32S	.data+0x3da50
    1d3f:	e8 00 00 00 00       	callq  1d44 <register_globals+0x32>
			1d40: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d44:	be 5b 06 00 00       	mov    $0x65b,%esi
    1d49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d4c: R_X86_64_32S	str_11623331
    1d50:	e8 00 00 00 00       	callq  1d55 <register_globals+0x43>
			1d51: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d55:	be 79 06 00 00       	mov    $0x679,%esi
    1d5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d5d: R_X86_64_32S	str_184431524
    1d61:	e8 00 00 00 00       	callq  1d66 <register_globals+0x54>
			1d62: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d66:	be 00 07 00 00       	mov    $0x700,%esi
    1d6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d6e: R_X86_64_32S	str_788695754
    1d72:	e8 00 00 00 00       	callq  1d77 <register_globals+0x65>
			1d73: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d77:	be 69 06 00 00       	mov    $0x669,%esi
    1d7c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d7f: R_X86_64_32S	str_142369141
    1d83:	e8 00 00 00 00       	callq  1d88 <register_globals+0x76>
			1d84: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d88:	be ae 06 00 00       	mov    $0x6ae,%esi
    1d8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d90: R_X86_64_32S	str_33678196
    1d94:	e8 00 00 00 00       	callq  1d99 <register_globals+0x87>
			1d95: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1d99:	be 58 06 00 00       	mov    $0x658,%esi
    1d9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1da1: R_X86_64_32S	str_112962584
    1da5:	e8 00 00 00 00       	callq  1daa <register_globals+0x98>
			1da6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1daa:	be a5 06 00 00       	mov    $0x6a5,%esi
    1daf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1db2: R_X86_64_32S	str_307332076
    1db6:	e8 00 00 00 00       	callq  1dbb <register_globals+0xa9>
			1db7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1dbb:	be 4d 07 00 00       	mov    $0x74d,%esi
    1dc0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dc3: R_X86_64_32S	x86_dma_fallback_dev
    1dc7:	e8 00 00 00 00       	callq  1dcc <register_globals+0xba>
			1dc8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1dcc:	be 73 06 00 00       	mov    $0x673,%esi
    1dd1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dd4: R_X86_64_32S	str_168050951
    1dd8:	e8 00 00 00 00       	callq  1ddd <register_globals+0xcb>
			1dd9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1ddd:	be 0b 07 00 00       	mov    $0x70b,%esi
    1de2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1de5: R_X86_64_32S	str_83054666
    1de9:	e8 00 00 00 00       	callq  1dee <register_globals+0xdc>
			1dea: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1dee:	be e4 06 00 00       	mov    $0x6e4,%esi
    1df3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1df6: R_X86_64_32S	str_578322891
    1dfa:	e8 00 00 00 00       	callq  1dff <register_globals+0xed>
			1dfb: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1dff:	be 5c 06 00 00       	mov    $0x65c,%esi
    1e04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e07: R_X86_64_32S	str_116751172
    1e0b:	e8 00 00 00 00       	callq  1e10 <register_globals+0xfe>
			1e0c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e10:	be 2a 07 00 00       	mov    $0x72a,%esi
    1e15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e18: R_X86_64_32S	str_93842591
    1e1c:	e8 00 00 00 00       	callq  1e21 <register_globals+0x10f>
			1e1d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e21:	be f4 05 00 00       	mov    $0x5f4,%esi
    1e26:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e29: R_X86_64_32S	.bss+0x294
    1e2d:	e8 00 00 00 00       	callq  1e32 <register_globals+0x120>
			1e2e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e32:	be 80 06 00 00       	mov    $0x680,%esi
    1e37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e3a: R_X86_64_32S	str_204604463
    1e3e:	e8 00 00 00 00       	callq  1e43 <register_globals+0x131>
			1e3f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e43:	be 66 06 00 00       	mov    $0x666,%esi
    1e48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e4b: R_X86_64_32S	str_13516800
    1e4f:	e8 00 00 00 00       	callq  1e54 <register_globals+0x142>
			1e50: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e54:	be 44 04 00 00       	mov    $0x444,%esi
    1e59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e5c: R_X86_64_32S	.data+0x3d920
    1e60:	e8 00 00 00 00       	callq  1e65 <register_globals+0x153>
			1e61: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e65:	be 98 06 00 00       	mov    $0x698,%esi
    1e6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e6d: R_X86_64_32S	str_275020683
    1e71:	e8 00 00 00 00       	callq  1e76 <register_globals+0x164>
			1e72: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e76:	be c8 06 00 00       	mov    $0x6c8,%esi
    1e7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e7e: R_X86_64_32S	str_415417957
    1e82:	e8 00 00 00 00       	callq  1e87 <register_globals+0x175>
			1e83: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e87:	be 6c 06 00 00       	mov    $0x66c,%esi
    1e8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e8f: R_X86_64_32S	str_158302356
    1e93:	e8 00 00 00 00       	callq  1e98 <register_globals+0x186>
			1e94: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1e98:	be eb 06 00 00       	mov    $0x6eb,%esi
    1e9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ea0: R_X86_64_32S	str_640311072
    1ea4:	e8 00 00 00 00       	callq  1ea9 <register_globals+0x197>
			1ea5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1ea9:	be 15 07 00 00       	mov    $0x715,%esi
    1eae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1eb1: R_X86_64_32S	str_856871873
    1eb5:	e8 00 00 00 00       	callq  1eba <register_globals+0x1a8>
			1eb6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1eba:	be e2 06 00 00       	mov    $0x6e2,%esi
    1ebf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ec2: R_X86_64_32S	str_576378810
    1ec6:	e8 00 00 00 00       	callq  1ecb <register_globals+0x1b9>
			1ec7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1ecb:	be d1 06 00 00       	mov    $0x6d1,%esi
    1ed0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ed3: R_X86_64_32S	str_473371806
    1ed7:	e8 00 00 00 00       	callq  1edc <register_globals+0x1ca>
			1ed8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1edc:	be c5 04 00 00       	mov    $0x4c5,%esi
    1ee1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ee4: R_X86_64_32S	e1000_driver_name
    1ee8:	e8 00 00 00 00       	callq  1eed <register_globals+0x1db>
			1ee9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1eed:	be 12 07 00 00       	mov    $0x712,%esi
    1ef2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ef5: R_X86_64_32S	str_853479334
    1ef9:	e8 00 00 00 00       	callq  1efe <register_globals+0x1ec>
			1efa: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1efe:	be 88 06 00 00       	mov    $0x688,%esi
    1f03:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f06: R_X86_64_32S	str_22691
    1f0a:	e8 00 00 00 00       	callq  1f0f <register_globals+0x1fd>
			1f0b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f0f:	be 93 06 00 00       	mov    $0x693,%esi
    1f14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f17: R_X86_64_32S	str_250828028
    1f1b:	e8 00 00 00 00       	callq  1f20 <register_globals+0x20e>
			1f1c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f20:	be 91 06 00 00       	mov    $0x691,%esi
    1f25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f28: R_X86_64_32S	str_248420259
    1f2c:	e8 00 00 00 00       	callq  1f31 <register_globals+0x21f>
			1f2d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f31:	be 2a 04 00 00       	mov    $0x42a,%esi
    1f36:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f39: R_X86_64_32S	.devinit.data+0x3c0
    1f3d:	e8 00 00 00 00       	callq  1f42 <register_globals+0x230>
			1f3e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f42:	be 27 07 00 00       	mov    $0x727,%esi
    1f47:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f4a: R_X86_64_32S	str_929055912
    1f4e:	e8 00 00 00 00       	callq  1f53 <register_globals+0x241>
			1f4f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f53:	be bd 06 00 00       	mov    $0x6bd,%esi
    1f58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f5b: R_X86_64_32S	str_38293389
    1f5f:	e8 00 00 00 00       	callq  1f64 <register_globals+0x252>
			1f60: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f64:	be e0 06 00 00       	mov    $0x6e0,%esi
    1f69:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f6c: R_X86_64_32S	str_567637109
    1f70:	e8 00 00 00 00       	callq  1f75 <register_globals+0x263>
			1f71: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f75:	be e1 06 00 00       	mov    $0x6e1,%esi
    1f7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f7d: R_X86_64_32S	str_567637470
    1f81:	e8 00 00 00 00       	callq  1f86 <register_globals+0x274>
			1f82: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f86:	be de 06 00 00       	mov    $0x6de,%esi
    1f8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f8e: R_X86_64_32S	str_562102884
    1f92:	e8 00 00 00 00       	callq  1f97 <register_globals+0x285>
			1f93: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1f97:	be 7d 06 00 00       	mov    $0x67d,%esi
    1f9c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f9f: R_X86_64_32S	str_191256233
    1fa3:	e8 00 00 00 00       	callq  1fa8 <register_globals+0x296>
			1fa4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1fa8:	be 57 04 00 00       	mov    $0x457,%esi
    1fad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fb0: R_X86_64_32S	.data+0x3d990
    1fb4:	e8 00 00 00 00       	callq  1fb9 <register_globals+0x2a7>
			1fb5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1fb9:	be 78 06 00 00       	mov    $0x678,%esi
    1fbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fc1: R_X86_64_32S	str_176290968
    1fc5:	e8 00 00 00 00       	callq  1fca <register_globals+0x2b8>
			1fc6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1fca:	be 68 06 00 00       	mov    $0x668,%esi
    1fcf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fd2: R_X86_64_32S	str_140832182
    1fd6:	e8 00 00 00 00       	callq  1fdb <register_globals+0x2c9>
			1fd7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1fdb:	be 9e 06 00 00       	mov    $0x69e,%esi
    1fe0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fe3: R_X86_64_32S	str_291992703
    1fe7:	e8 00 00 00 00       	callq  1fec <register_globals+0x2da>
			1fe8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1fec:	be ac 06 00 00       	mov    $0x6ac,%esi
    1ff1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ff4: R_X86_64_32S	str_326141344
    1ff8:	e8 00 00 00 00       	callq  1ffd <register_globals+0x2eb>
			1ff9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    1ffd:	be 62 06 00 00       	mov    $0x662,%esi
    2002:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2005: R_X86_64_32S	str_128203420
    2009:	e8 00 00 00 00       	callq  200e <register_globals+0x2fc>
			200a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    200e:	be f9 06 00 00       	mov    $0x6f9,%esi
    2013:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2016: R_X86_64_32S	str_7437007
    201a:	e8 00 00 00 00       	callq  201f <register_globals+0x30d>
			201b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    201f:	be 3d 04 00 00       	mov    $0x43d,%esi
    2024:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2027: R_X86_64_32S	.data+0x3da60
    202b:	e8 00 00 00 00       	callq  2030 <register_globals+0x31e>
			202c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2030:	be bc 04 00 00       	mov    $0x4bc,%esi
    2035:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2038: R_X86_64_32S	.data+0x3dba0
    203c:	e8 00 00 00 00       	callq  2041 <register_globals+0x32f>
			203d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2041:	be 2c 07 00 00       	mov    $0x72c,%esi
    2046:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2049: R_X86_64_32S	str_943
    204d:	e8 00 00 00 00       	callq  2052 <register_globals+0x340>
			204e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2052:	be 8c 06 00 00       	mov    $0x68c,%esi
    2057:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			205a: R_X86_64_32S	str_240954119
    205e:	e8 00 00 00 00       	callq  2063 <register_globals+0x351>
			205f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2063:	be 4c 06 00 00       	mov    $0x64c,%esi
    2068:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			206b: R_X86_64_32S	str_1000257171
    206f:	e8 00 00 00 00       	callq  2074 <register_globals+0x362>
			2070: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2074:	be 67 06 00 00       	mov    $0x667,%esi
    2079:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			207c: R_X86_64_32S	str_13996412
    2080:	e8 00 00 00 00       	callq  2085 <register_globals+0x373>
			2081: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2085:	be 7a 06 00 00       	mov    $0x67a,%esi
    208a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			208d: R_X86_64_32S	str_186180441
    2091:	e8 00 00 00 00       	callq  2096 <register_globals+0x384>
			2092: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2096:	be 56 06 00 00       	mov    $0x656,%esi
    209b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			209e: R_X86_64_32S	str_1067410314
    20a2:	e8 00 00 00 00       	callq  20a7 <register_globals+0x395>
			20a3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    20a7:	be 1e 07 00 00       	mov    $0x71e,%esi
    20ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20af: R_X86_64_32S	str_888237591
    20b3:	e8 00 00 00 00       	callq  20b8 <register_globals+0x3a6>
			20b4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    20b8:	be fc 05 00 00       	mov    $0x5fc,%esi
    20bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20c0: R_X86_64_32S	.bss+0x290
    20c4:	e8 00 00 00 00       	callq  20c9 <register_globals+0x3b7>
			20c5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    20c9:	be 24 07 00 00       	mov    $0x724,%esi
    20ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d1: R_X86_64_32S	str_924115643
    20d5:	e8 00 00 00 00       	callq  20da <register_globals+0x3c8>
			20d6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    20da:	be d8 06 00 00       	mov    $0x6d8,%esi
    20df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e2: R_X86_64_32S	str_522411353
    20e6:	e8 00 00 00 00       	callq  20eb <register_globals+0x3d9>
			20e7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    20eb:	be 19 07 00 00       	mov    $0x719,%esi
    20f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f3: R_X86_64_32S	str_878317376
    20f7:	e8 00 00 00 00       	callq  20fc <register_globals+0x3ea>
			20f8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    20fc:	be d7 06 00 00       	mov    $0x6d7,%esi
    2101:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2104: R_X86_64_32S	str_511117956
    2108:	e8 00 00 00 00       	callq  210d <register_globals+0x3fb>
			2109: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    210d:	be f9 05 00 00       	mov    $0x5f9,%esi
    2112:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2115: R_X86_64_32S	.bss+0x28c
    2119:	e8 00 00 00 00       	callq  211e <register_globals+0x40c>
			211a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    211e:	be 2e 07 00 00       	mov    $0x72e,%esi
    2123:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2126: R_X86_64_32S	str_950501272
    212a:	e8 00 00 00 00       	callq  212f <register_globals+0x41d>
			212b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    212f:	be 71 06 00 00       	mov    $0x671,%esi
    2134:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2137: R_X86_64_32S	str_1646
    213b:	e8 00 00 00 00       	callq  2140 <register_globals+0x42e>
			213c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2140:	be e3 06 00 00       	mov    $0x6e3,%esi
    2145:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2148: R_X86_64_32S	str_577264
    214c:	e8 00 00 00 00       	callq  2151 <register_globals+0x43f>
			214d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2151:	be 1d 07 00 00       	mov    $0x71d,%esi
    2156:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2159: R_X86_64_32S	str_887445197
    215d:	e8 00 00 00 00       	callq  2162 <register_globals+0x450>
			215e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2162:	be f5 05 00 00       	mov    $0x5f5,%esi
    2167:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			216a: R_X86_64_32S	.bss+0x29c
    216e:	e8 00 00 00 00       	callq  2173 <register_globals+0x461>
			216f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2173:	be f8 05 00 00       	mov    $0x5f8,%esi
    2178:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			217b: R_X86_64_32S	.bss+0x2b0
    217f:	e8 00 00 00 00       	callq  2184 <register_globals+0x472>
			2180: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2184:	be 31 07 00 00       	mov    $0x731,%esi
    2189:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			218c: R_X86_64_32S	str_966975743
    2190:	e8 00 00 00 00       	callq  2195 <register_globals+0x483>
			2191: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2195:	be fa 04 00 00       	mov    $0x4fa,%esi
    219a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			219d: R_X86_64_32S	.data+0x3dbe0
    21a1:	e8 00 00 00 00       	callq  21a6 <register_globals+0x494>
			21a2: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    21a6:	be 28 07 00 00       	mov    $0x728,%esi
    21ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21ae: R_X86_64_32S	str_930432364
    21b2:	e8 00 00 00 00       	callq  21b7 <register_globals+0x4a5>
			21b3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    21b7:	be bb 06 00 00       	mov    $0x6bb,%esi
    21bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21bf: R_X86_64_32S	str_377117285
    21c3:	e8 00 00 00 00       	callq  21c8 <register_globals+0x4b6>
			21c4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    21c8:	be 2d 07 00 00       	mov    $0x72d,%esi
    21cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21d0: R_X86_64_32S	str_950265491
    21d4:	e8 00 00 00 00       	callq  21d9 <register_globals+0x4c7>
			21d5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    21d9:	be 49 06 00 00       	mov    $0x649,%esi
    21de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21e1: R_X86_64_32S	.data+0x3dce0
    21e5:	e8 00 00 00 00       	callq  21ea <register_globals+0x4d8>
			21e6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    21ea:	be 89 06 00 00       	mov    $0x689,%esi
    21ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21f2: R_X86_64_32S	str_234262759
    21f6:	e8 00 00 00 00       	callq  21fb <register_globals+0x4e9>
			21f7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    21fb:	be 29 07 00 00       	mov    $0x729,%esi
    2200:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2203: R_X86_64_32S	str_936470366
    2207:	e8 00 00 00 00       	callq  220c <register_globals+0x4fa>
			2208: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    220c:	be ec 06 00 00       	mov    $0x6ec,%esi
    2211:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2214: R_X86_64_32S	str_642711145
    2218:	e8 00 00 00 00       	callq  221d <register_globals+0x50b>
			2219: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    221d:	be 92 06 00 00       	mov    $0x692,%esi
    2222:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2225: R_X86_64_32S	str_250403513
    2229:	e8 00 00 00 00       	callq  222e <register_globals+0x51c>
			222a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    222e:	be 26 04 00 00       	mov    $0x426,%esi
    2233:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2236: R_X86_64_32S	.devinit.data+0xa0
    223a:	e8 00 00 00 00       	callq  223f <register_globals+0x52d>
			223b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    223f:	be 4d 06 00 00       	mov    $0x64d,%esi
    2244:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2247: R_X86_64_32S	str_101123515
    224b:	e8 00 00 00 00       	callq  2250 <register_globals+0x53e>
			224c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2250:	be 0d 07 00 00       	mov    $0x70d,%esi
    2255:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2258: R_X86_64_32S	str_840319956
    225c:	e8 00 00 00 00       	callq  2261 <register_globals+0x54f>
			225d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2261:	be 8a 06 00 00       	mov    $0x68a,%esi
    2266:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2269: R_X86_64_32S	str_234322771
    226d:	e8 00 00 00 00       	callq  2272 <register_globals+0x560>
			226e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2272:	be 22 07 00 00       	mov    $0x722,%esi
    2277:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			227a: R_X86_64_32S	str_894730267
    227e:	e8 00 00 00 00       	callq  2283 <register_globals+0x571>
			227f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2283:	be 64 06 00 00       	mov    $0x664,%esi
    2288:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			228b: R_X86_64_32S	str_130659134
    228f:	e8 00 00 00 00       	callq  2294 <register_globals+0x582>
			2290: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2294:	be d3 06 00 00       	mov    $0x6d3,%esi
    2299:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			229c: R_X86_64_32S	str_496259630
    22a0:	e8 00 00 00 00       	callq  22a5 <register_globals+0x593>
			22a1: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    22a5:	be 75 06 00 00       	mov    $0x675,%esi
    22aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22ad: R_X86_64_32S	str_172582431
    22b1:	e8 00 00 00 00       	callq  22b6 <register_globals+0x5a4>
			22b2: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    22b6:	be db 06 00 00       	mov    $0x6db,%esi
    22bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22be: R_X86_64_32S	str_551160696
    22c2:	e8 00 00 00 00       	callq  22c7 <register_globals+0x5b5>
			22c3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    22c7:	be 9d 06 00 00       	mov    $0x69d,%esi
    22cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22cf: R_X86_64_32S	str_291563434
    22d3:	e8 00 00 00 00       	callq  22d8 <register_globals+0x5c6>
			22d4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    22d8:	be 16 07 00 00       	mov    $0x716,%esi
    22dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22e0: R_X86_64_32S	str_870287771
    22e4:	e8 00 00 00 00       	callq  22e9 <register_globals+0x5d7>
			22e5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    22e9:	be 35 04 00 00       	mov    $0x435,%esi
    22ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22f1: R_X86_64_32S	.bss+0x2d0
    22f5:	e8 00 00 00 00       	callq  22fa <register_globals+0x5e8>
			22f6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    22fa:	be 49 04 00 00       	mov    $0x449,%esi
    22ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2302: R_X86_64_32S	.data+0x3d9a0
    2306:	e8 00 00 00 00       	callq  230b <register_globals+0x5f9>
			2307: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    230b:	be e9 03 00 00       	mov    $0x3e9,%esi
    2310:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2313: R_X86_64_32S	.devinit.data+0x640
    2317:	e8 00 00 00 00       	callq  231c <register_globals+0x60a>
			2318: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    231c:	be fd 05 00 00       	mov    $0x5fd,%esi
    2321:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2324: R_X86_64_32S	.bss+0x2a8
    2328:	e8 00 00 00 00       	callq  232d <register_globals+0x61b>
			2329: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    232d:	be c6 04 00 00       	mov    $0x4c6,%esi
    2332:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2335: R_X86_64_32S	.data+0x3dd20
    2339:	e8 00 00 00 00       	callq  233e <register_globals+0x62c>
			233a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    233e:	be 45 04 00 00       	mov    $0x445,%esi
    2343:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2346: R_X86_64_32S	.data+0x3d840
    234a:	e8 00 00 00 00       	callq  234f <register_globals+0x63d>
			234b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    234f:	be 8c 04 00 00       	mov    $0x48c,%esi
    2354:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2357: R_X86_64_32S	.data+0x3dd60
    235b:	e8 00 00 00 00       	callq  2360 <register_globals+0x64e>
			235c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2360:	be 29 05 00 00       	mov    $0x529,%esi
    2365:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2368: R_X86_64_32S	.data+0x3d300
    236c:	e8 00 00 00 00       	callq  2371 <register_globals+0x65f>
			236d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2371:	be 50 04 00 00       	mov    $0x450,%esi
    2376:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2379: R_X86_64_32S	.data+0x3d8d0
    237d:	e8 00 00 00 00       	callq  2382 <register_globals+0x670>
			237e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2382:	be 27 04 00 00       	mov    $0x427,%esi
    2387:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			238a: R_X86_64_32S	.devinit.data+0x6e0
    238e:	e8 00 00 00 00       	callq  2393 <register_globals+0x681>
			238f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2393:	be f7 05 00 00       	mov    $0x5f7,%esi
    2398:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			239b: R_X86_64_32S	.bss+0x2bc
    239f:	e8 00 00 00 00       	callq  23a4 <register_globals+0x692>
			23a0: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    23a4:	be c4 04 00 00       	mov    $0x4c4,%esi
    23a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23ac: R_X86_64_32S	.data+0x3dda0
    23b0:	e8 00 00 00 00       	callq  23b5 <register_globals+0x6a3>
			23b1: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    23b5:	be 4c 04 00 00       	mov    $0x44c,%esi
    23ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23bd: R_X86_64_32S	.data+0x3da90
    23c1:	e8 00 00 00 00       	callq  23c6 <register_globals+0x6b4>
			23c2: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    23c6:	be 24 04 00 00       	mov    $0x424,%esi
    23cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23ce: R_X86_64_32S	.devinit.data+0x780
    23d2:	e8 00 00 00 00       	callq  23d7 <register_globals+0x6c5>
			23d3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    23d7:	be 4d 04 00 00       	mov    $0x44d,%esi
    23dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23df: R_X86_64_32S	.data+0x3da10
    23e3:	e8 00 00 00 00       	callq  23e8 <register_globals+0x6d6>
			23e4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    23e8:	be ea 03 00 00       	mov    $0x3ea,%esi
    23ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23f0: R_X86_64_32S	.devinit.data+0x500
    23f4:	e8 00 00 00 00       	callq  23f9 <register_globals+0x6e7>
			23f5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    23f9:	be 23 04 00 00       	mov    $0x423,%esi
    23fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2401: R_X86_64_32S	.devinit.data+0x1e0
    2405:	e8 00 00 00 00       	callq  240a <register_globals+0x6f8>
			2406: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    240a:	be b9 06 00 00       	mov    $0x6b9,%esi
    240f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2412: R_X86_64_32S	str_366789432
    2416:	e8 00 00 00 00       	callq  241b <register_globals+0x709>
			2417: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    241b:	be 25 07 00 00       	mov    $0x725,%esi
    2420:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2423: R_X86_64_32S	str_927547631
    2427:	e8 00 00 00 00       	callq  242c <register_globals+0x71a>
			2428: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    242c:	be d9 06 00 00       	mov    $0x6d9,%esi
    2431:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2434: R_X86_64_32S	str_522950204
    2438:	e8 00 00 00 00       	callq  243d <register_globals+0x72b>
			2439: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    243d:	be aa 06 00 00       	mov    $0x6aa,%esi
    2442:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2445: R_X86_64_32S	str_321443716
    2449:	e8 00 00 00 00       	callq  244e <register_globals+0x73c>
			244a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    244e:	be 9c 06 00 00       	mov    $0x69c,%esi
    2453:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2456: R_X86_64_32S	str_29116
    245a:	e8 00 00 00 00       	callq  245f <register_globals+0x74d>
			245b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    245f:	be a4 06 00 00       	mov    $0x6a4,%esi
    2464:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2467: R_X86_64_32S	str_305097944
    246b:	e8 00 00 00 00       	callq  2470 <register_globals+0x75e>
			246c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2470:	be 10 07 00 00       	mov    $0x710,%esi
    2475:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2478: R_X86_64_32S	str_842613848
    247c:	e8 00 00 00 00       	callq  2481 <register_globals+0x76f>
			247d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2481:	be 1c 07 00 00       	mov    $0x71c,%esi
    2486:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2489: R_X86_64_32S	str_886397420
    248d:	e8 00 00 00 00       	callq  2492 <register_globals+0x780>
			248e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2492:	be da 06 00 00       	mov    $0x6da,%esi
    2497:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			249a: R_X86_64_32S	str_535387590
    249e:	e8 00 00 00 00       	callq  24a3 <register_globals+0x791>
			249f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    24a3:	be cd 06 00 00       	mov    $0x6cd,%esi
    24a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24ab: R_X86_64_32S	str_465609839
    24af:	e8 00 00 00 00       	callq  24b4 <register_globals+0x7a2>
			24b0: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    24b4:	be ca 06 00 00       	mov    $0x6ca,%esi
    24b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24bc: R_X86_64_32S	str_436346563
    24c0:	e8 00 00 00 00       	callq  24c5 <register_globals+0x7b3>
			24c1: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    24c5:	be 77 04 00 00       	mov    $0x477,%esi
    24ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24cd: R_X86_64_32S	.data+0x3d7a8
    24d1:	e8 00 00 00 00       	callq  24d6 <register_globals+0x7c4>
			24d2: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    24d6:	be b3 06 00 00       	mov    $0x6b3,%esi
    24db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24de: R_X86_64_32S	str_351640327
    24e2:	e8 00 00 00 00       	callq  24e7 <register_globals+0x7d5>
			24e3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    24e7:	be 7b 06 00 00       	mov    $0x67b,%esi
    24ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24ef: R_X86_64_32S	str_187861529
    24f3:	e8 00 00 00 00       	callq  24f8 <register_globals+0x7e6>
			24f4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    24f8:	be ab 06 00 00       	mov    $0x6ab,%esi
    24fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2500: R_X86_64_32S	str_321444720
    2504:	e8 00 00 00 00       	callq  2509 <register_globals+0x7f7>
			2505: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2509:	be 71 04 00 00       	mov    $0x471,%esi
    250e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2511: R_X86_64_32S	.data.read_mostly
    2515:	e8 00 00 00 00       	callq  251a <register_globals+0x808>
			2516: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    251a:	be 2b 07 00 00       	mov    $0x72b,%esi
    251f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2522: R_X86_64_32S	str_940157451
    2526:	e8 00 00 00 00       	callq  252b <register_globals+0x819>
			2527: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    252b:	be 3e 04 00 00       	mov    $0x43e,%esi
    2530:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2533: R_X86_64_32S	.data+0x3daa0
    2537:	e8 00 00 00 00       	callq  253c <register_globals+0x82a>
			2538: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    253c:	be 50 06 00 00       	mov    $0x650,%esi
    2541:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2544: R_X86_64_32S	str_1027606323
    2548:	e8 00 00 00 00       	callq  254d <register_globals+0x83b>
			2549: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    254d:	be 33 07 00 00       	mov    $0x733,%esi
    2552:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2555: R_X86_64_32S	str_977765343
    2559:	e8 00 00 00 00       	callq  255e <register_globals+0x84c>
			255a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    255e:	be c9 06 00 00       	mov    $0x6c9,%esi
    2563:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2566: R_X86_64_32S	str_423800896
    256a:	e8 00 00 00 00       	callq  256f <register_globals+0x85d>
			256b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    256f:	be df 06 00 00       	mov    $0x6df,%esi
    2574:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2577: R_X86_64_32S	str_562631572
    257b:	e8 00 00 00 00       	callq  2580 <register_globals+0x86e>
			257c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2580:	be d5 06 00 00       	mov    $0x6d5,%esi
    2585:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2588: R_X86_64_32S	str_504221539
    258c:	e8 00 00 00 00       	callq  2591 <register_globals+0x87f>
			258d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2591:	be 5e 06 00 00       	mov    $0x65e,%esi
    2596:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2599: R_X86_64_32S	str_124417679
    259d:	e8 00 00 00 00       	callq  25a2 <register_globals+0x890>
			259e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    25a2:	be 55 04 00 00       	mov    $0x455,%esi
    25a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25aa: R_X86_64_32S	.data+0x3d950
    25ae:	e8 00 00 00 00       	callq  25b3 <register_globals+0x8a1>
			25af: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    25b3:	be 23 07 00 00       	mov    $0x723,%esi
    25b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25bb: R_X86_64_32S	str_915785734
    25bf:	e8 00 00 00 00       	callq  25c4 <register_globals+0x8b2>
			25c0: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    25c4:	be 07 07 00 00       	mov    $0x707,%esi
    25c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25cc: R_X86_64_32S	str_81487500
    25d0:	e8 00 00 00 00       	callq  25d5 <register_globals+0x8c3>
			25d1: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    25d5:	be 54 04 00 00       	mov    $0x454,%esi
    25da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25dd: R_X86_64_32S	.data+0x3dad0
    25e1:	e8 00 00 00 00       	callq  25e6 <register_globals+0x8d4>
			25e2: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    25e6:	be 5a 06 00 00       	mov    $0x65a,%esi
    25eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ee: R_X86_64_32S	str_113262351
    25f2:	e8 00 00 00 00       	callq  25f7 <register_globals+0x8e5>
			25f3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    25f7:	be 38 07 00 00       	mov    $0x738,%esi
    25fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ff: R_X86_64_32S	str_991220654
    2603:	e8 00 00 00 00       	callq  2608 <register_globals+0x8f6>
			2604: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2608:	be 20 07 00 00       	mov    $0x720,%esi
    260d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2610: R_X86_64_32S	str_894216477
    2614:	e8 00 00 00 00       	callq  2619 <register_globals+0x907>
			2615: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2619:	be f3 06 00 00       	mov    $0x6f3,%esi
    261e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2621: R_X86_64_32S	str_693100397
    2625:	e8 00 00 00 00       	callq  262a <register_globals+0x918>
			2626: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    262a:	be bf 06 00 00       	mov    $0x6bf,%esi
    262f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2632: R_X86_64_32S	str_392604906
    2636:	e8 00 00 00 00       	callq  263b <register_globals+0x929>
			2637: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    263b:	be 02 07 00 00       	mov    $0x702,%esi
    2640:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2643: R_X86_64_32S	str_793210945
    2647:	e8 00 00 00 00       	callq  264c <register_globals+0x93a>
			2648: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    264c:	be c5 06 00 00       	mov    $0x6c5,%esi
    2651:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2654: R_X86_64_32S	str_409120539
    2658:	e8 00 00 00 00       	callq  265d <register_globals+0x94b>
			2659: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    265d:	be e5 06 00 00       	mov    $0x6e5,%esi
    2662:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2665: R_X86_64_32S	str_58884767
    2669:	e8 00 00 00 00       	callq  266e <register_globals+0x95c>
			266a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    266e:	be 6b 04 00 00       	mov    $0x46b,%esi
    2673:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2676: R_X86_64_32S	.data+0x3dea0
    267a:	e8 00 00 00 00       	callq  267f <register_globals+0x96d>
			267b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    267f:	be 36 04 00 00       	mov    $0x436,%esi
    2684:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2687: R_X86_64_32S	.bss+0x2d8
    268b:	e8 00 00 00 00       	callq  2690 <register_globals+0x97e>
			268c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2690:	be 95 06 00 00       	mov    $0x695,%esi
    2695:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2698: R_X86_64_32S	str_2539257
    269c:	e8 00 00 00 00       	callq  26a1 <register_globals+0x98f>
			269d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    26a1:	be f1 06 00 00       	mov    $0x6f1,%esi
    26a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a9: R_X86_64_32S	str_672482465
    26ad:	e8 00 00 00 00       	callq  26b2 <register_globals+0x9a0>
			26ae: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    26b2:	be 94 06 00 00       	mov    $0x694,%esi
    26b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ba: R_X86_64_32S	str_25184998
    26be:	e8 00 00 00 00       	callq  26c3 <register_globals+0x9b1>
			26bf: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    26c3:	be 87 06 00 00       	mov    $0x687,%esi
    26c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26cb: R_X86_64_32S	str_224091117
    26cf:	e8 00 00 00 00       	callq  26d4 <register_globals+0x9c2>
			26d0: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    26d4:	be 2f 07 00 00       	mov    $0x72f,%esi
    26d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26dc: R_X86_64_32S	str_958997501
    26e0:	e8 00 00 00 00       	callq  26e5 <register_globals+0x9d3>
			26e1: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    26e5:	be 3e 07 00 00       	mov    $0x73e,%esi
    26ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ed: R_X86_64_32S	.data+0x3e090
    26f1:	e8 00 00 00 00       	callq  26f6 <register_globals+0x9e4>
			26f2: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    26f6:	be 4f 04 00 00       	mov    $0x44f,%esi
    26fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26fe: R_X86_64_32S	.data+0x3d7c0
    2702:	e8 00 00 00 00       	callq  2707 <register_globals+0x9f5>
			2703: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2707:	be ee 06 00 00       	mov    $0x6ee,%esi
    270c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			270f: R_X86_64_32S	str_643410539
    2713:	e8 00 00 00 00       	callq  2718 <register_globals+0xa06>
			2714: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2718:	be f4 06 00 00       	mov    $0x6f4,%esi
    271d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2720: R_X86_64_32S	str_697372295
    2724:	e8 00 00 00 00       	callq  2729 <register_globals+0xa17>
			2725: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2729:	be c7 04 00 00       	mov    $0x4c7,%esi
    272e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2731: R_X86_64_32S	e1000_driver_version
    2735:	e8 00 00 00 00       	callq  273a <register_globals+0xa28>
			2736: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    273a:	be 52 06 00 00       	mov    $0x652,%esi
    273f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2742: R_X86_64_32S	str_1036022825
    2746:	e8 00 00 00 00       	callq  274b <register_globals+0xa39>
			2747: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    274b:	be 28 04 00 00       	mov    $0x428,%esi
    2750:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2753: R_X86_64_32S	.devinit.data+0x320
    2757:	e8 00 00 00 00       	callq  275c <register_globals+0xa4a>
			2758: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    275c:	be ea 06 00 00       	mov    $0x6ea,%esi
    2761:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2764: R_X86_64_32S	str_638038225
    2768:	e8 00 00 00 00       	callq  276d <register_globals+0xa5b>
			2769: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    276d:	be 36 07 00 00       	mov    $0x736,%esi
    2772:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2775: R_X86_64_32S	str_987635239
    2779:	e8 00 00 00 00       	callq  277e <register_globals+0xa6c>
			277a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    277e:	be 99 06 00 00       	mov    $0x699,%esi
    2783:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2786: R_X86_64_32S	str_276140507
    278a:	e8 00 00 00 00       	callq  278f <register_globals+0xa7d>
			278b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    278f:	be b5 06 00 00       	mov    $0x6b5,%esi
    2794:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2797: R_X86_64_32S	str_352020333
    279b:	e8 00 00 00 00       	callq  27a0 <register_globals+0xa8e>
			279c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    27a0:	be c4 06 00 00       	mov    $0x6c4,%esi
    27a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27a8: R_X86_64_32S	str_404990589
    27ac:	e8 00 00 00 00       	callq  27b1 <register_globals+0xa9f>
			27ad: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    27b1:	be 43 04 00 00       	mov    $0x443,%esi
    27b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27b9: R_X86_64_32S	.data+0x3db20
    27bd:	e8 00 00 00 00       	callq  27c2 <register_globals+0xab0>
			27be: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    27c2:	be 14 07 00 00       	mov    $0x714,%esi
    27c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27ca: R_X86_64_32S	str_854697451
    27ce:	e8 00 00 00 00       	callq  27d3 <register_globals+0xac1>
			27cf: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    27d3:	be 1f 07 00 00       	mov    $0x71f,%esi
    27d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27db: R_X86_64_32S	str_88859911
    27df:	e8 00 00 00 00       	callq  27e4 <register_globals+0xad2>
			27e0: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    27e4:	be 77 06 00 00       	mov    $0x677,%esi
    27e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27ec: R_X86_64_32S	str_173567913
    27f0:	e8 00 00 00 00       	callq  27f5 <register_globals+0xae3>
			27f1: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    27f5:	be a0 06 00 00       	mov    $0x6a0,%esi
    27fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27fd: R_X86_64_32S	str_29525841
    2801:	e8 00 00 00 00       	callq  2806 <register_globals+0xaf4>
			2802: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2806:	be 46 04 00 00       	mov    $0x446,%esi
    280b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			280e: R_X86_64_32S	.data+0x3dae0
    2812:	e8 00 00 00 00       	callq  2817 <register_globals+0xb05>
			2813: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2817:	be 42 04 00 00       	mov    $0x442,%esi
    281c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			281f: R_X86_64_32S	.data+0x3d8e0
    2823:	e8 00 00 00 00       	callq  2828 <register_globals+0xb16>
			2824: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2828:	be 70 06 00 00       	mov    $0x670,%esi
    282d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2830: R_X86_64_32S	str_163318183
    2834:	e8 00 00 00 00       	callq  2839 <register_globals+0xb27>
			2835: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2839:	be 09 07 00 00       	mov    $0x709,%esi
    283e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2841: R_X86_64_32S	str_829077595
    2845:	e8 00 00 00 00       	callq  284a <register_globals+0xb38>
			2846: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    284a:	be 3f 04 00 00       	mov    $0x43f,%esi
    284f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2852: R_X86_64_32S	.data+0x3da20
    2856:	e8 00 00 00 00       	callq  285b <register_globals+0xb49>
			2857: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    285b:	be 26 07 00 00       	mov    $0x726,%esi
    2860:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2863: R_X86_64_32S	str_928053687
    2867:	e8 00 00 00 00       	callq  286c <register_globals+0xb5a>
			2868: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    286c:	be 5d 06 00 00       	mov    $0x65d,%esi
    2871:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2874: R_X86_64_32S	str_117827335
    2878:	e8 00 00 00 00       	callq  287d <register_globals+0xb6b>
			2879: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    287d:	be c1 06 00 00       	mov    $0x6c1,%esi
    2882:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2885: R_X86_64_32S	str_398459001
    2889:	e8 00 00 00 00       	callq  288e <register_globals+0xb7c>
			288a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    288e:	be 6a 06 00 00       	mov    $0x66a,%esi
    2893:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2896: R_X86_64_32S	str_145641939
    289a:	e8 00 00 00 00       	callq  289f <register_globals+0xb8d>
			289b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    289f:	be cf 06 00 00       	mov    $0x6cf,%esi
    28a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28a7: R_X86_64_32S	str_467566158
    28ab:	e8 00 00 00 00       	callq  28b0 <register_globals+0xb9e>
			28ac: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    28b0:	be 32 07 00 00       	mov    $0x732,%esi
    28b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28b8: R_X86_64_32S	str_975076538
    28bc:	e8 00 00 00 00       	callq  28c1 <register_globals+0xbaf>
			28bd: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    28c1:	be 04 07 00 00       	mov    $0x704,%esi
    28c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28c9: R_X86_64_32S	str_801995118
    28cd:	e8 00 00 00 00       	callq  28d2 <register_globals+0xbc0>
			28ce: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    28d2:	be 22 05 00 00       	mov    $0x522,%esi
    28d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28da: R_X86_64_32S	.data+0x3e0a0
    28de:	e8 00 00 00 00       	callq  28e3 <register_globals+0xbd1>
			28df: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    28e3:	be dd 06 00 00       	mov    $0x6dd,%esi
    28e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28eb: R_X86_64_32S	str_55986219
    28ef:	e8 00 00 00 00       	callq  28f4 <register_globals+0xbe2>
			28f0: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    28f4:	be 08 07 00 00       	mov    $0x708,%esi
    28f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28fc: R_X86_64_32S	str_817977790
    2900:	e8 00 00 00 00       	callq  2905 <register_globals+0xbf3>
			2901: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2905:	be ce 06 00 00       	mov    $0x6ce,%esi
    290a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			290d: R_X86_64_32S	str_466258159
    2911:	e8 00 00 00 00       	callq  2916 <register_globals+0xc04>
			2912: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2916:	be cb 06 00 00       	mov    $0x6cb,%esi
    291b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			291e: R_X86_64_32S	str_45950570
    2922:	e8 00 00 00 00       	callq  2927 <register_globals+0xc15>
			2923: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2927:	be 11 07 00 00       	mov    $0x711,%esi
    292c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			292f: R_X86_64_32S	str_845239871
    2933:	e8 00 00 00 00       	callq  2938 <register_globals+0xc26>
			2934: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2938:	be 6b 06 00 00       	mov    $0x66b,%esi
    293d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2940: R_X86_64_32S	str_156044084
    2944:	e8 00 00 00 00       	callq  2949 <register_globals+0xc37>
			2945: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2949:	be 7e 06 00 00       	mov    $0x67e,%esi
    294e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2951: R_X86_64_32S	str_195174474
    2955:	e8 00 00 00 00       	callq  295a <register_globals+0xc48>
			2956: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    295a:	be d2 06 00 00       	mov    $0x6d2,%esi
    295f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2962: R_X86_64_32S	str_478483537
    2966:	e8 00 00 00 00       	callq  296b <register_globals+0xc59>
			2967: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    296b:	be e9 06 00 00       	mov    $0x6e9,%esi
    2970:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2973: R_X86_64_32S	str_618091532
    2977:	e8 00 00 00 00       	callq  297c <register_globals+0xc6a>
			2978: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    297c:	be e8 06 00 00       	mov    $0x6e8,%esi
    2981:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2984: R_X86_64_32S	str_603321121
    2988:	e8 00 00 00 00       	callq  298d <register_globals+0xc7b>
			2989: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    298d:	be 21 07 00 00       	mov    $0x721,%esi
    2992:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2995: R_X86_64_32S	str_894705842
    2999:	e8 00 00 00 00       	callq  299e <register_globals+0xc8c>
			299a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    299e:	be 7c 06 00 00       	mov    $0x67c,%esi
    29a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29a6: R_X86_64_32S	str_190419730
    29aa:	e8 00 00 00 00       	callq  29af <register_globals+0xc9d>
			29ab: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    29af:	be dc 06 00 00       	mov    $0x6dc,%esi
    29b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b7: R_X86_64_32S	str_556488457
    29bb:	e8 00 00 00 00       	callq  29c0 <register_globals+0xcae>
			29bc: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    29c0:	be fe 05 00 00       	mov    $0x5fe,%esi
    29c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29c8: R_X86_64_32S	.bss+0x288
    29cc:	e8 00 00 00 00       	callq  29d1 <register_globals+0xcbf>
			29cd: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    29d1:	be ed 03 00 00       	mov    $0x3ed,%esi
    29d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29d9: R_X86_64_32S	.devinit.data
    29dd:	e8 00 00 00 00       	callq  29e2 <register_globals+0xcd0>
			29de: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    29e2:	be 9a 06 00 00       	mov    $0x69a,%esi
    29e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29ea: R_X86_64_32S	str_284091528
    29ee:	e8 00 00 00 00       	callq  29f3 <register_globals+0xce1>
			29ef: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    29f3:	be 34 07 00 00       	mov    $0x734,%esi
    29f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29fb: R_X86_64_32S	str_986426007
    29ff:	e8 00 00 00 00       	callq  2a04 <register_globals+0xcf2>
			2a00: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a04:	be 61 04 00 00       	mov    $0x461,%esi
    2a09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a0c: R_X86_64_32S	__this_module
    2a10:	e8 00 00 00 00       	callq  2a15 <register_globals+0xd03>
			2a11: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a15:	be 97 06 00 00       	mov    $0x697,%esi
    2a1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a1d: R_X86_64_32S	str_265272835
    2a21:	e8 00 00 00 00       	callq  2a26 <register_globals+0xd14>
			2a22: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a26:	be b7 06 00 00       	mov    $0x6b7,%esi
    2a2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a2e: R_X86_64_32S	str_366186003
    2a32:	e8 00 00 00 00       	callq  2a37 <register_globals+0xd25>
			2a33: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a37:	be c0 06 00 00       	mov    $0x6c0,%esi
    2a3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a3f: R_X86_64_32S	str_393802358
    2a43:	e8 00 00 00 00       	callq  2a48 <register_globals+0xd36>
			2a44: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a48:	be 57 06 00 00       	mov    $0x657,%esi
    2a4d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a50: R_X86_64_32S	str_108217275
    2a54:	e8 00 00 00 00       	callq  2a59 <register_globals+0xd47>
			2a55: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a59:	be 06 07 00 00       	mov    $0x706,%esi
    2a5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a61: R_X86_64_32S	str_806744193
    2a65:	e8 00 00 00 00       	callq  2a6a <register_globals+0xd58>
			2a66: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a6a:	be cf 04 00 00       	mov    $0x4cf,%esi
    2a6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a72: R_X86_64_32S	.data+0x3e160
    2a76:	e8 00 00 00 00       	callq  2a7b <register_globals+0xd69>
			2a77: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a7b:	be a9 06 00 00       	mov    $0x6a9,%esi
    2a80:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a83: R_X86_64_32S	str_320433102
    2a87:	e8 00 00 00 00       	callq  2a8c <register_globals+0xd7a>
			2a88: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a8c:	be a1 06 00 00       	mov    $0x6a1,%esi
    2a91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a94: R_X86_64_32S	str_295592627
    2a98:	e8 00 00 00 00       	callq  2a9d <register_globals+0xd8b>
			2a99: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2a9d:	be f0 06 00 00       	mov    $0x6f0,%esi
    2aa2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aa5: R_X86_64_32S	str_654135934
    2aa9:	e8 00 00 00 00       	callq  2aae <register_globals+0xd9c>
			2aaa: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2aae:	be f2 06 00 00       	mov    $0x6f2,%esi
    2ab3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ab6: R_X86_64_32S	str_680042556
    2aba:	e8 00 00 00 00       	callq  2abf <register_globals+0xdad>
			2abb: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2abf:	be 18 07 00 00       	mov    $0x718,%esi
    2ac4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ac7: R_X86_64_32S	str_876241111
    2acb:	e8 00 00 00 00       	callq  2ad0 <register_globals+0xdbe>
			2acc: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2ad0:	be 9f 06 00 00       	mov    $0x69f,%esi
    2ad5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ad8: R_X86_64_32S	str_291992706
    2adc:	e8 00 00 00 00       	callq  2ae1 <register_globals+0xdcf>
			2add: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2ae1:	be 00 06 00 00       	mov    $0x600,%esi
    2ae6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ae9: R_X86_64_32S	.bss+0x2a0
    2aed:	e8 00 00 00 00       	callq  2af2 <register_globals+0xde0>
			2aee: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2af2:	be f6 05 00 00       	mov    $0x5f6,%esi
    2af7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2afa: R_X86_64_32S	.bss+0x2b4
    2afe:	e8 00 00 00 00       	callq  2b03 <register_globals+0xdf1>
			2aff: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b03:	be 65 06 00 00       	mov    $0x665,%esi
    2b08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b0b: R_X86_64_32S	str_133143243
    2b0f:	e8 00 00 00 00       	callq  2b14 <register_globals+0xe02>
			2b10: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b14:	be 63 06 00 00       	mov    $0x663,%esi
    2b19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b1c: R_X86_64_32S	str_128354318
    2b20:	e8 00 00 00 00       	callq  2b25 <register_globals+0xe13>
			2b21: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b25:	be 60 06 00 00       	mov    $0x660,%esi
    2b2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b2d: R_X86_64_32S	str_127942778
    2b31:	e8 00 00 00 00       	callq  2b36 <register_globals+0xe24>
			2b32: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b36:	be f5 06 00 00       	mov    $0x6f5,%esi
    2b3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b3e: R_X86_64_32S	str_7025467
    2b42:	e8 00 00 00 00       	callq  2b47 <register_globals+0xe35>
			2b43: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b47:	be 4f 06 00 00       	mov    $0x64f,%esi
    2b4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b4f: R_X86_64_32S	str_1024097060
    2b53:	e8 00 00 00 00       	callq  2b58 <register_globals+0xe46>
			2b54: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b58:	be a2 06 00 00       	mov    $0x6a2,%esi
    2b5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b60: R_X86_64_32S	str_295688
    2b64:	e8 00 00 00 00       	callq  2b69 <register_globals+0xe57>
			2b65: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b69:	be 82 06 00 00       	mov    $0x682,%esi
    2b6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b71: R_X86_64_32S	str_207468293
    2b75:	e8 00 00 00 00       	callq  2b7a <register_globals+0xe68>
			2b76: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b7a:	be fe 06 00 00       	mov    $0x6fe,%esi
    2b7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b82: R_X86_64_32S	str_773682590
    2b86:	e8 00 00 00 00       	callq  2b8b <register_globals+0xe79>
			2b87: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b8b:	be fc 06 00 00       	mov    $0x6fc,%esi
    2b90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b93: R_X86_64_32S	str_761963037
    2b97:	e8 00 00 00 00       	callq  2b9c <register_globals+0xe8a>
			2b98: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2b9c:	be 9b 06 00 00       	mov    $0x69b,%esi
    2ba1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ba4: R_X86_64_32S	str_290139421
    2ba8:	e8 00 00 00 00       	callq  2bad <register_globals+0xe9b>
			2ba9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2bad:	be 1a 07 00 00       	mov    $0x71a,%esi
    2bb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bb5: R_X86_64_32S	str_881042191
    2bb9:	e8 00 00 00 00       	callq  2bbe <register_globals+0xeac>
			2bba: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2bbe:	be 47 04 00 00       	mov    $0x447,%esi
    2bc3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bc6: R_X86_64_32S	.data+0x3d960
    2bca:	e8 00 00 00 00       	callq  2bcf <register_globals+0xebd>
			2bcb: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2bcf:	be b0 06 00 00       	mov    $0x6b0,%esi
    2bd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bd7: R_X86_64_32S	str_346704155
    2bdb:	e8 00 00 00 00       	callq  2be0 <register_globals+0xece>
			2bdc: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2be0:	be 0a 07 00 00       	mov    $0x70a,%esi
    2be5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2be8: R_X86_64_32S	str_829171853
    2bec:	e8 00 00 00 00       	callq  2bf1 <register_globals+0xedf>
			2bed: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2bf1:	be 30 07 00 00       	mov    $0x730,%esi
    2bf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bf9: R_X86_64_32S	str_959038149
    2bfd:	e8 00 00 00 00       	callq  2c02 <register_globals+0xef0>
			2bfe: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c02:	be 05 07 00 00       	mov    $0x705,%esi
    2c07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c0a: R_X86_64_32S	str_804937019
    2c0e:	e8 00 00 00 00       	callq  2c13 <register_globals+0xf01>
			2c0f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c13:	be 59 06 00 00       	mov    $0x659,%esi
    2c18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c1b: R_X86_64_32S	str_11308565
    2c1f:	e8 00 00 00 00       	callq  2c24 <register_globals+0xf12>
			2c20: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c24:	be 4e 04 00 00       	mov    $0x44e,%esi
    2c29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c2c: R_X86_64_32S	.data+0x3d870
    2c30:	e8 00 00 00 00       	callq  2c35 <register_globals+0xf23>
			2c31: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c35:	be 74 06 00 00       	mov    $0x674,%esi
    2c3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c3d: R_X86_64_32S	str_1684
    2c41:	e8 00 00 00 00       	callq  2c46 <register_globals+0xf34>
			2c42: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c46:	be ba 06 00 00       	mov    $0x6ba,%esi
    2c4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c4e: R_X86_64_32S	str_372932505
    2c52:	e8 00 00 00 00       	callq  2c57 <register_globals+0xf45>
			2c53: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c57:	be d6 06 00 00       	mov    $0x6d6,%esi
    2c5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c5f: R_X86_64_32S	str_507147481
    2c63:	e8 00 00 00 00       	callq  2c68 <register_globals+0xf56>
			2c64: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c68:	be c2 06 00 00       	mov    $0x6c2,%esi
    2c6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c70: R_X86_64_32S	str_398866888
    2c74:	e8 00 00 00 00       	callq  2c79 <register_globals+0xf67>
			2c75: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c79:	be f7 06 00 00       	mov    $0x6f7,%esi
    2c7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c81: R_X86_64_32S	str_714699084
    2c85:	e8 00 00 00 00       	callq  2c8a <register_globals+0xf78>
			2c86: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c8a:	be f9 04 00 00       	mov    $0x4f9,%esi
    2c8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c92: R_X86_64_32S	.data+0x3e1a0
    2c96:	e8 00 00 00 00       	callq  2c9b <register_globals+0xf89>
			2c97: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2c9b:	be c3 06 00 00       	mov    $0x6c3,%esi
    2ca0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ca3: R_X86_64_32S	str_404563736
    2ca7:	e8 00 00 00 00       	callq  2cac <register_globals+0xf9a>
			2ca8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2cac:	be 1b 07 00 00       	mov    $0x71b,%esi
    2cb1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cb4: R_X86_64_32S	str_885150258
    2cb8:	e8 00 00 00 00       	callq  2cbd <register_globals+0xfab>
			2cb9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2cbd:	be c6 06 00 00       	mov    $0x6c6,%esi
    2cc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cc5: R_X86_64_32S	str_410917061
    2cc9:	e8 00 00 00 00       	callq  2cce <register_globals+0xfbc>
			2cca: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2cce:	be ad 06 00 00       	mov    $0x6ad,%esi
    2cd3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cd6: R_X86_64_32S	str_328922700
    2cda:	e8 00 00 00 00       	callq  2cdf <register_globals+0xfcd>
			2cdb: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2cdf:	be 90 06 00 00       	mov    $0x690,%esi
    2ce4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ce7: R_X86_64_32S	str_246169321
    2ceb:	e8 00 00 00 00       	callq  2cf0 <register_globals+0xfde>
			2cec: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2cf0:	be e7 06 00 00       	mov    $0x6e7,%esi
    2cf5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cf8: R_X86_64_32S	str_592281790
    2cfc:	e8 00 00 00 00       	callq  2d01 <register_globals+0xfef>
			2cfd: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d01:	be 83 06 00 00       	mov    $0x683,%esi
    2d06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d09: R_X86_64_32S	str_207784759
    2d0d:	e8 00 00 00 00       	callq  2d12 <register_globals+0x1000>
			2d0e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d12:	be 55 06 00 00       	mov    $0x655,%esi
    2d17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d1a: R_X86_64_32S	str_1049785182
    2d1e:	e8 00 00 00 00       	callq  2d23 <register_globals+0x1011>
			2d1f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d23:	be f2 04 00 00       	mov    $0x4f2,%esi
    2d28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d2b: R_X86_64_32S	.data+0x3e2a0
    2d2f:	e8 00 00 00 00       	callq  2d34 <register_globals+0x1022>
			2d30: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d34:	be 51 04 00 00       	mov    $0x451,%esi
    2d39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d3c: R_X86_64_32S	.data+0x3db10
    2d40:	e8 00 00 00 00       	callq  2d45 <register_globals+0x1033>
			2d41: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d45:	be 84 06 00 00       	mov    $0x684,%esi
    2d4a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d4d: R_X86_64_32S	str_209072091
    2d51:	e8 00 00 00 00       	callq  2d56 <register_globals+0x1044>
			2d52: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d56:	be 0e 07 00 00       	mov    $0x70e,%esi
    2d5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d5e: R_X86_64_32S	str_841035208
    2d62:	e8 00 00 00 00       	callq  2d67 <register_globals+0x1055>
			2d63: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d67:	be fa 05 00 00       	mov    $0x5fa,%esi
    2d6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d6f: R_X86_64_32S	.bss+0x2ac
    2d73:	e8 00 00 00 00       	callq  2d78 <register_globals+0x1066>
			2d74: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d78:	be b1 06 00 00       	mov    $0x6b1,%esi
    2d7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d80: R_X86_64_32S	str_349452481
    2d84:	e8 00 00 00 00       	callq  2d89 <register_globals+0x1077>
			2d85: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d89:	be fb 06 00 00       	mov    $0x6fb,%esi
    2d8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d91: R_X86_64_32S	str_758638560
    2d95:	e8 00 00 00 00       	callq  2d9a <register_globals+0x1088>
			2d96: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2d9a:	be 4e 06 00 00       	mov    $0x64e,%esi
    2d9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2da2: R_X86_64_32S	str_1011285670
    2da6:	e8 00 00 00 00       	callq  2dab <register_globals+0x1099>
			2da7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2dab:	be 7f 06 00 00       	mov    $0x67f,%esi
    2db0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2db3: R_X86_64_32S	str_200115605
    2db7:	e8 00 00 00 00       	callq  2dbc <register_globals+0x10aa>
			2db8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2dbc:	be 5f 06 00 00       	mov    $0x65f,%esi
    2dc1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dc4: R_X86_64_32S	str_125676294
    2dc8:	e8 00 00 00 00       	callq  2dcd <register_globals+0x10bb>
			2dc9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2dcd:	be 41 04 00 00       	mov    $0x441,%esi
    2dd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dd5: R_X86_64_32S	.data+0x3d7e0
    2dd9:	e8 00 00 00 00       	callq  2dde <register_globals+0x10cc>
			2dda: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2dde:	be 59 04 00 00       	mov    $0x459,%esi
    2de3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2de6: R_X86_64_32S	.data+0x3d7ac
    2dea:	e8 00 00 00 00       	callq  2def <register_globals+0x10dd>
			2deb: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2def:	be f3 05 00 00       	mov    $0x5f3,%esi
    2df4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2df7: R_X86_64_32S	.bss+0x298
    2dfb:	e8 00 00 00 00       	callq  2e00 <register_globals+0x10ee>
			2dfc: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e00:	be 56 04 00 00       	mov    $0x456,%esi
    2e05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e08: R_X86_64_32S	.data+0x3db50
    2e0c:	e8 00 00 00 00       	callq  2e11 <register_globals+0x10ff>
			2e0d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e11:	be d0 04 00 00       	mov    $0x4d0,%esi
    2e16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e19: R_X86_64_32S	.data+0x3ea00
    2e1d:	e8 00 00 00 00       	callq  2e22 <register_globals+0x1110>
			2e1e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e22:	be f3 04 00 00       	mov    $0x4f3,%esi
    2e27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e2a: R_X86_64_32S	.data+0x3eb80
    2e2e:	e8 00 00 00 00       	callq  2e33 <register_globals+0x1121>
			2e2f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e33:	be 29 04 00 00       	mov    $0x429,%esi
    2e38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e3b: R_X86_64_32S	.devinit.data+0x820
    2e3f:	e8 00 00 00 00       	callq  2e44 <register_globals+0x1132>
			2e40: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e44:	be 2b 04 00 00       	mov    $0x42b,%esi
    2e49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e4c: R_X86_64_32S	.devinit.data+0x460
    2e50:	e8 00 00 00 00       	callq  2e55 <register_globals+0x1143>
			2e51: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e55:	be 34 04 00 00       	mov    $0x434,%esi
    2e5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e5d: R_X86_64_32S	.bss+0x2c8
    2e61:	e8 00 00 00 00       	callq  2e66 <register_globals+0x1154>
			2e62: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e66:	be 5a 04 00 00       	mov    $0x45a,%esi
    2e6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e6e: R_X86_64_32S	.data+0x3d7a0
    2e72:	e8 00 00 00 00       	callq  2e77 <register_globals+0x1165>
			2e73: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e77:	be ec 03 00 00       	mov    $0x3ec,%esi
    2e7c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e7f: R_X86_64_32S	.devinit.data+0x140
    2e83:	e8 00 00 00 00       	callq  2e88 <register_globals+0x1176>
			2e84: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e88:	be ff 05 00 00       	mov    $0x5ff,%esi
    2e8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e90: R_X86_64_32S	.bss+0x2a4
    2e94:	e8 00 00 00 00       	callq  2e99 <register_globals+0x1187>
			2e95: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2e99:	be c9 04 00 00       	mov    $0x4c9,%esi
    2e9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ea1: R_X86_64_32S	.data+0x3ec20
    2ea5:	e8 00 00 00 00       	callq  2eaa <register_globals+0x1198>
			2ea6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2eaa:	be d4 06 00 00       	mov    $0x6d4,%esi
    2eaf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eb2: R_X86_64_32S	str_498869265
    2eb6:	e8 00 00 00 00       	callq  2ebb <register_globals+0x11a9>
			2eb7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2ebb:	be a6 06 00 00       	mov    $0x6a6,%esi
    2ec0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ec3: R_X86_64_32S	str_310665533
    2ec7:	e8 00 00 00 00       	callq  2ecc <register_globals+0x11ba>
			2ec8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2ecc:	be 25 04 00 00       	mov    $0x425,%esi
    2ed1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ed4: R_X86_64_32S	.devinit.data+0x280
    2ed8:	e8 00 00 00 00       	callq  2edd <register_globals+0x11cb>
			2ed9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2edd:	be 72 06 00 00       	mov    $0x672,%esi
    2ee2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee5: R_X86_64_32S	str_166765844
    2ee9:	e8 00 00 00 00       	callq  2eee <register_globals+0x11dc>
			2eea: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2eee:	be a8 06 00 00       	mov    $0x6a8,%esi
    2ef3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef6: R_X86_64_32S	str_316303982
    2efa:	e8 00 00 00 00       	callq  2eff <register_globals+0x11ed>
			2efb: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2eff:	be 17 07 00 00       	mov    $0x717,%esi
    2f04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f07: R_X86_64_32S	str_873761215
    2f0b:	e8 00 00 00 00       	callq  2f10 <register_globals+0x11fe>
			2f0c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f10:	be 58 04 00 00       	mov    $0x458,%esi
    2f15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f18: R_X86_64_32S	.data+0x3d9d0
    2f1c:	e8 00 00 00 00       	callq  2f21 <register_globals+0x120f>
			2f1d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f21:	be af 06 00 00       	mov    $0x6af,%esi
    2f26:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f29: R_X86_64_32S	str_337274492
    2f2d:	e8 00 00 00 00       	callq  2f32 <register_globals+0x1220>
			2f2e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f32:	be 96 06 00 00       	mov    $0x696,%esi
    2f37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f3a: R_X86_64_32S	str_265127551
    2f3e:	e8 00 00 00 00       	callq  2f43 <register_globals+0x1231>
			2f3f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f43:	be a3 06 00 00       	mov    $0x6a3,%esi
    2f48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f4b: R_X86_64_32S	str_299013265
    2f4f:	e8 00 00 00 00       	callq  2f54 <register_globals+0x1242>
			2f50: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f54:	be 52 04 00 00       	mov    $0x452,%esi
    2f59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f5c: R_X86_64_32S	.data+0x3d910
    2f60:	e8 00 00 00 00       	callq  2f65 <register_globals+0x1253>
			2f61: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f65:	be 0f 07 00 00       	mov    $0x70f,%esi
    2f6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f6d: R_X86_64_32S	str_841212071
    2f71:	e8 00 00 00 00       	callq  2f76 <register_globals+0x1264>
			2f72: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f76:	be 6e 06 00 00       	mov    $0x66e,%esi
    2f7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f7e: R_X86_64_32S	str_16094602
    2f82:	e8 00 00 00 00       	callq  2f87 <register_globals+0x1275>
			2f83: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f87:	be d0 06 00 00       	mov    $0x6d0,%esi
    2f8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f8f: R_X86_64_32S	str_469340471
    2f93:	e8 00 00 00 00       	callq  2f98 <register_globals+0x1286>
			2f94: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2f98:	be 6d 06 00 00       	mov    $0x66d,%esi
    2f9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa0: R_X86_64_32S	str_159370975
    2fa4:	e8 00 00 00 00       	callq  2fa9 <register_globals+0x1297>
			2fa5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2fa9:	be fb 05 00 00       	mov    $0x5fb,%esi
    2fae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fb1: R_X86_64_32S	.bss+0x2b8
    2fb5:	e8 00 00 00 00       	callq  2fba <register_globals+0x12a8>
			2fb6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2fba:	be 0c 07 00 00       	mov    $0x70c,%esi
    2fbf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fc2: R_X86_64_32S	str_830635972
    2fc6:	e8 00 00 00 00       	callq  2fcb <register_globals+0x12b9>
			2fc7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2fcb:	be bc 06 00 00       	mov    $0x6bc,%esi
    2fd0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd3: R_X86_64_32S	str_381179709
    2fd7:	e8 00 00 00 00       	callq  2fdc <register_globals+0x12ca>
			2fd8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2fdc:	be e6 06 00 00       	mov    $0x6e6,%esi
    2fe1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fe4: R_X86_64_32S	str_591233090
    2fe8:	e8 00 00 00 00       	callq  2fed <register_globals+0x12db>
			2fe9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2fed:	be ff 06 00 00       	mov    $0x6ff,%esi
    2ff2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ff5: R_X86_64_32S	str_777106966
    2ff9:	e8 00 00 00 00       	callq  2ffe <register_globals+0x12ec>
			2ffa: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    2ffe:	be 48 04 00 00       	mov    $0x448,%esi
    3003:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3006: R_X86_64_32S	.data+0x3db60
    300a:	e8 00 00 00 00       	callq  300f <register_globals+0x12fd>
			300b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    300f:	be 85 06 00 00       	mov    $0x685,%esi
    3014:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3017: R_X86_64_32S	str_212082060
    301b:	e8 00 00 00 00       	callq  3020 <register_globals+0x130e>
			301c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3020:	be b2 06 00 00       	mov    $0x6b2,%esi
    3025:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3028: R_X86_64_32S	str_350974073
    302c:	e8 00 00 00 00       	callq  3031 <register_globals+0x131f>
			302d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3031:	be f8 06 00 00       	mov    $0x6f8,%esi
    3036:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3039: R_X86_64_32S	str_733826661
    303d:	e8 00 00 00 00       	callq  3042 <register_globals+0x1330>
			303e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3042:	be e8 03 00 00       	mov    $0x3e8,%esi
    3047:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			304a: R_X86_64_32S	.devinit.data+0x5a0
    304e:	e8 00 00 00 00       	callq  3053 <register_globals+0x1341>
			304f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3053:	be 37 07 00 00       	mov    $0x737,%esi
    3058:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			305b: R_X86_64_32S	str_989007692
    305f:	e8 00 00 00 00       	callq  3064 <register_globals+0x1352>
			3060: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3064:	be cc 06 00 00       	mov    $0x6cc,%esi
    3069:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			306c: R_X86_64_32S	str_463534873
    3070:	e8 00 00 00 00       	callq  3075 <register_globals+0x1363>
			3071: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3075:	be 40 04 00 00       	mov    $0x440,%esi
    307a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			307d: R_X86_64_32S	.data+0x3d8a0
    3081:	e8 00 00 00 00       	callq  3086 <register_globals+0x1374>
			3082: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3086:	be c7 06 00 00       	mov    $0x6c7,%esi
    308b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			308e: R_X86_64_32S	str_411463795
    3092:	e8 00 00 00 00       	callq  3097 <register_globals+0x1385>
			3093: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3097:	be 61 06 00 00       	mov    $0x661,%esi
    309c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			309f: R_X86_64_32S	str_128149890
    30a3:	e8 00 00 00 00       	callq  30a8 <register_globals+0x1396>
			30a4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    30a8:	be ef 06 00 00       	mov    $0x6ef,%esi
    30ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30b0: R_X86_64_32S	str_65233932
    30b4:	e8 00 00 00 00       	callq  30b9 <register_globals+0x13a7>
			30b5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    30b9:	be 03 07 00 00       	mov    $0x703,%esi
    30be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30c1: R_X86_64_32S	str_793210950
    30c5:	e8 00 00 00 00       	callq  30ca <register_globals+0x13b8>
			30c6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    30ca:	be 33 04 00 00       	mov    $0x433,%esi
    30cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30d2: R_X86_64_32S	.bss+0x2c0
    30d6:	e8 00 00 00 00       	callq  30db <register_globals+0x13c9>
			30d7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    30db:	be be 06 00 00       	mov    $0x6be,%esi
    30e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30e3: R_X86_64_32S	str_38622469
    30e7:	e8 00 00 00 00       	callq  30ec <register_globals+0x13da>
			30e8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    30ec:	be 01 07 00 00       	mov    $0x701,%esi
    30f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30f4: R_X86_64_32S	str_793210942
    30f8:	e8 00 00 00 00       	callq  30fd <register_globals+0x13eb>
			30f9: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    30fd:	be f6 06 00 00       	mov    $0x6f6,%esi
    3102:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3105: R_X86_64_32S	str_703943395
    3109:	e8 00 00 00 00       	callq  310e <register_globals+0x13fc>
			310a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    310e:	be 8b 06 00 00       	mov    $0x68b,%esi
    3113:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3116: R_X86_64_32S	str_239057043
    311a:	e8 00 00 00 00       	callq  311f <register_globals+0x140d>
			311b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    311f:	be a7 06 00 00       	mov    $0x6a7,%esi
    3124:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3127: R_X86_64_32S	str_31269152
    312b:	e8 00 00 00 00       	callq  3130 <register_globals+0x141e>
			312c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3130:	be 81 06 00 00       	mov    $0x681,%esi
    3135:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3138: R_X86_64_32S	str_205466450
    313c:	e8 00 00 00 00       	callq  3141 <register_globals+0x142f>
			313d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3141:	be 8d 06 00 00       	mov    $0x68d,%esi
    3146:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3149: R_X86_64_32S	str_244942894
    314d:	e8 00 00 00 00       	callq  3152 <register_globals+0x1440>
			314e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3152:	be fa 06 00 00       	mov    $0x6fa,%esi
    3157:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			315a: R_X86_64_32S	str_745508101
    315e:	e8 00 00 00 00       	callq  3163 <register_globals+0x1451>
			315f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3163:	be 4b 06 00 00       	mov    $0x64b,%esi
    3168:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			316b: R_X86_64_32S	str_0
    316f:	e8 00 00 00 00       	callq  3174 <register_globals+0x1462>
			3170: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3174:	be 86 06 00 00       	mov    $0x686,%esi
    3179:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			317c: R_X86_64_32S	str_224091079
    3180:	e8 00 00 00 00       	callq  3185 <register_globals+0x1473>
			3181: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3185:	be 53 04 00 00       	mov    $0x453,%esi
    318a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			318d: R_X86_64_32S	.data+0x3d810
    3191:	e8 00 00 00 00       	callq  3196 <register_globals+0x1484>
			3192: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3196:	be 54 06 00 00       	mov    $0x654,%esi
    319b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			319e: R_X86_64_32S	str_1036503729
    31a2:	e8 00 00 00 00       	callq  31a7 <register_globals+0x1495>
			31a3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    31a7:	be 4a 04 00 00       	mov    $0x44a,%esi
    31ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31af: R_X86_64_32S	.data+0x3d9e0
    31b3:	e8 00 00 00 00       	callq  31b8 <register_globals+0x14a6>
			31b4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    31b8:	be ed 06 00 00       	mov    $0x6ed,%esi
    31bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31c0: R_X86_64_32S	str_643410501
    31c4:	e8 00 00 00 00       	callq  31c9 <register_globals+0x14b7>
			31c5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    31c9:	be 53 06 00 00       	mov    $0x653,%esi
    31ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31d1: R_X86_64_32S	str_1036503691
    31d5:	e8 00 00 00 00       	callq  31da <register_globals+0x14c8>
			31d6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    31da:	be 51 06 00 00       	mov    $0x651,%esi
    31df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31e2: R_X86_64_32S	str_1036022787
    31e6:	e8 00 00 00 00       	callq  31eb <register_globals+0x14d9>
			31e7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    31eb:	be b6 06 00 00       	mov    $0x6b6,%esi
    31f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31f3: R_X86_64_32S	str_357078821
    31f7:	e8 00 00 00 00       	callq  31fc <register_globals+0x14ea>
			31f8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    31fc:	be 35 07 00 00       	mov    $0x735,%esi
    3201:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3204: R_X86_64_32S	str_987635201
    3208:	e8 00 00 00 00       	callq  320d <register_globals+0x14fb>
			3209: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    320d:	be b8 06 00 00       	mov    $0x6b8,%esi
    3212:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3215: R_X86_64_32S	str_366215959
    3219:	e8 00 00 00 00       	callq  321e <register_globals+0x150c>
			321a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    321e:	be b4 06 00 00       	mov    $0x6b4,%esi
    3223:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3226: R_X86_64_32S	str_352020295
    322a:	e8 00 00 00 00       	callq  322f <register_globals+0x151d>
			322b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    322f:	be 8f 06 00 00       	mov    $0x68f,%esi
    3234:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3237: R_X86_64_32S	str_245933361
    323b:	e8 00 00 00 00       	callq  3240 <register_globals+0x152e>
			323c: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3240:	be 13 07 00 00       	mov    $0x713,%esi
    3245:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3248: R_X86_64_32S	str_854697413
    324c:	e8 00 00 00 00       	callq  3251 <register_globals+0x153f>
			324d: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3251:	be 8e 06 00 00       	mov    $0x68e,%esi
    3256:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3259: R_X86_64_32S	str_245933323
    325d:	e8 00 00 00 00       	callq  3262 <register_globals+0x1550>
			325e: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3262:	be 76 06 00 00       	mov    $0x676,%esi
    3267:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			326a: R_X86_64_32S	str_173567875
    326e:	e8 00 00 00 00       	callq  3273 <register_globals+0x1561>
			326f: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3273:	be fd 06 00 00       	mov    $0x6fd,%esi
    3278:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			327b: R_X86_64_32S	str_76562853
    327f:	e8 00 00 00 00       	callq  3284 <register_globals+0x1572>
			3280: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    3284:	c9                   	leaveq 
    3285:	c3                   	retq   

0000000000003286 <register_functions>:
    3286:	55                   	push   %rbp
    3287:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			328a: R_X86_64_32S	.rodata.str1.1+0xaad
    328e:	48 89 e5             	mov    %rsp,%rbp
    3291:	e8 00 00 00 00       	callq  3296 <register_functions+0x10>
			3292: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3296:	be b8 05 00 00       	mov    $0x5b8,%esi
    329b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			329e: R_X86_64_32S	ethtool_op_get_link
    32a2:	e8 00 00 00 00       	callq  32a7 <register_functions+0x21>
			32a3: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    32a7:	be b9 05 00 00       	mov    $0x5b9,%esi
    32ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32af: R_X86_64_32S	ethtool_op_set_sg
    32b3:	e8 00 00 00 00       	callq  32b8 <register_functions+0x32>
			32b4: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    32b8:	be 06 06 00 00       	mov    $0x606,%esi
    32bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32c0: R_X86_64_32S	param_set_int
    32c4:	e8 00 00 00 00       	callq  32c9 <register_functions+0x43>
			32c5: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    32c9:	be 04 06 00 00       	mov    $0x604,%esi
    32ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32d1: R_X86_64_32S	param_get_int
    32d5:	e8 00 00 00 00       	callq  32da <register_functions+0x54>
			32d6: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    32da:	be 07 06 00 00       	mov    $0x607,%esi
    32df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32e2: R_X86_64_32S	param_set_uint
    32e6:	e8 00 00 00 00       	callq  32eb <register_functions+0x65>
			32e7: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    32eb:	be 05 06 00 00       	mov    $0x605,%esi
    32f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32f3: R_X86_64_32S	param_get_uint
    32f7:	e8 00 00 00 00       	callq  32fc <register_functions+0x76>
			32f8: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    32fc:	be 03 06 00 00       	mov    $0x603,%esi
    3301:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3304: R_X86_64_32S	param_array_set
    3308:	e8 00 00 00 00       	callq  330d <register_functions+0x87>
			3309: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    330d:	be 02 06 00 00       	mov    $0x602,%esi
    3312:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3315: R_X86_64_32S	param_array_get
    3319:	e8 00 00 00 00       	callq  331e <register_functions+0x98>
			331a: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    331e:	be b7 05 00 00       	mov    $0x5b7,%esi
    3323:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3326: R_X86_64_32S	eth_validate_addr
    332a:	e8 00 00 00 00       	callq  332f <register_functions+0xa9>
			332b: R_X86_64_PC32	nooks_ot_register_userfn+0xfffffffffffffffc
    332f:	c9                   	leaveq 
    3330:	c3                   	retq   

0000000000003331 <init_timer>:
    3331:	55                   	push   %rbp
    3332:	48 89 e5             	mov    %rsp,%rbp
    3335:	41 55                	push   %r13
    3337:	49 89 fd             	mov    %rdi,%r13
    333a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			333d: R_X86_64_32S	.rodata.str1.1+0xac0
    3341:	41 54                	push   %r12
    3343:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    3347:	53                   	push   %rbx
    3348:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    334c:	48 83 ec 38          	sub    $0x38,%rsp
    3350:	e8 00 00 00 00       	callq  3355 <init_timer+0x24>
			3351: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3355:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3358: R_X86_64_32S	.rodata.str1.1+0xacb
    335c:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    3363:	00 
    3364:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    336b:	00 
    336c:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    3373:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    3377:	e8 00 00 00 00       	callq  337c <init_timer+0x4b>
			3378: R_X86_64_PC32	record_function+0xfffffffffffffffc
    337c:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    3380:	4c 89 e2             	mov    %r12,%rdx
    3383:	48 89 de             	mov    %rbx,%rsi
    3386:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3389: R_X86_64_32S	.rodata.str1.1+0xac0
    338d:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3394:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    339b:	00 
    339c:	e8 00 00 00 00       	callq  33a1 <init_timer+0x70>
			339d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    33a1:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    33a5:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    33a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33ac: R_X86_64_32S	.rodata.str1.1+0xac0
    33b0:	48 c7 45 b0 c0 05 00 	movq   $0x5c0,0xffffffffffffffb0(%rbp)
    33b7:	00 
    33b8:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    33bc:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    33bf:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    33c2:	e8 00 00 00 00       	callq  33c7 <init_timer+0x96>
			33c3: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    33c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33ca: R_X86_64_32S	.rodata.str1.1+0xae4
    33ce:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    33d2:	e8 00 00 00 00       	callq  33d7 <init_timer+0xa6>
			33d3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    33d7:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    33db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33de: R_X86_64_32S	.rodata.str1.1+0xac0
    33e2:	41 b8 30 00 00 00    	mov    $0x30,%r8d
    33e8:	48 89 d9             	mov    %rbx,%rcx
    33eb:	4c 89 e2             	mov    %r12,%rdx
    33ee:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    33f5:	e8 00 00 00 00       	callq  33fa <init_timer+0xc9>
			33f6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    33fa:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    33fe:	48 85 ff             	test   %rdi,%rdi
    3401:	74 05                	je     3408 <init_timer+0xd7>
    3403:	e8 00 00 00 00       	callq  3408 <init_timer+0xd7>
			3404: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3408:	48 83 c4 38          	add    $0x38,%rsp
    340c:	5b                   	pop    %rbx
    340d:	41 5c                	pop    %r12
    340f:	41 5d                	pop    %r13
    3411:	c9                   	leaveq 
    3412:	c3                   	retq   

0000000000003413 <pci_set_master>:
    3413:	55                   	push   %rbp
    3414:	48 89 e5             	mov    %rsp,%rbp
    3417:	41 55                	push   %r13
    3419:	49 89 fd             	mov    %rdi,%r13
    341c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			341f: R_X86_64_32S	.rodata.str1.1+0xafd
    3423:	41 54                	push   %r12
    3425:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    3429:	53                   	push   %rbx
    342a:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    342e:	48 83 ec 38          	sub    $0x38,%rsp
    3432:	e8 00 00 00 00       	callq  3437 <pci_set_master+0x24>
			3433: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3437:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			343a: R_X86_64_32S	.rodata.str1.1+0xb0c
    343e:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    3445:	00 
    3446:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    344d:	00 
    344e:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    3455:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    3459:	e8 00 00 00 00       	callq  345e <pci_set_master+0x4b>
			345a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    345e:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    3462:	4c 89 e2             	mov    %r12,%rdx
    3465:	48 89 de             	mov    %rbx,%rsi
    3468:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			346b: R_X86_64_32S	.rodata.str1.1+0xafd
    346f:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3476:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    347d:	00 
    347e:	e8 00 00 00 00       	callq  3483 <pci_set_master+0x70>
			347f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3483:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    3487:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    348b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			348e: R_X86_64_32S	.rodata.str1.1+0xafd
    3492:	48 c7 45 b0 25 06 00 	movq   $0x625,0xffffffffffffffb0(%rbp)
    3499:	00 
    349a:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    349e:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    34a1:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    34a4:	e8 00 00 00 00       	callq  34a9 <pci_set_master+0x96>
			34a5: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    34a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34ac: R_X86_64_32S	.rodata.str1.1+0xb29
    34b0:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    34b4:	e8 00 00 00 00       	callq  34b9 <pci_set_master+0xa6>
			34b5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    34b9:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    34bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34c0: R_X86_64_32S	.rodata.str1.1+0xafd
    34c4:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    34ca:	48 89 d9             	mov    %rbx,%rcx
    34cd:	4c 89 e2             	mov    %r12,%rdx
    34d0:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    34d7:	e8 00 00 00 00       	callq  34dc <pci_set_master+0xc9>
			34d8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    34dc:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    34e0:	48 85 ff             	test   %rdi,%rdi
    34e3:	74 05                	je     34ea <pci_set_master+0xd7>
    34e5:	e8 00 00 00 00       	callq  34ea <pci_set_master+0xd7>
			34e6: R_X86_64_PC32	kfree+0xfffffffffffffffc
    34ea:	48 83 c4 38          	add    $0x38,%rsp
    34ee:	5b                   	pop    %rbx
    34ef:	41 5c                	pop    %r12
    34f1:	41 5d                	pop    %r13
    34f3:	c9                   	leaveq 
    34f4:	c3                   	retq   

00000000000034f5 <__netif_schedule>:
    34f5:	55                   	push   %rbp
    34f6:	48 89 e5             	mov    %rsp,%rbp
    34f9:	41 55                	push   %r13
    34fb:	49 89 fd             	mov    %rdi,%r13
    34fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3501: R_X86_64_32S	.rodata.str1.1+0xb46
    3505:	41 54                	push   %r12
    3507:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    350b:	53                   	push   %rbx
    350c:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    3510:	48 83 ec 38          	sub    $0x38,%rsp
    3514:	e8 00 00 00 00       	callq  3519 <__netif_schedule+0x24>
			3515: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3519:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			351c: R_X86_64_32S	.rodata.str1.1+0xb57
    3520:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    3527:	00 
    3528:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    352f:	00 
    3530:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    3537:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    353b:	e8 00 00 00 00       	callq  3540 <__netif_schedule+0x4b>
			353c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3540:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    3544:	4c 89 e2             	mov    %r12,%rdx
    3547:	48 89 de             	mov    %rbx,%rsi
    354a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			354d: R_X86_64_32S	.rodata.str1.1+0xb46
    3551:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3558:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    355f:	00 
    3560:	e8 00 00 00 00       	callq  3565 <__netif_schedule+0x70>
			3561: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3565:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    3569:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    356d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3570: R_X86_64_32S	.rodata.str1.1+0xb46
    3574:	48 c7 45 b0 3c 04 00 	movq   $0x43c,0xffffffffffffffb0(%rbp)
    357b:	00 
    357c:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    3580:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3583:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    3586:	e8 00 00 00 00       	callq  358b <__netif_schedule+0x96>
			3587: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    358b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			358e: R_X86_64_32S	.rodata.str1.1+0xb76
    3592:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    3596:	e8 00 00 00 00       	callq  359b <__netif_schedule+0xa6>
			3597: R_X86_64_PC32	record_function+0xfffffffffffffffc
    359b:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    359f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35a2: R_X86_64_32S	.rodata.str1.1+0xb46
    35a6:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
    35ac:	48 89 d9             	mov    %rbx,%rcx
    35af:	4c 89 e2             	mov    %r12,%rdx
    35b2:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    35b9:	e8 00 00 00 00       	callq  35be <__netif_schedule+0xc9>
			35ba: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    35be:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    35c2:	48 85 ff             	test   %rdi,%rdi
    35c5:	74 05                	je     35cc <__netif_schedule+0xd7>
    35c7:	e8 00 00 00 00       	callq  35cc <__netif_schedule+0xd7>
			35c8: R_X86_64_PC32	kfree+0xfffffffffffffffc
    35cc:	48 83 c4 38          	add    $0x38,%rsp
    35d0:	5b                   	pop    %rbx
    35d1:	41 5c                	pop    %r12
    35d3:	41 5d                	pop    %r13
    35d5:	c9                   	leaveq 
    35d6:	c3                   	retq   

00000000000035d7 <pci_disable_device>:
    35d7:	55                   	push   %rbp
    35d8:	48 89 e5             	mov    %rsp,%rbp
    35db:	41 55                	push   %r13
    35dd:	49 89 fd             	mov    %rdi,%r13
    35e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35e3: R_X86_64_32S	.rodata.str1.1+0xb95
    35e7:	41 54                	push   %r12
    35e9:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    35ed:	53                   	push   %rbx
    35ee:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    35f2:	48 83 ec 38          	sub    $0x38,%rsp
    35f6:	e8 00 00 00 00       	callq  35fb <pci_disable_device+0x24>
			35f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    35fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35fe: R_X86_64_32S	.rodata.str1.1+0xba8
    3602:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    3609:	00 
    360a:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    3611:	00 
    3612:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    3619:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    361d:	e8 00 00 00 00       	callq  3622 <pci_disable_device+0x4b>
			361e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3622:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    3626:	4c 89 e2             	mov    %r12,%rdx
    3629:	48 89 de             	mov    %rbx,%rsi
    362c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			362f: R_X86_64_32S	.rodata.str1.1+0xb95
    3633:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    363a:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    3641:	00 
    3642:	e8 00 00 00 00       	callq  3647 <pci_disable_device+0x70>
			3643: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3647:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    364b:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    364f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3652: R_X86_64_32S	.rodata.str1.1+0xb95
    3656:	48 c7 45 b0 0d 06 00 	movq   $0x60d,0xffffffffffffffb0(%rbp)
    365d:	00 
    365e:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    3662:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3665:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    3668:	e8 00 00 00 00       	callq  366d <pci_disable_device+0x96>
			3669: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    366d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3670: R_X86_64_32S	.rodata.str1.1+0xbc9
    3674:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    3678:	e8 00 00 00 00       	callq  367d <pci_disable_device+0xa6>
			3679: R_X86_64_PC32	record_function+0xfffffffffffffffc
    367d:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    3681:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3684: R_X86_64_32S	.rodata.str1.1+0xb95
    3688:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    368e:	48 89 d9             	mov    %rbx,%rcx
    3691:	4c 89 e2             	mov    %r12,%rdx
    3694:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    369b:	e8 00 00 00 00       	callq  36a0 <pci_disable_device+0xc9>
			369c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    36a0:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    36a4:	48 85 ff             	test   %rdi,%rdi
    36a7:	74 05                	je     36ae <pci_disable_device+0xd7>
    36a9:	e8 00 00 00 00       	callq  36ae <pci_disable_device+0xd7>
			36aa: R_X86_64_PC32	kfree+0xfffffffffffffffc
    36ae:	48 83 c4 38          	add    $0x38,%rsp
    36b2:	5b                   	pop    %rbx
    36b3:	41 5c                	pop    %r12
    36b5:	41 5d                	pop    %r13
    36b7:	c9                   	leaveq 
    36b8:	c3                   	retq   

00000000000036b9 <iounmap>:
    36b9:	55                   	push   %rbp
    36ba:	48 89 e5             	mov    %rsp,%rbp
    36bd:	41 55                	push   %r13
    36bf:	49 89 fd             	mov    %rdi,%r13
    36c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36c5: R_X86_64_32S	.rodata.str1.1+0xbea
    36c9:	41 54                	push   %r12
    36cb:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    36cf:	53                   	push   %rbx
    36d0:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    36d4:	48 83 ec 38          	sub    $0x38,%rsp
    36d8:	e8 00 00 00 00       	callq  36dd <iounmap+0x24>
			36d9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    36dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36e0: R_X86_64_32S	.rodata.str1.1+0xbf2
    36e4:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    36eb:	00 
    36ec:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    36f3:	00 
    36f4:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    36fb:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    36ff:	e8 00 00 00 00       	callq  3704 <iounmap+0x4b>
			3700: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3704:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    3708:	4c 89 e2             	mov    %r12,%rdx
    370b:	48 89 de             	mov    %rbx,%rsi
    370e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3711: R_X86_64_32S	.rodata.str1.1+0xbea
    3715:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    371c:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    3723:	00 
    3724:	e8 00 00 00 00       	callq  3729 <iounmap+0x70>
			3725: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3729:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    372d:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    3731:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3734: R_X86_64_32S	.rodata.str1.1+0xbea
    3738:	48 c7 45 b0 c1 05 00 	movq   $0x5c1,0xffffffffffffffb0(%rbp)
    373f:	00 
    3740:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    3744:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3747:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    374a:	e8 00 00 00 00       	callq  374f <iounmap+0x96>
			374b: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    374f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3752: R_X86_64_32S	.rodata.str1.1+0xc08
    3756:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    375a:	e8 00 00 00 00       	callq  375f <iounmap+0xa6>
			375b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    375f:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    3763:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3766: R_X86_64_32S	.rodata.str1.1+0xbea
    376a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3770:	48 89 d9             	mov    %rbx,%rcx
    3773:	4c 89 e2             	mov    %r12,%rdx
    3776:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    377d:	e8 00 00 00 00       	callq  3782 <iounmap+0xc9>
			377e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3782:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    3786:	48 85 ff             	test   %rdi,%rdi
    3789:	74 05                	je     3790 <iounmap+0xd7>
    378b:	e8 00 00 00 00       	callq  3790 <iounmap+0xd7>
			378c: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3790:	48 83 c4 38          	add    $0x38,%rsp
    3794:	5b                   	pop    %rbx
    3795:	41 5c                	pop    %r12
    3797:	41 5d                	pop    %r13
    3799:	c9                   	leaveq 
    379a:	c3                   	retq   

000000000000379b <e1000_pci_clear_mwi>:
    379b:	55                   	push   %rbp
    379c:	48 89 e5             	mov    %rsp,%rbp
    379f:	41 55                	push   %r13
    37a1:	41 54                	push   %r12
    37a3:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    37a7:	53                   	push   %rbx
    37a8:	48 89 fb             	mov    %rdi,%rbx
    37ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37ae: R_X86_64_32S	.rodata.str1.1+0xc9e
    37b2:	48 83 ec 38          	sub    $0x38,%rsp
    37b6:	e8 00 00 00 00       	callq  37bb <e1000_pci_clear_mwi+0x20>
			37b7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    37bb:	48 8b 43 20          	mov    0x20(%rbx),%rax
    37bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37c2: R_X86_64_32S	.rodata.str1.1+0xcb2
    37c6:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    37ca:	4c 8b a8 f8 02 00 00 	mov    0x2f8(%rax),%r13
    37d1:	e8 00 00 00 00       	callq  37d6 <e1000_pci_clear_mwi+0x3b>
			37d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    37d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37d9: R_X86_64_32S	.rodata.str1.1+0xcc0
    37dd:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    37e4:	00 
    37e5:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    37ec:	00 
    37ed:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    37f4:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    37f8:	e8 00 00 00 00       	callq  37fd <e1000_pci_clear_mwi+0x62>
			37f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    37fd:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    3801:	4c 89 e2             	mov    %r12,%rdx
    3804:	48 89 de             	mov    %rbx,%rsi
    3807:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			380a: R_X86_64_32S	.rodata.str1.1+0xcb2
    380e:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3815:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    381c:	00 
    381d:	e8 00 00 00 00       	callq  3822 <e1000_pci_clear_mwi+0x87>
			381e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3822:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    3826:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    382a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			382d: R_X86_64_32S	.rodata.str1.1+0xcb2
    3831:	48 c7 45 b0 0c 06 00 	movq   $0x60c,0xffffffffffffffb0(%rbp)
    3838:	00 
    3839:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    383d:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3840:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    3843:	e8 00 00 00 00       	callq  3848 <e1000_pci_clear_mwi+0xad>
			3844: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    3848:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			384b: R_X86_64_32S	.rodata.str1.1+0xcdc
    384f:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    3853:	e8 00 00 00 00       	callq  3858 <e1000_pci_clear_mwi+0xbd>
			3854: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3858:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    385c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			385f: R_X86_64_32S	.rodata.str1.1+0xcb2
    3863:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    3869:	48 89 d9             	mov    %rbx,%rcx
    386c:	4c 89 e2             	mov    %r12,%rdx
    386f:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3876:	e8 00 00 00 00       	callq  387b <e1000_pci_clear_mwi+0xe0>
			3877: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    387b:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    387f:	48 85 ff             	test   %rdi,%rdi
    3882:	74 05                	je     3889 <e1000_pci_clear_mwi+0xee>
    3884:	e8 00 00 00 00       	callq  3889 <e1000_pci_clear_mwi+0xee>
			3885: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3889:	48 83 c4 38          	add    $0x38,%rsp
    388d:	5b                   	pop    %rbx
    388e:	41 5c                	pop    %r12
    3890:	41 5d                	pop    %r13
    3892:	c9                   	leaveq 
    3893:	c3                   	retq   

0000000000003894 <pci_enable_device>:
    3894:	55                   	push   %rbp
    3895:	48 89 e5             	mov    %rsp,%rbp
    3898:	41 56                	push   %r14
    389a:	4c 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%r14
    389e:	41 55                	push   %r13
    38a0:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    38a4:	41 54                	push   %r12
    38a6:	4c 8d 65 d0          	lea    0xffffffffffffffd0(%rbp),%r12
    38aa:	53                   	push   %rbx
    38ab:	48 89 fb             	mov    %rdi,%rbx
    38ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38b1: R_X86_64_32S	.rodata.str1.1+0xcf8
    38b5:	48 83 ec 30          	sub    $0x30,%rsp
    38b9:	e8 00 00 00 00       	callq  38be <pci_enable_device+0x2a>
			38ba: R_X86_64_PC32	record_function+0xfffffffffffffffc
    38be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38c1: R_X86_64_32S	.rodata.str1.1+0xd0a
    38c5:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    38c9:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    38d0:	00 
    38d1:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    38d8:	00 
    38d9:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    38e0:	e8 00 00 00 00       	callq  38e5 <pci_enable_device+0x51>
			38e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    38e5:	4c 89 e1             	mov    %r12,%rcx
    38e8:	4c 89 f2             	mov    %r14,%rdx
    38eb:	4c 89 ee             	mov    %r13,%rsi
    38ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38f1: R_X86_64_32S	.rodata.str1.1+0xcf8
    38f5:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    38fc:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    3903:	00 
    3904:	e8 00 00 00 00       	callq  3909 <pci_enable_device+0x75>
			3905: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3909:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    390d:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    3911:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3914: R_X86_64_32S	.rodata.str1.1+0xcf8
    3918:	48 c7 45 b0 11 06 00 	movq   $0x611,0xffffffffffffffb0(%rbp)
    391f:	00 
    3920:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    3924:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3927:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    392a:	e8 00 00 00 00       	callq  392f <pci_enable_device+0x9b>
			392b: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    392f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3932: R_X86_64_32S	.rodata.str1.1+0xd2a
    3936:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    393a:	e8 00 00 00 00       	callq  393f <pci_enable_device+0xab>
			393b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    393f:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    3943:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    3949:	4c 89 e9             	mov    %r13,%rcx
    394c:	4c 89 e2             	mov    %r12,%rdx
    394f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3952: R_X86_64_32S	.rodata.str1.1+0xcf8
    3956:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
    395d:	48 89 de             	mov    %rbx,%rsi
    3960:	e8 00 00 00 00       	callq  3965 <pci_enable_device+0xd1>
			3961: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3965:	48 89 de             	mov    %rbx,%rsi
    3968:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			396b: R_X86_64_32S	.rodata.str1.1+0xcf8
    396f:	4d 89 f0             	mov    %r14,%r8
    3972:	b9 04 00 00 00       	mov    $0x4,%ecx
    3977:	4c 89 e2             	mov    %r12,%rdx
    397a:	e8 00 00 00 00       	callq  397f <pci_enable_device+0xeb>
			397b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    397f:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    3983:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
    3986:	48 85 ff             	test   %rdi,%rdi
    3989:	74 05                	je     3990 <pci_enable_device+0xfc>
    398b:	e8 00 00 00 00       	callq  3990 <pci_enable_device+0xfc>
			398c: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3990:	48 83 c4 30          	add    $0x30,%rsp
    3994:	89 d8                	mov    %ebx,%eax
    3996:	5b                   	pop    %rbx
    3997:	41 5c                	pop    %r12
    3999:	41 5d                	pop    %r13
    399b:	41 5e                	pop    %r14
    399d:	c9                   	leaveq 
    399e:	c3                   	retq   

000000000000399f <schedule_work>:
    399f:	55                   	push   %rbp
    39a0:	48 89 e5             	mov    %rsp,%rbp
    39a3:	41 56                	push   %r14
    39a5:	4c 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%r14
    39a9:	41 55                	push   %r13
    39ab:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    39af:	41 54                	push   %r12
    39b1:	4c 8d 65 d0          	lea    0xffffffffffffffd0(%rbp),%r12
    39b5:	53                   	push   %rbx
    39b6:	48 89 fb             	mov    %rdi,%rbx
    39b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39bc: R_X86_64_32S	.rodata.str1.1+0xd4a
    39c0:	48 83 ec 30          	sub    $0x30,%rsp
    39c4:	e8 00 00 00 00       	callq  39c9 <schedule_work+0x2a>
			39c5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    39c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39cc: R_X86_64_32S	.rodata.str1.1+0xd58
    39d0:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    39d4:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    39db:	00 
    39dc:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    39e3:	00 
    39e4:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    39eb:	e8 00 00 00 00       	callq  39f0 <schedule_work+0x51>
			39ec: R_X86_64_PC32	record_function+0xfffffffffffffffc
    39f0:	4c 89 e1             	mov    %r12,%rcx
    39f3:	4c 89 f2             	mov    %r14,%rdx
    39f6:	4c 89 ee             	mov    %r13,%rsi
    39f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39fc: R_X86_64_32S	.rodata.str1.1+0xd4a
    3a00:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3a07:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    3a0e:	00 
    3a0f:	e8 00 00 00 00       	callq  3a14 <schedule_work+0x75>
			3a10: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3a14:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    3a18:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    3a1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a1f: R_X86_64_32S	.rodata.str1.1+0xd4a
    3a23:	48 c7 45 b0 3a 06 00 	movq   $0x63a,0xffffffffffffffb0(%rbp)
    3a2a:	00 
    3a2b:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    3a2f:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3a32:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    3a35:	e8 00 00 00 00       	callq  3a3a <schedule_work+0x9b>
			3a36: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    3a3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a3d: R_X86_64_32S	.rodata.str1.1+0xd74
    3a41:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    3a45:	e8 00 00 00 00       	callq  3a4a <schedule_work+0xab>
			3a46: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3a4a:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    3a4e:	41 b8 fe ff ff ff    	mov    $0xfffffffe,%r8d
    3a54:	4c 89 e9             	mov    %r13,%rcx
    3a57:	4c 89 e2             	mov    %r12,%rdx
    3a5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a5d: R_X86_64_32S	.rodata.str1.1+0xd4a
    3a61:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
    3a68:	48 89 de             	mov    %rbx,%rsi
    3a6b:	e8 00 00 00 00       	callq  3a70 <schedule_work+0xd1>
			3a6c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3a70:	48 89 de             	mov    %rbx,%rsi
    3a73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a76: R_X86_64_32S	.rodata.str1.1+0xd4a
    3a7a:	4d 89 f0             	mov    %r14,%r8
    3a7d:	b9 04 00 00 00       	mov    $0x4,%ecx
    3a82:	4c 89 e2             	mov    %r12,%rdx
    3a85:	e8 00 00 00 00       	callq  3a8a <schedule_work+0xeb>
			3a86: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    3a8a:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    3a8e:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
    3a91:	48 85 ff             	test   %rdi,%rdi
    3a94:	74 05                	je     3a9b <schedule_work+0xfc>
    3a96:	e8 00 00 00 00       	callq  3a9b <schedule_work+0xfc>
			3a97: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3a9b:	48 83 c4 30          	add    $0x30,%rsp
    3a9f:	89 d8                	mov    %ebx,%eax
    3aa1:	5b                   	pop    %rbx
    3aa2:	41 5c                	pop    %r12
    3aa4:	41 5d                	pop    %r13
    3aa6:	41 5e                	pop    %r14
    3aa8:	c9                   	leaveq 
    3aa9:	c3                   	retq   

0000000000003aaa <netpoll_trap>:
    3aaa:	55                   	push   %rbp
    3aab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aae: R_X86_64_32S	.rodata.str1.1+0xd90
    3ab2:	48 89 e5             	mov    %rsp,%rbp
    3ab5:	53                   	push   %rbx
    3ab6:	48 83 ec 28          	sub    $0x28,%rsp
    3aba:	e8 00 00 00 00       	callq  3abf <netpoll_trap+0x15>
			3abb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3abf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ac2: R_X86_64_32S	.rodata.str1.1+0xd9d
    3ac6:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    3acd:	00 
    3ace:	48 c7 45 e0 00 00 00 	movq   $0x0,0xffffffffffffffe0(%rbp)
    3ad5:	00 
    3ad6:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    3add:	e8 00 00 00 00       	callq  3ae2 <netpoll_trap+0x38>
			3ade: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3ae2:	48 8d 75 d0          	lea    0xffffffffffffffd0(%rbp),%rsi
    3ae6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ae9: R_X86_64_32S	.rodata.str1.1+0xd90
    3aed:	48 c7 45 d0 f2 05 00 	movq   $0x5f2,0xffffffffffffffd0(%rbp)
    3af4:	00 
    3af5:	48 c7 45 e0 00 00 00 	movq   $0x0,0xffffffffffffffe0(%rbp)
    3afc:	00 
    3afd:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    3b04:	e8 00 00 00 00       	callq  3b09 <netpoll_trap+0x5f>
			3b05: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    3b09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b0c: R_X86_64_32S	.rodata.str1.1+0xdb8
    3b10:	e8 00 00 00 00       	callq  3b15 <netpoll_trap+0x6b>
			3b11: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3b15:	48 8b 75 e0          	mov    0xffffffffffffffe0(%rbp),%rsi
    3b19:	48 8d 55 e8          	lea    0xffffffffffffffe8(%rbp),%rdx
    3b1d:	4c 8d 45 ec          	lea    0xffffffffffffffec(%rbp),%r8
    3b21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b24: R_X86_64_32S	.rodata.str1.1+0xd90
    3b28:	b9 04 00 00 00       	mov    $0x4,%ecx
    3b2d:	c7 45 e8 00 00 00 00 	movl   $0x0,0xffffffffffffffe8(%rbp)
    3b34:	e8 00 00 00 00       	callq  3b39 <netpoll_trap+0x8f>
			3b35: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    3b39:	48 8b 7d e0          	mov    0xffffffffffffffe0(%rbp),%rdi
    3b3d:	8b 5d ec             	mov    0xffffffffffffffec(%rbp),%ebx
    3b40:	48 85 ff             	test   %rdi,%rdi
    3b43:	74 05                	je     3b4a <netpoll_trap+0xa0>
    3b45:	e8 00 00 00 00       	callq  3b4a <netpoll_trap+0xa0>
			3b46: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3b4a:	89 d8                	mov    %ebx,%eax
    3b4c:	48 83 c4 28          	add    $0x28,%rsp
    3b50:	5b                   	pop    %rbx
    3b51:	c9                   	leaveq 
    3b52:	c3                   	retq   

0000000000003b53 <e1000_pci_set_mwi>:
    3b53:	55                   	push   %rbp
    3b54:	48 89 e5             	mov    %rsp,%rbp
    3b57:	41 56                	push   %r14
    3b59:	4c 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%r14
    3b5d:	41 55                	push   %r13
    3b5f:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    3b63:	41 54                	push   %r12
    3b65:	4c 8d 65 d0          	lea    0xffffffffffffffd0(%rbp),%r12
    3b69:	53                   	push   %rbx
    3b6a:	48 89 fb             	mov    %rdi,%rbx
    3b6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b70: R_X86_64_32S	.rodata.str1.1+0xe6e
    3b74:	48 83 ec 30          	sub    $0x30,%rsp
    3b78:	e8 00 00 00 00       	callq  3b7d <e1000_pci_set_mwi+0x2a>
			3b79: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3b7d:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3b81:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b84: R_X86_64_32S	.rodata.str1.1+0xe80
    3b88:	48 8b 98 f8 02 00 00 	mov    0x2f8(%rax),%rbx
    3b8f:	e8 00 00 00 00       	callq  3b94 <e1000_pci_set_mwi+0x41>
			3b90: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3b94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b97: R_X86_64_32S	.rodata.str1.1+0xe8c
    3b9b:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    3ba2:	00 
    3ba3:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    3baa:	00 
    3bab:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    3baf:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    3bb6:	e8 00 00 00 00       	callq  3bbb <e1000_pci_set_mwi+0x68>
			3bb7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3bbb:	4c 89 e1             	mov    %r12,%rcx
    3bbe:	4c 89 f2             	mov    %r14,%rdx
    3bc1:	4c 89 ee             	mov    %r13,%rsi
    3bc4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3bc7: R_X86_64_32S	.rodata.str1.1+0xe80
    3bcb:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    3bd2:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    3bd9:	00 
    3bda:	e8 00 00 00 00       	callq  3bdf <e1000_pci_set_mwi+0x8c>
			3bdb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3bdf:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    3be3:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    3be7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3bea: R_X86_64_32S	.rodata.str1.1+0xe80
    3bee:	48 c7 45 b0 26 06 00 	movq   $0x626,0xffffffffffffffb0(%rbp)
    3bf5:	00 
    3bf6:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    3bfa:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    3bfd:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    3c00:	e8 00 00 00 00       	callq  3c05 <e1000_pci_set_mwi+0xb2>
			3c01: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    3c05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c08: R_X86_64_32S	.rodata.str1.1+0xea6
    3c0c:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    3c10:	e8 00 00 00 00       	callq  3c15 <e1000_pci_set_mwi+0xc2>
			3c11: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3c15:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    3c19:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    3c1f:	4c 89 e9             	mov    %r13,%rcx
    3c22:	4c 89 e2             	mov    %r12,%rdx
    3c25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c28: R_X86_64_32S	.rodata.str1.1+0xe80
    3c2c:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
    3c33:	48 89 de             	mov    %rbx,%rsi
    3c36:	e8 00 00 00 00       	callq  3c3b <e1000_pci_set_mwi+0xe8>
			3c37: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3c3b:	48 89 de             	mov    %rbx,%rsi
    3c3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c41: R_X86_64_32S	.rodata.str1.1+0xe80
    3c45:	4d 89 f0             	mov    %r14,%r8
    3c48:	b9 04 00 00 00       	mov    $0x4,%ecx
    3c4d:	4c 89 e2             	mov    %r12,%rdx
    3c50:	e8 00 00 00 00       	callq  3c55 <e1000_pci_set_mwi+0x102>
			3c51: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    3c55:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    3c59:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
    3c5c:	48 85 ff             	test   %rdi,%rdi
    3c5f:	74 0d                	je     3c6e <e1000_pci_set_mwi+0x11b>
    3c61:	e8 00 00 00 00       	callq  3c66 <e1000_pci_set_mwi+0x113>
			3c62: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3c66:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    3c6d:	00 
    3c6e:	85 db                	test   %ebx,%ebx
    3c70:	74 0e                	je     3c80 <e1000_pci_set_mwi+0x12d>
    3c72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c75: R_X86_64_32S	str_936470366
    3c79:	31 c0                	xor    %eax,%eax
    3c7b:	e8 00 00 00 00       	callq  3c80 <e1000_pci_set_mwi+0x12d>
			3c7c: R_X86_64_PC32	printk+0xfffffffffffffffc
    3c80:	48 83 c4 30          	add    $0x30,%rsp
    3c84:	5b                   	pop    %rbx
    3c85:	41 5c                	pop    %r12
    3c87:	41 5d                	pop    %r13
    3c89:	41 5e                	pop    %r14
    3c8b:	c9                   	leaveq 
    3c8c:	c3                   	retq   

0000000000003c8d <reg_set_and_check>:
    3c8d:	55                   	push   %rbp
    3c8e:	48 89 e5             	mov    %rsp,%rbp
    3c91:	41 57                	push   %r15
    3c93:	41 56                	push   %r14
    3c95:	49 89 fe             	mov    %rdi,%r14
    3c98:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c9b: R_X86_64_32S	.rodata.str1.1+0xf03
    3c9f:	41 55                	push   %r13
    3ca1:	45 89 c5             	mov    %r8d,%r13d
    3ca4:	41 54                	push   %r12
    3ca6:	41 89 cc             	mov    %ecx,%r12d
    3ca9:	45 21 e5             	and    %r12d,%r13d
    3cac:	53                   	push   %rbx
    3cad:	48 83 ec 18          	sub    $0x18,%rsp
    3cb1:	48 89 75 d0          	mov    %rsi,0xffffffffffffffd0(%rbp)
    3cb5:	89 55 cc             	mov    %edx,0xffffffffffffffcc(%rbp)
    3cb8:	e8 00 00 00 00       	callq  3cbd <reg_set_and_check+0x30>
			3cb9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3cbd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3cc0: R_X86_64_32S	.rodata.str1.1+0xb4
    3cc4:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    3ccb:	e8 00 00 00 00       	callq  3cd0 <reg_set_and_check+0x43>
			3ccc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3cd0:	4c 63 7d cc          	movslq 0xffffffffffffffcc(%rbp),%r15
    3cd4:	4c 01 fb             	add    %r15,%rbx
    3cd7:	44 89 2b             	mov    %r13d,(%rbx)
    3cda:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3cdd: R_X86_64_32S	.rodata.str1.1+0xae
    3ce1:	e8 00 00 00 00       	callq  3ce6 <reg_set_and_check+0x59>
			3ce2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3ce6:	8b 13                	mov    (%rbx),%edx
    3ce8:	44 21 e2             	and    %r12d,%edx
    3ceb:	31 c0                	xor    %eax,%eax
    3ced:	44 39 ea             	cmp    %r13d,%edx
    3cf0:	74 39                	je     3d2b <reg_set_and_check+0x9e>
    3cf2:	41 f6 86 c0 07 00 00 	testb  $0x1,0x7c0(%r14)
    3cf9:	01 
    3cfa:	74 23                	je     3d1f <reg_set_and_check+0x92>
    3cfc:	49 8b b6 f0 02 00 00 	mov    0x2f0(%r14),%rsi
    3d03:	8b 4d cc             	mov    0xffffffffffffffcc(%rbp),%ecx
    3d06:	41 89 d0             	mov    %edx,%r8d
    3d09:	45 89 e9             	mov    %r13d,%r9d
    3d0c:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			3d0f: R_X86_64_32S	str_842613848
    3d13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3d16: R_X86_64_32S	str_337274492
    3d1a:	e8 00 00 00 00       	callq  3d1f <reg_set_and_check+0x92>
			3d1b: R_X86_64_PC32	printk+0xfffffffffffffffc
    3d1f:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    3d23:	4c 89 38             	mov    %r15,(%rax)
    3d26:	b8 01 00 00 00       	mov    $0x1,%eax
    3d2b:	48 83 c4 18          	add    $0x18,%rsp
    3d2f:	5b                   	pop    %rbx
    3d30:	41 5c                	pop    %r12
    3d32:	41 5d                	pop    %r13
    3d34:	41 5e                	pop    %r14
    3d36:	41 5f                	pop    %r15
    3d38:	c9                   	leaveq 
    3d39:	c3                   	retq   

0000000000003d3a <reg_pattern_test>:
    3d3a:	55                   	push   %rbp
    3d3b:	48 89 e5             	mov    %rsp,%rbp
    3d3e:	41 57                	push   %r15
    3d40:	41 89 d7             	mov    %edx,%r15d
    3d43:	41 56                	push   %r14
    3d45:	49 89 fe             	mov    %rdi,%r14
    3d48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3d4b: R_X86_64_32S	.rodata.str1.1+0xf15
    3d4f:	41 55                	push   %r13
    3d51:	45 31 ed             	xor    %r13d,%r13d
    3d54:	41 54                	push   %r12
    3d56:	4d 63 e7             	movslq %r15d,%r12
    3d59:	53                   	push   %rbx
    3d5a:	48 83 ec 18          	sub    $0x18,%rsp
    3d5e:	48 89 75 d0          	mov    %rsi,0xffffffffffffffd0(%rbp)
    3d62:	89 4d cc             	mov    %ecx,0xffffffffffffffcc(%rbp)
    3d65:	44 89 45 c8          	mov    %r8d,0xffffffffffffffc8(%rbp)
    3d69:	e8 00 00 00 00       	callq  3d6e <reg_pattern_test+0x34>
			3d6a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3d6e:	4d 03 a6 b8 03 00 00 	add    0x3b8(%r14),%r12
    3d75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3d78: R_X86_64_32S	.rodata.str1.1+0xb4
    3d7c:	8b 5d c8             	mov    0xffffffffffffffc8(%rbp),%ebx
    3d7f:	42 23 1c ad 00 00 00 	and    0x0(,%r13,4),%ebx
    3d86:	00 
			3d83: R_X86_64_32S	.data+0x3e090
    3d87:	e8 00 00 00 00       	callq  3d8c <reg_pattern_test+0x52>
			3d88: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3d8c:	41 89 1c 24          	mov    %ebx,(%r12)
    3d90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3d93: R_X86_64_32S	.rodata.str1.1+0xae
    3d97:	e8 00 00 00 00       	callq  3d9c <reg_pattern_test+0x62>
			3d98: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3d9c:	41 8b 14 24          	mov    (%r12),%edx
    3da0:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    3da3:	42 23 04 ad 00 00 00 	and    0x0(,%r13,4),%eax
    3daa:	00 
			3da7: R_X86_64_32S	.data+0x3e090
    3dab:	23 45 c8             	and    0xffffffffffffffc8(%rbp),%eax
    3dae:	39 c2                	cmp    %eax,%edx
    3db0:	74 40                	je     3df2 <reg_pattern_test+0xb8>
    3db2:	41 f6 86 c0 07 00 00 	testb  $0x1,0x7c0(%r14)
    3db9:	01 
    3dba:	74 25                	je     3de1 <reg_pattern_test+0xa7>
    3dbc:	49 8b b6 f0 02 00 00 	mov    0x2f0(%r14),%rsi
    3dc3:	41 89 c1             	mov    %eax,%r9d
    3dc6:	41 89 d0             	mov    %edx,%r8d
    3dc9:	44 89 f9             	mov    %r15d,%ecx
    3dcc:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			3dcf: R_X86_64_32S	str_305097944
    3dd3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3dd6: R_X86_64_32S	str_873761215
    3dda:	31 c0                	xor    %eax,%eax
    3ddc:	e8 00 00 00 00       	callq  3de1 <reg_pattern_test+0xa7>
			3ddd: R_X86_64_PC32	printk+0xfffffffffffffffc
    3de1:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
    3de5:	49 63 c7             	movslq %r15d,%rax
    3de8:	48 89 02             	mov    %rax,(%rdx)
    3deb:	b8 01 00 00 00       	mov    $0x1,%eax
    3df0:	eb 0f                	jmp    3e01 <reg_pattern_test+0xc7>
    3df2:	49 ff c5             	inc    %r13
    3df5:	49 83 fd 04          	cmp    $0x4,%r13
    3df9:	0f 85 76 ff ff ff    	jne    3d75 <reg_pattern_test+0x3b>
    3dff:	31 c0                	xor    %eax,%eax
    3e01:	48 83 c4 18          	add    $0x18,%rsp
    3e05:	5b                   	pop    %rbx
    3e06:	41 5c                	pop    %r12
    3e08:	41 5d                	pop    %r13
    3e0a:	41 5e                	pop    %r14
    3e0c:	41 5f                	pop    %r15
    3e0e:	c9                   	leaveq 
    3e0f:	c3                   	retq   

0000000000003e10 <__memcpy>:
    3e10:	55                   	push   %rbp
    3e11:	48 89 e5             	mov    %rsp,%rbp
    3e14:	41 57                	push   %r15
    3e16:	49 89 f7             	mov    %rsi,%r15
    3e19:	41 56                	push   %r14
    3e1b:	49 89 d6             	mov    %rdx,%r14
    3e1e:	41 55                	push   %r13
    3e20:	4c 8d 6d c0          	lea    0xffffffffffffffc0(%rbp),%r13
    3e24:	41 54                	push   %r12
    3e26:	4c 8d 65 cc          	lea    0xffffffffffffffcc(%rbp),%r12
    3e2a:	53                   	push   %rbx
    3e2b:	48 89 fb             	mov    %rdi,%rbx
    3e2e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3e31: R_X86_64_32S	.rodata.str1.1+0xf26
    3e35:	48 83 ec 48          	sub    $0x48,%rsp
    3e39:	e8 00 00 00 00       	callq  3e3e <__memcpy+0x2e>
			3e3a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3e3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3e41: R_X86_64_32S	.rodata.str1.1+0xf2f
    3e45:	48 89 5d b8          	mov    %rbx,0xffffffffffffffb8(%rbp)
    3e49:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    3e50:	00 
    3e51:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    3e58:	00 
    3e59:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    3e60:	4c 89 7d b0          	mov    %r15,0xffffffffffffffb0(%rbp)
    3e64:	4c 89 75 a8          	mov    %r14,0xffffffffffffffa8(%rbp)
    3e68:	e8 00 00 00 00       	callq  3e6d <__memcpy+0x5d>
			3e69: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3e6d:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    3e71:	4c 89 e2             	mov    %r12,%rdx
    3e74:	4c 89 ee             	mov    %r13,%rsi
    3e77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3e7a: R_X86_64_32S	.rodata.str1.1+0xf26
    3e7e:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    3e85:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    3e8c:	00 
    3e8d:	e8 00 00 00 00       	callq  3e92 <__memcpy+0x82>
			3e8e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3e92:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    3e96:	4c 89 e2             	mov    %r12,%rdx
    3e99:	4c 89 ee             	mov    %r13,%rsi
    3e9c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3e9f: R_X86_64_32S	.rodata.str1.1+0xf26
    3ea3:	e8 00 00 00 00       	callq  3ea8 <__memcpy+0x98>
			3ea4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    3ea8:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    3eac:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    3eb2:	4c 89 e2             	mov    %r12,%rdx
    3eb5:	4c 89 ee             	mov    %r13,%rsi
    3eb8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ebb: R_X86_64_32S	.rodata.str1.1+0xf26
    3ebf:	e8 00 00 00 00       	callq  3ec4 <__memcpy+0xb4>
			3ec0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    3ec4:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
    3ec8:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    3ecc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ecf: R_X86_64_32S	.rodata.str1.1+0xf26
    3ed3:	48 c7 45 90 38 04 00 	movq   $0x438,0xffffffffffffff90(%rbp)
    3eda:	00 
    3edb:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    3edf:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    3ee2:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    3ee5:	e8 00 00 00 00       	callq  3eea <__memcpy+0xda>
			3ee6: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    3eea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3eed: R_X86_64_32S	.rodata.str1.1+0xf46
    3ef1:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    3ef5:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
    3ef9:	4c 89 75 c0          	mov    %r14,0xffffffffffffffc0(%rbp)
    3efd:	e8 00 00 00 00       	callq  3f02 <__memcpy+0xf2>
			3efe: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3f02:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    3f06:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    3f0a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3f10:	4c 89 e2             	mov    %r12,%rdx
    3f13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3f16: R_X86_64_32S	.rodata.str1.1+0xf26
    3f1a:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    3f21:	48 89 de             	mov    %rbx,%rsi
    3f24:	e8 00 00 00 00       	callq  3f29 <__memcpy+0x119>
			3f25: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3f29:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    3f2d:	48 89 de             	mov    %rbx,%rsi
    3f30:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3f36:	4c 89 e2             	mov    %r12,%rdx
    3f39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3f3c: R_X86_64_32S	.rodata.str1.1+0xf26
    3f40:	e8 00 00 00 00       	callq  3f45 <__memcpy+0x135>
			3f41: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3f45:	48 89 de             	mov    %rbx,%rsi
    3f48:	4d 89 e8             	mov    %r13,%r8
    3f4b:	b9 08 00 00 00       	mov    $0x8,%ecx
    3f50:	4c 89 e2             	mov    %r12,%rdx
    3f53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3f56: R_X86_64_32S	.rodata.str1.1+0xf26
    3f5a:	e8 00 00 00 00       	callq  3f5f <__memcpy+0x14f>
			3f5b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    3f5f:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    3f63:	48 89 de             	mov    %rbx,%rsi
    3f66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3f69: R_X86_64_32S	.rodata.str1.1+0xf26
    3f6d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3f73:	4c 89 e2             	mov    %r12,%rdx
    3f76:	e8 00 00 00 00       	callq  3f7b <__memcpy+0x16b>
			3f77: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    3f7b:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    3f7f:	48 8b 5d a8          	mov    0xffffffffffffffa8(%rbp),%rbx
    3f83:	48 85 ff             	test   %rdi,%rdi
    3f86:	74 05                	je     3f8d <__memcpy+0x17d>
    3f88:	e8 00 00 00 00       	callq  3f8d <__memcpy+0x17d>
			3f89: R_X86_64_PC32	kfree+0xfffffffffffffffc
    3f8d:	48 83 c4 48          	add    $0x48,%rsp
    3f91:	48 89 d8             	mov    %rbx,%rax
    3f94:	5b                   	pop    %rbx
    3f95:	41 5c                	pop    %r12
    3f97:	41 5d                	pop    %r13
    3f99:	41 5e                	pop    %r14
    3f9b:	41 5f                	pop    %r15
    3f9d:	c9                   	leaveq 
    3f9e:	c3                   	retq   

0000000000003f9f <pci_set_consistent_dma_mask>:
    3f9f:	55                   	push   %rbp
    3fa0:	48 89 e5             	mov    %rsp,%rbp
    3fa3:	41 57                	push   %r15
    3fa5:	49 89 f7             	mov    %rsi,%r15
    3fa8:	41 56                	push   %r14
    3faa:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    3fae:	41 55                	push   %r13
    3fb0:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    3fb4:	41 54                	push   %r12
    3fb6:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
    3fba:	53                   	push   %rbx
    3fbb:	48 89 fb             	mov    %rdi,%rbx
    3fbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3fc1: R_X86_64_32S	.rodata.str1.1+0xf5d
    3fc5:	48 83 ec 48          	sub    $0x48,%rsp
    3fc9:	e8 00 00 00 00       	callq  3fce <pci_set_consistent_dma_mask+0x2f>
			3fca: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3fce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3fd1: R_X86_64_32S	.rodata.str1.1+0xf79
    3fd5:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    3fd9:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    3fe0:	00 
    3fe1:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    3fe8:	00 
    3fe9:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    3ff0:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
    3ff4:	e8 00 00 00 00       	callq  3ff9 <pci_set_consistent_dma_mask+0x5a>
			3ff5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    3ff9:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    3ffd:	4c 89 f2             	mov    %r14,%rdx
    4000:	4c 89 ee             	mov    %r13,%rsi
    4003:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4006: R_X86_64_32S	.rodata.str1.1+0xf5d
    400a:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    4011:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    4018:	00 
    4019:	e8 00 00 00 00       	callq  401e <pci_set_consistent_dma_mask+0x7f>
			401a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    401e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    4024:	4c 89 e1             	mov    %r12,%rcx
    4027:	4c 89 f2             	mov    %r14,%rdx
    402a:	4c 89 ee             	mov    %r13,%rsi
    402d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4030: R_X86_64_32S	.rodata.str1.1+0xf5d
    4034:	e8 00 00 00 00       	callq  4039 <pci_set_consistent_dma_mask+0x9a>
			4035: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    4039:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    403d:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    4041:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4044: R_X86_64_32S	.rodata.str1.1+0xf5d
    4048:	48 c7 45 90 22 06 00 	movq   $0x622,0xffffffffffffff90(%rbp)
    404f:	00 
    4050:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    4054:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    4057:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    405a:	e8 00 00 00 00       	callq  405f <pci_set_consistent_dma_mask+0xc0>
			405b: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    405f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4062: R_X86_64_32S	.rodata.str1.1+0xfa3
    4066:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    406a:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
    406e:	e8 00 00 00 00       	callq  4073 <pci_set_consistent_dma_mask+0xd4>
			406f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4073:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    4077:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    407b:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    4081:	4c 89 e2             	mov    %r12,%rdx
    4084:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4087: R_X86_64_32S	.rodata.str1.1+0xf5d
    408b:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    4092:	48 89 de             	mov    %rbx,%rsi
    4095:	e8 00 00 00 00       	callq  409a <pci_set_consistent_dma_mask+0xfb>
			4096: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    409a:	48 89 de             	mov    %rbx,%rsi
    409d:	4d 89 e8             	mov    %r13,%r8
    40a0:	b9 08 00 00 00       	mov    $0x8,%ecx
    40a5:	4c 89 e2             	mov    %r12,%rdx
    40a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			40ab: R_X86_64_32S	.rodata.str1.1+0xf5d
    40af:	e8 00 00 00 00       	callq  40b4 <pci_set_consistent_dma_mask+0x115>
			40b0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    40b4:	48 89 de             	mov    %rbx,%rsi
    40b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			40ba: R_X86_64_32S	.rodata.str1.1+0xf5d
    40be:	4d 89 f0             	mov    %r14,%r8
    40c1:	b9 04 00 00 00       	mov    $0x4,%ecx
    40c6:	4c 89 e2             	mov    %r12,%rdx
    40c9:	e8 00 00 00 00       	callq  40ce <pci_set_consistent_dma_mask+0x12f>
			40ca: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    40ce:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    40d2:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
    40d5:	48 85 ff             	test   %rdi,%rdi
    40d8:	74 05                	je     40df <pci_set_consistent_dma_mask+0x140>
    40da:	e8 00 00 00 00       	callq  40df <pci_set_consistent_dma_mask+0x140>
			40db: R_X86_64_PC32	kfree+0xfffffffffffffffc
    40df:	48 83 c4 48          	add    $0x48,%rsp
    40e3:	89 d8                	mov    %ebx,%eax
    40e5:	5b                   	pop    %rbx
    40e6:	41 5c                	pop    %r12
    40e8:	41 5d                	pop    %r13
    40ea:	41 5e                	pop    %r14
    40ec:	41 5f                	pop    %r15
    40ee:	c9                   	leaveq 
    40ef:	c3                   	retq   

00000000000040f0 <lockdep_init_map>:
    40f0:	55                   	push   %rbp
    40f1:	48 89 e5             	mov    %rsp,%rbp
    40f4:	41 57                	push   %r15
    40f6:	49 89 f7             	mov    %rsi,%r15
    40f9:	41 56                	push   %r14
    40fb:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    40ff:	41 55                	push   %r13
    4101:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    4105:	41 54                	push   %r12
    4107:	53                   	push   %rbx
    4108:	48 89 fb             	mov    %rdi,%rbx
    410b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			410e: R_X86_64_32S	.rodata.str1.1+0xfcd
    4112:	48 83 ec 58          	sub    $0x58,%rsp
    4116:	48 89 55 88          	mov    %rdx,0xffffffffffffff88(%rbp)
    411a:	89 4d 84             	mov    %ecx,0xffffffffffffff84(%rbp)
    411d:	e8 00 00 00 00       	callq  4122 <lockdep_init_map+0x32>
			411e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4122:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
    4126:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4129: R_X86_64_32S	.rodata.str1.1+0xfde
    412d:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    4134:	00 
    4135:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    413c:	00 
    413d:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    4144:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    4148:	4c 89 7d a8          	mov    %r15,0xffffffffffffffa8(%rbp)
    414c:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    4150:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
    4153:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
    4156:	e8 00 00 00 00       	callq  415b <lockdep_init_map+0x6b>
			4157: R_X86_64_PC32	record_function+0xfffffffffffffffc
    415b:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    415f:	4c 89 f2             	mov    %r14,%rdx
    4162:	4c 89 ee             	mov    %r13,%rsi
    4165:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4168: R_X86_64_32S	.rodata.str1.1+0xfcd
    416c:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    4173:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    417a:	00 
    417b:	e8 00 00 00 00       	callq  4180 <lockdep_init_map+0x90>
			417c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    4180:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    4184:	4c 89 f2             	mov    %r14,%rdx
    4187:	4c 89 ee             	mov    %r13,%rsi
    418a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			418d: R_X86_64_32S	.rodata.str1.1+0xfcd
    4191:	e8 00 00 00 00       	callq  4196 <lockdep_init_map+0xa6>
			4192: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    4196:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    419a:	48 85 c9             	test   %rcx,%rcx
    419d:	74 18                	je     41b7 <lockdep_init_map+0xc7>
    419f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    41a5:	4c 89 f2             	mov    %r14,%rdx
    41a8:	4c 89 ee             	mov    %r13,%rsi
    41ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			41ae: R_X86_64_32S	.rodata.str1.1+0xfcd
    41b2:	e8 00 00 00 00       	callq  41b7 <lockdep_init_map+0xc7>
			41b3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    41b7:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    41bb:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
    41bf:	4c 89 f2             	mov    %r14,%rdx
    41c2:	4c 89 ee             	mov    %r13,%rsi
    41c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			41c8: R_X86_64_32S	.rodata.str1.1+0xfcd
    41cc:	e8 00 00 00 00       	callq  41d1 <lockdep_init_map+0xe1>
			41cd: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    41d1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    41d7:	4c 89 e1             	mov    %r12,%rcx
    41da:	4c 89 f2             	mov    %r14,%rdx
    41dd:	4c 89 ee             	mov    %r13,%rsi
    41e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			41e3: R_X86_64_32S	.rodata.str1.1+0xfcd
    41e7:	e8 00 00 00 00       	callq  41ec <lockdep_init_map+0xfc>
			41e8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    41ec:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    41f0:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    41f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			41f7: R_X86_64_32S	.rodata.str1.1+0xfcd
    41fb:	48 c7 45 90 cc 05 00 	movq   $0x5cc,0xffffffffffffff90(%rbp)
    4202:	00 
    4203:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    4207:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    420a:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    420d:	e8 00 00 00 00       	callq  4212 <lockdep_init_map+0x122>
			420e: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    4212:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
    4216:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4219: R_X86_64_32S	.rodata.str1.1+0xffd
    421d:	48 89 5d a8          	mov    %rbx,0xffffffffffffffa8(%rbp)
    4221:	4c 89 7d b0          	mov    %r15,0xffffffffffffffb0(%rbp)
    4225:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    4229:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
    422c:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    422f:	e8 00 00 00 00       	callq  4234 <lockdep_init_map+0x144>
			4230: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4234:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    4238:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    423c:	41 b8 18 00 00 00    	mov    $0x18,%r8d
    4242:	4c 89 e2             	mov    %r12,%rdx
    4245:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4248: R_X86_64_32S	.rodata.str1.1+0xfcd
    424c:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    4253:	48 89 de             	mov    %rbx,%rsi
    4256:	e8 00 00 00 00       	callq  425b <lockdep_init_map+0x16b>
			4257: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    425b:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    425f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    4265:	4c 89 e2             	mov    %r12,%rdx
    4268:	48 89 de             	mov    %rbx,%rsi
    426b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			426e: R_X86_64_32S	.rodata.str1.1+0xfcd
    4272:	e8 00 00 00 00       	callq  4277 <lockdep_init_map+0x187>
			4273: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    4277:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    427b:	48 85 c0             	test   %rax,%rax
    427e:	74 1a                	je     429a <lockdep_init_map+0x1aa>
    4280:	49 89 c0             	mov    %rax,%r8
    4283:	b9 01 00 00 00       	mov    $0x1,%ecx
    4288:	4c 89 e2             	mov    %r12,%rdx
    428b:	48 89 de             	mov    %rbx,%rsi
    428e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4291: R_X86_64_32S	.rodata.str1.1+0xfcd
    4295:	e8 00 00 00 00       	callq  429a <lockdep_init_map+0x1aa>
			4296: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    429a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    42a0:	4c 89 e9             	mov    %r13,%rcx
    42a3:	4c 89 e2             	mov    %r12,%rdx
    42a6:	48 89 de             	mov    %rbx,%rsi
    42a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			42ac: R_X86_64_32S	.rodata.str1.1+0xfcd
    42b0:	e8 00 00 00 00       	callq  42b5 <lockdep_init_map+0x1c5>
			42b1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    42b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			42b8: R_X86_64_32S	.rodata.str1.1+0xfcd
    42bc:	4d 89 f0             	mov    %r14,%r8
    42bf:	b9 04 00 00 00       	mov    $0x4,%ecx
    42c4:	4c 89 e2             	mov    %r12,%rdx
    42c7:	48 89 de             	mov    %rbx,%rsi
    42ca:	e8 00 00 00 00       	callq  42cf <lockdep_init_map+0x1df>
			42cb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    42cf:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    42d3:	48 85 ff             	test   %rdi,%rdi
    42d6:	74 05                	je     42dd <lockdep_init_map+0x1ed>
    42d8:	e8 00 00 00 00       	callq  42dd <lockdep_init_map+0x1ed>
			42d9: R_X86_64_PC32	kfree+0xfffffffffffffffc
    42dd:	48 83 c4 58          	add    $0x58,%rsp
    42e1:	5b                   	pop    %rbx
    42e2:	41 5c                	pop    %r12
    42e4:	41 5d                	pop    %r13
    42e6:	41 5e                	pop    %r14
    42e8:	41 5f                	pop    %r15
    42ea:	c9                   	leaveq 
    42eb:	c3                   	retq   

00000000000042ec <capable>:
    42ec:	55                   	push   %rbp
    42ed:	48 89 e5             	mov    %rsp,%rbp
    42f0:	41 56                	push   %r14
    42f2:	4c 8d 75 d8          	lea    0xffffffffffffffd8(%rbp),%r14
    42f6:	41 55                	push   %r13
    42f8:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    42fc:	41 54                	push   %r12
    42fe:	4c 8d 65 d0          	lea    0xffffffffffffffd0(%rbp),%r12
    4302:	53                   	push   %rbx
    4303:	89 fb                	mov    %edi,%ebx
    4305:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4308: R_X86_64_32S	.rodata.str1.1+0x101c
    430c:	48 83 ec 30          	sub    $0x30,%rsp
    4310:	e8 00 00 00 00       	callq  4315 <capable+0x29>
			4311: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4315:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4318: R_X86_64_32S	.rodata.str1.1+0x1024
    431c:	89 5d d8             	mov    %ebx,0xffffffffffffffd8(%rbp)
    431f:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    4326:	00 
    4327:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    432e:	00 
    432f:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    4336:	e8 00 00 00 00       	callq  433b <capable+0x4f>
			4337: R_X86_64_PC32	record_function+0xfffffffffffffffc
    433b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    4341:	4c 89 f1             	mov    %r14,%rcx
    4344:	4c 89 ea             	mov    %r13,%rdx
    4347:	4c 89 e6             	mov    %r12,%rsi
    434a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			434d: R_X86_64_32S	.rodata.str1.1+0x101c
    4351:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    4358:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    435f:	00 
    4360:	e8 00 00 00 00       	callq  4365 <capable+0x79>
			4361: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    4365:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    4369:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    436d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4370: R_X86_64_32S	.rodata.str1.1+0x101c
    4374:	48 c7 45 b0 6d 04 00 	movq   $0x46d,0xffffffffffffffb0(%rbp)
    437b:	00 
    437c:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    4380:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    4383:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    4386:	e8 00 00 00 00       	callq  438b <capable+0x9f>
			4387: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    438b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			438e: R_X86_64_32S	.rodata.str1.1+0x103a
    4392:	89 5d dc             	mov    %ebx,0xffffffffffffffdc(%rbp)
    4395:	e8 00 00 00 00       	callq  439a <capable+0xae>
			4396: R_X86_64_PC32	record_function+0xfffffffffffffffc
    439a:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    439e:	4d 89 e8             	mov    %r13,%r8
    43a1:	b9 04 00 00 00       	mov    $0x4,%ecx
    43a6:	4c 89 e2             	mov    %r12,%rdx
    43a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			43ac: R_X86_64_32S	.rodata.str1.1+0x101c
    43b0:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
    43b7:	48 89 de             	mov    %rbx,%rsi
    43ba:	e8 00 00 00 00       	callq  43bf <capable+0xd3>
			43bb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    43bf:	48 89 de             	mov    %rbx,%rsi
    43c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			43c5: R_X86_64_32S	.rodata.str1.1+0x101c
    43c9:	4d 89 f0             	mov    %r14,%r8
    43cc:	b9 04 00 00 00       	mov    $0x4,%ecx
    43d1:	4c 89 e2             	mov    %r12,%rdx
    43d4:	e8 00 00 00 00       	callq  43d9 <capable+0xed>
			43d5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    43d9:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    43dd:	8b 5d d8             	mov    0xffffffffffffffd8(%rbp),%ebx
    43e0:	48 85 ff             	test   %rdi,%rdi
    43e3:	74 05                	je     43ea <capable+0xfe>
    43e5:	e8 00 00 00 00       	callq  43ea <capable+0xfe>
			43e6: R_X86_64_PC32	kfree+0xfffffffffffffffc
    43ea:	48 83 c4 30          	add    $0x30,%rsp
    43ee:	89 d8                	mov    %ebx,%eax
    43f0:	5b                   	pop    %rbx
    43f1:	41 5c                	pop    %r12
    43f3:	41 5d                	pop    %r13
    43f5:	41 5e                	pop    %r14
    43f7:	c9                   	leaveq 
    43f8:	c3                   	retq   

00000000000043f9 <__spin_lock_init>:
    43f9:	55                   	push   %rbp
    43fa:	48 89 e5             	mov    %rsp,%rbp
    43fd:	41 57                	push   %r15
    43ff:	49 89 d7             	mov    %rdx,%r15
    4402:	41 56                	push   %r14
    4404:	49 89 f6             	mov    %rsi,%r14
    4407:	41 55                	push   %r13
    4409:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    440d:	41 54                	push   %r12
    440f:	4c 8d 65 cc          	lea    0xffffffffffffffcc(%rbp),%r12
    4413:	53                   	push   %rbx
    4414:	48 89 fb             	mov    %rdi,%rbx
    4417:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			441a: R_X86_64_32S	.rodata.str1.1+0x1050
    441e:	48 83 ec 48          	sub    $0x48,%rsp
    4422:	e8 00 00 00 00       	callq  4427 <__spin_lock_init+0x2e>
			4423: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4427:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			442a: R_X86_64_32S	.rodata.str1.1+0x1061
    442e:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    4435:	00 
    4436:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    443d:	00 
    443e:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    4445:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    4449:	4c 89 75 a8          	mov    %r14,0xffffffffffffffa8(%rbp)
    444d:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
    4451:	e8 00 00 00 00       	callq  4456 <__spin_lock_init+0x5d>
			4452: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4456:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    445a:	4c 89 e2             	mov    %r12,%rdx
    445d:	4c 89 ee             	mov    %r13,%rsi
    4460:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4463: R_X86_64_32S	.rodata.str1.1+0x1050
    4467:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    446e:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    4475:	00 
    4476:	e8 00 00 00 00       	callq  447b <__spin_lock_init+0x82>
			4477: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    447b:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    447f:	4c 89 e2             	mov    %r12,%rdx
    4482:	4c 89 ee             	mov    %r13,%rsi
    4485:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4488: R_X86_64_32S	.rodata.str1.1+0x1050
    448c:	e8 00 00 00 00       	callq  4491 <__spin_lock_init+0x98>
			448d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    4491:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    4495:	48 85 c9             	test   %rcx,%rcx
    4498:	74 18                	je     44b2 <__spin_lock_init+0xb9>
    449a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    44a0:	4c 89 e2             	mov    %r12,%rdx
    44a3:	4c 89 ee             	mov    %r13,%rsi
    44a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			44a9: R_X86_64_32S	.rodata.str1.1+0x1050
    44ad:	e8 00 00 00 00       	callq  44b2 <__spin_lock_init+0xb9>
			44ae: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    44b2:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
    44b6:	4c 89 e2             	mov    %r12,%rdx
    44b9:	4c 89 ee             	mov    %r13,%rsi
    44bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			44bf: R_X86_64_32S	.rodata.str1.1+0x1050
    44c3:	e8 00 00 00 00       	callq  44c8 <__spin_lock_init+0xcf>
			44c4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    44c8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    44cc:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    44d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			44d3: R_X86_64_32S	.rodata.str1.1+0x1050
    44d7:	48 c7 45 90 60 04 00 	movq   $0x460,0xffffffffffffff90(%rbp)
    44de:	00 
    44df:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    44e3:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    44e6:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    44e9:	e8 00 00 00 00       	callq  44ee <__spin_lock_init+0xf5>
			44ea: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    44ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			44f1: R_X86_64_32S	.rodata.str1.1+0x1080
    44f5:	48 89 5d a8          	mov    %rbx,0xffffffffffffffa8(%rbp)
    44f9:	4c 89 75 b0          	mov    %r14,0xffffffffffffffb0(%rbp)
    44fd:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
    4501:	e8 00 00 00 00       	callq  4506 <__spin_lock_init+0x10d>
			4502: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4506:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    450a:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    450e:	41 b8 30 00 00 00    	mov    $0x30,%r8d
    4514:	4c 89 e2             	mov    %r12,%rdx
    4517:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			451a: R_X86_64_32S	.rodata.str1.1+0x1050
    451e:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    4525:	48 89 de             	mov    %rbx,%rsi
    4528:	e8 00 00 00 00       	callq  452d <__spin_lock_init+0x134>
			4529: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    452d:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    4531:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    4537:	4c 89 e2             	mov    %r12,%rdx
    453a:	48 89 de             	mov    %rbx,%rsi
    453d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4540: R_X86_64_32S	.rodata.str1.1+0x1050
    4544:	e8 00 00 00 00       	callq  4549 <__spin_lock_init+0x150>
			4545: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    4549:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    454d:	48 85 c0             	test   %rax,%rax
    4550:	74 1a                	je     456c <__spin_lock_init+0x173>
    4552:	49 89 c0             	mov    %rax,%r8
    4555:	b9 01 00 00 00       	mov    $0x1,%ecx
    455a:	4c 89 e2             	mov    %r12,%rdx
    455d:	48 89 de             	mov    %rbx,%rsi
    4560:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4563: R_X86_64_32S	.rodata.str1.1+0x1050
    4567:	e8 00 00 00 00       	callq  456c <__spin_lock_init+0x173>
			4568: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    456c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			456f: R_X86_64_32S	.rodata.str1.1+0x1050
    4573:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    4579:	4c 89 e9             	mov    %r13,%rcx
    457c:	4c 89 e2             	mov    %r12,%rdx
    457f:	48 89 de             	mov    %rbx,%rsi
    4582:	e8 00 00 00 00       	callq  4587 <__spin_lock_init+0x18e>
			4583: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    4587:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    458b:	48 85 ff             	test   %rdi,%rdi
    458e:	74 05                	je     4595 <__spin_lock_init+0x19c>
    4590:	e8 00 00 00 00       	callq  4595 <__spin_lock_init+0x19c>
			4591: R_X86_64_PC32	kfree+0xfffffffffffffffc
    4595:	48 83 c4 48          	add    $0x48,%rsp
    4599:	5b                   	pop    %rbx
    459a:	41 5c                	pop    %r12
    459c:	41 5d                	pop    %r13
    459e:	41 5e                	pop    %r14
    45a0:	41 5f                	pop    %r15
    45a2:	c9                   	leaveq 
    45a3:	c3                   	retq   

00000000000045a4 <free_netdev>:
    45a4:	55                   	push   %rbp
    45a5:	48 89 e5             	mov    %rsp,%rbp
    45a8:	41 55                	push   %r13
    45aa:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    45ae:	41 54                	push   %r12
    45b0:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    45b4:	53                   	push   %rbx
    45b5:	48 89 fb             	mov    %rdi,%rbx
    45b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			45bb: R_X86_64_32S	.rodata.str1.1+0x109f
    45bf:	48 83 ec 38          	sub    $0x38,%rsp
    45c3:	e8 00 00 00 00       	callq  45c8 <free_netdev+0x24>
			45c4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    45c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			45cb: R_X86_64_32S	.rodata.str1.1+0x10ab
    45cf:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    45d6:	00 
    45d7:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    45de:	00 
    45df:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    45e6:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    45ea:	e8 00 00 00 00       	callq  45ef <free_netdev+0x4b>
			45eb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    45ef:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    45f3:	4c 89 ea             	mov    %r13,%rdx
    45f6:	4c 89 e6             	mov    %r12,%rsi
    45f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			45fc: R_X86_64_32S	.rodata.str1.1+0x109f
    4600:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    4607:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    460e:	00 
    460f:	e8 00 00 00 00       	callq  4614 <free_netdev+0x70>
			4610: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    4614:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    4618:	48 85 c0             	test   %rax,%rax
    461b:	74 1f                	je     463c <free_netdev+0x98>
    461d:	48 8d 88 30 04 00 00 	lea    0x430(%rax),%rcx
    4624:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    462a:	4c 89 ea             	mov    %r13,%rdx
    462d:	4c 89 e6             	mov    %r12,%rsi
    4630:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4633: R_X86_64_32S	.rodata.str1.1+0x109f
    4637:	e8 00 00 00 00       	callq  463c <free_netdev+0x98>
			4638: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    463c:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    4640:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    4644:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4647: R_X86_64_32S	.rodata.str1.1+0x109f
    464b:	48 c7 45 b0 bc 05 00 	movq   $0x5bc,0xffffffffffffffb0(%rbp)
    4652:	00 
    4653:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    4657:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    465a:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    465d:	e8 00 00 00 00       	callq  4662 <free_netdev+0xbe>
			465e: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    4662:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4665: R_X86_64_32S	.rodata.str1.1+0x10c5
    4669:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    466d:	e8 00 00 00 00       	callq  4672 <free_netdev+0xce>
			466e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4672:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    4676:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    467c:	4c 89 e1             	mov    %r12,%rcx
    467f:	4c 89 ea             	mov    %r13,%rdx
    4682:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4685: R_X86_64_32S	.rodata.str1.1+0x109f
    4689:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    4690:	48 89 de             	mov    %rbx,%rsi
    4693:	e8 00 00 00 00       	callq  4698 <free_netdev+0xf4>
			4694: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    4698:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    469c:	48 85 c0             	test   %rax,%rax
    469f:	74 1e                	je     46bf <free_netdev+0x11b>
    46a1:	4c 8d 80 30 04 00 00 	lea    0x430(%rax),%r8
    46a8:	b9 04 00 00 00       	mov    $0x4,%ecx
    46ad:	4c 89 ea             	mov    %r13,%rdx
    46b0:	48 89 de             	mov    %rbx,%rsi
    46b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			46b6: R_X86_64_32S	.rodata.str1.1+0x109f
    46ba:	e8 00 00 00 00       	callq  46bf <free_netdev+0x11b>
			46bb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    46bf:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    46c3:	48 85 ff             	test   %rdi,%rdi
    46c6:	74 05                	je     46cd <free_netdev+0x129>
    46c8:	e8 00 00 00 00       	callq  46cd <free_netdev+0x129>
			46c9: R_X86_64_PC32	kfree+0xfffffffffffffffc
    46cd:	48 83 c4 38          	add    $0x38,%rsp
    46d1:	5b                   	pop    %rbx
    46d2:	41 5c                	pop    %r12
    46d4:	41 5d                	pop    %r13
    46d6:	c9                   	leaveq 
    46d7:	c3                   	retq   

00000000000046d8 <request_irq>:
    46d8:	55                   	push   %rbp
    46d9:	48 89 e5             	mov    %rsp,%rbp
    46dc:	41 57                	push   %r15
    46de:	49 89 f7             	mov    %rsi,%r15
    46e1:	41 56                	push   %r14
    46e3:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
    46e7:	41 55                	push   %r13
    46e9:	4c 8d 6d cc          	lea    0xffffffffffffffcc(%rbp),%r13
    46ed:	41 54                	push   %r12
    46ef:	53                   	push   %rbx
    46f0:	89 fb                	mov    %edi,%ebx
    46f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			46f5: R_X86_64_32S	.rodata.str1.1+0x10df
    46f9:	48 83 ec 78          	sub    $0x78,%rsp
    46fd:	48 89 95 78 ff ff ff 	mov    %rdx,0xffffffffffffff78(%rbp)
    4704:	48 89 8d 70 ff ff ff 	mov    %rcx,0xffffffffffffff70(%rbp)
    470b:	4c 89 85 68 ff ff ff 	mov    %r8,0xffffffffffffff68(%rbp)
    4712:	e8 00 00 00 00       	callq  4717 <request_irq+0x3f>
			4713: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4717:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    471e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4721: R_X86_64_32S	.rodata.str1.1+0x10eb
    4725:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
    472c:	00 
    472d:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    4734:	00 
    4735:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
    473c:	89 5d c8             	mov    %ebx,0xffffffffffffffc8(%rbp)
    473f:	4c 89 7d b0          	mov    %r15,0xffffffffffffffb0(%rbp)
    4743:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
    4747:	48 8b 85 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rax
    474e:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    4752:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
    4759:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    475d:	e8 00 00 00 00       	callq  4762 <request_irq+0x8a>
			475e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4762:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
    4766:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    476c:	4c 89 ea             	mov    %r13,%rdx
    476f:	4c 89 f6             	mov    %r14,%rsi
    4772:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4775: R_X86_64_32S	.rodata.str1.1+0x10df
    4779:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    4780:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    4787:	00 
    4788:	e8 00 00 00 00       	callq  478d <request_irq+0xb5>
			4789: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    478d:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    4791:	4c 89 ea             	mov    %r13,%rdx
    4794:	4c 89 f6             	mov    %r14,%rsi
    4797:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			479a: R_X86_64_32S	.rodata.str1.1+0x10df
    479e:	e8 00 00 00 00       	callq  47a3 <request_irq+0xcb>
			479f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    47a3:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    47a7:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    47ad:	4c 89 ea             	mov    %r13,%rdx
    47b0:	4c 89 f6             	mov    %r14,%rsi
    47b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			47b6: R_X86_64_32S	.rodata.str1.1+0x10df
    47ba:	e8 00 00 00 00       	callq  47bf <request_irq+0xe7>
			47bb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    47bf:	48 8d 4d a0          	lea    0xffffffffffffffa0(%rbp),%rcx
    47c3:	4c 89 ea             	mov    %r13,%rdx
    47c6:	4c 89 f6             	mov    %r14,%rsi
    47c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			47cc: R_X86_64_32S	.rodata.str1.1+0x10df
    47d0:	e8 00 00 00 00       	callq  47d5 <request_irq+0xfd>
			47d1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    47d5:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    47d9:	48 85 c9             	test   %rcx,%rcx
    47dc:	74 18                	je     47f6 <request_irq+0x11e>
    47de:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    47e4:	4c 89 ea             	mov    %r13,%rdx
    47e7:	4c 89 f6             	mov    %r14,%rsi
    47ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			47ed: R_X86_64_32S	.rodata.str1.1+0x10df
    47f1:	e8 00 00 00 00       	callq  47f6 <request_irq+0x11e>
			47f2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    47f6:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
    47fa:	4c 89 ea             	mov    %r13,%rdx
    47fd:	4c 89 f6             	mov    %r14,%rsi
    4800:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4803: R_X86_64_32S	.rodata.str1.1+0x10df
    4807:	4c 89 e1             	mov    %r12,%rcx
    480a:	e8 00 00 00 00       	callq  480f <request_irq+0x137>
			480b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    480f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    4813:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
    4817:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			481a: R_X86_64_32S	.rodata.str1.1+0x10df
    481e:	48 c7 45 80 38 06 00 	movq   $0x638,0xffffffffffffff80(%rbp)
    4825:	00 
    4826:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
    482a:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    482d:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
    4830:	e8 00 00 00 00       	callq  4835 <request_irq+0x15d>
			4831: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    4835:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    483c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			483f: R_X86_64_32S	.rodata.str1.1+0x1105
    4843:	89 5d cc             	mov    %ebx,0xffffffffffffffcc(%rbp)
    4846:	4c 89 7d a0          	mov    %r15,0xffffffffffffffa0(%rbp)
    484a:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
    484e:	48 8b 85 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rax
    4855:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    4859:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
    4860:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    4864:	e8 00 00 00 00       	callq  4869 <request_irq+0x191>
			4865: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4869:	48 8b 5d 90          	mov    0xffffffffffffff90(%rbp),%rbx
    486d:	4d 89 e8             	mov    %r13,%r8
    4870:	b9 04 00 00 00       	mov    $0x4,%ecx
    4875:	4c 89 e2             	mov    %r12,%rdx
    4878:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			487b: R_X86_64_32S	.rodata.str1.1+0x10df
    487f:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    4886:	48 89 de             	mov    %rbx,%rsi
    4889:	e8 00 00 00 00       	callq  488e <request_irq+0x1b6>
			488a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    488e:	48 8d 4d a0          	lea    0xffffffffffffffa0(%rbp),%rcx
    4892:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    4898:	4c 89 e2             	mov    %r12,%rdx
    489b:	48 89 de             	mov    %rbx,%rsi
    489e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			48a1: R_X86_64_32S	.rodata.str1.1+0x10df
    48a5:	e8 00 00 00 00       	callq  48aa <request_irq+0x1d2>
			48a6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    48aa:	4c 8d 45 a8          	lea    0xffffffffffffffa8(%rbp),%r8
    48ae:	b9 08 00 00 00       	mov    $0x8,%ecx
    48b3:	4c 89 e2             	mov    %r12,%rdx
    48b6:	48 89 de             	mov    %rbx,%rsi
    48b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			48bc: R_X86_64_32S	.rodata.str1.1+0x10df
    48c0:	e8 00 00 00 00       	callq  48c5 <request_irq+0x1ed>
			48c1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    48c5:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    48c9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    48cf:	4c 89 e2             	mov    %r12,%rdx
    48d2:	48 89 de             	mov    %rbx,%rsi
    48d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			48d8: R_X86_64_32S	.rodata.str1.1+0x10df
    48dc:	e8 00 00 00 00       	callq  48e1 <request_irq+0x209>
			48dd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    48e1:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    48e5:	48 85 c0             	test   %rax,%rax
    48e8:	74 1a                	je     4904 <request_irq+0x22c>
    48ea:	49 89 c0             	mov    %rax,%r8
    48ed:	b9 01 00 00 00       	mov    $0x1,%ecx
    48f2:	4c 89 e2             	mov    %r12,%rdx
    48f5:	48 89 de             	mov    %rbx,%rsi
    48f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			48fb: R_X86_64_32S	.rodata.str1.1+0x10df
    48ff:	e8 00 00 00 00       	callq  4904 <request_irq+0x22c>
			4900: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    4904:	48 89 de             	mov    %rbx,%rsi
    4907:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    490d:	4c 89 f1             	mov    %r14,%rcx
    4910:	4c 89 e2             	mov    %r12,%rdx
    4913:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4916: R_X86_64_32S	.rodata.str1.1+0x10df
    491a:	e8 00 00 00 00       	callq  491f <request_irq+0x247>
			491b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    491f:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
    4923:	48 89 de             	mov    %rbx,%rsi
    4926:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4929: R_X86_64_32S	.rodata.str1.1+0x10df
    492d:	b9 04 00 00 00       	mov    $0x4,%ecx
    4932:	4c 89 e2             	mov    %r12,%rdx
    4935:	e8 00 00 00 00       	callq  493a <request_irq+0x262>
			4936: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    493a:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
    493e:	8b 5d c8             	mov    0xffffffffffffffc8(%rbp),%ebx
    4941:	48 85 ff             	test   %rdi,%rdi
    4944:	74 05                	je     494b <request_irq+0x273>
    4946:	e8 00 00 00 00       	callq  494b <request_irq+0x273>
			4947: R_X86_64_PC32	kfree+0xfffffffffffffffc
    494b:	48 83 c4 78          	add    $0x78,%rsp
    494f:	89 d8                	mov    %ebx,%eax
    4951:	5b                   	pop    %rbx
    4952:	41 5c                	pop    %r12
    4954:	41 5d                	pop    %r13
    4956:	41 5e                	pop    %r14
    4958:	41 5f                	pop    %r15
    495a:	c9                   	leaveq 
    495b:	c3                   	retq   

000000000000495c <__const_udelay>:
    495c:	55                   	push   %rbp
    495d:	48 89 e5             	mov    %rsp,%rbp
    4960:	41 55                	push   %r13
    4962:	49 89 fd             	mov    %rdi,%r13
    4965:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4968: R_X86_64_32S	.rodata.str1.1+0x111f
    496c:	41 54                	push   %r12
    496e:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    4972:	53                   	push   %rbx
    4973:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    4977:	48 83 ec 38          	sub    $0x38,%rsp
    497b:	e8 00 00 00 00       	callq  4980 <__const_udelay+0x24>
			497c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4980:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4983: R_X86_64_32S	.rodata.str1.1+0x112e
    4987:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    498e:	00 
    498f:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    4996:	00 
    4997:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    499e:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
    49a2:	e8 00 00 00 00       	callq  49a7 <__const_udelay+0x4b>
			49a3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    49a7:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    49ab:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    49b1:	4c 89 e2             	mov    %r12,%rdx
    49b4:	48 89 de             	mov    %rbx,%rsi
    49b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			49ba: R_X86_64_32S	.rodata.str1.1+0x111f
    49be:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    49c5:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    49cc:	00 
    49cd:	e8 00 00 00 00       	callq  49d2 <__const_udelay+0x76>
			49ce: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    49d2:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    49d6:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    49da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			49dd: R_X86_64_32S	.rodata.str1.1+0x111f
    49e1:	48 c7 45 b0 30 04 00 	movq   $0x430,0xffffffffffffffb0(%rbp)
    49e8:	00 
    49e9:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    49ed:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    49f0:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    49f3:	e8 00 00 00 00       	callq  49f8 <__const_udelay+0x9c>
			49f4: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    49f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			49fb: R_X86_64_32S	.rodata.str1.1+0x114b
    49ff:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
    4a03:	e8 00 00 00 00       	callq  4a08 <__const_udelay+0xac>
			4a04: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4a08:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    4a0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4a0f: R_X86_64_32S	.rodata.str1.1+0x111f
    4a13:	49 89 d8             	mov    %rbx,%r8
    4a16:	b9 08 00 00 00       	mov    $0x8,%ecx
    4a1b:	4c 89 e2             	mov    %r12,%rdx
    4a1e:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    4a25:	e8 00 00 00 00       	callq  4a2a <__const_udelay+0xce>
			4a26: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    4a2a:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    4a2e:	48 85 ff             	test   %rdi,%rdi
    4a31:	74 05                	je     4a38 <__const_udelay+0xdc>
    4a33:	e8 00 00 00 00       	callq  4a38 <__const_udelay+0xdc>
			4a34: R_X86_64_PC32	kfree+0xfffffffffffffffc
    4a38:	48 83 c4 38          	add    $0x38,%rsp
    4a3c:	5b                   	pop    %rbx
    4a3d:	41 5c                	pop    %r12
    4a3f:	41 5d                	pop    %r13
    4a41:	c9                   	leaveq 
    4a42:	c3                   	retq   

0000000000004a43 <e1000_ich8_flash_cycle>:
    4a43:	55                   	push   %rbp
    4a44:	48 89 e5             	mov    %rsp,%rbp
    4a47:	41 56                	push   %r14
    4a49:	41 89 f6             	mov    %esi,%r14d
    4a4c:	41 55                	push   %r13
    4a4e:	49 89 fd             	mov    %rdi,%r13
    4a51:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4a54: R_X86_64_32S	.rodata.str1.1+0x1168
    4a58:	41 54                	push   %r12
    4a5a:	53                   	push   %rbx
    4a5b:	e8 00 00 00 00       	callq  4a60 <e1000_ich8_flash_cycle+0x1d>
			4a5c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4a60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4a63: R_X86_64_32S	.rodata.str1.1+0x117f
    4a67:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4a6b:	e8 00 00 00 00       	callq  4a70 <e1000_ich8_flash_cycle+0x2d>
			4a6c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4a70:	66 44 8b 63 06       	mov    0x6(%rbx),%r12w
    4a75:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4a79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4a7c: R_X86_64_32S	.rodata.str1.1+0x1185
    4a80:	41 83 cc 01          	or     $0x1,%r12d
    4a84:	e8 00 00 00 00       	callq  4a89 <e1000_ich8_flash_cycle+0x46>
			4a85: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4a89:	48 83 c3 06          	add    $0x6,%rbx
    4a8d:	66 44 89 23          	mov    %r12w,(%rbx)
    4a91:	45 31 e4             	xor    %r12d,%r12d
    4a94:	45 85 f6             	test   %r14d,%r14d
    4a97:	74 0e                	je     4aa7 <e1000_ich8_flash_cycle+0x64>
    4a99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4a9c: R_X86_64_32S	str_291563434
    4aa0:	31 c0                	xor    %eax,%eax
    4aa2:	e8 00 00 00 00       	callq  4aa7 <e1000_ich8_flash_cycle+0x64>
			4aa3: R_X86_64_PC32	printk+0xfffffffffffffffc
    4aa7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4aaa: R_X86_64_32S	.rodata.str1.1+0x117f
    4aae:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4ab2:	e8 00 00 00 00       	callq  4ab7 <e1000_ich8_flash_cycle+0x74>
			4ab3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4ab7:	66 8b 43 04          	mov    0x4(%rbx),%ax
    4abb:	a8 01                	test   $0x1,%al
    4abd:	75 19                	jne    4ad8 <e1000_ich8_flash_cycle+0x95>
    4abf:	bf c7 10 00 00       	mov    $0x10c7,%edi
    4ac4:	41 ff c4             	inc    %r12d
    4ac7:	e8 90 fe ff ff       	callq  495c <__const_udelay>
    4acc:	45 39 f4             	cmp    %r14d,%r12d
    4acf:	b8 01 00 00 00       	mov    $0x1,%eax
    4ad4:	73 07                	jae    4add <e1000_ich8_flash_cycle+0x9a>
    4ad6:	eb c1                	jmp    4a99 <e1000_ich8_flash_cycle+0x56>
    4ad8:	d0 e8                	shr    %al
    4ada:	83 e0 01             	and    $0x1,%eax
    4add:	5b                   	pop    %rbx
    4ade:	41 5c                	pop    %r12
    4ae0:	41 5d                	pop    %r13
    4ae2:	41 5e                	pop    %r14
    4ae4:	c9                   	leaveq 
    4ae5:	c3                   	retq   

0000000000004ae6 <e1000_ich8_cycle_init>:
    4ae6:	55                   	push   %rbp
    4ae7:	48 89 e5             	mov    %rsp,%rbp
    4aea:	41 56                	push   %r14
    4aec:	49 89 fe             	mov    %rdi,%r14
    4aef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4af2: R_X86_64_32S	.rodata.str1.1+0x118c
    4af6:	41 55                	push   %r13
    4af8:	41 54                	push   %r12
    4afa:	53                   	push   %rbx
    4afb:	e8 00 00 00 00       	callq  4b00 <e1000_ich8_cycle_init+0x1a>
			4afc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4b00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4b03: R_X86_64_32S	.rodata.str1.1+0x117f
    4b07:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    4b0b:	e8 00 00 00 00       	callq  4b10 <e1000_ich8_cycle_init+0x2a>
			4b0c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4b10:	66 8b 43 04          	mov    0x4(%rbx),%ax
    4b14:	0f b7 c0             	movzwl %ax,%eax
    4b17:	ba 01 00 00 00       	mov    $0x1,%edx
    4b1c:	f6 c4 40             	test   $0x40,%ah
    4b1f:	41 89 c5             	mov    %eax,%r13d
    4b22:	0f 84 8d 00 00 00    	je     4bb5 <e1000_ich8_cycle_init+0xcf>
    4b28:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    4b2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4b2f: R_X86_64_32S	.rodata.str1.1+0x1185
    4b33:	41 83 cd 06          	or     $0x6,%r13d
    4b37:	e8 00 00 00 00       	callq  4b3c <e1000_ich8_cycle_init+0x56>
			4b38: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4b3c:	48 83 c3 04          	add    $0x4,%rbx
    4b40:	66 44 89 2b          	mov    %r13w,(%rbx)
    4b44:	45 31 e4             	xor    %r12d,%r12d
    4b47:	41 f6 c5 20          	test   $0x20,%r13b
    4b4b:	75 17                	jne    4b64 <e1000_ich8_cycle_init+0x7e>
    4b4d:	eb 48                	jmp    4b97 <e1000_ich8_cycle_init+0xb1>
    4b4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4b52: R_X86_64_32S	str_200115605
    4b56:	31 c0                	xor    %eax,%eax
    4b58:	e8 00 00 00 00       	callq  4b5d <e1000_ich8_cycle_init+0x77>
			4b59: R_X86_64_PC32	printk+0xfffffffffffffffc
    4b5d:	ba 01 00 00 00       	mov    $0x1,%edx
    4b62:	eb 51                	jmp    4bb5 <e1000_ich8_cycle_init+0xcf>
    4b64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4b67: R_X86_64_32S	.rodata.str1.1+0x117f
    4b6b:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    4b6f:	e8 00 00 00 00       	callq  4b74 <e1000_ich8_cycle_init+0x8e>
			4b70: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4b74:	66 8b 43 04          	mov    0x4(%rbx),%ax
    4b78:	a8 20                	test   $0x20,%al
    4b7a:	41 89 c5             	mov    %eax,%r13d
    4b7d:	74 18                	je     4b97 <e1000_ich8_cycle_init+0xb1>
    4b7f:	bf c7 10 00 00       	mov    $0x10c7,%edi
    4b84:	41 ff c4             	inc    %r12d
    4b87:	e8 d0 fd ff ff       	callq  495c <__const_udelay>
    4b8c:	41 81 fc 88 13 00 00 	cmp    $0x1388,%r12d
    4b93:	74 ba                	je     4b4f <e1000_ich8_cycle_init+0x69>
    4b95:	eb cd                	jmp    4b64 <e1000_ich8_cycle_init+0x7e>
    4b97:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    4b9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4b9e: R_X86_64_32S	.rodata.str1.1+0x1185
    4ba2:	41 83 cd 01          	or     $0x1,%r13d
    4ba6:	e8 00 00 00 00       	callq  4bab <e1000_ich8_cycle_init+0xc5>
			4ba7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4bab:	48 83 c3 04          	add    $0x4,%rbx
    4baf:	66 44 89 2b          	mov    %r13w,(%rbx)
    4bb3:	31 d2                	xor    %edx,%edx
    4bb5:	5b                   	pop    %rbx
    4bb6:	41 5c                	pop    %r12
    4bb8:	41 5d                	pop    %r13
    4bba:	41 5e                	pop    %r14
    4bbc:	c9                   	leaveq 
    4bbd:	89 d0                	mov    %edx,%eax
    4bbf:	c3                   	retq   

0000000000004bc0 <e1000_erase_ich8_4k_segment>:
    4bc0:	55                   	push   %rbp
    4bc1:	48 89 e5             	mov    %rsp,%rbp
    4bc4:	41 57                	push   %r15
    4bc6:	41 56                	push   %r14
    4bc8:	41 89 f6             	mov    %esi,%r14d
    4bcb:	41 55                	push   %r13
    4bcd:	49 89 fd             	mov    %rdi,%r13
    4bd0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4bd3: R_X86_64_32S	.rodata.str1.1+0x11a2
    4bd7:	41 54                	push   %r12
    4bd9:	53                   	push   %rbx
    4bda:	48 83 ec 18          	sub    $0x18,%rsp
    4bde:	e8 00 00 00 00       	callq  4be3 <e1000_erase_ich8_4k_segment+0x23>
			4bdf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4be3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4be6: R_X86_64_32S	.rodata.str1.1+0x117f
    4bea:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4bee:	e8 00 00 00 00       	callq  4bf3 <e1000_erase_ich8_4k_segment+0x33>
			4bef: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4bf3:	66 8b 43 04          	mov    0x4(%rbx),%ax
    4bf7:	24 18                	and    $0x18,%al
    4bf9:	75 10                	jne    4c0b <e1000_erase_ich8_4k_segment+0x4b>
    4bfb:	c7 45 d0 10 00 00 00 	movl   $0x10,0xffffffffffffffd0(%rbp)
    4c02:	c7 45 d4 00 01 00 00 	movl   $0x100,0xffffffffffffffd4(%rbp)
    4c09:	eb 12                	jmp    4c1d <e1000_erase_ich8_4k_segment+0x5d>
    4c0b:	3c 08                	cmp    $0x8,%al
    4c0d:	75 15                	jne    4c24 <e1000_erase_ich8_4k_segment+0x64>
    4c0f:	c7 45 d0 01 00 00 00 	movl   $0x1,0xffffffffffffffd0(%rbp)
    4c16:	c7 45 d4 00 00 00 00 	movl   $0x0,0xffffffffffffffd4(%rbp)
    4c1d:	b8 00 10 00 00       	mov    $0x1000,%eax
    4c22:	eb 21                	jmp    4c45 <e1000_erase_ich8_4k_segment+0x85>
    4c24:	3c 18                	cmp    $0x18,%al
    4c26:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    4c2c:	0f 85 eb 00 00 00    	jne    4d1d <e1000_erase_ich8_4k_segment+0x15d>
    4c32:	c7 45 d0 01 00 00 00 	movl   $0x1,0xffffffffffffffd0(%rbp)
    4c39:	c7 45 d4 00 00 00 00 	movl   $0x0,0xffffffffffffffd4(%rbp)
    4c40:	b8 00 00 01 00       	mov    $0x10000,%eax
    4c45:	41 0f af c6          	imul   %r14d,%eax
    4c49:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    4c50:	45 31 ff             	xor    %r15d,%r15d
    4c53:	45 31 f6             	xor    %r14d,%r14d
    4c56:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
    4c59:	44 3b 7d d0          	cmp    0xffffffffffffffd0(%rbp),%r15d
    4c5d:	7c 08                	jl     4c67 <e1000_erase_ich8_4k_segment+0xa7>
    4c5f:	45 31 e4             	xor    %r12d,%r12d
    4c62:	e9 b6 00 00 00       	jmpq   4d1d <e1000_erase_ich8_4k_segment+0x15d>
    4c67:	4c 89 ef             	mov    %r13,%rdi
    4c6a:	e8 77 fe ff ff       	callq  4ae6 <e1000_ich8_cycle_init>
    4c6f:	85 c0                	test   %eax,%eax
    4c71:	41 89 c4             	mov    %eax,%r12d
    4c74:	0f 85 a3 00 00 00    	jne    4d1d <e1000_erase_ich8_4k_segment+0x15d>
    4c7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4c7d: R_X86_64_32S	.rodata.str1.1+0x117f
    4c81:	ff 45 cc             	incl   0xffffffffffffffcc(%rbp)
    4c84:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4c88:	e8 00 00 00 00       	callq  4c8d <e1000_erase_ich8_4k_segment+0xcd>
			4c89: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4c8d:	66 44 8b 63 06       	mov    0x6(%rbx),%r12w
    4c92:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4c96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4c99: R_X86_64_32S	.rodata.str1.1+0x1185
    4c9d:	41 83 cc 06          	or     $0x6,%r12d
    4ca1:	e8 00 00 00 00       	callq  4ca6 <e1000_erase_ich8_4k_segment+0xe6>
			4ca2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4ca6:	48 83 c3 06          	add    $0x6,%rbx
    4caa:	66 44 89 23          	mov    %r12w,(%rbx)
    4cae:	44 8b 65 c8          	mov    0xffffffffffffffc8(%rbp),%r12d
    4cb2:	45 03 65 34          	add    0x34(%r13),%r12d
    4cb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4cb9: R_X86_64_32S	.rodata.str1.1+0xb4
    4cbd:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4cc1:	e8 00 00 00 00       	callq  4cc6 <e1000_erase_ich8_4k_segment+0x106>
			4cc2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4cc6:	45 01 f4             	add    %r14d,%r12d
    4cc9:	48 83 c3 08          	add    $0x8,%rbx
    4ccd:	41 81 e4 ff ff ff 00 	and    $0xffffff,%r12d
    4cd4:	44 89 23             	mov    %r12d,(%rbx)
    4cd7:	be c0 c6 2d 00       	mov    $0x2dc6c0,%esi
    4cdc:	4c 89 ef             	mov    %r13,%rdi
    4cdf:	e8 5f fd ff ff       	callq  4a43 <e1000_ich8_flash_cycle>
    4ce4:	85 c0                	test   %eax,%eax
    4ce6:	41 89 c4             	mov    %eax,%r12d
    4ce9:	74 26                	je     4d11 <e1000_erase_ich8_4k_segment+0x151>
    4ceb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4cee: R_X86_64_32S	.rodata.str1.1+0x117f
    4cf2:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4cf6:	e8 00 00 00 00       	callq  4cfb <e1000_erase_ich8_4k_segment+0x13b>
			4cf7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4cfb:	66 8b 43 04          	mov    0x4(%rbx),%ax
    4cff:	a8 02                	test   $0x2,%al
    4d01:	75 04                	jne    4d07 <e1000_erase_ich8_4k_segment+0x147>
    4d03:	a8 01                	test   $0x1,%al
    4d05:	74 16                	je     4d1d <e1000_erase_ich8_4k_segment+0x15d>
    4d07:	83 7d cc 09          	cmpl   $0x9,0xffffffffffffffcc(%rbp)
    4d0b:	0f 8e 56 ff ff ff    	jle    4c67 <e1000_erase_ich8_4k_segment+0xa7>
    4d11:	44 03 75 d4          	add    0xffffffffffffffd4(%rbp),%r14d
    4d15:	41 ff c7             	inc    %r15d
    4d18:	e9 3c ff ff ff       	jmpq   4c59 <e1000_erase_ich8_4k_segment+0x99>
    4d1d:	48 83 c4 18          	add    $0x18,%rsp
    4d21:	44 89 e0             	mov    %r12d,%eax
    4d24:	5b                   	pop    %rbx
    4d25:	41 5c                	pop    %r12
    4d27:	41 5d                	pop    %r13
    4d29:	41 5e                	pop    %r14
    4d2b:	41 5f                	pop    %r15
    4d2d:	c9                   	leaveq 
    4d2e:	c3                   	retq   

0000000000004d2f <e1000_write_ich8_byte>:
    4d2f:	55                   	push   %rbp
    4d30:	48 89 e5             	mov    %rsp,%rbp
    4d33:	41 57                	push   %r15
    4d35:	41 56                	push   %r14
    4d37:	41 55                	push   %r13
    4d39:	49 89 fd             	mov    %rdi,%r13
    4d3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4d3f: R_X86_64_32S	.rodata.str1.1+0x11be
    4d43:	41 54                	push   %r12
    4d45:	41 89 f4             	mov    %esi,%r12d
    4d48:	53                   	push   %rbx
    4d49:	88 d3                	mov    %dl,%bl
    4d4b:	0f b6 db             	movzbl %bl,%ebx
    4d4e:	48 83 ec 08          	sub    $0x8,%rsp
    4d52:	e8 00 00 00 00       	callq  4d57 <e1000_write_ich8_byte+0x28>
			4d53: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4d57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4d5a: R_X86_64_32S	.rodata.str1.1+0x11d4
    4d5e:	e8 00 00 00 00       	callq  4d63 <e1000_write_ich8_byte+0x34>
			4d5f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4d63:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    4d69:	89 5d d4             	mov    %ebx,0xffffffffffffffd4(%rbp)
    4d6c:	0f 87 f8 00 00 00    	ja     4e6a <e1000_write_ich8_byte+0x13b>
    4d72:	41 81 fc ff ff ff 00 	cmp    $0xffffff,%r12d
    4d79:	0f 87 eb 00 00 00    	ja     4e6a <e1000_write_ich8_byte+0x13b>
    4d7f:	45 89 e6             	mov    %r12d,%r14d
    4d82:	45 31 ff             	xor    %r15d,%r15d
    4d85:	41 81 e6 ff ff ff 00 	and    $0xffffff,%r14d
    4d8c:	45 03 75 34          	add    0x34(%r13),%r14d
    4d90:	83 fb 09             	cmp    $0x9,%ebx
    4d93:	7f 0e                	jg     4da3 <e1000_write_ich8_byte+0x74>
    4d95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4d98: R_X86_64_32S	str_870287771
    4d9c:	31 c0                	xor    %eax,%eax
    4d9e:	e8 00 00 00 00       	callq  4da3 <e1000_write_ich8_byte+0x74>
			4d9f: R_X86_64_PC32	printk+0xfffffffffffffffc
    4da3:	bf c7 10 00 00       	mov    $0x10c7,%edi
    4da8:	e8 af fb ff ff       	callq  495c <__const_udelay>
    4dad:	4c 89 ef             	mov    %r13,%rdi
    4db0:	e8 31 fd ff ff       	callq  4ae6 <e1000_ich8_cycle_init>
    4db5:	85 c0                	test   %eax,%eax
    4db7:	41 89 c4             	mov    %eax,%r12d
    4dba:	0f 85 ae 00 00 00    	jne    4e6e <e1000_write_ich8_byte+0x13f>
    4dc0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4dc3: R_X86_64_32S	.rodata.str1.1+0x117f
    4dc7:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4dcb:	e8 00 00 00 00       	callq  4dd0 <e1000_write_ich8_byte+0xa1>
			4dcc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4dd0:	66 8b 5b 06          	mov    0x6(%rbx),%bx
    4dd4:	4d 8b 65 08          	mov    0x8(%r13),%r12
    4dd8:	81 e3 f9 fc 00 00    	and    $0xfcf9,%ebx
    4dde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4de1: R_X86_64_32S	.rodata.str1.1+0x1185
    4de5:	83 cb 04             	or     $0x4,%ebx
    4de8:	e8 00 00 00 00       	callq  4ded <e1000_write_ich8_byte+0xbe>
			4de9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4ded:	49 83 c4 06          	add    $0x6,%r12
    4df1:	66 41 89 1c 24       	mov    %bx,(%r12)
    4df6:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4dfa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4dfd: R_X86_64_32S	.rodata.str1.1+0xb4
    4e01:	e8 00 00 00 00       	callq  4e06 <e1000_write_ich8_byte+0xd7>
			4e02: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4e06:	48 83 c3 08          	add    $0x8,%rbx
    4e0a:	44 89 33             	mov    %r14d,(%rbx)
    4e0d:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4e11:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4e14: R_X86_64_32S	.rodata.str1.1+0xb4
    4e18:	44 0f b6 65 d4       	movzbl 0xffffffffffffffd4(%rbp),%r12d
    4e1d:	e8 00 00 00 00       	callq  4e22 <e1000_write_ich8_byte+0xf3>
			4e1e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4e22:	48 83 c3 10          	add    $0x10,%rbx
    4e26:	44 89 23             	mov    %r12d,(%rbx)
    4e29:	be 88 13 00 00       	mov    $0x1388,%esi
    4e2e:	4c 89 ef             	mov    %r13,%rdi
    4e31:	e8 0d fc ff ff       	callq  4a43 <e1000_ich8_flash_cycle>
    4e36:	85 c0                	test   %eax,%eax
    4e38:	41 89 c4             	mov    %eax,%r12d
    4e3b:	74 31                	je     4e6e <e1000_write_ich8_byte+0x13f>
    4e3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4e40: R_X86_64_32S	.rodata.str1.1+0x117f
    4e44:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4e48:	e8 00 00 00 00       	callq  4e4d <e1000_write_ich8_byte+0x11e>
			4e49: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4e4d:	66 8b 43 04          	mov    0x4(%rbx),%ax
    4e51:	a8 02                	test   $0x2,%al
    4e53:	75 04                	jne    4e59 <e1000_write_ich8_byte+0x12a>
    4e55:	a8 01                	test   $0x1,%al
    4e57:	74 15                	je     4e6e <e1000_write_ich8_byte+0x13f>
    4e59:	41 83 ff 0a          	cmp    $0xa,%r15d
    4e5d:	74 0f                	je     4e6e <e1000_write_ich8_byte+0x13f>
    4e5f:	44 89 fb             	mov    %r15d,%ebx
    4e62:	41 ff c7             	inc    %r15d
    4e65:	e9 26 ff ff ff       	jmpq   4d90 <e1000_write_ich8_byte+0x61>
    4e6a:	41 83 cc ff          	or     $0xffffffffffffffff,%r12d
    4e6e:	5f                   	pop    %rdi
    4e6f:	5b                   	pop    %rbx
    4e70:	44 89 e0             	mov    %r12d,%eax
    4e73:	41 5c                	pop    %r12
    4e75:	41 5d                	pop    %r13
    4e77:	41 5e                	pop    %r14
    4e79:	41 5f                	pop    %r15
    4e7b:	c9                   	leaveq 
    4e7c:	c3                   	retq   

0000000000004e7d <e1000_verify_write_ich8_byte>:
    4e7d:	55                   	push   %rbp
    4e7e:	48 89 e5             	mov    %rsp,%rbp
    4e81:	41 57                	push   %r15
    4e83:	49 89 ff             	mov    %rdi,%r15
    4e86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4e89: R_X86_64_32S	.rodata.str1.1+0x11ea
    4e8d:	41 56                	push   %r14
    4e8f:	41 89 f6             	mov    %esi,%r14d
    4e92:	41 55                	push   %r13
    4e94:	41 54                	push   %r12
    4e96:	53                   	push   %rbx
    4e97:	88 d3                	mov    %dl,%bl
    4e99:	44 0f b6 eb          	movzbl %bl,%r13d
    4e9d:	48 83 ec 08          	sub    $0x8,%rsp
    4ea1:	e8 00 00 00 00       	callq  4ea6 <e1000_verify_write_ich8_byte+0x29>
			4ea2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4ea6:	44 89 ea             	mov    %r13d,%edx
    4ea9:	44 89 f6             	mov    %r14d,%esi
    4eac:	4c 89 ff             	mov    %r15,%rdi
    4eaf:	e8 7b fe ff ff       	callq  4d2f <e1000_write_ich8_byte>
    4eb4:	85 c0                	test   %eax,%eax
    4eb6:	89 c3                	mov    %eax,%ebx
    4eb8:	74 2f                	je     4ee9 <e1000_verify_write_ich8_byte+0x6c>
    4eba:	45 31 e4             	xor    %r12d,%r12d
    4ebd:	44 89 ea             	mov    %r13d,%edx
    4ec0:	44 89 f6             	mov    %r14d,%esi
    4ec3:	4c 89 ff             	mov    %r15,%rdi
    4ec6:	e8 64 fe ff ff       	callq  4d2f <e1000_write_ich8_byte>
    4ecb:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
    4ed0:	89 c3                	mov    %eax,%ebx
    4ed2:	e8 85 fa ff ff       	callq  495c <__const_udelay>
    4ed7:	85 db                	test   %ebx,%ebx
    4ed9:	74 0e                	je     4ee9 <e1000_verify_write_ich8_byte+0x6c>
    4edb:	41 ff c4             	inc    %r12d
    4ede:	41 83 fc 64          	cmp    $0x64,%r12d
    4ee2:	75 d9                	jne    4ebd <e1000_verify_write_ich8_byte+0x40>
    4ee4:	bb 01 00 00 00       	mov    $0x1,%ebx
    4ee9:	41 58                	pop    %r8
    4eeb:	89 d8                	mov    %ebx,%eax
    4eed:	5b                   	pop    %rbx
    4eee:	41 5c                	pop    %r12
    4ef0:	41 5d                	pop    %r13
    4ef2:	41 5e                	pop    %r14
    4ef4:	41 5f                	pop    %r15
    4ef6:	c9                   	leaveq 
    4ef7:	c3                   	retq   

0000000000004ef8 <e1000_read_ich8_data>:
    4ef8:	55                   	push   %rbp
    4ef9:	48 89 e5             	mov    %rsp,%rbp
    4efc:	41 57                	push   %r15
    4efe:	41 89 d7             	mov    %edx,%r15d
    4f01:	41 56                	push   %r14
    4f03:	41 55                	push   %r13
    4f05:	49 89 fd             	mov    %rdi,%r13
    4f08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4f0b: R_X86_64_32S	.rodata.str1.1+0x1207
    4f0f:	41 54                	push   %r12
    4f11:	53                   	push   %rbx
    4f12:	89 f3                	mov    %esi,%ebx
    4f14:	48 83 ec 18          	sub    $0x18,%rsp
    4f18:	48 89 4d c8          	mov    %rcx,0xffffffffffffffc8(%rbp)
    4f1c:	e8 00 00 00 00       	callq  4f21 <e1000_read_ich8_data+0x29>
			4f1d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4f21:	45 85 ff             	test   %r15d,%r15d
    4f24:	0f 84 28 01 00 00    	je     5052 <e1000_read_ich8_data+0x15a>
    4f2a:	41 83 ff 02          	cmp    $0x2,%r15d
    4f2e:	0f 87 1e 01 00 00    	ja     5052 <e1000_read_ich8_data+0x15a>
    4f34:	48 83 7d c8 00       	cmpq   $0x0,0xffffffffffffffc8(%rbp)
    4f39:	0f 84 13 01 00 00    	je     5052 <e1000_read_ich8_data+0x15a>
    4f3f:	81 fb ff ff ff 00    	cmp    $0xffffff,%ebx
    4f45:	0f 87 07 01 00 00    	ja     5052 <e1000_read_ich8_data+0x15a>
    4f4b:	41 89 de             	mov    %ebx,%r14d
    4f4e:	c7 45 d4 00 00 00 00 	movl   $0x0,0xffffffffffffffd4(%rbp)
    4f55:	41 81 e6 ff ff ff 00 	and    $0xffffff,%r14d
    4f5c:	45 03 75 34          	add    0x34(%r13),%r14d
    4f60:	83 fb 09             	cmp    $0x9,%ebx
    4f63:	7f 0e                	jg     4f73 <e1000_read_ich8_data+0x7b>
    4f65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4f68: R_X86_64_32S	str_125676294
    4f6c:	31 c0                	xor    %eax,%eax
    4f6e:	e8 00 00 00 00       	callq  4f73 <e1000_read_ich8_data+0x7b>
			4f6f: R_X86_64_PC32	printk+0xfffffffffffffffc
    4f73:	bf c7 10 00 00       	mov    $0x10c7,%edi
    4f78:	e8 df f9 ff ff       	callq  495c <__const_udelay>
    4f7d:	4c 89 ef             	mov    %r13,%rdi
    4f80:	e8 61 fb ff ff       	callq  4ae6 <e1000_ich8_cycle_init>
    4f85:	85 c0                	test   %eax,%eax
    4f87:	41 89 c4             	mov    %eax,%r12d
    4f8a:	0f 85 c6 00 00 00    	jne    5056 <e1000_read_ich8_data+0x15e>
    4f90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4f93: R_X86_64_32S	.rodata.str1.1+0x117f
    4f97:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4f9b:	e8 00 00 00 00       	callq  4fa0 <e1000_read_ich8_data+0xa8>
			4f9c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4fa0:	66 44 8b 63 06       	mov    0x6(%rbx),%r12w
    4fa5:	41 8d 47 ff          	lea    0xffffffffffffffff(%r15),%eax
    4fa9:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4fad:	66 41 81 e4 f9 fc    	and    $0xfcf9,%r12w
    4fb3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4fb6: R_X86_64_32S	.rodata.str1.1+0x1185
    4fba:	83 e0 03             	and    $0x3,%eax
    4fbd:	c1 e0 08             	shl    $0x8,%eax
    4fc0:	48 83 c3 06          	add    $0x6,%rbx
    4fc4:	41 09 c4             	or     %eax,%r12d
    4fc7:	e8 00 00 00 00       	callq  4fcc <e1000_read_ich8_data+0xd4>
			4fc8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4fcc:	66 44 89 23          	mov    %r12w,(%rbx)
    4fd0:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4fd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4fd7: R_X86_64_32S	.rodata.str1.1+0xb4
    4fdb:	e8 00 00 00 00       	callq  4fe0 <e1000_read_ich8_data+0xe8>
			4fdc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    4fe0:	48 83 c3 08          	add    $0x8,%rbx
    4fe4:	44 89 33             	mov    %r14d,(%rbx)
    4fe7:	be 88 13 00 00       	mov    $0x1388,%esi
    4fec:	4c 89 ef             	mov    %r13,%rdi
    4fef:	e8 4f fa ff ff       	callq  4a43 <e1000_ich8_flash_cycle>
    4ff4:	85 c0                	test   %eax,%eax
    4ff6:	41 89 c4             	mov    %eax,%r12d
    4ff9:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    4ffd:	75 2a                	jne    5029 <e1000_read_ich8_data+0x131>
    4fff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5002: R_X86_64_32S	.rodata.str1.1+0xae
    5006:	e8 00 00 00 00       	callq  500b <e1000_read_ich8_data+0x113>
			5007: R_X86_64_PC32	record_function+0xfffffffffffffffc
    500b:	8b 43 10             	mov    0x10(%rbx),%eax
    500e:	41 83 ff 01          	cmp    $0x1,%r15d
    5012:	75 06                	jne    501a <e1000_read_ich8_data+0x122>
    5014:	66 0f b6 c0          	movzbw %al,%ax
    5018:	eb 06                	jmp    5020 <e1000_read_ich8_data+0x128>
    501a:	41 83 ff 02          	cmp    $0x2,%r15d
    501e:	75 36                	jne    5056 <e1000_read_ich8_data+0x15e>
    5020:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
    5024:	66 89 02             	mov    %ax,(%rdx)
    5027:	eb 2d                	jmp    5056 <e1000_read_ich8_data+0x15e>
    5029:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			502c: R_X86_64_32S	.rodata.str1.1+0x117f
    5030:	e8 00 00 00 00       	callq  5035 <e1000_read_ich8_data+0x13d>
			5031: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5035:	66 8b 43 04          	mov    0x4(%rbx),%ax
    5039:	a8 02                	test   $0x2,%al
    503b:	75 04                	jne    5041 <e1000_read_ich8_data+0x149>
    503d:	a8 01                	test   $0x1,%al
    503f:	74 15                	je     5056 <e1000_read_ich8_data+0x15e>
    5041:	83 7d d4 0a          	cmpl   $0xa,0xffffffffffffffd4(%rbp)
    5045:	74 0f                	je     5056 <e1000_read_ich8_data+0x15e>
    5047:	8b 5d d4             	mov    0xffffffffffffffd4(%rbp),%ebx
    504a:	ff 45 d4             	incl   0xffffffffffffffd4(%rbp)
    504d:	e9 0e ff ff ff       	jmpq   4f60 <e1000_read_ich8_data+0x68>
    5052:	41 83 cc ff          	or     $0xffffffffffffffff,%r12d
    5056:	48 83 c4 18          	add    $0x18,%rsp
    505a:	44 89 e0             	mov    %r12d,%eax
    505d:	5b                   	pop    %rbx
    505e:	41 5c                	pop    %r12
    5060:	41 5d                	pop    %r13
    5062:	41 5e                	pop    %r14
    5064:	41 5f                	pop    %r15
    5066:	c9                   	leaveq 
    5067:	c3                   	retq   

0000000000005068 <e1000_read_ich8_byte>:
    5068:	55                   	push   %rbp
    5069:	48 89 e5             	mov    %rsp,%rbp
    506c:	41 55                	push   %r13
    506e:	49 89 d5             	mov    %rdx,%r13
    5071:	41 54                	push   %r12
    5073:	49 89 fc             	mov    %rdi,%r12
    5076:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5079: R_X86_64_32S	.rodata.str1.1+0x121c
    507d:	53                   	push   %rbx
    507e:	89 f3                	mov    %esi,%ebx
    5080:	48 83 ec 18          	sub    $0x18,%rsp
    5084:	e8 00 00 00 00       	callq  5089 <e1000_read_ich8_byte+0x21>
			5085: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5089:	48 8d 4d e6          	lea    0xffffffffffffffe6(%rbp),%rcx
    508d:	ba 01 00 00 00       	mov    $0x1,%edx
    5092:	89 de                	mov    %ebx,%esi
    5094:	4c 89 e7             	mov    %r12,%rdi
    5097:	66 c7 45 e6 00 00    	movw   $0x0,0xffffffffffffffe6(%rbp)
    509d:	e8 56 fe ff ff       	callq  4ef8 <e1000_read_ich8_data>
    50a2:	85 c0                	test   %eax,%eax
    50a4:	89 c2                	mov    %eax,%edx
    50a6:	75 08                	jne    50b0 <e1000_read_ich8_byte+0x48>
    50a8:	66 8b 45 e6          	mov    0xffffffffffffffe6(%rbp),%ax
    50ac:	41 88 45 00          	mov    %al,0x0(%r13)
    50b0:	48 83 c4 18          	add    $0x18,%rsp
    50b4:	89 d0                	mov    %edx,%eax
    50b6:	5b                   	pop    %rbx
    50b7:	41 5c                	pop    %r12
    50b9:	41 5d                	pop    %r13
    50bb:	c9                   	leaveq 
    50bc:	c3                   	retq   

00000000000050bd <e1000_get_software_flag>:
    50bd:	55                   	push   %rbp
    50be:	48 89 e5             	mov    %rsp,%rbp
    50c1:	41 56                	push   %r14
    50c3:	41 55                	push   %r13
    50c5:	49 89 fd             	mov    %rdi,%r13
    50c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			50cb: R_X86_64_32S	.rodata.str1.1+0x1231
    50cf:	41 54                	push   %r12
    50d1:	53                   	push   %rbx
    50d2:	e8 00 00 00 00       	callq  50d7 <e1000_get_software_flag+0x1a>
			50d3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    50d7:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    50dc:	75 7d                	jne    515b <e1000_get_software_flag+0x9e>
    50de:	eb 15                	jmp    50f5 <e1000_get_software_flag+0x38>
    50e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			50e3: R_X86_64_32S	str_551160696
    50e7:	31 c0                	xor    %eax,%eax
    50e9:	e8 00 00 00 00       	callq  50ee <e1000_get_software_flag+0x31>
			50ea: R_X86_64_PC32	printk+0xfffffffffffffffc
    50ee:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    50f3:	eb 68                	jmp    515d <e1000_get_software_flag+0xa0>
    50f5:	41 be 64 00 00 00    	mov    $0x64,%r14d
    50fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			50fe: R_X86_64_32S	.rodata.str1.1+0xae
    5102:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5106:	e8 00 00 00 00       	callq  510b <e1000_get_software_flag+0x4e>
			5107: R_X86_64_PC32	record_function+0xfffffffffffffffc
    510b:	44 8b a3 00 0f 00 00 	mov    0xf00(%rbx),%r12d
    5112:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5116:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5119: R_X86_64_32S	.rodata.str1.1+0xb4
    511d:	41 83 cc 20          	or     $0x20,%r12d
    5121:	e8 00 00 00 00       	callq  5126 <e1000_get_software_flag+0x69>
			5122: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5126:	48 81 c3 00 0f 00 00 	add    $0xf00,%rbx
    512d:	44 89 23             	mov    %r12d,(%rbx)
    5130:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5133: R_X86_64_32S	.rodata.str1.1+0xae
    5137:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    513b:	e8 00 00 00 00       	callq  5140 <e1000_get_software_flag+0x83>
			513c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5140:	8b 83 00 0f 00 00    	mov    0xf00(%rbx),%eax
    5146:	a8 20                	test   $0x20,%al
    5148:	75 11                	jne    515b <e1000_get_software_flag+0x9e>
    514a:	bf 58 89 41 00       	mov    $0x418958,%edi
    514f:	e8 08 f8 ff ff       	callq  495c <__const_udelay>
    5154:	41 ff ce             	dec    %r14d
    5157:	74 87                	je     50e0 <e1000_get_software_flag+0x23>
    5159:	eb a0                	jmp    50fb <e1000_get_software_flag+0x3e>
    515b:	31 c0                	xor    %eax,%eax
    515d:	5b                   	pop    %rbx
    515e:	41 5c                	pop    %r12
    5160:	41 5d                	pop    %r13
    5162:	41 5e                	pop    %r14
    5164:	c9                   	leaveq 
    5165:	c3                   	retq   

0000000000005166 <e1000_get_hw_eeprom_semaphore>:
    5166:	55                   	push   %rbp
    5167:	48 89 e5             	mov    %rsp,%rbp
    516a:	41 57                	push   %r15
    516c:	41 56                	push   %r14
    516e:	41 55                	push   %r13
    5170:	49 89 fd             	mov    %rdi,%r13
    5173:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5176: R_X86_64_32S	.rodata.str1.1+0x1249
    517a:	41 54                	push   %r12
    517c:	53                   	push   %rbx
    517d:	48 83 ec 08          	sub    $0x8,%rsp
    5181:	e8 00 00 00 00       	callq  5186 <e1000_get_hw_eeprom_semaphore+0x20>
			5182: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5186:	41 83 7d 68 00       	cmpl   $0x0,0x68(%r13)
    518b:	0f 84 f0 00 00 00    	je     5281 <e1000_get_hw_eeprom_semaphore+0x11b>
    5191:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
    5196:	75 5f                	jne    51f7 <e1000_get_hw_eeprom_semaphore+0x91>
    5198:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			519b: R_X86_64_32S	.rodata.str1.1+0x1267
    519f:	e8 00 00 00 00       	callq  51a4 <e1000_get_hw_eeprom_semaphore+0x3e>
			51a0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    51a4:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
    51a9:	41 8b 45 4c          	mov    0x4c(%r13),%eax
    51ad:	75 48                	jne    51f7 <e1000_get_hw_eeprom_semaphore+0x91>
    51af:	0f b7 c0             	movzwl %ax,%eax
    51b2:	45 31 e4             	xor    %r12d,%r12d
    51b5:	44 8d 70 01          	lea    0x1(%rax),%r14d
    51b9:	45 39 f4             	cmp    %r14d,%r12d
    51bc:	75 10                	jne    51ce <e1000_get_hw_eeprom_semaphore+0x68>
    51be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			51c1: R_X86_64_32S	str_1011285670
    51c5:	31 c0                	xor    %eax,%eax
    51c7:	e8 00 00 00 00       	callq  51cc <e1000_get_hw_eeprom_semaphore+0x66>
			51c8: R_X86_64_PC32	printk+0xfffffffffffffffc
    51cc:	eb 50                	jmp    521e <e1000_get_hw_eeprom_semaphore+0xb8>
    51ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			51d1: R_X86_64_32S	.rodata.str1.1+0xae
    51d5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    51d9:	e8 00 00 00 00       	callq  51de <e1000_get_hw_eeprom_semaphore+0x78>
			51da: R_X86_64_PC32	record_function+0xfffffffffffffffc
    51de:	8b 83 50 5b 00 00    	mov    0x5b50(%rbx),%eax
    51e4:	41 ff c4             	inc    %r12d
    51e7:	a8 01                	test   $0x1,%al
    51e9:	74 0c                	je     51f7 <e1000_get_hw_eeprom_semaphore+0x91>
    51eb:	bf 58 89 41 00       	mov    $0x418958,%edi
    51f0:	e8 67 f7 ff ff       	callq  495c <__const_udelay>
    51f5:	eb c2                	jmp    51b9 <e1000_get_hw_eeprom_semaphore+0x53>
    51f7:	41 0f b7 45 4c       	movzwl 0x4c(%r13),%eax
    51fc:	45 31 f6             	xor    %r14d,%r14d
    51ff:	44 8d 78 01          	lea    0x1(%rax),%r15d
    5203:	45 39 fe             	cmp    %r15d,%r14d
    5206:	75 1b                	jne    5223 <e1000_get_hw_eeprom_semaphore+0xbd>
    5208:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			520b: R_X86_64_32S	str_172582431
    520f:	31 c0                	xor    %eax,%eax
    5211:	e8 00 00 00 00       	callq  5216 <e1000_get_hw_eeprom_semaphore+0xb0>
			5212: R_X86_64_PC32	printk+0xfffffffffffffffc
    5216:	4c 89 ef             	mov    %r13,%rdi
    5219:	e8 5f af ff ff       	callq  17d <e1000_put_hw_eeprom_semaphore>
    521e:	83 c8 ff             	or     $0xffffffffffffffff,%eax
    5221:	eb 60                	jmp    5283 <e1000_get_hw_eeprom_semaphore+0x11d>
    5223:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5226: R_X86_64_32S	.rodata.str1.1+0xae
    522a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    522e:	e8 00 00 00 00       	callq  5233 <e1000_get_hw_eeprom_semaphore+0xcd>
			522f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5233:	44 8b a3 50 5b 00 00 	mov    0x5b50(%rbx),%r12d
    523a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    523e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5241: R_X86_64_32S	.rodata.str1.1+0xb4
    5245:	41 83 cc 02          	or     $0x2,%r12d
    5249:	e8 00 00 00 00       	callq  524e <e1000_get_hw_eeprom_semaphore+0xe8>
			524a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    524e:	48 81 c3 50 5b 00 00 	add    $0x5b50,%rbx
    5255:	44 89 23             	mov    %r12d,(%rbx)
    5258:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			525b: R_X86_64_32S	.rodata.str1.1+0xae
    525f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5263:	e8 00 00 00 00       	callq  5268 <e1000_get_hw_eeprom_semaphore+0x102>
			5264: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5268:	8b 83 50 5b 00 00    	mov    0x5b50(%rbx),%eax
    526e:	41 ff c6             	inc    %r14d
    5271:	a8 02                	test   $0x2,%al
    5273:	75 0c                	jne    5281 <e1000_get_hw_eeprom_semaphore+0x11b>
    5275:	bf de 46 03 00       	mov    $0x346de,%edi
    527a:	e8 dd f6 ff ff       	callq  495c <__const_udelay>
    527f:	eb 82                	jmp    5203 <e1000_get_hw_eeprom_semaphore+0x9d>
    5281:	31 c0                	xor    %eax,%eax
    5283:	41 59                	pop    %r9
    5285:	5b                   	pop    %rbx
    5286:	41 5c                	pop    %r12
    5288:	41 5d                	pop    %r13
    528a:	41 5e                	pop    %r14
    528c:	41 5f                	pop    %r15
    528e:	c9                   	leaveq 
    528f:	c3                   	retq   

0000000000005290 <e1000_swfw_sync_release>:
    5290:	55                   	push   %rbp
    5291:	48 89 e5             	mov    %rsp,%rbp
    5294:	41 56                	push   %r14
    5296:	41 89 f6             	mov    %esi,%r14d
    5299:	41 55                	push   %r13
    529b:	49 89 fd             	mov    %rdi,%r13
    529e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			52a1: R_X86_64_32S	.rodata.str1.1+0x1284
    52a5:	41 54                	push   %r12
    52a7:	53                   	push   %rbx
    52a8:	e8 00 00 00 00       	callq  52ad <e1000_swfw_sync_release+0x1d>
			52a9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    52ad:	41 83 7d 70 00       	cmpl   $0x0,0x70(%r13)
    52b2:	74 0a                	je     52be <e1000_swfw_sync_release+0x2e>
    52b4:	4c 89 ef             	mov    %r13,%rdi
    52b7:	e8 f8 ad ff ff       	callq  b4 <e1000_release_software_flag>
    52bc:	eb 55                	jmp    5313 <e1000_swfw_sync_release+0x83>
    52be:	41 83 7d 6c 00       	cmpl   $0x0,0x6c(%r13)
    52c3:	74 46                	je     530b <e1000_swfw_sync_release+0x7b>
    52c5:	4c 89 ef             	mov    %r13,%rdi
    52c8:	e8 99 fe ff ff       	callq  5166 <e1000_get_hw_eeprom_semaphore>
    52cd:	85 c0                	test   %eax,%eax
    52cf:	75 f4                	jne    52c5 <e1000_swfw_sync_release+0x35>
    52d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			52d4: R_X86_64_32S	.rodata.str1.1+0xae
    52d8:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    52dc:	e8 00 00 00 00       	callq  52e1 <e1000_swfw_sync_release+0x51>
			52dd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    52e1:	44 8b a3 5c 5b 00 00 	mov    0x5b5c(%rbx),%r12d
    52e8:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    52ec:	41 0f b7 c6          	movzwl %r14w,%eax
    52f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			52f3: R_X86_64_32S	.rodata.str1.1+0xb4
    52f7:	f7 d0                	not    %eax
    52f9:	41 21 c4             	and    %eax,%r12d
    52fc:	48 81 c3 5c 5b 00 00 	add    $0x5b5c,%rbx
    5303:	e8 00 00 00 00       	callq  5308 <e1000_swfw_sync_release+0x78>
			5304: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5308:	44 89 23             	mov    %r12d,(%rbx)
    530b:	4c 89 ef             	mov    %r13,%rdi
    530e:	e8 6a ae ff ff       	callq  17d <e1000_put_hw_eeprom_semaphore>
    5313:	5b                   	pop    %rbx
    5314:	41 5c                	pop    %r12
    5316:	41 5d                	pop    %r13
    5318:	41 5e                	pop    %r14
    531a:	c9                   	leaveq 
    531b:	c3                   	retq   

000000000000531c <e1000_disable_pciex_master>:
    531c:	55                   	push   %rbp
    531d:	48 89 e5             	mov    %rsp,%rbp
    5320:	41 55                	push   %r13
    5322:	49 89 fd             	mov    %rdi,%r13
    5325:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5328: R_X86_64_32S	.rodata.str1.1+0x129c
    532c:	41 54                	push   %r12
    532e:	53                   	push   %rbx
    532f:	48 83 ec 08          	sub    $0x8,%rsp
    5333:	e8 00 00 00 00       	callq  5338 <e1000_disable_pciex_master+0x1c>
			5334: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5338:	41 83 7d 44 03       	cmpl   $0x3,0x44(%r13)
    533d:	75 72                	jne    53b1 <e1000_disable_pciex_master+0x95>
    533f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5342: R_X86_64_32S	.rodata.str1.1+0x12b7
    5346:	e8 00 00 00 00       	callq  534b <e1000_disable_pciex_master+0x2f>
			5347: R_X86_64_PC32	record_function+0xfffffffffffffffc
    534b:	41 83 7d 44 03       	cmpl   $0x3,0x44(%r13)
    5350:	75 29                	jne    537b <e1000_disable_pciex_master+0x5f>
    5352:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5355: R_X86_64_32S	.rodata.str1.1+0xae
    5359:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    535d:	e8 00 00 00 00       	callq  5362 <e1000_disable_pciex_master+0x46>
			535e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5362:	8b 1b                	mov    (%rbx),%ebx
    5364:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5367: R_X86_64_32S	.rodata.str1.1+0xb4
    536b:	4d 8b 65 00          	mov    0x0(%r13),%r12
    536f:	83 cb 04             	or     $0x4,%ebx
    5372:	e8 00 00 00 00       	callq  5377 <e1000_disable_pciex_master+0x5b>
			5373: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5377:	41 89 1c 24          	mov    %ebx,(%r12)
    537b:	41 bc 20 03 00 00    	mov    $0x320,%r12d
    5381:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5384: R_X86_64_32S	.rodata.str1.1+0xae
    5388:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    538c:	e8 00 00 00 00       	callq  5391 <e1000_disable_pciex_master+0x75>
			538d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5391:	8b 43 08             	mov    0x8(%rbx),%eax
    5394:	a9 00 00 08 00       	test   $0x80000,%eax
    5399:	74 16                	je     53b1 <e1000_disable_pciex_master+0x95>
    539b:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
    53a0:	e8 b7 f5 ff ff       	callq  495c <__const_udelay>
    53a5:	41 ff cc             	dec    %r12d
    53a8:	75 d7                	jne    5381 <e1000_disable_pciex_master+0x65>
    53aa:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    53af:	eb 02                	jmp    53b3 <e1000_disable_pciex_master+0x97>
    53b1:	31 c0                	xor    %eax,%eax
    53b3:	41 5a                	pop    %r10
    53b5:	5b                   	pop    %rbx
    53b6:	41 5c                	pop    %r12
    53b8:	41 5d                	pop    %r13
    53ba:	c9                   	leaveq 
    53bb:	c3                   	retq   

00000000000053bc <e1000_mng_enable_host_if>:
    53bc:	55                   	push   %rbp
    53bd:	48 89 e5             	mov    %rsp,%rbp
    53c0:	41 55                	push   %r13
    53c2:	49 89 fd             	mov    %rdi,%r13
    53c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			53c8: R_X86_64_32S	.rodata.str1.1+0x12dc
    53cc:	41 54                	push   %r12
    53ce:	53                   	push   %rbx
    53cf:	48 83 ec 08          	sub    $0x8,%rsp
    53d3:	e8 00 00 00 00       	callq  53d8 <e1000_mng_enable_host_if+0x1c>
			53d4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    53d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			53db: R_X86_64_32S	.rodata.str1.1+0xae
    53df:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    53e3:	e8 00 00 00 00       	callq  53e8 <e1000_mng_enable_host_if+0x2c>
			53e4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    53e8:	8b 83 00 8f 00 00    	mov    0x8f00(%rbx),%eax
    53ee:	45 31 e4             	xor    %r12d,%r12d
    53f1:	a8 01                	test   $0x1,%al
    53f3:	75 15                	jne    540a <e1000_mng_enable_host_if+0x4e>
    53f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			53f8: R_X86_64_32S	str_894730267
    53fc:	31 c0                	xor    %eax,%eax
    53fe:	e8 00 00 00 00       	callq  5403 <e1000_mng_enable_host_if+0x47>
			53ff: R_X86_64_PC32	printk+0xfffffffffffffffc
    5403:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5408:	eb 4c                	jmp    5456 <e1000_mng_enable_host_if+0x9a>
    540a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			540d: R_X86_64_32S	.rodata.str1.1+0xae
    5411:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5415:	e8 00 00 00 00       	callq  541a <e1000_mng_enable_host_if+0x5e>
			5416: R_X86_64_PC32	record_function+0xfffffffffffffffc
    541a:	8b 83 00 8f 00 00    	mov    0x8f00(%rbx),%eax
    5420:	a8 02                	test   $0x2,%al
    5422:	74 30                	je     5454 <e1000_mng_enable_host_if+0x98>
    5424:	bf 58 89 41 00       	mov    $0x418958,%edi
    5429:	41 8d 5c 24 01       	lea    0x1(%r12),%ebx
    542e:	41 ff c4             	inc    %r12d
    5431:	e8 26 f5 ff ff       	callq  495c <__const_udelay>
    5436:	41 83 fc 0a          	cmp    $0xa,%r12d
    543a:	75 ce                	jne    540a <e1000_mng_enable_host_if+0x4e>
    543c:	31 c0                	xor    %eax,%eax
    543e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5441: R_X86_64_32S	str_758638560
    5445:	e8 00 00 00 00       	callq  544a <e1000_mng_enable_host_if+0x8e>
			5446: R_X86_64_PC32	printk+0xfffffffffffffffc
    544a:	80 fb 0a             	cmp    $0xa,%bl
    544d:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    5452:	74 02                	je     5456 <e1000_mng_enable_host_if+0x9a>
    5454:	31 c0                	xor    %eax,%eax
    5456:	41 5b                	pop    %r11
    5458:	5b                   	pop    %rbx
    5459:	41 5c                	pop    %r12
    545b:	41 5d                	pop    %r13
    545d:	c9                   	leaveq 
    545e:	c3                   	retq   

000000000000545f <e1000_enable_tx_pkt_filtering>:
    545f:	55                   	push   %rbp
    5460:	48 89 e5             	mov    %rsp,%rbp
    5463:	41 57                	push   %r15
    5465:	49 89 ff             	mov    %rdi,%r15
    5468:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			546b: R_X86_64_32S	.rodata.str1.1+0x12f5
    546f:	41 56                	push   %r14
    5471:	41 55                	push   %r13
    5473:	4d 8d af c0 00 00 00 	lea    0xc0(%r15),%r13
    547a:	41 54                	push   %r12
    547c:	53                   	push   %rbx
    547d:	48 83 ec 08          	sub    $0x8,%rsp
    5481:	e8 00 00 00 00       	callq  5486 <e1000_enable_tx_pkt_filtering+0x27>
			5482: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5486:	4c 89 ff             	mov    %r15,%rdi
    5489:	e8 61 ad ff ff       	callq  1ef <e1000_check_mng_mode>
    548e:	84 c0                	test   %al,%al
    5490:	0f 84 9d 00 00 00    	je     5533 <e1000_enable_tx_pkt_filtering+0xd4>
    5496:	4c 89 ff             	mov    %r15,%rdi
    5499:	e8 1e ff ff ff       	callq  53bc <e1000_mng_enable_host_if>
    549e:	85 c0                	test   %eax,%eax
    54a0:	0f 85 8d 00 00 00    	jne    5533 <e1000_enable_tx_pkt_filtering+0xd4>
    54a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			54a9: R_X86_64_32S	.rodata.str1.1+0x1313
    54ad:	4d 89 ec             	mov    %r13,%r12
    54b0:	45 31 f6             	xor    %r14d,%r14d
    54b3:	e8 00 00 00 00       	callq  54b8 <e1000_enable_tx_pkt_filtering+0x59>
			54b4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    54b8:	49 8b 1f             	mov    (%r15),%rbx
    54bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			54be: R_X86_64_32S	.rodata.str1.1+0xae
    54c2:	e8 00 00 00 00       	callq  54c7 <e1000_enable_tx_pkt_filtering+0x68>
			54c3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    54c7:	42 8d 04 b5 f0 06 00 	lea    0x6f0(,%r14,4),%eax
    54ce:	00 
    54cf:	48 8d 9c 03 00 88 00 	lea    0x8800(%rbx,%rax,1),%rbx
    54d6:	00 
    54d7:	8b 03                	mov    (%rbx),%eax
    54d9:	49 ff c6             	inc    %r14
    54dc:	41 89 04 24          	mov    %eax,(%r12)
    54e0:	49 83 c4 04          	add    $0x4,%r12
    54e4:	49 83 fe 04          	cmp    $0x4,%r14
    54e8:	75 ce                	jne    54b8 <e1000_enable_tx_pkt_filtering+0x59>
    54ea:	41 81 7d 00 49 41 4d 	cmpl   $0x544d4149,0x0(%r13)
    54f1:	54 
    54f2:	41 8a 5d 0f          	mov    0xf(%r13),%bl
    54f6:	41 c6 45 0f 00       	movb   $0x0,0xf(%r13)
    54fb:	75 3a                	jne    5537 <e1000_enable_tx_pkt_filtering+0xd8>
    54fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5500: R_X86_64_32S	.rodata.str1.1+0x132d
    5504:	e8 00 00 00 00       	callq  5509 <e1000_enable_tx_pkt_filtering+0xaa>
			5505: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5509:	31 d2                	xor    %edx,%edx
    550b:	4d 85 ed             	test   %r13,%r13
    550e:	74 15                	je     5525 <e1000_enable_tx_pkt_filtering+0xc6>
    5510:	31 c0                	xor    %eax,%eax
    5512:	41 02 54 05 00       	add    0x0(%r13,%rax,1),%dl
    5517:	48 ff c0             	inc    %rax
    551a:	48 83 f8 10          	cmp    $0x10,%rax
    551e:	75 f2                	jne    5512 <e1000_enable_tx_pkt_filtering+0xb3>
    5520:	f7 da                	neg    %edx
    5522:	0f b6 d2             	movzbl %dl,%edx
    5525:	0f b6 c3             	movzbl %bl,%eax
    5528:	39 d0                	cmp    %edx,%eax
    552a:	75 0b                	jne    5537 <e1000_enable_tx_pkt_filtering+0xd8>
    552c:	41 f6 45 04 01       	testb  $0x1,0x4(%r13)
    5531:	75 04                	jne    5537 <e1000_enable_tx_pkt_filtering+0xd8>
    5533:	31 c0                	xor    %eax,%eax
    5535:	eb 02                	jmp    5539 <e1000_enable_tx_pkt_filtering+0xda>
    5537:	b0 01                	mov    $0x1,%al
    5539:	41 88 87 bc 00 00 00 	mov    %al,0xbc(%r15)
    5540:	0f b6 c0             	movzbl %al,%eax
    5543:	5b                   	pop    %rbx
    5544:	5b                   	pop    %rbx
    5545:	41 5c                	pop    %r12
    5547:	41 5d                	pop    %r13
    5549:	41 5e                	pop    %r14
    554b:	41 5f                	pop    %r15
    554d:	c9                   	leaveq 
    554e:	c3                   	retq   

000000000000554f <e1000_commit_shadow_ram>:
    554f:	55                   	push   %rbp
    5550:	48 89 e5             	mov    %rsp,%rbp
    5553:	41 57                	push   %r15
    5555:	41 56                	push   %r14
    5557:	41 55                	push   %r13
    5559:	49 89 fd             	mov    %rdi,%r13
    555c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			555f: R_X86_64_32S	.rodata.str1.1+0x134a
    5563:	41 54                	push   %r12
    5565:	53                   	push   %rbx
    5566:	48 83 ec 18          	sub    $0x18,%rsp
    556a:	e8 00 00 00 00       	callq  556f <e1000_commit_shadow_ram+0x20>
			556b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    556f:	41 83 7d 10 10       	cmpl   $0x10,0x10(%r13)
    5574:	c6 45 d7 00          	movb   $0x0,0xffffffffffffffd7(%rbp)
    5578:	c6 45 d6 00          	movb   $0x0,0xffffffffffffffd6(%rbp)
    557c:	0f 85 ee 00 00 00    	jne    5670 <e1000_commit_shadow_ram+0x121>
    5582:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5585: R_X86_64_32S	.rodata.str1.1+0xae
    5589:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    558d:	e8 00 00 00 00       	callq  5592 <e1000_commit_shadow_ram+0x43>
			558e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5592:	44 8b b3 3c 10 00 00 	mov    0x103c(%rbx),%r14d
    5599:	45 31 ff             	xor    %r15d,%r15d
    559c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			559f: R_X86_64_32S	.rodata.str1.1+0xae
    55a3:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    55a7:	e8 00 00 00 00       	callq  55ac <e1000_commit_shadow_ram+0x5d>
			55a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    55ac:	44 8b 63 10          	mov    0x10(%rbx),%r12d
    55b0:	41 f7 c4 00 00 08 00 	test   $0x80000,%r12d
    55b7:	74 22                	je     55db <e1000_commit_shadow_ram+0x8c>
    55b9:	bf e3 53 00 00       	mov    $0x53e3,%edi
    55be:	41 ff c7             	inc    %r15d
    55c1:	e8 96 f3 ff ff       	callq  495c <__const_udelay>
    55c6:	41 81 ff a0 86 01 00 	cmp    $0x186a0,%r15d
    55cd:	75 cd                	jne    559c <e1000_commit_shadow_ram+0x4d>
    55cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			55d2: R_X86_64_32S	str_349452481
    55d6:	e9 86 00 00 00       	jmpq   5661 <e1000_commit_shadow_ram+0x112>
    55db:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    55e2:	41 81 fe 00 db 00 00 	cmp    $0xdb00,%r14d
    55e9:	75 1e                	jne    5609 <e1000_commit_shadow_ram+0xba>
    55eb:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    55ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			55f2: R_X86_64_32S	.rodata.str1.1+0xb4
    55f6:	e8 00 00 00 00       	callq  55fb <e1000_commit_shadow_ram+0xac>
			55f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    55fb:	b8 c0 00 00 00       	mov    $0xc0,%eax
    5600:	48 81 c3 00 8f 00 00 	add    $0x8f00,%rbx
    5607:	89 03                	mov    %eax,(%rbx)
    5609:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    560d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5610: R_X86_64_32S	.rodata.str1.1+0xb4
    5614:	41 81 cc 00 00 08 00 	or     $0x80000,%r12d
    561b:	e8 00 00 00 00       	callq  5620 <e1000_commit_shadow_ram+0xd1>
			561c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5620:	48 83 c3 10          	add    $0x10,%rbx
    5624:	44 89 23             	mov    %r12d,(%rbx)
    5627:	45 31 e4             	xor    %r12d,%r12d
    562a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			562d: R_X86_64_32S	.rodata.str1.1+0xae
    5631:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5635:	e8 00 00 00 00       	callq  563a <e1000_commit_shadow_ram+0xeb>
			5636: R_X86_64_PC32	record_function+0xfffffffffffffffc
    563a:	8b 43 10             	mov    0x10(%rbx),%eax
    563d:	a9 00 00 08 00       	test   $0x80000,%eax
    5642:	74 2c                	je     5670 <e1000_commit_shadow_ram+0x121>
    5644:	bf e3 53 00 00       	mov    $0x53e3,%edi
    5649:	41 ff c4             	inc    %r12d
    564c:	e8 0b f3 ff ff       	callq  495c <__const_udelay>
    5651:	41 81 fc a0 86 01 00 	cmp    $0x186a0,%r12d
    5658:	75 d0                	jne    562a <e1000_commit_shadow_ram+0xdb>
    565a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			565d: R_X86_64_32S	str_496259630
    5661:	31 c0                	xor    %eax,%eax
    5663:	e8 00 00 00 00       	callq  5668 <e1000_commit_shadow_ram+0x119>
			5664: R_X86_64_PC32	printk+0xfffffffffffffffc
    5668:	83 ca ff             	or     $0xffffffffffffffff,%edx
    566b:	e9 ea 01 00 00       	jmpq   585a <e1000_commit_shadow_ram+0x30b>
    5670:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    5675:	0f 85 dd 01 00 00    	jne    5858 <e1000_commit_shadow_ram+0x309>
    567b:	49 83 7d 28 00       	cmpq   $0x0,0x28(%r13)
    5680:	0f 84 d2 01 00 00    	je     5858 <e1000_commit_shadow_ram+0x309>
    5686:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5689: R_X86_64_32S	.rodata.str1.1+0xae
    568d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5691:	e8 00 00 00 00       	callq  5696 <e1000_commit_shadow_ram+0x147>
			5692: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5696:	8b 43 10             	mov    0x10(%rbx),%eax
    5699:	a9 00 00 40 00       	test   $0x400000,%eax
    569e:	41 8b 45 30          	mov    0x30(%r13),%eax
    56a2:	74 18                	je     56bc <e1000_commit_shadow_ram+0x16d>
    56a4:	01 c0                	add    %eax,%eax
    56a6:	31 f6                	xor    %esi,%esi
    56a8:	4c 89 ef             	mov    %r13,%rdi
    56ab:	89 45 c0             	mov    %eax,0xffffffffffffffc0(%rbp)
    56ae:	e8 0d f5 ff ff       	callq  4bc0 <e1000_erase_ich8_4k_segment>
    56b3:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
    56ba:	eb 19                	jmp    56d5 <e1000_commit_shadow_ram+0x186>
    56bc:	01 c0                	add    %eax,%eax
    56be:	be 01 00 00 00       	mov    $0x1,%esi
    56c3:	4c 89 ef             	mov    %r13,%rdi
    56c6:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
    56c9:	e8 f2 f4 ff ff       	callq  4bc0 <e1000_erase_ich8_4k_segment>
    56ce:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    56d5:	45 31 f6             	xor    %r14d,%r14d
    56d8:	31 db                	xor    %ebx,%ebx
    56da:	44 89 f0             	mov    %r14d,%eax
    56dd:	4c 8d 24 85 00 00 00 	lea    0x0(,%rax,4),%r12
    56e4:	00 
    56e5:	49 8b 45 28          	mov    0x28(%r13),%rax
    56e9:	4c 01 e0             	add    %r12,%rax
    56ec:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
    56f0:	74 3f                	je     5731 <e1000_commit_shadow_ram+0x1e2>
    56f2:	66 8b 00             	mov    (%rax),%ax
    56f5:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
    56fa:	88 45 d7             	mov    %al,0xffffffffffffffd7(%rbp)
    56fd:	e8 5a f2 ff ff       	callq  495c <__const_udelay>
    5702:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
    5705:	0f b6 55 d7          	movzbl 0xffffffffffffffd7(%rbp),%edx
    5709:	4c 89 ef             	mov    %r13,%rdi
    570c:	42 8d 34 70          	lea    (%rax,%r14,2),%esi
    5710:	e8 68 f7 ff ff       	callq  4e7d <e1000_verify_write_ich8_byte>
    5715:	85 c0                	test   %eax,%eax
    5717:	89 c2                	mov    %eax,%edx
    5719:	0f 85 3b 01 00 00    	jne    585a <e1000_commit_shadow_ram+0x30b>
    571f:	4d 03 65 28          	add    0x28(%r13),%r12
    5723:	66 41 8b 04 24       	mov    (%r12),%ax
    5728:	66 c1 e8 08          	shr    $0x8,%ax
    572c:	88 45 d6             	mov    %al,0xffffffffffffffd6(%rbp)
    572f:	eb 51                	jmp    5782 <e1000_commit_shadow_ram+0x233>
    5731:	8b 45 c0             	mov    0xffffffffffffffc0(%rbp),%eax
    5734:	47 8d 24 36          	lea    (%r14,%r14,1),%r12d
    5738:	48 8d 55 d7          	lea    0xffffffffffffffd7(%rbp),%rdx
    573c:	4c 89 ef             	mov    %r13,%rdi
    573f:	45 8d 3c 04          	lea    (%r12,%rax,1),%r15d
    5743:	44 89 fe             	mov    %r15d,%esi
    5746:	e8 1d f9 ff ff       	callq  5068 <e1000_read_ich8_byte>
    574b:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
    5750:	e8 07 f2 ff ff       	callq  495c <__const_udelay>
    5755:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
    5758:	0f b6 55 d7          	movzbl 0xffffffffffffffd7(%rbp),%edx
    575c:	4c 89 ef             	mov    %r13,%rdi
    575f:	41 8d 34 04          	lea    (%r12,%rax,1),%esi
    5763:	e8 15 f7 ff ff       	callq  4e7d <e1000_verify_write_ich8_byte>
    5768:	85 c0                	test   %eax,%eax
    576a:	89 c2                	mov    %eax,%edx
    576c:	0f 85 e8 00 00 00    	jne    585a <e1000_commit_shadow_ram+0x30b>
    5772:	48 8d 55 d6          	lea    0xffffffffffffffd6(%rbp),%rdx
    5776:	41 8d 77 01          	lea    0x1(%r15),%esi
    577a:	4c 89 ef             	mov    %r13,%rdi
    577d:	e8 e6 f8 ff ff       	callq  5068 <e1000_read_ich8_byte>
    5782:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
    5787:	e8 d0 f1 ff ff       	callq  495c <__const_udelay>
    578c:	84 db                	test   %bl,%bl
    578e:	0f 85 c4 00 00 00    	jne    5858 <e1000_commit_shadow_ram+0x309>
    5794:	41 83 fe 13          	cmp    $0x13,%r14d
    5798:	75 27                	jne    57c1 <e1000_commit_shadow_ram+0x272>
    579a:	8a 55 d6             	mov    0xffffffffffffffd6(%rbp),%dl
    579d:	8b 75 c4             	mov    0xffffffffffffffc4(%rbp),%esi
    57a0:	4c 89 ef             	mov    %r13,%rdi
    57a3:	41 b6 14             	mov    $0x14,%r14b
    57a6:	83 ca c0             	or     $0xffffffffffffffc0,%edx
    57a9:	83 c6 27             	add    $0x27,%esi
    57ac:	88 55 d6             	mov    %dl,0xffffffffffffffd6(%rbp)
    57af:	0f b6 d2             	movzbl %dl,%edx
    57b2:	e8 c6 f6 ff ff       	callq  4e7d <e1000_verify_write_ich8_byte>
    57b7:	85 c0                	test   %eax,%eax
    57b9:	0f 95 c3             	setne  %bl
    57bc:	e9 19 ff ff ff       	jmpq   56da <e1000_commit_shadow_ram+0x18b>
    57c1:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
    57c4:	0f b6 55 d6          	movzbl 0xffffffffffffffd6(%rbp),%edx
    57c8:	4c 89 ef             	mov    %r13,%rdi
    57cb:	42 8d 74 70 01       	lea    0x1(%rax,%r14,2),%esi
    57d0:	e8 a8 f6 ff ff       	callq  4e7d <e1000_verify_write_ich8_byte>
    57d5:	85 c0                	test   %eax,%eax
    57d7:	89 c2                	mov    %eax,%edx
    57d9:	0f 95 c3             	setne  %bl
    57dc:	41 ff c6             	inc    %r14d
    57df:	41 81 fe ff 07 00 00 	cmp    $0x7ff,%r14d
    57e6:	0f 86 ee fe ff ff    	jbe    56da <e1000_commit_shadow_ram+0x18b>
    57ec:	84 db                	test   %bl,%bl
    57ee:	75 6a                	jne    585a <e1000_commit_shadow_ram+0x30b>
    57f0:	8b 5d c4             	mov    0xffffffffffffffc4(%rbp),%ebx
    57f3:	48 8d 55 d6          	lea    0xffffffffffffffd6(%rbp),%rdx
    57f7:	4c 89 ef             	mov    %r13,%rdi
    57fa:	83 c3 27             	add    $0x27,%ebx
    57fd:	89 de                	mov    %ebx,%esi
    57ff:	e8 64 f8 ff ff       	callq  5068 <e1000_read_ich8_byte>
    5804:	8a 55 d6             	mov    0xffffffffffffffd6(%rbp),%dl
    5807:	89 de                	mov    %ebx,%esi
    5809:	4c 89 ef             	mov    %r13,%rdi
    580c:	83 e2 bf             	and    $0xffffffffffffffbf,%edx
    580f:	88 55 d6             	mov    %dl,0xffffffffffffffd6(%rbp)
    5812:	0f b6 d2             	movzbl %dl,%edx
    5815:	e8 63 f6 ff ff       	callq  4e7d <e1000_verify_write_ich8_byte>
    581a:	85 c0                	test   %eax,%eax
    581c:	89 c2                	mov    %eax,%edx
    581e:	75 10                	jne    5830 <e1000_commit_shadow_ram+0x2e1>
    5820:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
    5823:	4c 89 ef             	mov    %r13,%rdi
    5826:	83 c6 27             	add    $0x27,%esi
    5829:	e8 4f f6 ff ff       	callq  4e7d <e1000_verify_write_ich8_byte>
    582e:	89 c2                	mov    %eax,%edx
    5830:	31 c9                	xor    %ecx,%ecx
    5832:	49 8b 45 28          	mov    0x28(%r13),%rax
    5836:	48 01 c8             	add    %rcx,%rax
    5839:	c6 40 02 00          	movb   $0x0,0x2(%rax)
    583d:	49 8b 45 28          	mov    0x28(%r13),%rax
    5841:	48 01 c8             	add    %rcx,%rax
    5844:	48 83 c1 04          	add    $0x4,%rcx
    5848:	48 81 f9 00 20 00 00 	cmp    $0x2000,%rcx
    584f:	66 c7 00 ff ff       	movw   $0xffff,(%rax)
    5854:	74 04                	je     585a <e1000_commit_shadow_ram+0x30b>
    5856:	eb da                	jmp    5832 <e1000_commit_shadow_ram+0x2e3>
    5858:	31 d2                	xor    %edx,%edx
    585a:	48 83 c4 18          	add    $0x18,%rsp
    585e:	89 d0                	mov    %edx,%eax
    5860:	5b                   	pop    %rbx
    5861:	41 5c                	pop    %r12
    5863:	41 5d                	pop    %r13
    5865:	41 5e                	pop    %r14
    5867:	41 5f                	pop    %r15
    5869:	c9                   	leaveq 
    586a:	c3                   	retq   

000000000000586b <e1000_poll_eerd_eewr_done>:
    586b:	55                   	push   %rbp
    586c:	48 89 e5             	mov    %rsp,%rbp
    586f:	41 56                	push   %r14
    5871:	49 89 fe             	mov    %rdi,%r14
    5874:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5877: R_X86_64_32S	.rodata.str1.1+0x1362
    587b:	41 55                	push   %r13
    587d:	41 89 f5             	mov    %esi,%r13d
    5880:	41 54                	push   %r12
    5882:	45 31 e4             	xor    %r12d,%r12d
    5885:	53                   	push   %rbx
    5886:	e8 00 00 00 00       	callq  588b <e1000_poll_eerd_eewr_done+0x20>
			5887: R_X86_64_PC32	record_function+0xfffffffffffffffc
    588b:	45 85 ed             	test   %r13d,%r13d
    588e:	49 8b 1e             	mov    (%r14),%rbx
    5891:	75 11                	jne    58a4 <e1000_poll_eerd_eewr_done+0x39>
    5893:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5896: R_X86_64_32S	.rodata.str1.1+0xae
    589a:	e8 00 00 00 00       	callq  589f <e1000_poll_eerd_eewr_done+0x34>
			589b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    589f:	8b 43 14             	mov    0x14(%rbx),%eax
    58a2:	eb 12                	jmp    58b6 <e1000_poll_eerd_eewr_done+0x4b>
    58a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			58a7: R_X86_64_32S	.rodata.str1.1+0xae
    58ab:	e8 00 00 00 00       	callq  58b0 <e1000_poll_eerd_eewr_done+0x45>
			58ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
    58b0:	8b 83 2c 10 00 00    	mov    0x102c(%rbx),%eax
    58b6:	a8 02                	test   $0x2,%al
    58b8:	74 04                	je     58be <e1000_poll_eerd_eewr_done+0x53>
    58ba:	31 c0                	xor    %eax,%eax
    58bc:	eb 1b                	jmp    58d9 <e1000_poll_eerd_eewr_done+0x6e>
    58be:	bf e3 53 00 00       	mov    $0x53e3,%edi
    58c3:	41 ff c4             	inc    %r12d
    58c6:	e8 91 f0 ff ff       	callq  495c <__const_udelay>
    58cb:	41 81 fc a0 86 01 00 	cmp    $0x186a0,%r12d
    58d2:	75 b7                	jne    588b <e1000_poll_eerd_eewr_done+0x20>
    58d4:	b8 01 00 00 00       	mov    $0x1,%eax
    58d9:	5b                   	pop    %rbx
    58da:	41 5c                	pop    %r12
    58dc:	41 5d                	pop    %r13
    58de:	41 5e                	pop    %r14
    58e0:	c9                   	leaveq 
    58e1:	c3                   	retq   

00000000000058e2 <e1000_swfw_sync_acquire>:
    58e2:	55                   	push   %rbp
    58e3:	48 89 e5             	mov    %rsp,%rbp
    58e6:	41 57                	push   %r15
    58e8:	41 56                	push   %r14
    58ea:	41 55                	push   %r13
    58ec:	41 54                	push   %r12
    58ee:	49 89 fc             	mov    %rdi,%r12
    58f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			58f4: R_X86_64_32S	.rodata.str1.1+0x137c
    58f8:	53                   	push   %rbx
    58f9:	89 f3                	mov    %esi,%ebx
    58fb:	44 0f b7 eb          	movzwl %bx,%r13d
    58ff:	48 83 ec 08          	sub    $0x8,%rsp
    5903:	45 89 ef             	mov    %r13d,%r15d
    5906:	e8 00 00 00 00       	callq  590b <e1000_swfw_sync_acquire+0x29>
			5907: R_X86_64_PC32	record_function+0xfffffffffffffffc
    590b:	41 c1 e7 10          	shl    $0x10,%r15d
    590f:	41 83 7c 24 70 00    	cmpl   $0x0,0x70(%r12)
    5915:	74 0d                	je     5924 <e1000_swfw_sync_acquire+0x42>
    5917:	4c 89 e7             	mov    %r12,%rdi
    591a:	e8 9e f7 ff ff       	callq  50bd <e1000_get_software_flag>
    591f:	e9 9c 00 00 00       	jmpq   59c0 <e1000_swfw_sync_acquire+0xde>
    5924:	41 83 7c 24 6c 00    	cmpl   $0x0,0x6c(%r12)
    592a:	41 be c8 00 00 00    	mov    $0xc8,%r14d
    5930:	75 0d                	jne    593f <e1000_swfw_sync_acquire+0x5d>
    5932:	4c 89 e7             	mov    %r12,%rdi
    5935:	e8 2c f8 ff ff       	callq  5166 <e1000_get_hw_eeprom_semaphore>
    593a:	e9 81 00 00 00       	jmpq   59c0 <e1000_swfw_sync_acquire+0xde>
    593f:	4c 89 e7             	mov    %r12,%rdi
    5942:	e8 1f f8 ff ff       	callq  5166 <e1000_get_hw_eeprom_semaphore>
    5947:	85 c0                	test   %eax,%eax
    5949:	75 39                	jne    5984 <e1000_swfw_sync_acquire+0xa2>
    594b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			594e: R_X86_64_32S	.rodata.str1.1+0xae
    5952:	49 8b 1c 24          	mov    (%r12),%rbx
    5956:	e8 00 00 00 00       	callq  595b <e1000_swfw_sync_acquire+0x79>
			5957: R_X86_64_PC32	record_function+0xfffffffffffffffc
    595b:	8b 93 5c 5b 00 00    	mov    0x5b5c(%rbx),%edx
    5961:	44 89 f8             	mov    %r15d,%eax
    5964:	44 09 e8             	or     %r13d,%eax
    5967:	85 d0                	test   %edx,%eax
    5969:	74 2e                	je     5999 <e1000_swfw_sync_acquire+0xb7>
    596b:	4c 89 e7             	mov    %r12,%rdi
    596e:	e8 0a a8 ff ff       	callq  17d <e1000_put_hw_eeprom_semaphore>
    5973:	bf b8 ae 47 01       	mov    $0x147aeb8,%edi
    5978:	e8 df ef ff ff       	callq  495c <__const_udelay>
    597d:	41 ff ce             	dec    %r14d
    5980:	75 bd                	jne    593f <e1000_swfw_sync_acquire+0x5d>
    5982:	eb 0e                	jmp    5992 <e1000_swfw_sync_acquire+0xb0>
    5984:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5987: R_X86_64_32S	str_894730267
    598b:	31 c0                	xor    %eax,%eax
    598d:	e8 00 00 00 00       	callq  5992 <e1000_swfw_sync_acquire+0xb0>
			598e: R_X86_64_PC32	printk+0xfffffffffffffffc
    5992:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
    5997:	eb 27                	jmp    59c0 <e1000_swfw_sync_acquire+0xde>
    5999:	49 8b 1c 24          	mov    (%r12),%rbx
    599d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			59a0: R_X86_64_32S	.rodata.str1.1+0xb4
    59a4:	41 09 d5             	or     %edx,%r13d
    59a7:	e8 00 00 00 00       	callq  59ac <e1000_swfw_sync_acquire+0xca>
			59a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    59ac:	48 81 c3 5c 5b 00 00 	add    $0x5b5c,%rbx
    59b3:	44 89 2b             	mov    %r13d,(%rbx)
    59b6:	4c 89 e7             	mov    %r12,%rdi
    59b9:	e8 bf a7 ff ff       	callq  17d <e1000_put_hw_eeprom_semaphore>
    59be:	31 c0                	xor    %eax,%eax
    59c0:	41 5c                	pop    %r12
    59c2:	5b                   	pop    %rbx
    59c3:	41 5c                	pop    %r12
    59c5:	41 5d                	pop    %r13
    59c7:	41 5e                	pop    %r14
    59c9:	41 5f                	pop    %r15
    59cb:	c9                   	leaveq 
    59cc:	c3                   	retq   

00000000000059cd <e1000_acquire_eeprom>:
    59cd:	55                   	push   %rbp
    59ce:	48 89 e5             	mov    %rsp,%rbp
    59d1:	41 57                	push   %r15
    59d3:	41 56                	push   %r14
    59d5:	41 55                	push   %r13
    59d7:	49 89 fd             	mov    %rdi,%r13
    59da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			59dd: R_X86_64_32S	.rodata.str1.1+0x1394
    59e1:	4d 8d 7d 48          	lea    0x48(%r13),%r15
    59e5:	41 54                	push   %r12
    59e7:	53                   	push   %rbx
    59e8:	48 83 ec 08          	sub    $0x8,%rsp
    59ec:	e8 00 00 00 00       	callq  59f1 <e1000_acquire_eeprom+0x24>
			59ed: R_X86_64_PC32	record_function+0xfffffffffffffffc
    59f1:	be 01 00 00 00       	mov    $0x1,%esi
    59f6:	4c 89 ef             	mov    %r13,%rdi
    59f9:	e8 e4 fe ff ff       	callq  58e2 <e1000_swfw_sync_acquire>
    59fe:	85 c0                	test   %eax,%eax
    5a00:	ba f3 ff ff ff       	mov    $0xfffffff3,%edx
    5a05:	0f 85 4f 01 00 00    	jne    5b5a <e1000_acquire_eeprom+0x18d>
    5a0b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5a0e: R_X86_64_32S	.rodata.str1.1+0xae
    5a12:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5a16:	e8 00 00 00 00       	callq  5a1b <e1000_acquire_eeprom+0x4e>
			5a17: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5a1b:	44 8b 63 10          	mov    0x10(%rbx),%r12d
    5a1f:	41 8b 45 10          	mov    0x10(%r13),%eax
    5a23:	83 f8 10             	cmp    $0x10,%eax
    5a26:	0f 84 be 00 00 00    	je     5aea <e1000_acquire_eeprom+0x11d>
    5a2c:	83 f8 04             	cmp    $0x4,%eax
    5a2f:	0f 86 b5 00 00 00    	jbe    5aea <e1000_acquire_eeprom+0x11d>
    5a35:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5a39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5a3c: R_X86_64_32S	.rodata.str1.1+0xb4
    5a40:	41 83 cc 40          	or     $0x40,%r12d
    5a44:	e8 00 00 00 00       	callq  5a49 <e1000_acquire_eeprom+0x7c>
			5a45: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5a49:	48 83 c3 10          	add    $0x10,%rbx
    5a4d:	44 89 23             	mov    %r12d,(%rbx)
    5a50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5a53: R_X86_64_32S	.rodata.str1.1+0xae
    5a57:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5a5b:	e8 00 00 00 00       	callq  5a60 <e1000_acquire_eeprom+0x93>
			5a5c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5a60:	44 8b 63 10          	mov    0x10(%rbx),%r12d
    5a64:	45 31 f6             	xor    %r14d,%r14d
    5a67:	41 81 fe e7 03 00 00 	cmp    $0x3e7,%r14d
    5a6e:	77 0e                	ja     5a7e <e1000_acquire_eeprom+0xb1>
    5a70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5a73: R_X86_64_32S	str_841035208
    5a77:	31 c0                	xor    %eax,%eax
    5a79:	e8 00 00 00 00       	callq  5a7e <e1000_acquire_eeprom+0xb1>
			5a7a: R_X86_64_PC32	printk+0xfffffffffffffffc
    5a7e:	45 84 e4             	test   %r12b,%r12b
    5a81:	78 67                	js     5aea <e1000_acquire_eeprom+0x11d>
    5a83:	49 ff c6             	inc    %r14
    5a86:	49 81 fe e9 03 00 00 	cmp    $0x3e9,%r14
    5a8d:	74 20                	je     5aaf <e1000_acquire_eeprom+0xe2>
    5a8f:	bf e3 53 00 00       	mov    $0x53e3,%edi
    5a94:	e8 c3 ee ff ff       	callq  495c <__const_udelay>
    5a99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5a9c: R_X86_64_32S	.rodata.str1.1+0xae
    5aa0:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5aa4:	e8 00 00 00 00       	callq  5aa9 <e1000_acquire_eeprom+0xdc>
			5aa5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5aa9:	44 8b 63 10          	mov    0x10(%rbx),%r12d
    5aad:	eb b8                	jmp    5a67 <e1000_acquire_eeprom+0x9a>
    5aaf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5ab2: R_X86_64_32S	str_894730267
    5ab6:	31 c0                	xor    %eax,%eax
    5ab8:	41 83 e4 bf          	and    $0xffffffffffffffbf,%r12d
    5abc:	e8 00 00 00 00       	callq  5ac1 <e1000_acquire_eeprom+0xf4>
			5abd: R_X86_64_PC32	printk+0xfffffffffffffffc
    5ac1:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5ac5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5ac8: R_X86_64_32S	.rodata.str1.1+0xb4
    5acc:	e8 00 00 00 00       	callq  5ad1 <e1000_acquire_eeprom+0x104>
			5acd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5ad1:	48 83 c3 10          	add    $0x10,%rbx
    5ad5:	44 89 23             	mov    %r12d,(%rbx)
    5ad8:	be 01 00 00 00       	mov    $0x1,%esi
    5add:	4c 89 ef             	mov    %r13,%rdi
    5ae0:	e8 ab f7 ff ff       	callq  5290 <e1000_swfw_sync_release>
    5ae5:	83 ca ff             	or     $0xffffffffffffffff,%edx
    5ae8:	eb 70                	jmp    5b5a <e1000_acquire_eeprom+0x18d>
    5aea:	41 8b 07             	mov    (%r15),%eax
    5aed:	83 f8 02             	cmp    $0x2,%eax
    5af0:	75 3b                	jne    5b2d <e1000_acquire_eeprom+0x160>
    5af2:	44 89 e3             	mov    %r12d,%ebx
    5af5:	4d 8b 65 00          	mov    0x0(%r13),%r12
    5af9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5afc: R_X86_64_32S	.rodata.str1.1+0xb4
    5b00:	83 e3 fa             	and    $0xfffffffffffffffa,%ebx
    5b03:	e8 00 00 00 00       	callq  5b08 <e1000_acquire_eeprom+0x13b>
			5b04: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5b08:	49 83 c4 10          	add    $0x10,%r12
    5b0c:	41 89 1c 24          	mov    %ebx,(%r12)
    5b10:	4d 8b 65 00          	mov    0x0(%r13),%r12
    5b14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5b17: R_X86_64_32S	.rodata.str1.1+0xb4
    5b1b:	83 cb 02             	or     $0x2,%ebx
    5b1e:	e8 00 00 00 00       	callq  5b23 <e1000_acquire_eeprom+0x156>
			5b1f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5b23:	49 83 c4 10          	add    $0x10,%r12
    5b27:	41 89 1c 24          	mov    %ebx,(%r12)
    5b2b:	eb 2b                	jmp    5b58 <e1000_acquire_eeprom+0x18b>
    5b2d:	31 d2                	xor    %edx,%edx
    5b2f:	ff c8                	dec    %eax
    5b31:	75 27                	jne    5b5a <e1000_acquire_eeprom+0x18d>
    5b33:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5b37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5b3a: R_X86_64_32S	.rodata.str1.1+0xb4
    5b3e:	41 83 e4 fc          	and    $0xfffffffffffffffc,%r12d
    5b42:	e8 00 00 00 00       	callq  5b47 <e1000_acquire_eeprom+0x17a>
			5b43: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5b47:	48 83 c3 10          	add    $0x10,%rbx
    5b4b:	44 89 23             	mov    %r12d,(%rbx)
    5b4e:	bf c7 10 00 00       	mov    $0x10c7,%edi
    5b53:	e8 04 ee ff ff       	callq  495c <__const_udelay>
    5b58:	31 d2                	xor    %edx,%edx
    5b5a:	41 5d                	pop    %r13
    5b5c:	5b                   	pop    %rbx
    5b5d:	41 5c                	pop    %r12
    5b5f:	41 5d                	pop    %r13
    5b61:	41 5e                	pop    %r14
    5b63:	41 5f                	pop    %r15
    5b65:	c9                   	leaveq 
    5b66:	89 d0                	mov    %edx,%eax
    5b68:	c3                   	retq   

0000000000005b69 <e1000_write_kmrn_reg>:
    5b69:	55                   	push   %rbp
    5b6a:	48 89 e5             	mov    %rsp,%rbp
    5b6d:	41 57                	push   %r15
    5b6f:	41 89 d7             	mov    %edx,%r15d
    5b72:	41 56                	push   %r14
    5b74:	41 55                	push   %r13
    5b76:	49 89 fd             	mov    %rdi,%r13
    5b79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5b7c: R_X86_64_32S	.rodata.str1.1+0x13a9
    5b80:	41 54                	push   %r12
    5b82:	41 89 f4             	mov    %esi,%r12d
    5b85:	53                   	push   %rbx
    5b86:	48 83 ec 08          	sub    $0x8,%rsp
    5b8a:	e8 00 00 00 00       	callq  5b8f <e1000_write_kmrn_reg+0x26>
			5b8b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5b8f:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
    5b94:	75 1c                	jne    5bb2 <e1000_write_kmrn_reg+0x49>
    5b96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5b99: R_X86_64_32S	.rodata.str1.1+0xae
    5b9d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5ba1:	e8 00 00 00 00       	callq  5ba6 <e1000_write_kmrn_reg+0x3d>
			5ba2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5ba6:	8b 43 08             	mov    0x8(%rbx),%eax
    5ba9:	a8 04                	test   $0x4,%al
    5bab:	ba 04 00 00 00       	mov    $0x4,%edx
    5bb0:	75 05                	jne    5bb7 <e1000_write_kmrn_reg+0x4e>
    5bb2:	ba 02 00 00 00       	mov    $0x2,%edx
    5bb7:	44 0f b7 f2          	movzwl %dx,%r14d
    5bbb:	4c 89 ef             	mov    %r13,%rdi
    5bbe:	44 89 f6             	mov    %r14d,%esi
    5bc1:	e8 1c fd ff ff       	callq  58e2 <e1000_swfw_sync_acquire>
    5bc6:	85 c0                	test   %eax,%eax
    5bc8:	ba f3 ff ff ff       	mov    $0xfffffff3,%edx
    5bcd:	75 40                	jne    5c0f <e1000_write_kmrn_reg+0xa6>
    5bcf:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5bd3:	41 c1 e4 10          	shl    $0x10,%r12d
    5bd7:	41 0f b7 c7          	movzwl %r15w,%eax
    5bdb:	41 81 e4 00 00 1f 00 	and    $0x1f0000,%r12d
    5be2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5be5: R_X86_64_32S	.rodata.str1.1+0xb4
    5be9:	41 09 c4             	or     %eax,%r12d
    5bec:	48 83 c3 34          	add    $0x34,%rbx
    5bf0:	e8 00 00 00 00       	callq  5bf5 <e1000_write_kmrn_reg+0x8c>
			5bf1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5bf5:	44 89 23             	mov    %r12d,(%rbx)
    5bf8:	bf 8e 21 00 00       	mov    $0x218e,%edi
    5bfd:	e8 5a ed ff ff       	callq  495c <__const_udelay>
    5c02:	44 89 f6             	mov    %r14d,%esi
    5c05:	4c 89 ef             	mov    %r13,%rdi
    5c08:	e8 83 f6 ff ff       	callq  5290 <e1000_swfw_sync_release>
    5c0d:	31 d2                	xor    %edx,%edx
    5c0f:	41 5e                	pop    %r14
    5c11:	5b                   	pop    %rbx
    5c12:	41 5c                	pop    %r12
    5c14:	41 5d                	pop    %r13
    5c16:	41 5e                	pop    %r14
    5c18:	41 5f                	pop    %r15
    5c1a:	c9                   	leaveq 
    5c1b:	89 d0                	mov    %edx,%eax
    5c1d:	c3                   	retq   

0000000000005c1e <e1000_lower_mdi_clk>:
    5c1e:	55                   	push   %rbp
    5c1f:	48 89 e5             	mov    %rsp,%rbp
    5c22:	41 55                	push   %r13
    5c24:	49 89 fd             	mov    %rdi,%r13
    5c27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5c2a: R_X86_64_32S	.rodata.str1.1+0x13be
    5c2e:	41 54                	push   %r12
    5c30:	49 89 f4             	mov    %rsi,%r12
    5c33:	53                   	push   %rbx
    5c34:	48 83 ec 08          	sub    $0x8,%rsp
    5c38:	e8 00 00 00 00       	callq  5c3d <e1000_lower_mdi_clk+0x1f>
			5c39: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5c3d:	45 8b 24 24          	mov    (%r12),%r12d
    5c41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5c44: R_X86_64_32S	.rodata.str1.1+0xb4
    5c48:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5c4c:	e8 00 00 00 00       	callq  5c51 <e1000_lower_mdi_clk+0x33>
			5c4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5c51:	41 81 e4 ff ff df ff 	and    $0xffdfffff,%r12d
    5c58:	44 89 23             	mov    %r12d,(%rbx)
    5c5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5c5e: R_X86_64_32S	.rodata.str1.1+0xae
    5c62:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5c66:	e8 00 00 00 00       	callq  5c6b <e1000_lower_mdi_clk+0x4d>
			5c67: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5c6b:	8b 43 08             	mov    0x8(%rbx),%eax
    5c6e:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
    5c73:	e8 e4 ec ff ff       	callq  495c <__const_udelay>
    5c78:	58                   	pop    %rax
    5c79:	5b                   	pop    %rbx
    5c7a:	41 5c                	pop    %r12
    5c7c:	41 5d                	pop    %r13
    5c7e:	c9                   	leaveq 
    5c7f:	c3                   	retq   

0000000000005c80 <e1000_raise_mdi_clk>:
    5c80:	55                   	push   %rbp
    5c81:	48 89 e5             	mov    %rsp,%rbp
    5c84:	41 55                	push   %r13
    5c86:	49 89 fd             	mov    %rdi,%r13
    5c89:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5c8c: R_X86_64_32S	.rodata.str1.1+0x13d2
    5c90:	41 54                	push   %r12
    5c92:	49 89 f4             	mov    %rsi,%r12
    5c95:	53                   	push   %rbx
    5c96:	48 83 ec 08          	sub    $0x8,%rsp
    5c9a:	e8 00 00 00 00       	callq  5c9f <e1000_raise_mdi_clk+0x1f>
			5c9b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5c9f:	45 8b 24 24          	mov    (%r12),%r12d
    5ca3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5ca6: R_X86_64_32S	.rodata.str1.1+0xb4
    5caa:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5cae:	e8 00 00 00 00       	callq  5cb3 <e1000_raise_mdi_clk+0x33>
			5caf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5cb3:	41 81 cc 00 00 20 00 	or     $0x200000,%r12d
    5cba:	44 89 23             	mov    %r12d,(%rbx)
    5cbd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5cc0: R_X86_64_32S	.rodata.str1.1+0xae
    5cc4:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5cc8:	e8 00 00 00 00       	callq  5ccd <e1000_raise_mdi_clk+0x4d>
			5cc9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5ccd:	8b 43 08             	mov    0x8(%rbx),%eax
    5cd0:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
    5cd5:	e8 82 ec ff ff       	callq  495c <__const_udelay>
    5cda:	58                   	pop    %rax
    5cdb:	5b                   	pop    %rbx
    5cdc:	41 5c                	pop    %r12
    5cde:	41 5d                	pop    %r13
    5ce0:	c9                   	leaveq 
    5ce1:	c3                   	retq   

0000000000005ce2 <e1000_shift_out_mdi_bits>:
    5ce2:	55                   	push   %rbp
    5ce3:	48 89 e5             	mov    %rsp,%rbp
    5ce6:	41 57                	push   %r15
    5ce8:	41 89 f7             	mov    %esi,%r15d
    5ceb:	41 56                	push   %r14
    5ced:	41 be 01 00 00 00    	mov    $0x1,%r14d
    5cf3:	41 55                	push   %r13
    5cf5:	49 89 fd             	mov    %rdi,%r13
    5cf8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5cfb: R_X86_64_32S	.rodata.str1.1+0x13e6
    5cff:	41 54                	push   %r12
    5d01:	53                   	push   %rbx
    5d02:	89 d3                	mov    %edx,%ebx
    5d04:	48 83 ec 18          	sub    $0x18,%rsp
    5d08:	e8 00 00 00 00       	callq  5d0d <e1000_shift_out_mdi_bits+0x2b>
			5d09: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5d0d:	0f b7 c3             	movzwl %bx,%eax
    5d10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5d13: R_X86_64_32S	.rodata.str1.1+0xae
    5d17:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5d1b:	8d 48 ff             	lea    0xffffffffffffffff(%rax),%ecx
    5d1e:	41 d3 e6             	shl    %cl,%r14d
    5d21:	e8 00 00 00 00       	callq  5d26 <e1000_shift_out_mdi_bits+0x44>
			5d22: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5d26:	8b 03                	mov    (%rbx),%eax
    5d28:	0d 00 00 00 03       	or     $0x3000000,%eax
    5d2d:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
    5d30:	45 85 f6             	test   %r14d,%r14d
    5d33:	74 68                	je     5d9d <e1000_shift_out_mdi_bits+0xbb>
    5d35:	45 85 f7             	test   %r14d,%r15d
    5d38:	74 09                	je     5d43 <e1000_shift_out_mdi_bits+0x61>
    5d3a:	81 4d d4 00 00 10 00 	orl    $0x100000,0xffffffffffffffd4(%rbp)
    5d41:	eb 07                	jmp    5d4a <e1000_shift_out_mdi_bits+0x68>
    5d43:	81 65 d4 ff ff ef ff 	andl   $0xffefffff,0xffffffffffffffd4(%rbp)
    5d4a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5d4d: R_X86_64_32S	.rodata.str1.1+0xb4
    5d51:	4d 8b 65 00          	mov    0x0(%r13),%r12
    5d55:	8b 5d d4             	mov    0xffffffffffffffd4(%rbp),%ebx
    5d58:	e8 00 00 00 00       	callq  5d5d <e1000_shift_out_mdi_bits+0x7b>
			5d59: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5d5d:	41 89 1c 24          	mov    %ebx,(%r12)
    5d61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5d64: R_X86_64_32S	.rodata.str1.1+0xae
    5d68:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5d6c:	e8 00 00 00 00       	callq  5d71 <e1000_shift_out_mdi_bits+0x8f>
			5d6d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5d71:	8b 43 08             	mov    0x8(%rbx),%eax
    5d74:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
    5d78:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
    5d7d:	41 d1 ee             	shr    %r14d
    5d80:	e8 d7 eb ff ff       	callq  495c <__const_udelay>
    5d85:	48 89 de             	mov    %rbx,%rsi
    5d88:	4c 89 ef             	mov    %r13,%rdi
    5d8b:	e8 f0 fe ff ff       	callq  5c80 <e1000_raise_mdi_clk>
    5d90:	48 89 de             	mov    %rbx,%rsi
    5d93:	4c 89 ef             	mov    %r13,%rdi
    5d96:	e8 83 fe ff ff       	callq  5c1e <e1000_lower_mdi_clk>
    5d9b:	eb 93                	jmp    5d30 <e1000_shift_out_mdi_bits+0x4e>
    5d9d:	48 83 c4 18          	add    $0x18,%rsp
    5da1:	5b                   	pop    %rbx
    5da2:	41 5c                	pop    %r12
    5da4:	41 5d                	pop    %r13
    5da6:	41 5e                	pop    %r14
    5da8:	41 5f                	pop    %r15
    5daa:	c9                   	leaveq 
    5dab:	c3                   	retq   

0000000000005dac <e1000_write_phy_reg_ex>:
    5dac:	55                   	push   %rbp
    5dad:	48 89 e5             	mov    %rsp,%rbp
    5db0:	41 55                	push   %r13
    5db2:	49 89 fd             	mov    %rdi,%r13
    5db5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5db8: R_X86_64_32S	.rodata.str1.1+0x13ff
    5dbc:	41 54                	push   %r12
    5dbe:	41 89 d4             	mov    %edx,%r12d
    5dc1:	53                   	push   %rbx
    5dc2:	89 f3                	mov    %esi,%ebx
    5dc4:	48 83 ec 08          	sub    $0x8,%rsp
    5dc8:	e8 00 00 00 00       	callq  5dcd <e1000_write_phy_reg_ex+0x21>
			5dc9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5dcd:	83 fb 1f             	cmp    $0x1f,%ebx
    5dd0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    5dd5:	0f 87 a4 00 00 00    	ja     5e7f <e1000_write_phy_reg_ex+0xd3>
    5ddb:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
    5de0:	45 0f b7 e4          	movzwl %r12w,%r12d
    5de4:	76 6b                	jbe    5e51 <e1000_write_phy_reg_ex+0xa5>
    5de6:	c1 e3 10             	shl    $0x10,%ebx
    5de9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5dec: R_X86_64_32S	.rodata.str1.1+0xb4
    5df0:	81 cb 00 00 20 04    	or     $0x4200000,%ebx
    5df6:	41 09 dc             	or     %ebx,%r12d
    5df9:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5dfd:	e8 00 00 00 00       	callq  5e02 <e1000_write_phy_reg_ex+0x56>
			5dfe: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5e02:	48 83 c3 20          	add    $0x20,%rbx
    5e06:	44 89 23             	mov    %r12d,(%rbx)
    5e09:	45 31 e4             	xor    %r12d,%r12d
    5e0c:	bf e3 53 00 00       	mov    $0x53e3,%edi
    5e11:	e8 46 eb ff ff       	callq  495c <__const_udelay>
    5e16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5e19: R_X86_64_32S	.rodata.str1.1+0xae
    5e1d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5e21:	e8 00 00 00 00       	callq  5e26 <e1000_write_phy_reg_ex+0x7a>
			5e22: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5e26:	8b 43 20             	mov    0x20(%rbx),%eax
    5e29:	a9 00 00 00 10       	test   $0x10000000,%eax
    5e2e:	75 4d                	jne    5e7d <e1000_write_phy_reg_ex+0xd1>
    5e30:	41 ff c4             	inc    %r12d
    5e33:	41 81 fc 81 02 00 00 	cmp    $0x281,%r12d
    5e3a:	75 d0                	jne    5e0c <e1000_write_phy_reg_ex+0x60>
    5e3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5e3f: R_X86_64_32S	str_894730267
    5e43:	31 c0                	xor    %eax,%eax
    5e45:	e8 00 00 00 00       	callq  5e4a <e1000_write_phy_reg_ex+0x9e>
			5e46: R_X86_64_PC32	printk+0xfffffffffffffffc
    5e4a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5e4f:	eb 2e                	jmp    5e7f <e1000_write_phy_reg_ex+0xd3>
    5e51:	c1 e3 12             	shl    $0x12,%ebx
    5e54:	ba 20 00 00 00       	mov    $0x20,%edx
    5e59:	83 ce ff             	or     $0xffffffffffffffff,%esi
    5e5c:	81 cb 00 00 82 50    	or     $0x50820000,%ebx
    5e62:	4c 89 ef             	mov    %r13,%rdi
    5e65:	41 09 dc             	or     %ebx,%r12d
    5e68:	e8 75 fe ff ff       	callq  5ce2 <e1000_shift_out_mdi_bits>
    5e6d:	ba 20 00 00 00       	mov    $0x20,%edx
    5e72:	44 89 e6             	mov    %r12d,%esi
    5e75:	4c 89 ef             	mov    %r13,%rdi
    5e78:	e8 65 fe ff ff       	callq  5ce2 <e1000_shift_out_mdi_bits>
    5e7d:	31 c0                	xor    %eax,%eax
    5e7f:	5a                   	pop    %rdx
    5e80:	5b                   	pop    %rbx
    5e81:	41 5c                	pop    %r12
    5e83:	41 5d                	pop    %r13
    5e85:	c9                   	leaveq 
    5e86:	c3                   	retq   

0000000000005e87 <e1000_write_phy_reg>:
    5e87:	55                   	push   %rbp
    5e88:	48 89 e5             	mov    %rsp,%rbp
    5e8b:	41 57                	push   %r15
    5e8d:	41 89 d7             	mov    %edx,%r15d
    5e90:	41 56                	push   %r14
    5e92:	41 55                	push   %r13
    5e94:	41 89 f5             	mov    %esi,%r13d
    5e97:	41 54                	push   %r12
    5e99:	49 89 fc             	mov    %rdi,%r12
    5e9c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5e9f: R_X86_64_32S	.rodata.str1.1+0x1416
    5ea3:	53                   	push   %rbx
    5ea4:	48 83 ec 08          	sub    $0x8,%rsp
    5ea8:	e8 00 00 00 00       	callq  5ead <e1000_write_phy_reg+0x26>
			5ea9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5ead:	41 83 7c 24 10 11    	cmpl   $0x11,0x10(%r12)
    5eb3:	75 1c                	jne    5ed1 <e1000_write_phy_reg+0x4a>
    5eb5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5eb8: R_X86_64_32S	.rodata.str1.1+0xae
    5ebc:	49 8b 1c 24          	mov    (%r12),%rbx
    5ec0:	e8 00 00 00 00       	callq  5ec5 <e1000_write_phy_reg+0x3e>
			5ec1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5ec5:	8b 43 08             	mov    0x8(%rbx),%eax
    5ec8:	a8 04                	test   $0x4,%al
    5eca:	ba 04 00 00 00       	mov    $0x4,%edx
    5ecf:	75 05                	jne    5ed6 <e1000_write_phy_reg+0x4f>
    5ed1:	ba 02 00 00 00       	mov    $0x2,%edx
    5ed6:	44 0f b7 f2          	movzwl %dx,%r14d
    5eda:	4c 89 e7             	mov    %r12,%rdi
    5edd:	44 89 f6             	mov    %r14d,%esi
    5ee0:	e8 fd f9 ff ff       	callq  58e2 <e1000_swfw_sync_acquire>
    5ee5:	85 c0                	test   %eax,%eax
    5ee7:	ba f3 ff ff ff       	mov    $0xfffffff3,%edx
    5eec:	0f 85 97 00 00 00    	jne    5f89 <e1000_write_phy_reg+0x102>
    5ef2:	41 8b 44 24 14       	mov    0x14(%r12),%eax
    5ef7:	83 f8 01             	cmp    $0x1,%eax
    5efa:	74 0a                	je     5f06 <e1000_write_phy_reg+0x7f>
    5efc:	83 f8 04             	cmp    $0x4,%eax
    5eff:	74 05                	je     5f06 <e1000_write_phy_reg+0x7f>
    5f01:	83 f8 02             	cmp    $0x2,%eax
    5f04:	75 11                	jne    5f17 <e1000_write_phy_reg+0x90>
    5f06:	41 83 fd 0f          	cmp    $0xf,%r13d
    5f0a:	76 0b                	jbe    5f17 <e1000_write_phy_reg+0x90>
    5f0c:	41 0f b7 d5          	movzwl %r13w,%edx
    5f10:	be 1f 00 00 00       	mov    $0x1f,%esi
    5f15:	eb 42                	jmp    5f59 <e1000_write_phy_reg+0xd2>
    5f17:	41 83 7c 24 14 03    	cmpl   $0x3,0x14(%r12)
    5f1d:	75 48                	jne    5f67 <e1000_write_phy_reg+0xe0>
    5f1f:	44 89 e8             	mov    %r13d,%eax
    5f22:	83 e0 1f             	and    $0x1f,%eax
    5f25:	83 f8 0f             	cmp    $0xf,%eax
    5f28:	77 0a                	ja     5f34 <e1000_write_phy_reg+0xad>
    5f2a:	41 83 7c 24 10 11    	cmpl   $0x11,0x10(%r12)
    5f30:	75 35                	jne    5f67 <e1000_write_phy_reg+0xe0>
    5f32:	eb 05                	jmp    5f39 <e1000_write_phy_reg+0xb2>
    5f34:	83 f8 1d             	cmp    $0x1d,%eax
    5f37:	77 11                	ja     5f4a <e1000_write_phy_reg+0xc3>
    5f39:	44 89 ea             	mov    %r13d,%edx
    5f3c:	be 16 00 00 00       	mov    $0x16,%esi
    5f41:	66 c1 ea 05          	shr    $0x5,%dx
    5f45:	0f b7 d2             	movzwl %dx,%edx
    5f48:	eb 0f                	jmp    5f59 <e1000_write_phy_reg+0xd2>
    5f4a:	44 89 ea             	mov    %r13d,%edx
    5f4d:	be 1d 00 00 00       	mov    $0x1d,%esi
    5f52:	66 c1 ea 05          	shr    $0x5,%dx
    5f56:	0f b7 d2             	movzwl %dx,%edx
    5f59:	4c 89 e7             	mov    %r12,%rdi
    5f5c:	e8 4b fe ff ff       	callq  5dac <e1000_write_phy_reg_ex>
    5f61:	85 c0                	test   %eax,%eax
    5f63:	89 c3                	mov    %eax,%ebx
    5f65:	75 15                	jne    5f7c <e1000_write_phy_reg+0xf5>
    5f67:	41 83 e5 1f          	and    $0x1f,%r13d
    5f6b:	41 0f b7 d7          	movzwl %r15w,%edx
    5f6f:	4c 89 e7             	mov    %r12,%rdi
    5f72:	44 89 ee             	mov    %r13d,%esi
    5f75:	e8 32 fe ff ff       	callq  5dac <e1000_write_phy_reg_ex>
    5f7a:	89 c3                	mov    %eax,%ebx
    5f7c:	44 89 f6             	mov    %r14d,%esi
    5f7f:	4c 89 e7             	mov    %r12,%rdi
    5f82:	e8 09 f3 ff ff       	callq  5290 <e1000_swfw_sync_release>
    5f87:	89 da                	mov    %ebx,%edx
    5f89:	59                   	pop    %rcx
    5f8a:	5b                   	pop    %rbx
    5f8b:	41 5c                	pop    %r12
    5f8d:	41 5d                	pop    %r13
    5f8f:	41 5e                	pop    %r14
    5f91:	41 5f                	pop    %r15
    5f93:	c9                   	leaveq 
    5f94:	89 d0                	mov    %edx,%eax
    5f96:	c3                   	retq   

0000000000005f97 <e1000_led_off>:
    5f97:	55                   	push   %rbp
    5f98:	48 89 e5             	mov    %rsp,%rbp
    5f9b:	41 55                	push   %r13
    5f9d:	49 89 fd             	mov    %rdi,%r13
    5fa0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5fa3: R_X86_64_32S	.rodata.str1.1+0x142a
    5fa7:	41 54                	push   %r12
    5fa9:	53                   	push   %rbx
    5faa:	48 83 ec 08          	sub    $0x8,%rsp
    5fae:	e8 00 00 00 00       	callq  5fb3 <e1000_led_off+0x1c>
			5faf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5fb3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5fb6: R_X86_64_32S	.rodata.str1.1+0xae
    5fba:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    5fbe:	e8 00 00 00 00       	callq  5fc3 <e1000_led_off+0x2c>
			5fbf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    5fc3:	8b 1b                	mov    (%rbx),%ebx
    5fc5:	41 8b 45 10          	mov    0x10(%r13),%eax
    5fc9:	83 f8 01             	cmp    $0x1,%eax
    5fcc:	74 16                	je     5fe4 <e1000_led_off+0x4d>
    5fce:	83 f8 02             	cmp    $0x2,%eax
    5fd1:	74 11                	je     5fe4 <e1000_led_off+0x4d>
    5fd3:	83 f8 03             	cmp    $0x3,%eax
    5fd6:	74 0c                	je     5fe4 <e1000_led_off+0x4d>
    5fd8:	83 f8 04             	cmp    $0x4,%eax
    5fdb:	75 1a                	jne    5ff7 <e1000_led_off+0x60>
    5fdd:	41 83 7d 1c 01       	cmpl   $0x1,0x1c(%r13)
    5fe2:	75 1c                	jne    6000 <e1000_led_off+0x69>
    5fe4:	41 89 dc             	mov    %ebx,%r12d
    5fe7:	41 81 e4 ff ff fb ff 	and    $0xfffbffff,%r12d
    5fee:	41 81 cc 00 00 40 00 	or     $0x400000,%r12d
    5ff5:	eb 5a                	jmp    6051 <e1000_led_off+0xba>
    5ff7:	41 8b 45 1c          	mov    0x1c(%r13),%eax
    5ffb:	83 f8 01             	cmp    $0x1,%eax
    5ffe:	75 0c                	jne    600c <e1000_led_off+0x75>
    6000:	41 89 dc             	mov    %ebx,%r12d
    6003:	41 81 cc 00 00 44 00 	or     $0x440000,%r12d
    600a:	eb 45                	jmp    6051 <e1000_led_off+0xba>
    600c:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
    6011:	75 17                	jne    602a <e1000_led_off+0x93>
    6013:	ba 26 00 00 00       	mov    $0x26,%edx
    6018:	be 1b 00 00 00       	mov    $0x1b,%esi
    601d:	4c 89 ef             	mov    %r13,%rdi
    6020:	41 89 dc             	mov    %ebx,%r12d
    6023:	e8 5f fe ff ff       	callq  5e87 <e1000_write_phy_reg>
    6028:	eb 27                	jmp    6051 <e1000_led_off+0xba>
    602a:	85 c0                	test   %eax,%eax
    602c:	41 89 dc             	mov    %ebx,%r12d
    602f:	75 20                	jne    6051 <e1000_led_off+0xba>
    6031:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    6035:	45 8b a5 b4 00 00 00 	mov    0xb4(%r13),%r12d
    603c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			603f: R_X86_64_32S	.rodata.str1.1+0xb4
    6043:	e8 00 00 00 00       	callq  6048 <e1000_led_off+0xb1>
			6044: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6048:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
    604f:	eb 10                	jmp    6061 <e1000_led_off+0xca>
    6051:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6054: R_X86_64_32S	.rodata.str1.1+0xb4
    6058:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    605c:	e8 00 00 00 00       	callq  6061 <e1000_led_off+0xca>
			605d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6061:	44 89 23             	mov    %r12d,(%rbx)
    6064:	5e                   	pop    %rsi
    6065:	5b                   	pop    %rbx
    6066:	41 5c                	pop    %r12
    6068:	41 5d                	pop    %r13
    606a:	c9                   	leaveq 
    606b:	31 c0                	xor    %eax,%eax
    606d:	c3                   	retq   

000000000000606e <e1000_phy_disable_receiver>:
    606e:	55                   	push   %rbp
    606f:	48 89 e5             	mov    %rsp,%rbp
    6072:	53                   	push   %rbx
    6073:	48 89 fb             	mov    %rdi,%rbx
    6076:	48 81 c3 b8 03 00 00 	add    $0x3b8,%rbx
    607d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6080: R_X86_64_32S	.rodata.str1.1+0x1438
    6084:	48 83 ec 08          	sub    $0x8,%rsp
    6088:	e8 00 00 00 00       	callq  608d <e1000_phy_disable_receiver+0x1f>
			6089: R_X86_64_PC32	record_function+0xfffffffffffffffc
    608d:	48 89 df             	mov    %rbx,%rdi
    6090:	ba 1f 00 00 00       	mov    $0x1f,%edx
    6095:	be 1d 00 00 00       	mov    $0x1d,%esi
    609a:	e8 e8 fd ff ff       	callq  5e87 <e1000_write_phy_reg>
    609f:	48 89 df             	mov    %rbx,%rdi
    60a2:	ba fc 8f 00 00       	mov    $0x8ffc,%edx
    60a7:	be 1e 00 00 00       	mov    $0x1e,%esi
    60ac:	e8 d6 fd ff ff       	callq  5e87 <e1000_write_phy_reg>
    60b1:	48 89 df             	mov    %rbx,%rdi
    60b4:	ba 1a 00 00 00       	mov    $0x1a,%edx
    60b9:	be 1d 00 00 00       	mov    $0x1d,%esi
    60be:	e8 c4 fd ff ff       	callq  5e87 <e1000_write_phy_reg>
    60c3:	48 89 df             	mov    %rbx,%rdi
    60c6:	ba f0 8f 00 00       	mov    $0x8ff0,%edx
    60cb:	be 1e 00 00 00       	mov    $0x1e,%esi
    60d0:	e8 b2 fd ff ff       	callq  5e87 <e1000_write_phy_reg>
    60d5:	5f                   	pop    %rdi
    60d6:	5b                   	pop    %rbx
    60d7:	c9                   	leaveq 
    60d8:	c3                   	retq   

00000000000060d9 <e1000_read_phy_reg>:
    60d9:	55                   	push   %rbp
    60da:	48 89 e5             	mov    %rsp,%rbp
    60dd:	41 57                	push   %r15
    60df:	41 56                	push   %r14
    60e1:	41 89 f6             	mov    %esi,%r14d
    60e4:	41 55                	push   %r13
    60e6:	49 89 fd             	mov    %rdi,%r13
    60e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			60ec: R_X86_64_32S	.rodata.str1.1+0x1453
    60f0:	41 54                	push   %r12
    60f2:	53                   	push   %rbx
    60f3:	48 83 ec 28          	sub    $0x28,%rsp
    60f7:	48 89 55 b8          	mov    %rdx,0xffffffffffffffb8(%rbp)
    60fb:	e8 00 00 00 00       	callq  6100 <e1000_read_phy_reg+0x27>
			60fc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6100:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
    6105:	75 1c                	jne    6123 <e1000_read_phy_reg+0x4a>
    6107:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			610a: R_X86_64_32S	.rodata.str1.1+0xae
    610e:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    6112:	e8 00 00 00 00       	callq  6117 <e1000_read_phy_reg+0x3e>
			6113: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6117:	8b 43 08             	mov    0x8(%rbx),%eax
    611a:	a8 04                	test   $0x4,%al
    611c:	ba 04 00 00 00       	mov    $0x4,%edx
    6121:	75 05                	jne    6128 <e1000_read_phy_reg+0x4f>
    6123:	ba 02 00 00 00       	mov    $0x2,%edx
    6128:	0f b7 d2             	movzwl %dx,%edx
    612b:	4c 89 ef             	mov    %r13,%rdi
    612e:	89 d6                	mov    %edx,%esi
    6130:	89 55 c4             	mov    %edx,0xffffffffffffffc4(%rbp)
    6133:	e8 aa f7 ff ff       	callq  58e2 <e1000_swfw_sync_acquire>
    6138:	85 c0                	test   %eax,%eax
    613a:	ba f3 ff ff ff       	mov    $0xfffffff3,%edx
    613f:	0f 85 45 02 00 00    	jne    638a <e1000_read_phy_reg+0x2b1>
    6145:	41 8b 45 14          	mov    0x14(%r13),%eax
    6149:	83 f8 01             	cmp    $0x1,%eax
    614c:	74 0a                	je     6158 <e1000_read_phy_reg+0x7f>
    614e:	83 f8 04             	cmp    $0x4,%eax
    6151:	74 05                	je     6158 <e1000_read_phy_reg+0x7f>
    6153:	83 f8 02             	cmp    $0x2,%eax
    6156:	75 11                	jne    6169 <e1000_read_phy_reg+0x90>
    6158:	41 83 fe 0f          	cmp    $0xf,%r14d
    615c:	76 0b                	jbe    6169 <e1000_read_phy_reg+0x90>
    615e:	41 0f b7 d6          	movzwl %r14w,%edx
    6162:	be 1f 00 00 00       	mov    $0x1f,%esi
    6167:	eb 47                	jmp    61b0 <e1000_read_phy_reg+0xd7>
    6169:	41 83 7d 14 03       	cmpl   $0x3,0x14(%r13)
    616e:	75 52                	jne    61c2 <e1000_read_phy_reg+0xe9>
    6170:	45 89 f4             	mov    %r14d,%r12d
    6173:	41 83 e4 1f          	and    $0x1f,%r12d
    6177:	41 83 fc 0f          	cmp    $0xf,%r12d
    617b:	77 0d                	ja     618a <e1000_read_phy_reg+0xb1>
    617d:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
    6182:	0f 85 f1 01 00 00    	jne    6379 <e1000_read_phy_reg+0x2a0>
    6188:	eb 06                	jmp    6190 <e1000_read_phy_reg+0xb7>
    618a:	41 83 fc 1d          	cmp    $0x1d,%r12d
    618e:	77 11                	ja     61a1 <e1000_read_phy_reg+0xc8>
    6190:	44 89 f2             	mov    %r14d,%edx
    6193:	be 16 00 00 00       	mov    $0x16,%esi
    6198:	66 c1 ea 05          	shr    $0x5,%dx
    619c:	0f b7 d2             	movzwl %dx,%edx
    619f:	eb 0f                	jmp    61b0 <e1000_read_phy_reg+0xd7>
    61a1:	44 89 f2             	mov    %r14d,%edx
    61a4:	be 1d 00 00 00       	mov    $0x1d,%esi
    61a9:	66 c1 ea 05          	shr    $0x5,%dx
    61ad:	0f b7 d2             	movzwl %dx,%edx
    61b0:	4c 89 ef             	mov    %r13,%rdi
    61b3:	e8 f4 fb ff ff       	callq  5dac <e1000_write_phy_reg_ex>
    61b8:	85 c0                	test   %eax,%eax
    61ba:	89 c3                	mov    %eax,%ebx
    61bc:	0f 85 a8 01 00 00    	jne    636a <e1000_read_phy_reg+0x291>
    61c2:	45 89 f4             	mov    %r14d,%r12d
    61c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			61c8: R_X86_64_32S	.rodata.str1.1+0x1466
    61cc:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    61d1:	41 83 e4 1f          	and    $0x1f,%r12d
    61d5:	e8 00 00 00 00       	callq  61da <e1000_read_phy_reg+0x101>
			61d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    61da:	41 83 fc 1f          	cmp    $0x1f,%r12d
    61de:	0f 87 86 01 00 00    	ja     636a <e1000_read_phy_reg+0x291>
    61e4:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
    61e9:	76 7f                	jbe    626a <e1000_read_phy_reg+0x191>
    61eb:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    61ef:	41 c1 e4 10          	shl    $0x10,%r12d
    61f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			61f6: R_X86_64_32S	.rodata.str1.1+0xb4
    61fa:	41 81 cc 00 00 20 08 	or     $0x8200000,%r12d
    6201:	e8 00 00 00 00       	callq  6206 <e1000_read_phy_reg+0x12d>
			6202: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6206:	48 83 c3 20          	add    $0x20,%rbx
    620a:	44 89 23             	mov    %r12d,(%rbx)
    620d:	45 31 e4             	xor    %r12d,%r12d
    6210:	bf de 46 03 00       	mov    $0x346de,%edi
    6215:	e8 42 e7 ff ff       	callq  495c <__const_udelay>
    621a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			621d: R_X86_64_32S	.rodata.str1.1+0xae
    6221:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    6225:	e8 00 00 00 00       	callq  622a <e1000_read_phy_reg+0x151>
			6226: R_X86_64_PC32	record_function+0xfffffffffffffffc
    622a:	8b 43 20             	mov    0x20(%rbx),%eax
    622d:	a9 00 00 00 10       	test   $0x10000000,%eax
    6232:	75 0b                	jne    623f <e1000_read_phy_reg+0x166>
    6234:	41 ff c4             	inc    %r12d
    6237:	41 83 fc 40          	cmp    $0x40,%r12d
    623b:	75 d3                	jne    6210 <e1000_read_phy_reg+0x137>
    623d:	eb 07                	jmp    6246 <e1000_read_phy_reg+0x16d>
    623f:	a9 00 00 00 40       	test   $0x40000000,%eax
    6244:	74 18                	je     625e <e1000_read_phy_reg+0x185>
    6246:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6249: R_X86_64_32S	str_894730267
    624d:	31 c0                	xor    %eax,%eax
    624f:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    6254:	e8 00 00 00 00       	callq  6259 <e1000_read_phy_reg+0x180>
			6255: R_X86_64_PC32	printk+0xfffffffffffffffc
    6259:	e9 0c 01 00 00       	jmpq   636a <e1000_read_phy_reg+0x291>
    625e:	48 8b 55 b8          	mov    0xffffffffffffffb8(%rbp),%rdx
    6262:	66 89 02             	mov    %ax,(%rdx)
    6265:	e9 fe 00 00 00       	jmpq   6368 <e1000_read_phy_reg+0x28f>
    626a:	83 ce ff             	or     $0xffffffffffffffff,%esi
    626d:	4c 89 ef             	mov    %r13,%rdi
    6270:	ba 20 00 00 00       	mov    $0x20,%edx
    6275:	41 81 cc 20 18 00 00 	or     $0x1820,%r12d
    627c:	e8 61 fa ff ff       	callq  5ce2 <e1000_shift_out_mdi_bits>
    6281:	ba 0e 00 00 00       	mov    $0xe,%edx
    6286:	44 89 e6             	mov    %r12d,%esi
    6289:	4c 89 ef             	mov    %r13,%rdi
    628c:	e8 51 fa ff ff       	callq  5ce2 <e1000_shift_out_mdi_bits>
    6291:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6294: R_X86_64_32S	.rodata.str1.1+0x147c
    6298:	e8 00 00 00 00       	callq  629d <e1000_read_phy_reg+0x1c4>
			6299: R_X86_64_PC32	record_function+0xfffffffffffffffc
    629d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			62a0: R_X86_64_32S	.rodata.str1.1+0xae
    62a4:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    62a8:	e8 00 00 00 00       	callq  62ad <e1000_read_phy_reg+0x1d4>
			62a9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    62ad:	8b 1b                	mov    (%rbx),%ebx
    62af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			62b2: R_X86_64_32S	.rodata.str1.1+0xb4
    62b6:	81 e3 ff ff ef fe    	and    $0xfeefffff,%ebx
    62bc:	4d 8b 65 00          	mov    0x0(%r13),%r12
    62c0:	89 5d d4             	mov    %ebx,0xffffffffffffffd4(%rbp)
    62c3:	e8 00 00 00 00       	callq  62c8 <e1000_read_phy_reg+0x1ef>
			62c4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    62c8:	41 89 1c 24          	mov    %ebx,(%r12)
    62cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			62cf: R_X86_64_32S	.rodata.str1.1+0xae
    62d3:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    62d7:	e8 00 00 00 00       	callq  62dc <e1000_read_phy_reg+0x203>
			62d8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    62dc:	8b 43 08             	mov    0x8(%rbx),%eax
    62df:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
    62e3:	4c 89 ef             	mov    %r13,%rdi
    62e6:	45 31 e4             	xor    %r12d,%r12d
    62e9:	45 31 ff             	xor    %r15d,%r15d
    62ec:	48 89 de             	mov    %rbx,%rsi
    62ef:	e8 8c f9 ff ff       	callq  5c80 <e1000_raise_mdi_clk>
    62f4:	48 89 de             	mov    %rbx,%rsi
    62f7:	4c 89 ef             	mov    %r13,%rdi
    62fa:	e8 1f f9 ff ff       	callq  5c1e <e1000_lower_mdi_clk>
    62ff:	4c 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%r14
    6303:	4c 89 ef             	mov    %r13,%rdi
    6306:	45 01 e4             	add    %r12d,%r12d
    6309:	4c 89 f6             	mov    %r14,%rsi
    630c:	e8 6f f9 ff ff       	callq  5c80 <e1000_raise_mdi_clk>
    6311:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6314: R_X86_64_32S	.rodata.str1.1+0xae
    6318:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    631c:	e8 00 00 00 00       	callq  6321 <e1000_read_phy_reg+0x248>
			631d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6321:	8b 13                	mov    (%rbx),%edx
    6323:	44 89 e0             	mov    %r12d,%eax
    6326:	4c 89 f6             	mov    %r14,%rsi
    6329:	4c 89 ef             	mov    %r13,%rdi
    632c:	83 c8 01             	or     $0x1,%eax
    632f:	f7 c2 00 00 10 00    	test   $0x100000,%edx
    6335:	89 55 d4             	mov    %edx,0xffffffffffffffd4(%rbp)
    6338:	44 0f 45 e0          	cmovne %eax,%r12d
    633c:	41 ff c7             	inc    %r15d
    633f:	e8 da f8 ff ff       	callq  5c1e <e1000_lower_mdi_clk>
    6344:	41 80 ff 10          	cmp    $0x10,%r15b
    6348:	75 b5                	jne    62ff <e1000_read_phy_reg+0x226>
    634a:	4c 89 f6             	mov    %r14,%rsi
    634d:	4c 89 ef             	mov    %r13,%rdi
    6350:	e8 2b f9 ff ff       	callq  5c80 <e1000_raise_mdi_clk>
    6355:	4c 89 f6             	mov    %r14,%rsi
    6358:	4c 89 ef             	mov    %r13,%rdi
    635b:	e8 be f8 ff ff       	callq  5c1e <e1000_lower_mdi_clk>
    6360:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    6364:	66 44 89 20          	mov    %r12w,(%rax)
    6368:	31 db                	xor    %ebx,%ebx
    636a:	8b 75 c4             	mov    0xffffffffffffffc4(%rbp),%esi
    636d:	4c 89 ef             	mov    %r13,%rdi
    6370:	e8 1b ef ff ff       	callq  5290 <e1000_swfw_sync_release>
    6375:	89 da                	mov    %ebx,%edx
    6377:	eb 11                	jmp    638a <e1000_read_phy_reg+0x2b1>
    6379:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			637c: R_X86_64_32S	.rodata.str1.1+0x1466
    6380:	e8 00 00 00 00       	callq  6385 <e1000_read_phy_reg+0x2ac>
			6381: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6385:	e9 5a fe ff ff       	jmpq   61e4 <e1000_read_phy_reg+0x10b>
    638a:	48 83 c4 28          	add    $0x28,%rsp
    638e:	89 d0                	mov    %edx,%eax
    6390:	5b                   	pop    %rbx
    6391:	41 5c                	pop    %r12
    6393:	41 5d                	pop    %r13
    6395:	41 5e                	pop    %r14
    6397:	41 5f                	pop    %r15
    6399:	c9                   	leaveq 
    639a:	c3                   	retq   

000000000000639b <e1000_polarity_reversal_workaround>:
    639b:	55                   	push   %rbp
    639c:	48 89 e5             	mov    %rsp,%rbp
    639f:	41 56                	push   %r14
    63a1:	41 55                	push   %r13
    63a3:	49 89 fd             	mov    %rdi,%r13
    63a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			63a9: R_X86_64_32S	.rodata.str1.1+0x1494
    63ad:	41 54                	push   %r12
    63af:	53                   	push   %rbx
    63b0:	48 83 ec 10          	sub    $0x10,%rsp
    63b4:	e8 00 00 00 00       	callq  63b9 <e1000_polarity_reversal_workaround+0x1e>
			63b5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    63b9:	ba 19 00 00 00       	mov    $0x19,%edx
    63be:	be 1d 00 00 00       	mov    $0x1d,%esi
    63c3:	4c 89 ef             	mov    %r13,%rdi
    63c6:	e8 bc fa ff ff       	callq  5e87 <e1000_write_phy_reg>
    63cb:	85 c0                	test   %eax,%eax
    63cd:	89 c3                	mov    %eax,%ebx
    63cf:	0f 85 e1 01 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    63d5:	ba ff ff 00 00       	mov    $0xffff,%edx
    63da:	be 1e 00 00 00       	mov    $0x1e,%esi
    63df:	4c 89 ef             	mov    %r13,%rdi
    63e2:	e8 a0 fa ff ff       	callq  5e87 <e1000_write_phy_reg>
    63e7:	85 c0                	test   %eax,%eax
    63e9:	89 c3                	mov    %eax,%ebx
    63eb:	0f 85 c5 01 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    63f1:	31 d2                	xor    %edx,%edx
    63f3:	be 1d 00 00 00       	mov    $0x1d,%esi
    63f8:	4c 89 ef             	mov    %r13,%rdi
    63fb:	e8 87 fa ff ff       	callq  5e87 <e1000_write_phy_reg>
    6400:	85 c0                	test   %eax,%eax
    6402:	89 c3                	mov    %eax,%ebx
    6404:	0f 85 ac 01 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    640a:	41 be 14 00 00 00    	mov    $0x14,%r14d
    6410:	4c 8d 65 de          	lea    0xffffffffffffffde(%rbp),%r12
    6414:	be 01 00 00 00       	mov    $0x1,%esi
    6419:	4c 89 ef             	mov    %r13,%rdi
    641c:	4c 89 e2             	mov    %r12,%rdx
    641f:	e8 b5 fc ff ff       	callq  60d9 <e1000_read_phy_reg>
    6424:	85 c0                	test   %eax,%eax
    6426:	89 c3                	mov    %eax,%ebx
    6428:	0f 85 88 01 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    642e:	4c 89 e2             	mov    %r12,%rdx
    6431:	be 01 00 00 00       	mov    $0x1,%esi
    6436:	4c 89 ef             	mov    %r13,%rdi
    6439:	e8 9b fc ff ff       	callq  60d9 <e1000_read_phy_reg>
    643e:	85 c0                	test   %eax,%eax
    6440:	89 c3                	mov    %eax,%ebx
    6442:	0f 85 6e 01 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    6448:	0f b7 45 de          	movzwl 0xffffffffffffffde(%rbp),%eax
    644c:	a9 fb ff 00 00       	test   $0xfffb,%eax
    6451:	74 24                	je     6477 <e1000_polarity_reversal_workaround+0xdc>
    6453:	bb 63 00 00 00       	mov    $0x63,%ebx
    6458:	bf 58 89 41 00       	mov    $0x418958,%edi
    645d:	48 ff cb             	dec    %rbx
    6460:	e8 f7 e4 ff ff       	callq  495c <__const_udelay>
    6465:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    6469:	75 ed                	jne    6458 <e1000_polarity_reversal_workaround+0xbd>
    646b:	66 41 83 fe 01       	cmp    $0x1,%r14w
    6470:	74 05                	je     6477 <e1000_polarity_reversal_workaround+0xdc>
    6472:	41 ff ce             	dec    %r14d
    6475:	eb 99                	jmp    6410 <e1000_polarity_reversal_workaround+0x75>
    6477:	bb e7 03 00 00       	mov    $0x3e7,%ebx
    647c:	bf 58 89 41 00       	mov    $0x418958,%edi
    6481:	48 ff cb             	dec    %rbx
    6484:	e8 d3 e4 ff ff       	callq  495c <__const_udelay>
    6489:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    648d:	75 ed                	jne    647c <e1000_polarity_reversal_workaround+0xe1>
    648f:	ba 19 00 00 00       	mov    $0x19,%edx
    6494:	be 1d 00 00 00       	mov    $0x1d,%esi
    6499:	4c 89 ef             	mov    %r13,%rdi
    649c:	e8 e6 f9 ff ff       	callq  5e87 <e1000_write_phy_reg>
    64a1:	85 c0                	test   %eax,%eax
    64a3:	89 c3                	mov    %eax,%ebx
    64a5:	0f 85 0b 01 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    64ab:	bb 31 00 00 00       	mov    $0x31,%ebx
    64b0:	bf 58 89 41 00       	mov    $0x418958,%edi
    64b5:	48 ff cb             	dec    %rbx
    64b8:	e8 9f e4 ff ff       	callq  495c <__const_udelay>
    64bd:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    64c1:	75 ed                	jne    64b0 <e1000_polarity_reversal_workaround+0x115>
    64c3:	ba f0 ff 00 00       	mov    $0xfff0,%edx
    64c8:	be 1e 00 00 00       	mov    $0x1e,%esi
    64cd:	4c 89 ef             	mov    %r13,%rdi
    64d0:	e8 b2 f9 ff ff       	callq  5e87 <e1000_write_phy_reg>
    64d5:	85 c0                	test   %eax,%eax
    64d7:	89 c3                	mov    %eax,%ebx
    64d9:	0f 85 d7 00 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    64df:	bb 31 00 00 00       	mov    $0x31,%ebx
    64e4:	bf 58 89 41 00       	mov    $0x418958,%edi
    64e9:	48 ff cb             	dec    %rbx
    64ec:	e8 6b e4 ff ff       	callq  495c <__const_udelay>
    64f1:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    64f5:	75 ed                	jne    64e4 <e1000_polarity_reversal_workaround+0x149>
    64f7:	ba 00 ff 00 00       	mov    $0xff00,%edx
    64fc:	be 1e 00 00 00       	mov    $0x1e,%esi
    6501:	4c 89 ef             	mov    %r13,%rdi
    6504:	e8 7e f9 ff ff       	callq  5e87 <e1000_write_phy_reg>
    6509:	85 c0                	test   %eax,%eax
    650b:	89 c3                	mov    %eax,%ebx
    650d:	0f 85 a3 00 00 00    	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    6513:	bb 31 00 00 00       	mov    $0x31,%ebx
    6518:	bf 58 89 41 00       	mov    $0x418958,%edi
    651d:	48 ff cb             	dec    %rbx
    6520:	e8 37 e4 ff ff       	callq  495c <__const_udelay>
    6525:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    6529:	75 ed                	jne    6518 <e1000_polarity_reversal_workaround+0x17d>
    652b:	31 d2                	xor    %edx,%edx
    652d:	be 1e 00 00 00       	mov    $0x1e,%esi
    6532:	4c 89 ef             	mov    %r13,%rdi
    6535:	e8 4d f9 ff ff       	callq  5e87 <e1000_write_phy_reg>
    653a:	85 c0                	test   %eax,%eax
    653c:	89 c3                	mov    %eax,%ebx
    653e:	75 76                	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    6540:	31 d2                	xor    %edx,%edx
    6542:	be 1d 00 00 00       	mov    $0x1d,%esi
    6547:	4c 89 ef             	mov    %r13,%rdi
    654a:	e8 38 f9 ff ff       	callq  5e87 <e1000_write_phy_reg>
    654f:	85 c0                	test   %eax,%eax
    6551:	89 c3                	mov    %eax,%ebx
    6553:	75 61                	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    6555:	41 be 14 00 00 00    	mov    $0x14,%r14d
    655b:	4c 8d 65 de          	lea    0xffffffffffffffde(%rbp),%r12
    655f:	be 01 00 00 00       	mov    $0x1,%esi
    6564:	4c 89 ef             	mov    %r13,%rdi
    6567:	4c 89 e2             	mov    %r12,%rdx
    656a:	e8 6a fb ff ff       	callq  60d9 <e1000_read_phy_reg>
    656f:	85 c0                	test   %eax,%eax
    6571:	89 c3                	mov    %eax,%ebx
    6573:	75 41                	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    6575:	4c 89 e2             	mov    %r12,%rdx
    6578:	be 01 00 00 00       	mov    $0x1,%esi
    657d:	4c 89 ef             	mov    %r13,%rdi
    6580:	e8 54 fb ff ff       	callq  60d9 <e1000_read_phy_reg>
    6585:	85 c0                	test   %eax,%eax
    6587:	89 c3                	mov    %eax,%ebx
    6589:	75 2b                	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    658b:	f6 45 de 04          	testb  $0x4,0xffffffffffffffde(%rbp)
    658f:	75 25                	jne    65b6 <e1000_polarity_reversal_workaround+0x21b>
    6591:	41 bc 63 00 00 00    	mov    $0x63,%r12d
    6597:	bf 58 89 41 00       	mov    $0x418958,%edi
    659c:	49 ff cc             	dec    %r12
    659f:	e8 b8 e3 ff ff       	callq  495c <__const_udelay>
    65a4:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    65a8:	75 ed                	jne    6597 <e1000_polarity_reversal_workaround+0x1fc>
    65aa:	66 41 83 fe 01       	cmp    $0x1,%r14w
    65af:	74 05                	je     65b6 <e1000_polarity_reversal_workaround+0x21b>
    65b1:	41 ff ce             	dec    %r14d
    65b4:	eb a5                	jmp    655b <e1000_polarity_reversal_workaround+0x1c0>
    65b6:	41 58                	pop    %r8
    65b8:	41 59                	pop    %r9
    65ba:	89 d8                	mov    %ebx,%eax
    65bc:	5b                   	pop    %rbx
    65bd:	41 5c                	pop    %r12
    65bf:	41 5d                	pop    %r13
    65c1:	41 5e                	pop    %r14
    65c3:	c9                   	leaveq 
    65c4:	c3                   	retq   

00000000000065c5 <e1000_check_polarity>:
    65c5:	55                   	push   %rbp
    65c6:	48 89 e5             	mov    %rsp,%rbp
    65c9:	41 55                	push   %r13
    65cb:	41 54                	push   %r12
    65cd:	49 89 f4             	mov    %rsi,%r12
    65d0:	53                   	push   %rbx
    65d1:	48 89 fb             	mov    %rdi,%rbx
    65d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			65d7: R_X86_64_32S	.rodata.str1.1+0x14b7
    65db:	48 83 ec 18          	sub    $0x18,%rsp
    65df:	e8 00 00 00 00       	callq  65e4 <e1000_check_polarity+0x1f>
			65e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    65e4:	8b 43 14             	mov    0x14(%rbx),%eax
    65e7:	85 c0                	test   %eax,%eax
    65e9:	74 05                	je     65f0 <e1000_check_polarity+0x2b>
    65eb:	83 f8 03             	cmp    $0x3,%eax
    65ee:	75 21                	jne    6611 <e1000_check_polarity+0x4c>
    65f0:	48 8d 55 e6          	lea    0xffffffffffffffe6(%rbp),%rdx
    65f4:	be 11 00 00 00       	mov    $0x11,%esi
    65f9:	48 89 df             	mov    %rbx,%rdi
    65fc:	e8 d8 fa ff ff       	callq  60d9 <e1000_read_phy_reg>
    6601:	85 c0                	test   %eax,%eax
    6603:	89 c2                	mov    %eax,%edx
    6605:	0f 85 92 00 00 00    	jne    669d <e1000_check_polarity+0xd8>
    660b:	f6 45 e6 02          	testb  $0x2,0xffffffffffffffe6(%rbp)
    660f:	eb 5c                	jmp    666d <e1000_check_polarity+0xa8>
    6611:	83 f8 01             	cmp    $0x1,%eax
    6614:	74 0a                	je     6620 <e1000_check_polarity+0x5b>
    6616:	83 f8 04             	cmp    $0x4,%eax
    6619:	74 05                	je     6620 <e1000_check_polarity+0x5b>
    661b:	83 f8 02             	cmp    $0x2,%eax
    661e:	75 52                	jne    6672 <e1000_check_polarity+0xad>
    6620:	4c 8d 6d e6          	lea    0xffffffffffffffe6(%rbp),%r13
    6624:	be 11 00 00 00       	mov    $0x11,%esi
    6629:	48 89 df             	mov    %rbx,%rdi
    662c:	4c 89 ea             	mov    %r13,%rdx
    662f:	e8 a5 fa ff ff       	callq  60d9 <e1000_read_phy_reg>
    6634:	85 c0                	test   %eax,%eax
    6636:	89 c2                	mov    %eax,%edx
    6638:	75 63                	jne    669d <e1000_check_polarity+0xd8>
    663a:	0f b7 4d e6          	movzwl 0xffffffffffffffe6(%rbp),%ecx
    663e:	89 c8                	mov    %ecx,%eax
    6640:	25 00 c0 00 00       	and    $0xc000,%eax
    6645:	3d 00 c0 00 00       	cmp    $0xc000,%eax
    664a:	75 1e                	jne    666a <e1000_check_polarity+0xa5>
    664c:	4c 89 ea             	mov    %r13,%rdx
    664f:	be b4 00 00 00       	mov    $0xb4,%esi
    6654:	48 89 df             	mov    %rbx,%rdi
    6657:	e8 7d fa ff ff       	callq  60d9 <e1000_read_phy_reg>
    665c:	85 c0                	test   %eax,%eax
    665e:	89 c2                	mov    %eax,%edx
    6660:	75 3b                	jne    669d <e1000_check_polarity+0xd8>
    6662:	0f b7 45 e6          	movzwl 0xffffffffffffffe6(%rbp),%eax
    6666:	a8 78                	test   $0x78,%al
    6668:	eb 03                	jmp    666d <e1000_check_polarity+0xa8>
    666a:	80 e1 02             	and    $0x2,%cl
    666d:	0f 95 c0             	setne  %al
    6670:	eb 24                	jmp    6696 <e1000_check_polarity+0xd1>
    6672:	31 d2                	xor    %edx,%edx
    6674:	83 f8 05             	cmp    $0x5,%eax
    6677:	75 24                	jne    669d <e1000_check_polarity+0xd8>
    6679:	48 8d 55 e6          	lea    0xffffffffffffffe6(%rbp),%rdx
    667d:	be 10 00 00 00       	mov    $0x10,%esi
    6682:	48 89 df             	mov    %rbx,%rdi
    6685:	e8 4f fa ff ff       	callq  60d9 <e1000_read_phy_reg>
    668a:	85 c0                	test   %eax,%eax
    668c:	89 c2                	mov    %eax,%edx
    668e:	75 0d                	jne    669d <e1000_check_polarity+0xd8>
    6690:	8a 45 e7             	mov    0xffffffffffffffe7(%rbp),%al
    6693:	83 e0 01             	and    $0x1,%eax
    6696:	0f b6 c0             	movzbl %al,%eax
    6699:	41 89 04 24          	mov    %eax,(%r12)
    669d:	48 83 c4 18          	add    $0x18,%rsp
    66a1:	89 d0                	mov    %edx,%eax
    66a3:	5b                   	pop    %rbx
    66a4:	41 5c                	pop    %r12
    66a6:	41 5d                	pop    %r13
    66a8:	c9                   	leaveq 
    66a9:	c3                   	retq   

00000000000066aa <e1000_get_cable_length>:
    66aa:	55                   	push   %rbp
    66ab:	48 89 e5             	mov    %rsp,%rbp
    66ae:	41 57                	push   %r15
    66b0:	41 56                	push   %r14
    66b2:	41 55                	push   %r13
    66b4:	49 89 d5             	mov    %rdx,%r13
    66b7:	41 54                	push   %r12
    66b9:	49 89 f4             	mov    %rsi,%r12
    66bc:	53                   	push   %rbx
    66bd:	48 83 ec 38          	sub    $0x38,%rsp
    66c1:	48 89 7d a0          	mov    %rdi,0xffffffffffffffa0(%rbp)
    66c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			66c8: R_X86_64_32S	.rodata.str1.1+0x14cc
    66cc:	e8 00 00 00 00       	callq  66d1 <e1000_get_cable_length+0x27>
			66cd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    66d1:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
    66d5:	66 41 c7 45 00 00 00 	movw   $0x0,0x0(%r13)
    66dc:	66 41 c7 04 24 00 00 	movw   $0x0,(%r12)
    66e3:	8b 42 14             	mov    0x14(%rdx),%eax
    66e6:	85 c0                	test   %eax,%eax
    66e8:	0f 85 aa 00 00 00    	jne    6798 <e1000_get_cable_length+0xee>
    66ee:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    66f2:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
    66f6:	be 11 00 00 00       	mov    $0x11,%esi
    66fb:	e8 d9 f9 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6700:	85 c0                	test   %eax,%eax
    6702:	89 c6                	mov    %eax,%esi
    6704:	0f 85 e2 02 00 00    	jne    69ec <e1000_get_cable_length+0x342>
    670a:	0f b7 45 ce          	movzwl 0xffffffffffffffce(%rbp),%eax
    670e:	25 80 03 00 00       	and    $0x380,%eax
    6713:	c1 e8 07             	shr    $0x7,%eax
    6716:	66 85 c0             	test   %ax,%ax
    6719:	74 1e                	je     6739 <e1000_get_cable_length+0x8f>
    671b:	66 83 f8 01          	cmp    $0x1,%ax
    671f:	74 2b                	je     674c <e1000_get_cable_length+0xa2>
    6721:	66 83 f8 02          	cmp    $0x2,%ax
    6725:	74 38                	je     675f <e1000_get_cable_length+0xb5>
    6727:	66 83 f8 03          	cmp    $0x3,%ax
    672b:	74 45                	je     6772 <e1000_get_cable_length+0xc8>
    672d:	66 83 f8 04          	cmp    $0x4,%ax
    6731:	0f 85 b0 02 00 00    	jne    69e7 <e1000_get_cable_length+0x33d>
    6737:	eb 4c                	jmp    6785 <e1000_get_cable_length+0xdb>
    6739:	66 41 c7 04 24 00 00 	movw   $0x0,(%r12)
    6740:	66 41 c7 45 00 32 00 	movw   $0x32,0x0(%r13)
    6747:	e9 a0 02 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    674c:	66 41 c7 04 24 32 00 	movw   $0x32,(%r12)
    6753:	66 41 c7 45 00 50 00 	movw   $0x50,0x0(%r13)
    675a:	e9 8d 02 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    675f:	66 41 c7 04 24 50 00 	movw   $0x50,(%r12)
    6766:	66 41 c7 45 00 6e 00 	movw   $0x6e,0x0(%r13)
    676d:	e9 7a 02 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    6772:	66 41 c7 04 24 6e 00 	movw   $0x6e,(%r12)
    6779:	66 41 c7 45 00 8c 00 	movw   $0x8c,0x0(%r13)
    6780:	e9 67 02 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    6785:	66 41 c7 04 24 8c 00 	movw   $0x8c,(%r12)
    678c:	66 41 c7 45 00 aa 00 	movw   $0xaa,0x0(%r13)
    6793:	e9 54 02 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    6798:	83 f8 03             	cmp    $0x3,%eax
    679b:	0f 85 8a 00 00 00    	jne    682b <e1000_get_cable_length+0x181>
    67a1:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    67a5:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
    67a9:	be ba 00 00 00       	mov    $0xba,%esi
    67ae:	e8 26 f9 ff ff       	callq  60d9 <e1000_read_phy_reg>
    67b3:	85 c0                	test   %eax,%eax
    67b5:	89 c6                	mov    %eax,%esi
    67b7:	0f 85 2f 02 00 00    	jne    69ec <e1000_get_cable_length+0x342>
    67bd:	66 8b 45 ce          	mov    0xffffffffffffffce(%rbp),%ax
    67c1:	66 83 e0 07          	and    $0x7,%ax
    67c5:	74 18                	je     67df <e1000_get_cable_length+0x135>
    67c7:	66 83 f8 01          	cmp    $0x1,%ax
    67cb:	74 25                	je     67f2 <e1000_get_cable_length+0x148>
    67cd:	66 83 f8 02          	cmp    $0x2,%ax
    67d1:	74 32                	je     6805 <e1000_get_cable_length+0x15b>
    67d3:	66 83 f8 04          	cmp    $0x4,%ax
    67d7:	0f 85 0a 02 00 00    	jne    69e7 <e1000_get_cable_length+0x33d>
    67dd:	eb 39                	jmp    6818 <e1000_get_cable_length+0x16e>
    67df:	66 41 c7 04 24 00 00 	movw   $0x0,(%r12)
    67e6:	66 41 c7 45 00 3c 00 	movw   $0x3c,0x0(%r13)
    67ed:	e9 fa 01 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    67f2:	66 41 c7 04 24 3c 00 	movw   $0x3c,(%r12)
    67f9:	66 41 c7 45 00 73 00 	movw   $0x73,0x0(%r13)
    6800:	e9 e7 01 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    6805:	66 41 c7 04 24 73 00 	movw   $0x73,(%r12)
    680c:	66 41 c7 45 00 96 00 	movw   $0x96,0x0(%r13)
    6813:	e9 d4 01 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    6818:	66 41 c7 04 24 96 00 	movw   $0x96,(%r12)
    681f:	66 41 c7 45 00 b4 00 	movw   $0xb4,0x0(%r13)
    6826:	e9 c1 01 00 00       	jmpq   69ec <e1000_get_cable_length+0x342>
    682b:	83 f8 01             	cmp    $0x1,%eax
    682e:	0f 85 cb 00 00 00    	jne    68ff <e1000_get_cable_length+0x255>
    6834:	66 c7 45 c0 72 11    	movw   $0x1172,0xffffffffffffffc0(%rbp)
    683a:	66 c7 45 c2 72 12    	movw   $0x1272,0xffffffffffffffc2(%rbp)
    6840:	31 db                	xor    %ebx,%ebx
    6842:	66 c7 45 c4 72 14    	movw   $0x1472,0xffffffffffffffc4(%rbp)
    6848:	66 c7 45 c6 72 18    	movw   $0x1872,0xffffffffffffffc6(%rbp)
    684e:	41 bf 80 00 00 00    	mov    $0x80,%r15d
    6854:	45 31 f6             	xor    %r14d,%r14d
    6857:	42 0f b7 74 75 c0    	movzwl 0xffffffffffffffc0(%rbp,%r14,2),%esi
    685d:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    6861:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
    6865:	e8 6f f8 ff ff       	callq  60d9 <e1000_read_phy_reg>
    686a:	85 c0                	test   %eax,%eax
    686c:	89 c6                	mov    %eax,%esi
    686e:	0f 85 78 01 00 00    	jne    69ec <e1000_get_cable_length+0x342>
    6874:	66 8b 45 ce          	mov    0xffffffffffffffce(%rbp),%ax
    6878:	66 c1 e8 07          	shr    $0x7,%ax
    687c:	66 83 f8 7e          	cmp    $0x7e,%ax
    6880:	0f 87 61 01 00 00    	ja     69e7 <e1000_get_cable_length+0x33d>
    6886:	66 85 c0             	test   %ax,%ax
    6889:	0f 84 58 01 00 00    	je     69e7 <e1000_get_cable_length+0x33d>
    688f:	01 c3                	add    %eax,%ebx
    6891:	66 41 39 c7          	cmp    %ax,%r15w
    6895:	44 0f 47 f8          	cmova  %eax,%r15d
    6899:	49 ff c6             	inc    %r14
    689c:	49 83 fe 04          	cmp    $0x4,%r14
    68a0:	75 b5                	jne    6857 <e1000_get_cable_length+0x1ad>
    68a2:	66 81 fb c7 00       	cmp    $0xc7,%bx
    68a7:	77 14                	ja     68bd <e1000_get_cable_length+0x213>
    68a9:	66 44 29 fb          	sub    %r15w,%bx
    68ad:	b9 03 00 00 00       	mov    $0x3,%ecx
    68b2:	31 d2                	xor    %edx,%edx
    68b4:	89 d8                	mov    %ebx,%eax
    68b6:	66 f7 f1             	div    %cx
    68b9:	89 c1                	mov    %eax,%ecx
    68bb:	eb 06                	jmp    68c3 <e1000_get_cable_length+0x219>
    68bd:	89 d9                	mov    %ebx,%ecx
    68bf:	66 c1 e9 02          	shr    $0x2,%cx
    68c3:	0f b7 d1             	movzwl %cx,%edx
    68c6:	48 63 c2             	movslq %edx,%rax
    68c9:	66 8b 8c 00 00 00 00 	mov    0x0(%rax,%rax,1),%cx
    68d0:	00 
			68cd: R_X86_64_32S	.data+0x3dbe0
    68d1:	0f b7 c1             	movzwl %cx,%eax
    68d4:	83 e8 0a             	sub    $0xa,%eax
    68d7:	85 c0                	test   %eax,%eax
    68d9:	7e 0a                	jle    68e5 <e1000_get_cable_length+0x23b>
    68db:	8d 41 f6             	lea    0xfffffffffffffff6(%rcx),%eax
    68de:	66 41 89 04 24       	mov    %ax,(%r12)
    68e3:	eb 07                	jmp    68ec <e1000_get_cable_length+0x242>
    68e5:	66 41 c7 04 24 00 00 	movw   $0x0,(%r12)
    68ec:	48 63 c2             	movslq %edx,%rax
    68ef:	66 8b 84 00 00 00 00 	mov    0x0(%rax,%rax,1),%ax
    68f6:	00 
			68f3: R_X86_64_32S	.data+0x3dbe0
    68f7:	83 c0 0a             	add    $0xa,%eax
    68fa:	e9 e1 00 00 00       	jmpq   69e0 <e1000_get_cable_length+0x336>
    68ff:	83 f8 02             	cmp    $0x2,%eax
    6902:	74 0b                	je     690f <e1000_get_cable_length+0x265>
    6904:	31 f6                	xor    %esi,%esi
    6906:	83 f8 04             	cmp    $0x4,%eax
    6909:	0f 85 dd 00 00 00    	jne    69ec <e1000_get_cable_length+0x342>
    690f:	66 c7 45 b0 b1 11    	movw   $0x11b1,0xffffffffffffffb0(%rbp)
    6915:	66 c7 45 b2 b1 12    	movw   $0x12b1,0xffffffffffffffb2(%rbp)
    691b:	45 31 ff             	xor    %r15d,%r15d
    691e:	66 c7 45 b4 b1 14    	movw   $0x14b1,0xffffffffffffffb4(%rbp)
    6924:	66 c7 45 b6 b1 18    	movw   $0x18b1,0xffffffffffffffb6(%rbp)
    692a:	41 be 70 00 00 00    	mov    $0x70,%r14d
    6930:	66 c7 45 ae 00 00    	movw   $0x0,0xffffffffffffffae(%rbp)
    6936:	31 db                	xor    %ebx,%ebx
    6938:	0f b7 74 5d b0       	movzwl 0xffffffffffffffb0(%rbp,%rbx,2),%esi
    693d:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    6941:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
    6945:	e8 8f f7 ff ff       	callq  60d9 <e1000_read_phy_reg>
    694a:	85 c0                	test   %eax,%eax
    694c:	89 c6                	mov    %eax,%esi
    694e:	0f 85 98 00 00 00    	jne    69ec <e1000_get_cable_length+0x342>
    6954:	66 8b 4d ce          	mov    0xffffffffffffffce(%rbp),%cx
    6958:	66 c1 e9 09          	shr    $0x9,%cx
    695c:	66 83 f9 70          	cmp    $0x70,%cx
    6960:	0f 87 81 00 00 00    	ja     69e7 <e1000_get_cable_length+0x33d>
    6966:	66 85 c9             	test   %cx,%cx
    6969:	74 7c                	je     69e7 <e1000_get_cable_length+0x33d>
    696b:	0f b7 c1             	movzwl %cx,%eax
    696e:	66 8b 94 00 00 00 00 	mov    0x0(%rax,%rax,1),%dx
    6975:	00 
			6972: R_X86_64_32S	.data+0x3e1a0
    6976:	41 0f b7 c6          	movzwl %r14w,%eax
    697a:	66 39 94 00 00 00 00 	cmp    %dx,0x0(%rax,%rax,1)
    6981:	00 
			697e: R_X86_64_32S	.data+0x3e1a0
    6982:	41 0f b7 c7          	movzwl %r15w,%eax
    6986:	44 0f 47 f1          	cmova  %ecx,%r14d
    698a:	66 39 94 00 00 00 00 	cmp    %dx,0x0(%rax,%rax,1)
    6991:	00 
			698e: R_X86_64_32S	.data+0x3e1a0
    6992:	44 0f 42 f9          	cmovb  %ecx,%r15d
    6996:	48 ff c3             	inc    %rbx
    6999:	66 01 55 ae          	add    %dx,0xffffffffffffffae(%rbp)
    699d:	48 83 fb 04          	cmp    $0x4,%rbx
    69a1:	75 95                	jne    6938 <e1000_get_cable_length+0x28e>
    69a3:	41 0f b7 c6          	movzwl %r14w,%eax
    69a7:	41 0f b7 d7          	movzwl %r15w,%edx
    69ab:	66 8b 4d ae          	mov    0xffffffffffffffae(%rbp),%cx
    69af:	66 2b 8c 00 00 00 00 	sub    0x0(%rax,%rax,1),%cx
    69b6:	00 
			69b3: R_X86_64_32S	.data+0x3e1a0
    69b7:	66 2b 8c 12 00 00 00 	sub    0x0(%rdx,%rdx,1),%cx
    69be:	00 
			69bb: R_X86_64_32S	.data+0x3e1a0
    69bf:	66 d1 e9             	shr    %cx
    69c2:	0f b7 c1             	movzwl %cx,%eax
    69c5:	83 e8 0f             	sub    $0xf,%eax
    69c8:	85 c0                	test   %eax,%eax
    69ca:	7e 0a                	jle    69d6 <e1000_get_cable_length+0x32c>
    69cc:	8d 41 f1             	lea    0xfffffffffffffff1(%rcx),%eax
    69cf:	66 41 89 04 24       	mov    %ax,(%r12)
    69d4:	eb 07                	jmp    69dd <e1000_get_cable_length+0x333>
    69d6:	66 41 c7 04 24 00 00 	movw   $0x0,(%r12)
    69dd:	8d 41 0f             	lea    0xf(%rcx),%eax
    69e0:	66 41 89 45 00       	mov    %ax,0x0(%r13)
    69e5:	eb 05                	jmp    69ec <e1000_get_cable_length+0x342>
    69e7:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    69ec:	48 83 c4 38          	add    $0x38,%rsp
    69f0:	89 f0                	mov    %esi,%eax
    69f2:	5b                   	pop    %rbx
    69f3:	41 5c                	pop    %r12
    69f5:	41 5d                	pop    %r13
    69f7:	41 5e                	pop    %r14
    69f9:	41 5f                	pop    %r15
    69fb:	c9                   	leaveq 
    69fc:	c3                   	retq   

00000000000069fd <e1000_phy_igp_get_info>:
    69fd:	55                   	push   %rbp
    69fe:	48 89 e5             	mov    %rsp,%rbp
    6a01:	41 55                	push   %r13
    6a03:	41 54                	push   %r12
    6a05:	49 89 fc             	mov    %rdi,%r12
    6a08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6a0b: R_X86_64_32S	.rodata.str1.1+0x14e3
    6a0f:	53                   	push   %rbx
    6a10:	48 89 f3             	mov    %rsi,%rbx
    6a13:	48 83 ec 18          	sub    $0x18,%rsp
    6a17:	e8 00 00 00 00       	callq  6a1c <e1000_phy_igp_get_info+0x1f>
			6a18: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6a1c:	41 0f b6 84 24 01 01 	movzbl 0x101(%r12),%eax
    6a23:	00 00 
    6a25:	48 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%rsi
    6a29:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
    6a30:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
    6a37:	4c 89 e7             	mov    %r12,%rdi
    6a3a:	89 43 0c             	mov    %eax,0xc(%rbx)
    6a3d:	e8 83 fb ff ff       	callq  65c5 <e1000_check_polarity>
    6a42:	85 c0                	test   %eax,%eax
    6a44:	89 c6                	mov    %eax,%esi
    6a46:	0f 85 d5 00 00 00    	jne    6b21 <e1000_phy_igp_get_info+0x124>
    6a4c:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    6a4f:	4c 8d 6d e6          	lea    0xffffffffffffffe6(%rbp),%r13
    6a53:	40 b6 11             	mov    $0x11,%sil
    6a56:	4c 89 e7             	mov    %r12,%rdi
    6a59:	4c 89 ea             	mov    %r13,%rdx
    6a5c:	89 43 08             	mov    %eax,0x8(%rbx)
    6a5f:	e8 75 f6 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6a64:	85 c0                	test   %eax,%eax
    6a66:	89 c6                	mov    %eax,%esi
    6a68:	0f 85 b3 00 00 00    	jne    6b21 <e1000_phy_igp_get_info+0x124>
    6a6e:	0f b7 55 e6          	movzwl 0xffffffffffffffe6(%rbp),%edx
    6a72:	89 d0                	mov    %edx,%eax
    6a74:	81 e2 00 c0 00 00    	and    $0xc000,%edx
    6a7a:	25 00 08 00 00       	and    $0x800,%eax
    6a7f:	c1 f8 0b             	sar    $0xb,%eax
    6a82:	81 fa 00 c0 00 00    	cmp    $0xc000,%edx
    6a88:	89 43 14             	mov    %eax,0x14(%rbx)
    6a8b:	0f 85 90 00 00 00    	jne    6b21 <e1000_phy_igp_get_info+0x124>
    6a91:	40 b6 0a             	mov    $0xa,%sil
    6a94:	4c 89 ea             	mov    %r13,%rdx
    6a97:	4c 89 e7             	mov    %r12,%rdi
    6a9a:	e8 3a f6 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6a9f:	85 c0                	test   %eax,%eax
    6aa1:	89 c6                	mov    %eax,%esi
    6aa3:	75 7c                	jne    6b21 <e1000_phy_igp_get_info+0x124>
    6aa5:	0f b7 55 e6          	movzwl 0xffffffffffffffe6(%rbp),%edx
    6aa9:	31 c0                	xor    %eax,%eax
    6aab:	48 8d 75 e4          	lea    0xffffffffffffffe4(%rbp),%rsi
    6aaf:	4c 89 e7             	mov    %r12,%rdi
    6ab2:	f6 c6 20             	test   $0x20,%dh
    6ab5:	0f 95 c0             	setne  %al
    6ab8:	89 43 18             	mov    %eax,0x18(%rbx)
    6abb:	31 c0                	xor    %eax,%eax
    6abd:	f6 c6 10             	test   $0x10,%dh
    6ac0:	0f 95 c0             	setne  %al
    6ac3:	48 8d 55 e2          	lea    0xffffffffffffffe2(%rbp),%rdx
    6ac7:	89 43 1c             	mov    %eax,0x1c(%rbx)
    6aca:	e8 db fb ff ff       	callq  66aa <e1000_get_cable_length>
    6acf:	85 c0                	test   %eax,%eax
    6ad1:	89 c6                	mov    %eax,%esi
    6ad3:	75 4c                	jne    6b21 <e1000_phy_igp_get_info+0x124>
    6ad5:	0f b7 55 e4          	movzwl 0xffffffffffffffe4(%rbp),%edx
    6ad9:	0f b7 45 e2          	movzwl 0xffffffffffffffe2(%rbp),%eax
    6add:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    6ae0:	ba 02 00 00 00       	mov    $0x2,%edx
    6ae5:	89 d7                	mov    %edx,%edi
    6ae7:	89 c8                	mov    %ecx,%eax
    6ae9:	99                   	cltd   
    6aea:	f7 ff                	idiv   %edi
    6aec:	66 83 f8 32          	cmp    $0x32,%ax
    6af0:	77 08                	ja     6afa <e1000_phy_igp_get_info+0xfd>
    6af2:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    6af8:	eb 27                	jmp    6b21 <e1000_phy_igp_get_info+0x124>
    6afa:	66 83 f8 50          	cmp    $0x50,%ax
    6afe:	77 08                	ja     6b08 <e1000_phy_igp_get_info+0x10b>
    6b00:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    6b06:	eb 19                	jmp    6b21 <e1000_phy_igp_get_info+0x124>
    6b08:	66 83 f8 6e          	cmp    $0x6e,%ax
    6b0c:	77 08                	ja     6b16 <e1000_phy_igp_get_info+0x119>
    6b0e:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    6b14:	eb 0b                	jmp    6b21 <e1000_phy_igp_get_info+0x124>
    6b16:	66 3d 8d 00          	cmp    $0x8d,%ax
    6b1a:	19 c0                	sbb    %eax,%eax
    6b1c:	83 c0 04             	add    $0x4,%eax
    6b1f:	89 03                	mov    %eax,(%rbx)
    6b21:	48 83 c4 18          	add    $0x18,%rsp
    6b25:	89 f0                	mov    %esi,%eax
    6b27:	5b                   	pop    %rbx
    6b28:	41 5c                	pop    %r12
    6b2a:	41 5d                	pop    %r13
    6b2c:	c9                   	leaveq 
    6b2d:	c3                   	retq   

0000000000006b2e <e1000_phy_get_info>:
    6b2e:	55                   	push   %rbp
    6b2f:	48 89 e5             	mov    %rsp,%rbp
    6b32:	41 56                	push   %r14
    6b34:	41 55                	push   %r13
    6b36:	41 54                	push   %r12
    6b38:	49 89 fc             	mov    %rdi,%r12
    6b3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6b3e: R_X86_64_32S	.rodata.str1.1+0x14fa
    6b42:	53                   	push   %rbx
    6b43:	48 89 f3             	mov    %rsi,%rbx
    6b46:	48 83 ec 10          	sub    $0x10,%rsp
    6b4a:	e8 00 00 00 00       	callq  6b4f <e1000_phy_get_info+0x21>
			6b4b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6b4f:	c7 03 ff 00 00 00    	movl   $0xff,(%rbx)
    6b55:	c7 43 04 ff 00 00 00 	movl   $0xff,0x4(%rbx)
    6b5c:	c7 43 08 ff 00 00 00 	movl   $0xff,0x8(%rbx)
    6b63:	c7 43 0c ff 00 00 00 	movl   $0xff,0xc(%rbx)
    6b6a:	c7 43 10 ff 00 00 00 	movl   $0xff,0x10(%rbx)
    6b71:	c7 43 14 ff 00 00 00 	movl   $0xff,0x14(%rbx)
    6b78:	c7 43 18 ff 00 00 00 	movl   $0xff,0x18(%rbx)
    6b7f:	c7 43 1c ff 00 00 00 	movl   $0xff,0x1c(%rbx)
    6b86:	41 83 7c 24 1c 00    	cmpl   $0x0,0x1c(%r12)
    6b8c:	0f 85 1a 02 00 00    	jne    6dac <e1000_phy_get_info+0x27e>
    6b92:	4c 8d 75 de          	lea    0xffffffffffffffde(%rbp),%r14
    6b96:	be 01 00 00 00       	mov    $0x1,%esi
    6b9b:	4c 89 e7             	mov    %r12,%rdi
    6b9e:	4c 89 f2             	mov    %r14,%rdx
    6ba1:	e8 33 f5 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6ba6:	85 c0                	test   %eax,%eax
    6ba8:	41 89 c5             	mov    %eax,%r13d
    6bab:	0f 85 01 02 00 00    	jne    6db2 <e1000_phy_get_info+0x284>
    6bb1:	4c 89 f2             	mov    %r14,%rdx
    6bb4:	be 01 00 00 00       	mov    $0x1,%esi
    6bb9:	4c 89 e7             	mov    %r12,%rdi
    6bbc:	e8 18 f5 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6bc1:	85 c0                	test   %eax,%eax
    6bc3:	41 89 c5             	mov    %eax,%r13d
    6bc6:	0f 85 e6 01 00 00    	jne    6db2 <e1000_phy_get_info+0x284>
    6bcc:	f6 45 de 04          	testb  $0x4,0xffffffffffffffde(%rbp)
    6bd0:	0f 84 d6 01 00 00    	je     6dac <e1000_phy_get_info+0x27e>
    6bd6:	41 8b 44 24 14       	mov    0x14(%r12),%eax
    6bdb:	83 f8 01             	cmp    $0x1,%eax
    6bde:	74 0a                	je     6bea <e1000_phy_get_info+0xbc>
    6be0:	83 f8 04             	cmp    $0x4,%eax
    6be3:	74 05                	je     6bea <e1000_phy_get_info+0xbc>
    6be5:	83 f8 02             	cmp    $0x2,%eax
    6be8:	75 10                	jne    6bfa <e1000_phy_get_info+0xcc>
    6bea:	48 89 de             	mov    %rbx,%rsi
    6bed:	4c 89 e7             	mov    %r12,%rdi
    6bf0:	e8 08 fe ff ff       	callq  69fd <e1000_phy_igp_get_info>
    6bf5:	e9 90 01 00 00       	jmpq   6d8a <e1000_phy_get_info+0x25c>
    6bfa:	83 f8 05             	cmp    $0x5,%eax
    6bfd:	4c 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%r14
    6c01:	0f 85 ab 00 00 00    	jne    6cb2 <e1000_phy_get_info+0x184>
    6c07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6c0a: R_X86_64_32S	.rodata.str1.1+0x150d
    6c0e:	e8 00 00 00 00       	callq  6c13 <e1000_phy_get_info+0xe5>
			6c0f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6c13:	41 0f b6 84 24 01 01 	movzbl 0x101(%r12),%eax
    6c1a:	00 00 
    6c1c:	4c 89 f2             	mov    %r14,%rdx
    6c1f:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%rbx)
    6c26:	be 11 00 00 00       	mov    $0x11,%esi
    6c2b:	4c 89 e7             	mov    %r12,%rdi
    6c2e:	89 43 0c             	mov    %eax,0xc(%rbx)
    6c31:	e8 a3 f4 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6c36:	85 c0                	test   %eax,%eax
    6c38:	0f 85 4c 01 00 00    	jne    6d8a <e1000_phy_get_info+0x25c>
    6c3e:	0f b7 45 dc          	movzwl 0xffffffffffffffdc(%rbp),%eax
    6c42:	a8 10                	test   $0x10,%al
    6c44:	74 0d                	je     6c53 <e1000_phy_get_info+0x125>
    6c46:	a8 20                	test   $0x20,%al
    6c48:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%rbx)
    6c4f:	75 1e                	jne    6c6f <e1000_phy_get_info+0x141>
    6c51:	eb 25                	jmp    6c78 <e1000_phy_get_info+0x14a>
    6c53:	48 8d 75 d8          	lea    0xffffffffffffffd8(%rbp),%rsi
    6c57:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
    6c5e:	4c 89 e7             	mov    %r12,%rdi
    6c61:	e8 5f f9 ff ff       	callq  65c5 <e1000_check_polarity>
    6c66:	85 c0                	test   %eax,%eax
    6c68:	74 15                	je     6c7f <e1000_phy_get_info+0x151>
    6c6a:	e9 1b 01 00 00       	jmpq   6d8a <e1000_phy_get_info+0x25c>
    6c6f:	c7 45 d8 01 00 00 00 	movl   $0x1,0xffffffffffffffd8(%rbp)
    6c76:	eb 07                	jmp    6c7f <e1000_phy_get_info+0x151>
    6c78:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    6c7f:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
    6c82:	48 8d 55 dc          	lea    0xffffffffffffffdc(%rbp),%rdx
    6c86:	be 1c 00 00 00       	mov    $0x1c,%esi
    6c8b:	4c 89 e7             	mov    %r12,%rdi
    6c8e:	89 43 08             	mov    %eax,0x8(%rbx)
    6c91:	e8 43 f4 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6c96:	85 c0                	test   %eax,%eax
    6c98:	0f 85 ec 00 00 00    	jne    6d8a <e1000_phy_get_info+0x25c>
    6c9e:	0f b7 45 dc          	movzwl 0xffffffffffffffdc(%rbp),%eax
    6ca2:	25 c0 00 00 00       	and    $0xc0,%eax
    6ca7:	c1 f8 06             	sar    $0x6,%eax
    6caa:	89 43 14             	mov    %eax,0x14(%rbx)
    6cad:	e9 00 01 00 00       	jmpq   6db2 <e1000_phy_get_info+0x284>
    6cb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6cb5: R_X86_64_32S	.rodata.str1.1+0x1524
    6cb9:	e8 00 00 00 00       	callq  6cbe <e1000_phy_get_info+0x190>
			6cba: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6cbe:	41 0f b6 84 24 01 01 	movzbl 0x101(%r12),%eax
    6cc5:	00 00 
    6cc7:	4c 89 f2             	mov    %r14,%rdx
    6cca:	be 10 00 00 00       	mov    $0x10,%esi
    6ccf:	4c 89 e7             	mov    %r12,%rdi
    6cd2:	89 43 0c             	mov    %eax,0xc(%rbx)
    6cd5:	e8 ff f3 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6cda:	85 c0                	test   %eax,%eax
    6cdc:	0f 85 a8 00 00 00    	jne    6d8a <e1000_phy_get_info+0x25c>
    6ce2:	0f b7 55 dc          	movzwl 0xffffffffffffffdc(%rbp),%edx
    6ce6:	31 c0                	xor    %eax,%eax
    6ce8:	48 8d 75 d8          	lea    0xffffffffffffffd8(%rbp),%rsi
    6cec:	4c 89 e7             	mov    %r12,%rdi
    6cef:	f6 c2 80             	test   $0x80,%dl
    6cf2:	0f 95 c0             	setne  %al
    6cf5:	89 43 04             	mov    %eax,0x4(%rbx)
    6cf8:	31 c0                	xor    %eax,%eax
    6cfa:	f6 c2 02             	test   $0x2,%dl
    6cfd:	0f 95 c0             	setne  %al
    6d00:	89 43 10             	mov    %eax,0x10(%rbx)
    6d03:	e8 bd f8 ff ff       	callq  65c5 <e1000_check_polarity>
    6d08:	85 c0                	test   %eax,%eax
    6d0a:	75 7e                	jne    6d8a <e1000_phy_get_info+0x25c>
    6d0c:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
    6d0f:	4c 89 f2             	mov    %r14,%rdx
    6d12:	be 11 00 00 00       	mov    $0x11,%esi
    6d17:	4c 89 e7             	mov    %r12,%rdi
    6d1a:	89 43 08             	mov    %eax,0x8(%rbx)
    6d1d:	e8 b7 f3 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6d22:	85 c0                	test   %eax,%eax
    6d24:	75 64                	jne    6d8a <e1000_phy_get_info+0x25c>
    6d26:	0f b7 55 dc          	movzwl 0xffffffffffffffdc(%rbp),%edx
    6d2a:	89 d0                	mov    %edx,%eax
    6d2c:	83 e0 40             	and    $0x40,%eax
    6d2f:	c1 f8 06             	sar    $0x6,%eax
    6d32:	89 43 14             	mov    %eax,0x14(%rbx)
    6d35:	89 d0                	mov    %edx,%eax
    6d37:	25 00 c0 00 00       	and    $0xc000,%eax
    6d3c:	3d 00 80 00 00       	cmp    $0x8000,%eax
    6d41:	75 6f                	jne    6db2 <e1000_phy_get_info+0x284>
    6d43:	41 83 7c 24 14 03    	cmpl   $0x3,0x14(%r12)
    6d49:	74 0d                	je     6d58 <e1000_phy_get_info+0x22a>
    6d4b:	81 e2 80 03 00 00    	and    $0x380,%edx
    6d51:	c1 fa 07             	sar    $0x7,%edx
    6d54:	89 13                	mov    %edx,(%rbx)
    6d56:	eb 1d                	jmp    6d75 <e1000_phy_get_info+0x247>
    6d58:	4c 89 f2             	mov    %r14,%rdx
    6d5b:	be ba 00 00 00       	mov    $0xba,%esi
    6d60:	4c 89 e7             	mov    %r12,%rdi
    6d63:	e8 71 f3 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6d68:	85 c0                	test   %eax,%eax
    6d6a:	75 1e                	jne    6d8a <e1000_phy_get_info+0x25c>
    6d6c:	0f b7 45 dc          	movzwl 0xffffffffffffffdc(%rbp),%eax
    6d70:	83 e0 07             	and    $0x7,%eax
    6d73:	89 03                	mov    %eax,(%rbx)
    6d75:	48 8d 55 dc          	lea    0xffffffffffffffdc(%rbp),%rdx
    6d79:	be 0a 00 00 00       	mov    $0xa,%esi
    6d7e:	4c 89 e7             	mov    %r12,%rdi
    6d81:	e8 53 f3 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6d86:	85 c0                	test   %eax,%eax
    6d88:	74 05                	je     6d8f <e1000_phy_get_info+0x261>
    6d8a:	41 89 c5             	mov    %eax,%r13d
    6d8d:	eb 23                	jmp    6db2 <e1000_phy_get_info+0x284>
    6d8f:	0f b7 45 dc          	movzwl 0xffffffffffffffdc(%rbp),%eax
    6d93:	31 d2                	xor    %edx,%edx
    6d95:	f6 c4 20             	test   $0x20,%ah
    6d98:	0f 95 c2             	setne  %dl
    6d9b:	f6 c4 10             	test   $0x10,%ah
    6d9e:	0f 95 c0             	setne  %al
    6da1:	89 53 18             	mov    %edx,0x18(%rbx)
    6da4:	0f b6 c0             	movzbl %al,%eax
    6da7:	89 43 1c             	mov    %eax,0x1c(%rbx)
    6daa:	eb 06                	jmp    6db2 <e1000_phy_get_info+0x284>
    6dac:	41 bd fd ff ff ff    	mov    $0xfffffffd,%r13d
    6db2:	41 5a                	pop    %r10
    6db4:	41 5b                	pop    %r11
    6db6:	5b                   	pop    %rbx
    6db7:	41 5c                	pop    %r12
    6db9:	44 89 e8             	mov    %r13d,%eax
    6dbc:	41 5d                	pop    %r13
    6dbe:	41 5e                	pop    %r14
    6dc0:	c9                   	leaveq 
    6dc1:	c3                   	retq   

0000000000006dc2 <e1000_update_phy_info>:
    6dc2:	55                   	push   %rbp
    6dc3:	48 89 e5             	mov    %rsp,%rbp
    6dc6:	53                   	push   %rbx
    6dc7:	48 89 fb             	mov    %rdi,%rbx
    6dca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6dcd: R_X86_64_32S	.rodata.str1.1+0x153b
    6dd1:	48 83 ec 08          	sub    $0x8,%rsp
    6dd5:	e8 00 00 00 00       	callq  6dda <e1000_update_phy_info+0x18>
			6dd6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6dda:	48 8d b3 00 07 00 00 	lea    0x700(%rbx),%rsi
    6de1:	48 81 c3 b8 03 00 00 	add    $0x3b8,%rbx
    6de8:	48 89 df             	mov    %rbx,%rdi
    6deb:	e8 3e fd ff ff       	callq  6b2e <e1000_phy_get_info>
    6df0:	5b                   	pop    %rbx
    6df1:	5b                   	pop    %rbx
    6df2:	c9                   	leaveq 
    6df3:	c3                   	retq   

0000000000006df4 <e1000_config_mac_to_phy>:
    6df4:	55                   	push   %rbp
    6df5:	48 89 e5             	mov    %rsp,%rbp
    6df8:	41 56                	push   %r14
    6dfa:	45 31 f6             	xor    %r14d,%r14d
    6dfd:	41 55                	push   %r13
    6dff:	49 89 fd             	mov    %rdi,%r13
    6e02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6e05: R_X86_64_32S	.rodata.str1.1+0x1551
    6e09:	41 54                	push   %r12
    6e0b:	53                   	push   %rbx
    6e0c:	48 83 ec 10          	sub    $0x10,%rsp
    6e10:	e8 00 00 00 00       	callq  6e15 <e1000_config_mac_to_phy+0x21>
			6e11: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6e15:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
    6e1a:	0f 87 96 00 00 00    	ja     6eb6 <e1000_config_mac_to_phy+0xc2>
    6e20:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6e23: R_X86_64_32S	.rodata.str1.1+0xae
    6e27:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    6e2b:	e8 00 00 00 00       	callq  6e30 <e1000_config_mac_to_phy+0x3c>
			6e2c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6e30:	8b 1b                	mov    (%rbx),%ebx
    6e32:	48 8d 55 de          	lea    0xffffffffffffffde(%rbp),%rdx
    6e36:	be 11 00 00 00       	mov    $0x11,%esi
    6e3b:	4c 89 ef             	mov    %r13,%rdi
    6e3e:	e8 96 f2 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6e43:	85 c0                	test   %eax,%eax
    6e45:	41 89 c6             	mov    %eax,%r14d
    6e48:	75 6c                	jne    6eb6 <e1000_config_mac_to_phy+0xc2>
    6e4a:	89 d8                	mov    %ebx,%eax
    6e4c:	80 cc 18             	or     $0x18,%ah
    6e4f:	89 c2                	mov    %eax,%edx
    6e51:	81 e2 7f fc ff ff    	and    $0xfffffc7f,%edx
    6e57:	f6 45 df 20          	testb  $0x20,0xffffffffffffffdf(%rbp)
    6e5b:	74 09                	je     6e66 <e1000_config_mac_to_phy+0x72>
    6e5d:	41 89 d4             	mov    %edx,%r12d
    6e60:	41 83 cc 01          	or     $0x1,%r12d
    6e64:	eb 0a                	jmp    6e70 <e1000_config_mac_to_phy+0x7c>
    6e66:	41 89 c4             	mov    %eax,%r12d
    6e69:	41 81 e4 7e fc ff ff 	and    $0xfffffc7e,%r12d
    6e70:	4c 89 ef             	mov    %r13,%rdi
    6e73:	e8 50 97 ff ff       	callq  5c8 <e1000_config_collision_dist>
    6e78:	0f b7 55 de          	movzwl 0xffffffffffffffde(%rbp),%edx
    6e7c:	81 e2 00 c0 00 00    	and    $0xc000,%edx
    6e82:	81 fa 00 80 00 00    	cmp    $0x8000,%edx
    6e88:	75 09                	jne    6e93 <e1000_config_mac_to_phy+0x9f>
    6e8a:	41 81 cc 00 02 00 00 	or     $0x200,%r12d
    6e91:	eb 10                	jmp    6ea3 <e1000_config_mac_to_phy+0xaf>
    6e93:	44 89 e0             	mov    %r12d,%eax
    6e96:	80 cc 01             	or     $0x1,%ah
    6e99:	81 fa 00 40 00 00    	cmp    $0x4000,%edx
    6e9f:	44 0f 44 e0          	cmove  %eax,%r12d
    6ea3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6ea6: R_X86_64_32S	.rodata.str1.1+0xb4
    6eaa:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    6eae:	e8 00 00 00 00       	callq  6eb3 <e1000_config_mac_to_phy+0xbf>
			6eaf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6eb3:	44 89 23             	mov    %r12d,(%rbx)
    6eb6:	41 5c                	pop    %r12
    6eb8:	41 5d                	pop    %r13
    6eba:	5b                   	pop    %rbx
    6ebb:	41 5c                	pop    %r12
    6ebd:	41 5d                	pop    %r13
    6ebf:	44 89 f0             	mov    %r14d,%eax
    6ec2:	41 5e                	pop    %r14
    6ec4:	c9                   	leaveq 
    6ec5:	c3                   	retq   

0000000000006ec6 <e1000_phy_setup_autoneg>:
    6ec6:	55                   	push   %rbp
    6ec7:	48 89 e5             	mov    %rsp,%rbp
    6eca:	53                   	push   %rbx
    6ecb:	48 89 fb             	mov    %rdi,%rbx
    6ece:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6ed1: R_X86_64_32S	.rodata.str1.1+0x1569
    6ed5:	48 83 ec 18          	sub    $0x18,%rsp
    6ed9:	e8 00 00 00 00       	callq  6ede <e1000_phy_setup_autoneg+0x18>
			6eda: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6ede:	48 8d 55 f6          	lea    0xfffffffffffffff6(%rbp),%rdx
    6ee2:	be 04 00 00 00       	mov    $0x4,%esi
    6ee7:	48 89 df             	mov    %rbx,%rdi
    6eea:	e8 ea f1 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6eef:	85 c0                	test   %eax,%eax
    6ef1:	0f 85 e2 00 00 00    	jne    6fd9 <e1000_phy_setup_autoneg+0x113>
    6ef7:	83 7b 14 05          	cmpl   $0x5,0x14(%rbx)
    6efb:	74 1a                	je     6f17 <e1000_phy_setup_autoneg+0x51>
    6efd:	48 8d 55 f4          	lea    0xfffffffffffffff4(%rbp),%rdx
    6f01:	be 09 00 00 00       	mov    $0x9,%esi
    6f06:	48 89 df             	mov    %rbx,%rdi
    6f09:	e8 cb f1 ff ff       	callq  60d9 <e1000_read_phy_reg>
    6f0e:	85 c0                	test   %eax,%eax
    6f10:	74 0b                	je     6f1d <e1000_phy_setup_autoneg+0x57>
    6f12:	e9 c2 00 00 00       	jmpq   6fd9 <e1000_phy_setup_autoneg+0x113>
    6f17:	66 c7 45 f4 00 00    	movw   $0x0,0xfffffffffffffff4(%rbp)
    6f1d:	0f b7 93 d2 00 00 00 	movzwl 0xd2(%rbx),%edx
    6f24:	66 8b 45 f6          	mov    0xfffffffffffffff6(%rbp),%ax
    6f28:	8b 4d f4             	mov    0xfffffffffffffff4(%rbp),%ecx
    6f2b:	66 25 1f fe          	and    $0xfe1f,%ax
    6f2f:	80 e5 fc             	and    $0xfc,%ch
    6f32:	f6 c2 01             	test   $0x1,%dl
    6f35:	66 89 45 f6          	mov    %ax,0xfffffffffffffff6(%rbp)
    6f39:	66 89 4d f4          	mov    %cx,0xfffffffffffffff4(%rbp)
    6f3d:	74 07                	je     6f46 <e1000_phy_setup_autoneg+0x80>
    6f3f:	83 c8 20             	or     $0x20,%eax
    6f42:	66 89 45 f6          	mov    %ax,0xfffffffffffffff6(%rbp)
    6f46:	f6 c2 02             	test   $0x2,%dl
    6f49:	74 05                	je     6f50 <e1000_phy_setup_autoneg+0x8a>
    6f4b:	66 83 4d f6 40       	orw    $0x40,0xfffffffffffffff6(%rbp)
    6f50:	f6 c2 04             	test   $0x4,%dl
    6f53:	74 06                	je     6f5b <e1000_phy_setup_autoneg+0x95>
    6f55:	66 81 4d f6 80 00    	orw    $0x80,0xfffffffffffffff6(%rbp)
    6f5b:	f6 c2 08             	test   $0x8,%dl
    6f5e:	74 06                	je     6f66 <e1000_phy_setup_autoneg+0xa0>
    6f60:	66 81 4d f6 00 01    	orw    $0x100,0xfffffffffffffff6(%rbp)
    6f66:	80 e2 20             	and    $0x20,%dl
    6f69:	74 07                	je     6f72 <e1000_phy_setup_autoneg+0xac>
    6f6b:	80 cd 02             	or     $0x2,%ch
    6f6e:	66 89 4d f4          	mov    %cx,0xfffffffffffffff4(%rbp)
    6f72:	8b 53 38             	mov    0x38(%rbx),%edx
    6f75:	85 d2                	test   %edx,%edx
    6f77:	74 16                	je     6f8f <e1000_phy_setup_autoneg+0xc9>
    6f79:	83 fa 01             	cmp    $0x1,%edx
    6f7c:	74 29                	je     6fa7 <e1000_phy_setup_autoneg+0xe1>
    6f7e:	83 fa 02             	cmp    $0x2,%edx
    6f81:	74 14                	je     6f97 <e1000_phy_setup_autoneg+0xd1>
    6f83:	83 fa 03             	cmp    $0x3,%edx
    6f86:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    6f8b:	75 4c                	jne    6fd9 <e1000_phy_setup_autoneg+0x113>
    6f8d:	eb 18                	jmp    6fa7 <e1000_phy_setup_autoneg+0xe1>
    6f8f:	66 81 65 f6 ff f3    	andw   $0xf3ff,0xfffffffffffffff6(%rbp)
    6f95:	eb 16                	jmp    6fad <e1000_phy_setup_autoneg+0xe7>
    6f97:	66 8b 45 f6          	mov    0xfffffffffffffff6(%rbp),%ax
    6f9b:	80 cc 08             	or     $0x8,%ah
    6f9e:	80 e4 fb             	and    $0xfb,%ah
    6fa1:	66 89 45 f6          	mov    %ax,0xfffffffffffffff6(%rbp)
    6fa5:	eb 06                	jmp    6fad <e1000_phy_setup_autoneg+0xe7>
    6fa7:	66 81 4d f6 00 0c    	orw    $0xc00,0xfffffffffffffff6(%rbp)
    6fad:	0f b7 55 f6          	movzwl 0xfffffffffffffff6(%rbp),%edx
    6fb1:	be 04 00 00 00       	mov    $0x4,%esi
    6fb6:	48 89 df             	mov    %rbx,%rdi
    6fb9:	e8 c9 ee ff ff       	callq  5e87 <e1000_write_phy_reg>
    6fbe:	85 c0                	test   %eax,%eax
    6fc0:	75 17                	jne    6fd9 <e1000_phy_setup_autoneg+0x113>
    6fc2:	83 7b 14 05          	cmpl   $0x5,0x14(%rbx)
    6fc6:	74 11                	je     6fd9 <e1000_phy_setup_autoneg+0x113>
    6fc8:	0f b7 55 f4          	movzwl 0xfffffffffffffff4(%rbp),%edx
    6fcc:	be 09 00 00 00       	mov    $0x9,%esi
    6fd1:	48 89 df             	mov    %rbx,%rdi
    6fd4:	e8 ae ee ff ff       	callq  5e87 <e1000_write_phy_reg>
    6fd9:	48 83 c4 18          	add    $0x18,%rsp
    6fdd:	5b                   	pop    %rbx
    6fde:	c9                   	leaveq 
    6fdf:	c3                   	retq   

0000000000006fe0 <e1000_power_up_phy>:
    6fe0:	55                   	push   %rbp
    6fe1:	48 89 e5             	mov    %rsp,%rbp
    6fe4:	53                   	push   %rbx
    6fe5:	48 89 fb             	mov    %rdi,%rbx
    6fe8:	48 81 c3 b8 03 00 00 	add    $0x3b8,%rbx
    6fef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6ff2: R_X86_64_32S	.rodata.str1.1+0x1581
    6ff6:	48 83 ec 18          	sub    $0x18,%rsp
    6ffa:	e8 00 00 00 00       	callq  6fff <e1000_power_up_phy+0x1f>
			6ffb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    6fff:	66 c7 45 f6 00 00    	movw   $0x0,0xfffffffffffffff6(%rbp)
    7005:	83 7b 1c 00          	cmpl   $0x0,0x1c(%rbx)
    7009:	75 26                	jne    7031 <e1000_power_up_phy+0x51>
    700b:	48 8d 55 f6          	lea    0xfffffffffffffff6(%rbp),%rdx
    700f:	31 f6                	xor    %esi,%esi
    7011:	48 89 df             	mov    %rbx,%rdi
    7014:	e8 c0 f0 ff ff       	callq  60d9 <e1000_read_phy_reg>
    7019:	66 8b 55 f6          	mov    0xfffffffffffffff6(%rbp),%dx
    701d:	31 f6                	xor    %esi,%esi
    701f:	48 89 df             	mov    %rbx,%rdi
    7022:	80 e6 f7             	and    $0xf7,%dh
    7025:	66 89 55 f6          	mov    %dx,0xfffffffffffffff6(%rbp)
    7029:	0f b7 d2             	movzwl %dx,%edx
    702c:	e8 56 ee ff ff       	callq  5e87 <e1000_write_phy_reg>
    7031:	48 83 c4 18          	add    $0x18,%rsp
    7035:	5b                   	pop    %rbx
    7036:	c9                   	leaveq 
    7037:	c3                   	retq   

0000000000007038 <e1000_phy_reset_clk_and_crs>:
    7038:	55                   	push   %rbp
    7039:	48 89 e5             	mov    %rsp,%rbp
    703c:	41 54                	push   %r12
    703e:	4c 8d 65 ee          	lea    0xffffffffffffffee(%rbp),%r12
    7042:	53                   	push   %rbx
    7043:	48 89 fb             	mov    %rdi,%rbx
    7046:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7049: R_X86_64_32S	.rodata.str1.1+0x1594
    704d:	48 81 c3 b8 03 00 00 	add    $0x3b8,%rbx
    7054:	48 83 ec 10          	sub    $0x10,%rsp
    7058:	e8 00 00 00 00       	callq  705d <e1000_phy_reset_clk_and_crs+0x25>
			7059: R_X86_64_PC32	record_function+0xfffffffffffffffc
    705d:	4c 89 e2             	mov    %r12,%rdx
    7060:	48 89 df             	mov    %rbx,%rdi
    7063:	be 14 00 00 00       	mov    $0x14,%esi
    7068:	e8 6c f0 ff ff       	callq  60d9 <e1000_read_phy_reg>
    706d:	66 8b 55 ee          	mov    0xffffffffffffffee(%rbp),%dx
    7071:	48 89 df             	mov    %rbx,%rdi
    7074:	be 14 00 00 00       	mov    $0x14,%esi
    7079:	83 ca 70             	or     $0x70,%edx
    707c:	66 89 55 ee          	mov    %dx,0xffffffffffffffee(%rbp)
    7080:	0f b7 d2             	movzwl %dx,%edx
    7083:	e8 ff ed ff ff       	callq  5e87 <e1000_write_phy_reg>
    7088:	4c 89 e2             	mov    %r12,%rdx
    708b:	48 89 df             	mov    %rbx,%rdi
    708e:	be 10 00 00 00       	mov    $0x10,%esi
    7093:	e8 41 f0 ff ff       	callq  60d9 <e1000_read_phy_reg>
    7098:	66 8b 55 ee          	mov    0xffffffffffffffee(%rbp),%dx
    709c:	48 89 df             	mov    %rbx,%rdi
    709f:	be 10 00 00 00       	mov    $0x10,%esi
    70a4:	80 ce 08             	or     $0x8,%dh
    70a7:	66 89 55 ee          	mov    %dx,0xffffffffffffffee(%rbp)
    70ab:	0f b7 d2             	movzwl %dx,%edx
    70ae:	e8 d4 ed ff ff       	callq  5e87 <e1000_write_phy_reg>
    70b3:	58                   	pop    %rax
    70b4:	5a                   	pop    %rdx
    70b5:	5b                   	pop    %rbx
    70b6:	41 5c                	pop    %r12
    70b8:	c9                   	leaveq 
    70b9:	c3                   	retq   

00000000000070ba <e1000_leave_82542_rst>:
    70ba:	55                   	push   %rbp
    70bb:	48 89 e5             	mov    %rsp,%rbp
    70be:	41 57                	push   %r15
    70c0:	41 56                	push   %r14
    70c2:	41 55                	push   %r13
    70c4:	49 89 fd             	mov    %rdi,%r13
    70c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			70ca: R_X86_64_32S	.rodata.str1.1+0x15b0
    70ce:	4d 8d b5 b8 03 00 00 	lea    0x3b8(%r13),%r14
    70d5:	41 54                	push   %r12
    70d7:	53                   	push   %rbx
    70d8:	48 83 ec 08          	sub    $0x8,%rsp
    70dc:	e8 00 00 00 00       	callq  70e1 <e1000_leave_82542_rst+0x27>
			70dd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    70e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			70e4: R_X86_64_32S	.rodata.str1.1+0xae
    70e8:	4d 8b bd f0 02 00 00 	mov    0x2f0(%r13),%r15
    70ef:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    70f6:	e8 00 00 00 00       	callq  70fb <e1000_leave_82542_rst+0x41>
			70f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    70fb:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
    7102:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    7109:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			710c: R_X86_64_32S	.rodata.str1.1+0xb4
    7110:	41 83 e4 fe          	and    $0xfffffffffffffffe,%r12d
    7114:	e8 00 00 00 00       	callq  7119 <e1000_leave_82542_rst+0x5f>
			7115: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7119:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
    7120:	44 89 23             	mov    %r12d,(%rbx)
    7123:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7126: R_X86_64_32S	.rodata.str1.1+0xae
    712a:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
    7131:	e8 00 00 00 00       	callq  7136 <e1000_leave_82542_rst+0x7c>
			7132: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7136:	8b 43 08             	mov    0x8(%rbx),%eax
    7139:	bf b8 ae 47 01       	mov    $0x147aeb8,%edi
    713e:	e8 19 d8 ff ff       	callq  495c <__const_udelay>
    7143:	41 f6 86 d4 00 00 00 	testb  $0x10,0xd4(%r14)
    714a:	10 
    714b:	74 08                	je     7155 <e1000_leave_82542_rst+0x9b>
    714d:	4c 89 f7             	mov    %r14,%rdi
    7150:	e8 fe c9 ff ff       	callq  3b53 <e1000_pci_set_mwi>
    7155:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7158: R_X86_64_32S	.rodata.str1.1+0x15c6
    715c:	e8 00 00 00 00       	callq  7161 <e1000_leave_82542_rst+0xa7>
			715d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7161:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7164: R_X86_64_32S	.rodata.str1.1+0x15d4
    7168:	e8 00 00 00 00       	callq  716d <e1000_leave_82542_rst+0xb3>
			7169: R_X86_64_PC32	record_function+0xfffffffffffffffc
    716d:	41 f6 47 48 01       	testb  $0x1,0x48(%r15)
    7172:	74 33                	je     71a7 <e1000_leave_82542_rst+0xed>
    7174:	49 8b 9d 20 02 00 00 	mov    0x220(%r13),%rbx
    717b:	4c 89 ef             	mov    %r13,%rdi
    717e:	e8 a6 99 ff ff       	callq  b29 <e1000_configure_rx>
    7183:	31 c9                	xor    %ecx,%ecx
    7185:	8b 43 18             	mov    0x18(%rbx),%eax
    7188:	39 43 1c             	cmp    %eax,0x1c(%rbx)
    718b:	77 03                	ja     7190 <e1000_leave_82542_rst+0xd6>
    718d:	8b 4b 14             	mov    0x14(%rbx),%ecx
    7190:	8b 53 1c             	mov    0x1c(%rbx),%edx
    7193:	48 89 de             	mov    %rbx,%rsi
    7196:	4c 89 ef             	mov    %r13,%rdi
    7199:	ff ca                	dec    %edx
    719b:	2b 53 18             	sub    0x18(%rbx),%edx
    719e:	01 ca                	add    %ecx,%edx
    71a0:	41 ff 95 18 02 00 00 	callq  *0x218(%r13)
    71a7:	59                   	pop    %rcx
    71a8:	5b                   	pop    %rbx
    71a9:	41 5c                	pop    %r12
    71ab:	41 5d                	pop    %r13
    71ad:	41 5e                	pop    %r14
    71af:	41 5f                	pop    %r15
    71b1:	c9                   	leaveq 
    71b2:	c3                   	retq   

00000000000071b3 <e1000_power_down_phy>:
    71b3:	55                   	push   %rbp
    71b4:	48 89 e5             	mov    %rsp,%rbp
    71b7:	41 54                	push   %r12
    71b9:	53                   	push   %rbx
    71ba:	48 89 fb             	mov    %rdi,%rbx
    71bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			71c0: R_X86_64_32S	.rodata.str1.1+0x15e6
    71c4:	4c 8d a3 b8 03 00 00 	lea    0x3b8(%rbx),%r12
    71cb:	48 83 ec 10          	sub    $0x10,%rsp
    71cf:	e8 00 00 00 00       	callq  71d4 <e1000_power_down_phy+0x21>
			71d0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    71d4:	83 bb a4 00 00 00 00 	cmpl   $0x0,0xa4(%rbx)
    71db:	0f 85 ca 00 00 00    	jne    72ab <e1000_power_down_phy+0xf8>
    71e1:	41 8b 44 24 10       	mov    0x10(%r12),%eax
    71e6:	83 f8 04             	cmp    $0x4,%eax
    71e9:	0f 86 bc 00 00 00    	jbe    72ab <e1000_power_down_phy+0xf8>
    71ef:	41 83 7c 24 1c 00    	cmpl   $0x0,0x1c(%r12)
    71f5:	0f 85 b0 00 00 00    	jne    72ab <e1000_power_down_phy+0xf8>
    71fb:	83 f8 05             	cmp    $0x5,%eax
    71fe:	66 c7 45 ee 00 00    	movw   $0x0,0xffffffffffffffee(%rbp)
    7204:	74 43                	je     7249 <e1000_power_down_phy+0x96>
    7206:	83 f8 06             	cmp    $0x6,%eax
    7209:	74 3e                	je     7249 <e1000_power_down_phy+0x96>
    720b:	83 f8 07             	cmp    $0x7,%eax
    720e:	74 39                	je     7249 <e1000_power_down_phy+0x96>
    7210:	83 f8 08             	cmp    $0x8,%eax
    7213:	74 34                	je     7249 <e1000_power_down_phy+0x96>
    7215:	83 f8 09             	cmp    $0x9,%eax
    7218:	74 2f                	je     7249 <e1000_power_down_phy+0x96>
    721a:	83 f8 0a             	cmp    $0xa,%eax
    721d:	74 2a                	je     7249 <e1000_power_down_phy+0x96>
    721f:	83 f8 0b             	cmp    $0xb,%eax
    7222:	74 25                	je     7249 <e1000_power_down_phy+0x96>
    7224:	83 f8 0c             	cmp    $0xc,%eax
    7227:	74 20                	je     7249 <e1000_power_down_phy+0x96>
    7229:	83 f8 0d             	cmp    $0xd,%eax
    722c:	74 1b                	je     7249 <e1000_power_down_phy+0x96>
    722e:	83 f8 0e             	cmp    $0xe,%eax
    7231:	74 30                	je     7263 <e1000_power_down_phy+0xb0>
    7233:	83 f8 0f             	cmp    $0xf,%eax
    7236:	74 2b                	je     7263 <e1000_power_down_phy+0xb0>
    7238:	83 f8 10             	cmp    $0x10,%eax
    723b:	74 26                	je     7263 <e1000_power_down_phy+0xb0>
    723d:	83 f8 11             	cmp    $0x11,%eax
    7240:	74 21                	je     7263 <e1000_power_down_phy+0xb0>
    7242:	83 f8 12             	cmp    $0x12,%eax
    7245:	75 64                	jne    72ab <e1000_power_down_phy+0xf8>
    7247:	eb 1a                	jmp    7263 <e1000_power_down_phy+0xb0>
    7249:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			724c: R_X86_64_32S	.rodata.str1.1+0xae
    7250:	49 8b 1c 24          	mov    (%r12),%rbx
    7254:	e8 00 00 00 00       	callq  7259 <e1000_power_down_phy+0xa6>
			7255: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7259:	8b 83 20 58 00 00    	mov    0x5820(%rbx),%eax
    725f:	a8 01                	test   $0x1,%al
    7261:	eb 16                	jmp    7279 <e1000_power_down_phy+0xc6>
    7263:	4c 89 e7             	mov    %r12,%rdi
    7266:	e8 84 8f ff ff       	callq  1ef <e1000_check_mng_mode>
    726b:	84 c0                	test   %al,%al
    726d:	75 3c                	jne    72ab <e1000_power_down_phy+0xf8>
    726f:	4c 89 e7             	mov    %r12,%rdi
    7272:	e8 9d 8e ff ff       	callq  114 <e1000_check_phy_reset_block>
    7277:	85 c0                	test   %eax,%eax
    7279:	75 30                	jne    72ab <e1000_power_down_phy+0xf8>
    727b:	48 8d 55 ee          	lea    0xffffffffffffffee(%rbp),%rdx
    727f:	31 f6                	xor    %esi,%esi
    7281:	4c 89 e7             	mov    %r12,%rdi
    7284:	e8 50 ee ff ff       	callq  60d9 <e1000_read_phy_reg>
    7289:	66 8b 55 ee          	mov    0xffffffffffffffee(%rbp),%dx
    728d:	4c 89 e7             	mov    %r12,%rdi
    7290:	31 f6                	xor    %esi,%esi
    7292:	80 ce 08             	or     $0x8,%dh
    7295:	66 89 55 ee          	mov    %dx,0xffffffffffffffee(%rbp)
    7299:	0f b7 d2             	movzwl %dx,%edx
    729c:	e8 e6 eb ff ff       	callq  5e87 <e1000_write_phy_reg>
    72a1:	bf 58 89 41 00       	mov    $0x418958,%edi
    72a6:	e8 b1 d6 ff ff       	callq  495c <__const_udelay>
    72ab:	5e                   	pop    %rsi
    72ac:	5f                   	pop    %rdi
    72ad:	5b                   	pop    %rbx
    72ae:	41 5c                	pop    %r12
    72b0:	c9                   	leaveq 
    72b1:	c3                   	retq   

00000000000072b2 <pci_enable_wake>:
    72b2:	55                   	push   %rbp
    72b3:	48 89 e5             	mov    %rsp,%rbp
    72b6:	41 57                	push   %r15
    72b8:	41 89 f7             	mov    %esi,%r15d
    72bb:	41 56                	push   %r14
    72bd:	41 89 d6             	mov    %edx,%r14d
    72c0:	41 55                	push   %r13
    72c2:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    72c6:	41 54                	push   %r12
    72c8:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
    72cc:	53                   	push   %rbx
    72cd:	48 89 fb             	mov    %rdi,%rbx
    72d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			72d3: R_X86_64_32S	.rodata.str1.1+0x15fb
    72d7:	48 83 ec 48          	sub    $0x48,%rsp
    72db:	e8 00 00 00 00       	callq  72e0 <pci_enable_wake+0x2e>
			72dc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    72e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			72e3: R_X86_64_32S	.rodata.str1.1+0x160b
    72e7:	48 89 5d b8          	mov    %rbx,0xffffffffffffffb8(%rbp)
    72eb:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    72f2:	00 
    72f3:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    72fa:	00 
    72fb:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    7302:	44 89 7d c8          	mov    %r15d,0xffffffffffffffc8(%rbp)
    7306:	44 89 75 c4          	mov    %r14d,0xffffffffffffffc4(%rbp)
    730a:	e8 00 00 00 00       	callq  730f <pci_enable_wake+0x5d>
			730b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    730f:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
    7313:	4c 89 e9             	mov    %r13,%rcx
    7316:	4c 89 e6             	mov    %r12,%rsi
    7319:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			731c: R_X86_64_32S	.rodata.str1.1+0x15fb
    7320:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    7327:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    732e:	00 
    732f:	e8 00 00 00 00       	callq  7334 <pci_enable_wake+0x82>
			7330: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    7334:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
    7338:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
    733c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    7342:	4c 89 e6             	mov    %r12,%rsi
    7345:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7348: R_X86_64_32S	.rodata.str1.1+0x15fb
    734c:	e8 00 00 00 00       	callq  7351 <pci_enable_wake+0x9f>
			734d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    7351:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
    7355:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
    7359:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    735f:	4c 89 e6             	mov    %r12,%rsi
    7362:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7365: R_X86_64_32S	.rodata.str1.1+0x15fb
    7369:	e8 00 00 00 00       	callq  736e <pci_enable_wake+0xbc>
			736a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    736e:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    7372:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    7376:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7379: R_X86_64_32S	.rodata.str1.1+0x15fb
    737d:	48 c7 45 90 14 06 00 	movq   $0x614,0xffffffffffffff90(%rbp)
    7384:	00 
    7385:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    7389:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    738c:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    738f:	e8 00 00 00 00       	callq  7394 <pci_enable_wake+0xe2>
			7390: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    7394:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7397: R_X86_64_32S	.rodata.str1.1+0x1629
    739b:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    739f:	44 89 7d c8          	mov    %r15d,0xffffffffffffffc8(%rbp)
    73a3:	44 89 75 cc          	mov    %r14d,0xffffffffffffffcc(%rbp)
    73a7:	e8 00 00 00 00       	callq  73ac <pci_enable_wake+0xfa>
			73a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    73ac:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    73b0:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    73b6:	4c 89 e1             	mov    %r12,%rcx
    73b9:	4c 89 ea             	mov    %r13,%rdx
    73bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			73bf: R_X86_64_32S	.rodata.str1.1+0x15fb
    73c3:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    73ca:	48 89 de             	mov    %rbx,%rsi
    73cd:	e8 00 00 00 00       	callq  73d2 <pci_enable_wake+0x120>
			73ce: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    73d2:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
    73d6:	48 89 de             	mov    %rbx,%rsi
    73d9:	b9 04 00 00 00       	mov    $0x4,%ecx
    73de:	4c 89 ea             	mov    %r13,%rdx
    73e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			73e4: R_X86_64_32S	.rodata.str1.1+0x15fb
    73e8:	e8 00 00 00 00       	callq  73ed <pci_enable_wake+0x13b>
			73e9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    73ed:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
    73f1:	48 89 de             	mov    %rbx,%rsi
    73f4:	b9 04 00 00 00       	mov    $0x4,%ecx
    73f9:	4c 89 ea             	mov    %r13,%rdx
    73fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			73ff: R_X86_64_32S	.rodata.str1.1+0x15fb
    7403:	e8 00 00 00 00       	callq  7408 <pci_enable_wake+0x156>
			7404: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7408:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
    740c:	48 89 de             	mov    %rbx,%rsi
    740f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7412: R_X86_64_32S	.rodata.str1.1+0x15fb
    7416:	b9 04 00 00 00       	mov    $0x4,%ecx
    741b:	4c 89 ea             	mov    %r13,%rdx
    741e:	e8 00 00 00 00       	callq  7423 <pci_enable_wake+0x171>
			741f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7423:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    7427:	8b 5d c4             	mov    0xffffffffffffffc4(%rbp),%ebx
    742a:	48 85 ff             	test   %rdi,%rdi
    742d:	74 05                	je     7434 <pci_enable_wake+0x182>
    742f:	e8 00 00 00 00       	callq  7434 <pci_enable_wake+0x182>
			7430: R_X86_64_PC32	kfree+0xfffffffffffffffc
    7434:	48 83 c4 48          	add    $0x48,%rsp
    7438:	89 d8                	mov    %ebx,%eax
    743a:	5b                   	pop    %rbx
    743b:	41 5c                	pop    %r12
    743d:	41 5d                	pop    %r13
    743f:	41 5e                	pop    %r14
    7441:	41 5f                	pop    %r15
    7443:	c9                   	leaveq 
    7444:	c3                   	retq   

0000000000007445 <free_irq>:
    7445:	55                   	push   %rbp
    7446:	48 89 e5             	mov    %rsp,%rbp
    7449:	41 57                	push   %r15
    744b:	49 89 f7             	mov    %rsi,%r15
    744e:	41 56                	push   %r14
    7450:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    7454:	41 55                	push   %r13
    7456:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    745a:	41 54                	push   %r12
    745c:	4c 8d 65 cc          	lea    0xffffffffffffffcc(%rbp),%r12
    7460:	53                   	push   %rbx
    7461:	89 fb                	mov    %edi,%ebx
    7463:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7466: R_X86_64_32S	.rodata.str1.1+0x1647
    746a:	48 83 ec 38          	sub    $0x38,%rsp
    746e:	e8 00 00 00 00       	callq  7473 <free_irq+0x2e>
			746f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7473:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7476: R_X86_64_32S	.rodata.str1.1+0x1650
    747a:	89 5d c8             	mov    %ebx,0xffffffffffffffc8(%rbp)
    747d:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    7484:	00 
    7485:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    748c:	00 
    748d:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
    7494:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
    7498:	e8 00 00 00 00       	callq  749d <free_irq+0x58>
			7499: R_X86_64_PC32	record_function+0xfffffffffffffffc
    749d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    74a3:	4c 89 f1             	mov    %r14,%rcx
    74a6:	4c 89 e2             	mov    %r12,%rdx
    74a9:	4c 89 ee             	mov    %r13,%rsi
    74ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			74af: R_X86_64_32S	.rodata.str1.1+0x1647
    74b3:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    74ba:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    74c1:	00 
    74c2:	e8 00 00 00 00       	callq  74c7 <free_irq+0x82>
			74c3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    74c7:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
    74cb:	4c 89 e2             	mov    %r12,%rdx
    74ce:	4c 89 ee             	mov    %r13,%rsi
    74d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			74d4: R_X86_64_32S	.rodata.str1.1+0x1647
    74d8:	e8 00 00 00 00       	callq  74dd <free_irq+0x98>
			74d9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    74dd:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    74e1:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
    74e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			74e8: R_X86_64_32S	.rodata.str1.1+0x1647
    74ec:	48 c7 45 a0 bb 05 00 	movq   $0x5bb,0xffffffffffffffa0(%rbp)
    74f3:	00 
    74f4:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    74f8:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    74fb:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
    74fe:	e8 00 00 00 00       	callq  7503 <free_irq+0xbe>
			74ff: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    7503:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7506: R_X86_64_32S	.rodata.str1.1+0x1667
    750a:	89 5d cc             	mov    %ebx,0xffffffffffffffcc(%rbp)
    750d:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
    7511:	e8 00 00 00 00       	callq  7516 <free_irq+0xd1>
			7512: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7516:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
    751a:	4d 89 e0             	mov    %r12,%r8
    751d:	b9 04 00 00 00       	mov    $0x4,%ecx
    7522:	4c 89 f2             	mov    %r14,%rdx
    7525:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7528: R_X86_64_32S	.rodata.str1.1+0x1647
    752c:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    7533:	48 89 de             	mov    %rbx,%rsi
    7536:	e8 00 00 00 00       	callq  753b <free_irq+0xf6>
			7537: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    753b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			753e: R_X86_64_32S	.rodata.str1.1+0x1647
    7542:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    7548:	4c 89 e9             	mov    %r13,%rcx
    754b:	4c 89 f2             	mov    %r14,%rdx
    754e:	48 89 de             	mov    %rbx,%rsi
    7551:	e8 00 00 00 00       	callq  7556 <free_irq+0x111>
			7552: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    7556:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
    755a:	48 85 ff             	test   %rdi,%rdi
    755d:	74 05                	je     7564 <free_irq+0x11f>
    755f:	e8 00 00 00 00       	callq  7564 <free_irq+0x11f>
			7560: R_X86_64_PC32	kfree+0xfffffffffffffffc
    7564:	48 83 c4 38          	add    $0x38,%rsp
    7568:	5b                   	pop    %rbx
    7569:	41 5c                	pop    %r12
    756b:	41 5d                	pop    %r13
    756d:	41 5e                	pop    %r14
    756f:	41 5f                	pop    %r15
    7571:	c9                   	leaveq 
    7572:	c3                   	retq   

0000000000007573 <mod_timer>:
    7573:	55                   	push   %rbp
    7574:	48 89 e5             	mov    %rsp,%rbp
    7577:	41 57                	push   %r15
    7579:	49 89 f7             	mov    %rsi,%r15
    757c:	41 56                	push   %r14
    757e:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    7582:	41 55                	push   %r13
    7584:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    7588:	41 54                	push   %r12
    758a:	53                   	push   %rbx
    758b:	48 89 fb             	mov    %rdi,%rbx
    758e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7591: R_X86_64_32S	.rodata.str1.1+0x167e
    7595:	48 83 ec 48          	sub    $0x48,%rsp
    7599:	e8 00 00 00 00       	callq  759e <mod_timer+0x2b>
			759a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    759e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			75a1: R_X86_64_32S	.rodata.str1.1+0x1688
    75a5:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    75ac:	00 
    75ad:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    75b4:	00 
    75b5:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    75bc:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    75c0:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
    75c4:	e8 00 00 00 00       	callq  75c9 <mod_timer+0x56>
			75c5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    75c9:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    75cd:	4c 89 f2             	mov    %r14,%rdx
    75d0:	4c 89 ee             	mov    %r13,%rsi
    75d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			75d6: R_X86_64_32S	.rodata.str1.1+0x167e
    75da:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    75e1:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    75e8:	00 
    75e9:	e8 00 00 00 00       	callq  75ee <mod_timer+0x7b>
			75ea: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    75ee:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    75f2:	48 85 c0             	test   %rax,%rax
    75f5:	74 56                	je     764d <mod_timer+0xda>
    75f7:	48 8d 48 10          	lea    0x10(%rax),%rcx
    75fb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    7601:	4c 89 f2             	mov    %r14,%rdx
    7604:	4c 89 ee             	mov    %r13,%rsi
    7607:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			760a: R_X86_64_32S	.rodata.str1.1+0x167e
    760e:	e8 00 00 00 00       	callq  7613 <mod_timer+0xa0>
			760f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    7613:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
    7617:	4c 89 f2             	mov    %r14,%rdx
    761a:	4c 89 ee             	mov    %r13,%rsi
    761d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7620: R_X86_64_32S	.rodata.str1.1+0x167e
    7624:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    762a:	48 83 c1 20          	add    $0x20,%rcx
    762e:	e8 00 00 00 00       	callq  7633 <mod_timer+0xc0>
			762f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    7633:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
    7637:	4c 89 f2             	mov    %r14,%rdx
    763a:	4c 89 ee             	mov    %r13,%rsi
    763d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7640: R_X86_64_32S	.rodata.str1.1+0x167e
    7644:	48 83 c1 18          	add    $0x18,%rcx
    7648:	e8 00 00 00 00       	callq  764d <mod_timer+0xda>
			7649: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    764d:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
    7651:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    7657:	4c 89 f2             	mov    %r14,%rdx
    765a:	4c 89 ee             	mov    %r13,%rsi
    765d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7660: R_X86_64_32S	.rodata.str1.1+0x167e
    7664:	4c 89 e1             	mov    %r12,%rcx
    7667:	e8 00 00 00 00       	callq  766c <mod_timer+0xf9>
			7668: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    766c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    7670:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    7674:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7677: R_X86_64_32S	.rodata.str1.1+0x167e
    767b:	48 c7 45 90 d1 05 00 	movq   $0x5d1,0xffffffffffffff90(%rbp)
    7682:	00 
    7683:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    7687:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    768a:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    768d:	e8 00 00 00 00       	callq  7692 <mod_timer+0x11f>
			768e: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    7692:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7695: R_X86_64_32S	.rodata.str1.1+0x16a0
    7699:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    769d:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
    76a1:	e8 00 00 00 00       	callq  76a6 <mod_timer+0x133>
			76a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    76a6:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    76aa:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    76ae:	41 b8 30 00 00 00    	mov    $0x30,%r8d
    76b4:	4c 89 e2             	mov    %r12,%rdx
    76b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			76ba: R_X86_64_32S	.rodata.str1.1+0x167e
    76be:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    76c5:	48 89 de             	mov    %rbx,%rsi
    76c8:	e8 00 00 00 00       	callq  76cd <mod_timer+0x15a>
			76c9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    76cd:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    76d1:	48 85 c0             	test   %rax,%rax
    76d4:	74 5a                	je     7730 <mod_timer+0x1bd>
    76d6:	4c 8d 40 10          	lea    0x10(%rax),%r8
    76da:	b9 08 00 00 00       	mov    $0x8,%ecx
    76df:	4c 89 e2             	mov    %r12,%rdx
    76e2:	48 89 de             	mov    %rbx,%rsi
    76e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			76e8: R_X86_64_32S	.rodata.str1.1+0x167e
    76ec:	e8 00 00 00 00       	callq  76f1 <mod_timer+0x17e>
			76ed: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    76f1:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    76f5:	b9 08 00 00 00       	mov    $0x8,%ecx
    76fa:	4c 89 e2             	mov    %r12,%rdx
    76fd:	48 89 de             	mov    %rbx,%rsi
    7700:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7703: R_X86_64_32S	.rodata.str1.1+0x167e
    7707:	49 83 c0 20          	add    $0x20,%r8
    770b:	e8 00 00 00 00       	callq  7710 <mod_timer+0x19d>
			770c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7710:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
    7714:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    771a:	4c 89 e2             	mov    %r12,%rdx
    771d:	48 89 de             	mov    %rbx,%rsi
    7720:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7723: R_X86_64_32S	.rodata.str1.1+0x167e
    7727:	48 83 c1 18          	add    $0x18,%rcx
    772b:	e8 00 00 00 00       	callq  7730 <mod_timer+0x1bd>
			772c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    7730:	48 89 de             	mov    %rbx,%rsi
    7733:	4d 89 e8             	mov    %r13,%r8
    7736:	b9 08 00 00 00       	mov    $0x8,%ecx
    773b:	4c 89 e2             	mov    %r12,%rdx
    773e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7741: R_X86_64_32S	.rodata.str1.1+0x167e
    7745:	e8 00 00 00 00       	callq  774a <mod_timer+0x1d7>
			7746: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    774a:	48 89 de             	mov    %rbx,%rsi
    774d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7750: R_X86_64_32S	.rodata.str1.1+0x167e
    7754:	4d 89 f0             	mov    %r14,%r8
    7757:	b9 04 00 00 00       	mov    $0x4,%ecx
    775c:	4c 89 e2             	mov    %r12,%rdx
    775f:	e8 00 00 00 00       	callq  7764 <mod_timer+0x1f1>
			7760: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7764:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    7768:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
    776b:	48 85 ff             	test   %rdi,%rdi
    776e:	74 05                	je     7775 <mod_timer+0x202>
    7770:	e8 00 00 00 00       	callq  7775 <mod_timer+0x202>
			7771: R_X86_64_PC32	kfree+0xfffffffffffffffc
    7775:	48 83 c4 48          	add    $0x48,%rsp
    7779:	89 d8                	mov    %ebx,%eax
    777b:	5b                   	pop    %rbx
    777c:	41 5c                	pop    %r12
    777e:	41 5d                	pop    %r13
    7780:	41 5e                	pop    %r14
    7782:	41 5f                	pop    %r15
    7784:	c9                   	leaveq 
    7785:	c3                   	retq   

0000000000007786 <e1000_led_blink_callback>:
    7786:	55                   	push   %rbp
    7787:	48 89 e5             	mov    %rsp,%rbp
    778a:	41 56                	push   %r14
    778c:	49 89 fe             	mov    %rdi,%r14
    778f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7792: R_X86_64_32S	.rodata.str1.1+0x16b8
    7796:	41 55                	push   %r13
    7798:	4d 8d ae b8 03 00 00 	lea    0x3b8(%r14),%r13
    779f:	41 54                	push   %r12
    77a1:	53                   	push   %rbx
    77a2:	e8 00 00 00 00       	callq  77a7 <e1000_led_blink_callback+0x21>
			77a3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    77a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			77aa: R_X86_64_32S	.rodata.str1.1+0x16d1
    77ae:	e8 00 00 00 00       	callq  77b3 <e1000_led_blink_callback+0x2d>
			77af: R_X86_64_PC32	record_function+0xfffffffffffffffc
    77b3:	f0 41 0f ba be a8 01 	lock btcl $0x0,0x1a8(%r14)
    77ba:	00 00 00 
    77bd:	19 c0                	sbb    %eax,%eax
    77bf:	85 c0                	test   %eax,%eax
    77c1:	74 0d                	je     77d0 <e1000_led_blink_callback+0x4a>
    77c3:	4c 89 ef             	mov    %r13,%rdi
    77c6:	e8 cc e7 ff ff       	callq  5f97 <e1000_led_off>
    77cb:	e9 b8 00 00 00       	jmpq   7888 <e1000_led_blink_callback+0x102>
    77d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			77d3: R_X86_64_32S	.rodata.str1.1+0x16e5
    77d7:	e8 00 00 00 00       	callq  77dc <e1000_led_blink_callback+0x56>
			77d8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    77dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			77df: R_X86_64_32S	.rodata.str1.1+0xae
    77e3:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    77ea:	e8 00 00 00 00       	callq  77ef <e1000_led_blink_callback+0x69>
			77eb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    77ef:	44 8b 23             	mov    (%rbx),%r12d
    77f2:	41 8b 45 10          	mov    0x10(%r13),%eax
    77f6:	83 f8 01             	cmp    $0x1,%eax
    77f9:	74 16                	je     7811 <e1000_led_blink_callback+0x8b>
    77fb:	83 f8 02             	cmp    $0x2,%eax
    77fe:	74 11                	je     7811 <e1000_led_blink_callback+0x8b>
    7800:	83 f8 03             	cmp    $0x3,%eax
    7803:	74 0c                	je     7811 <e1000_led_blink_callback+0x8b>
    7805:	83 f8 04             	cmp    $0x4,%eax
    7808:	75 10                	jne    781a <e1000_led_blink_callback+0x94>
    780a:	41 83 7d 1c 01       	cmpl   $0x1,0x1c(%r13)
    780f:	75 12                	jne    7823 <e1000_led_blink_callback+0x9d>
    7811:	41 81 cc 00 00 44 00 	or     $0x440000,%r12d
    7818:	eb 5b                	jmp    7875 <e1000_led_blink_callback+0xef>
    781a:	41 8b 45 1c          	mov    0x1c(%r13),%eax
    781e:	83 f8 01             	cmp    $0x1,%eax
    7821:	75 10                	jne    7833 <e1000_led_blink_callback+0xad>
    7823:	41 81 e4 ff ff fb ff 	and    $0xfffbffff,%r12d
    782a:	41 81 cc 00 00 40 00 	or     $0x400000,%r12d
    7831:	eb 42                	jmp    7875 <e1000_led_blink_callback+0xef>
    7833:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
    7838:	75 14                	jne    784e <e1000_led_blink_callback+0xc8>
    783a:	ba 27 00 00 00       	mov    $0x27,%edx
    783f:	be 1b 00 00 00       	mov    $0x1b,%esi
    7844:	4c 89 ef             	mov    %r13,%rdi
    7847:	e8 3b e6 ff ff       	callq  5e87 <e1000_write_phy_reg>
    784c:	eb 27                	jmp    7875 <e1000_led_blink_callback+0xef>
    784e:	85 c0                	test   %eax,%eax
    7850:	75 23                	jne    7875 <e1000_led_blink_callback+0xef>
    7852:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
    7859:	45 8b a5 b8 00 00 00 	mov    0xb8(%r13),%r12d
    7860:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7863: R_X86_64_32S	.rodata.str1.1+0xb4
    7867:	e8 00 00 00 00       	callq  786c <e1000_led_blink_callback+0xe6>
			7868: R_X86_64_PC32	record_function+0xfffffffffffffffc
    786c:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
    7873:	eb 10                	jmp    7885 <e1000_led_blink_callback+0xff>
    7875:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7878: R_X86_64_32S	.rodata.str1.1+0xb4
    787c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7880:	e8 00 00 00 00       	callq  7885 <e1000_led_blink_callback+0xff>
			7881: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7885:	44 89 23             	mov    %r12d,(%rbx)
    7888:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 788f <e1000_led_blink_callback+0x109>
			788b: R_X86_64_PC32	jiffies+0xfffffffffffffffc
    788f:	49 8d be 78 01 00 00 	lea    0x178(%r14),%rdi
    7896:	48 81 c6 fa 00 00 00 	add    $0xfa,%rsi
    789d:	e8 d1 fc ff ff       	callq  7573 <mod_timer>
    78a2:	5b                   	pop    %rbx
    78a3:	41 5c                	pop    %r12
    78a5:	41 5d                	pop    %r13
    78a7:	41 5e                	pop    %r14
    78a9:	c9                   	leaveq 
    78aa:	c3                   	retq   

00000000000078ab <memset>:
    78ab:	55                   	push   %rbp
    78ac:	48 89 e5             	mov    %rsp,%rbp
    78af:	41 57                	push   %r15
    78b1:	41 89 f7             	mov    %esi,%r15d
    78b4:	41 56                	push   %r14
    78b6:	49 89 d6             	mov    %rdx,%r14
    78b9:	41 55                	push   %r13
    78bb:	4c 8d 6d cc          	lea    0xffffffffffffffcc(%rbp),%r13
    78bf:	41 54                	push   %r12
    78c1:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    78c5:	53                   	push   %rbx
    78c6:	48 89 fb             	mov    %rdi,%rbx
    78c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			78cc: R_X86_64_32S	.rodata.str1.1+0x16f2
    78d0:	48 83 ec 48          	sub    $0x48,%rsp
    78d4:	e8 00 00 00 00       	callq  78d9 <memset+0x2e>
			78d5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    78d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			78dc: R_X86_64_32S	.rodata.str1.1+0x16f9
    78e0:	48 89 5d b8          	mov    %rbx,0xffffffffffffffb8(%rbp)
    78e4:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    78eb:	00 
    78ec:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    78f3:	00 
    78f4:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    78fb:	44 89 7d c8          	mov    %r15d,0xffffffffffffffc8(%rbp)
    78ff:	4c 89 75 b0          	mov    %r14,0xffffffffffffffb0(%rbp)
    7903:	e8 00 00 00 00       	callq  7908 <memset+0x5d>
			7904: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7908:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    790c:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
    7910:	4c 89 ea             	mov    %r13,%rdx
    7913:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7916: R_X86_64_32S	.rodata.str1.1+0x16f2
    791a:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    7921:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    7928:	00 
    7929:	e8 00 00 00 00       	callq  792e <memset+0x83>
			792a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    792e:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
    7932:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    7938:	4c 89 e1             	mov    %r12,%rcx
    793b:	4c 89 ea             	mov    %r13,%rdx
    793e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7941: R_X86_64_32S	.rodata.str1.1+0x16f2
    7945:	e8 00 00 00 00       	callq  794a <memset+0x9f>
			7946: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    794a:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    794e:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
    7952:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    7958:	4c 89 ea             	mov    %r13,%rdx
    795b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			795e: R_X86_64_32S	.rodata.str1.1+0x16f2
    7962:	e8 00 00 00 00       	callq  7967 <memset+0xbc>
			7963: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    7967:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
    796b:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    796f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7972: R_X86_64_32S	.rodata.str1.1+0x16f2
    7976:	48 c7 45 90 d0 05 00 	movq   $0x5d0,0xffffffffffffff90(%rbp)
    797d:	00 
    797e:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    7982:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    7985:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    7988:	e8 00 00 00 00       	callq  798d <memset+0xe2>
			7989: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    798d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7990: R_X86_64_32S	.rodata.str1.1+0x170e
    7994:	48 89 5d b8          	mov    %rbx,0xffffffffffffffb8(%rbp)
    7998:	44 89 7d cc          	mov    %r15d,0xffffffffffffffcc(%rbp)
    799c:	4c 89 75 c0          	mov    %r14,0xffffffffffffffc0(%rbp)
    79a0:	e8 00 00 00 00       	callq  79a5 <memset+0xfa>
			79a1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    79a5:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    79a9:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    79ad:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    79b3:	4c 89 e2             	mov    %r12,%rdx
    79b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			79b9: R_X86_64_32S	.rodata.str1.1+0x16f2
    79bd:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    79c4:	48 89 de             	mov    %rbx,%rsi
    79c7:	e8 00 00 00 00       	callq  79cc <memset+0x121>
			79c8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    79cc:	48 89 de             	mov    %rbx,%rsi
    79cf:	4d 89 e8             	mov    %r13,%r8
    79d2:	b9 04 00 00 00       	mov    $0x4,%ecx
    79d7:	4c 89 e2             	mov    %r12,%rdx
    79da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			79dd: R_X86_64_32S	.rodata.str1.1+0x16f2
    79e1:	e8 00 00 00 00       	callq  79e6 <memset+0x13b>
			79e2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    79e6:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
    79ea:	48 89 de             	mov    %rbx,%rsi
    79ed:	b9 08 00 00 00       	mov    $0x8,%ecx
    79f2:	4c 89 e2             	mov    %r12,%rdx
    79f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			79f8: R_X86_64_32S	.rodata.str1.1+0x16f2
    79fc:	e8 00 00 00 00       	callq  7a01 <memset+0x156>
			79fd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7a01:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    7a05:	48 89 de             	mov    %rbx,%rsi
    7a08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7a0b: R_X86_64_32S	.rodata.str1.1+0x16f2
    7a0f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    7a15:	4c 89 e2             	mov    %r12,%rdx
    7a18:	e8 00 00 00 00       	callq  7a1d <memset+0x172>
			7a19: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    7a1d:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    7a21:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
    7a25:	48 85 ff             	test   %rdi,%rdi
    7a28:	74 05                	je     7a2f <memset+0x184>
    7a2a:	e8 00 00 00 00       	callq  7a2f <memset+0x184>
			7a2b: R_X86_64_PC32	kfree+0xfffffffffffffffc
    7a2f:	48 83 c4 48          	add    $0x48,%rsp
    7a33:	48 89 d8             	mov    %rbx,%rax
    7a36:	5b                   	pop    %rbx
    7a37:	41 5c                	pop    %r12
    7a39:	41 5d                	pop    %r13
    7a3b:	41 5e                	pop    %r14
    7a3d:	41 5f                	pop    %r15
    7a3f:	c9                   	leaveq 
    7a40:	c3                   	retq   

0000000000007a41 <msleep_interruptible>:
    7a41:	55                   	push   %rbp
    7a42:	48 89 e5             	mov    %rsp,%rbp
    7a45:	41 56                	push   %r14
    7a47:	4c 8d 75 d0          	lea    0xffffffffffffffd0(%rbp),%r14
    7a4b:	41 55                	push   %r13
    7a4d:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    7a51:	41 54                	push   %r12
    7a53:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    7a57:	53                   	push   %rbx
    7a58:	89 fb                	mov    %edi,%ebx
    7a5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7a5d: R_X86_64_32S	.rodata.str1.1+0x1723
    7a61:	48 83 ec 30          	sub    $0x30,%rsp
    7a65:	e8 00 00 00 00       	callq  7a6a <msleep_interruptible+0x29>
			7a66: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7a6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7a6d: R_X86_64_32S	.rodata.str1.1+0x1738
    7a71:	89 5d d8             	mov    %ebx,0xffffffffffffffd8(%rbp)
    7a74:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    7a7b:	00 
    7a7c:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    7a83:	00 
    7a84:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    7a8b:	e8 00 00 00 00       	callq  7a90 <msleep_interruptible+0x4f>
			7a8c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7a90:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    7a96:	4c 89 e1             	mov    %r12,%rcx
    7a99:	4c 89 ea             	mov    %r13,%rdx
    7a9c:	4c 89 f6             	mov    %r14,%rsi
    7a9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7aa2: R_X86_64_32S	.rodata.str1.1+0x1723
    7aa6:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    7aad:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    7ab4:	00 
    7ab5:	e8 00 00 00 00       	callq  7aba <msleep_interruptible+0x79>
			7ab6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    7aba:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    7abe:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    7ac2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7ac5: R_X86_64_32S	.rodata.str1.1+0x1723
    7ac9:	48 c7 45 b0 d4 05 00 	movq   $0x5d4,0xffffffffffffffb0(%rbp)
    7ad0:	00 
    7ad1:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    7ad5:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    7ad8:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    7adb:	e8 00 00 00 00       	callq  7ae0 <msleep_interruptible+0x9f>
			7adc: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    7ae0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7ae3: R_X86_64_32S	.rodata.str1.1+0x175b
    7ae7:	89 5d dc             	mov    %ebx,0xffffffffffffffdc(%rbp)
    7aea:	e8 00 00 00 00       	callq  7aef <msleep_interruptible+0xae>
			7aeb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7aef:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    7af3:	4d 89 e8             	mov    %r13,%r8
    7af6:	b9 04 00 00 00       	mov    $0x4,%ecx
    7afb:	4c 89 e2             	mov    %r12,%rdx
    7afe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7b01: R_X86_64_32S	.rodata.str1.1+0x1723
    7b05:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    7b0c:	48 89 de             	mov    %rbx,%rsi
    7b0f:	e8 00 00 00 00       	callq  7b14 <msleep_interruptible+0xd3>
			7b10: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7b14:	48 89 de             	mov    %rbx,%rsi
    7b17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7b1a: R_X86_64_32S	.rodata.str1.1+0x1723
    7b1e:	4d 89 f0             	mov    %r14,%r8
    7b21:	b9 08 00 00 00       	mov    $0x8,%ecx
    7b26:	4c 89 e2             	mov    %r12,%rdx
    7b29:	e8 00 00 00 00       	callq  7b2e <msleep_interruptible+0xed>
			7b2a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7b2e:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    7b32:	48 8b 5d d0          	mov    0xffffffffffffffd0(%rbp),%rbx
    7b36:	48 85 ff             	test   %rdi,%rdi
    7b39:	74 05                	je     7b40 <msleep_interruptible+0xff>
    7b3b:	e8 00 00 00 00       	callq  7b40 <msleep_interruptible+0xff>
			7b3c: R_X86_64_PC32	kfree+0xfffffffffffffffc
    7b40:	48 83 c4 30          	add    $0x30,%rsp
    7b44:	48 89 d8             	mov    %rbx,%rax
    7b47:	5b                   	pop    %rbx
    7b48:	41 5c                	pop    %r12
    7b4a:	41 5d                	pop    %r13
    7b4c:	41 5e                	pop    %r14
    7b4e:	c9                   	leaveq 
    7b4f:	c3                   	retq   

0000000000007b50 <msleep>:
    7b50:	55                   	push   %rbp
    7b51:	48 89 e5             	mov    %rsp,%rbp
    7b54:	41 55                	push   %r13
    7b56:	41 89 fd             	mov    %edi,%r13d
    7b59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7b5c: R_X86_64_32S	.rodata.str1.1+0x177e
    7b60:	41 54                	push   %r12
    7b62:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    7b66:	53                   	push   %rbx
    7b67:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
    7b6b:	48 83 ec 38          	sub    $0x38,%rsp
    7b6f:	e8 00 00 00 00       	callq  7b74 <msleep+0x24>
			7b70: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7b74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7b77: R_X86_64_32S	.rodata.str1.1+0x1785
    7b7b:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    7b82:	00 
    7b83:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    7b8a:	00 
    7b8b:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    7b92:	44 89 6d d8          	mov    %r13d,0xffffffffffffffd8(%rbp)
    7b96:	e8 00 00 00 00       	callq  7b9b <msleep+0x4b>
			7b97: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7b9b:	48 8d 75 d0          	lea    0xffffffffffffffd0(%rbp),%rsi
    7b9f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    7ba5:	4c 89 e1             	mov    %r12,%rcx
    7ba8:	48 89 da             	mov    %rbx,%rdx
    7bab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7bae: R_X86_64_32S	.rodata.str1.1+0x177e
    7bb2:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    7bb9:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    7bc0:	00 
    7bc1:	e8 00 00 00 00       	callq  7bc6 <msleep+0x76>
			7bc2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    7bc6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    7bca:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    7bce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7bd1: R_X86_64_32S	.rodata.str1.1+0x177e
    7bd5:	48 c7 45 b0 d3 05 00 	movq   $0x5d3,0xffffffffffffffb0(%rbp)
    7bdc:	00 
    7bdd:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    7be1:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    7be4:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    7be7:	e8 00 00 00 00       	callq  7bec <msleep+0x9c>
			7be8: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    7bec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7bef: R_X86_64_32S	.rodata.str1.1+0x179a
    7bf3:	44 89 6d dc          	mov    %r13d,0xffffffffffffffdc(%rbp)
    7bf7:	e8 00 00 00 00       	callq  7bfc <msleep+0xac>
			7bf8: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7bfc:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    7c00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7c03: R_X86_64_32S	.rodata.str1.1+0x177e
    7c07:	49 89 d8             	mov    %rbx,%r8
    7c0a:	b9 04 00 00 00       	mov    $0x4,%ecx
    7c0f:	4c 89 e2             	mov    %r12,%rdx
    7c12:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    7c19:	e8 00 00 00 00       	callq  7c1e <msleep+0xce>
			7c1a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    7c1e:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    7c22:	48 85 ff             	test   %rdi,%rdi
    7c25:	74 05                	je     7c2c <msleep+0xdc>
    7c27:	e8 00 00 00 00       	callq  7c2c <msleep+0xdc>
			7c28: R_X86_64_PC32	kfree+0xfffffffffffffffc
    7c2c:	48 83 c4 38          	add    $0x38,%rsp
    7c30:	5b                   	pop    %rbx
    7c31:	41 5c                	pop    %r12
    7c33:	41 5d                	pop    %r13
    7c35:	c9                   	leaveq 
    7c36:	c3                   	retq   

0000000000007c37 <e1000_phy_init_script>:
    7c37:	55                   	push   %rbp
    7c38:	48 89 e5             	mov    %rsp,%rbp
    7c3b:	41 54                	push   %r12
    7c3d:	53                   	push   %rbx
    7c3e:	48 89 fb             	mov    %rdi,%rbx
    7c41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7c44: R_X86_64_32S	.rodata.str1.1+0x17af
    7c48:	48 83 ec 10          	sub    $0x10,%rsp
    7c4c:	e8 00 00 00 00       	callq  7c51 <e1000_phy_init_script+0x1a>
			7c4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7c51:	83 7b 18 00          	cmpl   $0x0,0x18(%rbx)
    7c55:	0f 84 e1 01 00 00    	je     7e3c <e1000_phy_init_script+0x205>
    7c5b:	bf 14 00 00 00       	mov    $0x14,%edi
    7c60:	e8 eb fe ff ff       	callq  7b50 <msleep>
    7c65:	48 8d 55 ee          	lea    0xffffffffffffffee(%rbp),%rdx
    7c69:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
    7c6e:	48 89 df             	mov    %rbx,%rdi
    7c71:	e8 63 e4 ff ff       	callq  60d9 <e1000_read_phy_reg>
    7c76:	ba 03 00 00 00       	mov    $0x3,%edx
    7c7b:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
    7c80:	48 89 df             	mov    %rbx,%rdi
    7c83:	e8 ff e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7c88:	bf 14 00 00 00       	mov    $0x14,%edi
    7c8d:	e8 be fe ff ff       	callq  7b50 <msleep>
    7c92:	31 f6                	xor    %esi,%esi
    7c94:	ba 40 01 00 00       	mov    $0x140,%edx
    7c99:	48 89 df             	mov    %rbx,%rdi
    7c9c:	e8 e6 e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7ca1:	bf 05 00 00 00       	mov    $0x5,%edi
    7ca6:	e8 a5 fe ff ff       	callq  7b50 <msleep>
    7cab:	8b 43 10             	mov    0x10(%rbx),%eax
    7cae:	83 f8 0a             	cmp    $0xa,%eax
    7cb1:	74 1c                	je     7ccf <e1000_phy_init_script+0x98>
    7cb3:	83 f8 0c             	cmp    $0xc,%eax
    7cb6:	74 17                	je     7ccf <e1000_phy_init_script+0x98>
    7cb8:	83 f8 0b             	cmp    $0xb,%eax
    7cbb:	0f 84 aa 00 00 00    	je     7d6b <e1000_phy_init_script+0x134>
    7cc1:	83 f8 0d             	cmp    $0xd,%eax
    7cc4:	0f 85 b3 00 00 00    	jne    7d7d <e1000_phy_init_script+0x146>
    7cca:	e9 9c 00 00 00       	jmpq   7d6b <e1000_phy_init_script+0x134>
    7ccf:	ba 01 00 00 00       	mov    $0x1,%edx
    7cd4:	be 95 1f 00 00       	mov    $0x1f95,%esi
    7cd9:	48 89 df             	mov    %rbx,%rdi
    7cdc:	e8 a6 e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7ce1:	ba 21 bd 00 00       	mov    $0xbd21,%edx
    7ce6:	be 71 1f 00 00       	mov    $0x1f71,%esi
    7ceb:	48 89 df             	mov    %rbx,%rdi
    7cee:	e8 94 e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7cf3:	ba 18 00 00 00       	mov    $0x18,%edx
    7cf8:	be 79 1f 00 00       	mov    $0x1f79,%esi
    7cfd:	48 89 df             	mov    %rbx,%rdi
    7d00:	e8 82 e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d05:	ba 00 16 00 00       	mov    $0x1600,%edx
    7d0a:	be 30 1f 00 00       	mov    $0x1f30,%esi
    7d0f:	48 89 df             	mov    %rbx,%rdi
    7d12:	e8 70 e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d17:	ba 14 00 00 00       	mov    $0x14,%edx
    7d1c:	be 31 1f 00 00       	mov    $0x1f31,%esi
    7d21:	48 89 df             	mov    %rbx,%rdi
    7d24:	e8 5e e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d29:	ba 1c 16 00 00       	mov    $0x161c,%edx
    7d2e:	be 32 1f 00 00       	mov    $0x1f32,%esi
    7d33:	48 89 df             	mov    %rbx,%rdi
    7d36:	e8 4c e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d3b:	ba 03 00 00 00       	mov    $0x3,%edx
    7d40:	be 94 1f 00 00       	mov    $0x1f94,%esi
    7d45:	48 89 df             	mov    %rbx,%rdi
    7d48:	e8 3a e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d4d:	ba 3f 00 00 00       	mov    $0x3f,%edx
    7d52:	be 96 1f 00 00       	mov    $0x1f96,%esi
    7d57:	48 89 df             	mov    %rbx,%rdi
    7d5a:	e8 28 e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d5f:	ba 08 00 00 00       	mov    $0x8,%edx
    7d64:	be 10 20 00 00       	mov    $0x2010,%esi
    7d69:	eb 0a                	jmp    7d75 <e1000_phy_init_script+0x13e>
    7d6b:	ba 99 00 00 00       	mov    $0x99,%edx
    7d70:	be 73 1f 00 00       	mov    $0x1f73,%esi
    7d75:	48 89 df             	mov    %rbx,%rdi
    7d78:	e8 0a e1 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d7d:	31 f6                	xor    %esi,%esi
    7d7f:	ba 00 33 00 00       	mov    $0x3300,%edx
    7d84:	48 89 df             	mov    %rbx,%rdi
    7d87:	e8 fb e0 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7d8c:	bf 14 00 00 00       	mov    $0x14,%edi
    7d91:	e8 ba fd ff ff       	callq  7b50 <msleep>
    7d96:	0f b7 55 ee          	movzwl 0xffffffffffffffee(%rbp),%edx
    7d9a:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
    7d9f:	48 89 df             	mov    %rbx,%rdi
    7da2:	e8 e0 e0 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7da7:	83 7b 10 0c          	cmpl   $0xc,0x10(%rbx)
    7dab:	0f 85 8b 00 00 00    	jne    7e3c <e1000_phy_init_script+0x205>
    7db1:	4c 8d 65 ec          	lea    0xffffffffffffffec(%rbp),%r12
    7db5:	be d1 20 00 00       	mov    $0x20d1,%esi
    7dba:	48 89 df             	mov    %rbx,%rdi
    7dbd:	4c 89 e2             	mov    %r12,%rdx
    7dc0:	e8 14 e3 ff ff       	callq  60d9 <e1000_read_phy_reg>
    7dc5:	f6 45 ed 01          	testb  $0x1,0xffffffffffffffed(%rbp)
    7dc9:	75 71                	jne    7e3c <e1000_phy_init_script+0x205>
    7dcb:	4c 89 e2             	mov    %r12,%rdx
    7dce:	be d0 20 00 00       	mov    $0x20d0,%esi
    7dd3:	48 89 df             	mov    %rbx,%rdi
    7dd6:	e8 fe e2 ff ff       	callq  60d9 <e1000_read_phy_reg>
    7ddb:	8b 75 ec             	mov    0xffffffffffffffec(%rbp),%esi
    7dde:	89 f1                	mov    %esi,%ecx
    7de0:	89 f2                	mov    %esi,%edx
    7de2:	83 e1 70             	and    $0x70,%ecx
    7de5:	66 81 e2 80 0f       	and    $0xf80,%dx
    7dea:	66 83 f9 40          	cmp    $0x40,%cx
    7dee:	76 08                	jbe    7df8 <e1000_phy_init_script+0x1c1>
    7df0:	83 e9 10             	sub    $0x10,%ecx
    7df3:	83 c2 80             	add    $0xffffffffffffff80,%edx
    7df6:	eb 0d                	jmp    7e05 <e1000_phy_init_script+0x1ce>
    7df8:	8d 82 00 fb ff ff    	lea    0xfffffffffffffb00(%rdx),%eax
    7dfe:	66 83 f9 40          	cmp    $0x40,%cx
    7e02:	0f 44 d0             	cmove  %eax,%edx
    7e05:	83 e1 70             	and    $0x70,%ecx
    7e08:	66 81 e2 80 0f       	and    $0xf80,%dx
    7e0d:	66 81 e6 00 f0       	and    $0xf000,%si
    7e12:	09 ca                	or     %ecx,%edx
    7e14:	48 89 df             	mov    %rbx,%rdi
    7e17:	09 f2                	or     %esi,%edx
    7e19:	be dc 20 00 00       	mov    $0x20dc,%esi
    7e1e:	66 89 55 ec          	mov    %dx,0xffffffffffffffec(%rbp)
    7e22:	0f b7 d2             	movzwl %dx,%edx
    7e25:	e8 5d e0 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7e2a:	ba 02 00 00 00       	mov    $0x2,%edx
    7e2f:	be de 20 00 00       	mov    $0x20de,%esi
    7e34:	48 89 df             	mov    %rbx,%rdi
    7e37:	e8 4b e0 ff ff       	callq  5e87 <e1000_write_phy_reg>
    7e3c:	41 58                	pop    %r8
    7e3e:	41 59                	pop    %r9
    7e40:	5b                   	pop    %rbx
    7e41:	41 5c                	pop    %r12
    7e43:	c9                   	leaveq 
    7e44:	c3                   	retq   

0000000000007e45 <e1000_reset_hw>:
    7e45:	55                   	push   %rbp
    7e46:	48 89 e5             	mov    %rsp,%rbp
    7e49:	41 57                	push   %r15
    7e4b:	41 56                	push   %r14
    7e4d:	41 55                	push   %r13
    7e4f:	49 89 fd             	mov    %rdi,%r13
    7e52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7e55: R_X86_64_32S	.rodata.str1.1+0x17c5
    7e59:	41 54                	push   %r12
    7e5b:	53                   	push   %rbx
    7e5c:	48 83 ec 08          	sub    $0x8,%rsp
    7e60:	e8 00 00 00 00       	callq  7e65 <e1000_reset_hw+0x20>
			7e61: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7e65:	41 83 7d 10 01       	cmpl   $0x1,0x10(%r13)
    7e6a:	75 08                	jne    7e74 <e1000_reset_hw+0x2f>
    7e6c:	4c 89 ef             	mov    %r13,%rdi
    7e6f:	e8 27 b9 ff ff       	callq  379b <e1000_pci_clear_mwi>
    7e74:	41 83 7d 44 03       	cmpl   $0x3,0x44(%r13)
    7e79:	75 08                	jne    7e83 <e1000_reset_hw+0x3e>
    7e7b:	4c 89 ef             	mov    %r13,%rdi
    7e7e:	e8 99 d4 ff ff       	callq  531c <e1000_disable_pciex_master>
    7e83:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7e87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7e8a: R_X86_64_32S	.rodata.str1.1+0xb4
    7e8e:	e8 00 00 00 00       	callq  7e93 <e1000_reset_hw+0x4e>
			7e8f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7e93:	83 c8 ff             	or     $0xffffffffffffffff,%eax
    7e96:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
    7e9d:	89 03                	mov    %eax,(%rbx)
    7e9f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7ea3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7ea6: R_X86_64_32S	.rodata.str1.1+0xb4
    7eaa:	e8 00 00 00 00       	callq  7eaf <e1000_reset_hw+0x6a>
			7eab: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7eaf:	31 c0                	xor    %eax,%eax
    7eb1:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
    7eb8:	89 03                	mov    %eax,(%rbx)
    7eba:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7ebe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7ec1: R_X86_64_32S	.rodata.str1.1+0xb4
    7ec5:	e8 00 00 00 00       	callq  7eca <e1000_reset_hw+0x85>
			7ec6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7eca:	b8 08 00 00 00       	mov    $0x8,%eax
    7ecf:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
    7ed6:	89 03                	mov    %eax,(%rbx)
    7ed8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7edb: R_X86_64_32S	.rodata.str1.1+0xae
    7edf:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7ee3:	e8 00 00 00 00       	callq  7ee8 <e1000_reset_hw+0xa3>
			7ee4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7ee8:	8b 43 08             	mov    0x8(%rbx),%eax
    7eeb:	bf 0a 00 00 00       	mov    $0xa,%edi
    7ef0:	41 c6 85 0f 01 00 00 	movb   $0x0,0x10f(%r13)
    7ef7:	00 
    7ef8:	e8 53 fc ff ff       	callq  7b50 <msleep>
    7efd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f00: R_X86_64_32S	.rodata.str1.1+0xae
    7f04:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7f08:	e8 00 00 00 00       	callq  7f0d <e1000_reset_hw+0xc8>
			7f09: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7f0d:	44 8b 33             	mov    (%rbx),%r14d
    7f10:	41 8b 45 10          	mov    0x10(%r13),%eax
    7f14:	83 f8 0a             	cmp    $0xa,%eax
    7f17:	74 05                	je     7f1e <e1000_reset_hw+0xd9>
    7f19:	83 f8 0c             	cmp    $0xc,%eax
    7f1c:	75 27                	jne    7f45 <e1000_reset_hw+0x100>
    7f1e:	44 89 f3             	mov    %r14d,%ebx
    7f21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f24: R_X86_64_32S	.rodata.str1.1+0xb4
    7f28:	4d 8b 65 00          	mov    0x0(%r13),%r12
    7f2c:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
    7f32:	e8 00 00 00 00       	callq  7f37 <e1000_reset_hw+0xf2>
			7f33: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7f37:	41 89 1c 24          	mov    %ebx,(%r12)
    7f3b:	bf 05 00 00 00       	mov    $0x5,%edi
    7f40:	e8 0b fc ff ff       	callq  7b50 <msleep>
    7f45:	41 83 7d 10 10       	cmpl   $0x10,0x10(%r13)
    7f4a:	75 7c                	jne    7fc8 <e1000_reset_hw+0x183>
    7f4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f4f: R_X86_64_32S	.rodata.str1.1+0xae
    7f53:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7f57:	e8 00 00 00 00       	callq  7f5c <e1000_reset_hw+0x117>
			7f58: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7f5c:	44 8b a3 00 0f 00 00 	mov    0xf00(%rbx),%r12d
    7f63:	41 bf 0a 00 00 00    	mov    $0xa,%r15d
    7f69:	41 83 cc 20          	or     $0x20,%r12d
    7f6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f70: R_X86_64_32S	str_209072091
    7f74:	31 c0                	xor    %eax,%eax
    7f76:	e8 00 00 00 00       	callq  7f7b <e1000_reset_hw+0x136>
			7f77: R_X86_64_PC32	printk+0xfffffffffffffffc
    7f7b:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7f7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f82: R_X86_64_32S	.rodata.str1.1+0xb4
    7f86:	e8 00 00 00 00       	callq  7f8b <e1000_reset_hw+0x146>
			7f87: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7f8b:	48 81 c3 00 0f 00 00 	add    $0xf00,%rbx
    7f92:	44 89 23             	mov    %r12d,(%rbx)
    7f95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7f98: R_X86_64_32S	.rodata.str1.1+0xae
    7f9c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7fa0:	e8 00 00 00 00       	callq  7fa5 <e1000_reset_hw+0x160>
			7fa1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7fa5:	8b 9b 00 0f 00 00    	mov    0xf00(%rbx),%ebx
    7fab:	f6 c3 20             	test   $0x20,%bl
    7fae:	75 18                	jne    7fc8 <e1000_reset_hw+0x183>
    7fb0:	bf 02 00 00 00       	mov    $0x2,%edi
    7fb5:	e8 96 fb ff ff       	callq  7b50 <msleep>
    7fba:	41 ff cf             	dec    %r15d
    7fbd:	74 09                	je     7fc8 <e1000_reset_hw+0x183>
    7fbf:	41 89 dc             	mov    %ebx,%r12d
    7fc2:	41 83 cc 20          	or     $0x20,%r12d
    7fc6:	eb a5                	jmp    7f6d <e1000_reset_hw+0x128>
    7fc8:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    7fcd:	75 3c                	jne    800b <e1000_reset_hw+0x1c6>
    7fcf:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7fd3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7fd6: R_X86_64_32S	.rodata.str1.1+0xb4
    7fda:	e8 00 00 00 00       	callq  7fdf <e1000_reset_hw+0x19a>
			7fdb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7fdf:	b8 08 00 00 00       	mov    $0x8,%eax
    7fe4:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    7feb:	89 03                	mov    %eax,(%rbx)
    7fed:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    7ff1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7ff4: R_X86_64_32S	.rodata.str1.1+0xb4
    7ff8:	e8 00 00 00 00       	callq  7ffd <e1000_reset_hw+0x1b8>
			7ff9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    7ffd:	b8 10 00 00 00       	mov    $0x10,%eax
    8002:	48 81 c3 08 10 00 00 	add    $0x1008,%rbx
    8009:	89 03                	mov    %eax,(%rbx)
    800b:	41 8b 45 10          	mov    0x10(%r13),%eax
    800f:	83 f8 04             	cmp    $0x4,%eax
    8012:	74 2e                	je     8042 <e1000_reset_hw+0x1fd>
    8014:	83 f8 05             	cmp    $0x5,%eax
    8017:	74 29                	je     8042 <e1000_reset_hw+0x1fd>
    8019:	83 f8 06             	cmp    $0x6,%eax
    801c:	74 24                	je     8042 <e1000_reset_hw+0x1fd>
    801e:	83 f8 08             	cmp    $0x8,%eax
    8021:	74 1f                	je     8042 <e1000_reset_hw+0x1fd>
    8023:	83 f8 0a             	cmp    $0xa,%eax
    8026:	74 1a                	je     8042 <e1000_reset_hw+0x1fd>
    8028:	83 f8 0b             	cmp    $0xb,%eax
    802b:	74 15                	je     8042 <e1000_reset_hw+0x1fd>
    802d:	83 f8 07             	cmp    $0x7,%eax
    8030:	74 48                	je     807a <e1000_reset_hw+0x235>
    8032:	83 f8 09             	cmp    $0x9,%eax
    8035:	74 43                	je     807a <e1000_reset_hw+0x235>
    8037:	83 f8 12             	cmp    $0x12,%eax
    803a:	0f 85 a6 00 00 00    	jne    80e6 <e1000_reset_hw+0x2a1>
    8040:	eb 55                	jmp    8097 <e1000_reset_hw+0x252>
    8042:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8045: R_X86_64_32S	.rodata.str1.1+0x17d4
    8049:	41 81 ce 00 00 00 04 	or     $0x4000000,%r14d
    8050:	e8 00 00 00 00       	callq  8055 <e1000_reset_hw+0x210>
			8051: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8055:	49 8b 5d 78          	mov    0x78(%r13),%rbx
    8059:	31 d2                	xor    %edx,%edx
    805b:	4c 89 ef             	mov    %r13,%rdi
    805e:	48 89 de             	mov    %rbx,%rsi
    8061:	e8 93 8a ff ff       	callq  af9 <e1000_io_write>
    8066:	48 8d 73 04          	lea    0x4(%rbx),%rsi
    806a:	44 89 f2             	mov    %r14d,%edx
    806d:	4c 89 ef             	mov    %r13,%rdi
    8070:	e8 84 8a ff ff       	callq  af9 <e1000_io_write>
    8075:	e9 86 00 00 00       	jmpq   8100 <e1000_reset_hw+0x2bb>
    807a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    807e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8081: R_X86_64_32S	.rodata.str1.1+0xb4
    8085:	41 81 ce 00 00 00 04 	or     $0x4000000,%r14d
    808c:	e8 00 00 00 00       	callq  8091 <e1000_reset_hw+0x24c>
			808d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8091:	48 83 c3 04          	add    $0x4,%rbx
    8095:	eb 66                	jmp    80fd <e1000_reset_hw+0x2b8>
    8097:	41 80 bd 11 01 00 00 	cmpb   $0x0,0x111(%r13)
    809e:	00 
    809f:	75 17                	jne    80b8 <e1000_reset_hw+0x273>
    80a1:	4c 89 ef             	mov    %r13,%rdi
    80a4:	e8 6b 80 ff ff       	callq  114 <e1000_check_phy_reset_block>
    80a9:	44 89 f2             	mov    %r14d,%edx
    80ac:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    80b2:	85 c0                	test   %eax,%eax
    80b4:	44 0f 44 f2          	cmove  %edx,%r14d
    80b8:	4c 89 ef             	mov    %r13,%rdi
    80bb:	41 81 ce 00 00 00 04 	or     $0x4000000,%r14d
    80c2:	e8 f6 cf ff ff       	callq  50bd <e1000_get_software_flag>
    80c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			80ca: R_X86_64_32S	.rodata.str1.1+0xb4
    80ce:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    80d2:	e8 00 00 00 00       	callq  80d7 <e1000_reset_hw+0x292>
			80d3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    80d7:	44 89 33             	mov    %r14d,(%rbx)
    80da:	bf 05 00 00 00       	mov    $0x5,%edi
    80df:	e8 6c fa ff ff       	callq  7b50 <msleep>
    80e4:	eb 1a                	jmp    8100 <e1000_reset_hw+0x2bb>
    80e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			80e9: R_X86_64_32S	.rodata.str1.1+0xb4
    80ed:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    80f1:	41 81 ce 00 00 00 04 	or     $0x4000000,%r14d
    80f8:	e8 00 00 00 00       	callq  80fd <e1000_reset_hw+0x2b8>
			80f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    80fd:	44 89 33             	mov    %r14d,(%rbx)
    8100:	41 8b 45 10          	mov    0x10(%r13),%eax
    8104:	83 f8 01             	cmp    $0x1,%eax
    8107:	74 2e                	je     8137 <e1000_reset_hw+0x2f2>
    8109:	83 f8 02             	cmp    $0x2,%eax
    810c:	74 29                	je     8137 <e1000_reset_hw+0x2f2>
    810e:	83 f8 03             	cmp    $0x3,%eax
    8111:	74 24                	je     8137 <e1000_reset_hw+0x2f2>
    8113:	83 f8 04             	cmp    $0x4,%eax
    8116:	74 1f                	je     8137 <e1000_reset_hw+0x2f2>
    8118:	83 f8 0a             	cmp    $0xa,%eax
    811b:	74 73                	je     8190 <e1000_reset_hw+0x34b>
    811d:	83 f8 0b             	cmp    $0xb,%eax
    8120:	74 6e                	je     8190 <e1000_reset_hw+0x34b>
    8122:	83 f8 0c             	cmp    $0xc,%eax
    8125:	74 69                	je     8190 <e1000_reset_hw+0x34b>
    8127:	83 f8 0d             	cmp    $0xd,%eax
    812a:	74 64                	je     8190 <e1000_reset_hw+0x34b>
    812c:	83 f8 10             	cmp    $0x10,%eax
    812f:	0f 85 c0 00 00 00    	jne    81f5 <e1000_reset_hw+0x3b0>
    8135:	eb 63                	jmp    819a <e1000_reset_hw+0x355>
    8137:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
    813c:	e8 1b c8 ff ff       	callq  495c <__const_udelay>
    8141:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8144: R_X86_64_32S	.rodata.str1.1+0xae
    8148:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    814c:	e8 00 00 00 00       	callq  8151 <e1000_reset_hw+0x30c>
			814d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8151:	44 8b 63 18          	mov    0x18(%rbx),%r12d
    8155:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    8159:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			815c: R_X86_64_32S	.rodata.str1.1+0xb4
    8160:	41 81 cc 00 20 00 00 	or     $0x2000,%r12d
    8167:	e8 00 00 00 00       	callq  816c <e1000_reset_hw+0x327>
			8168: R_X86_64_PC32	record_function+0xfffffffffffffffc
    816c:	48 83 c3 18          	add    $0x18,%rbx
    8170:	44 89 23             	mov    %r12d,(%rbx)
    8173:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8176: R_X86_64_32S	.rodata.str1.1+0xae
    817a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    817e:	e8 00 00 00 00       	callq  8183 <e1000_reset_hw+0x33e>
			817f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8183:	8b 43 08             	mov    0x8(%rbx),%eax
    8186:	bf 02 00 00 00       	mov    $0x2,%edi
    818b:	e9 dd 00 00 00       	jmpq   826d <e1000_reset_hw+0x428>
    8190:	bf 14 00 00 00       	mov    $0x14,%edi
    8195:	e9 d3 00 00 00       	jmpq   826d <e1000_reset_hw+0x428>
    819a:	4c 89 ef             	mov    %r13,%rdi
    819d:	e8 20 83 ff ff       	callq  4c2 <e1000_is_onboard_nvm_eeprom>
    81a2:	84 c0                	test   %al,%al
    81a4:	75 4f                	jne    81f5 <e1000_reset_hw+0x3b0>
    81a6:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
    81ab:	e8 ac c7 ff ff       	callq  495c <__const_udelay>
    81b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			81b3: R_X86_64_32S	.rodata.str1.1+0xae
    81b7:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    81bb:	e8 00 00 00 00       	callq  81c0 <e1000_reset_hw+0x37b>
			81bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    81c0:	44 8b 63 18          	mov    0x18(%rbx),%r12d
    81c4:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    81c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			81cb: R_X86_64_32S	.rodata.str1.1+0xb4
    81cf:	41 81 cc 00 20 00 00 	or     $0x2000,%r12d
    81d6:	e8 00 00 00 00       	callq  81db <e1000_reset_hw+0x396>
			81d7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    81db:	48 83 c3 18          	add    $0x18,%rbx
    81df:	44 89 23             	mov    %r12d,(%rbx)
    81e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			81e5: R_X86_64_32S	.rodata.str1.1+0xae
    81e9:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    81ed:	e8 00 00 00 00       	callq  81f2 <e1000_reset_hw+0x3ad>
			81ee: R_X86_64_PC32	record_function+0xfffffffffffffffc
    81f2:	8b 43 08             	mov    0x8(%rbx),%eax
    81f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			81f8: R_X86_64_32S	.rodata.str1.1+0x17e7
    81fc:	e8 00 00 00 00       	callq  8201 <e1000_reset_hw+0x3bc>
			81fd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8201:	41 8b 45 10          	mov    0x10(%r13),%eax
    8205:	83 f8 0e             	cmp    $0xe,%eax
    8208:	74 20                	je     822a <e1000_reset_hw+0x3e5>
    820a:	83 f8 0f             	cmp    $0xf,%eax
    820d:	74 1b                	je     822a <e1000_reset_hw+0x3e5>
    820f:	83 f8 10             	cmp    $0x10,%eax
    8212:	74 16                	je     822a <e1000_reset_hw+0x3e5>
    8214:	83 f8 11             	cmp    $0x11,%eax
    8217:	74 11                	je     822a <e1000_reset_hw+0x3e5>
    8219:	83 f8 12             	cmp    $0x12,%eax
    821c:	74 0c                	je     822a <e1000_reset_hw+0x3e5>
    821e:	bf 05 00 00 00       	mov    $0x5,%edi
    8223:	e8 28 f9 ff ff       	callq  7b50 <msleep>
    8228:	eb 37                	jmp    8261 <e1000_reset_hw+0x41c>
    822a:	41 bc 0a 00 00 00    	mov    $0xa,%r12d
    8230:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8233: R_X86_64_32S	.rodata.str1.1+0xae
    8237:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    823b:	e8 00 00 00 00       	callq  8240 <e1000_reset_hw+0x3fb>
			823c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8240:	8b 43 10             	mov    0x10(%rbx),%eax
    8243:	f6 c4 02             	test   $0x2,%ah
    8246:	75 19                	jne    8261 <e1000_reset_hw+0x41c>
    8248:	bf 01 00 00 00       	mov    $0x1,%edi
    824d:	e8 fe f8 ff ff       	callq  7b50 <msleep>
    8252:	41 ff cc             	dec    %r12d
    8255:	75 d9                	jne    8230 <e1000_reset_hw+0x3eb>
    8257:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
    825c:	e9 3a 01 00 00       	jmpq   839b <e1000_reset_hw+0x556>
    8261:	41 83 7d 10 10       	cmpl   $0x10,0x10(%r13)
    8266:	75 0a                	jne    8272 <e1000_reset_hw+0x42d>
    8268:	bf 19 00 00 00       	mov    $0x19,%edi
    826d:	e8 de f8 ff ff       	callq  7b50 <msleep>
    8272:	41 8b 45 10          	mov    0x10(%r13),%eax
    8276:	83 f8 04             	cmp    $0x4,%eax
    8279:	76 3d                	jbe    82b8 <e1000_reset_hw+0x473>
    827b:	83 f8 0d             	cmp    $0xd,%eax
    827e:	77 38                	ja     82b8 <e1000_reset_hw+0x473>
    8280:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8283: R_X86_64_32S	.rodata.str1.1+0xae
    8287:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    828b:	e8 00 00 00 00       	callq  8290 <e1000_reset_hw+0x44b>
			828c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8290:	44 8b a3 20 58 00 00 	mov    0x5820(%rbx),%r12d
    8297:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    829b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			829e: R_X86_64_32S	.rodata.str1.1+0xb4
    82a2:	41 81 e4 ff df ff ff 	and    $0xffffdfff,%r12d
    82a9:	e8 00 00 00 00       	callq  82ae <e1000_reset_hw+0x469>
			82aa: R_X86_64_PC32	record_function+0xfffffffffffffffc
    82ae:	48 81 c3 20 58 00 00 	add    $0x5820,%rbx
    82b5:	44 89 23             	mov    %r12d,(%rbx)
    82b8:	41 8b 45 10          	mov    0x10(%r13),%eax
    82bc:	83 f8 0a             	cmp    $0xa,%eax
    82bf:	74 05                	je     82c6 <e1000_reset_hw+0x481>
    82c1:	83 f8 0c             	cmp    $0xc,%eax
    82c4:	75 47                	jne    830d <e1000_reset_hw+0x4c8>
    82c6:	4c 89 ef             	mov    %r13,%rdi
    82c9:	e8 69 f9 ff ff       	callq  7c37 <e1000_phy_init_script>
    82ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			82d1: R_X86_64_32S	.rodata.str1.1+0xae
    82d5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    82d9:	e8 00 00 00 00       	callq  82de <e1000_reset_hw+0x499>
			82da: R_X86_64_PC32	record_function+0xfffffffffffffffc
    82de:	44 8b a3 00 0e 00 00 	mov    0xe00(%rbx),%r12d
    82e5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    82e9:	41 81 e4 ff f0 ff ff 	and    $0xfffff0ff,%r12d
    82f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			82f3: R_X86_64_32S	.rodata.str1.1+0xb4
    82f7:	41 81 cc 00 03 00 07 	or     $0x7000300,%r12d
    82fe:	e8 00 00 00 00       	callq  8303 <e1000_reset_hw+0x4be>
			82ff: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8303:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
    830a:	44 89 23             	mov    %r12d,(%rbx)
    830d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    8311:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8314: R_X86_64_32S	.rodata.str1.1+0xb4
    8318:	e8 00 00 00 00       	callq  831d <e1000_reset_hw+0x4d8>
			8319: R_X86_64_PC32	record_function+0xfffffffffffffffc
    831d:	83 c8 ff             	or     $0xffffffffffffffff,%eax
    8320:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
    8327:	89 03                	mov    %eax,(%rbx)
    8329:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			832c: R_X86_64_32S	.rodata.str1.1+0xae
    8330:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    8334:	e8 00 00 00 00       	callq  8339 <e1000_reset_hw+0x4f4>
			8335: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8339:	8b 83 c0 00 00 00    	mov    0xc0(%rbx),%eax
    833f:	41 83 7d 10 01       	cmpl   $0x1,0x10(%r13)
    8344:	75 12                	jne    8358 <e1000_reset_hw+0x513>
    8346:	41 f6 85 d4 00 00 00 	testb  $0x10,0xd4(%r13)
    834d:	10 
    834e:	74 08                	je     8358 <e1000_reset_hw+0x513>
    8350:	4c 89 ef             	mov    %r13,%rdi
    8353:	e8 fb b7 ff ff       	callq  3b53 <e1000_pci_set_mwi>
    8358:	31 c0                	xor    %eax,%eax
    835a:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    835f:	75 3a                	jne    839b <e1000_reset_hw+0x556>
    8361:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8364: R_X86_64_32S	.rodata.str1.1+0xae
    8368:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    836c:	e8 00 00 00 00       	callq  8371 <e1000_reset_hw+0x52c>
			836d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8371:	44 8b a3 04 30 00 00 	mov    0x3004(%rbx),%r12d
    8378:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    837c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			837f: R_X86_64_32S	.rodata.str1.1+0xb4
    8383:	41 81 cc 00 00 05 00 	or     $0x50000,%r12d
    838a:	e8 00 00 00 00       	callq  838f <e1000_reset_hw+0x54a>
			838b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    838f:	48 81 c3 04 30 00 00 	add    $0x3004,%rbx
    8396:	44 89 23             	mov    %r12d,(%rbx)
    8399:	31 c0                	xor    %eax,%eax
    839b:	41 5a                	pop    %r10
    839d:	5b                   	pop    %rbx
    839e:	41 5c                	pop    %r12
    83a0:	41 5d                	pop    %r13
    83a2:	41 5e                	pop    %r14
    83a4:	41 5f                	pop    %r15
    83a6:	c9                   	leaveq 
    83a7:	c3                   	retq   

00000000000083a8 <pci_bus_read_config_word>:
    83a8:	55                   	push   %rbp
    83a9:	48 89 e5             	mov    %rsp,%rbp
    83ac:	41 57                	push   %r15
    83ae:	41 89 f7             	mov    %esi,%r15d
    83b1:	41 56                	push   %r14
    83b3:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    83b7:	41 55                	push   %r13
    83b9:	4c 8d 6d cc          	lea    0xffffffffffffffcc(%rbp),%r13
    83bd:	41 54                	push   %r12
    83bf:	4c 8d 65 b8          	lea    0xffffffffffffffb8(%rbp),%r12
    83c3:	53                   	push   %rbx
    83c4:	48 89 fb             	mov    %rdi,%rbx
    83c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			83ca: R_X86_64_32S	.rodata.str1.1+0x17fe
    83ce:	48 83 ec 58          	sub    $0x58,%rsp
    83d2:	89 55 8c             	mov    %edx,0xffffffffffffff8c(%rbp)
    83d5:	48 89 4d 80          	mov    %rcx,0xffffffffffffff80(%rbp)
    83d9:	e8 00 00 00 00       	callq  83de <pci_bus_read_config_word+0x36>
			83da: R_X86_64_PC32	record_function+0xfffffffffffffffc
    83de:	8b 45 8c             	mov    0xffffffffffffff8c(%rbp),%eax
    83e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			83e4: R_X86_64_32S	.rodata.str1.1+0x1817
    83e8:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    83ef:	00 
    83f0:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    83f7:	00 
    83f8:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    83ff:	48 89 5d a8          	mov    %rbx,0xffffffffffffffa8(%rbp)
    8403:	44 89 7d c8          	mov    %r15d,0xffffffffffffffc8(%rbp)
    8407:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
    840a:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
    840e:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    8412:	e8 00 00 00 00       	callq  8417 <pci_bus_read_config_word+0x6f>
			8413: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8417:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    841b:	4c 89 ea             	mov    %r13,%rdx
    841e:	4c 89 f6             	mov    %r14,%rsi
    8421:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8424: R_X86_64_32S	.rodata.str1.1+0x17fe
    8428:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    842f:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    8436:	00 
    8437:	e8 00 00 00 00       	callq  843c <pci_bus_read_config_word+0x94>
			8438: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    843c:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
    8440:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    8446:	4c 89 ea             	mov    %r13,%rdx
    8449:	4c 89 f6             	mov    %r14,%rsi
    844c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			844f: R_X86_64_32S	.rodata.str1.1+0x17fe
    8453:	e8 00 00 00 00       	callq  8458 <pci_bus_read_config_word+0xb0>
			8454: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8458:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
    845c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    8462:	4c 89 ea             	mov    %r13,%rdx
    8465:	4c 89 f6             	mov    %r14,%rsi
    8468:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			846b: R_X86_64_32S	.rodata.str1.1+0x17fe
    846f:	e8 00 00 00 00       	callq  8474 <pci_bus_read_config_word+0xcc>
			8470: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8474:	4c 89 e1             	mov    %r12,%rcx
    8477:	4c 89 ea             	mov    %r13,%rdx
    847a:	4c 89 f6             	mov    %r14,%rsi
    847d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8480: R_X86_64_32S	.rodata.str1.1+0x17fe
    8484:	e8 00 00 00 00       	callq  8489 <pci_bus_read_config_word+0xe1>
			8485: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    8489:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    848d:	48 85 c9             	test   %rcx,%rcx
    8490:	74 18                	je     84aa <pci_bus_read_config_word+0x102>
    8492:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    8498:	4c 89 ea             	mov    %r13,%rdx
    849b:	4c 89 f6             	mov    %r14,%rsi
    849e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			84a1: R_X86_64_32S	.rodata.str1.1+0x17fe
    84a5:	e8 00 00 00 00       	callq  84aa <pci_bus_read_config_word+0x102>
			84a6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    84aa:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    84ae:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    84b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			84b5: R_X86_64_32S	.rodata.str1.1+0x17fe
    84b9:	48 c7 45 90 09 06 00 	movq   $0x609,0xffffffffffffff90(%rbp)
    84c0:	00 
    84c1:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    84c5:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    84c8:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    84cb:	e8 00 00 00 00       	callq  84d0 <pci_bus_read_config_word+0x128>
			84cc: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    84d0:	8b 45 8c             	mov    0xffffffffffffff8c(%rbp),%eax
    84d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			84d6: R_X86_64_32S	.rodata.str1.1+0x183e
    84da:	48 89 5d a8          	mov    %rbx,0xffffffffffffffa8(%rbp)
    84de:	44 89 7d c8          	mov    %r15d,0xffffffffffffffc8(%rbp)
    84e2:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    84e5:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
    84e9:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    84ed:	e8 00 00 00 00       	callq  84f2 <pci_bus_read_config_word+0x14a>
			84ee: R_X86_64_PC32	record_function+0xfffffffffffffffc
    84f2:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    84f6:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    84fa:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
    8500:	4c 89 e2             	mov    %r12,%rdx
    8503:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8506: R_X86_64_32S	.rodata.str1.1+0x17fe
    850a:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    8511:	48 89 de             	mov    %rbx,%rsi
    8514:	e8 00 00 00 00       	callq  8519 <pci_bus_read_config_word+0x171>
			8515: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    8519:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
    851d:	b9 04 00 00 00       	mov    $0x4,%ecx
    8522:	4c 89 e2             	mov    %r12,%rdx
    8525:	48 89 de             	mov    %rbx,%rsi
    8528:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			852b: R_X86_64_32S	.rodata.str1.1+0x17fe
    852f:	e8 00 00 00 00       	callq  8534 <pci_bus_read_config_word+0x18c>
			8530: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    8534:	4d 89 e8             	mov    %r13,%r8
    8537:	b9 04 00 00 00       	mov    $0x4,%ecx
    853c:	4c 89 e2             	mov    %r12,%rdx
    853f:	48 89 de             	mov    %rbx,%rsi
    8542:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8545: R_X86_64_32S	.rodata.str1.1+0x17fe
    8549:	e8 00 00 00 00       	callq  854e <pci_bus_read_config_word+0x1a6>
			854a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    854e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    8554:	4c 89 f1             	mov    %r14,%rcx
    8557:	4c 89 e2             	mov    %r12,%rdx
    855a:	48 89 de             	mov    %rbx,%rsi
    855d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8560: R_X86_64_32S	.rodata.str1.1+0x17fe
    8564:	e8 00 00 00 00       	callq  8569 <pci_bus_read_config_word+0x1c1>
			8565: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    8569:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    856d:	48 85 c0             	test   %rax,%rax
    8570:	74 1a                	je     858c <pci_bus_read_config_word+0x1e4>
    8572:	49 89 c0             	mov    %rax,%r8
    8575:	b9 02 00 00 00       	mov    $0x2,%ecx
    857a:	4c 89 e2             	mov    %r12,%rdx
    857d:	48 89 de             	mov    %rbx,%rsi
    8580:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8583: R_X86_64_32S	.rodata.str1.1+0x17fe
    8587:	e8 00 00 00 00       	callq  858c <pci_bus_read_config_word+0x1e4>
			8588: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    858c:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
    8590:	48 89 de             	mov    %rbx,%rsi
    8593:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8596: R_X86_64_32S	.rodata.str1.1+0x17fe
    859a:	b9 04 00 00 00       	mov    $0x4,%ecx
    859f:	4c 89 e2             	mov    %r12,%rdx
    85a2:	e8 00 00 00 00       	callq  85a7 <pci_bus_read_config_word+0x1ff>
			85a3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    85a7:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    85ab:	8b 5d c4             	mov    0xffffffffffffffc4(%rbp),%ebx
    85ae:	48 85 ff             	test   %rdi,%rdi
    85b1:	74 05                	je     85b8 <pci_bus_read_config_word+0x210>
    85b3:	e8 00 00 00 00       	callq  85b8 <pci_bus_read_config_word+0x210>
			85b4: R_X86_64_PC32	kfree+0xfffffffffffffffc
    85b8:	48 83 c4 58          	add    $0x58,%rsp
    85bc:	89 d8                	mov    %ebx,%eax
    85be:	5b                   	pop    %rbx
    85bf:	41 5c                	pop    %r12
    85c1:	41 5d                	pop    %r13
    85c3:	41 5e                	pop    %r14
    85c5:	41 5f                	pop    %r15
    85c7:	c9                   	leaveq 
    85c8:	c3                   	retq   

00000000000085c9 <__phys_addr>:
    85c9:	55                   	push   %rbp
    85ca:	48 89 e5             	mov    %rsp,%rbp
    85cd:	41 56                	push   %r14
    85cf:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    85d3:	41 55                	push   %r13
    85d5:	4c 8d 6d d0          	lea    0xffffffffffffffd0(%rbp),%r13
    85d9:	41 54                	push   %r12
    85db:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    85df:	53                   	push   %rbx
    85e0:	48 89 fb             	mov    %rdi,%rbx
    85e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			85e6: R_X86_64_32S	.rodata.str1.1+0x1865
    85ea:	48 83 ec 30          	sub    $0x30,%rsp
    85ee:	e8 00 00 00 00       	callq  85f3 <__phys_addr+0x2a>
			85ef: R_X86_64_PC32	record_function+0xfffffffffffffffc
    85f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			85f6: R_X86_64_32S	.rodata.str1.1+0x1871
    85fa:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    85fe:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    8605:	00 
    8606:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    860d:	00 
    860e:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    8615:	e8 00 00 00 00       	callq  861a <__phys_addr+0x51>
			8616: R_X86_64_PC32	record_function+0xfffffffffffffffc
    861a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    8620:	4c 89 f1             	mov    %r14,%rcx
    8623:	4c 89 e2             	mov    %r12,%rdx
    8626:	4c 89 ee             	mov    %r13,%rsi
    8629:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			862c: R_X86_64_32S	.rodata.str1.1+0x1865
    8630:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    8637:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    863e:	00 
    863f:	e8 00 00 00 00       	callq  8644 <__phys_addr+0x7b>
			8640: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8644:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    8648:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    864c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			864f: R_X86_64_32S	.rodata.str1.1+0x1865
    8653:	48 c7 45 b0 5c 04 00 	movq   $0x45c,0xffffffffffffffb0(%rbp)
    865a:	00 
    865b:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    865f:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    8662:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    8665:	e8 00 00 00 00       	callq  866a <__phys_addr+0xa1>
			8666: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    866a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			866d: R_X86_64_32S	.rodata.str1.1+0x188b
    8671:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    8675:	e8 00 00 00 00       	callq  867a <__phys_addr+0xb1>
			8676: R_X86_64_PC32	record_function+0xfffffffffffffffc
    867a:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    867e:	4d 89 e8             	mov    %r13,%r8
    8681:	b9 08 00 00 00       	mov    $0x8,%ecx
    8686:	4c 89 e2             	mov    %r12,%rdx
    8689:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			868c: R_X86_64_32S	.rodata.str1.1+0x1865
    8690:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    8697:	48 89 de             	mov    %rbx,%rsi
    869a:	e8 00 00 00 00       	callq  869f <__phys_addr+0xd6>
			869b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    869f:	48 89 de             	mov    %rbx,%rsi
    86a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			86a5: R_X86_64_32S	.rodata.str1.1+0x1865
    86a9:	4d 89 f0             	mov    %r14,%r8
    86ac:	b9 08 00 00 00       	mov    $0x8,%ecx
    86b1:	4c 89 e2             	mov    %r12,%rdx
    86b4:	e8 00 00 00 00       	callq  86b9 <__phys_addr+0xf0>
			86b5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    86b9:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    86bd:	48 8b 5d c8          	mov    0xffffffffffffffc8(%rbp),%rbx
    86c1:	48 85 ff             	test   %rdi,%rdi
    86c4:	74 05                	je     86cb <__phys_addr+0x102>
    86c6:	e8 00 00 00 00       	callq  86cb <__phys_addr+0x102>
			86c7: R_X86_64_PC32	kfree+0xfffffffffffffffc
    86cb:	48 83 c4 30          	add    $0x30,%rsp
    86cf:	48 89 d8             	mov    %rbx,%rax
    86d2:	5b                   	pop    %rbx
    86d3:	41 5c                	pop    %r12
    86d5:	41 5d                	pop    %r13
    86d7:	41 5e                	pop    %r14
    86d9:	c9                   	leaveq 
    86da:	c3                   	retq   

00000000000086db <del_timer_sync>:
    86db:	55                   	push   %rbp
    86dc:	48 89 e5             	mov    %rsp,%rbp
    86df:	41 56                	push   %r14
    86e1:	4c 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%r14
    86e5:	41 55                	push   %r13
    86e7:	4c 8d 6d d0          	lea    0xffffffffffffffd0(%rbp),%r13
    86eb:	41 54                	push   %r12
    86ed:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    86f1:	53                   	push   %rbx
    86f2:	48 89 fb             	mov    %rdi,%rbx
    86f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			86f8: R_X86_64_32S	.rodata.str1.1+0x18a5
    86fc:	48 83 ec 30          	sub    $0x30,%rsp
    8700:	e8 00 00 00 00       	callq  8705 <del_timer_sync+0x2a>
			8701: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8705:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8708: R_X86_64_32S	.rodata.str1.1+0x18b4
    870c:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    8713:	00 
    8714:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    871b:	00 
    871c:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    8723:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    8727:	e8 00 00 00 00       	callq  872c <del_timer_sync+0x51>
			8728: R_X86_64_PC32	record_function+0xfffffffffffffffc
    872c:	4c 89 e9             	mov    %r13,%rcx
    872f:	4c 89 f2             	mov    %r14,%rdx
    8732:	4c 89 e6             	mov    %r12,%rsi
    8735:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8738: R_X86_64_32S	.rodata.str1.1+0x18a5
    873c:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    8743:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    874a:	00 
    874b:	e8 00 00 00 00       	callq  8750 <del_timer_sync+0x75>
			874c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    8750:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    8754:	48 85 c0             	test   %rax,%rax
    8757:	74 56                	je     87af <del_timer_sync+0xd4>
    8759:	48 8d 48 10          	lea    0x10(%rax),%rcx
    875d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    8763:	4c 89 f2             	mov    %r14,%rdx
    8766:	4c 89 e6             	mov    %r12,%rsi
    8769:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			876c: R_X86_64_32S	.rodata.str1.1+0x18a5
    8770:	e8 00 00 00 00       	callq  8775 <del_timer_sync+0x9a>
			8771: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8775:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    8779:	4c 89 f2             	mov    %r14,%rdx
    877c:	4c 89 e6             	mov    %r12,%rsi
    877f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8782: R_X86_64_32S	.rodata.str1.1+0x18a5
    8786:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    878c:	48 83 c1 20          	add    $0x20,%rcx
    8790:	e8 00 00 00 00       	callq  8795 <del_timer_sync+0xba>
			8791: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8795:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    8799:	4c 89 f2             	mov    %r14,%rdx
    879c:	4c 89 e6             	mov    %r12,%rsi
    879f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			87a2: R_X86_64_32S	.rodata.str1.1+0x18a5
    87a6:	48 83 c1 18          	add    $0x18,%rcx
    87aa:	e8 00 00 00 00       	callq  87af <del_timer_sync+0xd4>
			87ab: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    87af:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    87b3:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    87b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			87ba: R_X86_64_32S	.rodata.str1.1+0x18a5
    87be:	48 c7 45 b0 78 04 00 	movq   $0x478,0xffffffffffffffb0(%rbp)
    87c5:	00 
    87c6:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    87ca:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    87cd:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    87d0:	e8 00 00 00 00       	callq  87d5 <del_timer_sync+0xfa>
			87d1: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    87d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			87d8: R_X86_64_32S	.rodata.str1.1+0x18d1
    87dc:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    87e0:	e8 00 00 00 00       	callq  87e5 <del_timer_sync+0x10a>
			87e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    87e5:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    87e9:	41 b8 30 00 00 00    	mov    $0x30,%r8d
    87ef:	4c 89 e1             	mov    %r12,%rcx
    87f2:	4c 89 ea             	mov    %r13,%rdx
    87f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			87f8: R_X86_64_32S	.rodata.str1.1+0x18a5
    87fc:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
    8803:	48 89 de             	mov    %rbx,%rsi
    8806:	e8 00 00 00 00       	callq  880b <del_timer_sync+0x130>
			8807: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    880b:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    880f:	48 85 c0             	test   %rax,%rax
    8812:	74 5a                	je     886e <del_timer_sync+0x193>
    8814:	4c 8d 40 10          	lea    0x10(%rax),%r8
    8818:	b9 08 00 00 00       	mov    $0x8,%ecx
    881d:	4c 89 ea             	mov    %r13,%rdx
    8820:	48 89 de             	mov    %rbx,%rsi
    8823:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8826: R_X86_64_32S	.rodata.str1.1+0x18a5
    882a:	e8 00 00 00 00       	callq  882f <del_timer_sync+0x154>
			882b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    882f:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    8833:	b9 08 00 00 00       	mov    $0x8,%ecx
    8838:	4c 89 ea             	mov    %r13,%rdx
    883b:	48 89 de             	mov    %rbx,%rsi
    883e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8841: R_X86_64_32S	.rodata.str1.1+0x18a5
    8845:	49 83 c0 20          	add    $0x20,%r8
    8849:	e8 00 00 00 00       	callq  884e <del_timer_sync+0x173>
			884a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    884e:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    8852:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8858:	4c 89 ea             	mov    %r13,%rdx
    885b:	48 89 de             	mov    %rbx,%rsi
    885e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8861: R_X86_64_32S	.rodata.str1.1+0x18a5
    8865:	48 83 c1 18          	add    $0x18,%rcx
    8869:	e8 00 00 00 00       	callq  886e <del_timer_sync+0x193>
			886a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    886e:	48 89 de             	mov    %rbx,%rsi
    8871:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8874: R_X86_64_32S	.rodata.str1.1+0x18a5
    8878:	4d 89 f0             	mov    %r14,%r8
    887b:	b9 04 00 00 00       	mov    $0x4,%ecx
    8880:	4c 89 ea             	mov    %r13,%rdx
    8883:	e8 00 00 00 00       	callq  8888 <del_timer_sync+0x1ad>
			8884: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    8888:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    888c:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
    888f:	48 85 ff             	test   %rdi,%rdi
    8892:	74 05                	je     8899 <del_timer_sync+0x1be>
    8894:	e8 00 00 00 00       	callq  8899 <del_timer_sync+0x1be>
			8895: R_X86_64_PC32	kfree+0xfffffffffffffffc
    8899:	48 83 c4 30          	add    $0x30,%rsp
    889d:	89 d8                	mov    %ebx,%eax
    889f:	5b                   	pop    %rbx
    88a0:	41 5c                	pop    %r12
    88a2:	41 5d                	pop    %r13
    88a4:	41 5e                	pop    %r14
    88a6:	c9                   	leaveq 
    88a7:	c3                   	retq   

00000000000088a8 <round_jiffies>:
    88a8:	55                   	push   %rbp
    88a9:	48 89 e5             	mov    %rsp,%rbp
    88ac:	41 56                	push   %r14
    88ae:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    88b2:	41 55                	push   %r13
    88b4:	4c 8d 6d d0          	lea    0xffffffffffffffd0(%rbp),%r13
    88b8:	41 54                	push   %r12
    88ba:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
    88be:	53                   	push   %rbx
    88bf:	48 89 fb             	mov    %rdi,%rbx
    88c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			88c5: R_X86_64_32S	.rodata.str1.1+0x18ee
    88c9:	48 83 ec 30          	sub    $0x30,%rsp
    88cd:	e8 00 00 00 00       	callq  88d2 <round_jiffies+0x2a>
			88ce: R_X86_64_PC32	record_function+0xfffffffffffffffc
    88d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			88d5: R_X86_64_32S	.rodata.str1.1+0x18fc
    88d9:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    88dd:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    88e4:	00 
    88e5:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    88ec:	00 
    88ed:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    88f4:	e8 00 00 00 00       	callq  88f9 <round_jiffies+0x51>
			88f5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    88f9:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    88ff:	4c 89 f1             	mov    %r14,%rcx
    8902:	4c 89 e2             	mov    %r12,%rdx
    8905:	4c 89 ee             	mov    %r13,%rsi
    8908:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			890b: R_X86_64_32S	.rodata.str1.1+0x18ee
    890f:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    8916:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    891d:	00 
    891e:	e8 00 00 00 00       	callq  8923 <round_jiffies+0x7b>
			891f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8923:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    8927:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    892b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			892e: R_X86_64_32S	.rodata.str1.1+0x18ee
    8932:	48 c7 45 b0 39 06 00 	movq   $0x639,0xffffffffffffffb0(%rbp)
    8939:	00 
    893a:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    893e:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    8941:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    8944:	e8 00 00 00 00       	callq  8949 <round_jiffies+0xa1>
			8945: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    8949:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			894c: R_X86_64_32S	.rodata.str1.1+0x1918
    8950:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    8954:	e8 00 00 00 00       	callq  8959 <round_jiffies+0xb1>
			8955: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8959:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    895d:	4d 89 e8             	mov    %r13,%r8
    8960:	b9 08 00 00 00       	mov    $0x8,%ecx
    8965:	4c 89 e2             	mov    %r12,%rdx
    8968:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			896b: R_X86_64_32S	.rodata.str1.1+0x18ee
    896f:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    8976:	48 89 de             	mov    %rbx,%rsi
    8979:	e8 00 00 00 00       	callq  897e <round_jiffies+0xd6>
			897a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    897e:	48 89 de             	mov    %rbx,%rsi
    8981:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8984: R_X86_64_32S	.rodata.str1.1+0x18ee
    8988:	4d 89 f0             	mov    %r14,%r8
    898b:	b9 08 00 00 00       	mov    $0x8,%ecx
    8990:	4c 89 e2             	mov    %r12,%rdx
    8993:	e8 00 00 00 00       	callq  8998 <round_jiffies+0xf0>
			8994: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    8998:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    899c:	48 8b 5d c8          	mov    0xffffffffffffffc8(%rbp),%rbx
    89a0:	48 85 ff             	test   %rdi,%rdi
    89a3:	74 05                	je     89aa <round_jiffies+0x102>
    89a5:	e8 00 00 00 00       	callq  89aa <round_jiffies+0x102>
			89a6: R_X86_64_PC32	kfree+0xfffffffffffffffc
    89aa:	48 83 c4 30          	add    $0x30,%rsp
    89ae:	48 89 d8             	mov    %rbx,%rax
    89b1:	5b                   	pop    %rbx
    89b2:	41 5c                	pop    %r12
    89b4:	41 5d                	pop    %r13
    89b6:	41 5e                	pop    %r14
    89b8:	c9                   	leaveq 
    89b9:	c3                   	retq   

00000000000089ba <e1000_irq_disable>:
    89ba:	55                   	push   %rbp
    89bb:	48 89 e5             	mov    %rsp,%rbp
    89be:	41 55                	push   %r13
    89c0:	41 54                	push   %r12
    89c2:	49 89 fc             	mov    %rdi,%r12
    89c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			89c8: R_X86_64_32S	.rodata.str1.1+0x1934
    89cc:	53                   	push   %rbx
    89cd:	48 83 ec 38          	sub    $0x38,%rsp
    89d1:	e8 00 00 00 00       	callq  89d6 <e1000_irq_disable+0x1c>
			89d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    89d6:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    89dd:	00 
    89de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			89e1: R_X86_64_32S	.rodata.str1.1+0xb4
    89e5:	e8 00 00 00 00       	callq  89ea <e1000_irq_disable+0x30>
			89e6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    89ea:	83 c8 ff             	or     $0xffffffffffffffff,%eax
    89ed:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
    89f4:	89 03                	mov    %eax,(%rbx)
    89f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			89f9: R_X86_64_32S	.rodata.str1.1+0xae
    89fd:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    8a04:	00 
    8a05:	e8 00 00 00 00       	callq  8a0a <e1000_irq_disable+0x50>
			8a06: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8a0a:	8b 43 08             	mov    0x8(%rbx),%eax
    8a0d:	49 8b 84 24 f8 02 00 	mov    0x2f8(%r12),%rax
    8a14:	00 
    8a15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8a18: R_X86_64_32S	.rodata.str1.1+0x1946
    8a1c:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    8a20:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
    8a24:	44 8b a8 fc 02 00 00 	mov    0x2fc(%rax),%r13d
    8a2b:	e8 00 00 00 00       	callq  8a30 <e1000_irq_disable+0x76>
			8a2c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8a30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8a33: R_X86_64_32S	.rodata.str1.1+0x1956
    8a37:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    8a3e:	00 
    8a3f:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    8a46:	00 
    8a47:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    8a4e:	44 89 6d d8          	mov    %r13d,0xffffffffffffffd8(%rbp)
    8a52:	e8 00 00 00 00       	callq  8a57 <e1000_irq_disable+0x9d>
			8a53: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8a57:	48 8d 75 d0          	lea    0xffffffffffffffd0(%rbp),%rsi
    8a5b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    8a61:	4c 89 e1             	mov    %r12,%rcx
    8a64:	48 89 da             	mov    %rbx,%rdx
    8a67:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8a6a: R_X86_64_32S	.rodata.str1.1+0x1946
    8a6e:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    8a75:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
    8a7c:	00 
    8a7d:	e8 00 00 00 00       	callq  8a82 <e1000_irq_disable+0xc8>
			8a7e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8a82:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    8a86:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    8a8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8a8d: R_X86_64_32S	.rodata.str1.1+0x1946
    8a91:	48 c7 45 b0 3b 07 00 	movq   $0x73b,0xffffffffffffffb0(%rbp)
    8a98:	00 
    8a99:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    8a9d:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    8aa0:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    8aa3:	e8 00 00 00 00       	callq  8aa8 <e1000_irq_disable+0xee>
			8aa4: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    8aa8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8aab: R_X86_64_32S	.rodata.str1.1+0x1974
    8aaf:	44 89 6d dc          	mov    %r13d,0xffffffffffffffdc(%rbp)
    8ab3:	e8 00 00 00 00       	callq  8ab8 <e1000_irq_disable+0xfe>
			8ab4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8ab8:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
    8abc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8abf: R_X86_64_32S	.rodata.str1.1+0x1946
    8ac3:	49 89 d8             	mov    %rbx,%r8
    8ac6:	b9 04 00 00 00       	mov    $0x4,%ecx
    8acb:	4c 89 e2             	mov    %r12,%rdx
    8ace:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    8ad5:	e8 00 00 00 00       	callq  8ada <e1000_irq_disable+0x120>
			8ad6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    8ada:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    8ade:	48 85 ff             	test   %rdi,%rdi
    8ae1:	74 05                	je     8ae8 <e1000_irq_disable+0x12e>
    8ae3:	e8 00 00 00 00       	callq  8ae8 <e1000_irq_disable+0x12e>
			8ae4: R_X86_64_PC32	kfree+0xfffffffffffffffc
    8ae8:	48 83 c4 38          	add    $0x38,%rsp
    8aec:	5b                   	pop    %rbx
    8aed:	41 5c                	pop    %r12
    8aef:	41 5d                	pop    %r13
    8af1:	c9                   	leaveq 
    8af2:	c3                   	retq   

0000000000008af3 <e1000_vlan_rx_kill_vid>:
    8af3:	55                   	push   %rbp
    8af4:	48 89 e5             	mov    %rsp,%rbp
    8af7:	41 57                	push   %r15
    8af9:	41 56                	push   %r14
    8afb:	41 55                	push   %r13
    8afd:	41 89 f5             	mov    %esi,%r13d
    8b00:	41 54                	push   %r12
    8b02:	49 89 fc             	mov    %rdi,%r12
    8b05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8b08: R_X86_64_32S	.rodata.str1.1+0x1992
    8b0c:	53                   	push   %rbx
    8b0d:	49 8d 9c 24 00 08 00 	lea    0x800(%r12),%rbx
    8b14:	00 
    8b15:	48 83 ec 08          	sub    $0x8,%rsp
    8b19:	e8 00 00 00 00       	callq  8b1e <e1000_vlan_rx_kill_vid+0x2b>
			8b1a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8b1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8b21: R_X86_64_32S	.rodata.str1.1+0x1be
    8b25:	e8 00 00 00 00       	callq  8b2a <e1000_vlan_rx_kill_vid+0x37>
			8b26: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8b2a:	49 8d 84 24 b8 0b 00 	lea    0xbb8(%r12),%rax
    8b31:	00 
    8b32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8b35: R_X86_64_32S	.rodata.str1.1+0x15d4
    8b39:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
    8b3d:	e8 00 00 00 00       	callq  8b42 <e1000_vlan_rx_kill_vid+0x4f>
			8b3e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8b42:	41 f6 84 24 c8 0f 00 	testb  $0x4,0xfc8(%r12)
    8b49:	00 04 
    8b4b:	75 08                	jne    8b55 <e1000_vlan_rx_kill_vid+0x62>
    8b4d:	48 89 df             	mov    %rbx,%rdi
    8b50:	e8 65 fe ff ff       	callq  89ba <e1000_irq_disable>
    8b55:	4c 8b b3 90 00 00 00 	mov    0x90(%rbx),%r14
    8b5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8b5f: R_X86_64_32S	.rodata.str1.1+0x19a9
    8b63:	45 0f b7 fd          	movzwl %r13w,%r15d
    8b67:	e8 00 00 00 00       	callq  8b6c <e1000_vlan_rx_kill_vid+0x79>
			8b68: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8b6c:	4d 85 f6             	test   %r14,%r14
    8b6f:	74 21                	je     8b92 <e1000_vlan_rx_kill_vid+0x9f>
    8b71:	44 89 fa             	mov    %r15d,%edx
    8b74:	4c 89 f8             	mov    %r15,%rax
    8b77:	c1 ea 09             	shr    $0x9,%edx
    8b7a:	25 ff 01 00 00       	and    $0x1ff,%eax
    8b7f:	48 63 d2             	movslq %edx,%rdx
    8b82:	48 c1 e0 03          	shl    $0x3,%rax
    8b86:	49 03 44 d6 20       	add    0x20(%r14,%rdx,8),%rax
    8b8b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8b92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8b95: R_X86_64_32S	.rodata.str1.1+0x15d4
    8b99:	e8 00 00 00 00       	callq  8b9e <e1000_vlan_rx_kill_vid+0xab>
			8b9a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8b9e:	41 f6 84 24 c8 0f 00 	testb  $0x4,0xfc8(%r12)
    8ba5:	00 04 
    8ba7:	75 08                	jne    8bb1 <e1000_vlan_rx_kill_vid+0xbe>
    8ba9:	48 89 df             	mov    %rbx,%rdi
    8bac:	e8 e8 86 ff ff       	callq  1299 <e1000_irq_enable>
    8bb1:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
    8bb5:	f6 82 c4 00 00 00 02 	testb  $0x2,0xc4(%rdx)
    8bbc:	74 14                	je     8bd2 <e1000_vlan_rx_kill_vid+0xdf>
    8bbe:	66 44 3b ab 98 00 00 	cmp    0x98(%rbx),%r13w
    8bc5:	00 
    8bc6:	75 0a                	jne    8bd2 <e1000_vlan_rx_kill_vid+0xdf>
    8bc8:	48 89 df             	mov    %rbx,%rdi
    8bcb:	e8 16 86 ff ff       	callq  11e6 <e1000_release_hw_control>
    8bd0:	eb 63                	jmp    8c35 <e1000_vlan_rx_kill_vid+0x142>
    8bd2:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    8bd6:	66 41 c1 ed 05       	shr    $0x5,%r13w
    8bdb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8bde: R_X86_64_32S	.rodata.str1.1+0xae
    8be2:	41 83 e5 7f          	and    $0x7f,%r13d
    8be6:	8b 41 10             	mov    0x10(%rcx),%eax
    8be9:	4c 8b 21             	mov    (%rcx),%r12
    8bec:	83 f8 03             	cmp    $0x3,%eax
    8bef:	19 db                	sbb    %ebx,%ebx
    8bf1:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
    8bf7:	81 c3 00 56 00 00    	add    $0x5600,%ebx
    8bfd:	e8 00 00 00 00       	callq  8c02 <e1000_vlan_rx_kill_vid+0x10f>
			8bfe: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8c02:	42 8d 04 ad 00 00 00 	lea    0x0(,%r13,4),%eax
    8c09:	00 
    8c0a:	48 63 db             	movslq %ebx,%rbx
    8c0d:	49 01 dc             	add    %rbx,%r12
    8c10:	89 c0                	mov    %eax,%eax
    8c12:	49 01 c4             	add    %rax,%r12
    8c15:	41 8b 14 24          	mov    (%r12),%edx
    8c19:	41 83 e7 1f          	and    $0x1f,%r15d
    8c1d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    8c22:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
    8c26:	44 88 f9             	mov    %r15b,%cl
    8c29:	44 89 ee             	mov    %r13d,%esi
    8c2c:	d3 c0                	rol    %cl,%eax
    8c2e:	21 c2                	and    %eax,%edx
    8c30:	e8 07 76 ff ff       	callq  23c <e1000_write_vfta>
    8c35:	41 5b                	pop    %r11
    8c37:	5b                   	pop    %rbx
    8c38:	41 5c                	pop    %r12
    8c3a:	41 5d                	pop    %r13
    8c3c:	41 5e                	pop    %r14
    8c3e:	41 5f                	pop    %r15
    8c40:	c9                   	leaveq 
    8c41:	c3                   	retq   

0000000000008c42 <e1000_update_mng_vlan>:
    8c42:	55                   	push   %rbp
    8c43:	48 89 e5             	mov    %rsp,%rbp
    8c46:	41 57                	push   %r15
    8c48:	41 56                	push   %r14
    8c4a:	41 55                	push   %r13
    8c4c:	41 54                	push   %r12
    8c4e:	53                   	push   %rbx
    8c4f:	48 89 fb             	mov    %rdi,%rbx
    8c52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8c55: R_X86_64_32S	.rodata.str1.1+0x19bf
    8c59:	48 83 ec 18          	sub    $0x18,%rsp
    8c5d:	e8 00 00 00 00       	callq  8c62 <e1000_update_mng_vlan+0x20>
			8c5e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8c62:	48 8d 83 b8 03 00 00 	lea    0x3b8(%rbx),%rax
    8c69:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
    8c6d:	48 8b 83 f0 02 00 00 	mov    0x2f0(%rbx),%rax
    8c74:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
    8c78:	4c 8b b3 90 00 00 00 	mov    0x90(%rbx),%r14
    8c7f:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    8c83:	44 8b bb 98 00 00 00 	mov    0x98(%rbx),%r15d
    8c8a:	4d 85 f6             	test   %r14,%r14
    8c8d:	66 44 8b a0 c6 00 00 	mov    0xc6(%rax),%r12w
    8c94:	00 
    8c95:	0f 84 c8 00 00 00    	je     8d63 <e1000_update_mng_vlan+0x121>
    8c9b:	41 0f b7 c4          	movzwl %r12w,%eax
    8c9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8ca2: R_X86_64_32S	.rodata.str1.1+0x19d5
    8ca6:	41 89 c5             	mov    %eax,%r13d
    8ca9:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
    8cac:	e8 00 00 00 00       	callq  8cb1 <e1000_update_mng_vlan+0x6f>
			8cad: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8cb1:	44 89 e8             	mov    %r13d,%eax
    8cb4:	66 c1 e8 09          	shr    $0x9,%ax
    8cb8:	0f b7 c0             	movzwl %ax,%eax
    8cbb:	49 8b 54 c6 20       	mov    0x20(%r14,%rax,8),%rdx
    8cc0:	48 85 d2             	test   %rdx,%rdx
    8cc3:	74 1c                	je     8ce1 <e1000_update_mng_vlan+0x9f>
    8cc5:	4c 89 e8             	mov    %r13,%rax
    8cc8:	25 ff 01 00 00       	and    $0x1ff,%eax
    8ccd:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
    8cd2:	74 0d                	je     8ce1 <e1000_update_mng_vlan+0x9f>
    8cd4:	66 44 89 a3 98 00 00 	mov    %r12w,0x98(%rbx)
    8cdb:	00 
    8cdc:	e9 82 00 00 00       	jmpq   8d63 <e1000_update_mng_vlan+0x121>
    8ce1:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    8ce5:	f6 80 c4 00 00 00 02 	testb  $0x2,0xc4(%rax)
    8cec:	74 16                	je     8d04 <e1000_update_mng_vlan+0xc2>
    8cee:	8b 75 c4             	mov    0xffffffffffffffc4(%rbp),%esi
    8cf1:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
    8cf5:	e8 37 7d ff ff       	callq  a31 <e1000_vlan_rx_add_vid>
    8cfa:	66 44 89 a3 98 00 00 	mov    %r12w,0x98(%rbx)
    8d01:	00 
    8d02:	eb 09                	jmp    8d0d <e1000_update_mng_vlan+0xcb>
    8d04:	66 c7 83 98 00 00 00 	movw   $0xffff,0x98(%rbx)
    8d0b:	ff ff 
    8d0d:	66 41 83 ff ff       	cmp    $0xffffffffffffffff,%r15w
    8d12:	74 4f                	je     8d63 <e1000_update_mng_vlan+0x121>
    8d14:	66 45 39 fc          	cmp    %r15w,%r12w
    8d18:	74 49                	je     8d63 <e1000_update_mng_vlan+0x121>
    8d1a:	45 0f b7 ef          	movzwl %r15w,%r13d
    8d1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8d21: R_X86_64_32S	.rodata.str1.1+0x19d5
    8d25:	48 8b 9b 90 00 00 00 	mov    0x90(%rbx),%rbx
    8d2c:	e8 00 00 00 00       	callq  8d31 <e1000_update_mng_vlan+0xef>
			8d2d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8d31:	44 89 e8             	mov    %r13d,%eax
    8d34:	45 89 ec             	mov    %r13d,%r12d
    8d37:	66 c1 e8 09          	shr    $0x9,%ax
    8d3b:	0f b7 c0             	movzwl %ax,%eax
    8d3e:	48 8b 54 c3 20       	mov    0x20(%rbx,%rax,8),%rdx
    8d43:	48 85 d2             	test   %rdx,%rdx
    8d46:	74 0f                	je     8d57 <e1000_update_mng_vlan+0x115>
    8d48:	4c 89 e0             	mov    %r12,%rax
    8d4b:	25 ff 01 00 00       	and    $0x1ff,%eax
    8d50:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
    8d55:	75 0c                	jne    8d63 <e1000_update_mng_vlan+0x121>
    8d57:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
    8d5b:	44 89 ee             	mov    %r13d,%esi
    8d5e:	e8 90 fd ff ff       	callq  8af3 <e1000_vlan_rx_kill_vid>
    8d63:	48 83 c4 18          	add    $0x18,%rsp
    8d67:	5b                   	pop    %rbx
    8d68:	41 5c                	pop    %r12
    8d6a:	41 5d                	pop    %r13
    8d6c:	41 5e                	pop    %r14
    8d6e:	41 5f                	pop    %r15
    8d70:	c9                   	leaveq 
    8d71:	c3                   	retq   

0000000000008d72 <e1000_vlan_rx_register>:
    8d72:	55                   	push   %rbp
    8d73:	48 89 e5             	mov    %rsp,%rbp
    8d76:	41 56                	push   %r14
    8d78:	41 55                	push   %r13
    8d7a:	49 89 fd             	mov    %rdi,%r13
    8d7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8d80: R_X86_64_32S	.rodata.str1.1+0x19eb
    8d84:	4d 8d b5 00 08 00 00 	lea    0x800(%r13),%r14
    8d8b:	41 54                	push   %r12
    8d8d:	53                   	push   %rbx
    8d8e:	48 89 f3             	mov    %rsi,%rbx
    8d91:	e8 00 00 00 00       	callq  8d96 <e1000_vlan_rx_register+0x24>
			8d92: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8d96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8d99: R_X86_64_32S	.rodata.str1.1+0x1be
    8d9d:	e8 00 00 00 00       	callq  8da2 <e1000_vlan_rx_register+0x30>
			8d9e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8da2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8da5: R_X86_64_32S	.rodata.str1.1+0x15d4
    8da9:	e8 00 00 00 00       	callq  8dae <e1000_vlan_rx_register+0x3c>
			8daa: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8dae:	41 f6 85 c8 0f 00 00 	testb  $0x4,0xfc8(%r13)
    8db5:	04 
    8db6:	75 08                	jne    8dc0 <e1000_vlan_rx_register+0x4e>
    8db8:	4c 89 f7             	mov    %r14,%rdi
    8dbb:	e8 fa fb ff ff       	callq  89ba <e1000_irq_disable>
    8dc0:	48 85 db             	test   %rbx,%rbx
    8dc3:	49 89 9e 90 00 00 00 	mov    %rbx,0x90(%r14)
    8dca:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
    8dd1:	0f 84 81 00 00 00    	je     8e58 <e1000_vlan_rx_register+0xe6>
    8dd7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8dda: R_X86_64_32S	.rodata.str1.1+0xae
    8dde:	e8 00 00 00 00       	callq  8de3 <e1000_vlan_rx_register+0x71>
			8ddf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8de3:	8b 1b                	mov    (%rbx),%ebx
    8de5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8de8: R_X86_64_32S	.rodata.str1.1+0xb4
    8dec:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
    8df3:	81 cb 00 00 00 40    	or     $0x40000000,%ebx
    8df9:	e8 00 00 00 00       	callq  8dfe <e1000_vlan_rx_register+0x8c>
			8dfa: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8dfe:	41 89 1c 24          	mov    %ebx,(%r12)
    8e02:	41 83 be c8 03 00 00 	cmpl   $0x12,0x3c8(%r14)
    8e09:	12 
    8e0a:	0f 84 9f 00 00 00    	je     8eaf <e1000_vlan_rx_register+0x13d>
    8e10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8e13: R_X86_64_32S	.rodata.str1.1+0xae
    8e17:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
    8e1e:	e8 00 00 00 00       	callq  8e23 <e1000_vlan_rx_register+0xb1>
			8e1f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8e23:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
    8e2a:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
    8e31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8e34: R_X86_64_32S	.rodata.str1.1+0xb4
    8e38:	41 81 e4 ff ff f7 ff 	and    $0xfff7ffff,%r12d
    8e3f:	e8 00 00 00 00       	callq  8e44 <e1000_vlan_rx_register+0xd2>
			8e40: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8e44:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
    8e4b:	44 89 23             	mov    %r12d,(%rbx)
    8e4e:	4c 89 f7             	mov    %r14,%rdi
    8e51:	e8 ec fd ff ff       	callq  8c42 <e1000_update_mng_vlan>
    8e56:	eb 57                	jmp    8eaf <e1000_vlan_rx_register+0x13d>
    8e58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8e5b: R_X86_64_32S	.rodata.str1.1+0xae
    8e5f:	e8 00 00 00 00       	callq  8e64 <e1000_vlan_rx_register+0xf2>
			8e60: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8e64:	8b 1b                	mov    (%rbx),%ebx
    8e66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8e69: R_X86_64_32S	.rodata.str1.1+0xb4
    8e6d:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
    8e74:	81 e3 ff ff ff bf    	and    $0xbfffffff,%ebx
    8e7a:	e8 00 00 00 00       	callq  8e7f <e1000_vlan_rx_register+0x10d>
			8e7b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8e7f:	41 89 1c 24          	mov    %ebx,(%r12)
    8e83:	41 83 be c8 03 00 00 	cmpl   $0x12,0x3c8(%r14)
    8e8a:	12 
    8e8b:	74 22                	je     8eaf <e1000_vlan_rx_register+0x13d>
    8e8d:	41 8b 86 98 00 00 00 	mov    0x98(%r14),%eax
    8e94:	66 83 f8 ff          	cmp    $0xffffffffffffffff,%ax
    8e98:	74 15                	je     8eaf <e1000_vlan_rx_register+0x13d>
    8e9a:	0f b7 f0             	movzwl %ax,%esi
    8e9d:	4c 89 ef             	mov    %r13,%rdi
    8ea0:	e8 4e fc ff ff       	callq  8af3 <e1000_vlan_rx_kill_vid>
    8ea5:	66 41 c7 86 98 00 00 	movw   $0xffff,0x98(%r14)
    8eac:	00 ff ff 
    8eaf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8eb2: R_X86_64_32S	.rodata.str1.1+0x15d4
    8eb6:	e8 00 00 00 00       	callq  8ebb <e1000_vlan_rx_register+0x149>
			8eb7: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8ebb:	41 f6 86 c8 07 00 00 	testb  $0x4,0x7c8(%r14)
    8ec2:	04 
    8ec3:	75 08                	jne    8ecd <e1000_vlan_rx_register+0x15b>
    8ec5:	4c 89 f7             	mov    %r14,%rdi
    8ec8:	e8 cc 83 ff ff       	callq  1299 <e1000_irq_enable>
    8ecd:	5b                   	pop    %rbx
    8ece:	41 5c                	pop    %r12
    8ed0:	41 5d                	pop    %r13
    8ed2:	41 5e                	pop    %r14
    8ed4:	c9                   	leaveq 
    8ed5:	c3                   	retq   

0000000000008ed6 <pci_set_dma_mask>:
    8ed6:	55                   	push   %rbp
    8ed7:	48 89 e5             	mov    %rsp,%rbp
    8eda:	41 57                	push   %r15
    8edc:	49 89 f7             	mov    %rsi,%r15
    8edf:	41 56                	push   %r14
    8ee1:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    8ee5:	41 55                	push   %r13
    8ee7:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    8eeb:	41 54                	push   %r12
    8eed:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
    8ef1:	53                   	push   %rbx
    8ef2:	48 89 fb             	mov    %rdi,%rbx
    8ef5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8ef8: R_X86_64_32S	.rodata.str1.1+0x1a02
    8efc:	48 83 ec 48          	sub    $0x48,%rsp
    8f00:	e8 00 00 00 00       	callq  8f05 <pci_set_dma_mask+0x2f>
			8f01: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8f05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8f08: R_X86_64_32S	.rodata.str1.1+0x1a13
    8f0c:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    8f10:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    8f17:	00 
    8f18:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    8f1f:	00 
    8f20:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    8f27:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
    8f2b:	e8 00 00 00 00       	callq  8f30 <pci_set_dma_mask+0x5a>
			8f2c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8f30:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    8f34:	4c 89 f2             	mov    %r14,%rdx
    8f37:	4c 89 ee             	mov    %r13,%rsi
    8f3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8f3d: R_X86_64_32S	.rodata.str1.1+0x1a02
    8f41:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    8f48:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    8f4f:	00 
    8f50:	e8 00 00 00 00       	callq  8f55 <pci_set_dma_mask+0x7f>
			8f51: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    8f55:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    8f5b:	4c 89 e1             	mov    %r12,%rcx
    8f5e:	4c 89 f2             	mov    %r14,%rdx
    8f61:	4c 89 ee             	mov    %r13,%rsi
    8f64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8f67: R_X86_64_32S	.rodata.str1.1+0x1a02
    8f6b:	e8 00 00 00 00       	callq  8f70 <pci_set_dma_mask+0x9a>
			8f6c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    8f70:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    8f74:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    8f78:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8f7b: R_X86_64_32S	.rodata.str1.1+0x1a02
    8f7f:	48 c7 45 90 23 06 00 	movq   $0x623,0xffffffffffffff90(%rbp)
    8f86:	00 
    8f87:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    8f8b:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    8f8e:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    8f91:	e8 00 00 00 00       	callq  8f96 <pci_set_dma_mask+0xc0>
			8f92: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    8f96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8f99: R_X86_64_32S	.rodata.str1.1+0x1a32
    8f9d:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
    8fa1:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
    8fa5:	e8 00 00 00 00       	callq  8faa <pci_set_dma_mask+0xd4>
			8fa6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    8faa:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
    8fae:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    8fb2:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    8fb8:	4c 89 e2             	mov    %r12,%rdx
    8fbb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8fbe: R_X86_64_32S	.rodata.str1.1+0x1a02
    8fc2:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    8fc9:	48 89 de             	mov    %rbx,%rsi
    8fcc:	e8 00 00 00 00       	callq  8fd1 <pci_set_dma_mask+0xfb>
			8fcd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    8fd1:	48 89 de             	mov    %rbx,%rsi
    8fd4:	4d 89 e8             	mov    %r13,%r8
    8fd7:	b9 08 00 00 00       	mov    $0x8,%ecx
    8fdc:	4c 89 e2             	mov    %r12,%rdx
    8fdf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8fe2: R_X86_64_32S	.rodata.str1.1+0x1a02
    8fe6:	e8 00 00 00 00       	callq  8feb <pci_set_dma_mask+0x115>
			8fe7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    8feb:	48 89 de             	mov    %rbx,%rsi
    8fee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			8ff1: R_X86_64_32S	.rodata.str1.1+0x1a02
    8ff5:	4d 89 f0             	mov    %r14,%r8
    8ff8:	b9 04 00 00 00       	mov    $0x4,%ecx
    8ffd:	4c 89 e2             	mov    %r12,%rdx
    9000:	e8 00 00 00 00       	callq  9005 <pci_set_dma_mask+0x12f>
			9001: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    9005:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    9009:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
    900c:	48 85 ff             	test   %rdi,%rdi
    900f:	74 05                	je     9016 <pci_set_dma_mask+0x140>
    9011:	e8 00 00 00 00       	callq  9016 <pci_set_dma_mask+0x140>
			9012: R_X86_64_PC32	kfree+0xfffffffffffffffc
    9016:	48 83 c4 48          	add    $0x48,%rsp
    901a:	89 d8                	mov    %ebx,%eax
    901c:	5b                   	pop    %rbx
    901d:	41 5c                	pop    %r12
    901f:	41 5d                	pop    %r13
    9021:	41 5e                	pop    %r14
    9023:	41 5f                	pop    %r15
    9025:	c9                   	leaveq 
    9026:	c3                   	retq   

0000000000009027 <e1000_update_stats>:
    9027:	55                   	push   %rbp
    9028:	48 89 e5             	mov    %rsp,%rbp
    902b:	41 56                	push   %r14
    902d:	41 55                	push   %r13
    902f:	41 54                	push   %r12
    9031:	49 89 fc             	mov    %rdi,%r12
    9034:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9037: R_X86_64_32S	.rodata.str1.1+0x1ab5
    903b:	4d 8d ac 24 b8 03 00 	lea    0x3b8(%r12),%r13
    9042:	00 
    9043:	53                   	push   %rbx
    9044:	48 83 ec 10          	sub    $0x10,%rsp
    9048:	e8 00 00 00 00       	callq  904d <e1000_update_stats+0x26>
			9049: R_X86_64_PC32	record_function+0xfffffffffffffffc
    904d:	66 41 83 bc 24 b0 00 	cmpw   $0x0,0xb0(%r12)
    9054:	00 00 00 
    9057:	49 8b 9c 24 f8 02 00 	mov    0x2f8(%r12),%rbx
    905e:	00 
    905f:	0f 84 59 0b 00 00    	je     9bbe <e1000_update_stats+0xb97>
    9065:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9068: R_X86_64_32S	.rodata.str1.1+0x1ac8
    906c:	e8 00 00 00 00       	callq  9071 <e1000_update_stats+0x4a>
			906d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9071:	83 7b 7c 01          	cmpl   $0x1,0x7c(%rbx)
    9075:	0f 85 43 0b 00 00    	jne    9bbe <e1000_update_stats+0xb97>
    907b:	49 8d bc 24 b8 00 00 	lea    0xb8(%r12),%rdi
    9082:	00 
    9083:	e8 00 00 00 00       	callq  9088 <e1000_update_stats+0x61>
			9084: R_X86_64_PC32	.spinlock.text+0x1c0
    9088:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			908b: R_X86_64_32S	.rodata.str1.1+0xae
    908f:	49 89 c6             	mov    %rax,%r14
    9092:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9099:	00 
    909a:	e8 00 00 00 00       	callq  909f <e1000_update_stats+0x78>
			909b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    909f:	8b 83 00 40 00 00    	mov    0x4000(%rbx),%eax
    90a5:	89 c0                	mov    %eax,%eax
    90a7:	49 01 84 24 d8 04 00 	add    %rax,0x4d8(%r12)
    90ae:	00 
    90af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			90b2: R_X86_64_32S	.rodata.str1.1+0xae
    90b6:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    90bd:	00 
    90be:	e8 00 00 00 00       	callq  90c3 <e1000_update_stats+0x9c>
			90bf: R_X86_64_PC32	record_function+0xfffffffffffffffc
    90c3:	8b 83 74 40 00 00    	mov    0x4074(%rbx),%eax
    90c9:	89 c0                	mov    %eax,%eax
    90cb:	49 01 84 24 b0 05 00 	add    %rax,0x5b0(%r12)
    90d2:	00 
    90d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			90d6: R_X86_64_32S	.rodata.str1.1+0xae
    90da:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    90e1:	00 
    90e2:	e8 00 00 00 00       	callq  90e7 <e1000_update_stats+0xc0>
			90e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
    90e7:	8b 83 88 40 00 00    	mov    0x4088(%rbx),%eax
    90ed:	89 c0                	mov    %eax,%eax
    90ef:	49 01 84 24 d0 05 00 	add    %rax,0x5d0(%r12)
    90f6:	00 
    90f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			90fa: R_X86_64_32S	.rodata.str1.1+0xae
    90fe:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9105:	00 
    9106:	e8 00 00 00 00       	callq  910b <e1000_update_stats+0xe4>
			9107: R_X86_64_PC32	record_function+0xfffffffffffffffc
    910b:	8b 83 8c 40 00 00    	mov    0x408c(%rbx),%eax
    9111:	89 c0                	mov    %eax,%eax
    9113:	49 01 84 24 d8 05 00 	add    %rax,0x5d8(%r12)
    911a:	00 
    911b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			911e: R_X86_64_32S	.rodata.str1.1+0xae
    9122:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9129:	00 
    912a:	e8 00 00 00 00       	callq  912f <e1000_update_stats+0x108>
			912b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    912f:	8b 83 78 40 00 00    	mov    0x4078(%rbx),%eax
    9135:	89 c0                	mov    %eax,%eax
    9137:	49 01 84 24 b8 05 00 	add    %rax,0x5b8(%r12)
    913e:	00 
    913f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9142: R_X86_64_32S	.rodata.str1.1+0xae
    9146:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    914d:	00 
    914e:	e8 00 00 00 00       	callq  9153 <e1000_update_stats+0x12c>
			914f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9153:	8b 83 7c 40 00 00    	mov    0x407c(%rbx),%eax
    9159:	89 c0                	mov    %eax,%eax
    915b:	49 01 84 24 c0 05 00 	add    %rax,0x5c0(%r12)
    9162:	00 
    9163:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9166: R_X86_64_32S	.rodata.str1.1+0xae
    916a:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9171:	00 
    9172:	e8 00 00 00 00       	callq  9177 <e1000_update_stats+0x150>
			9173: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9177:	8b 83 ac 40 00 00    	mov    0x40ac(%rbx),%eax
    917d:	89 c0                	mov    %eax,%eax
    917f:	49 01 84 24 08 06 00 	add    %rax,0x608(%r12)
    9186:	00 
    9187:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    918c:	0f 84 d8 00 00 00    	je     926a <e1000_update_stats+0x243>
    9192:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9195: R_X86_64_32S	.rodata.str1.1+0xae
    9199:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    91a0:	00 
    91a1:	e8 00 00 00 00       	callq  91a6 <e1000_update_stats+0x17f>
			91a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    91a6:	8b 83 5c 40 00 00    	mov    0x405c(%rbx),%eax
    91ac:	89 c0                	mov    %eax,%eax
    91ae:	49 01 84 24 80 05 00 	add    %rax,0x580(%r12)
    91b5:	00 
    91b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			91b9: R_X86_64_32S	.rodata.str1.1+0xae
    91bd:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    91c4:	00 
    91c5:	e8 00 00 00 00       	callq  91ca <e1000_update_stats+0x1a3>
			91c6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    91ca:	8b 83 60 40 00 00    	mov    0x4060(%rbx),%eax
    91d0:	89 c0                	mov    %eax,%eax
    91d2:	49 01 84 24 88 05 00 	add    %rax,0x588(%r12)
    91d9:	00 
    91da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			91dd: R_X86_64_32S	.rodata.str1.1+0xae
    91e1:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    91e8:	00 
    91e9:	e8 00 00 00 00       	callq  91ee <e1000_update_stats+0x1c7>
			91ea: R_X86_64_PC32	record_function+0xfffffffffffffffc
    91ee:	8b 83 64 40 00 00    	mov    0x4064(%rbx),%eax
    91f4:	89 c0                	mov    %eax,%eax
    91f6:	49 01 84 24 90 05 00 	add    %rax,0x590(%r12)
    91fd:	00 
    91fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9201: R_X86_64_32S	.rodata.str1.1+0xae
    9205:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    920c:	00 
    920d:	e8 00 00 00 00       	callq  9212 <e1000_update_stats+0x1eb>
			920e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9212:	8b 83 68 40 00 00    	mov    0x4068(%rbx),%eax
    9218:	89 c0                	mov    %eax,%eax
    921a:	49 01 84 24 98 05 00 	add    %rax,0x598(%r12)
    9221:	00 
    9222:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9225: R_X86_64_32S	.rodata.str1.1+0xae
    9229:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9230:	00 
    9231:	e8 00 00 00 00       	callq  9236 <e1000_update_stats+0x20f>
			9232: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9236:	8b 83 6c 40 00 00    	mov    0x406c(%rbx),%eax
    923c:	89 c0                	mov    %eax,%eax
    923e:	49 01 84 24 a0 05 00 	add    %rax,0x5a0(%r12)
    9245:	00 
    9246:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9249: R_X86_64_32S	.rodata.str1.1+0xae
    924d:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9254:	00 
    9255:	e8 00 00 00 00       	callq  925a <e1000_update_stats+0x233>
			9256: R_X86_64_PC32	record_function+0xfffffffffffffffc
    925a:	8b 83 70 40 00 00    	mov    0x4070(%rbx),%eax
    9260:	89 c0                	mov    %eax,%eax
    9262:	49 01 84 24 a8 05 00 	add    %rax,0x5a8(%r12)
    9269:	00 
    926a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			926d: R_X86_64_32S	.rodata.str1.1+0xae
    9271:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9278:	00 
    9279:	e8 00 00 00 00       	callq  927e <e1000_update_stats+0x257>
			927a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    927e:	8b 83 08 40 00 00    	mov    0x4008(%rbx),%eax
    9284:	89 c0                	mov    %eax,%eax
    9286:	49 01 84 24 e8 04 00 	add    %rax,0x4e8(%r12)
    928d:	00 
    928e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9291: R_X86_64_32S	.rodata.str1.1+0xae
    9295:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    929c:	00 
    929d:	e8 00 00 00 00       	callq  92a2 <e1000_update_stats+0x27b>
			929e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    92a2:	8b 83 10 40 00 00    	mov    0x4010(%rbx),%eax
    92a8:	89 c0                	mov    %eax,%eax
    92aa:	49 01 84 24 00 05 00 	add    %rax,0x500(%r12)
    92b1:	00 
    92b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			92b5: R_X86_64_32S	.rodata.str1.1+0xae
    92b9:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    92c0:	00 
    92c1:	e8 00 00 00 00       	callq  92c6 <e1000_update_stats+0x29f>
			92c2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    92c6:	8b 83 14 40 00 00    	mov    0x4014(%rbx),%eax
    92cc:	89 c0                	mov    %eax,%eax
    92ce:	49 01 84 24 08 05 00 	add    %rax,0x508(%r12)
    92d5:	00 
    92d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			92d9: R_X86_64_32S	.rodata.str1.1+0xae
    92dd:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    92e4:	00 
    92e5:	e8 00 00 00 00       	callq  92ea <e1000_update_stats+0x2c3>
			92e6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    92ea:	8b 83 18 40 00 00    	mov    0x4018(%rbx),%eax
    92f0:	89 c0                	mov    %eax,%eax
    92f2:	49 01 84 24 10 05 00 	add    %rax,0x510(%r12)
    92f9:	00 
    92fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			92fd: R_X86_64_32S	.rodata.str1.1+0xae
    9301:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9308:	00 
    9309:	e8 00 00 00 00       	callq  930e <e1000_update_stats+0x2e7>
			930a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    930e:	8b 83 1c 40 00 00    	mov    0x401c(%rbx),%eax
    9314:	89 c0                	mov    %eax,%eax
    9316:	49 01 84 24 18 05 00 	add    %rax,0x518(%r12)
    931d:	00 
    931e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9321: R_X86_64_32S	.rodata.str1.1+0xae
    9325:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    932c:	00 
    932d:	e8 00 00 00 00       	callq  9332 <e1000_update_stats+0x30b>
			932e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9332:	8b 83 20 40 00 00    	mov    0x4020(%rbx),%eax
    9338:	89 c0                	mov    %eax,%eax
    933a:	49 01 84 24 20 05 00 	add    %rax,0x520(%r12)
    9341:	00 
    9342:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9345: R_X86_64_32S	.rodata.str1.1+0xae
    9349:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9350:	00 
    9351:	e8 00 00 00 00       	callq  9356 <e1000_update_stats+0x32f>
			9352: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9356:	8b 83 30 40 00 00    	mov    0x4030(%rbx),%eax
    935c:	89 c0                	mov    %eax,%eax
    935e:	49 01 84 24 30 05 00 	add    %rax,0x530(%r12)
    9365:	00 
    9366:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9369: R_X86_64_32S	.rodata.str1.1+0xae
    936d:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9374:	00 
    9375:	e8 00 00 00 00       	callq  937a <e1000_update_stats+0x353>
			9376: R_X86_64_PC32	record_function+0xfffffffffffffffc
    937a:	8b 83 38 40 00 00    	mov    0x4038(%rbx),%eax
    9380:	89 c0                	mov    %eax,%eax
    9382:	49 01 84 24 40 05 00 	add    %rax,0x540(%r12)
    9389:	00 
    938a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			938d: R_X86_64_32S	.rodata.str1.1+0xae
    9391:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9398:	00 
    9399:	e8 00 00 00 00       	callq  939e <e1000_update_stats+0x377>
			939a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    939e:	8b 83 40 40 00 00    	mov    0x4040(%rbx),%eax
    93a4:	89 c0                	mov    %eax,%eax
    93a6:	49 01 84 24 50 05 00 	add    %rax,0x550(%r12)
    93ad:	00 
    93ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			93b1: R_X86_64_32S	.rodata.str1.1+0xae
    93b5:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    93bc:	00 
    93bd:	e8 00 00 00 00       	callq  93c2 <e1000_update_stats+0x39b>
			93be: R_X86_64_PC32	record_function+0xfffffffffffffffc
    93c2:	8b 83 48 40 00 00    	mov    0x4048(%rbx),%eax
    93c8:	89 c0                	mov    %eax,%eax
    93ca:	49 01 84 24 58 05 00 	add    %rax,0x558(%r12)
    93d1:	00 
    93d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			93d5: R_X86_64_32S	.rodata.str1.1+0xae
    93d9:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    93e0:	00 
    93e1:	e8 00 00 00 00       	callq  93e6 <e1000_update_stats+0x3bf>
			93e2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    93e6:	8b 83 4c 40 00 00    	mov    0x404c(%rbx),%eax
    93ec:	89 c0                	mov    %eax,%eax
    93ee:	49 01 84 24 60 05 00 	add    %rax,0x560(%r12)
    93f5:	00 
    93f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			93f9: R_X86_64_32S	.rodata.str1.1+0xae
    93fd:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9404:	00 
    9405:	e8 00 00 00 00       	callq  940a <e1000_update_stats+0x3e3>
			9406: R_X86_64_PC32	record_function+0xfffffffffffffffc
    940a:	8b 83 50 40 00 00    	mov    0x4050(%rbx),%eax
    9410:	89 c0                	mov    %eax,%eax
    9412:	49 01 84 24 68 05 00 	add    %rax,0x568(%r12)
    9419:	00 
    941a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			941d: R_X86_64_32S	.rodata.str1.1+0xae
    9421:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9428:	00 
    9429:	e8 00 00 00 00       	callq  942e <e1000_update_stats+0x407>
			942a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    942e:	8b 83 54 40 00 00    	mov    0x4054(%rbx),%eax
    9434:	89 c0                	mov    %eax,%eax
    9436:	49 01 84 24 70 05 00 	add    %rax,0x570(%r12)
    943d:	00 
    943e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9441: R_X86_64_32S	.rodata.str1.1+0xae
    9445:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    944c:	00 
    944d:	e8 00 00 00 00       	callq  9452 <e1000_update_stats+0x42b>
			944e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9452:	8b 83 58 40 00 00    	mov    0x4058(%rbx),%eax
    9458:	89 c0                	mov    %eax,%eax
    945a:	49 01 84 24 78 05 00 	add    %rax,0x578(%r12)
    9461:	00 
    9462:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9465: R_X86_64_32S	.rodata.str1.1+0xae
    9469:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9470:	00 
    9471:	e8 00 00 00 00       	callq  9476 <e1000_update_stats+0x44f>
			9472: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9476:	8b 83 80 40 00 00    	mov    0x4080(%rbx),%eax
    947c:	89 c0                	mov    %eax,%eax
    947e:	49 01 84 24 c8 05 00 	add    %rax,0x5c8(%r12)
    9485:	00 
    9486:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9489: R_X86_64_32S	.rodata.str1.1+0xae
    948d:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9494:	00 
    9495:	e8 00 00 00 00       	callq  949a <e1000_update_stats+0x473>
			9496: R_X86_64_PC32	record_function+0xfffffffffffffffc
    949a:	8b 83 90 40 00 00    	mov    0x4090(%rbx),%eax
    94a0:	89 c0                	mov    %eax,%eax
    94a2:	49 01 84 24 e0 05 00 	add    %rax,0x5e0(%r12)
    94a9:	00 
    94aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			94ad: R_X86_64_32S	.rodata.str1.1+0xae
    94b1:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    94b8:	00 
    94b9:	e8 00 00 00 00       	callq  94be <e1000_update_stats+0x497>
			94ba: R_X86_64_PC32	record_function+0xfffffffffffffffc
    94be:	8b 83 94 40 00 00    	mov    0x4094(%rbx),%eax
    94c4:	89 c0                	mov    %eax,%eax
    94c6:	49 01 84 24 e8 05 00 	add    %rax,0x5e8(%r12)
    94cd:	00 
    94ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			94d1: R_X86_64_32S	.rodata.str1.1+0xae
    94d5:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    94dc:	00 
    94dd:	e8 00 00 00 00       	callq  94e2 <e1000_update_stats+0x4bb>
			94de: R_X86_64_PC32	record_function+0xfffffffffffffffc
    94e2:	8b 83 a0 40 00 00    	mov    0x40a0(%rbx),%eax
    94e8:	89 c0                	mov    %eax,%eax
    94ea:	49 01 84 24 f0 05 00 	add    %rax,0x5f0(%r12)
    94f1:	00 
    94f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			94f5: R_X86_64_32S	.rodata.str1.1+0xae
    94f9:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9500:	00 
    9501:	e8 00 00 00 00       	callq  9506 <e1000_update_stats+0x4df>
			9502: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9506:	8b 83 a4 40 00 00    	mov    0x40a4(%rbx),%eax
    950c:	89 c0                	mov    %eax,%eax
    950e:	49 01 84 24 f8 05 00 	add    %rax,0x5f8(%r12)
    9515:	00 
    9516:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9519: R_X86_64_32S	.rodata.str1.1+0xae
    951d:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9524:	00 
    9525:	e8 00 00 00 00       	callq  952a <e1000_update_stats+0x503>
			9526: R_X86_64_PC32	record_function+0xfffffffffffffffc
    952a:	8b 83 a8 40 00 00    	mov    0x40a8(%rbx),%eax
    9530:	89 c0                	mov    %eax,%eax
    9532:	49 01 84 24 00 06 00 	add    %rax,0x600(%r12)
    9539:	00 
    953a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			953d: R_X86_64_32S	.rodata.str1.1+0xae
    9541:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9548:	00 
    9549:	e8 00 00 00 00       	callq  954e <e1000_update_stats+0x527>
			954a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    954e:	8b 83 b0 40 00 00    	mov    0x40b0(%rbx),%eax
    9554:	89 c0                	mov    %eax,%eax
    9556:	49 01 84 24 18 06 00 	add    %rax,0x618(%r12)
    955d:	00 
    955e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9561: R_X86_64_32S	.rodata.str1.1+0xae
    9565:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    956c:	00 
    956d:	e8 00 00 00 00       	callq  9572 <e1000_update_stats+0x54b>
			956e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9572:	8b 83 c0 40 00 00    	mov    0x40c0(%rbx),%eax
    9578:	89 c0                	mov    %eax,%eax
    957a:	49 01 84 24 38 06 00 	add    %rax,0x638(%r12)
    9581:	00 
    9582:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9585: R_X86_64_32S	.rodata.str1.1+0xae
    9589:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9590:	00 
    9591:	e8 00 00 00 00       	callq  9596 <e1000_update_stats+0x56f>
			9592: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9596:	8b 83 c4 40 00 00    	mov    0x40c4(%rbx),%eax
    959c:	89 c0                	mov    %eax,%eax
    959e:	49 01 84 24 40 06 00 	add    %rax,0x640(%r12)
    95a5:	00 
    95a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			95a9: R_X86_64_32S	.rodata.str1.1+0xae
    95ad:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    95b4:	00 
    95b5:	e8 00 00 00 00       	callq  95ba <e1000_update_stats+0x593>
			95b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    95ba:	8b 83 c8 40 00 00    	mov    0x40c8(%rbx),%eax
    95c0:	89 c0                	mov    %eax,%eax
    95c2:	49 01 84 24 48 06 00 	add    %rax,0x648(%r12)
    95c9:	00 
    95ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			95cd: R_X86_64_32S	.rodata.str1.1+0xae
    95d1:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    95d8:	00 
    95d9:	e8 00 00 00 00       	callq  95de <e1000_update_stats+0x5b7>
			95da: R_X86_64_PC32	record_function+0xfffffffffffffffc
    95de:	8b 83 cc 40 00 00    	mov    0x40cc(%rbx),%eax
    95e4:	89 c0                	mov    %eax,%eax
    95e6:	49 01 84 24 50 06 00 	add    %rax,0x650(%r12)
    95ed:	00 
    95ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			95f1: R_X86_64_32S	.rodata.str1.1+0xae
    95f5:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    95fc:	00 
    95fd:	e8 00 00 00 00       	callq  9602 <e1000_update_stats+0x5db>
			95fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9602:	8b 83 d0 40 00 00    	mov    0x40d0(%rbx),%eax
    9608:	89 c0                	mov    %eax,%eax
    960a:	49 01 84 24 58 06 00 	add    %rax,0x658(%r12)
    9611:	00 
    9612:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    9617:	0f 84 d8 00 00 00    	je     96f5 <e1000_update_stats+0x6ce>
    961d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9620: R_X86_64_32S	.rodata.str1.1+0xae
    9624:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    962b:	00 
    962c:	e8 00 00 00 00       	callq  9631 <e1000_update_stats+0x60a>
			962d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9631:	8b 83 d8 40 00 00    	mov    0x40d8(%rbx),%eax
    9637:	89 c0                	mov    %eax,%eax
    9639:	49 01 84 24 68 06 00 	add    %rax,0x668(%r12)
    9640:	00 
    9641:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9644: R_X86_64_32S	.rodata.str1.1+0xae
    9648:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    964f:	00 
    9650:	e8 00 00 00 00       	callq  9655 <e1000_update_stats+0x62e>
			9651: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9655:	8b 83 dc 40 00 00    	mov    0x40dc(%rbx),%eax
    965b:	89 c0                	mov    %eax,%eax
    965d:	49 01 84 24 70 06 00 	add    %rax,0x670(%r12)
    9664:	00 
    9665:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9668: R_X86_64_32S	.rodata.str1.1+0xae
    966c:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9673:	00 
    9674:	e8 00 00 00 00       	callq  9679 <e1000_update_stats+0x652>
			9675: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9679:	8b 83 e0 40 00 00    	mov    0x40e0(%rbx),%eax
    967f:	89 c0                	mov    %eax,%eax
    9681:	49 01 84 24 78 06 00 	add    %rax,0x678(%r12)
    9688:	00 
    9689:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			968c: R_X86_64_32S	.rodata.str1.1+0xae
    9690:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9697:	00 
    9698:	e8 00 00 00 00       	callq  969d <e1000_update_stats+0x676>
			9699: R_X86_64_PC32	record_function+0xfffffffffffffffc
    969d:	8b 83 e4 40 00 00    	mov    0x40e4(%rbx),%eax
    96a3:	89 c0                	mov    %eax,%eax
    96a5:	49 01 84 24 80 06 00 	add    %rax,0x680(%r12)
    96ac:	00 
    96ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			96b0: R_X86_64_32S	.rodata.str1.1+0xae
    96b4:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    96bb:	00 
    96bc:	e8 00 00 00 00       	callq  96c1 <e1000_update_stats+0x69a>
			96bd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    96c1:	8b 83 e8 40 00 00    	mov    0x40e8(%rbx),%eax
    96c7:	89 c0                	mov    %eax,%eax
    96c9:	49 01 84 24 88 06 00 	add    %rax,0x688(%r12)
    96d0:	00 
    96d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			96d4: R_X86_64_32S	.rodata.str1.1+0xae
    96d8:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    96df:	00 
    96e0:	e8 00 00 00 00       	callq  96e5 <e1000_update_stats+0x6be>
			96e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
    96e5:	8b 83 ec 40 00 00    	mov    0x40ec(%rbx),%eax
    96eb:	89 c0                	mov    %eax,%eax
    96ed:	49 01 84 24 90 06 00 	add    %rax,0x690(%r12)
    96f4:	00 
    96f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			96f8: R_X86_64_32S	.rodata.str1.1+0xae
    96fc:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9703:	00 
    9704:	e8 00 00 00 00       	callq  9709 <e1000_update_stats+0x6e2>
			9705: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9709:	8b 83 f0 40 00 00    	mov    0x40f0(%rbx),%eax
    970f:	89 c0                	mov    %eax,%eax
    9711:	49 01 84 24 98 06 00 	add    %rax,0x698(%r12)
    9718:	00 
    9719:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			971c: R_X86_64_32S	.rodata.str1.1+0xae
    9720:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9727:	00 
    9728:	e8 00 00 00 00       	callq  972d <e1000_update_stats+0x706>
			9729: R_X86_64_PC32	record_function+0xfffffffffffffffc
    972d:	8b 83 f4 40 00 00    	mov    0x40f4(%rbx),%eax
    9733:	89 c0                	mov    %eax,%eax
    9735:	49 01 84 24 a0 06 00 	add    %rax,0x6a0(%r12)
    973c:	00 
    973d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9740: R_X86_64_32S	.rodata.str1.1+0xae
    9744:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    974b:	00 
    974c:	e8 00 00 00 00       	callq  9751 <e1000_update_stats+0x72a>
			974d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9751:	8b 83 d4 40 00 00    	mov    0x40d4(%rbx),%eax
    9757:	41 89 85 ac 00 00 00 	mov    %eax,0xac(%r13)
    975e:	89 c0                	mov    %eax,%eax
    9760:	49 01 84 24 60 06 00 	add    %rax,0x660(%r12)
    9767:	00 
    9768:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			976b: R_X86_64_32S	.rodata.str1.1+0xae
    976f:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9776:	00 
    9777:	e8 00 00 00 00       	callq  977c <e1000_update_stats+0x755>
			9778: R_X86_64_PC32	record_function+0xfffffffffffffffc
    977c:	8b 83 28 40 00 00    	mov    0x4028(%rbx),%eax
    9782:	41 89 85 a8 00 00 00 	mov    %eax,0xa8(%r13)
    9789:	89 c0                	mov    %eax,%eax
    978b:	49 01 84 24 28 05 00 	add    %rax,0x528(%r12)
    9792:	00 
    9793:	41 83 7d 10 02       	cmpl   $0x2,0x10(%r13)
    9798:	0f 86 d8 00 00 00    	jbe    9876 <e1000_update_stats+0x84f>
    979e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			97a1: R_X86_64_32S	.rodata.str1.1+0xae
    97a5:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    97ac:	00 
    97ad:	e8 00 00 00 00       	callq  97b2 <e1000_update_stats+0x78b>
			97ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
    97b2:	8b 83 04 40 00 00    	mov    0x4004(%rbx),%eax
    97b8:	89 c0                	mov    %eax,%eax
    97ba:	49 01 84 24 e0 04 00 	add    %rax,0x4e0(%r12)
    97c1:	00 
    97c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			97c5: R_X86_64_32S	.rodata.str1.1+0xae
    97c9:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    97d0:	00 
    97d1:	e8 00 00 00 00       	callq  97d6 <e1000_update_stats+0x7af>
			97d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    97d6:	8b 83 0c 40 00 00    	mov    0x400c(%rbx),%eax
    97dc:	89 c0                	mov    %eax,%eax
    97de:	49 01 84 24 f0 04 00 	add    %rax,0x4f0(%r12)
    97e5:	00 
    97e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			97e9: R_X86_64_32S	.rodata.str1.1+0xae
    97ed:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    97f4:	00 
    97f5:	e8 00 00 00 00       	callq  97fa <e1000_update_stats+0x7d3>
			97f6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    97fa:	8b 83 34 40 00 00    	mov    0x4034(%rbx),%eax
    9800:	89 c0                	mov    %eax,%eax
    9802:	49 01 84 24 38 05 00 	add    %rax,0x538(%r12)
    9809:	00 
    980a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			980d: R_X86_64_32S	.rodata.str1.1+0xae
    9811:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9818:	00 
    9819:	e8 00 00 00 00       	callq  981e <e1000_update_stats+0x7f7>
			981a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    981e:	8b 83 3c 40 00 00    	mov    0x403c(%rbx),%eax
    9824:	89 c0                	mov    %eax,%eax
    9826:	49 01 84 24 48 05 00 	add    %rax,0x548(%r12)
    982d:	00 
    982e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9831: R_X86_64_32S	.rodata.str1.1+0xae
    9835:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    983c:	00 
    983d:	e8 00 00 00 00       	callq  9842 <e1000_update_stats+0x81b>
			983e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9842:	8b 83 f8 40 00 00    	mov    0x40f8(%rbx),%eax
    9848:	89 c0                	mov    %eax,%eax
    984a:	49 01 84 24 a8 06 00 	add    %rax,0x6a8(%r12)
    9851:	00 
    9852:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9855: R_X86_64_32S	.rodata.str1.1+0xae
    9859:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9860:	00 
    9861:	e8 00 00 00 00       	callq  9866 <e1000_update_stats+0x83f>
			9862: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9866:	8b 83 fc 40 00 00    	mov    0x40fc(%rbx),%eax
    986c:	89 c0                	mov    %eax,%eax
    986e:	49 01 84 24 b0 06 00 	add    %rax,0x6b0(%r12)
    9875:	00 
    9876:	41 83 7d 10 0d       	cmpl   $0xd,0x10(%r13)
    987b:	0f 86 4f 01 00 00    	jbe    99d0 <e1000_update_stats+0x9a9>
    9881:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9884: R_X86_64_32S	.rodata.str1.1+0xae
    9888:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    988f:	00 
    9890:	e8 00 00 00 00       	callq  9895 <e1000_update_stats+0x86e>
			9891: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9895:	8b 83 00 41 00 00    	mov    0x4100(%rbx),%eax
    989b:	89 c0                	mov    %eax,%eax
    989d:	49 01 84 24 b8 06 00 	add    %rax,0x6b8(%r12)
    98a4:	00 
    98a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			98a8: R_X86_64_32S	.rodata.str1.1+0xae
    98ac:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    98b3:	00 
    98b4:	e8 00 00 00 00       	callq  98b9 <e1000_update_stats+0x892>
			98b5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    98b9:	8b 83 24 41 00 00    	mov    0x4124(%rbx),%eax
    98bf:	89 c0                	mov    %eax,%eax
    98c1:	49 01 84 24 f8 06 00 	add    %rax,0x6f8(%r12)
    98c8:	00 
    98c9:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    98ce:	0f 84 fc 00 00 00    	je     99d0 <e1000_update_stats+0x9a9>
    98d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			98d7: R_X86_64_32S	.rodata.str1.1+0xae
    98db:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    98e2:	00 
    98e3:	e8 00 00 00 00       	callq  98e8 <e1000_update_stats+0x8c1>
			98e4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    98e8:	8b 83 04 41 00 00    	mov    0x4104(%rbx),%eax
    98ee:	89 c0                	mov    %eax,%eax
    98f0:	49 01 84 24 c0 06 00 	add    %rax,0x6c0(%r12)
    98f7:	00 
    98f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			98fb: R_X86_64_32S	.rodata.str1.1+0xae
    98ff:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9906:	00 
    9907:	e8 00 00 00 00       	callq  990c <e1000_update_stats+0x8e5>
			9908: R_X86_64_PC32	record_function+0xfffffffffffffffc
    990c:	8b 83 08 41 00 00    	mov    0x4108(%rbx),%eax
    9912:	89 c0                	mov    %eax,%eax
    9914:	49 01 84 24 c8 06 00 	add    %rax,0x6c8(%r12)
    991b:	00 
    991c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			991f: R_X86_64_32S	.rodata.str1.1+0xae
    9923:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    992a:	00 
    992b:	e8 00 00 00 00       	callq  9930 <e1000_update_stats+0x909>
			992c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9930:	8b 83 0c 41 00 00    	mov    0x410c(%rbx),%eax
    9936:	89 c0                	mov    %eax,%eax
    9938:	49 01 84 24 d0 06 00 	add    %rax,0x6d0(%r12)
    993f:	00 
    9940:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9943: R_X86_64_32S	.rodata.str1.1+0xae
    9947:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    994e:	00 
    994f:	e8 00 00 00 00       	callq  9954 <e1000_update_stats+0x92d>
			9950: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9954:	8b 83 10 41 00 00    	mov    0x4110(%rbx),%eax
    995a:	89 c0                	mov    %eax,%eax
    995c:	49 01 84 24 d8 06 00 	add    %rax,0x6d8(%r12)
    9963:	00 
    9964:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9967: R_X86_64_32S	.rodata.str1.1+0xae
    996b:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9972:	00 
    9973:	e8 00 00 00 00       	callq  9978 <e1000_update_stats+0x951>
			9974: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9978:	8b 83 18 41 00 00    	mov    0x4118(%rbx),%eax
    997e:	89 c0                	mov    %eax,%eax
    9980:	49 01 84 24 e0 06 00 	add    %rax,0x6e0(%r12)
    9987:	00 
    9988:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			998b: R_X86_64_32S	.rodata.str1.1+0xae
    998f:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    9996:	00 
    9997:	e8 00 00 00 00       	callq  999c <e1000_update_stats+0x975>
			9998: R_X86_64_PC32	record_function+0xfffffffffffffffc
    999c:	8b 83 1c 41 00 00    	mov    0x411c(%rbx),%eax
    99a2:	89 c0                	mov    %eax,%eax
    99a4:	49 01 84 24 e8 06 00 	add    %rax,0x6e8(%r12)
    99ab:	00 
    99ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			99af: R_X86_64_32S	.rodata.str1.1+0xae
    99b3:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
    99ba:	00 
    99bb:	e8 00 00 00 00       	callq  99c0 <e1000_update_stats+0x999>
			99bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
    99c0:	8b 83 20 41 00 00    	mov    0x4120(%rbx),%eax
    99c6:	89 c0                	mov    %eax,%eax
    99c8:	49 01 84 24 f0 06 00 	add    %rax,0x6f0(%r12)
    99cf:	00 
    99d0:	49 8b 84 24 c0 05 00 	mov    0x5c0(%r12),%rax
    99d7:	00 
    99d8:	49 8b b4 24 d8 04 00 	mov    0x4d8(%r12),%rsi
    99df:	00 
    99e0:	49 8b bc 24 e0 04 00 	mov    0x4e0(%r12),%rdi
    99e7:	00 
    99e8:	49 8b 8c 24 f8 05 00 	mov    0x5f8(%r12),%rcx
    99ef:	00 
    99f0:	49 8b 94 24 08 06 00 	mov    0x608(%r12),%rdx
    99f7:	00 
    99f8:	49 89 84 24 40 03 00 	mov    %rax,0x340(%r12)
    99ff:	00 
    9a00:	49 8b 84 24 28 05 00 	mov    0x528(%r12),%rax
    9a07:	00 
    9a08:	49 89 b4 24 60 03 00 	mov    %rsi,0x360(%r12)
    9a0f:	00 
    9a10:	49 89 bc 24 68 03 00 	mov    %rdi,0x368(%r12)
    9a17:	00 
    9a18:	49 89 84 24 48 03 00 	mov    %rax,0x348(%r12)
    9a1f:	00 
    9a20:	48 89 f0             	mov    %rsi,%rax
    9a23:	49 03 84 24 f0 04 00 	add    0x4f0(%r12),%rax
    9a2a:	00 
    9a2b:	48 01 f8             	add    %rdi,%rax
    9a2e:	48 01 c8             	add    %rcx,%rax
    9a31:	48 01 d0             	add    %rdx,%rax
    9a34:	49 03 84 24 48 05 00 	add    0x548(%r12),%rax
    9a3b:	00 
    9a3c:	48 01 ca             	add    %rcx,%rdx
    9a3f:	49 89 94 24 10 06 00 	mov    %rdx,0x610(%r12)
    9a46:	00 
    9a47:	49 89 94 24 50 03 00 	mov    %rdx,0x350(%r12)
    9a4e:	00 
    9a4f:	49 8b 8c 24 20 05 00 	mov    0x520(%r12),%rcx
    9a56:	00 
    9a57:	49 8b 94 24 10 05 00 	mov    0x510(%r12),%rdx
    9a5e:	00 
    9a5f:	49 89 84 24 20 03 00 	mov    %rax,0x320(%r12)
    9a66:	00 
    9a67:	49 8b 84 24 00 05 00 	mov    0x500(%r12),%rax
    9a6e:	00 
    9a6f:	49 89 94 24 80 03 00 	mov    %rdx,0x380(%r12)
    9a76:	00 
    9a77:	49 89 8c 24 a0 03 00 	mov    %rcx,0x3a0(%r12)
    9a7e:	00 
    9a7f:	49 89 84 24 78 03 00 	mov    %rax,0x378(%r12)
    9a86:	00 
    9a87:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    9a8b:	49 89 84 24 f8 04 00 	mov    %rax,0x4f8(%r12)
    9a92:	00 
    9a93:	49 89 84 24 28 03 00 	mov    %rax,0x328(%r12)
    9a9a:	00 
    9a9b:	49 8b 84 24 38 05 00 	mov    0x538(%r12),%rax
    9aa2:	00 
    9aa3:	49 89 84 24 88 03 00 	mov    %rax,0x388(%r12)
    9aaa:	00 
    9aab:	41 80 bd 1c 01 00 00 	cmpb   $0x0,0x11c(%r13)
    9ab2:	00 
    9ab3:	74 24                	je     9ad9 <e1000_update_stats+0xab2>
    9ab5:	66 41 83 bc 24 b2 00 	cmpw   $0x2,0xb2(%r12)
    9abc:	00 00 02 
    9abf:	75 18                	jne    9ad9 <e1000_update_stats+0xab2>
    9ac1:	49 c7 84 24 88 03 00 	movq   $0x0,0x388(%r12)
    9ac8:	00 00 00 00 00 
    9acd:	49 c7 84 24 38 05 00 	movq   $0x0,0x538(%r12)
    9ad4:	00 00 00 00 00 
    9ad9:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
    9ade:	75 64                	jne    9b44 <e1000_update_stats+0xb1d>
    9ae0:	66 41 81 bc 24 b0 00 	cmpw   $0x3e8,0xb0(%r12)
    9ae7:	00 00 e8 03 
    9aeb:	75 28                	jne    9b15 <e1000_update_stats+0xaee>
    9aed:	48 8d 55 de          	lea    0xffffffffffffffde(%rbp),%rdx
    9af1:	be 0a 00 00 00       	mov    $0xa,%esi
    9af6:	4c 89 ef             	mov    %r13,%rdi
    9af9:	e8 db c5 ff ff       	callq  60d9 <e1000_read_phy_reg>
    9afe:	85 c0                	test   %eax,%eax
    9b00:	75 13                	jne    9b15 <e1000_update_stats+0xaee>
    9b02:	0f b6 45 de          	movzbl 0xffffffffffffffde(%rbp),%eax
    9b06:	66 89 45 de          	mov    %ax,0xffffffffffffffde(%rbp)
    9b0a:	0f b7 c0             	movzwl %ax,%eax
    9b0d:	41 01 84 24 20 07 00 	add    %eax,0x720(%r12)
    9b14:	00 
    9b15:	41 83 7d 10 08       	cmpl   $0x8,0x10(%r13)
    9b1a:	77 28                	ja     9b44 <e1000_update_stats+0xb1d>
    9b1c:	41 83 7d 14 00       	cmpl   $0x0,0x14(%r13)
    9b21:	75 21                	jne    9b44 <e1000_update_stats+0xb1d>
    9b23:	48 8d 55 de          	lea    0xffffffffffffffde(%rbp),%rdx
    9b27:	be 15 00 00 00       	mov    $0x15,%esi
    9b2c:	4c 89 ef             	mov    %r13,%rdi
    9b2f:	e8 a5 c5 ff ff       	callq  60d9 <e1000_read_phy_reg>
    9b34:	85 c0                	test   %eax,%eax
    9b36:	75 0c                	jne    9b44 <e1000_update_stats+0xb1d>
    9b38:	0f b7 45 de          	movzwl 0xffffffffffffffde(%rbp),%eax
    9b3c:	41 01 84 24 24 07 00 	add    %eax,0x724(%r12)
    9b43:	00 
    9b44:	41 80 bd 1f 01 00 00 	cmpb   $0x0,0x11f(%r13)
    9b4b:	00 
    9b4c:	74 60                	je     9bae <e1000_update_stats+0xb87>
    9b4e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9b51: R_X86_64_32S	.rodata.str1.1+0xae
    9b55:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    9b59:	e8 00 00 00 00       	callq  9b5e <e1000_update_stats+0xb37>
			9b5a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9b5e:	8b 83 bc 40 00 00    	mov    0x40bc(%rbx),%eax
    9b64:	89 c0                	mov    %eax,%eax
    9b66:	49 01 84 24 30 06 00 	add    %rax,0x630(%r12)
    9b6d:	00 
    9b6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9b71: R_X86_64_32S	.rodata.str1.1+0xae
    9b75:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    9b79:	e8 00 00 00 00       	callq  9b7e <e1000_update_stats+0xb57>
			9b7a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9b7e:	8b 83 b4 40 00 00    	mov    0x40b4(%rbx),%eax
    9b84:	89 c0                	mov    %eax,%eax
    9b86:	49 01 84 24 20 06 00 	add    %rax,0x620(%r12)
    9b8d:	00 
    9b8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9b91: R_X86_64_32S	.rodata.str1.1+0xae
    9b95:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    9b99:	e8 00 00 00 00       	callq  9b9e <e1000_update_stats+0xb77>
			9b9a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9b9e:	8b 83 b8 40 00 00    	mov    0x40b8(%rbx),%eax
    9ba4:	89 c0                	mov    %eax,%eax
    9ba6:	49 01 84 24 28 06 00 	add    %rax,0x628(%r12)
    9bad:	00 
    9bae:	49 8d bc 24 b8 00 00 	lea    0xb8(%r12),%rdi
    9bb5:	00 
    9bb6:	4c 89 f6             	mov    %r14,%rsi
    9bb9:	e8 00 00 00 00       	callq  9bbe <e1000_update_stats+0xb97>
			9bba: R_X86_64_PC32	.spinlock.text+0x3d8
    9bbe:	5b                   	pop    %rbx
    9bbf:	41 5c                	pop    %r12
    9bc1:	5b                   	pop    %rbx
    9bc2:	41 5c                	pop    %r12
    9bc4:	41 5d                	pop    %r13
    9bc6:	41 5e                	pop    %r14
    9bc8:	c9                   	leaveq 
    9bc9:	c3                   	retq   

0000000000009bca <pci_set_power_state>:
    9bca:	55                   	push   %rbp
    9bcb:	48 89 e5             	mov    %rsp,%rbp
    9bce:	41 57                	push   %r15
    9bd0:	41 89 f7             	mov    %esi,%r15d
    9bd3:	41 56                	push   %r14
    9bd5:	4c 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%r14
    9bd9:	41 55                	push   %r13
    9bdb:	4c 8d 6d cc          	lea    0xffffffffffffffcc(%rbp),%r13
    9bdf:	41 54                	push   %r12
    9be1:	4c 8d 65 b8          	lea    0xffffffffffffffb8(%rbp),%r12
    9be5:	53                   	push   %rbx
    9be6:	48 89 fb             	mov    %rdi,%rbx
    9be9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9bec: R_X86_64_32S	.rodata.str1.1+0x1adc
    9bf0:	48 83 ec 38          	sub    $0x38,%rsp
    9bf4:	e8 00 00 00 00       	callq  9bf9 <pci_set_power_state+0x2f>
			9bf5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9bf9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9bfc: R_X86_64_32S	.rodata.str1.1+0x1af0
    9c00:	48 89 5d c0          	mov    %rbx,0xffffffffffffffc0(%rbp)
    9c04:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    9c0b:	00 
    9c0c:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    9c13:	00 
    9c14:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
    9c1b:	44 89 7d c8          	mov    %r15d,0xffffffffffffffc8(%rbp)
    9c1f:	e8 00 00 00 00       	callq  9c24 <pci_set_power_state+0x5a>
			9c20: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9c24:	4c 89 f1             	mov    %r14,%rcx
    9c27:	4c 89 ea             	mov    %r13,%rdx
    9c2a:	4c 89 e6             	mov    %r12,%rsi
    9c2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9c30: R_X86_64_32S	.rodata.str1.1+0x1adc
    9c34:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    9c3b:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    9c42:	00 
    9c43:	e8 00 00 00 00       	callq  9c48 <pci_set_power_state+0x7e>
			9c44: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    9c48:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
    9c4c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    9c52:	4c 89 ea             	mov    %r13,%rdx
    9c55:	4c 89 e6             	mov    %r12,%rsi
    9c58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9c5b: R_X86_64_32S	.rodata.str1.1+0x1adc
    9c5f:	e8 00 00 00 00       	callq  9c64 <pci_set_power_state+0x9a>
			9c60: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    9c64:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    9c68:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
    9c6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9c6f: R_X86_64_32S	.rodata.str1.1+0x1adc
    9c73:	48 c7 45 a0 27 06 00 	movq   $0x627,0xffffffffffffffa0(%rbp)
    9c7a:	00 
    9c7b:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    9c7f:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
    9c82:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
    9c85:	e8 00 00 00 00       	callq  9c8a <pci_set_power_state+0xc0>
			9c86: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    9c8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9c8d: R_X86_64_32S	.rodata.str1.1+0x1b12
    9c91:	48 89 5d b8          	mov    %rbx,0xffffffffffffffb8(%rbp)
    9c95:	44 89 7d cc          	mov    %r15d,0xffffffffffffffcc(%rbp)
    9c99:	e8 00 00 00 00       	callq  9c9e <pci_set_power_state+0xd4>
			9c9a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9c9e:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
    9ca2:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    9ca8:	4c 89 e1             	mov    %r12,%rcx
    9cab:	4c 89 f2             	mov    %r14,%rdx
    9cae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9cb1: R_X86_64_32S	.rodata.str1.1+0x1adc
    9cb5:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    9cbc:	48 89 de             	mov    %rbx,%rsi
    9cbf:	e8 00 00 00 00       	callq  9cc4 <pci_set_power_state+0xfa>
			9cc0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    9cc4:	48 89 de             	mov    %rbx,%rsi
    9cc7:	4d 89 e8             	mov    %r13,%r8
    9cca:	b9 04 00 00 00       	mov    $0x4,%ecx
    9ccf:	4c 89 f2             	mov    %r14,%rdx
    9cd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9cd5: R_X86_64_32S	.rodata.str1.1+0x1adc
    9cd9:	e8 00 00 00 00       	callq  9cde <pci_set_power_state+0x114>
			9cda: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    9cde:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
    9ce2:	48 89 de             	mov    %rbx,%rsi
    9ce5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9ce8: R_X86_64_32S	.rodata.str1.1+0x1adc
    9cec:	b9 04 00 00 00       	mov    $0x4,%ecx
    9cf1:	4c 89 f2             	mov    %r14,%rdx
    9cf4:	e8 00 00 00 00       	callq  9cf9 <pci_set_power_state+0x12f>
			9cf5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    9cf9:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
    9cfd:	8b 5d c8             	mov    0xffffffffffffffc8(%rbp),%ebx
    9d00:	48 85 ff             	test   %rdi,%rdi
    9d03:	74 05                	je     9d0a <pci_set_power_state+0x140>
    9d05:	e8 00 00 00 00       	callq  9d0a <pci_set_power_state+0x140>
			9d06: R_X86_64_PC32	kfree+0xfffffffffffffffc
    9d0a:	48 83 c4 38          	add    $0x38,%rsp
    9d0e:	89 d8                	mov    %ebx,%eax
    9d10:	5b                   	pop    %rbx
    9d11:	41 5c                	pop    %r12
    9d13:	41 5d                	pop    %r13
    9d15:	41 5e                	pop    %r14
    9d17:	41 5f                	pop    %r15
    9d19:	c9                   	leaveq 
    9d1a:	c3                   	retq   

0000000000009d1b <e1000_get_strings>:
    9d1b:	55                   	push   %rbp
    9d1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9d1f: R_X86_64_32S	.rodata.str1.1+0x1b34
    9d23:	48 89 e5             	mov    %rsp,%rbp
    9d26:	41 54                	push   %r12
    9d28:	49 89 d4             	mov    %rdx,%r12
    9d2b:	53                   	push   %rbx
    9d2c:	89 f3                	mov    %esi,%ebx
    9d2e:	e8 00 00 00 00       	callq  9d33 <e1000_get_strings+0x18>
			9d2f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9d33:	85 db                	test   %ebx,%ebx
    9d35:	74 06                	je     9d3d <e1000_get_strings+0x22>
    9d37:	ff cb                	dec    %ebx
    9d39:	75 44                	jne    9d7f <e1000_get_strings+0x64>
    9d3b:	eb 16                	jmp    9d53 <e1000_get_strings+0x38>
    9d3d:	ba a0 00 00 00       	mov    $0xa0,%edx
    9d42:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			9d45: R_X86_64_32S	.data+0x3eb80
    9d49:	4c 89 e7             	mov    %r12,%rdi
    9d4c:	e8 bf a0 ff ff       	callq  3e10 <__memcpy>
    9d51:	eb 2c                	jmp    9d7f <e1000_get_strings+0x64>
    9d53:	4c 89 e0             	mov    %r12,%rax
    9d56:	45 31 c0             	xor    %r8d,%r8d
    9d59:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			9d5c: R_X86_64_32S	.data+0x3e2a0
    9d60:	41 ff c0             	inc    %r8d
    9d63:	48 89 c7             	mov    %rax,%rdi
    9d66:	48 89 d6             	mov    %rdx,%rsi
    9d69:	48 83 c0 20          	add    $0x20,%rax
    9d6d:	48 83 c2 28          	add    $0x28,%rdx
    9d71:	41 83 f8 2f          	cmp    $0x2f,%r8d
    9d75:	fc                   	cld    
    9d76:	b9 08 00 00 00       	mov    $0x8,%ecx
    9d7b:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    9d7d:	75 e1                	jne    9d60 <e1000_get_strings+0x45>
    9d7f:	5b                   	pop    %rbx
    9d80:	41 5c                	pop    %r12
    9d82:	c9                   	leaveq 
    9d83:	c3                   	retq   

0000000000009d84 <netif_device_detach>:
    9d84:	55                   	push   %rbp
    9d85:	48 89 e5             	mov    %rsp,%rbp
    9d88:	41 55                	push   %r13
    9d8a:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    9d8e:	41 54                	push   %r12
    9d90:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    9d94:	53                   	push   %rbx
    9d95:	48 89 fb             	mov    %rdi,%rbx
    9d98:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9d9b: R_X86_64_32S	.rodata.str1.1+0x1b46
    9d9f:	48 83 ec 38          	sub    $0x38,%rsp
    9da3:	e8 00 00 00 00       	callq  9da8 <netif_device_detach+0x24>
			9da4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9da8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9dab: R_X86_64_32S	.rodata.str1.1+0x1b5a
    9daf:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    9db6:	00 
    9db7:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    9dbe:	00 
    9dbf:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    9dc6:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    9dca:	e8 00 00 00 00       	callq  9dcf <netif_device_detach+0x4b>
			9dcb: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9dcf:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    9dd3:	4c 89 ea             	mov    %r13,%rdx
    9dd6:	4c 89 e6             	mov    %r12,%rsi
    9dd9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9ddc: R_X86_64_32S	.rodata.str1.1+0x1b46
    9de0:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    9de7:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    9dee:	00 
    9def:	e8 00 00 00 00       	callq  9df4 <netif_device_detach+0x70>
			9df0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    9df4:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    9df8:	48 85 c0             	test   %rax,%rax
    9dfb:	74 1c                	je     9e19 <netif_device_detach+0x95>
    9dfd:	48 8d 48 48          	lea    0x48(%rax),%rcx
    9e01:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    9e07:	4c 89 ea             	mov    %r13,%rdx
    9e0a:	4c 89 e6             	mov    %r12,%rsi
    9e0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9e10: R_X86_64_32S	.rodata.str1.1+0x1b46
    9e14:	e8 00 00 00 00       	callq  9e19 <netif_device_detach+0x95>
			9e15: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    9e19:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    9e1d:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    9e21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9e24: R_X86_64_32S	.rodata.str1.1+0x1b46
    9e28:	48 c7 45 b0 e4 05 00 	movq   $0x5e4,0xffffffffffffffb0(%rbp)
    9e2f:	00 
    9e30:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    9e34:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    9e37:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    9e3a:	e8 00 00 00 00       	callq  9e3f <netif_device_detach+0xbb>
			9e3b: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    9e3f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9e42: R_X86_64_32S	.rodata.str1.1+0x1b7c
    9e46:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    9e4a:	e8 00 00 00 00       	callq  9e4f <netif_device_detach+0xcb>
			9e4b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9e4f:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    9e53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9e56: R_X86_64_32S	.rodata.str1.1+0x1b46
    9e5a:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    9e60:	4c 89 e1             	mov    %r12,%rcx
    9e63:	4c 89 ea             	mov    %r13,%rdx
    9e66:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    9e6d:	48 89 de             	mov    %rbx,%rsi
    9e70:	e8 00 00 00 00       	callq  9e75 <netif_device_detach+0xf1>
			9e71: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    9e75:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
    9e79:	48 85 ff             	test   %rdi,%rdi
    9e7c:	74 2e                	je     9eac <netif_device_detach+0x128>
    9e7e:	ba 08 00 00 00       	mov    $0x8,%edx
    9e83:	be 48 00 00 00       	mov    $0x48,%esi
    9e88:	e8 00 00 00 00       	callq  9e8d <netif_device_detach+0x109>
			9e89: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    9e8d:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    9e91:	b9 08 00 00 00       	mov    $0x8,%ecx
    9e96:	4c 89 ea             	mov    %r13,%rdx
    9e99:	48 89 de             	mov    %rbx,%rsi
    9e9c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9e9f: R_X86_64_32S	.rodata.str1.1+0x1b46
    9ea3:	49 83 c0 48          	add    $0x48,%r8
    9ea7:	e8 00 00 00 00       	callq  9eac <netif_device_detach+0x128>
			9ea8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    9eac:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    9eb0:	48 85 ff             	test   %rdi,%rdi
    9eb3:	74 05                	je     9eba <netif_device_detach+0x136>
    9eb5:	e8 00 00 00 00       	callq  9eba <netif_device_detach+0x136>
			9eb6: R_X86_64_PC32	kfree+0xfffffffffffffffc
    9eba:	48 83 c4 38          	add    $0x38,%rsp
    9ebe:	5b                   	pop    %rbx
    9ebf:	41 5c                	pop    %r12
    9ec1:	41 5d                	pop    %r13
    9ec3:	c9                   	leaveq 
    9ec4:	c3                   	retq   

0000000000009ec5 <pci_disable_msi>:
    9ec5:	55                   	push   %rbp
    9ec6:	48 89 e5             	mov    %rsp,%rbp
    9ec9:	41 57                	push   %r15
    9ecb:	41 56                	push   %r14
    9ecd:	41 55                	push   %r13
    9ecf:	41 54                	push   %r12
    9ed1:	53                   	push   %rbx
    9ed2:	48 83 ec 48          	sub    $0x48,%rsp
    9ed6:	48 89 7d 98          	mov    %rdi,0xffffffffffffff98(%rbp)
    9eda:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9edd: R_X86_64_32S	.rodata.str1.1+0x1b9e
    9ee1:	e8 00 00 00 00       	callq  9ee6 <pci_disable_msi+0x21>
			9ee2: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9ee6:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
    9eea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9eed: R_X86_64_32S	.rodata.str1.1+0x1bae
    9ef1:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    9ef8:	00 
    9ef9:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    9f00:	00 
    9f01:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
    9f08:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    9f0c:	e8 00 00 00 00       	callq  9f11 <pci_disable_msi+0x4c>
			9f0d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    9f11:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
    9f15:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    9f19:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
    9f1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9f20: R_X86_64_32S	.rodata.str1.1+0x1b9e
    9f24:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    9f2b:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
    9f32:	00 
    9f33:	e8 00 00 00 00       	callq  9f38 <pci_disable_msi+0x73>
			9f34: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    9f38:	48 83 7d c0 00       	cmpq   $0x0,0xffffffffffffffc0(%rbp)
    9f3d:	0f 84 5c 09 00 00    	je     a89f <pci_disable_msi+0x9da>
    9f43:	45 31 ff             	xor    %r15d,%r15d
    9f46:	45 31 f6             	xor    %r14d,%r14d
    9f49:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
    9f50:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    9f54:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    9f58:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    9f5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9f61: R_X86_64_32S	.rodata.str1.1+0x1b9e
    9f65:	41 ff c7             	inc    %r15d
    9f68:	48 89 d9             	mov    %rbx,%rcx
    9f6b:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
    9f6f:	4c 89 e2             	mov    %r12,%rdx
    9f72:	4c 89 ee             	mov    %r13,%rsi
    9f75:	48 83 c1 08          	add    $0x8,%rcx
    9f79:	e8 00 00 00 00       	callq  9f7e <pci_disable_msi+0xb9>
			9f7a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    9f7e:	48 03 5d c0          	add    0xffffffffffffffc0(%rbp),%rbx
    9f82:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    9f88:	4c 89 e2             	mov    %r12,%rdx
    9f8b:	4c 89 ee             	mov    %r13,%rsi
    9f8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9f91: R_X86_64_32S	.rodata.str1.1+0x1b9e
    9f95:	48 89 d9             	mov    %rbx,%rcx
    9f98:	e8 00 00 00 00       	callq  9f9d <pci_disable_msi+0xd8>
			9f99: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    9f9d:	4c 89 f1             	mov    %r14,%rcx
    9fa0:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
    9fa4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    9faa:	4c 89 e2             	mov    %r12,%rdx
    9fad:	4c 89 ee             	mov    %r13,%rsi
    9fb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9fb3: R_X86_64_32S	.rodata.str1.1+0x1b9e
    9fb7:	49 83 c6 38          	add    $0x38,%r14
    9fbb:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
    9fc2:	e8 00 00 00 00       	callq  9fc7 <pci_disable_msi+0x102>
			9fc3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    9fc7:	41 83 ff 0c          	cmp    $0xc,%r15d
    9fcb:	0f 85 78 ff ff ff    	jne    9f49 <pci_disable_msi+0x84>
    9fd1:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    9fd5:	4c 89 e2             	mov    %r12,%rdx
    9fd8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    9fde:	4c 89 ee             	mov    %r13,%rsi
    9fe1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9fe4: R_X86_64_32S	.rodata.str1.1+0x1b9e
    9fe8:	45 31 ff             	xor    %r15d,%r15d
    9feb:	48 83 c1 48          	add    $0x48,%rcx
    9fef:	e8 00 00 00 00       	callq  9ff4 <pci_disable_msi+0x12f>
			9ff0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    9ff4:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    9ff8:	4c 89 e2             	mov    %r12,%rdx
    9ffb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a001:	4c 89 ee             	mov    %r13,%rsi
    a004:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a007: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a00b:	48 83 c1 38          	add    $0x38,%rcx
    a00f:	e8 00 00 00 00       	callq  a014 <pci_disable_msi+0x14f>
			a010: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a014:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a018:	4c 89 e2             	mov    %r12,%rdx
    a01b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a021:	4c 89 ee             	mov    %r13,%rsi
    a024:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a027: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a02b:	48 83 c1 7c          	add    $0x7c,%rcx
    a02f:	e8 00 00 00 00       	callq  a034 <pci_disable_msi+0x16f>
			a030: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a034:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a038:	4c 89 e2             	mov    %r12,%rdx
    a03b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a041:	4c 89 ee             	mov    %r13,%rsi
    a044:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a047: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a04b:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
    a052:	e8 00 00 00 00       	callq  a057 <pci_disable_msi+0x192>
			a053: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a057:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a05b:	4c 89 e2             	mov    %r12,%rdx
    a05e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a064:	4c 89 ee             	mov    %r13,%rsi
    a067:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a06a: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a06e:	48 83 c1 3e          	add    $0x3e,%rcx
    a072:	e8 00 00 00 00       	callq  a077 <pci_disable_msi+0x1b2>
			a073: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a077:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a07b:	4c 89 e2             	mov    %r12,%rdx
    a07e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a084:	4c 89 ee             	mov    %r13,%rsi
    a087:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a08a: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a08e:	48 83 c1 42          	add    $0x42,%rcx
    a092:	e8 00 00 00 00       	callq  a097 <pci_disable_msi+0x1d2>
			a093: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a097:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
    a09b:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
    a09f:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
    a0a6:	00 
    a0a7:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    a0ab:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
    a0af:	48 89 d9             	mov    %rbx,%rcx
    a0b2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a0b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a0bb: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a0bf:	49 ff c7             	inc    %r15
    a0c2:	4c 89 ea             	mov    %r13,%rdx
    a0c5:	4c 89 f6             	mov    %r14,%rsi
    a0c8:	48 ff c3             	inc    %rbx
    a0cb:	e8 00 00 00 00       	callq  a0d0 <pci_disable_msi+0x20b>
			a0cc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a0d0:	49 83 ff 14          	cmp    $0x14,%r15
    a0d4:	75 d1                	jne    a0a7 <pci_disable_msi+0x1e2>
    a0d6:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    a0dd:	00 
    a0de:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
    a0e2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a0e8:	4c 89 ea             	mov    %r13,%rdx
    a0eb:	4c 89 f6             	mov    %r14,%rsi
    a0ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a0f1: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a0f5:	48 89 d9             	mov    %rbx,%rcx
    a0f8:	83 e0 01             	and    $0x1,%eax
    a0fb:	0f b6 c0             	movzbl %al,%eax
    a0fe:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    a101:	e8 00 00 00 00       	callq  a106 <pci_disable_msi+0x241>
			a102: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a106:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    a10d:	00 
    a10e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a114:	48 89 d9             	mov    %rbx,%rcx
    a117:	4c 89 ea             	mov    %r13,%rdx
    a11a:	4c 89 f6             	mov    %r14,%rsi
    a11d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a120: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a124:	d0 e8                	shr    %al
    a126:	83 e0 01             	and    $0x1,%eax
    a129:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    a12c:	e8 00 00 00 00       	callq  a131 <pci_disable_msi+0x26c>
			a12d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a131:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
    a138:	00 
    a139:	4c 89 ea             	mov    %r13,%rdx
    a13c:	4c 89 f6             	mov    %r14,%rsi
    a13f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a142: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a146:	e8 00 00 00 00       	callq  a14b <pci_disable_msi+0x286>
			a147: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a14b:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
    a152:	00 
    a153:	48 85 c0             	test   %rax,%rax
    a156:	0f 84 ac 00 00 00    	je     a208 <pci_disable_msi+0x343>
    a15c:	48 8d 48 18          	lea    0x18(%rax),%rcx
    a160:	4c 89 ea             	mov    %r13,%rdx
    a163:	4c 89 f6             	mov    %r14,%rsi
    a166:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a169: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a16d:	e8 00 00 00 00       	callq  a172 <pci_disable_msi+0x2ad>
			a16e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a172:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    a179:	00 
    a17a:	4c 89 ea             	mov    %r13,%rdx
    a17d:	4c 89 f6             	mov    %r14,%rsi
    a180:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a183: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a187:	48 83 c1 20          	add    $0x20,%rcx
    a18b:	e8 00 00 00 00       	callq  a190 <pci_disable_msi+0x2cb>
			a18c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a190:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    a197:	00 
    a198:	4c 89 ea             	mov    %r13,%rdx
    a19b:	4c 89 f6             	mov    %r14,%rsi
    a19e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a1a1: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a1a5:	48 83 c1 30          	add    $0x30,%rcx
    a1a9:	e8 00 00 00 00       	callq  a1ae <pci_disable_msi+0x2e9>
			a1aa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a1ae:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    a1b5:	00 
    a1b6:	4c 89 ea             	mov    %r13,%rdx
    a1b9:	4c 89 f6             	mov    %r14,%rsi
    a1bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a1bf: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a1c3:	48 83 c1 10          	add    $0x10,%rcx
    a1c7:	e8 00 00 00 00       	callq  a1cc <pci_disable_msi+0x307>
			a1c8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a1cc:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    a1d3:	00 
    a1d4:	4c 89 ea             	mov    %r13,%rdx
    a1d7:	4c 89 f6             	mov    %r14,%rsi
    a1da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a1dd: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a1e1:	48 83 c1 28          	add    $0x28,%rcx
    a1e5:	e8 00 00 00 00       	callq  a1ea <pci_disable_msi+0x325>
			a1e6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a1ea:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    a1f1:	00 
    a1f2:	4c 89 ea             	mov    %r13,%rdx
    a1f5:	4c 89 f6             	mov    %r14,%rsi
    a1f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a1fb: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a1ff:	48 83 c1 08          	add    $0x8,%rcx
    a203:	e8 00 00 00 00       	callq  a208 <pci_disable_msi+0x343>
			a204: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a208:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
    a20f:	00 
    a210:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a216:	4c 89 ea             	mov    %r13,%rdx
    a219:	4c 89 f6             	mov    %r14,%rsi
    a21c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a21f: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a223:	e8 00 00 00 00       	callq  a228 <pci_disable_msi+0x363>
			a224: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a228:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
    a22f:	00 
    a230:	4c 89 ea             	mov    %r13,%rdx
    a233:	4c 89 f6             	mov    %r14,%rsi
    a236:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a239: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a23d:	e8 00 00 00 00       	callq  a242 <pci_disable_msi+0x37d>
			a23e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a242:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a249:	00 
    a24a:	48 85 c0             	test   %rax,%rax
    a24d:	0f 84 91 05 00 00    	je     a7e4 <pci_disable_msi+0x91f>
    a253:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
    a25a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a260:	4c 89 ea             	mov    %r13,%rdx
    a263:	4c 89 f6             	mov    %r14,%rsi
    a266:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a269: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a26d:	31 db                	xor    %ebx,%ebx
    a26f:	e8 00 00 00 00       	callq  a274 <pci_disable_msi+0x3af>
			a270: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a274:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a27b:	00 
    a27c:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a282:	4c 89 ea             	mov    %r13,%rdx
    a285:	4c 89 f6             	mov    %r14,%rsi
    a288:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a28b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a28f:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
    a296:	e8 00 00 00 00       	callq  a29b <pci_disable_msi+0x3d6>
			a297: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a29b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a2a2:	00 
    a2a3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a2a9:	4c 89 ea             	mov    %r13,%rdx
    a2ac:	4c 89 f6             	mov    %r14,%rsi
    a2af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a2b2: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a2b6:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
    a2bd:	e8 00 00 00 00       	callq  a2c2 <pci_disable_msi+0x3fd>
			a2be: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a2c2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a2c9:	00 
    a2ca:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a2d0:	4c 89 ea             	mov    %r13,%rdx
    a2d3:	4c 89 f6             	mov    %r14,%rsi
    a2d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a2d9: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a2dd:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
    a2e4:	e8 00 00 00 00       	callq  a2e9 <pci_disable_msi+0x424>
			a2e5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a2e9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a2f0:	00 
    a2f1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a2f7:	4c 89 ea             	mov    %r13,%rdx
    a2fa:	4c 89 f6             	mov    %r14,%rsi
    a2fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a300: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a304:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
    a30b:	e8 00 00 00 00       	callq  a310 <pci_disable_msi+0x44b>
			a30c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a310:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a317:	00 
    a318:	4c 89 ea             	mov    %r13,%rdx
    a31b:	4c 89 f6             	mov    %r14,%rsi
    a31e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a321: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a325:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    a32c:	e8 00 00 00 00       	callq  a331 <pci_disable_msi+0x46c>
			a32d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a331:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a338:	00 
    a339:	4c 89 ea             	mov    %r13,%rdx
    a33c:	4c 89 f6             	mov    %r14,%rsi
    a33f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a342: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a346:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    a34d:	e8 00 00 00 00       	callq  a352 <pci_disable_msi+0x48d>
			a34e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a352:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a359:	00 
    a35a:	4c 89 ea             	mov    %r13,%rdx
    a35d:	4c 89 f6             	mov    %r14,%rsi
    a360:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a363: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a367:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    a36e:	e8 00 00 00 00       	callq  a373 <pci_disable_msi+0x4ae>
			a36f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a373:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a37a:	00 
    a37b:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    a37f:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
    a383:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a389:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a38c: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a390:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
    a397:	48 01 d9             	add    %rbx,%rcx
    a39a:	48 ff c3             	inc    %rbx
    a39d:	e8 00 00 00 00       	callq  a3a2 <pci_disable_msi+0x4dd>
			a39e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a3a2:	48 83 fb 20          	cmp    $0x20,%rbx
    a3a6:	75 cb                	jne    a373 <pci_disable_msi+0x4ae>
    a3a8:	30 db                	xor    %bl,%bl
    a3aa:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a3b1:	00 
    a3b2:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    a3b6:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
    a3ba:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a3c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a3c3: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a3c7:	4c 89 ea             	mov    %r13,%rdx
    a3ca:	4c 89 f6             	mov    %r14,%rsi
    a3cd:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
    a3d4:	48 01 d9             	add    %rbx,%rcx
    a3d7:	48 ff c3             	inc    %rbx
    a3da:	e8 00 00 00 00       	callq  a3df <pci_disable_msi+0x51a>
			a3db: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a3df:	48 83 fb 20          	cmp    $0x20,%rbx
    a3e3:	75 c5                	jne    a3aa <pci_disable_msi+0x4e5>
    a3e5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a3ec:	00 
    a3ed:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a3f3:	4c 89 ea             	mov    %r13,%rdx
    a3f6:	4c 89 f6             	mov    %r14,%rsi
    a3f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a3fc: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a400:	30 db                	xor    %bl,%bl
    a402:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
    a409:	e8 00 00 00 00       	callq  a40e <pci_disable_msi+0x549>
			a40a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a40e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a415:	00 
    a416:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a41c:	4c 89 ea             	mov    %r13,%rdx
    a41f:	4c 89 f6             	mov    %r14,%rsi
    a422:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a425: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a429:	48 83 c1 48          	add    $0x48,%rcx
    a42d:	e8 00 00 00 00       	callq  a432 <pci_disable_msi+0x56d>
			a42e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a432:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a439:	00 
    a43a:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    a43e:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
    a442:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a448:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a44b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a44f:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
    a456:	48 01 d9             	add    %rbx,%rcx
    a459:	48 ff c3             	inc    %rbx
    a45c:	e8 00 00 00 00       	callq  a461 <pci_disable_msi+0x59c>
			a45d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a461:	48 83 fb 20          	cmp    $0x20,%rbx
    a465:	75 cb                	jne    a432 <pci_disable_msi+0x56d>
    a467:	30 db                	xor    %bl,%bl
    a469:	48 89 d9             	mov    %rbx,%rcx
    a46c:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
    a473:	00 
    a474:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    a478:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
    a47c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a482:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a485: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a489:	4c 89 ea             	mov    %r13,%rdx
    a48c:	48 ff c3             	inc    %rbx
    a48f:	4c 89 f6             	mov    %r14,%rsi
    a492:	e8 00 00 00 00       	callq  a497 <pci_disable_msi+0x5d2>
			a493: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a497:	48 83 fb 10          	cmp    $0x10,%rbx
    a49b:	75 cc                	jne    a469 <pci_disable_msi+0x5a4>
    a49d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a4a4:	00 
    a4a5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a4ab:	4c 89 ea             	mov    %r13,%rdx
    a4ae:	4c 89 f6             	mov    %r14,%rsi
    a4b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a4b4: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a4b8:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
    a4bf:	e8 00 00 00 00       	callq  a4c4 <pci_disable_msi+0x5ff>
			a4c0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a4c4:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a4cb:	00 
    a4cc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a4d2:	4c 89 ea             	mov    %r13,%rdx
    a4d5:	4c 89 f6             	mov    %r14,%rsi
    a4d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a4db: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a4df:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
    a4e6:	e8 00 00 00 00       	callq  a4eb <pci_disable_msi+0x626>
			a4e7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a4eb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a4f2:	00 
    a4f3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a4f9:	4c 89 ea             	mov    %r13,%rdx
    a4fc:	4c 89 f6             	mov    %r14,%rsi
    a4ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a502: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a506:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
    a50d:	e8 00 00 00 00       	callq  a512 <pci_disable_msi+0x64d>
			a50e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a512:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a519:	00 
    a51a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a520:	4c 89 ea             	mov    %r13,%rdx
    a523:	4c 89 f6             	mov    %r14,%rsi
    a526:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a529: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a52d:	48 83 c1 70          	add    $0x70,%rcx
    a531:	e8 00 00 00 00       	callq  a536 <pci_disable_msi+0x671>
			a532: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a536:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a53d:	00 
    a53e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a544:	4c 89 ea             	mov    %r13,%rdx
    a547:	4c 89 f6             	mov    %r14,%rsi
    a54a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a54d: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a551:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
    a558:	e8 00 00 00 00       	callq  a55d <pci_disable_msi+0x698>
			a559: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a55d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a564:	00 
    a565:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a56b:	4c 89 ea             	mov    %r13,%rdx
    a56e:	4c 89 f6             	mov    %r14,%rsi
    a571:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a574: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a578:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
    a57f:	e8 00 00 00 00       	callq  a584 <pci_disable_msi+0x6bf>
			a580: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a584:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a58b:	00 
    a58c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    a592:	4c 89 ea             	mov    %r13,%rdx
    a595:	4c 89 f6             	mov    %r14,%rsi
    a598:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a59b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a59f:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
    a5a6:	e8 00 00 00 00       	callq  a5ab <pci_disable_msi+0x6e6>
			a5a7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a5ab:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a5b2:	00 
    a5b3:	4c 89 ea             	mov    %r13,%rdx
    a5b6:	4c 89 f6             	mov    %r14,%rsi
    a5b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a5bc: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a5c0:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    a5c7:	e8 00 00 00 00       	callq  a5cc <pci_disable_msi+0x707>
			a5c8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a5cc:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a5d3:	00 
    a5d4:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    a5db:	00 
    a5dc:	74 62                	je     a640 <pci_disable_msi+0x77b>
    a5de:	30 db                	xor    %bl,%bl
    a5e0:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a5e7:	00 
    a5e8:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    a5ec:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
    a5f0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a5f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a5f9: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a5fd:	4c 89 ea             	mov    %r13,%rdx
    a600:	4c 89 f6             	mov    %r14,%rsi
    a603:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    a60a:	48 83 c1 08          	add    $0x8,%rcx
    a60e:	48 01 d9             	add    %rbx,%rcx
    a611:	48 ff c3             	inc    %rbx
    a614:	e8 00 00 00 00       	callq  a619 <pci_disable_msi+0x754>
			a615: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a619:	48 83 fb 20          	cmp    $0x20,%rbx
    a61d:	75 c1                	jne    a5e0 <pci_disable_msi+0x71b>
    a61f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a626:	00 
    a627:	4c 89 ea             	mov    %r13,%rdx
    a62a:	4c 89 f6             	mov    %r14,%rsi
    a62d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a630: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a634:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    a63b:	e8 00 00 00 00       	callq  a640 <pci_disable_msi+0x77b>
			a63c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a640:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a647:	00 
    a648:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    a64c:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    a650:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a653: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a657:	48 89 da             	mov    %rbx,%rdx
    a65a:	4c 89 ee             	mov    %r13,%rsi
    a65d:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    a664:	e8 00 00 00 00       	callq  a669 <pci_disable_msi+0x7a4>
			a665: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a669:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a670:	00 
    a671:	48 89 da             	mov    %rbx,%rdx
    a674:	4c 89 ee             	mov    %r13,%rsi
    a677:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a67a: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a67e:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    a685:	e8 00 00 00 00       	callq  a68a <pci_disable_msi+0x7c5>
			a686: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a68a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a691:	00 
    a692:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    a699:	48 85 c0             	test   %rax,%rax
    a69c:	74 3b                	je     a6d9 <pci_disable_msi+0x814>
    a69e:	48 8d 48 60          	lea    0x60(%rax),%rcx
    a6a2:	48 89 da             	mov    %rbx,%rdx
    a6a5:	4c 89 ee             	mov    %r13,%rsi
    a6a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a6ab: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a6af:	e8 00 00 00 00       	callq  a6b4 <pci_disable_msi+0x7ef>
			a6b0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a6b4:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a6bb:	00 
    a6bc:	48 89 da             	mov    %rbx,%rdx
    a6bf:	4c 89 ee             	mov    %r13,%rsi
    a6c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a6c5: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a6c9:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    a6d0:	48 83 c1 58          	add    $0x58,%rcx
    a6d4:	e8 00 00 00 00       	callq  a6d9 <pci_disable_msi+0x814>
			a6d5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a6d9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a6e0:	00 
    a6e1:	48 89 da             	mov    %rbx,%rdx
    a6e4:	4c 89 ee             	mov    %r13,%rsi
    a6e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a6ea: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a6ee:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    a6f5:	e8 00 00 00 00       	callq  a6fa <pci_disable_msi+0x835>
			a6f6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a6fa:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a701:	00 
    a702:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
    a709:	48 85 c0             	test   %rax,%rax
    a70c:	74 41                	je     a74f <pci_disable_msi+0x88a>
    a70e:	48 8d 48 10          	lea    0x10(%rax),%rcx
    a712:	48 89 da             	mov    %rbx,%rdx
    a715:	4c 89 ee             	mov    %r13,%rsi
    a718:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a71b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a71f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a725:	e8 00 00 00 00       	callq  a72a <pci_disable_msi+0x865>
			a726: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a72a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a731:	00 
    a732:	48 89 da             	mov    %rbx,%rdx
    a735:	4c 89 ee             	mov    %r13,%rsi
    a738:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a73b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a73f:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    a746:	48 83 c1 08          	add    $0x8,%rcx
    a74a:	e8 00 00 00 00       	callq  a74f <pci_disable_msi+0x88a>
			a74b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a74f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    a756:	00 
    a757:	48 89 da             	mov    %rbx,%rdx
    a75a:	4c 89 ee             	mov    %r13,%rsi
    a75d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a760: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a764:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    a76b:	e8 00 00 00 00       	callq  a770 <pci_disable_msi+0x8ab>
			a76c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a770:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a777:	00 
    a778:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    a77f:	00 
    a780:	74 62                	je     a7e4 <pci_disable_msi+0x91f>
    a782:	31 db                	xor    %ebx,%ebx
    a784:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a78b:	00 
    a78c:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    a790:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
    a794:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a79a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a79d: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a7a1:	4c 89 ea             	mov    %r13,%rdx
    a7a4:	4c 89 f6             	mov    %r14,%rsi
    a7a7:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    a7ae:	48 83 c1 08          	add    $0x8,%rcx
    a7b2:	48 01 d9             	add    %rbx,%rcx
    a7b5:	48 ff c3             	inc    %rbx
    a7b8:	e8 00 00 00 00       	callq  a7bd <pci_disable_msi+0x8f8>
			a7b9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a7bd:	48 83 fb 20          	cmp    $0x20,%rbx
    a7c1:	75 c1                	jne    a784 <pci_disable_msi+0x8bf>
    a7c3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    a7ca:	00 
    a7cb:	4c 89 ea             	mov    %r13,%rdx
    a7ce:	4c 89 f6             	mov    %r14,%rsi
    a7d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a7d4: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a7d8:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    a7df:	e8 00 00 00 00       	callq  a7e4 <pci_disable_msi+0x91f>
			a7e0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a7e4:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    a7e8:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
    a7ec:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
    a7f3:	00 
    a7f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a7f7: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a7fb:	48 89 da             	mov    %rbx,%rdx
    a7fe:	4c 89 ee             	mov    %r13,%rsi
    a801:	e8 00 00 00 00       	callq  a806 <pci_disable_msi+0x941>
			a802: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a806:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
    a80d:	00 
    a80e:	48 89 da             	mov    %rbx,%rdx
    a811:	4c 89 ee             	mov    %r13,%rsi
    a814:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a817: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a81b:	e8 00 00 00 00       	callq  a820 <pci_disable_msi+0x95b>
			a81c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a820:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
    a827:	00 
    a828:	48 85 c9             	test   %rcx,%rcx
    a82b:	74 18                	je     a845 <pci_disable_msi+0x980>
    a82d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    a833:	48 89 da             	mov    %rbx,%rdx
    a836:	4c 89 ee             	mov    %r13,%rsi
    a839:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a83c: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a840:	e8 00 00 00 00       	callq  a845 <pci_disable_msi+0x980>
			a841: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a845:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a849:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a84f:	48 89 da             	mov    %rbx,%rdx
    a852:	4c 89 ee             	mov    %r13,%rsi
    a855:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a858: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a85c:	48 83 c1 40          	add    $0x40,%rcx
    a860:	e8 00 00 00 00       	callq  a865 <pci_disable_msi+0x9a0>
			a861: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a865:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a869:	48 89 da             	mov    %rbx,%rdx
    a86c:	4c 89 ee             	mov    %r13,%rsi
    a86f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a872: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a876:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a87c:	48 83 c1 3c          	add    $0x3c,%rcx
    a880:	e8 00 00 00 00       	callq  a885 <pci_disable_msi+0x9c0>
			a881: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    a885:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
    a889:	48 89 da             	mov    %rbx,%rdx
    a88c:	4c 89 ee             	mov    %r13,%rsi
    a88f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a892: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a896:	48 83 c1 10          	add    $0x10,%rcx
    a89a:	e8 00 00 00 00       	callq  a89f <pci_disable_msi+0x9da>
			a89b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    a89f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    a8a3:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
    a8a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a8aa: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a8ae:	48 c7 45 a0 0e 06 00 	movq   $0x60e,0xffffffffffffffa0(%rbp)
    a8b5:	00 
    a8b6:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
    a8ba:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    a8be:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
    a8c1:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
    a8c4:	e8 00 00 00 00       	callq  a8c9 <pci_disable_msi+0xa04>
			a8c5: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    a8c9:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
    a8cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a8d0: R_X86_64_32S	.rodata.str1.1+0x1bcc
    a8d4:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    a8d8:	e8 00 00 00 00       	callq  a8dd <pci_disable_msi+0xa18>
			a8d9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    a8dd:	4c 8b 6d b0          	mov    0xffffffffffffffb0(%rbp),%r13
    a8e1:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    a8e5:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    a8eb:	48 89 da             	mov    %rbx,%rdx
    a8ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a8f1: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a8f5:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
    a8fc:	4c 89 ee             	mov    %r13,%rsi
    a8ff:	e8 00 00 00 00       	callq  a904 <pci_disable_msi+0xa3f>
			a900: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    a904:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    a908:	48 85 c0             	test   %rax,%rax
    a90b:	0f 84 3e 09 00 00    	je     b24f <pci_disable_msi+0x138a>
    a911:	4c 8d 40 38          	lea    0x38(%rax),%r8
    a915:	48 89 da             	mov    %rbx,%rdx
    a918:	b9 04 00 00 00       	mov    $0x4,%ecx
    a91d:	4c 89 ee             	mov    %r13,%rsi
    a920:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a923: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a927:	45 31 f6             	xor    %r14d,%r14d
    a92a:	e8 00 00 00 00       	callq  a92f <pci_disable_msi+0xa6a>
			a92b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    a92f:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
    a933:	48 89 da             	mov    %rbx,%rdx
    a936:	b9 04 00 00 00       	mov    $0x4,%ecx
    a93b:	4c 89 ee             	mov    %r13,%rsi
    a93e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a941: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a945:	49 83 c0 7c          	add    $0x7c,%r8
    a949:	e8 00 00 00 00       	callq  a94e <pci_disable_msi+0xa89>
			a94a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    a94e:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
    a952:	48 89 da             	mov    %rbx,%rdx
    a955:	b9 04 00 00 00       	mov    $0x4,%ecx
    a95a:	4c 89 ee             	mov    %r13,%rsi
    a95d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a960: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a964:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
    a96b:	e8 00 00 00 00       	callq  a970 <pci_disable_msi+0xaab>
			a96c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    a970:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
    a974:	48 89 da             	mov    %rbx,%rdx
    a977:	b9 02 00 00 00       	mov    $0x2,%ecx
    a97c:	4c 89 ee             	mov    %r13,%rsi
    a97f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a982: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a986:	49 83 c0 3e          	add    $0x3e,%r8
    a98a:	e8 00 00 00 00       	callq  a98f <pci_disable_msi+0xaca>
			a98b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    a98f:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
    a993:	ba 78 02 00 00       	mov    $0x278,%edx
    a998:	be 80 00 00 00       	mov    $0x80,%esi
    a99d:	e8 00 00 00 00       	callq  a9a2 <pci_disable_msi+0xadd>
			a99e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    a9a2:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
    a9a6:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
    a9aa:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
    a9b1:	00 
    a9b2:	4c 8d 7d cc          	lea    0xffffffffffffffcc(%rbp),%r15
    a9b6:	49 89 d8             	mov    %rbx,%r8
    a9b9:	b9 01 00 00 00       	mov    $0x1,%ecx
    a9be:	4c 89 ee             	mov    %r13,%rsi
    a9c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a9c4: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a9c8:	49 ff c6             	inc    %r14
    a9cb:	4c 89 fa             	mov    %r15,%rdx
    a9ce:	48 ff c3             	inc    %rbx
    a9d1:	e8 00 00 00 00       	callq  a9d6 <pci_disable_msi+0xb11>
			a9d2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    a9d6:	49 83 fe 14          	cmp    $0x14,%r14
    a9da:	75 d6                	jne    a9b2 <pci_disable_msi+0xaed>
    a9dc:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    a9e0:	b9 04 00 00 00       	mov    $0x4,%ecx
    a9e5:	4c 89 fa             	mov    %r15,%rdx
    a9e8:	4c 89 ee             	mov    %r13,%rsi
    a9eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a9ee: R_X86_64_32S	.rodata.str1.1+0x1b9e
    a9f2:	49 89 d8             	mov    %rbx,%r8
    a9f5:	e8 00 00 00 00       	callq  a9fa <pci_disable_msi+0xb35>
			a9f6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    a9fa:	8a 55 c8             	mov    0xffffffffffffffc8(%rbp),%dl
    a9fd:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    aa04:	00 
    aa05:	49 89 d8             	mov    %rbx,%r8
    aa08:	b9 04 00 00 00       	mov    $0x4,%ecx
    aa0d:	4c 89 ee             	mov    %r13,%rsi
    aa10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aa13: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aa17:	83 e2 01             	and    $0x1,%edx
    aa1a:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
    aa1d:	09 d0                	or     %edx,%eax
    aa1f:	4c 89 fa             	mov    %r15,%rdx
    aa22:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
    aa29:	00 
    aa2a:	e8 00 00 00 00       	callq  aa2f <pci_disable_msi+0xb6a>
			aa2b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    aa2f:	8a 55 c8             	mov    0xffffffffffffffc8(%rbp),%dl
    aa32:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    aa39:	00 
    aa3a:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
    aa41:	00 
    aa42:	41 b8 78 00 00 00    	mov    $0x78,%r8d
    aa48:	4c 89 ee             	mov    %r13,%rsi
    aa4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aa4e: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aa52:	83 e2 01             	and    $0x1,%edx
    aa55:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
    aa58:	01 d2                	add    %edx,%edx
    aa5a:	09 d0                	or     %edx,%eax
    aa5c:	4c 89 fa             	mov    %r15,%rdx
    aa5f:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
    aa66:	00 
    aa67:	e8 00 00 00 00       	callq  aa6c <pci_disable_msi+0xba7>
			aa68: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    aa6c:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
    aa73:	00 
    aa74:	48 85 c0             	test   %rax,%rax
    aa77:	0f 84 d0 00 00 00    	je     ab4d <pci_disable_msi+0xc88>
    aa7d:	48 8d 48 18          	lea    0x18(%rax),%rcx
    aa81:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    aa87:	4c 89 fa             	mov    %r15,%rdx
    aa8a:	4c 89 ee             	mov    %r13,%rsi
    aa8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aa90: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aa94:	e8 00 00 00 00       	callq  aa99 <pci_disable_msi+0xbd4>
			aa95: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    aa99:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    aaa0:	00 
    aaa1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    aaa7:	4c 89 fa             	mov    %r15,%rdx
    aaaa:	4c 89 ee             	mov    %r13,%rsi
    aaad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aab0: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aab4:	48 83 c1 20          	add    $0x20,%rcx
    aab8:	e8 00 00 00 00       	callq  aabd <pci_disable_msi+0xbf8>
			aab9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    aabd:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    aac4:	00 
    aac5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    aacb:	4c 89 fa             	mov    %r15,%rdx
    aace:	4c 89 ee             	mov    %r13,%rsi
    aad1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aad4: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aad8:	48 83 c1 30          	add    $0x30,%rcx
    aadc:	e8 00 00 00 00       	callq  aae1 <pci_disable_msi+0xc1c>
			aadd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    aae1:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    aae8:	00 
    aae9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    aaef:	4c 89 fa             	mov    %r15,%rdx
    aaf2:	4c 89 ee             	mov    %r13,%rsi
    aaf5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aaf8: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aafc:	48 83 c1 10          	add    $0x10,%rcx
    ab00:	e8 00 00 00 00       	callq  ab05 <pci_disable_msi+0xc40>
			ab01: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ab05:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    ab0c:	00 
    ab0d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ab13:	4c 89 fa             	mov    %r15,%rdx
    ab16:	4c 89 ee             	mov    %r13,%rsi
    ab19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ab1c: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ab20:	48 83 c1 28          	add    $0x28,%rcx
    ab24:	e8 00 00 00 00       	callq  ab29 <pci_disable_msi+0xc64>
			ab25: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ab29:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    ab30:	00 
    ab31:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ab37:	4c 89 fa             	mov    %r15,%rdx
    ab3a:	4c 89 ee             	mov    %r13,%rsi
    ab3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ab40: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ab44:	48 83 c1 08          	add    $0x8,%rcx
    ab48:	e8 00 00 00 00       	callq  ab4d <pci_disable_msi+0xc88>
			ab49: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ab4d:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
    ab54:	00 
    ab55:	b9 08 00 00 00       	mov    $0x8,%ecx
    ab5a:	4c 89 fa             	mov    %r15,%rdx
    ab5d:	4c 89 ee             	mov    %r13,%rsi
    ab60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ab63: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ab67:	e8 00 00 00 00       	callq  ab6c <pci_disable_msi+0xca7>
			ab68: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ab6c:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
    ab73:	00 
    ab74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ab77: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ab7b:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    ab81:	4c 89 fa             	mov    %r15,%rdx
    ab84:	4c 89 ee             	mov    %r13,%rsi
    ab87:	e8 00 00 00 00       	callq  ab8c <pci_disable_msi+0xcc7>
			ab88: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ab8c:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    ab93:	00 
    ab94:	48 85 ff             	test   %rdi,%rdi
    ab97:	0f 84 08 06 00 00    	je     b1a5 <pci_disable_msi+0x12e0>
    ab9d:	ba 08 00 00 00       	mov    $0x8,%edx
    aba2:	be 10 03 00 00       	mov    $0x310,%esi
    aba7:	31 db                	xor    %ebx,%ebx
    aba9:	e8 00 00 00 00       	callq  abae <pci_disable_msi+0xce9>
			abaa: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    abae:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    abb5:	00 
    abb6:	b9 08 00 00 00       	mov    $0x8,%ecx
    abbb:	4c 89 fa             	mov    %r15,%rdx
    abbe:	4c 89 ee             	mov    %r13,%rsi
    abc1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			abc4: R_X86_64_32S	.rodata.str1.1+0x1b9e
    abc8:	49 81 c0 10 03 00 00 	add    $0x310,%r8
    abcf:	e8 00 00 00 00       	callq  abd4 <pci_disable_msi+0xd0f>
			abd0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    abd4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    abdb:	00 
    abdc:	b9 02 00 00 00       	mov    $0x2,%ecx
    abe1:	4c 89 fa             	mov    %r15,%rdx
    abe4:	4c 89 ee             	mov    %r13,%rsi
    abe7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			abea: R_X86_64_32S	.rodata.str1.1+0x1b9e
    abee:	49 81 c0 70 01 00 00 	add    $0x170,%r8
    abf5:	e8 00 00 00 00       	callq  abfa <pci_disable_msi+0xd35>
			abf6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    abfa:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ac01:	00 
    ac02:	b9 08 00 00 00       	mov    $0x8,%ecx
    ac07:	4c 89 fa             	mov    %r15,%rdx
    ac0a:	4c 89 ee             	mov    %r13,%rsi
    ac0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ac10: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ac14:	49 81 c0 48 03 00 00 	add    $0x348,%r8
    ac1b:	e8 00 00 00 00       	callq  ac20 <pci_disable_msi+0xd5b>
			ac1c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ac20:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ac27:	00 
    ac28:	b9 04 00 00 00       	mov    $0x4,%ecx
    ac2d:	4c 89 fa             	mov    %r15,%rdx
    ac30:	4c 89 ee             	mov    %r13,%rsi
    ac33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ac36: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ac3a:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
    ac41:	e8 00 00 00 00       	callq  ac46 <pci_disable_msi+0xd81>
			ac42: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ac46:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ac4d:	00 
    ac4e:	b9 04 00 00 00       	mov    $0x4,%ecx
    ac53:	4c 89 fa             	mov    %r15,%rdx
    ac56:	4c 89 ee             	mov    %r13,%rsi
    ac59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ac5c: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ac60:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
    ac67:	e8 00 00 00 00       	callq  ac6c <pci_disable_msi+0xda7>
			ac68: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ac6c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    ac73:	00 
    ac74:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ac7a:	4c 89 fa             	mov    %r15,%rdx
    ac7d:	4c 89 ee             	mov    %r13,%rsi
    ac80:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ac83: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ac87:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    ac8e:	e8 00 00 00 00       	callq  ac93 <pci_disable_msi+0xdce>
			ac8f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ac93:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    ac9a:	00 
    ac9b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    aca1:	4c 89 fa             	mov    %r15,%rdx
    aca4:	4c 89 ee             	mov    %r13,%rsi
    aca7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			acaa: R_X86_64_32S	.rodata.str1.1+0x1b9e
    acae:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    acb5:	e8 00 00 00 00       	callq  acba <pci_disable_msi+0xdf5>
			acb6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    acba:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    acc1:	00 
    acc2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    acc8:	4c 89 fa             	mov    %r15,%rdx
    accb:	4c 89 ee             	mov    %r13,%rsi
    acce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			acd1: R_X86_64_32S	.rodata.str1.1+0x1b9e
    acd5:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    acdc:	e8 00 00 00 00       	callq  ace1 <pci_disable_msi+0xe1c>
			acdd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ace1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ace8:	00 
    ace9:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
    aced:	b9 01 00 00 00       	mov    $0x1,%ecx
    acf2:	4c 89 ee             	mov    %r13,%rsi
    acf5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			acf8: R_X86_64_32S	.rodata.str1.1+0x1b9e
    acfc:	49 81 c0 60 02 00 00 	add    $0x260,%r8
    ad03:	49 01 d8             	add    %rbx,%r8
    ad06:	48 ff c3             	inc    %rbx
    ad09:	e8 00 00 00 00       	callq  ad0e <pci_disable_msi+0xe49>
			ad0a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ad0e:	48 83 fb 20          	cmp    $0x20,%rbx
    ad12:	75 cd                	jne    ace1 <pci_disable_msi+0xe1c>
    ad14:	30 db                	xor    %bl,%bl
    ad16:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ad1d:	00 
    ad1e:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    ad22:	b9 01 00 00 00       	mov    $0x1,%ecx
    ad27:	4c 89 ee             	mov    %r13,%rsi
    ad2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ad2d: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ad31:	4c 89 f2             	mov    %r14,%rdx
    ad34:	49 81 c0 80 01 00 00 	add    $0x180,%r8
    ad3b:	49 01 d8             	add    %rbx,%r8
    ad3e:	48 ff c3             	inc    %rbx
    ad41:	e8 00 00 00 00       	callq  ad46 <pci_disable_msi+0xe81>
			ad42: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ad46:	48 83 fb 20          	cmp    $0x20,%rbx
    ad4a:	75 ca                	jne    ad16 <pci_disable_msi+0xe51>
    ad4c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ad53:	00 
    ad54:	b9 02 00 00 00       	mov    $0x2,%ecx
    ad59:	4c 89 f2             	mov    %r14,%rdx
    ad5c:	4c 89 ee             	mov    %r13,%rsi
    ad5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ad62: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ad66:	30 db                	xor    %bl,%bl
    ad68:	49 81 c0 72 01 00 00 	add    $0x172,%r8
    ad6f:	e8 00 00 00 00       	callq  ad74 <pci_disable_msi+0xeaf>
			ad70: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ad74:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    ad7b:	00 
    ad7c:	ba 08 00 00 00       	mov    $0x8,%edx
    ad81:	be 48 00 00 00       	mov    $0x48,%esi
    ad86:	e8 00 00 00 00       	callq  ad8b <pci_disable_msi+0xec6>
			ad87: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    ad8b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ad92:	00 
    ad93:	b9 08 00 00 00       	mov    $0x8,%ecx
    ad98:	4c 89 f2             	mov    %r14,%rdx
    ad9b:	4c 89 ee             	mov    %r13,%rsi
    ad9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ada1: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ada5:	49 83 c0 48          	add    $0x48,%r8
    ada9:	e8 00 00 00 00       	callq  adae <pci_disable_msi+0xee9>
			adaa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    adae:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    adb5:	00 
    adb6:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
    adba:	b9 01 00 00 00       	mov    $0x1,%ecx
    adbf:	4c 89 ee             	mov    %r13,%rsi
    adc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			adc5: R_X86_64_32S	.rodata.str1.1+0x1b9e
    adc9:	49 81 c0 40 02 00 00 	add    $0x240,%r8
    add0:	49 01 d8             	add    %rbx,%r8
    add3:	48 ff c3             	inc    %rbx
    add6:	e8 00 00 00 00       	callq  addb <pci_disable_msi+0xf16>
			add7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    addb:	48 83 fb 20          	cmp    $0x20,%rbx
    addf:	75 cd                	jne    adae <pci_disable_msi+0xee9>
    ade1:	30 db                	xor    %bl,%bl
    ade3:	49 89 d8             	mov    %rbx,%r8
    ade6:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
    aded:	00 
    adee:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    adf2:	b9 01 00 00 00       	mov    $0x1,%ecx
    adf7:	4c 89 ee             	mov    %r13,%rsi
    adfa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			adfd: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ae01:	4c 89 f2             	mov    %r14,%rdx
    ae04:	48 ff c3             	inc    %rbx
    ae07:	e8 00 00 00 00       	callq  ae0c <pci_disable_msi+0xf47>
			ae08: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ae0c:	48 83 fb 10          	cmp    $0x10,%rbx
    ae10:	75 d1                	jne    ade3 <pci_disable_msi+0xf1e>
    ae12:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    ae19:	00 
    ae1a:	ba 10 00 00 00       	mov    $0x10,%edx
    ae1f:	be 18 04 00 00       	mov    $0x418,%esi
    ae24:	e8 00 00 00 00       	callq  ae29 <pci_disable_msi+0xf64>
			ae25: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    ae29:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ae30:	00 
    ae31:	b9 01 00 00 00       	mov    $0x1,%ecx
    ae36:	4c 89 f2             	mov    %r14,%rdx
    ae39:	4c 89 ee             	mov    %r13,%rsi
    ae3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ae3f: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ae43:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
    ae4a:	e8 00 00 00 00       	callq  ae4f <pci_disable_msi+0xf8a>
			ae4b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ae4f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ae56:	00 
    ae57:	b9 04 00 00 00       	mov    $0x4,%ecx
    ae5c:	4c 89 f2             	mov    %r14,%rdx
    ae5f:	4c 89 ee             	mov    %r13,%rsi
    ae62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ae65: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ae69:	49 81 c0 30 04 00 00 	add    $0x430,%r8
    ae70:	e8 00 00 00 00       	callq  ae75 <pci_disable_msi+0xfb0>
			ae71: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ae75:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    ae7c:	00 
    ae7d:	b9 08 00 00 00       	mov    $0x8,%ecx
    ae82:	4c 89 f2             	mov    %r14,%rdx
    ae85:	4c 89 ee             	mov    %r13,%rsi
    ae88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ae8b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    ae8f:	49 83 c0 70          	add    $0x70,%r8
    ae93:	e8 00 00 00 00       	callq  ae98 <pci_disable_msi+0xfd3>
			ae94: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ae98:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    ae9f:	00 
    aea0:	ba 10 00 00 00       	mov    $0x10,%edx
    aea5:	be 10 00 00 00       	mov    $0x10,%esi
    aeaa:	e8 00 00 00 00       	callq  aeaf <pci_disable_msi+0xfea>
			aeab: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    aeaf:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    aeb6:	00 
    aeb7:	b9 04 00 00 00       	mov    $0x4,%ecx
    aebc:	4c 89 f2             	mov    %r14,%rdx
    aebf:	4c 89 ee             	mov    %r13,%rsi
    aec2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aec5: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aec9:	49 81 c0 50 03 00 00 	add    $0x350,%r8
    aed0:	e8 00 00 00 00       	callq  aed5 <pci_disable_msi+0x1010>
			aed1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    aed5:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    aedc:	00 
    aedd:	b9 08 00 00 00       	mov    $0x8,%ecx
    aee2:	4c 89 f2             	mov    %r14,%rdx
    aee5:	4c 89 ee             	mov    %r13,%rsi
    aee8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aeeb: R_X86_64_32S	.rodata.str1.1+0x1b9e
    aeef:	49 81 c0 00 07 00 00 	add    $0x700,%r8
    aef6:	e8 00 00 00 00       	callq  aefb <pci_disable_msi+0x1036>
			aef7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    aefb:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    af02:	00 
    af03:	b9 04 00 00 00       	mov    $0x4,%ecx
    af08:	4c 89 f2             	mov    %r14,%rdx
    af0b:	4c 89 ee             	mov    %r13,%rsi
    af0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			af11: R_X86_64_32S	.rodata.str1.1+0x1b9e
    af15:	49 81 c0 60 01 00 00 	add    $0x160,%r8
    af1c:	e8 00 00 00 00       	callq  af21 <pci_disable_msi+0x105c>
			af1d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    af21:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    af28:	00 
    af29:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    af2f:	4c 89 f2             	mov    %r14,%rdx
    af32:	4c 89 ee             	mov    %r13,%rsi
    af35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			af38: R_X86_64_32S	.rodata.str1.1+0x1b9e
    af3c:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    af43:	e8 00 00 00 00       	callq  af48 <pci_disable_msi+0x1083>
			af44: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    af48:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    af4f:	00 
    af50:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    af57:	00 
    af58:	74 63                	je     afbd <pci_disable_msi+0x10f8>
    af5a:	30 db                	xor    %bl,%bl
    af5c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    af63:	00 
    af64:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    af68:	b9 01 00 00 00       	mov    $0x1,%ecx
    af6d:	4c 89 ee             	mov    %r13,%rsi
    af70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			af73: R_X86_64_32S	.rodata.str1.1+0x1b9e
    af77:	4c 89 f2             	mov    %r14,%rdx
    af7a:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
    af81:	49 83 c0 08          	add    $0x8,%r8
    af85:	49 01 d8             	add    %rbx,%r8
    af88:	48 ff c3             	inc    %rbx
    af8b:	e8 00 00 00 00       	callq  af90 <pci_disable_msi+0x10cb>
			af8c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    af90:	48 83 fb 20          	cmp    $0x20,%rbx
    af94:	75 c6                	jne    af5c <pci_disable_msi+0x1097>
    af96:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    af9d:	00 
    af9e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    afa4:	4c 89 f2             	mov    %r14,%rdx
    afa7:	4c 89 ee             	mov    %r13,%rsi
    afaa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			afad: R_X86_64_32S	.rodata.str1.1+0x1b9e
    afb1:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    afb8:	e8 00 00 00 00       	callq  afbd <pci_disable_msi+0x10f8>
			afb9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    afbd:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    afc4:	00 
    afc5:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
    afc9:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
    afcf:	4c 89 ee             	mov    %r13,%rsi
    afd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			afd5: R_X86_64_32S	.rodata.str1.1+0x1b9e
    afd9:	48 89 da             	mov    %rbx,%rdx
    afdc:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    afe3:	e8 00 00 00 00       	callq  afe8 <pci_disable_msi+0x1123>
			afe4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    afe8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    afef:	00 
    aff0:	41 b8 68 01 00 00    	mov    $0x168,%r8d
    aff6:	48 89 da             	mov    %rbx,%rdx
    aff9:	4c 89 ee             	mov    %r13,%rsi
    affc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			afff: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b003:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    b00a:	e8 00 00 00 00       	callq  b00f <pci_disable_msi+0x114a>
			b00b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b00f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b016:	00 
    b017:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    b01e:	48 85 c0             	test   %rax,%rax
    b021:	74 47                	je     b06a <pci_disable_msi+0x11a5>
    b023:	48 8d 48 60          	lea    0x60(%rax),%rcx
    b027:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b02d:	48 89 da             	mov    %rbx,%rdx
    b030:	4c 89 ee             	mov    %r13,%rsi
    b033:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b036: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b03a:	e8 00 00 00 00       	callq  b03f <pci_disable_msi+0x117a>
			b03b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b03f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b046:	00 
    b047:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b04d:	48 89 da             	mov    %rbx,%rdx
    b050:	4c 89 ee             	mov    %r13,%rsi
    b053:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b056: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b05a:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    b061:	48 83 c1 58          	add    $0x58,%rcx
    b065:	e8 00 00 00 00       	callq  b06a <pci_disable_msi+0x11a5>
			b066: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b06a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b071:	00 
    b072:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b075: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b079:	41 b8 80 00 00 00    	mov    $0x80,%r8d
    b07f:	48 89 da             	mov    %rbx,%rdx
    b082:	4c 89 ee             	mov    %r13,%rsi
    b085:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    b08c:	e8 00 00 00 00       	callq  b091 <pci_disable_msi+0x11cc>
			b08d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b091:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b098:	00 
    b099:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
    b0a0:	48 85 ff             	test   %rdi,%rdi
    b0a3:	74 64                	je     b109 <pci_disable_msi+0x1244>
    b0a5:	ba 08 00 00 00       	mov    $0x8,%edx
    b0aa:	be 10 00 00 00       	mov    $0x10,%esi
    b0af:	e8 00 00 00 00       	callq  b0b4 <pci_disable_msi+0x11ef>
			b0b0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    b0b4:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b0bb:	00 
    b0bc:	b9 08 00 00 00       	mov    $0x8,%ecx
    b0c1:	48 89 da             	mov    %rbx,%rdx
    b0c4:	4c 89 ee             	mov    %r13,%rsi
    b0c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b0ca: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b0ce:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
    b0d5:	49 83 c0 10          	add    $0x10,%r8
    b0d9:	e8 00 00 00 00       	callq  b0de <pci_disable_msi+0x1219>
			b0da: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    b0de:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b0e5:	00 
    b0e6:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
    b0ec:	48 89 da             	mov    %rbx,%rdx
    b0ef:	4c 89 ee             	mov    %r13,%rsi
    b0f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b0f5: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b0f9:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    b100:	48 83 c1 08          	add    $0x8,%rcx
    b104:	e8 00 00 00 00       	callq  b109 <pci_disable_msi+0x1244>
			b105: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b109:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b110:	00 
    b111:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    b117:	48 89 da             	mov    %rbx,%rdx
    b11a:	4c 89 ee             	mov    %r13,%rsi
    b11d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b120: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b124:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    b12b:	e8 00 00 00 00       	callq  b130 <pci_disable_msi+0x126b>
			b12c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b130:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b137:	00 
    b138:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    b13f:	00 
    b140:	74 63                	je     b1a5 <pci_disable_msi+0x12e0>
    b142:	31 db                	xor    %ebx,%ebx
    b144:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b14b:	00 
    b14c:	4c 8d 75 cc          	lea    0xffffffffffffffcc(%rbp),%r14
    b150:	b9 01 00 00 00       	mov    $0x1,%ecx
    b155:	4c 89 ee             	mov    %r13,%rsi
    b158:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b15b: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b15f:	4c 89 f2             	mov    %r14,%rdx
    b162:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
    b169:	49 83 c0 08          	add    $0x8,%r8
    b16d:	49 01 d8             	add    %rbx,%r8
    b170:	48 ff c3             	inc    %rbx
    b173:	e8 00 00 00 00       	callq  b178 <pci_disable_msi+0x12b3>
			b174: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    b178:	48 83 fb 20          	cmp    $0x20,%rbx
    b17c:	75 c6                	jne    b144 <pci_disable_msi+0x127f>
    b17e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b185:	00 
    b186:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    b18c:	4c 89 f2             	mov    %r14,%rdx
    b18f:	4c 89 ee             	mov    %r13,%rsi
    b192:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b195: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b199:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    b1a0:	e8 00 00 00 00       	callq  b1a5 <pci_disable_msi+0x12e0>
			b1a1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b1a5:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
    b1a9:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
    b1b0:	00 
    b1b1:	41 b8 78 02 00 00    	mov    $0x278,%r8d
    b1b7:	4c 89 ee             	mov    %r13,%rsi
    b1ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b1bd: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b1c1:	48 89 da             	mov    %rbx,%rdx
    b1c4:	e8 00 00 00 00       	callq  b1c9 <pci_disable_msi+0x1304>
			b1c5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b1c9:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
    b1d0:	00 
    b1d1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b1d7:	48 89 da             	mov    %rbx,%rdx
    b1da:	4c 89 ee             	mov    %r13,%rsi
    b1dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b1e0: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b1e4:	e8 00 00 00 00       	callq  b1e9 <pci_disable_msi+0x1324>
			b1e5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b1e9:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
    b1f0:	00 
    b1f1:	48 85 c0             	test   %rax,%rax
    b1f4:	74 1a                	je     b210 <pci_disable_msi+0x134b>
    b1f6:	49 89 c0             	mov    %rax,%r8
    b1f9:	b9 08 00 00 00       	mov    $0x8,%ecx
    b1fe:	48 89 da             	mov    %rbx,%rdx
    b201:	4c 89 ee             	mov    %r13,%rsi
    b204:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b207: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b20b:	e8 00 00 00 00       	callq  b210 <pci_disable_msi+0x134b>
			b20c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    b210:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
    b214:	b9 02 00 00 00       	mov    $0x2,%ecx
    b219:	48 89 da             	mov    %rbx,%rdx
    b21c:	4c 89 ee             	mov    %r13,%rsi
    b21f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b222: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b226:	49 83 c0 3c          	add    $0x3c,%r8
    b22a:	e8 00 00 00 00       	callq  b22f <pci_disable_msi+0x136a>
			b22b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    b22f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b233:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
    b239:	48 89 da             	mov    %rbx,%rdx
    b23c:	4c 89 ee             	mov    %r13,%rsi
    b23f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b242: R_X86_64_32S	.rodata.str1.1+0x1b9e
    b246:	48 83 c1 10          	add    $0x10,%rcx
    b24a:	e8 00 00 00 00       	callq  b24f <pci_disable_msi+0x138a>
			b24b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b24f:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
    b253:	48 85 ff             	test   %rdi,%rdi
    b256:	74 05                	je     b25d <pci_disable_msi+0x1398>
    b258:	e8 00 00 00 00       	callq  b25d <pci_disable_msi+0x1398>
			b259: R_X86_64_PC32	kfree+0xfffffffffffffffc
    b25d:	48 83 c4 48          	add    $0x48,%rsp
    b261:	5b                   	pop    %rbx
    b262:	41 5c                	pop    %r12
    b264:	41 5d                	pop    %r13
    b266:	41 5e                	pop    %r14
    b268:	41 5f                	pop    %r15
    b26a:	c9                   	leaveq 
    b26b:	c3                   	retq   

000000000000b26c <e1000_free_irq>:
    b26c:	55                   	push   %rbp
    b26d:	48 89 e5             	mov    %rsp,%rbp
    b270:	53                   	push   %rbx
    b271:	48 89 fb             	mov    %rdi,%rbx
    b274:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b277: R_X86_64_32S	.rodata.str1.1+0x1bea
    b27b:	48 83 ec 08          	sub    $0x8,%rsp
    b27f:	e8 00 00 00 00       	callq  b284 <e1000_free_irq+0x18>
			b280: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b284:	48 8b 83 f8 02 00 00 	mov    0x2f8(%rbx),%rax
    b28b:	48 8b b3 f0 02 00 00 	mov    0x2f0(%rbx),%rsi
    b292:	8b b8 fc 02 00 00    	mov    0x2fc(%rax),%edi
    b298:	e8 a8 c1 ff ff       	callq  7445 <free_irq>
    b29d:	80 bb c4 07 00 00 00 	cmpb   $0x0,0x7c4(%rbx)
    b2a4:	74 0c                	je     b2b2 <e1000_free_irq+0x46>
    b2a6:	48 8b bb f8 02 00 00 	mov    0x2f8(%rbx),%rdi
    b2ad:	e8 13 ec ff ff       	callq  9ec5 <pci_disable_msi>
    b2b2:	58                   	pop    %rax
    b2b3:	5b                   	pop    %rbx
    b2b4:	c9                   	leaveq 
    b2b5:	c3                   	retq   

000000000000b2b6 <netif_device_attach>:
    b2b6:	55                   	push   %rbp
    b2b7:	48 89 e5             	mov    %rsp,%rbp
    b2ba:	41 55                	push   %r13
    b2bc:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    b2c0:	41 54                	push   %r12
    b2c2:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    b2c6:	53                   	push   %rbx
    b2c7:	48 89 fb             	mov    %rdi,%rbx
    b2ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b2cd: R_X86_64_32S	.rodata.str1.1+0x1bf9
    b2d1:	48 83 ec 38          	sub    $0x38,%rsp
    b2d5:	e8 00 00 00 00       	callq  b2da <netif_device_attach+0x24>
			b2d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b2da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b2dd: R_X86_64_32S	.rodata.str1.1+0x1c0d
    b2e1:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    b2e8:	00 
    b2e9:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    b2f0:	00 
    b2f1:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    b2f8:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
    b2fc:	e8 00 00 00 00       	callq  b301 <netif_device_attach+0x4b>
			b2fd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b301:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    b305:	4c 89 ea             	mov    %r13,%rdx
    b308:	4c 89 e6             	mov    %r12,%rsi
    b30b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b30e: R_X86_64_32S	.rodata.str1.1+0x1bf9
    b312:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    b319:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    b320:	00 
    b321:	e8 00 00 00 00       	callq  b326 <netif_device_attach+0x70>
			b322: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b326:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    b32a:	48 85 c0             	test   %rax,%rax
    b32d:	74 1c                	je     b34b <netif_device_attach+0x95>
    b32f:	48 8d 48 48          	lea    0x48(%rax),%rcx
    b333:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b339:	4c 89 ea             	mov    %r13,%rdx
    b33c:	4c 89 e6             	mov    %r12,%rsi
    b33f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b342: R_X86_64_32S	.rodata.str1.1+0x1bf9
    b346:	e8 00 00 00 00       	callq  b34b <netif_device_attach+0x95>
			b347: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b34b:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    b34f:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    b353:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b356: R_X86_64_32S	.rodata.str1.1+0x1bf9
    b35a:	48 c7 45 b0 e3 05 00 	movq   $0x5e3,0xffffffffffffffb0(%rbp)
    b361:	00 
    b362:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    b366:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
    b369:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    b36c:	e8 00 00 00 00       	callq  b371 <netif_device_attach+0xbb>
			b36d: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    b371:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b374: R_X86_64_32S	.rodata.str1.1+0x1c2f
    b378:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
    b37c:	e8 00 00 00 00       	callq  b381 <netif_device_attach+0xcb>
			b37d: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b381:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
    b385:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b388: R_X86_64_32S	.rodata.str1.1+0x1bf9
    b38c:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    b392:	4c 89 e1             	mov    %r12,%rcx
    b395:	4c 89 ea             	mov    %r13,%rdx
    b398:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    b39f:	48 89 de             	mov    %rbx,%rsi
    b3a2:	e8 00 00 00 00       	callq  b3a7 <netif_device_attach+0xf1>
			b3a3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    b3a7:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
    b3ab:	48 85 ff             	test   %rdi,%rdi
    b3ae:	74 2e                	je     b3de <netif_device_attach+0x128>
    b3b0:	ba 08 00 00 00       	mov    $0x8,%edx
    b3b5:	be 48 00 00 00       	mov    $0x48,%esi
    b3ba:	e8 00 00 00 00       	callq  b3bf <netif_device_attach+0x109>
			b3bb: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    b3bf:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    b3c3:	b9 08 00 00 00       	mov    $0x8,%ecx
    b3c8:	4c 89 ea             	mov    %r13,%rdx
    b3cb:	48 89 de             	mov    %rbx,%rsi
    b3ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b3d1: R_X86_64_32S	.rodata.str1.1+0x1bf9
    b3d5:	49 83 c0 48          	add    $0x48,%r8
    b3d9:	e8 00 00 00 00       	callq  b3de <netif_device_attach+0x128>
			b3da: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    b3de:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    b3e2:	48 85 ff             	test   %rdi,%rdi
    b3e5:	74 05                	je     b3ec <netif_device_attach+0x136>
    b3e7:	e8 00 00 00 00       	callq  b3ec <netif_device_attach+0x136>
			b3e8: R_X86_64_PC32	kfree+0xfffffffffffffffc
    b3ec:	48 83 c4 38          	add    $0x38,%rsp
    b3f0:	5b                   	pop    %rbx
    b3f1:	41 5c                	pop    %r12
    b3f3:	41 5d                	pop    %r13
    b3f5:	c9                   	leaveq 
    b3f6:	c3                   	retq   

000000000000b3f7 <e1000_get_bus_info>:
    b3f7:	55                   	push   %rbp
    b3f8:	48 89 e5             	mov    %rsp,%rbp
    b3fb:	41 57                	push   %r15
    b3fd:	41 56                	push   %r14
    b3ff:	41 55                	push   %r13
    b401:	41 54                	push   %r12
    b403:	53                   	push   %rbx
    b404:	48 83 ec 68          	sub    $0x68,%rsp
    b408:	48 89 bd 78 ff ff ff 	mov    %rdi,0xffffffffffffff78(%rbp)
    b40f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b412: R_X86_64_32S	.rodata.str1.1+0x1c51
    b416:	e8 00 00 00 00       	callq  b41b <e1000_get_bus_info+0x24>
			b417: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b41b:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    b422:	8b 42 10             	mov    0x10(%rdx),%eax
    b425:	83 f8 01             	cmp    $0x1,%eax
    b428:	74 27                	je     b451 <e1000_get_bus_info+0x5a>
    b42a:	83 f8 02             	cmp    $0x2,%eax
    b42d:	74 22                	je     b451 <e1000_get_bus_info+0x5a>
    b42f:	83 f8 0e             	cmp    $0xe,%eax
    b432:	74 37                	je     b46b <e1000_get_bus_info+0x74>
    b434:	83 f8 0f             	cmp    $0xf,%eax
    b437:	74 32                	je     b46b <e1000_get_bus_info+0x74>
    b439:	83 f8 10             	cmp    $0x10,%eax
    b43c:	74 2d                	je     b46b <e1000_get_bus_info+0x74>
    b43e:	83 f8 11             	cmp    $0x11,%eax
    b441:	74 28                	je     b46b <e1000_get_bus_info+0x74>
    b443:	83 f8 12             	cmp    $0x12,%eax
    b446:	0f 85 ce 14 00 00    	jne    c91a <e1000_get_bus_info+0x1523>
    b44c:	e9 a8 14 00 00       	jmpq   c8f9 <e1000_get_bus_info+0x1502>
    b451:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    b458:	c7 40 44 01 00 00 00 	movl   $0x1,0x44(%rax)
    b45f:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
    b466:	e9 82 14 00 00       	jmpq   c8ed <e1000_get_bus_info+0x14f6>
    b46b:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    b472:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b475: R_X86_64_32S	.rodata.str1.1+0x1c64
    b479:	c7 42 44 03 00 00 00 	movl   $0x3,0x44(%rdx)
    b480:	c7 42 3c 06 00 00 00 	movl   $0x6,0x3c(%rdx)
    b487:	e8 00 00 00 00       	callq  b48c <e1000_get_bus_info+0x95>
			b488: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b48c:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    b493:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b496: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b49a:	48 8b 40 20          	mov    0x20(%rax),%rax
    b49e:	48 89 45 80          	mov    %rax,0xffffffffffffff80(%rbp)
    b4a2:	48 8b 90 f8 02 00 00 	mov    0x2f8(%rax),%rdx
    b4a9:	48 89 55 88          	mov    %rdx,0xffffffffffffff88(%rbp)
    b4ad:	e8 00 00 00 00       	callq  b4b2 <e1000_get_bus_info+0xbb>
			b4ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b4b2:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
    b4b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b4b9: R_X86_64_32S	.rodata.str1.1+0x1c90
    b4bd:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    b4c4:	00 
    b4c5:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    b4cc:	00 
    b4cd:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    b4d4:	c7 45 c0 10 00 00 00 	movl   $0x10,0xffffffffffffffc0(%rbp)
    b4db:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    b4df:	e8 00 00 00 00       	callq  b4e4 <e1000_get_bus_info+0xed>
			b4e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
    b4e4:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    b4e8:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
    b4ec:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    b4f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b4f3: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b4f7:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
    b4fe:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    b505:	00 
    b506:	e8 00 00 00 00       	callq  b50b <e1000_get_bus_info+0x114>
			b507: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b50b:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
    b510:	0f 84 5e 09 00 00    	je     be74 <e1000_get_bus_info+0xa7d>
    b516:	45 31 ff             	xor    %r15d,%r15d
    b519:	45 31 f6             	xor    %r14d,%r14d
    b51c:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b520:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
    b527:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
    b52b:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    b52f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b535:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b538: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b53c:	4c 89 e2             	mov    %r12,%rdx
    b53f:	41 ff c7             	inc    %r15d
    b542:	48 01 d9             	add    %rbx,%rcx
    b545:	4c 89 ee             	mov    %r13,%rsi
    b548:	48 83 c1 08          	add    $0x8,%rcx
    b54c:	e8 00 00 00 00       	callq  b551 <e1000_get_bus_info+0x15a>
			b54d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b551:	48 03 5d b8          	add    0xffffffffffffffb8(%rbp),%rbx
    b555:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b55b:	4c 89 e2             	mov    %r12,%rdx
    b55e:	4c 89 ee             	mov    %r13,%rsi
    b561:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b564: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b568:	48 89 d9             	mov    %rbx,%rcx
    b56b:	e8 00 00 00 00       	callq  b570 <e1000_get_bus_info+0x179>
			b56c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b570:	4c 89 f1             	mov    %r14,%rcx
    b573:	48 03 4d b8          	add    0xffffffffffffffb8(%rbp),%rcx
    b577:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b57d:	4c 89 e2             	mov    %r12,%rdx
    b580:	4c 89 ee             	mov    %r13,%rsi
    b583:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b586: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b58a:	49 83 c6 38          	add    $0x38,%r14
    b58e:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
    b595:	e8 00 00 00 00       	callq  b59a <e1000_get_bus_info+0x1a3>
			b596: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b59a:	41 83 ff 0c          	cmp    $0xc,%r15d
    b59e:	0f 85 78 ff ff ff    	jne    b51c <e1000_get_bus_info+0x125>
    b5a4:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b5a8:	4c 89 e2             	mov    %r12,%rdx
    b5ab:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b5b1:	4c 89 ee             	mov    %r13,%rsi
    b5b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b5b7: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b5bb:	45 31 ff             	xor    %r15d,%r15d
    b5be:	48 83 c1 48          	add    $0x48,%rcx
    b5c2:	e8 00 00 00 00       	callq  b5c7 <e1000_get_bus_info+0x1d0>
			b5c3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b5c7:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b5cb:	4c 89 e2             	mov    %r12,%rdx
    b5ce:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b5d4:	4c 89 ee             	mov    %r13,%rsi
    b5d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b5da: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b5de:	48 83 c1 38          	add    $0x38,%rcx
    b5e2:	e8 00 00 00 00       	callq  b5e7 <e1000_get_bus_info+0x1f0>
			b5e3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b5e7:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b5eb:	4c 89 e2             	mov    %r12,%rdx
    b5ee:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b5f4:	4c 89 ee             	mov    %r13,%rsi
    b5f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b5fa: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b5fe:	48 83 c1 7c          	add    $0x7c,%rcx
    b602:	e8 00 00 00 00       	callq  b607 <e1000_get_bus_info+0x210>
			b603: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b607:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b60b:	4c 89 e2             	mov    %r12,%rdx
    b60e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b614:	4c 89 ee             	mov    %r13,%rsi
    b617:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b61a: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b61e:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
    b625:	e8 00 00 00 00       	callq  b62a <e1000_get_bus_info+0x233>
			b626: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b62a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b62e:	4c 89 e2             	mov    %r12,%rdx
    b631:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    b637:	4c 89 ee             	mov    %r13,%rsi
    b63a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b63d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b641:	48 83 c1 3e          	add    $0x3e,%rcx
    b645:	e8 00 00 00 00       	callq  b64a <e1000_get_bus_info+0x253>
			b646: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b64a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    b64e:	4c 89 e2             	mov    %r12,%rdx
    b651:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    b657:	4c 89 ee             	mov    %r13,%rsi
    b65a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b65d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b661:	48 83 c1 42          	add    $0x42,%rcx
    b665:	e8 00 00 00 00       	callq  b66a <e1000_get_bus_info+0x273>
			b666: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b66a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
    b66e:	4c 8d a0 80 00 00 00 	lea    0x80(%rax),%r12
    b675:	48 8d 98 78 01 00 00 	lea    0x178(%rax),%rbx
    b67c:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
    b680:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    b684:	48 89 d9             	mov    %rbx,%rcx
    b687:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b68d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b690: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b694:	49 ff c7             	inc    %r15
    b697:	4c 89 ea             	mov    %r13,%rdx
    b69a:	4c 89 f6             	mov    %r14,%rsi
    b69d:	48 ff c3             	inc    %rbx
    b6a0:	e8 00 00 00 00       	callq  b6a5 <e1000_get_bus_info+0x2ae>
			b6a1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b6a5:	49 83 ff 14          	cmp    $0x14,%r15
    b6a9:	75 d1                	jne    b67c <e1000_get_bus_info+0x285>
    b6ab:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    b6b2:	00 
    b6b3:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    b6b7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b6bd:	4c 89 ea             	mov    %r13,%rdx
    b6c0:	4c 89 f6             	mov    %r14,%rsi
    b6c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b6c6: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b6ca:	48 89 d9             	mov    %rbx,%rcx
    b6cd:	83 e0 01             	and    $0x1,%eax
    b6d0:	0f b6 c0             	movzbl %al,%eax
    b6d3:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
    b6d6:	e8 00 00 00 00       	callq  b6db <e1000_get_bus_info+0x2e4>
			b6d7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b6db:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    b6e2:	00 
    b6e3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b6e9:	48 89 d9             	mov    %rbx,%rcx
    b6ec:	4c 89 ea             	mov    %r13,%rdx
    b6ef:	4c 89 f6             	mov    %r14,%rsi
    b6f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b6f5: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b6f9:	d0 e8                	shr    %al
    b6fb:	83 e0 01             	and    $0x1,%eax
    b6fe:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
    b701:	e8 00 00 00 00       	callq  b706 <e1000_get_bus_info+0x30f>
			b702: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b706:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
    b70d:	00 
    b70e:	4c 89 ea             	mov    %r13,%rdx
    b711:	4c 89 f6             	mov    %r14,%rsi
    b714:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b717: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b71b:	e8 00 00 00 00       	callq  b720 <e1000_get_bus_info+0x329>
			b71c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b720:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
    b727:	00 
    b728:	48 85 c0             	test   %rax,%rax
    b72b:	0f 84 ac 00 00 00    	je     b7dd <e1000_get_bus_info+0x3e6>
    b731:	48 8d 48 18          	lea    0x18(%rax),%rcx
    b735:	4c 89 ea             	mov    %r13,%rdx
    b738:	4c 89 f6             	mov    %r14,%rsi
    b73b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b73e: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b742:	e8 00 00 00 00       	callq  b747 <e1000_get_bus_info+0x350>
			b743: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b747:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    b74e:	00 
    b74f:	4c 89 ea             	mov    %r13,%rdx
    b752:	4c 89 f6             	mov    %r14,%rsi
    b755:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b758: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b75c:	48 83 c1 20          	add    $0x20,%rcx
    b760:	e8 00 00 00 00       	callq  b765 <e1000_get_bus_info+0x36e>
			b761: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b765:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    b76c:	00 
    b76d:	4c 89 ea             	mov    %r13,%rdx
    b770:	4c 89 f6             	mov    %r14,%rsi
    b773:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b776: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b77a:	48 83 c1 30          	add    $0x30,%rcx
    b77e:	e8 00 00 00 00       	callq  b783 <e1000_get_bus_info+0x38c>
			b77f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b783:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    b78a:	00 
    b78b:	4c 89 ea             	mov    %r13,%rdx
    b78e:	4c 89 f6             	mov    %r14,%rsi
    b791:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b794: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b798:	48 83 c1 10          	add    $0x10,%rcx
    b79c:	e8 00 00 00 00       	callq  b7a1 <e1000_get_bus_info+0x3aa>
			b79d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b7a1:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    b7a8:	00 
    b7a9:	4c 89 ea             	mov    %r13,%rdx
    b7ac:	4c 89 f6             	mov    %r14,%rsi
    b7af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b7b2: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b7b6:	48 83 c1 28          	add    $0x28,%rcx
    b7ba:	e8 00 00 00 00       	callq  b7bf <e1000_get_bus_info+0x3c8>
			b7bb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b7bf:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    b7c6:	00 
    b7c7:	4c 89 ea             	mov    %r13,%rdx
    b7ca:	4c 89 f6             	mov    %r14,%rsi
    b7cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b7d0: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b7d4:	48 83 c1 08          	add    $0x8,%rcx
    b7d8:	e8 00 00 00 00       	callq  b7dd <e1000_get_bus_info+0x3e6>
			b7d9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b7dd:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
    b7e4:	00 
    b7e5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b7eb:	4c 89 ea             	mov    %r13,%rdx
    b7ee:	4c 89 f6             	mov    %r14,%rsi
    b7f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b7f4: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b7f8:	e8 00 00 00 00       	callq  b7fd <e1000_get_bus_info+0x406>
			b7f9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b7fd:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
    b804:	00 
    b805:	4c 89 ea             	mov    %r13,%rdx
    b808:	4c 89 f6             	mov    %r14,%rsi
    b80b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b80e: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b812:	e8 00 00 00 00       	callq  b817 <e1000_get_bus_info+0x420>
			b813: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b817:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    b81e:	00 
    b81f:	48 85 c0             	test   %rax,%rax
    b822:	0f 84 91 05 00 00    	je     bdb9 <e1000_get_bus_info+0x9c2>
    b828:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
    b82f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b835:	4c 89 ea             	mov    %r13,%rdx
    b838:	4c 89 f6             	mov    %r14,%rsi
    b83b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b83e: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b842:	31 db                	xor    %ebx,%ebx
    b844:	e8 00 00 00 00       	callq  b849 <e1000_get_bus_info+0x452>
			b845: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b849:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b850:	00 
    b851:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    b857:	4c 89 ea             	mov    %r13,%rdx
    b85a:	4c 89 f6             	mov    %r14,%rsi
    b85d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b860: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b864:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
    b86b:	e8 00 00 00 00       	callq  b870 <e1000_get_bus_info+0x479>
			b86c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b870:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b877:	00 
    b878:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b87e:	4c 89 ea             	mov    %r13,%rdx
    b881:	4c 89 f6             	mov    %r14,%rsi
    b884:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b887: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b88b:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
    b892:	e8 00 00 00 00       	callq  b897 <e1000_get_bus_info+0x4a0>
			b893: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b897:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b89e:	00 
    b89f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b8a5:	4c 89 ea             	mov    %r13,%rdx
    b8a8:	4c 89 f6             	mov    %r14,%rsi
    b8ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b8ae: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b8b2:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
    b8b9:	e8 00 00 00 00       	callq  b8be <e1000_get_bus_info+0x4c7>
			b8ba: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b8be:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b8c5:	00 
    b8c6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b8cc:	4c 89 ea             	mov    %r13,%rdx
    b8cf:	4c 89 f6             	mov    %r14,%rsi
    b8d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b8d5: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b8d9:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
    b8e0:	e8 00 00 00 00       	callq  b8e5 <e1000_get_bus_info+0x4ee>
			b8e1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b8e5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b8ec:	00 
    b8ed:	4c 89 ea             	mov    %r13,%rdx
    b8f0:	4c 89 f6             	mov    %r14,%rsi
    b8f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b8f6: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b8fa:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    b901:	e8 00 00 00 00       	callq  b906 <e1000_get_bus_info+0x50f>
			b902: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b906:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b90d:	00 
    b90e:	4c 89 ea             	mov    %r13,%rdx
    b911:	4c 89 f6             	mov    %r14,%rsi
    b914:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b917: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b91b:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    b922:	e8 00 00 00 00       	callq  b927 <e1000_get_bus_info+0x530>
			b923: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b927:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b92e:	00 
    b92f:	4c 89 ea             	mov    %r13,%rdx
    b932:	4c 89 f6             	mov    %r14,%rsi
    b935:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b938: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b93c:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    b943:	e8 00 00 00 00       	callq  b948 <e1000_get_bus_info+0x551>
			b944: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    b948:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b94f:	00 
    b950:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
    b954:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    b958:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b95e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b961: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b965:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
    b96c:	48 01 d9             	add    %rbx,%rcx
    b96f:	48 ff c3             	inc    %rbx
    b972:	e8 00 00 00 00       	callq  b977 <e1000_get_bus_info+0x580>
			b973: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b977:	48 83 fb 20          	cmp    $0x20,%rbx
    b97b:	75 cb                	jne    b948 <e1000_get_bus_info+0x551>
    b97d:	30 db                	xor    %bl,%bl
    b97f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b986:	00 
    b987:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
    b98b:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    b98f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b995:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b998: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b99c:	4c 89 ea             	mov    %r13,%rdx
    b99f:	4c 89 f6             	mov    %r14,%rsi
    b9a2:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
    b9a9:	48 01 d9             	add    %rbx,%rcx
    b9ac:	48 ff c3             	inc    %rbx
    b9af:	e8 00 00 00 00       	callq  b9b4 <e1000_get_bus_info+0x5bd>
			b9b0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b9b4:	48 83 fb 20          	cmp    $0x20,%rbx
    b9b8:	75 c5                	jne    b97f <e1000_get_bus_info+0x588>
    b9ba:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b9c1:	00 
    b9c2:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    b9c8:	4c 89 ea             	mov    %r13,%rdx
    b9cb:	4c 89 f6             	mov    %r14,%rsi
    b9ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b9d1: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b9d5:	30 db                	xor    %bl,%bl
    b9d7:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
    b9de:	e8 00 00 00 00       	callq  b9e3 <e1000_get_bus_info+0x5ec>
			b9df: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    b9e3:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    b9ea:	00 
    b9eb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b9f1:	4c 89 ea             	mov    %r13,%rdx
    b9f4:	4c 89 f6             	mov    %r14,%rsi
    b9f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b9fa: R_X86_64_32S	.rodata.str1.1+0x1c7c
    b9fe:	48 83 c1 48          	add    $0x48,%rcx
    ba02:	e8 00 00 00 00       	callq  ba07 <e1000_get_bus_info+0x610>
			ba03: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ba07:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    ba0e:	00 
    ba0f:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
    ba13:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    ba17:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ba1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ba20: R_X86_64_32S	.rodata.str1.1+0x1c7c
    ba24:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
    ba2b:	48 01 d9             	add    %rbx,%rcx
    ba2e:	48 ff c3             	inc    %rbx
    ba31:	e8 00 00 00 00       	callq  ba36 <e1000_get_bus_info+0x63f>
			ba32: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ba36:	48 83 fb 20          	cmp    $0x20,%rbx
    ba3a:	75 cb                	jne    ba07 <e1000_get_bus_info+0x610>
    ba3c:	30 db                	xor    %bl,%bl
    ba3e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    ba45:	00 
    ba46:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
    ba4a:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    ba4e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ba54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ba57: R_X86_64_32S	.rodata.str1.1+0x1c7c
    ba5b:	4c 89 ea             	mov    %r13,%rdx
    ba5e:	4c 89 f6             	mov    %r14,%rsi
    ba61:	48 01 d9             	add    %rbx,%rcx
    ba64:	48 ff c3             	inc    %rbx
    ba67:	e8 00 00 00 00       	callq  ba6c <e1000_get_bus_info+0x675>
			ba68: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ba6c:	48 83 fb 10          	cmp    $0x10,%rbx
    ba70:	75 cc                	jne    ba3e <e1000_get_bus_info+0x647>
    ba72:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    ba79:	00 
    ba7a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ba80:	4c 89 ea             	mov    %r13,%rdx
    ba83:	4c 89 f6             	mov    %r14,%rsi
    ba86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ba89: R_X86_64_32S	.rodata.str1.1+0x1c7c
    ba8d:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
    ba94:	e8 00 00 00 00       	callq  ba99 <e1000_get_bus_info+0x6a2>
			ba95: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ba99:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    baa0:	00 
    baa1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    baa7:	4c 89 ea             	mov    %r13,%rdx
    baaa:	4c 89 f6             	mov    %r14,%rsi
    baad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bab0: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bab4:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
    babb:	e8 00 00 00 00       	callq  bac0 <e1000_get_bus_info+0x6c9>
			babc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bac0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bac7:	00 
    bac8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    bace:	4c 89 ea             	mov    %r13,%rdx
    bad1:	4c 89 f6             	mov    %r14,%rsi
    bad4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bad7: R_X86_64_32S	.rodata.str1.1+0x1c7c
    badb:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
    bae2:	e8 00 00 00 00       	callq  bae7 <e1000_get_bus_info+0x6f0>
			bae3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bae7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    baee:	00 
    baef:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    baf5:	4c 89 ea             	mov    %r13,%rdx
    baf8:	4c 89 f6             	mov    %r14,%rsi
    bafb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bafe: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bb02:	48 83 c1 70          	add    $0x70,%rcx
    bb06:	e8 00 00 00 00       	callq  bb0b <e1000_get_bus_info+0x714>
			bb07: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bb0b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bb12:	00 
    bb13:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    bb19:	4c 89 ea             	mov    %r13,%rdx
    bb1c:	4c 89 f6             	mov    %r14,%rsi
    bb1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bb22: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bb26:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
    bb2d:	e8 00 00 00 00       	callq  bb32 <e1000_get_bus_info+0x73b>
			bb2e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bb32:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bb39:	00 
    bb3a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    bb40:	4c 89 ea             	mov    %r13,%rdx
    bb43:	4c 89 f6             	mov    %r14,%rsi
    bb46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bb49: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bb4d:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
    bb54:	e8 00 00 00 00       	callq  bb59 <e1000_get_bus_info+0x762>
			bb55: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bb59:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bb60:	00 
    bb61:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    bb67:	4c 89 ea             	mov    %r13,%rdx
    bb6a:	4c 89 f6             	mov    %r14,%rsi
    bb6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bb70: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bb74:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
    bb7b:	e8 00 00 00 00       	callq  bb80 <e1000_get_bus_info+0x789>
			bb7c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bb80:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bb87:	00 
    bb88:	4c 89 ea             	mov    %r13,%rdx
    bb8b:	4c 89 f6             	mov    %r14,%rsi
    bb8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bb91: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bb95:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    bb9c:	e8 00 00 00 00       	callq  bba1 <e1000_get_bus_info+0x7aa>
			bb9d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bba1:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bba8:	00 
    bba9:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    bbb0:	00 
    bbb1:	74 62                	je     bc15 <e1000_get_bus_info+0x81e>
    bbb3:	30 db                	xor    %bl,%bl
    bbb5:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bbbc:	00 
    bbbd:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
    bbc1:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    bbc5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bbcb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bbce: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bbd2:	4c 89 ea             	mov    %r13,%rdx
    bbd5:	4c 89 f6             	mov    %r14,%rsi
    bbd8:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    bbdf:	48 83 c1 08          	add    $0x8,%rcx
    bbe3:	48 01 d9             	add    %rbx,%rcx
    bbe6:	48 ff c3             	inc    %rbx
    bbe9:	e8 00 00 00 00       	callq  bbee <e1000_get_bus_info+0x7f7>
			bbea: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bbee:	48 83 fb 20          	cmp    $0x20,%rbx
    bbf2:	75 c1                	jne    bbb5 <e1000_get_bus_info+0x7be>
    bbf4:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bbfb:	00 
    bbfc:	4c 89 ea             	mov    %r13,%rdx
    bbff:	4c 89 f6             	mov    %r14,%rsi
    bc02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bc05: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bc09:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    bc10:	e8 00 00 00 00       	callq  bc15 <e1000_get_bus_info+0x81e>
			bc11: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bc15:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bc1c:	00 
    bc1d:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
    bc21:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    bc25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bc28: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bc2c:	48 89 da             	mov    %rbx,%rdx
    bc2f:	4c 89 ee             	mov    %r13,%rsi
    bc32:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    bc39:	e8 00 00 00 00       	callq  bc3e <e1000_get_bus_info+0x847>
			bc3a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bc3e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bc45:	00 
    bc46:	48 89 da             	mov    %rbx,%rdx
    bc49:	4c 89 ee             	mov    %r13,%rsi
    bc4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bc4f: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bc53:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    bc5a:	e8 00 00 00 00       	callq  bc5f <e1000_get_bus_info+0x868>
			bc5b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bc5f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bc66:	00 
    bc67:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    bc6e:	48 85 c0             	test   %rax,%rax
    bc71:	74 3b                	je     bcae <e1000_get_bus_info+0x8b7>
    bc73:	48 8d 48 60          	lea    0x60(%rax),%rcx
    bc77:	48 89 da             	mov    %rbx,%rdx
    bc7a:	4c 89 ee             	mov    %r13,%rsi
    bc7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bc80: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bc84:	e8 00 00 00 00       	callq  bc89 <e1000_get_bus_info+0x892>
			bc85: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bc89:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bc90:	00 
    bc91:	48 89 da             	mov    %rbx,%rdx
    bc94:	4c 89 ee             	mov    %r13,%rsi
    bc97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bc9a: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bc9e:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    bca5:	48 83 c1 58          	add    $0x58,%rcx
    bca9:	e8 00 00 00 00       	callq  bcae <e1000_get_bus_info+0x8b7>
			bcaa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bcae:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bcb5:	00 
    bcb6:	48 89 da             	mov    %rbx,%rdx
    bcb9:	4c 89 ee             	mov    %r13,%rsi
    bcbc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bcbf: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bcc3:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    bcca:	e8 00 00 00 00       	callq  bccf <e1000_get_bus_info+0x8d8>
			bccb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bccf:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bcd6:	00 
    bcd7:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
    bcde:	48 85 c0             	test   %rax,%rax
    bce1:	74 41                	je     bd24 <e1000_get_bus_info+0x92d>
    bce3:	48 8d 48 10          	lea    0x10(%rax),%rcx
    bce7:	48 89 da             	mov    %rbx,%rdx
    bcea:	4c 89 ee             	mov    %r13,%rsi
    bced:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bcf0: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bcf4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    bcfa:	e8 00 00 00 00       	callq  bcff <e1000_get_bus_info+0x908>
			bcfb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bcff:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bd06:	00 
    bd07:	48 89 da             	mov    %rbx,%rdx
    bd0a:	4c 89 ee             	mov    %r13,%rsi
    bd0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bd10: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bd14:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    bd1b:	48 83 c1 08          	add    $0x8,%rcx
    bd1f:	e8 00 00 00 00       	callq  bd24 <e1000_get_bus_info+0x92d>
			bd20: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bd24:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    bd2b:	00 
    bd2c:	48 89 da             	mov    %rbx,%rdx
    bd2f:	4c 89 ee             	mov    %r13,%rsi
    bd32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bd35: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bd39:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    bd40:	e8 00 00 00 00       	callq  bd45 <e1000_get_bus_info+0x94e>
			bd41: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bd45:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bd4c:	00 
    bd4d:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    bd54:	00 
    bd55:	74 62                	je     bdb9 <e1000_get_bus_info+0x9c2>
    bd57:	31 db                	xor    %ebx,%ebx
    bd59:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bd60:	00 
    bd61:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
    bd65:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    bd69:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    bd6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bd72: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bd76:	4c 89 ea             	mov    %r13,%rdx
    bd79:	4c 89 f6             	mov    %r14,%rsi
    bd7c:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    bd83:	48 83 c1 08          	add    $0x8,%rcx
    bd87:	48 01 d9             	add    %rbx,%rcx
    bd8a:	48 ff c3             	inc    %rbx
    bd8d:	e8 00 00 00 00       	callq  bd92 <e1000_get_bus_info+0x99b>
			bd8e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    bd92:	48 83 fb 20          	cmp    $0x20,%rbx
    bd96:	75 c1                	jne    bd59 <e1000_get_bus_info+0x962>
    bd98:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    bd9f:	00 
    bda0:	4c 89 ea             	mov    %r13,%rdx
    bda3:	4c 89 f6             	mov    %r14,%rsi
    bda6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bda9: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bdad:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    bdb4:	e8 00 00 00 00       	callq  bdb9 <e1000_get_bus_info+0x9c2>
			bdb5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bdb9:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
    bdbd:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    bdc1:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
    bdc8:	00 
    bdc9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bdcc: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bdd0:	48 89 da             	mov    %rbx,%rdx
    bdd3:	4c 89 ee             	mov    %r13,%rsi
    bdd6:	e8 00 00 00 00       	callq  bddb <e1000_get_bus_info+0x9e4>
			bdd7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bddb:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
    bde2:	00 
    bde3:	48 89 da             	mov    %rbx,%rdx
    bde6:	4c 89 ee             	mov    %r13,%rsi
    bde9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bdec: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bdf0:	e8 00 00 00 00       	callq  bdf5 <e1000_get_bus_info+0x9fe>
			bdf1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    bdf5:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
    bdfc:	00 
    bdfd:	48 85 c9             	test   %rcx,%rcx
    be00:	74 18                	je     be1a <e1000_get_bus_info+0xa23>
    be02:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    be08:	48 89 da             	mov    %rbx,%rdx
    be0b:	4c 89 ee             	mov    %r13,%rsi
    be0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			be11: R_X86_64_32S	.rodata.str1.1+0x1c7c
    be15:	e8 00 00 00 00       	callq  be1a <e1000_get_bus_info+0xa23>
			be16: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    be1a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    be1e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    be24:	48 89 da             	mov    %rbx,%rdx
    be27:	4c 89 ee             	mov    %r13,%rsi
    be2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			be2d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    be31:	48 83 c1 40          	add    $0x40,%rcx
    be35:	e8 00 00 00 00       	callq  be3a <e1000_get_bus_info+0xa43>
			be36: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    be3a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    be3e:	48 89 da             	mov    %rbx,%rdx
    be41:	4c 89 ee             	mov    %r13,%rsi
    be44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			be47: R_X86_64_32S	.rodata.str1.1+0x1c7c
    be4b:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    be51:	48 83 c1 3c          	add    $0x3c,%rcx
    be55:	e8 00 00 00 00       	callq  be5a <e1000_get_bus_info+0xa63>
			be56: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    be5a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    be5e:	48 89 da             	mov    %rbx,%rdx
    be61:	4c 89 ee             	mov    %r13,%rsi
    be64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			be67: R_X86_64_32S	.rodata.str1.1+0x1c7c
    be6b:	48 83 c1 10          	add    $0x10,%rcx
    be6f:	e8 00 00 00 00       	callq  be74 <e1000_get_bus_info+0xa7d>
			be70: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    be74:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
    be78:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
    be7c:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
    be80:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    be86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			be89: R_X86_64_32S	.rodata.str1.1+0x1c7c
    be8d:	4c 89 e1             	mov    %r12,%rcx
    be90:	48 89 de             	mov    %rbx,%rsi
    be93:	e8 00 00 00 00       	callq  be98 <e1000_get_bus_info+0xaa1>
			be94: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    be98:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    be9c:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    bea0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bea3: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bea7:	48 c7 45 90 15 06 00 	movq   $0x615,0xffffffffffffff90(%rbp)
    beae:	00 
    beaf:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    beb3:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
    beb6:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    beb9:	e8 00 00 00 00       	callq  bebe <e1000_get_bus_info+0xac7>
			beba: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    bebe:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
    bec2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bec5: R_X86_64_32S	.rodata.str1.1+0x1cb2
    bec9:	c7 45 c8 10 00 00 00 	movl   $0x10,0xffffffffffffffc8(%rbp)
    bed0:	48 89 55 b0          	mov    %rdx,0xffffffffffffffb0(%rbp)
    bed4:	e8 00 00 00 00       	callq  bed9 <e1000_get_bus_info+0xae2>
			bed5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    bed9:	4c 8b 6d a0          	mov    0xffffffffffffffa0(%rbp),%r13
    bedd:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    bee3:	48 89 d9             	mov    %rbx,%rcx
    bee6:	4c 89 e2             	mov    %r12,%rdx
    bee9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			beec: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bef0:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
    bef7:	4c 89 ee             	mov    %r13,%rsi
    befa:	e8 00 00 00 00       	callq  beff <e1000_get_bus_info+0xb08>
			befb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    beff:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    bf03:	48 85 c0             	test   %rax,%rax
    bf06:	0f 84 40 09 00 00    	je     c84c <e1000_get_bus_info+0x1455>
    bf0c:	4c 8d 40 38          	lea    0x38(%rax),%r8
    bf10:	4c 89 e2             	mov    %r12,%rdx
    bf13:	b9 04 00 00 00       	mov    $0x4,%ecx
    bf18:	4c 89 ee             	mov    %r13,%rsi
    bf1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bf1e: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bf22:	45 31 f6             	xor    %r14d,%r14d
    bf25:	e8 00 00 00 00       	callq  bf2a <e1000_get_bus_info+0xb33>
			bf26: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    bf2a:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    bf2e:	4c 89 e2             	mov    %r12,%rdx
    bf31:	b9 04 00 00 00       	mov    $0x4,%ecx
    bf36:	4c 89 ee             	mov    %r13,%rsi
    bf39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bf3c: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bf40:	49 83 c0 7c          	add    $0x7c,%r8
    bf44:	e8 00 00 00 00       	callq  bf49 <e1000_get_bus_info+0xb52>
			bf45: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    bf49:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    bf4d:	4c 89 e2             	mov    %r12,%rdx
    bf50:	b9 04 00 00 00       	mov    $0x4,%ecx
    bf55:	4c 89 ee             	mov    %r13,%rsi
    bf58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bf5b: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bf5f:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
    bf66:	e8 00 00 00 00       	callq  bf6b <e1000_get_bus_info+0xb74>
			bf67: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    bf6b:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    bf6f:	4c 89 e2             	mov    %r12,%rdx
    bf72:	b9 02 00 00 00       	mov    $0x2,%ecx
    bf77:	4c 89 ee             	mov    %r13,%rsi
    bf7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bf7d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bf81:	49 83 c0 3e          	add    $0x3e,%r8
    bf85:	e8 00 00 00 00       	callq  bf8a <e1000_get_bus_info+0xb93>
			bf86: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    bf8a:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
    bf8e:	ba 78 02 00 00       	mov    $0x278,%edx
    bf93:	be 80 00 00 00       	mov    $0x80,%esi
    bf98:	e8 00 00 00 00       	callq  bf9d <e1000_get_bus_info+0xba6>
			bf99: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    bf9d:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    bfa1:	4c 8d a0 80 00 00 00 	lea    0x80(%rax),%r12
    bfa8:	48 8d 98 78 01 00 00 	lea    0x178(%rax),%rbx
    bfaf:	4c 8d 7d c0          	lea    0xffffffffffffffc0(%rbp),%r15
    bfb3:	49 89 d8             	mov    %rbx,%r8
    bfb6:	b9 01 00 00 00       	mov    $0x1,%ecx
    bfbb:	4c 89 ee             	mov    %r13,%rsi
    bfbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bfc1: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bfc5:	49 ff c6             	inc    %r14
    bfc8:	4c 89 fa             	mov    %r15,%rdx
    bfcb:	48 ff c3             	inc    %rbx
    bfce:	e8 00 00 00 00       	callq  bfd3 <e1000_get_bus_info+0xbdc>
			bfcf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    bfd3:	49 83 fe 14          	cmp    $0x14,%r14
    bfd7:	75 d6                	jne    bfaf <e1000_get_bus_info+0xbb8>
    bfd9:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
    bfdd:	b9 04 00 00 00       	mov    $0x4,%ecx
    bfe2:	4c 89 fa             	mov    %r15,%rdx
    bfe5:	4c 89 ee             	mov    %r13,%rsi
    bfe8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bfeb: R_X86_64_32S	.rodata.str1.1+0x1c7c
    bfef:	49 89 d8             	mov    %rbx,%r8
    bff2:	e8 00 00 00 00       	callq  bff7 <e1000_get_bus_info+0xc00>
			bff3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    bff7:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
    bffa:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    c001:	00 
    c002:	49 89 d8             	mov    %rbx,%r8
    c005:	b9 04 00 00 00       	mov    $0x4,%ecx
    c00a:	4c 89 ee             	mov    %r13,%rsi
    c00d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c010: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c014:	83 e2 01             	and    $0x1,%edx
    c017:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
    c01a:	09 d0                	or     %edx,%eax
    c01c:	4c 89 fa             	mov    %r15,%rdx
    c01f:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
    c026:	00 
    c027:	e8 00 00 00 00       	callq  c02c <e1000_get_bus_info+0xc35>
			c028: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c02c:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
    c02f:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    c036:	00 
    c037:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
    c03e:	00 
    c03f:	41 b8 78 00 00 00    	mov    $0x78,%r8d
    c045:	4c 89 ee             	mov    %r13,%rsi
    c048:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c04b: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c04f:	83 e2 01             	and    $0x1,%edx
    c052:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
    c055:	01 d2                	add    %edx,%edx
    c057:	09 d0                	or     %edx,%eax
    c059:	4c 89 fa             	mov    %r15,%rdx
    c05c:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
    c063:	00 
    c064:	e8 00 00 00 00       	callq  c069 <e1000_get_bus_info+0xc72>
			c065: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c069:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
    c070:	00 
    c071:	48 85 c0             	test   %rax,%rax
    c074:	0f 84 d0 00 00 00    	je     c14a <e1000_get_bus_info+0xd53>
    c07a:	48 8d 48 18          	lea    0x18(%rax),%rcx
    c07e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c084:	4c 89 fa             	mov    %r15,%rdx
    c087:	4c 89 ee             	mov    %r13,%rsi
    c08a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c08d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c091:	e8 00 00 00 00       	callq  c096 <e1000_get_bus_info+0xc9f>
			c092: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c096:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    c09d:	00 
    c09e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c0a4:	4c 89 fa             	mov    %r15,%rdx
    c0a7:	4c 89 ee             	mov    %r13,%rsi
    c0aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c0ad: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c0b1:	48 83 c1 20          	add    $0x20,%rcx
    c0b5:	e8 00 00 00 00       	callq  c0ba <e1000_get_bus_info+0xcc3>
			c0b6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c0ba:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    c0c1:	00 
    c0c2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c0c8:	4c 89 fa             	mov    %r15,%rdx
    c0cb:	4c 89 ee             	mov    %r13,%rsi
    c0ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c0d1: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c0d5:	48 83 c1 30          	add    $0x30,%rcx
    c0d9:	e8 00 00 00 00       	callq  c0de <e1000_get_bus_info+0xce7>
			c0da: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c0de:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    c0e5:	00 
    c0e6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c0ec:	4c 89 fa             	mov    %r15,%rdx
    c0ef:	4c 89 ee             	mov    %r13,%rsi
    c0f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c0f5: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c0f9:	48 83 c1 10          	add    $0x10,%rcx
    c0fd:	e8 00 00 00 00       	callq  c102 <e1000_get_bus_info+0xd0b>
			c0fe: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c102:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    c109:	00 
    c10a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c110:	4c 89 fa             	mov    %r15,%rdx
    c113:	4c 89 ee             	mov    %r13,%rsi
    c116:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c119: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c11d:	48 83 c1 28          	add    $0x28,%rcx
    c121:	e8 00 00 00 00       	callq  c126 <e1000_get_bus_info+0xd2f>
			c122: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c126:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    c12d:	00 
    c12e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c134:	4c 89 fa             	mov    %r15,%rdx
    c137:	4c 89 ee             	mov    %r13,%rsi
    c13a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c13d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c141:	48 83 c1 08          	add    $0x8,%rcx
    c145:	e8 00 00 00 00       	callq  c14a <e1000_get_bus_info+0xd53>
			c146: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c14a:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
    c151:	00 
    c152:	b9 08 00 00 00       	mov    $0x8,%ecx
    c157:	4c 89 fa             	mov    %r15,%rdx
    c15a:	4c 89 ee             	mov    %r13,%rsi
    c15d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c160: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c164:	e8 00 00 00 00       	callq  c169 <e1000_get_bus_info+0xd72>
			c165: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c169:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
    c170:	00 
    c171:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c174: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c178:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    c17e:	4c 89 fa             	mov    %r15,%rdx
    c181:	4c 89 ee             	mov    %r13,%rsi
    c184:	e8 00 00 00 00       	callq  c189 <e1000_get_bus_info+0xd92>
			c185: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c189:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    c190:	00 
    c191:	48 85 ff             	test   %rdi,%rdi
    c194:	0f 84 08 06 00 00    	je     c7a2 <e1000_get_bus_info+0x13ab>
    c19a:	ba 08 00 00 00       	mov    $0x8,%edx
    c19f:	be 10 03 00 00       	mov    $0x310,%esi
    c1a4:	31 db                	xor    %ebx,%ebx
    c1a6:	e8 00 00 00 00       	callq  c1ab <e1000_get_bus_info+0xdb4>
			c1a7: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    c1ab:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c1b2:	00 
    c1b3:	b9 08 00 00 00       	mov    $0x8,%ecx
    c1b8:	4c 89 fa             	mov    %r15,%rdx
    c1bb:	4c 89 ee             	mov    %r13,%rsi
    c1be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c1c1: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c1c5:	49 81 c0 10 03 00 00 	add    $0x310,%r8
    c1cc:	e8 00 00 00 00       	callq  c1d1 <e1000_get_bus_info+0xdda>
			c1cd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c1d1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c1d8:	00 
    c1d9:	b9 02 00 00 00       	mov    $0x2,%ecx
    c1de:	4c 89 fa             	mov    %r15,%rdx
    c1e1:	4c 89 ee             	mov    %r13,%rsi
    c1e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c1e7: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c1eb:	49 81 c0 70 01 00 00 	add    $0x170,%r8
    c1f2:	e8 00 00 00 00       	callq  c1f7 <e1000_get_bus_info+0xe00>
			c1f3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c1f7:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c1fe:	00 
    c1ff:	b9 08 00 00 00       	mov    $0x8,%ecx
    c204:	4c 89 fa             	mov    %r15,%rdx
    c207:	4c 89 ee             	mov    %r13,%rsi
    c20a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c20d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c211:	49 81 c0 48 03 00 00 	add    $0x348,%r8
    c218:	e8 00 00 00 00       	callq  c21d <e1000_get_bus_info+0xe26>
			c219: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c21d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c224:	00 
    c225:	b9 04 00 00 00       	mov    $0x4,%ecx
    c22a:	4c 89 fa             	mov    %r15,%rdx
    c22d:	4c 89 ee             	mov    %r13,%rsi
    c230:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c233: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c237:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
    c23e:	e8 00 00 00 00       	callq  c243 <e1000_get_bus_info+0xe4c>
			c23f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c243:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c24a:	00 
    c24b:	b9 04 00 00 00       	mov    $0x4,%ecx
    c250:	4c 89 fa             	mov    %r15,%rdx
    c253:	4c 89 ee             	mov    %r13,%rsi
    c256:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c259: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c25d:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
    c264:	e8 00 00 00 00       	callq  c269 <e1000_get_bus_info+0xe72>
			c265: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c269:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c270:	00 
    c271:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c277:	4c 89 fa             	mov    %r15,%rdx
    c27a:	4c 89 ee             	mov    %r13,%rsi
    c27d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c280: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c284:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    c28b:	e8 00 00 00 00       	callq  c290 <e1000_get_bus_info+0xe99>
			c28c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c290:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c297:	00 
    c298:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c29e:	4c 89 fa             	mov    %r15,%rdx
    c2a1:	4c 89 ee             	mov    %r13,%rsi
    c2a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c2a7: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c2ab:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    c2b2:	e8 00 00 00 00       	callq  c2b7 <e1000_get_bus_info+0xec0>
			c2b3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c2b7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c2be:	00 
    c2bf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c2c5:	4c 89 fa             	mov    %r15,%rdx
    c2c8:	4c 89 ee             	mov    %r13,%rsi
    c2cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c2ce: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c2d2:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    c2d9:	e8 00 00 00 00       	callq  c2de <e1000_get_bus_info+0xee7>
			c2da: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c2de:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c2e5:	00 
    c2e6:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
    c2ea:	b9 01 00 00 00       	mov    $0x1,%ecx
    c2ef:	4c 89 ee             	mov    %r13,%rsi
    c2f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c2f5: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c2f9:	49 81 c0 60 02 00 00 	add    $0x260,%r8
    c300:	49 01 d8             	add    %rbx,%r8
    c303:	48 ff c3             	inc    %rbx
    c306:	e8 00 00 00 00       	callq  c30b <e1000_get_bus_info+0xf14>
			c307: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c30b:	48 83 fb 20          	cmp    $0x20,%rbx
    c30f:	75 cd                	jne    c2de <e1000_get_bus_info+0xee7>
    c311:	30 db                	xor    %bl,%bl
    c313:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c31a:	00 
    c31b:	4c 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%r14
    c31f:	b9 01 00 00 00       	mov    $0x1,%ecx
    c324:	4c 89 ee             	mov    %r13,%rsi
    c327:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c32a: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c32e:	4c 89 f2             	mov    %r14,%rdx
    c331:	49 81 c0 80 01 00 00 	add    $0x180,%r8
    c338:	49 01 d8             	add    %rbx,%r8
    c33b:	48 ff c3             	inc    %rbx
    c33e:	e8 00 00 00 00       	callq  c343 <e1000_get_bus_info+0xf4c>
			c33f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c343:	48 83 fb 20          	cmp    $0x20,%rbx
    c347:	75 ca                	jne    c313 <e1000_get_bus_info+0xf1c>
    c349:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c350:	00 
    c351:	b9 02 00 00 00       	mov    $0x2,%ecx
    c356:	4c 89 f2             	mov    %r14,%rdx
    c359:	4c 89 ee             	mov    %r13,%rsi
    c35c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c35f: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c363:	30 db                	xor    %bl,%bl
    c365:	49 81 c0 72 01 00 00 	add    $0x172,%r8
    c36c:	e8 00 00 00 00       	callq  c371 <e1000_get_bus_info+0xf7a>
			c36d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c371:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    c378:	00 
    c379:	ba 08 00 00 00       	mov    $0x8,%edx
    c37e:	be 48 00 00 00       	mov    $0x48,%esi
    c383:	e8 00 00 00 00       	callq  c388 <e1000_get_bus_info+0xf91>
			c384: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    c388:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c38f:	00 
    c390:	b9 08 00 00 00       	mov    $0x8,%ecx
    c395:	4c 89 f2             	mov    %r14,%rdx
    c398:	4c 89 ee             	mov    %r13,%rsi
    c39b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c39e: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c3a2:	49 83 c0 48          	add    $0x48,%r8
    c3a6:	e8 00 00 00 00       	callq  c3ab <e1000_get_bus_info+0xfb4>
			c3a7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c3ab:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c3b2:	00 
    c3b3:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
    c3b7:	b9 01 00 00 00       	mov    $0x1,%ecx
    c3bc:	4c 89 ee             	mov    %r13,%rsi
    c3bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c3c2: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c3c6:	49 81 c0 40 02 00 00 	add    $0x240,%r8
    c3cd:	49 01 d8             	add    %rbx,%r8
    c3d0:	48 ff c3             	inc    %rbx
    c3d3:	e8 00 00 00 00       	callq  c3d8 <e1000_get_bus_info+0xfe1>
			c3d4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c3d8:	48 83 fb 20          	cmp    $0x20,%rbx
    c3dc:	75 cd                	jne    c3ab <e1000_get_bus_info+0xfb4>
    c3de:	30 db                	xor    %bl,%bl
    c3e0:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c3e7:	00 
    c3e8:	4c 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%r14
    c3ec:	b9 01 00 00 00       	mov    $0x1,%ecx
    c3f1:	4c 89 ee             	mov    %r13,%rsi
    c3f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c3f7: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c3fb:	4c 89 f2             	mov    %r14,%rdx
    c3fe:	49 01 d8             	add    %rbx,%r8
    c401:	48 ff c3             	inc    %rbx
    c404:	e8 00 00 00 00       	callq  c409 <e1000_get_bus_info+0x1012>
			c405: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c409:	48 83 fb 10          	cmp    $0x10,%rbx
    c40d:	75 d1                	jne    c3e0 <e1000_get_bus_info+0xfe9>
    c40f:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    c416:	00 
    c417:	ba 10 00 00 00       	mov    $0x10,%edx
    c41c:	be 18 04 00 00       	mov    $0x418,%esi
    c421:	e8 00 00 00 00       	callq  c426 <e1000_get_bus_info+0x102f>
			c422: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    c426:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c42d:	00 
    c42e:	b9 01 00 00 00       	mov    $0x1,%ecx
    c433:	4c 89 f2             	mov    %r14,%rdx
    c436:	4c 89 ee             	mov    %r13,%rsi
    c439:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c43c: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c440:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
    c447:	e8 00 00 00 00       	callq  c44c <e1000_get_bus_info+0x1055>
			c448: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c44c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c453:	00 
    c454:	b9 04 00 00 00       	mov    $0x4,%ecx
    c459:	4c 89 f2             	mov    %r14,%rdx
    c45c:	4c 89 ee             	mov    %r13,%rsi
    c45f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c462: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c466:	49 81 c0 30 04 00 00 	add    $0x430,%r8
    c46d:	e8 00 00 00 00       	callq  c472 <e1000_get_bus_info+0x107b>
			c46e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c472:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c479:	00 
    c47a:	b9 08 00 00 00       	mov    $0x8,%ecx
    c47f:	4c 89 f2             	mov    %r14,%rdx
    c482:	4c 89 ee             	mov    %r13,%rsi
    c485:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c488: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c48c:	49 83 c0 70          	add    $0x70,%r8
    c490:	e8 00 00 00 00       	callq  c495 <e1000_get_bus_info+0x109e>
			c491: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c495:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    c49c:	00 
    c49d:	ba 10 00 00 00       	mov    $0x10,%edx
    c4a2:	be 10 00 00 00       	mov    $0x10,%esi
    c4a7:	e8 00 00 00 00       	callq  c4ac <e1000_get_bus_info+0x10b5>
			c4a8: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    c4ac:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c4b3:	00 
    c4b4:	b9 04 00 00 00       	mov    $0x4,%ecx
    c4b9:	4c 89 f2             	mov    %r14,%rdx
    c4bc:	4c 89 ee             	mov    %r13,%rsi
    c4bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c4c2: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c4c6:	49 81 c0 50 03 00 00 	add    $0x350,%r8
    c4cd:	e8 00 00 00 00       	callq  c4d2 <e1000_get_bus_info+0x10db>
			c4ce: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c4d2:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c4d9:	00 
    c4da:	b9 08 00 00 00       	mov    $0x8,%ecx
    c4df:	4c 89 f2             	mov    %r14,%rdx
    c4e2:	4c 89 ee             	mov    %r13,%rsi
    c4e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c4e8: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c4ec:	49 81 c0 00 07 00 00 	add    $0x700,%r8
    c4f3:	e8 00 00 00 00       	callq  c4f8 <e1000_get_bus_info+0x1101>
			c4f4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c4f8:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    c4ff:	00 
    c500:	b9 04 00 00 00       	mov    $0x4,%ecx
    c505:	4c 89 f2             	mov    %r14,%rdx
    c508:	4c 89 ee             	mov    %r13,%rsi
    c50b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c50e: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c512:	49 81 c0 60 01 00 00 	add    $0x160,%r8
    c519:	e8 00 00 00 00       	callq  c51e <e1000_get_bus_info+0x1127>
			c51a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c51e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c525:	00 
    c526:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    c52c:	4c 89 f2             	mov    %r14,%rdx
    c52f:	4c 89 ee             	mov    %r13,%rsi
    c532:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c535: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c539:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    c540:	e8 00 00 00 00       	callq  c545 <e1000_get_bus_info+0x114e>
			c541: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c545:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c54c:	00 
    c54d:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    c554:	00 
    c555:	74 63                	je     c5ba <e1000_get_bus_info+0x11c3>
    c557:	30 db                	xor    %bl,%bl
    c559:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c560:	00 
    c561:	4c 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%r14
    c565:	b9 01 00 00 00       	mov    $0x1,%ecx
    c56a:	4c 89 ee             	mov    %r13,%rsi
    c56d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c570: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c574:	4c 89 f2             	mov    %r14,%rdx
    c577:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
    c57e:	49 83 c0 08          	add    $0x8,%r8
    c582:	49 01 d8             	add    %rbx,%r8
    c585:	48 ff c3             	inc    %rbx
    c588:	e8 00 00 00 00       	callq  c58d <e1000_get_bus_info+0x1196>
			c589: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c58d:	48 83 fb 20          	cmp    $0x20,%rbx
    c591:	75 c6                	jne    c559 <e1000_get_bus_info+0x1162>
    c593:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c59a:	00 
    c59b:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    c5a1:	4c 89 f2             	mov    %r14,%rdx
    c5a4:	4c 89 ee             	mov    %r13,%rsi
    c5a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c5aa: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c5ae:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    c5b5:	e8 00 00 00 00       	callq  c5ba <e1000_get_bus_info+0x11c3>
			c5b6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c5ba:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c5c1:	00 
    c5c2:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
    c5c6:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
    c5cc:	4c 89 ee             	mov    %r13,%rsi
    c5cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c5d2: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c5d6:	48 89 da             	mov    %rbx,%rdx
    c5d9:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    c5e0:	e8 00 00 00 00       	callq  c5e5 <e1000_get_bus_info+0x11ee>
			c5e1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c5e5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c5ec:	00 
    c5ed:	41 b8 68 01 00 00    	mov    $0x168,%r8d
    c5f3:	48 89 da             	mov    %rbx,%rdx
    c5f6:	4c 89 ee             	mov    %r13,%rsi
    c5f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c5fc: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c600:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    c607:	e8 00 00 00 00       	callq  c60c <e1000_get_bus_info+0x1215>
			c608: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c60c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c613:	00 
    c614:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    c61b:	48 85 c0             	test   %rax,%rax
    c61e:	74 47                	je     c667 <e1000_get_bus_info+0x1270>
    c620:	48 8d 48 60          	lea    0x60(%rax),%rcx
    c624:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c62a:	48 89 da             	mov    %rbx,%rdx
    c62d:	4c 89 ee             	mov    %r13,%rsi
    c630:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c633: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c637:	e8 00 00 00 00       	callq  c63c <e1000_get_bus_info+0x1245>
			c638: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c63c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c643:	00 
    c644:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c64a:	48 89 da             	mov    %rbx,%rdx
    c64d:	4c 89 ee             	mov    %r13,%rsi
    c650:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c653: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c657:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    c65e:	48 83 c1 58          	add    $0x58,%rcx
    c662:	e8 00 00 00 00       	callq  c667 <e1000_get_bus_info+0x1270>
			c663: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c667:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c66e:	00 
    c66f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c672: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c676:	41 b8 80 00 00 00    	mov    $0x80,%r8d
    c67c:	48 89 da             	mov    %rbx,%rdx
    c67f:	4c 89 ee             	mov    %r13,%rsi
    c682:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    c689:	e8 00 00 00 00       	callq  c68e <e1000_get_bus_info+0x1297>
			c68a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c68e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c695:	00 
    c696:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
    c69d:	48 85 ff             	test   %rdi,%rdi
    c6a0:	74 64                	je     c706 <e1000_get_bus_info+0x130f>
    c6a2:	ba 08 00 00 00       	mov    $0x8,%edx
    c6a7:	be 10 00 00 00       	mov    $0x10,%esi
    c6ac:	e8 00 00 00 00       	callq  c6b1 <e1000_get_bus_info+0x12ba>
			c6ad: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    c6b1:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c6b8:	00 
    c6b9:	b9 08 00 00 00       	mov    $0x8,%ecx
    c6be:	48 89 da             	mov    %rbx,%rdx
    c6c1:	4c 89 ee             	mov    %r13,%rsi
    c6c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c6c7: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c6cb:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
    c6d2:	49 83 c0 10          	add    $0x10,%r8
    c6d6:	e8 00 00 00 00       	callq  c6db <e1000_get_bus_info+0x12e4>
			c6d7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c6db:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c6e2:	00 
    c6e3:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
    c6e9:	48 89 da             	mov    %rbx,%rdx
    c6ec:	4c 89 ee             	mov    %r13,%rsi
    c6ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c6f2: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c6f6:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    c6fd:	48 83 c1 08          	add    $0x8,%rcx
    c701:	e8 00 00 00 00       	callq  c706 <e1000_get_bus_info+0x130f>
			c702: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c706:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    c70d:	00 
    c70e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    c714:	48 89 da             	mov    %rbx,%rdx
    c717:	4c 89 ee             	mov    %r13,%rsi
    c71a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c71d: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c721:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    c728:	e8 00 00 00 00       	callq  c72d <e1000_get_bus_info+0x1336>
			c729: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c72d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c734:	00 
    c735:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    c73c:	00 
    c73d:	74 63                	je     c7a2 <e1000_get_bus_info+0x13ab>
    c73f:	31 db                	xor    %ebx,%ebx
    c741:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c748:	00 
    c749:	4c 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%r14
    c74d:	b9 01 00 00 00       	mov    $0x1,%ecx
    c752:	4c 89 ee             	mov    %r13,%rsi
    c755:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c758: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c75c:	4c 89 f2             	mov    %r14,%rdx
    c75f:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
    c766:	49 83 c0 08          	add    $0x8,%r8
    c76a:	49 01 d8             	add    %rbx,%r8
    c76d:	48 ff c3             	inc    %rbx
    c770:	e8 00 00 00 00       	callq  c775 <e1000_get_bus_info+0x137e>
			c771: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c775:	48 83 fb 20          	cmp    $0x20,%rbx
    c779:	75 c6                	jne    c741 <e1000_get_bus_info+0x134a>
    c77b:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    c782:	00 
    c783:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    c789:	4c 89 f2             	mov    %r14,%rdx
    c78c:	4c 89 ee             	mov    %r13,%rsi
    c78f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c792: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c796:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    c79d:	e8 00 00 00 00       	callq  c7a2 <e1000_get_bus_info+0x13ab>
			c79e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c7a2:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
    c7a6:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
    c7ad:	00 
    c7ae:	41 b8 78 02 00 00    	mov    $0x278,%r8d
    c7b4:	4c 89 ee             	mov    %r13,%rsi
    c7b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c7ba: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c7be:	48 89 da             	mov    %rbx,%rdx
    c7c1:	e8 00 00 00 00       	callq  c7c6 <e1000_get_bus_info+0x13cf>
			c7c2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c7c6:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
    c7cd:	00 
    c7ce:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    c7d4:	48 89 da             	mov    %rbx,%rdx
    c7d7:	4c 89 ee             	mov    %r13,%rsi
    c7da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c7dd: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c7e1:	e8 00 00 00 00       	callq  c7e6 <e1000_get_bus_info+0x13ef>
			c7e2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c7e6:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
    c7ed:	00 
    c7ee:	48 85 c0             	test   %rax,%rax
    c7f1:	74 1a                	je     c80d <e1000_get_bus_info+0x1416>
    c7f3:	49 89 c0             	mov    %rax,%r8
    c7f6:	b9 08 00 00 00       	mov    $0x8,%ecx
    c7fb:	48 89 da             	mov    %rbx,%rdx
    c7fe:	4c 89 ee             	mov    %r13,%rsi
    c801:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c804: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c808:	e8 00 00 00 00       	callq  c80d <e1000_get_bus_info+0x1416>
			c809: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c80d:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    c811:	b9 02 00 00 00       	mov    $0x2,%ecx
    c816:	48 89 da             	mov    %rbx,%rdx
    c819:	4c 89 ee             	mov    %r13,%rsi
    c81c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c81f: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c823:	49 83 c0 3c          	add    $0x3c,%r8
    c827:	e8 00 00 00 00       	callq  c82c <e1000_get_bus_info+0x1435>
			c828: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c82c:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
    c830:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
    c836:	48 89 da             	mov    %rbx,%rdx
    c839:	4c 89 ee             	mov    %r13,%rsi
    c83c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c83f: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c843:	48 83 c1 10          	add    $0x10,%rcx
    c847:	e8 00 00 00 00       	callq  c84c <e1000_get_bus_info+0x1455>
			c848: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    c84c:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
    c850:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
    c854:	b9 04 00 00 00       	mov    $0x4,%ecx
    c859:	4c 89 ee             	mov    %r13,%rsi
    c85c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c85f: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c863:	48 89 da             	mov    %rbx,%rdx
    c866:	e8 00 00 00 00       	callq  c86b <e1000_get_bus_info+0x1474>
			c867: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c86b:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
    c86f:	48 89 da             	mov    %rbx,%rdx
    c872:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c875: R_X86_64_32S	.rodata.str1.1+0x1c7c
    c879:	b9 04 00 00 00       	mov    $0x4,%ecx
    c87e:	4c 89 ee             	mov    %r13,%rsi
    c881:	e8 00 00 00 00       	callq  c886 <e1000_get_bus_info+0x148f>
			c882: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    c886:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    c88a:	8b 5d c4             	mov    0xffffffffffffffc4(%rbp),%ebx
    c88d:	48 85 ff             	test   %rdi,%rdi
    c890:	74 0d                	je     c89f <e1000_get_bus_info+0x14a8>
    c892:	e8 00 00 00 00       	callq  c897 <e1000_get_bus_info+0x14a0>
			c893: R_X86_64_PC32	kfree+0xfffffffffffffffc
    c897:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    c89e:	00 
    c89f:	66 85 db             	test   %bx,%bx
    c8a2:	41 89 dc             	mov    %ebx,%r12d
    c8a5:	74 3f                	je     c8e6 <e1000_get_bus_info+0x14ef>
    c8a7:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
    c8ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c8ae: R_X86_64_32S	.rodata.str1.1+0x1cd4
    c8b2:	48 8b 98 f8 02 00 00 	mov    0x2f8(%rax),%rbx
    c8b9:	e8 00 00 00 00       	callq  c8be <e1000_get_bus_info+0x14c7>
			c8ba: R_X86_64_PC32	record_function+0xfffffffffffffffc
    c8be:	48 8d 4d ce          	lea    0xffffffffffffffce(%rbp),%rcx
    c8c2:	41 0f b7 d4          	movzwl %r12w,%edx
    c8c6:	8b 73 38             	mov    0x38(%rbx),%esi
    c8c9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    c8cd:	83 c2 12             	add    $0x12,%edx
    c8d0:	e8 d3 ba ff ff       	callq  83a8 <pci_bus_read_config_word>
    c8d5:	0f b7 45 ce          	movzwl 0xffffffffffffffce(%rbp),%eax
    c8d9:	25 f0 03 00 00       	and    $0x3f0,%eax
    c8de:	c1 f8 04             	sar    $0x4,%eax
    c8e1:	e9 05 01 00 00       	jmpq   c9eb <e1000_get_bus_info+0x15f4>
    c8e6:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    c8ed:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    c8f4:	e9 fc 00 00 00       	jmpq   c9f5 <e1000_get_bus_info+0x15fe>
    c8f9:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    c900:	c7 42 44 03 00 00 00 	movl   $0x3,0x44(%rdx)
    c907:	c7 42 3c 06 00 00 00 	movl   $0x6,0x3c(%rdx)
    c90e:	c7 42 40 01 00 00 00 	movl   $0x1,0x40(%rdx)
    c915:	e9 db 00 00 00       	jmpq   c9f5 <e1000_get_bus_info+0x15fe>
    c91a:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    c921:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c924: R_X86_64_32S	.rodata.str1.1+0xae
    c928:	48 8b 18             	mov    (%rax),%rbx
    c92b:	e8 00 00 00 00       	callq  c930 <e1000_get_bus_info+0x1539>
			c92c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    c930:	8b 4b 08             	mov    0x8(%rbx),%ecx
    c933:	89 c8                	mov    %ecx,%eax
    c935:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    c93c:	25 00 20 00 00       	and    $0x2000,%eax
    c941:	83 f8 01             	cmp    $0x1,%eax
    c944:	19 c0                	sbb    %eax,%eax
    c946:	83 c0 02             	add    $0x2,%eax
    c949:	66 81 ba e6 00 00 00 	cmpw   $0x101d,0xe6(%rdx)
    c950:	1d 10 
    c952:	89 42 44             	mov    %eax,0x44(%rdx)
    c955:	89 c2                	mov    %eax,%edx
    c957:	75 0e                	jne    c967 <e1000_get_bus_info+0x1570>
    c959:	31 c0                	xor    %eax,%eax
    c95b:	83 fa 01             	cmp    $0x1,%edx
    c95e:	0f 95 c0             	setne  %al
    c961:	8d 44 00 02          	lea    0x2(%rax,%rax,1),%eax
    c965:	eb 13                	jmp    c97a <e1000_get_bus_info+0x1583>
    c967:	ff c8                	dec    %eax
    c969:	75 1b                	jne    c986 <e1000_get_bus_info+0x158f>
    c96b:	89 c8                	mov    %ecx,%eax
    c96d:	25 00 08 00 00       	and    $0x800,%eax
    c972:	83 f8 01             	cmp    $0x1,%eax
    c975:	19 c0                	sbb    %eax,%eax
    c977:	83 c0 02             	add    $0x2,%eax
    c97a:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    c981:	89 42 3c             	mov    %eax,0x3c(%rdx)
    c984:	eb 57                	jmp    c9dd <e1000_get_bus_info+0x15e6>
    c986:	89 c8                	mov    %ecx,%eax
    c988:	25 00 c0 00 00       	and    $0xc000,%eax
    c98d:	74 10                	je     c99f <e1000_get_bus_info+0x15a8>
    c98f:	3d 00 40 00 00       	cmp    $0x4000,%eax
    c994:	74 19                	je     c9af <e1000_get_bus_info+0x15b8>
    c996:	3d 00 80 00 00       	cmp    $0x8000,%eax
    c99b:	75 32                	jne    c9cf <e1000_get_bus_info+0x15d8>
    c99d:	eb 20                	jmp    c9bf <e1000_get_bus_info+0x15c8>
    c99f:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    c9a6:	c7 40 3c 02 00 00 00 	movl   $0x2,0x3c(%rax)
    c9ad:	eb 2e                	jmp    c9dd <e1000_get_bus_info+0x15e6>
    c9af:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    c9b6:	c7 42 3c 03 00 00 00 	movl   $0x3,0x3c(%rdx)
    c9bd:	eb 1e                	jmp    c9dd <e1000_get_bus_info+0x15e6>
    c9bf:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    c9c6:	c7 40 3c 05 00 00 00 	movl   $0x5,0x3c(%rax)
    c9cd:	eb 0e                	jmp    c9dd <e1000_get_bus_info+0x15e6>
    c9cf:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    c9d6:	c7 42 3c 07 00 00 00 	movl   $0x7,0x3c(%rdx)
    c9dd:	81 e1 00 10 00 00    	and    $0x1000,%ecx
    c9e3:	83 f9 01             	cmp    $0x1,%ecx
    c9e6:	19 c0                	sbb    %eax,%eax
    c9e8:	83 c0 06             	add    $0x6,%eax
    c9eb:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
    c9f2:	89 42 40             	mov    %eax,0x40(%rdx)
    c9f5:	48 83 c4 68          	add    $0x68,%rsp
    c9f9:	5b                   	pop    %rbx
    c9fa:	41 5c                	pop    %r12
    c9fc:	41 5d                	pop    %r13
    c9fe:	41 5e                	pop    %r14
    ca00:	41 5f                	pop    %r15
    ca02:	c9                   	leaveq 
    ca03:	c3                   	retq   

000000000000ca04 <e1000_set_pci_ex_no_snoop>:
    ca04:	55                   	push   %rbp
    ca05:	48 89 e5             	mov    %rsp,%rbp
    ca08:	41 55                	push   %r13
    ca0a:	49 89 fd             	mov    %rdi,%r13
    ca0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ca10: R_X86_64_32S	.rodata.str1.1+0x1ce9
    ca14:	41 54                	push   %r12
    ca16:	41 89 f4             	mov    %esi,%r12d
    ca19:	53                   	push   %rbx
    ca1a:	48 83 ec 08          	sub    $0x8,%rsp
    ca1e:	e8 00 00 00 00       	callq  ca23 <e1000_set_pci_ex_no_snoop+0x1f>
			ca1f: R_X86_64_PC32	record_function+0xfffffffffffffffc
    ca23:	41 83 7d 44 00       	cmpl   $0x0,0x44(%r13)
    ca28:	75 08                	jne    ca32 <e1000_set_pci_ex_no_snoop+0x2e>
    ca2a:	4c 89 ef             	mov    %r13,%rdi
    ca2d:	e8 c5 e9 ff ff       	callq  b3f7 <e1000_get_bus_info>
    ca32:	41 83 7d 44 03       	cmpl   $0x3,0x44(%r13)
    ca37:	0f 85 92 00 00 00    	jne    cacf <e1000_set_pci_ex_no_snoop+0xcb>
    ca3d:	45 85 e4             	test   %r12d,%r12d
    ca40:	74 36                	je     ca78 <e1000_set_pci_ex_no_snoop+0x74>
    ca42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ca45: R_X86_64_32S	.rodata.str1.1+0xae
    ca49:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    ca4d:	e8 00 00 00 00       	callq  ca52 <e1000_set_pci_ex_no_snoop+0x4e>
			ca4e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    ca52:	8b 83 00 5b 00 00    	mov    0x5b00(%rbx),%eax
    ca58:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    ca5c:	83 e0 c0             	and    $0xffffffffffffffc0,%eax
    ca5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ca62: R_X86_64_32S	.rodata.str1.1+0xb4
    ca66:	41 09 c4             	or     %eax,%r12d
    ca69:	e8 00 00 00 00       	callq  ca6e <e1000_set_pci_ex_no_snoop+0x6a>
			ca6a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    ca6e:	48 81 c3 00 5b 00 00 	add    $0x5b00,%rbx
    ca75:	44 89 23             	mov    %r12d,(%rbx)
    ca78:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
    ca7d:	75 50                	jne    cacf <e1000_set_pci_ex_no_snoop+0xcb>
    ca7f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    ca83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ca86: R_X86_64_32S	.rodata.str1.1+0xb4
    ca8a:	e8 00 00 00 00       	callq  ca8f <e1000_set_pci_ex_no_snoop+0x8b>
			ca8b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    ca8f:	b8 3f 00 00 00       	mov    $0x3f,%eax
    ca94:	48 81 c3 00 5b 00 00 	add    $0x5b00,%rbx
    ca9b:	89 03                	mov    %eax,(%rbx)
    ca9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			caa0: R_X86_64_32S	.rodata.str1.1+0xae
    caa4:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    caa8:	e8 00 00 00 00       	callq  caad <e1000_set_pci_ex_no_snoop+0xa9>
			caa9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    caad:	44 8b 63 18          	mov    0x18(%rbx),%r12d
    cab1:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    cab5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cab8: R_X86_64_32S	.rodata.str1.1+0xb4
    cabc:	41 81 cc 00 00 02 00 	or     $0x20000,%r12d
    cac3:	e8 00 00 00 00       	callq  cac8 <e1000_set_pci_ex_no_snoop+0xc4>
			cac4: R_X86_64_PC32	record_function+0xfffffffffffffffc
    cac8:	48 83 c3 18          	add    $0x18,%rbx
    cacc:	44 89 23             	mov    %r12d,(%rbx)
    cacf:	5a                   	pop    %rdx
    cad0:	5b                   	pop    %rbx
    cad1:	41 5c                	pop    %r12
    cad3:	41 5d                	pop    %r13
    cad5:	c9                   	leaveq 
    cad6:	31 c0                	xor    %eax,%eax
    cad8:	c3                   	retq   

000000000000cad9 <pci_release_selected_regions>:
    cad9:	55                   	push   %rbp
    cada:	48 89 e5             	mov    %rsp,%rbp
    cadd:	41 57                	push   %r15
    cadf:	41 56                	push   %r14
    cae1:	41 55                	push   %r13
    cae3:	41 54                	push   %r12
    cae5:	53                   	push   %rbx
    cae6:	48 83 ec 58          	sub    $0x58,%rsp
    caea:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
    caee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			caf1: R_X86_64_32S	.rodata.str1.1+0x1d03
    caf5:	89 75 84             	mov    %esi,0xffffffffffffff84(%rbp)
    caf8:	e8 00 00 00 00       	callq  cafd <pci_release_selected_regions+0x24>
			caf9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    cafd:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
    cb01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cb04: R_X86_64_32S	.rodata.str1.1+0x1d20
    cb08:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    cb0f:	00 
    cb10:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
    cb17:	00 
    cb18:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
    cb1f:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    cb23:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
    cb26:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
    cb29:	e8 00 00 00 00       	callq  cb2e <pci_release_selected_regions+0x55>
			cb2a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    cb2e:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    cb32:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    cb36:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    cb3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cb3d: R_X86_64_32S	.rodata.str1.1+0x1d03
    cb41:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    cb48:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    cb4f:	00 
    cb50:	e8 00 00 00 00       	callq  cb55 <pci_release_selected_regions+0x7c>
			cb51: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cb55:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
    cb5a:	0f 84 5c 09 00 00    	je     d4bc <pci_release_selected_regions+0x9e3>
    cb60:	45 31 ff             	xor    %r15d,%r15d
    cb63:	45 31 f6             	xor    %r14d,%r14d
    cb66:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
    cb6d:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    cb71:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    cb75:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    cb7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cb7e: R_X86_64_32S	.rodata.str1.1+0x1d03
    cb82:	41 ff c7             	inc    %r15d
    cb85:	48 89 d9             	mov    %rbx,%rcx
    cb88:	48 03 4d b8          	add    0xffffffffffffffb8(%rbp),%rcx
    cb8c:	4c 89 e2             	mov    %r12,%rdx
    cb8f:	4c 89 ee             	mov    %r13,%rsi
    cb92:	48 83 c1 08          	add    $0x8,%rcx
    cb96:	e8 00 00 00 00       	callq  cb9b <pci_release_selected_regions+0xc2>
			cb97: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cb9b:	48 03 5d b8          	add    0xffffffffffffffb8(%rbp),%rbx
    cb9f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    cba5:	4c 89 e2             	mov    %r12,%rdx
    cba8:	4c 89 ee             	mov    %r13,%rsi
    cbab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cbae: R_X86_64_32S	.rodata.str1.1+0x1d03
    cbb2:	48 89 d9             	mov    %rbx,%rcx
    cbb5:	e8 00 00 00 00       	callq  cbba <pci_release_selected_regions+0xe1>
			cbb6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cbba:	4c 89 f1             	mov    %r14,%rcx
    cbbd:	48 03 4d b8          	add    0xffffffffffffffb8(%rbp),%rcx
    cbc1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    cbc7:	4c 89 e2             	mov    %r12,%rdx
    cbca:	4c 89 ee             	mov    %r13,%rsi
    cbcd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cbd0: R_X86_64_32S	.rodata.str1.1+0x1d03
    cbd4:	49 83 c6 38          	add    $0x38,%r14
    cbd8:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
    cbdf:	e8 00 00 00 00       	callq  cbe4 <pci_release_selected_regions+0x10b>
			cbe0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cbe4:	41 83 ff 0c          	cmp    $0xc,%r15d
    cbe8:	0f 85 78 ff ff ff    	jne    cb66 <pci_release_selected_regions+0x8d>
    cbee:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    cbf2:	4c 89 e2             	mov    %r12,%rdx
    cbf5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    cbfb:	4c 89 ee             	mov    %r13,%rsi
    cbfe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cc01: R_X86_64_32S	.rodata.str1.1+0x1d03
    cc05:	45 31 ff             	xor    %r15d,%r15d
    cc08:	48 83 c1 48          	add    $0x48,%rcx
    cc0c:	e8 00 00 00 00       	callq  cc11 <pci_release_selected_regions+0x138>
			cc0d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cc11:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    cc15:	4c 89 e2             	mov    %r12,%rdx
    cc18:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    cc1e:	4c 89 ee             	mov    %r13,%rsi
    cc21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cc24: R_X86_64_32S	.rodata.str1.1+0x1d03
    cc28:	48 83 c1 38          	add    $0x38,%rcx
    cc2c:	e8 00 00 00 00       	callq  cc31 <pci_release_selected_regions+0x158>
			cc2d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cc31:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    cc35:	4c 89 e2             	mov    %r12,%rdx
    cc38:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    cc3e:	4c 89 ee             	mov    %r13,%rsi
    cc41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cc44: R_X86_64_32S	.rodata.str1.1+0x1d03
    cc48:	48 83 c1 7c          	add    $0x7c,%rcx
    cc4c:	e8 00 00 00 00       	callq  cc51 <pci_release_selected_regions+0x178>
			cc4d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cc51:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    cc55:	4c 89 e2             	mov    %r12,%rdx
    cc58:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    cc5e:	4c 89 ee             	mov    %r13,%rsi
    cc61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cc64: R_X86_64_32S	.rodata.str1.1+0x1d03
    cc68:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
    cc6f:	e8 00 00 00 00       	callq  cc74 <pci_release_selected_regions+0x19b>
			cc70: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cc74:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    cc78:	4c 89 e2             	mov    %r12,%rdx
    cc7b:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    cc81:	4c 89 ee             	mov    %r13,%rsi
    cc84:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cc87: R_X86_64_32S	.rodata.str1.1+0x1d03
    cc8b:	48 83 c1 3e          	add    $0x3e,%rcx
    cc8f:	e8 00 00 00 00       	callq  cc94 <pci_release_selected_regions+0x1bb>
			cc90: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cc94:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    cc98:	4c 89 e2             	mov    %r12,%rdx
    cc9b:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    cca1:	4c 89 ee             	mov    %r13,%rsi
    cca4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cca7: R_X86_64_32S	.rodata.str1.1+0x1d03
    ccab:	48 83 c1 42          	add    $0x42,%rcx
    ccaf:	e8 00 00 00 00       	callq  ccb4 <pci_release_selected_regions+0x1db>
			ccb0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ccb4:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
    ccb8:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
    ccbc:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
    ccc3:	00 
    ccc4:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    ccc8:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    cccc:	48 89 d9             	mov    %rbx,%rcx
    cccf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ccd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ccd8: R_X86_64_32S	.rodata.str1.1+0x1d03
    ccdc:	49 ff c7             	inc    %r15
    ccdf:	4c 89 ea             	mov    %r13,%rdx
    cce2:	4c 89 f6             	mov    %r14,%rsi
    cce5:	48 ff c3             	inc    %rbx
    cce8:	e8 00 00 00 00       	callq  cced <pci_release_selected_regions+0x214>
			cce9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cced:	49 83 ff 14          	cmp    $0x14,%r15
    ccf1:	75 d1                	jne    ccc4 <pci_release_selected_regions+0x1eb>
    ccf3:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    ccfa:	00 
    ccfb:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
    ccff:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    cd05:	4c 89 ea             	mov    %r13,%rdx
    cd08:	4c 89 f6             	mov    %r14,%rsi
    cd0b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cd0e: R_X86_64_32S	.rodata.str1.1+0x1d03
    cd12:	48 89 d9             	mov    %rbx,%rcx
    cd15:	83 e0 01             	and    $0x1,%eax
    cd18:	0f b6 c0             	movzbl %al,%eax
    cd1b:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    cd1e:	e8 00 00 00 00       	callq  cd23 <pci_release_selected_regions+0x24a>
			cd1f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cd23:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    cd2a:	00 
    cd2b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    cd31:	48 89 d9             	mov    %rbx,%rcx
    cd34:	4c 89 ea             	mov    %r13,%rdx
    cd37:	4c 89 f6             	mov    %r14,%rsi
    cd3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cd3d: R_X86_64_32S	.rodata.str1.1+0x1d03
    cd41:	d0 e8                	shr    %al
    cd43:	83 e0 01             	and    $0x1,%eax
    cd46:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    cd49:	e8 00 00 00 00       	callq  cd4e <pci_release_selected_regions+0x275>
			cd4a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cd4e:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
    cd55:	00 
    cd56:	4c 89 ea             	mov    %r13,%rdx
    cd59:	4c 89 f6             	mov    %r14,%rsi
    cd5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cd5f: R_X86_64_32S	.rodata.str1.1+0x1d03
    cd63:	e8 00 00 00 00       	callq  cd68 <pci_release_selected_regions+0x28f>
			cd64: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cd68:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
    cd6f:	00 
    cd70:	48 85 c0             	test   %rax,%rax
    cd73:	0f 84 ac 00 00 00    	je     ce25 <pci_release_selected_regions+0x34c>
    cd79:	48 8d 48 18          	lea    0x18(%rax),%rcx
    cd7d:	4c 89 ea             	mov    %r13,%rdx
    cd80:	4c 89 f6             	mov    %r14,%rsi
    cd83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cd86: R_X86_64_32S	.rodata.str1.1+0x1d03
    cd8a:	e8 00 00 00 00       	callq  cd8f <pci_release_selected_regions+0x2b6>
			cd8b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cd8f:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    cd96:	00 
    cd97:	4c 89 ea             	mov    %r13,%rdx
    cd9a:	4c 89 f6             	mov    %r14,%rsi
    cd9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cda0: R_X86_64_32S	.rodata.str1.1+0x1d03
    cda4:	48 83 c1 20          	add    $0x20,%rcx
    cda8:	e8 00 00 00 00       	callq  cdad <pci_release_selected_regions+0x2d4>
			cda9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cdad:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    cdb4:	00 
    cdb5:	4c 89 ea             	mov    %r13,%rdx
    cdb8:	4c 89 f6             	mov    %r14,%rsi
    cdbb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cdbe: R_X86_64_32S	.rodata.str1.1+0x1d03
    cdc2:	48 83 c1 30          	add    $0x30,%rcx
    cdc6:	e8 00 00 00 00       	callq  cdcb <pci_release_selected_regions+0x2f2>
			cdc7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cdcb:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    cdd2:	00 
    cdd3:	4c 89 ea             	mov    %r13,%rdx
    cdd6:	4c 89 f6             	mov    %r14,%rsi
    cdd9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cddc: R_X86_64_32S	.rodata.str1.1+0x1d03
    cde0:	48 83 c1 10          	add    $0x10,%rcx
    cde4:	e8 00 00 00 00       	callq  cde9 <pci_release_selected_regions+0x310>
			cde5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cde9:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    cdf0:	00 
    cdf1:	4c 89 ea             	mov    %r13,%rdx
    cdf4:	4c 89 f6             	mov    %r14,%rsi
    cdf7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cdfa: R_X86_64_32S	.rodata.str1.1+0x1d03
    cdfe:	48 83 c1 28          	add    $0x28,%rcx
    ce02:	e8 00 00 00 00       	callq  ce07 <pci_release_selected_regions+0x32e>
			ce03: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    ce07:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    ce0e:	00 
    ce0f:	4c 89 ea             	mov    %r13,%rdx
    ce12:	4c 89 f6             	mov    %r14,%rsi
    ce15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ce18: R_X86_64_32S	.rodata.str1.1+0x1d03
    ce1c:	48 83 c1 08          	add    $0x8,%rcx
    ce20:	e8 00 00 00 00       	callq  ce25 <pci_release_selected_regions+0x34c>
			ce21: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    ce25:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
    ce2c:	00 
    ce2d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    ce33:	4c 89 ea             	mov    %r13,%rdx
    ce36:	4c 89 f6             	mov    %r14,%rsi
    ce39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ce3c: R_X86_64_32S	.rodata.str1.1+0x1d03
    ce40:	e8 00 00 00 00       	callq  ce45 <pci_release_selected_regions+0x36c>
			ce41: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ce45:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
    ce4c:	00 
    ce4d:	4c 89 ea             	mov    %r13,%rdx
    ce50:	4c 89 f6             	mov    %r14,%rsi
    ce53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ce56: R_X86_64_32S	.rodata.str1.1+0x1d03
    ce5a:	e8 00 00 00 00       	callq  ce5f <pci_release_selected_regions+0x386>
			ce5b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    ce5f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    ce66:	00 
    ce67:	48 85 c0             	test   %rax,%rax
    ce6a:	0f 84 91 05 00 00    	je     d401 <pci_release_selected_regions+0x928>
    ce70:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
    ce77:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    ce7d:	4c 89 ea             	mov    %r13,%rdx
    ce80:	4c 89 f6             	mov    %r14,%rsi
    ce83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ce86: R_X86_64_32S	.rodata.str1.1+0x1d03
    ce8a:	31 db                	xor    %ebx,%ebx
    ce8c:	e8 00 00 00 00       	callq  ce91 <pci_release_selected_regions+0x3b8>
			ce8d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ce91:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    ce98:	00 
    ce99:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    ce9f:	4c 89 ea             	mov    %r13,%rdx
    cea2:	4c 89 f6             	mov    %r14,%rsi
    cea5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cea8: R_X86_64_32S	.rodata.str1.1+0x1d03
    ceac:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
    ceb3:	e8 00 00 00 00       	callq  ceb8 <pci_release_selected_regions+0x3df>
			ceb4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    ceb8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cebf:	00 
    cec0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    cec6:	4c 89 ea             	mov    %r13,%rdx
    cec9:	4c 89 f6             	mov    %r14,%rsi
    cecc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cecf: R_X86_64_32S	.rodata.str1.1+0x1d03
    ced3:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
    ceda:	e8 00 00 00 00       	callq  cedf <pci_release_selected_regions+0x406>
			cedb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cedf:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cee6:	00 
    cee7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    ceed:	4c 89 ea             	mov    %r13,%rdx
    cef0:	4c 89 f6             	mov    %r14,%rsi
    cef3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cef6: R_X86_64_32S	.rodata.str1.1+0x1d03
    cefa:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
    cf01:	e8 00 00 00 00       	callq  cf06 <pci_release_selected_regions+0x42d>
			cf02: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cf06:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cf0d:	00 
    cf0e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    cf14:	4c 89 ea             	mov    %r13,%rdx
    cf17:	4c 89 f6             	mov    %r14,%rsi
    cf1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cf1d: R_X86_64_32S	.rodata.str1.1+0x1d03
    cf21:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
    cf28:	e8 00 00 00 00       	callq  cf2d <pci_release_selected_regions+0x454>
			cf29: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cf2d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cf34:	00 
    cf35:	4c 89 ea             	mov    %r13,%rdx
    cf38:	4c 89 f6             	mov    %r14,%rsi
    cf3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cf3e: R_X86_64_32S	.rodata.str1.1+0x1d03
    cf42:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    cf49:	e8 00 00 00 00       	callq  cf4e <pci_release_selected_regions+0x475>
			cf4a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cf4e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cf55:	00 
    cf56:	4c 89 ea             	mov    %r13,%rdx
    cf59:	4c 89 f6             	mov    %r14,%rsi
    cf5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cf5f: R_X86_64_32S	.rodata.str1.1+0x1d03
    cf63:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    cf6a:	e8 00 00 00 00       	callq  cf6f <pci_release_selected_regions+0x496>
			cf6b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cf6f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cf76:	00 
    cf77:	4c 89 ea             	mov    %r13,%rdx
    cf7a:	4c 89 f6             	mov    %r14,%rsi
    cf7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cf80: R_X86_64_32S	.rodata.str1.1+0x1d03
    cf84:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    cf8b:	e8 00 00 00 00       	callq  cf90 <pci_release_selected_regions+0x4b7>
			cf8c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    cf90:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cf97:	00 
    cf98:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    cf9c:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    cfa0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    cfa6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cfa9: R_X86_64_32S	.rodata.str1.1+0x1d03
    cfad:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
    cfb4:	48 01 d9             	add    %rbx,%rcx
    cfb7:	48 ff c3             	inc    %rbx
    cfba:	e8 00 00 00 00       	callq  cfbf <pci_release_selected_regions+0x4e6>
			cfbb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cfbf:	48 83 fb 20          	cmp    $0x20,%rbx
    cfc3:	75 cb                	jne    cf90 <pci_release_selected_regions+0x4b7>
    cfc5:	30 db                	xor    %bl,%bl
    cfc7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    cfce:	00 
    cfcf:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    cfd3:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    cfd7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    cfdd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cfe0: R_X86_64_32S	.rodata.str1.1+0x1d03
    cfe4:	4c 89 ea             	mov    %r13,%rdx
    cfe7:	4c 89 f6             	mov    %r14,%rsi
    cfea:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
    cff1:	48 01 d9             	add    %rbx,%rcx
    cff4:	48 ff c3             	inc    %rbx
    cff7:	e8 00 00 00 00       	callq  cffc <pci_release_selected_regions+0x523>
			cff8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    cffc:	48 83 fb 20          	cmp    $0x20,%rbx
    d000:	75 c5                	jne    cfc7 <pci_release_selected_regions+0x4ee>
    d002:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d009:	00 
    d00a:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d010:	4c 89 ea             	mov    %r13,%rdx
    d013:	4c 89 f6             	mov    %r14,%rsi
    d016:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d019: R_X86_64_32S	.rodata.str1.1+0x1d03
    d01d:	30 db                	xor    %bl,%bl
    d01f:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
    d026:	e8 00 00 00 00       	callq  d02b <pci_release_selected_regions+0x552>
			d027: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d02b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d032:	00 
    d033:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    d039:	4c 89 ea             	mov    %r13,%rdx
    d03c:	4c 89 f6             	mov    %r14,%rsi
    d03f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d042: R_X86_64_32S	.rodata.str1.1+0x1d03
    d046:	48 83 c1 48          	add    $0x48,%rcx
    d04a:	e8 00 00 00 00       	callq  d04f <pci_release_selected_regions+0x576>
			d04b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d04f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d056:	00 
    d057:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    d05b:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    d05f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d065:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d068: R_X86_64_32S	.rodata.str1.1+0x1d03
    d06c:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
    d073:	48 01 d9             	add    %rbx,%rcx
    d076:	48 ff c3             	inc    %rbx
    d079:	e8 00 00 00 00       	callq  d07e <pci_release_selected_regions+0x5a5>
			d07a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d07e:	48 83 fb 20          	cmp    $0x20,%rbx
    d082:	75 cb                	jne    d04f <pci_release_selected_regions+0x576>
    d084:	30 db                	xor    %bl,%bl
    d086:	48 89 d9             	mov    %rbx,%rcx
    d089:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
    d090:	00 
    d091:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    d095:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    d099:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d09f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d0a2: R_X86_64_32S	.rodata.str1.1+0x1d03
    d0a6:	4c 89 ea             	mov    %r13,%rdx
    d0a9:	48 ff c3             	inc    %rbx
    d0ac:	4c 89 f6             	mov    %r14,%rsi
    d0af:	e8 00 00 00 00       	callq  d0b4 <pci_release_selected_regions+0x5db>
			d0b0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d0b4:	48 83 fb 10          	cmp    $0x10,%rbx
    d0b8:	75 cc                	jne    d086 <pci_release_selected_regions+0x5ad>
    d0ba:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d0c1:	00 
    d0c2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d0c8:	4c 89 ea             	mov    %r13,%rdx
    d0cb:	4c 89 f6             	mov    %r14,%rsi
    d0ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d0d1: R_X86_64_32S	.rodata.str1.1+0x1d03
    d0d5:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
    d0dc:	e8 00 00 00 00       	callq  d0e1 <pci_release_selected_regions+0x608>
			d0dd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d0e1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d0e8:	00 
    d0e9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    d0ef:	4c 89 ea             	mov    %r13,%rdx
    d0f2:	4c 89 f6             	mov    %r14,%rsi
    d0f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d0f8: R_X86_64_32S	.rodata.str1.1+0x1d03
    d0fc:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
    d103:	e8 00 00 00 00       	callq  d108 <pci_release_selected_regions+0x62f>
			d104: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d108:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d10f:	00 
    d110:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    d116:	4c 89 ea             	mov    %r13,%rdx
    d119:	4c 89 f6             	mov    %r14,%rsi
    d11c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d11f: R_X86_64_32S	.rodata.str1.1+0x1d03
    d123:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
    d12a:	e8 00 00 00 00       	callq  d12f <pci_release_selected_regions+0x656>
			d12b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d12f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d136:	00 
    d137:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    d13d:	4c 89 ea             	mov    %r13,%rdx
    d140:	4c 89 f6             	mov    %r14,%rsi
    d143:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d146: R_X86_64_32S	.rodata.str1.1+0x1d03
    d14a:	48 83 c1 70          	add    $0x70,%rcx
    d14e:	e8 00 00 00 00       	callq  d153 <pci_release_selected_regions+0x67a>
			d14f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d153:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d15a:	00 
    d15b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    d161:	4c 89 ea             	mov    %r13,%rdx
    d164:	4c 89 f6             	mov    %r14,%rsi
    d167:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d16a: R_X86_64_32S	.rodata.str1.1+0x1d03
    d16e:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
    d175:	e8 00 00 00 00       	callq  d17a <pci_release_selected_regions+0x6a1>
			d176: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d17a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d181:	00 
    d182:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    d188:	4c 89 ea             	mov    %r13,%rdx
    d18b:	4c 89 f6             	mov    %r14,%rsi
    d18e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d191: R_X86_64_32S	.rodata.str1.1+0x1d03
    d195:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
    d19c:	e8 00 00 00 00       	callq  d1a1 <pci_release_selected_regions+0x6c8>
			d19d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d1a1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d1a8:	00 
    d1a9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    d1af:	4c 89 ea             	mov    %r13,%rdx
    d1b2:	4c 89 f6             	mov    %r14,%rsi
    d1b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d1b8: R_X86_64_32S	.rodata.str1.1+0x1d03
    d1bc:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
    d1c3:	e8 00 00 00 00       	callq  d1c8 <pci_release_selected_regions+0x6ef>
			d1c4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d1c8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d1cf:	00 
    d1d0:	4c 89 ea             	mov    %r13,%rdx
    d1d3:	4c 89 f6             	mov    %r14,%rsi
    d1d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d1d9: R_X86_64_32S	.rodata.str1.1+0x1d03
    d1dd:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    d1e4:	e8 00 00 00 00       	callq  d1e9 <pci_release_selected_regions+0x710>
			d1e5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d1e9:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d1f0:	00 
    d1f1:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    d1f8:	00 
    d1f9:	74 62                	je     d25d <pci_release_selected_regions+0x784>
    d1fb:	30 db                	xor    %bl,%bl
    d1fd:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d204:	00 
    d205:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    d209:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    d20d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d213:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d216: R_X86_64_32S	.rodata.str1.1+0x1d03
    d21a:	4c 89 ea             	mov    %r13,%rdx
    d21d:	4c 89 f6             	mov    %r14,%rsi
    d220:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    d227:	48 83 c1 08          	add    $0x8,%rcx
    d22b:	48 01 d9             	add    %rbx,%rcx
    d22e:	48 ff c3             	inc    %rbx
    d231:	e8 00 00 00 00       	callq  d236 <pci_release_selected_regions+0x75d>
			d232: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d236:	48 83 fb 20          	cmp    $0x20,%rbx
    d23a:	75 c1                	jne    d1fd <pci_release_selected_regions+0x724>
    d23c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d243:	00 
    d244:	4c 89 ea             	mov    %r13,%rdx
    d247:	4c 89 f6             	mov    %r14,%rsi
    d24a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d24d: R_X86_64_32S	.rodata.str1.1+0x1d03
    d251:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    d258:	e8 00 00 00 00       	callq  d25d <pci_release_selected_regions+0x784>
			d259: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d25d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d264:	00 
    d265:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    d269:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    d26d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d270: R_X86_64_32S	.rodata.str1.1+0x1d03
    d274:	48 89 da             	mov    %rbx,%rdx
    d277:	4c 89 ee             	mov    %r13,%rsi
    d27a:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    d281:	e8 00 00 00 00       	callq  d286 <pci_release_selected_regions+0x7ad>
			d282: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d286:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d28d:	00 
    d28e:	48 89 da             	mov    %rbx,%rdx
    d291:	4c 89 ee             	mov    %r13,%rsi
    d294:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d297: R_X86_64_32S	.rodata.str1.1+0x1d03
    d29b:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    d2a2:	e8 00 00 00 00       	callq  d2a7 <pci_release_selected_regions+0x7ce>
			d2a3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d2a7:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d2ae:	00 
    d2af:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    d2b6:	48 85 c0             	test   %rax,%rax
    d2b9:	74 3b                	je     d2f6 <pci_release_selected_regions+0x81d>
    d2bb:	48 8d 48 60          	lea    0x60(%rax),%rcx
    d2bf:	48 89 da             	mov    %rbx,%rdx
    d2c2:	4c 89 ee             	mov    %r13,%rsi
    d2c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d2c8: R_X86_64_32S	.rodata.str1.1+0x1d03
    d2cc:	e8 00 00 00 00       	callq  d2d1 <pci_release_selected_regions+0x7f8>
			d2cd: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d2d1:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d2d8:	00 
    d2d9:	48 89 da             	mov    %rbx,%rdx
    d2dc:	4c 89 ee             	mov    %r13,%rsi
    d2df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d2e2: R_X86_64_32S	.rodata.str1.1+0x1d03
    d2e6:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    d2ed:	48 83 c1 58          	add    $0x58,%rcx
    d2f1:	e8 00 00 00 00       	callq  d2f6 <pci_release_selected_regions+0x81d>
			d2f2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d2f6:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d2fd:	00 
    d2fe:	48 89 da             	mov    %rbx,%rdx
    d301:	4c 89 ee             	mov    %r13,%rsi
    d304:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d307: R_X86_64_32S	.rodata.str1.1+0x1d03
    d30b:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    d312:	e8 00 00 00 00       	callq  d317 <pci_release_selected_regions+0x83e>
			d313: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d317:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d31e:	00 
    d31f:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
    d326:	48 85 c0             	test   %rax,%rax
    d329:	74 41                	je     d36c <pci_release_selected_regions+0x893>
    d32b:	48 8d 48 10          	lea    0x10(%rax),%rcx
    d32f:	48 89 da             	mov    %rbx,%rdx
    d332:	4c 89 ee             	mov    %r13,%rsi
    d335:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d338: R_X86_64_32S	.rodata.str1.1+0x1d03
    d33c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    d342:	e8 00 00 00 00       	callq  d347 <pci_release_selected_regions+0x86e>
			d343: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d347:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d34e:	00 
    d34f:	48 89 da             	mov    %rbx,%rdx
    d352:	4c 89 ee             	mov    %r13,%rsi
    d355:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d358: R_X86_64_32S	.rodata.str1.1+0x1d03
    d35c:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    d363:	48 83 c1 08          	add    $0x8,%rcx
    d367:	e8 00 00 00 00       	callq  d36c <pci_release_selected_regions+0x893>
			d368: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d36c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d373:	00 
    d374:	48 89 da             	mov    %rbx,%rdx
    d377:	4c 89 ee             	mov    %r13,%rsi
    d37a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d37d: R_X86_64_32S	.rodata.str1.1+0x1d03
    d381:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    d388:	e8 00 00 00 00       	callq  d38d <pci_release_selected_regions+0x8b4>
			d389: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d38d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d394:	00 
    d395:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    d39c:	00 
    d39d:	74 62                	je     d401 <pci_release_selected_regions+0x928>
    d39f:	31 db                	xor    %ebx,%ebx
    d3a1:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d3a8:	00 
    d3a9:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    d3ad:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
    d3b1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d3b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d3ba: R_X86_64_32S	.rodata.str1.1+0x1d03
    d3be:	4c 89 ea             	mov    %r13,%rdx
    d3c1:	4c 89 f6             	mov    %r14,%rsi
    d3c4:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    d3cb:	48 83 c1 08          	add    $0x8,%rcx
    d3cf:	48 01 d9             	add    %rbx,%rcx
    d3d2:	48 ff c3             	inc    %rbx
    d3d5:	e8 00 00 00 00       	callq  d3da <pci_release_selected_regions+0x901>
			d3d6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d3da:	48 83 fb 20          	cmp    $0x20,%rbx
    d3de:	75 c1                	jne    d3a1 <pci_release_selected_regions+0x8c8>
    d3e0:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    d3e7:	00 
    d3e8:	4c 89 ea             	mov    %r13,%rdx
    d3eb:	4c 89 f6             	mov    %r14,%rsi
    d3ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d3f1: R_X86_64_32S	.rodata.str1.1+0x1d03
    d3f5:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    d3fc:	e8 00 00 00 00       	callq  d401 <pci_release_selected_regions+0x928>
			d3fd: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d401:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    d405:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    d409:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
    d410:	00 
    d411:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d414: R_X86_64_32S	.rodata.str1.1+0x1d03
    d418:	48 89 da             	mov    %rbx,%rdx
    d41b:	4c 89 ee             	mov    %r13,%rsi
    d41e:	e8 00 00 00 00       	callq  d423 <pci_release_selected_regions+0x94a>
			d41f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d423:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
    d42a:	00 
    d42b:	48 89 da             	mov    %rbx,%rdx
    d42e:	4c 89 ee             	mov    %r13,%rsi
    d431:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d434: R_X86_64_32S	.rodata.str1.1+0x1d03
    d438:	e8 00 00 00 00       	callq  d43d <pci_release_selected_regions+0x964>
			d439: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d43d:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
    d444:	00 
    d445:	48 85 c9             	test   %rcx,%rcx
    d448:	74 18                	je     d462 <pci_release_selected_regions+0x989>
    d44a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    d450:	48 89 da             	mov    %rbx,%rdx
    d453:	4c 89 ee             	mov    %r13,%rsi
    d456:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d459: R_X86_64_32S	.rodata.str1.1+0x1d03
    d45d:	e8 00 00 00 00       	callq  d462 <pci_release_selected_regions+0x989>
			d45e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d462:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    d466:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d46c:	48 89 da             	mov    %rbx,%rdx
    d46f:	4c 89 ee             	mov    %r13,%rsi
    d472:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d475: R_X86_64_32S	.rodata.str1.1+0x1d03
    d479:	48 83 c1 40          	add    $0x40,%rcx
    d47d:	e8 00 00 00 00       	callq  d482 <pci_release_selected_regions+0x9a9>
			d47e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d482:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    d486:	48 89 da             	mov    %rbx,%rdx
    d489:	4c 89 ee             	mov    %r13,%rsi
    d48c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d48f: R_X86_64_32S	.rodata.str1.1+0x1d03
    d493:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    d499:	48 83 c1 3c          	add    $0x3c,%rcx
    d49d:	e8 00 00 00 00       	callq  d4a2 <pci_release_selected_regions+0x9c9>
			d49e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d4a2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
    d4a6:	48 89 da             	mov    %rbx,%rdx
    d4a9:	4c 89 ee             	mov    %r13,%rsi
    d4ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d4af: R_X86_64_32S	.rodata.str1.1+0x1d03
    d4b3:	48 83 c1 10          	add    $0x10,%rcx
    d4b7:	e8 00 00 00 00       	callq  d4bc <pci_release_selected_regions+0x9e3>
			d4b8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    d4bc:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    d4c0:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
    d4c4:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
    d4c8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    d4ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d4d1: R_X86_64_32S	.rodata.str1.1+0x1d03
    d4d5:	4c 89 e2             	mov    %r12,%rdx
    d4d8:	48 89 de             	mov    %rbx,%rsi
    d4db:	e8 00 00 00 00       	callq  d4e0 <pci_release_selected_regions+0xa07>
			d4dc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    d4e0:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    d4e4:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
    d4e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d4eb: R_X86_64_32S	.rodata.str1.1+0x1d03
    d4ef:	48 c7 45 90 1d 06 00 	movq   $0x61d,0xffffffffffffff90(%rbp)
    d4f6:	00 
    d4f7:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
    d4fb:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
    d4fe:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
    d501:	e8 00 00 00 00       	callq  d506 <pci_release_selected_regions+0xa2d>
			d502: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    d506:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
    d50a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d50d: R_X86_64_32S	.rodata.str1.1+0x1d4b
    d511:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    d515:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
    d518:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    d51b:	e8 00 00 00 00       	callq  d520 <pci_release_selected_regions+0xa47>
			d51c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    d520:	4c 8b 6d a0          	mov    0xffffffffffffffa0(%rbp),%r13
    d524:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
    d52a:	48 89 d9             	mov    %rbx,%rcx
    d52d:	4c 89 e2             	mov    %r12,%rdx
    d530:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d533: R_X86_64_32S	.rodata.str1.1+0x1d03
    d537:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    d53e:	4c 89 ee             	mov    %r13,%rsi
    d541:	e8 00 00 00 00       	callq  d546 <pci_release_selected_regions+0xa6d>
			d542: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d546:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    d54a:	48 85 c0             	test   %rax,%rax
    d54d:	0f 84 3e 09 00 00    	je     de91 <pci_release_selected_regions+0x13b8>
    d553:	4c 8d 40 38          	lea    0x38(%rax),%r8
    d557:	4c 89 e2             	mov    %r12,%rdx
    d55a:	b9 04 00 00 00       	mov    $0x4,%ecx
    d55f:	4c 89 ee             	mov    %r13,%rsi
    d562:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d565: R_X86_64_32S	.rodata.str1.1+0x1d03
    d569:	45 31 f6             	xor    %r14d,%r14d
    d56c:	e8 00 00 00 00       	callq  d571 <pci_release_selected_regions+0xa98>
			d56d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d571:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    d575:	4c 89 e2             	mov    %r12,%rdx
    d578:	b9 04 00 00 00       	mov    $0x4,%ecx
    d57d:	4c 89 ee             	mov    %r13,%rsi
    d580:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d583: R_X86_64_32S	.rodata.str1.1+0x1d03
    d587:	49 83 c0 7c          	add    $0x7c,%r8
    d58b:	e8 00 00 00 00       	callq  d590 <pci_release_selected_regions+0xab7>
			d58c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d590:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    d594:	4c 89 e2             	mov    %r12,%rdx
    d597:	b9 04 00 00 00       	mov    $0x4,%ecx
    d59c:	4c 89 ee             	mov    %r13,%rsi
    d59f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d5a2: R_X86_64_32S	.rodata.str1.1+0x1d03
    d5a6:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
    d5ad:	e8 00 00 00 00       	callq  d5b2 <pci_release_selected_regions+0xad9>
			d5ae: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d5b2:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    d5b6:	4c 89 e2             	mov    %r12,%rdx
    d5b9:	b9 02 00 00 00       	mov    $0x2,%ecx
    d5be:	4c 89 ee             	mov    %r13,%rsi
    d5c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d5c4: R_X86_64_32S	.rodata.str1.1+0x1d03
    d5c8:	49 83 c0 3e          	add    $0x3e,%r8
    d5cc:	e8 00 00 00 00       	callq  d5d1 <pci_release_selected_regions+0xaf8>
			d5cd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d5d1:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
    d5d5:	ba 78 02 00 00       	mov    $0x278,%edx
    d5da:	be 80 00 00 00       	mov    $0x80,%esi
    d5df:	e8 00 00 00 00       	callq  d5e4 <pci_release_selected_regions+0xb0b>
			d5e0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    d5e4:	4c 8b 65 b0          	mov    0xffffffffffffffb0(%rbp),%r12
    d5e8:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
    d5ec:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
    d5f3:	00 
    d5f4:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
    d5f8:	49 89 d8             	mov    %rbx,%r8
    d5fb:	b9 01 00 00 00       	mov    $0x1,%ecx
    d600:	4c 89 ee             	mov    %r13,%rsi
    d603:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d606: R_X86_64_32S	.rodata.str1.1+0x1d03
    d60a:	49 ff c6             	inc    %r14
    d60d:	4c 89 fa             	mov    %r15,%rdx
    d610:	48 ff c3             	inc    %rbx
    d613:	e8 00 00 00 00       	callq  d618 <pci_release_selected_regions+0xb3f>
			d614: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d618:	49 83 fe 14          	cmp    $0x14,%r14
    d61c:	75 d6                	jne    d5f4 <pci_release_selected_regions+0xb1b>
    d61e:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
    d622:	b9 04 00 00 00       	mov    $0x4,%ecx
    d627:	4c 89 fa             	mov    %r15,%rdx
    d62a:	4c 89 ee             	mov    %r13,%rsi
    d62d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d630: R_X86_64_32S	.rodata.str1.1+0x1d03
    d634:	49 89 d8             	mov    %rbx,%r8
    d637:	e8 00 00 00 00       	callq  d63c <pci_release_selected_regions+0xb63>
			d638: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d63c:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
    d63f:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    d646:	00 
    d647:	49 89 d8             	mov    %rbx,%r8
    d64a:	b9 04 00 00 00       	mov    $0x4,%ecx
    d64f:	4c 89 ee             	mov    %r13,%rsi
    d652:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d655: R_X86_64_32S	.rodata.str1.1+0x1d03
    d659:	83 e2 01             	and    $0x1,%edx
    d65c:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
    d65f:	09 d0                	or     %edx,%eax
    d661:	4c 89 fa             	mov    %r15,%rdx
    d664:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
    d66b:	00 
    d66c:	e8 00 00 00 00       	callq  d671 <pci_release_selected_regions+0xb98>
			d66d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d671:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
    d674:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
    d67b:	00 
    d67c:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
    d683:	00 
    d684:	41 b8 78 00 00 00    	mov    $0x78,%r8d
    d68a:	4c 89 ee             	mov    %r13,%rsi
    d68d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d690: R_X86_64_32S	.rodata.str1.1+0x1d03
    d694:	83 e2 01             	and    $0x1,%edx
    d697:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
    d69a:	01 d2                	add    %edx,%edx
    d69c:	09 d0                	or     %edx,%eax
    d69e:	4c 89 fa             	mov    %r15,%rdx
    d6a1:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
    d6a8:	00 
    d6a9:	e8 00 00 00 00       	callq  d6ae <pci_release_selected_regions+0xbd5>
			d6aa: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d6ae:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
    d6b5:	00 
    d6b6:	48 85 c0             	test   %rax,%rax
    d6b9:	0f 84 d0 00 00 00    	je     d78f <pci_release_selected_regions+0xcb6>
    d6bf:	48 8d 48 18          	lea    0x18(%rax),%rcx
    d6c3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d6c9:	4c 89 fa             	mov    %r15,%rdx
    d6cc:	4c 89 ee             	mov    %r13,%rsi
    d6cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d6d2: R_X86_64_32S	.rodata.str1.1+0x1d03
    d6d6:	e8 00 00 00 00       	callq  d6db <pci_release_selected_regions+0xc02>
			d6d7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d6db:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    d6e2:	00 
    d6e3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d6e9:	4c 89 fa             	mov    %r15,%rdx
    d6ec:	4c 89 ee             	mov    %r13,%rsi
    d6ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d6f2: R_X86_64_32S	.rodata.str1.1+0x1d03
    d6f6:	48 83 c1 20          	add    $0x20,%rcx
    d6fa:	e8 00 00 00 00       	callq  d6ff <pci_release_selected_regions+0xc26>
			d6fb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d6ff:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    d706:	00 
    d707:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d70d:	4c 89 fa             	mov    %r15,%rdx
    d710:	4c 89 ee             	mov    %r13,%rsi
    d713:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d716: R_X86_64_32S	.rodata.str1.1+0x1d03
    d71a:	48 83 c1 30          	add    $0x30,%rcx
    d71e:	e8 00 00 00 00       	callq  d723 <pci_release_selected_regions+0xc4a>
			d71f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d723:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    d72a:	00 
    d72b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d731:	4c 89 fa             	mov    %r15,%rdx
    d734:	4c 89 ee             	mov    %r13,%rsi
    d737:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d73a: R_X86_64_32S	.rodata.str1.1+0x1d03
    d73e:	48 83 c1 10          	add    $0x10,%rcx
    d742:	e8 00 00 00 00       	callq  d747 <pci_release_selected_regions+0xc6e>
			d743: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d747:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    d74e:	00 
    d74f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d755:	4c 89 fa             	mov    %r15,%rdx
    d758:	4c 89 ee             	mov    %r13,%rsi
    d75b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d75e: R_X86_64_32S	.rodata.str1.1+0x1d03
    d762:	48 83 c1 28          	add    $0x28,%rcx
    d766:	e8 00 00 00 00       	callq  d76b <pci_release_selected_regions+0xc92>
			d767: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d76b:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
    d772:	00 
    d773:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d779:	4c 89 fa             	mov    %r15,%rdx
    d77c:	4c 89 ee             	mov    %r13,%rsi
    d77f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d782: R_X86_64_32S	.rodata.str1.1+0x1d03
    d786:	48 83 c1 08          	add    $0x8,%rcx
    d78a:	e8 00 00 00 00       	callq  d78f <pci_release_selected_regions+0xcb6>
			d78b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d78f:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
    d796:	00 
    d797:	b9 08 00 00 00       	mov    $0x8,%ecx
    d79c:	4c 89 fa             	mov    %r15,%rdx
    d79f:	4c 89 ee             	mov    %r13,%rsi
    d7a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d7a5: R_X86_64_32S	.rodata.str1.1+0x1d03
    d7a9:	e8 00 00 00 00       	callq  d7ae <pci_release_selected_regions+0xcd5>
			d7aa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d7ae:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
    d7b5:	00 
    d7b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d7b9: R_X86_64_32S	.rodata.str1.1+0x1d03
    d7bd:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    d7c3:	4c 89 fa             	mov    %r15,%rdx
    d7c6:	4c 89 ee             	mov    %r13,%rsi
    d7c9:	e8 00 00 00 00       	callq  d7ce <pci_release_selected_regions+0xcf5>
			d7ca: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d7ce:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    d7d5:	00 
    d7d6:	48 85 ff             	test   %rdi,%rdi
    d7d9:	0f 84 08 06 00 00    	je     dde7 <pci_release_selected_regions+0x130e>
    d7df:	ba 08 00 00 00       	mov    $0x8,%edx
    d7e4:	be 10 03 00 00       	mov    $0x310,%esi
    d7e9:	31 db                	xor    %ebx,%ebx
    d7eb:	e8 00 00 00 00       	callq  d7f0 <pci_release_selected_regions+0xd17>
			d7ec: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    d7f0:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d7f7:	00 
    d7f8:	b9 08 00 00 00       	mov    $0x8,%ecx
    d7fd:	4c 89 fa             	mov    %r15,%rdx
    d800:	4c 89 ee             	mov    %r13,%rsi
    d803:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d806: R_X86_64_32S	.rodata.str1.1+0x1d03
    d80a:	49 81 c0 10 03 00 00 	add    $0x310,%r8
    d811:	e8 00 00 00 00       	callq  d816 <pci_release_selected_regions+0xd3d>
			d812: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d816:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d81d:	00 
    d81e:	b9 02 00 00 00       	mov    $0x2,%ecx
    d823:	4c 89 fa             	mov    %r15,%rdx
    d826:	4c 89 ee             	mov    %r13,%rsi
    d829:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d82c: R_X86_64_32S	.rodata.str1.1+0x1d03
    d830:	49 81 c0 70 01 00 00 	add    $0x170,%r8
    d837:	e8 00 00 00 00       	callq  d83c <pci_release_selected_regions+0xd63>
			d838: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d83c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d843:	00 
    d844:	b9 08 00 00 00       	mov    $0x8,%ecx
    d849:	4c 89 fa             	mov    %r15,%rdx
    d84c:	4c 89 ee             	mov    %r13,%rsi
    d84f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d852: R_X86_64_32S	.rodata.str1.1+0x1d03
    d856:	49 81 c0 48 03 00 00 	add    $0x348,%r8
    d85d:	e8 00 00 00 00       	callq  d862 <pci_release_selected_regions+0xd89>
			d85e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d862:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d869:	00 
    d86a:	b9 04 00 00 00       	mov    $0x4,%ecx
    d86f:	4c 89 fa             	mov    %r15,%rdx
    d872:	4c 89 ee             	mov    %r13,%rsi
    d875:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d878: R_X86_64_32S	.rodata.str1.1+0x1d03
    d87c:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
    d883:	e8 00 00 00 00       	callq  d888 <pci_release_selected_regions+0xdaf>
			d884: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d888:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d88f:	00 
    d890:	b9 04 00 00 00       	mov    $0x4,%ecx
    d895:	4c 89 fa             	mov    %r15,%rdx
    d898:	4c 89 ee             	mov    %r13,%rsi
    d89b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d89e: R_X86_64_32S	.rodata.str1.1+0x1d03
    d8a2:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
    d8a9:	e8 00 00 00 00       	callq  d8ae <pci_release_selected_regions+0xdd5>
			d8aa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d8ae:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d8b5:	00 
    d8b6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d8bc:	4c 89 fa             	mov    %r15,%rdx
    d8bf:	4c 89 ee             	mov    %r13,%rsi
    d8c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d8c5: R_X86_64_32S	.rodata.str1.1+0x1d03
    d8c9:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    d8d0:	e8 00 00 00 00       	callq  d8d5 <pci_release_selected_regions+0xdfc>
			d8d1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d8d5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d8dc:	00 
    d8dd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d8e3:	4c 89 fa             	mov    %r15,%rdx
    d8e6:	4c 89 ee             	mov    %r13,%rsi
    d8e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d8ec: R_X86_64_32S	.rodata.str1.1+0x1d03
    d8f0:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    d8f7:	e8 00 00 00 00       	callq  d8fc <pci_release_selected_regions+0xe23>
			d8f8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d8fc:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    d903:	00 
    d904:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d90a:	4c 89 fa             	mov    %r15,%rdx
    d90d:	4c 89 ee             	mov    %r13,%rsi
    d910:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d913: R_X86_64_32S	.rodata.str1.1+0x1d03
    d917:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    d91e:	e8 00 00 00 00       	callq  d923 <pci_release_selected_regions+0xe4a>
			d91f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    d923:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d92a:	00 
    d92b:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    d92f:	b9 01 00 00 00       	mov    $0x1,%ecx
    d934:	4c 89 ee             	mov    %r13,%rsi
    d937:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d93a: R_X86_64_32S	.rodata.str1.1+0x1d03
    d93e:	49 81 c0 60 02 00 00 	add    $0x260,%r8
    d945:	49 01 d8             	add    %rbx,%r8
    d948:	48 ff c3             	inc    %rbx
    d94b:	e8 00 00 00 00       	callq  d950 <pci_release_selected_regions+0xe77>
			d94c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d950:	48 83 fb 20          	cmp    $0x20,%rbx
    d954:	75 cd                	jne    d923 <pci_release_selected_regions+0xe4a>
    d956:	30 db                	xor    %bl,%bl
    d958:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d95f:	00 
    d960:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    d964:	b9 01 00 00 00       	mov    $0x1,%ecx
    d969:	4c 89 ee             	mov    %r13,%rsi
    d96c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d96f: R_X86_64_32S	.rodata.str1.1+0x1d03
    d973:	4c 89 f2             	mov    %r14,%rdx
    d976:	49 81 c0 80 01 00 00 	add    $0x180,%r8
    d97d:	49 01 d8             	add    %rbx,%r8
    d980:	48 ff c3             	inc    %rbx
    d983:	e8 00 00 00 00       	callq  d988 <pci_release_selected_regions+0xeaf>
			d984: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d988:	48 83 fb 20          	cmp    $0x20,%rbx
    d98c:	75 ca                	jne    d958 <pci_release_selected_regions+0xe7f>
    d98e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d995:	00 
    d996:	b9 02 00 00 00       	mov    $0x2,%ecx
    d99b:	4c 89 f2             	mov    %r14,%rdx
    d99e:	4c 89 ee             	mov    %r13,%rsi
    d9a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d9a4: R_X86_64_32S	.rodata.str1.1+0x1d03
    d9a8:	30 db                	xor    %bl,%bl
    d9aa:	49 81 c0 72 01 00 00 	add    $0x172,%r8
    d9b1:	e8 00 00 00 00       	callq  d9b6 <pci_release_selected_regions+0xedd>
			d9b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d9b6:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    d9bd:	00 
    d9be:	ba 08 00 00 00       	mov    $0x8,%edx
    d9c3:	be 48 00 00 00       	mov    $0x48,%esi
    d9c8:	e8 00 00 00 00       	callq  d9cd <pci_release_selected_regions+0xef4>
			d9c9: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    d9cd:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d9d4:	00 
    d9d5:	b9 08 00 00 00       	mov    $0x8,%ecx
    d9da:	4c 89 f2             	mov    %r14,%rdx
    d9dd:	4c 89 ee             	mov    %r13,%rsi
    d9e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d9e3: R_X86_64_32S	.rodata.str1.1+0x1d03
    d9e7:	49 83 c0 48          	add    $0x48,%r8
    d9eb:	e8 00 00 00 00       	callq  d9f0 <pci_release_selected_regions+0xf17>
			d9ec: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    d9f0:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    d9f7:	00 
    d9f8:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    d9fc:	b9 01 00 00 00       	mov    $0x1,%ecx
    da01:	4c 89 ee             	mov    %r13,%rsi
    da04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			da07: R_X86_64_32S	.rodata.str1.1+0x1d03
    da0b:	49 81 c0 40 02 00 00 	add    $0x240,%r8
    da12:	49 01 d8             	add    %rbx,%r8
    da15:	48 ff c3             	inc    %rbx
    da18:	e8 00 00 00 00       	callq  da1d <pci_release_selected_regions+0xf44>
			da19: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    da1d:	48 83 fb 20          	cmp    $0x20,%rbx
    da21:	75 cd                	jne    d9f0 <pci_release_selected_regions+0xf17>
    da23:	30 db                	xor    %bl,%bl
    da25:	49 89 d8             	mov    %rbx,%r8
    da28:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
    da2f:	00 
    da30:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    da34:	b9 01 00 00 00       	mov    $0x1,%ecx
    da39:	4c 89 ee             	mov    %r13,%rsi
    da3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			da3f: R_X86_64_32S	.rodata.str1.1+0x1d03
    da43:	4c 89 f2             	mov    %r14,%rdx
    da46:	48 ff c3             	inc    %rbx
    da49:	e8 00 00 00 00       	callq  da4e <pci_release_selected_regions+0xf75>
			da4a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    da4e:	48 83 fb 10          	cmp    $0x10,%rbx
    da52:	75 d1                	jne    da25 <pci_release_selected_regions+0xf4c>
    da54:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    da5b:	00 
    da5c:	ba 10 00 00 00       	mov    $0x10,%edx
    da61:	be 18 04 00 00       	mov    $0x418,%esi
    da66:	e8 00 00 00 00       	callq  da6b <pci_release_selected_regions+0xf92>
			da67: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    da6b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    da72:	00 
    da73:	b9 01 00 00 00       	mov    $0x1,%ecx
    da78:	4c 89 f2             	mov    %r14,%rdx
    da7b:	4c 89 ee             	mov    %r13,%rsi
    da7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			da81: R_X86_64_32S	.rodata.str1.1+0x1d03
    da85:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
    da8c:	e8 00 00 00 00       	callq  da91 <pci_release_selected_regions+0xfb8>
			da8d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    da91:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    da98:	00 
    da99:	b9 04 00 00 00       	mov    $0x4,%ecx
    da9e:	4c 89 f2             	mov    %r14,%rdx
    daa1:	4c 89 ee             	mov    %r13,%rsi
    daa4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			daa7: R_X86_64_32S	.rodata.str1.1+0x1d03
    daab:	49 81 c0 30 04 00 00 	add    $0x430,%r8
    dab2:	e8 00 00 00 00       	callq  dab7 <pci_release_selected_regions+0xfde>
			dab3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    dab7:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    dabe:	00 
    dabf:	b9 08 00 00 00       	mov    $0x8,%ecx
    dac4:	4c 89 f2             	mov    %r14,%rdx
    dac7:	4c 89 ee             	mov    %r13,%rsi
    daca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dacd: R_X86_64_32S	.rodata.str1.1+0x1d03
    dad1:	49 83 c0 70          	add    $0x70,%r8
    dad5:	e8 00 00 00 00       	callq  dada <pci_release_selected_regions+0x1001>
			dad6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    dada:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
    dae1:	00 
    dae2:	ba 10 00 00 00       	mov    $0x10,%edx
    dae7:	be 10 00 00 00       	mov    $0x10,%esi
    daec:	e8 00 00 00 00       	callq  daf1 <pci_release_selected_regions+0x1018>
			daed: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    daf1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    daf8:	00 
    daf9:	b9 04 00 00 00       	mov    $0x4,%ecx
    dafe:	4c 89 f2             	mov    %r14,%rdx
    db01:	4c 89 ee             	mov    %r13,%rsi
    db04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			db07: R_X86_64_32S	.rodata.str1.1+0x1d03
    db0b:	49 81 c0 50 03 00 00 	add    $0x350,%r8
    db12:	e8 00 00 00 00       	callq  db17 <pci_release_selected_regions+0x103e>
			db13: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    db17:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    db1e:	00 
    db1f:	b9 08 00 00 00       	mov    $0x8,%ecx
    db24:	4c 89 f2             	mov    %r14,%rdx
    db27:	4c 89 ee             	mov    %r13,%rsi
    db2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			db2d: R_X86_64_32S	.rodata.str1.1+0x1d03
    db31:	49 81 c0 00 07 00 00 	add    $0x700,%r8
    db38:	e8 00 00 00 00       	callq  db3d <pci_release_selected_regions+0x1064>
			db39: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    db3d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
    db44:	00 
    db45:	b9 04 00 00 00       	mov    $0x4,%ecx
    db4a:	4c 89 f2             	mov    %r14,%rdx
    db4d:	4c 89 ee             	mov    %r13,%rsi
    db50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			db53: R_X86_64_32S	.rodata.str1.1+0x1d03
    db57:	49 81 c0 60 01 00 00 	add    $0x160,%r8
    db5e:	e8 00 00 00 00       	callq  db63 <pci_release_selected_regions+0x108a>
			db5f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    db63:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    db6a:	00 
    db6b:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    db71:	4c 89 f2             	mov    %r14,%rdx
    db74:	4c 89 ee             	mov    %r13,%rsi
    db77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			db7a: R_X86_64_32S	.rodata.str1.1+0x1d03
    db7e:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    db85:	e8 00 00 00 00       	callq  db8a <pci_release_selected_regions+0x10b1>
			db86: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    db8a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    db91:	00 
    db92:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    db99:	00 
    db9a:	74 63                	je     dbff <pci_release_selected_regions+0x1126>
    db9c:	30 db                	xor    %bl,%bl
    db9e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dba5:	00 
    dba6:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    dbaa:	b9 01 00 00 00       	mov    $0x1,%ecx
    dbaf:	4c 89 ee             	mov    %r13,%rsi
    dbb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dbb5: R_X86_64_32S	.rodata.str1.1+0x1d03
    dbb9:	4c 89 f2             	mov    %r14,%rdx
    dbbc:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
    dbc3:	49 83 c0 08          	add    $0x8,%r8
    dbc7:	49 01 d8             	add    %rbx,%r8
    dbca:	48 ff c3             	inc    %rbx
    dbcd:	e8 00 00 00 00       	callq  dbd2 <pci_release_selected_regions+0x10f9>
			dbce: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    dbd2:	48 83 fb 20          	cmp    $0x20,%rbx
    dbd6:	75 c6                	jne    db9e <pci_release_selected_regions+0x10c5>
    dbd8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dbdf:	00 
    dbe0:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    dbe6:	4c 89 f2             	mov    %r14,%rdx
    dbe9:	4c 89 ee             	mov    %r13,%rsi
    dbec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dbef: R_X86_64_32S	.rodata.str1.1+0x1d03
    dbf3:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    dbfa:	e8 00 00 00 00       	callq  dbff <pci_release_selected_regions+0x1126>
			dbfb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dbff:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    dc06:	00 
    dc07:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    dc0b:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
    dc11:	4c 89 ee             	mov    %r13,%rsi
    dc14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dc17: R_X86_64_32S	.rodata.str1.1+0x1d03
    dc1b:	48 89 da             	mov    %rbx,%rdx
    dc1e:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    dc25:	e8 00 00 00 00       	callq  dc2a <pci_release_selected_regions+0x1151>
			dc26: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dc2a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    dc31:	00 
    dc32:	41 b8 68 01 00 00    	mov    $0x168,%r8d
    dc38:	48 89 da             	mov    %rbx,%rdx
    dc3b:	4c 89 ee             	mov    %r13,%rsi
    dc3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dc41: R_X86_64_32S	.rodata.str1.1+0x1d03
    dc45:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    dc4c:	e8 00 00 00 00       	callq  dc51 <pci_release_selected_regions+0x1178>
			dc4d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dc51:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dc58:	00 
    dc59:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    dc60:	48 85 c0             	test   %rax,%rax
    dc63:	74 47                	je     dcac <pci_release_selected_regions+0x11d3>
    dc65:	48 8d 48 60          	lea    0x60(%rax),%rcx
    dc69:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    dc6f:	48 89 da             	mov    %rbx,%rdx
    dc72:	4c 89 ee             	mov    %r13,%rsi
    dc75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dc78: R_X86_64_32S	.rodata.str1.1+0x1d03
    dc7c:	e8 00 00 00 00       	callq  dc81 <pci_release_selected_regions+0x11a8>
			dc7d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dc81:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dc88:	00 
    dc89:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    dc8f:	48 89 da             	mov    %rbx,%rdx
    dc92:	4c 89 ee             	mov    %r13,%rsi
    dc95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dc98: R_X86_64_32S	.rodata.str1.1+0x1d03
    dc9c:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    dca3:	48 83 c1 58          	add    $0x58,%rcx
    dca7:	e8 00 00 00 00       	callq  dcac <pci_release_selected_regions+0x11d3>
			dca8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dcac:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    dcb3:	00 
    dcb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dcb7: R_X86_64_32S	.rodata.str1.1+0x1d03
    dcbb:	41 b8 80 00 00 00    	mov    $0x80,%r8d
    dcc1:	48 89 da             	mov    %rbx,%rdx
    dcc4:	4c 89 ee             	mov    %r13,%rsi
    dcc7:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    dcce:	e8 00 00 00 00       	callq  dcd3 <pci_release_selected_regions+0x11fa>
			dccf: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dcd3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dcda:	00 
    dcdb:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
    dce2:	48 85 ff             	test   %rdi,%rdi
    dce5:	74 64                	je     dd4b <pci_release_selected_regions+0x1272>
    dce7:	ba 08 00 00 00       	mov    $0x8,%edx
    dcec:	be 10 00 00 00       	mov    $0x10,%esi
    dcf1:	e8 00 00 00 00       	callq  dcf6 <pci_release_selected_regions+0x121d>
			dcf2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    dcf6:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dcfd:	00 
    dcfe:	b9 08 00 00 00       	mov    $0x8,%ecx
    dd03:	48 89 da             	mov    %rbx,%rdx
    dd06:	4c 89 ee             	mov    %r13,%rsi
    dd09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dd0c: R_X86_64_32S	.rodata.str1.1+0x1d03
    dd10:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
    dd17:	49 83 c0 10          	add    $0x10,%r8
    dd1b:	e8 00 00 00 00       	callq  dd20 <pci_release_selected_regions+0x1247>
			dd1c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    dd20:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dd27:	00 
    dd28:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
    dd2e:	48 89 da             	mov    %rbx,%rdx
    dd31:	4c 89 ee             	mov    %r13,%rsi
    dd34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dd37: R_X86_64_32S	.rodata.str1.1+0x1d03
    dd3b:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    dd42:	48 83 c1 08          	add    $0x8,%rcx
    dd46:	e8 00 00 00 00       	callq  dd4b <pci_release_selected_regions+0x1272>
			dd47: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dd4b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
    dd52:	00 
    dd53:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    dd59:	48 89 da             	mov    %rbx,%rdx
    dd5c:	4c 89 ee             	mov    %r13,%rsi
    dd5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dd62: R_X86_64_32S	.rodata.str1.1+0x1d03
    dd66:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    dd6d:	e8 00 00 00 00       	callq  dd72 <pci_release_selected_regions+0x1299>
			dd6e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dd72:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dd79:	00 
    dd7a:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    dd81:	00 
    dd82:	74 63                	je     dde7 <pci_release_selected_regions+0x130e>
    dd84:	31 db                	xor    %ebx,%ebx
    dd86:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    dd8d:	00 
    dd8e:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
    dd92:	b9 01 00 00 00       	mov    $0x1,%ecx
    dd97:	4c 89 ee             	mov    %r13,%rsi
    dd9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dd9d: R_X86_64_32S	.rodata.str1.1+0x1d03
    dda1:	4c 89 f2             	mov    %r14,%rdx
    dda4:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
    ddab:	49 83 c0 08          	add    $0x8,%r8
    ddaf:	49 01 d8             	add    %rbx,%r8
    ddb2:	48 ff c3             	inc    %rbx
    ddb5:	e8 00 00 00 00       	callq  ddba <pci_release_selected_regions+0x12e1>
			ddb6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ddba:	48 83 fb 20          	cmp    $0x20,%rbx
    ddbe:	75 c6                	jne    dd86 <pci_release_selected_regions+0x12ad>
    ddc0:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
    ddc7:	00 
    ddc8:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    ddce:	4c 89 f2             	mov    %r14,%rdx
    ddd1:	4c 89 ee             	mov    %r13,%rsi
    ddd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ddd7: R_X86_64_32S	.rodata.str1.1+0x1d03
    dddb:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    dde2:	e8 00 00 00 00       	callq  dde7 <pci_release_selected_regions+0x130e>
			dde3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    dde7:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    ddeb:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
    ddf2:	00 
    ddf3:	41 b8 78 02 00 00    	mov    $0x278,%r8d
    ddf9:	4c 89 ee             	mov    %r13,%rsi
    ddfc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ddff: R_X86_64_32S	.rodata.str1.1+0x1d03
    de03:	48 89 da             	mov    %rbx,%rdx
    de06:	e8 00 00 00 00       	callq  de0b <pci_release_selected_regions+0x1332>
			de07: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    de0b:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
    de12:	00 
    de13:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    de19:	48 89 da             	mov    %rbx,%rdx
    de1c:	4c 89 ee             	mov    %r13,%rsi
    de1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			de22: R_X86_64_32S	.rodata.str1.1+0x1d03
    de26:	e8 00 00 00 00       	callq  de2b <pci_release_selected_regions+0x1352>
			de27: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    de2b:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
    de32:	00 
    de33:	48 85 c0             	test   %rax,%rax
    de36:	74 1a                	je     de52 <pci_release_selected_regions+0x1379>
    de38:	49 89 c0             	mov    %rax,%r8
    de3b:	b9 08 00 00 00       	mov    $0x8,%ecx
    de40:	48 89 da             	mov    %rbx,%rdx
    de43:	4c 89 ee             	mov    %r13,%rsi
    de46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			de49: R_X86_64_32S	.rodata.str1.1+0x1d03
    de4d:	e8 00 00 00 00       	callq  de52 <pci_release_selected_regions+0x1379>
			de4e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    de52:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
    de56:	b9 02 00 00 00       	mov    $0x2,%ecx
    de5b:	48 89 da             	mov    %rbx,%rdx
    de5e:	4c 89 ee             	mov    %r13,%rsi
    de61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			de64: R_X86_64_32S	.rodata.str1.1+0x1d03
    de68:	49 83 c0 3c          	add    $0x3c,%r8
    de6c:	e8 00 00 00 00       	callq  de71 <pci_release_selected_regions+0x1398>
			de6d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    de71:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
    de75:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
    de7b:	48 89 da             	mov    %rbx,%rdx
    de7e:	4c 89 ee             	mov    %r13,%rsi
    de81:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			de84: R_X86_64_32S	.rodata.str1.1+0x1d03
    de88:	48 83 c1 10          	add    $0x10,%rcx
    de8c:	e8 00 00 00 00       	callq  de91 <pci_release_selected_regions+0x13b8>
			de8d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    de91:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    de95:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
    de99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			de9c: R_X86_64_32S	.rodata.str1.1+0x1d03
    dea0:	b9 04 00 00 00       	mov    $0x4,%ecx
    dea5:	4c 89 ee             	mov    %r13,%rsi
    dea8:	e8 00 00 00 00       	callq  dead <pci_release_selected_regions+0x13d4>
			dea9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    dead:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    deb1:	48 85 ff             	test   %rdi,%rdi
    deb4:	74 05                	je     debb <pci_release_selected_regions+0x13e2>
    deb6:	e8 00 00 00 00       	callq  debb <pci_release_selected_regions+0x13e2>
			deb7: R_X86_64_PC32	kfree+0xfffffffffffffffc
    debb:	48 83 c4 58          	add    $0x58,%rsp
    debf:	5b                   	pop    %rbx
    dec0:	41 5c                	pop    %r12
    dec2:	41 5d                	pop    %r13
    dec4:	41 5e                	pop    %r14
    dec6:	41 5f                	pop    %r15
    dec8:	c9                   	leaveq 
    dec9:	c3                   	retq   

000000000000deca <netif_carrier_on>:
    deca:	55                   	push   %rbp
    decb:	48 89 e5             	mov    %rsp,%rbp
    dece:	41 56                	push   %r14
    ded0:	49 89 fe             	mov    %rdi,%r14
    ded3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ded6: R_X86_64_32S	.rodata.str1.1+0x1d76
    deda:	41 55                	push   %r13
    dedc:	41 54                	push   %r12
    dede:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    dee2:	53                   	push   %rbx
    dee3:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
    dee7:	48 83 ec 30          	sub    $0x30,%rsp
    deeb:	e8 00 00 00 00       	callq  def0 <netif_carrier_on+0x26>
			deec: R_X86_64_PC32	record_function+0xfffffffffffffffc
    def0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			def3: R_X86_64_32S	.rodata.str1.1+0x1d87
    def7:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    defe:	00 
    deff:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
    df06:	00 
    df07:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
    df0e:	4c 89 75 d0          	mov    %r14,0xffffffffffffffd0(%rbp)
    df12:	e8 00 00 00 00       	callq  df17 <netif_carrier_on+0x4d>
			df13: R_X86_64_PC32	record_function+0xfffffffffffffffc
    df17:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
    df1b:	48 89 da             	mov    %rbx,%rdx
    df1e:	4c 89 e6             	mov    %r12,%rsi
    df21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			df24: R_X86_64_32S	.rodata.str1.1+0x1d76
    df28:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
    df2f:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
    df36:	00 
    df37:	e8 00 00 00 00       	callq  df3c <netif_carrier_on+0x72>
			df38: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    df3c:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    df40:	48 85 c0             	test   %rax,%rax
    df43:	0f 84 2b 07 00 00    	je     e674 <netif_carrier_on+0x7aa>
    df49:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
    df50:	48 89 da             	mov    %rbx,%rdx
    df53:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    df59:	4c 89 e6             	mov    %r12,%rsi
    df5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			df5f: R_X86_64_32S	.rodata.str1.1+0x1d76
    df63:	e8 00 00 00 00       	callq  df68 <netif_carrier_on+0x9e>
			df64: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    df68:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    df6c:	48 89 da             	mov    %rbx,%rdx
    df6f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    df75:	4c 89 e6             	mov    %r12,%rsi
    df78:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			df7b: R_X86_64_32S	.rodata.str1.1+0x1d76
    df7f:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
    df86:	e8 00 00 00 00       	callq  df8b <netif_carrier_on+0xc1>
			df87: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    df8b:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    df8f:	48 89 da             	mov    %rbx,%rdx
    df92:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    df98:	4c 89 e6             	mov    %r12,%rsi
    df9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			df9e: R_X86_64_32S	.rodata.str1.1+0x1d76
    dfa2:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
    dfa9:	e8 00 00 00 00       	callq  dfae <netif_carrier_on+0xe4>
			dfaa: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    dfae:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    dfb2:	48 89 da             	mov    %rbx,%rdx
    dfb5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    dfbb:	4c 89 e6             	mov    %r12,%rsi
    dfbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dfc1: R_X86_64_32S	.rodata.str1.1+0x1d76
    dfc5:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
    dfcc:	e8 00 00 00 00       	callq  dfd1 <netif_carrier_on+0x107>
			dfcd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    dfd1:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    dfd5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    dfdb:	48 89 da             	mov    %rbx,%rdx
    dfde:	4c 89 e6             	mov    %r12,%rsi
    dfe1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dfe4: R_X86_64_32S	.rodata.str1.1+0x1d76
    dfe8:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
    dfef:	e8 00 00 00 00       	callq  dff4 <netif_carrier_on+0x12a>
			dff0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    dff4:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    dff8:	48 89 da             	mov    %rbx,%rdx
    dffb:	4c 89 e6             	mov    %r12,%rsi
    dffe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e001: R_X86_64_32S	.rodata.str1.1+0x1d76
    e005:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    e00c:	e8 00 00 00 00       	callq  e011 <netif_carrier_on+0x147>
			e00d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e011:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e015:	48 89 da             	mov    %rbx,%rdx
    e018:	4c 89 e6             	mov    %r12,%rsi
    e01b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e01e: R_X86_64_32S	.rodata.str1.1+0x1d76
    e022:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    e029:	e8 00 00 00 00       	callq  e02e <netif_carrier_on+0x164>
			e02a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e02e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e032:	48 89 da             	mov    %rbx,%rdx
    e035:	4c 89 e6             	mov    %r12,%rsi
    e038:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e03b: R_X86_64_32S	.rodata.str1.1+0x1d76
    e03f:	31 db                	xor    %ebx,%ebx
    e041:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    e048:	e8 00 00 00 00       	callq  e04d <netif_carrier_on+0x183>
			e049: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e04d:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e051:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
    e055:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
    e059:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e05f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e062: R_X86_64_32S	.rodata.str1.1+0x1d76
    e066:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
    e06d:	48 01 d9             	add    %rbx,%rcx
    e070:	48 ff c3             	inc    %rbx
    e073:	e8 00 00 00 00       	callq  e078 <netif_carrier_on+0x1ae>
			e074: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e078:	48 83 fb 20          	cmp    $0x20,%rbx
    e07c:	75 cf                	jne    e04d <netif_carrier_on+0x183>
    e07e:	30 db                	xor    %bl,%bl
    e080:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e084:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    e088:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    e08c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e092:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e095: R_X86_64_32S	.rodata.str1.1+0x1d76
    e099:	4c 89 e2             	mov    %r12,%rdx
    e09c:	4c 89 ee             	mov    %r13,%rsi
    e09f:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
    e0a6:	48 01 d9             	add    %rbx,%rcx
    e0a9:	48 ff c3             	inc    %rbx
    e0ac:	e8 00 00 00 00       	callq  e0b1 <netif_carrier_on+0x1e7>
			e0ad: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e0b1:	48 83 fb 20          	cmp    $0x20,%rbx
    e0b5:	75 c9                	jne    e080 <netif_carrier_on+0x1b6>
    e0b7:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e0bb:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    e0c1:	4c 89 e2             	mov    %r12,%rdx
    e0c4:	4c 89 ee             	mov    %r13,%rsi
    e0c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e0ca: R_X86_64_32S	.rodata.str1.1+0x1d76
    e0ce:	30 db                	xor    %bl,%bl
    e0d0:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
    e0d7:	e8 00 00 00 00       	callq  e0dc <netif_carrier_on+0x212>
			e0d8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e0dc:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e0e0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    e0e6:	4c 89 e2             	mov    %r12,%rdx
    e0e9:	4c 89 ee             	mov    %r13,%rsi
    e0ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e0ef: R_X86_64_32S	.rodata.str1.1+0x1d76
    e0f3:	48 83 c1 48          	add    $0x48,%rcx
    e0f7:	e8 00 00 00 00       	callq  e0fc <netif_carrier_on+0x232>
			e0f8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e0fc:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e100:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
    e104:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
    e108:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e10e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e111: R_X86_64_32S	.rodata.str1.1+0x1d76
    e115:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
    e11c:	48 01 d9             	add    %rbx,%rcx
    e11f:	48 ff c3             	inc    %rbx
    e122:	e8 00 00 00 00       	callq  e127 <netif_carrier_on+0x25d>
			e123: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e127:	48 83 fb 20          	cmp    $0x20,%rbx
    e12b:	75 cf                	jne    e0fc <netif_carrier_on+0x232>
    e12d:	30 db                	xor    %bl,%bl
    e12f:	48 89 d9             	mov    %rbx,%rcx
    e132:	48 03 4d d0          	add    0xffffffffffffffd0(%rbp),%rcx
    e136:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    e13a:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    e13e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e144:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e147: R_X86_64_32S	.rodata.str1.1+0x1d76
    e14b:	4c 89 e2             	mov    %r12,%rdx
    e14e:	48 ff c3             	inc    %rbx
    e151:	4c 89 ee             	mov    %r13,%rsi
    e154:	e8 00 00 00 00       	callq  e159 <netif_carrier_on+0x28f>
			e155: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e159:	48 83 fb 10          	cmp    $0x10,%rbx
    e15d:	75 d0                	jne    e12f <netif_carrier_on+0x265>
    e15f:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e163:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e169:	4c 89 e2             	mov    %r12,%rdx
    e16c:	4c 89 ee             	mov    %r13,%rsi
    e16f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e172: R_X86_64_32S	.rodata.str1.1+0x1d76
    e176:	30 db                	xor    %bl,%bl
    e178:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
    e17f:	e8 00 00 00 00       	callq  e184 <netif_carrier_on+0x2ba>
			e180: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e184:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e188:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    e18e:	4c 89 e2             	mov    %r12,%rdx
    e191:	4c 89 ee             	mov    %r13,%rsi
    e194:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e197: R_X86_64_32S	.rodata.str1.1+0x1d76
    e19b:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
    e1a2:	e8 00 00 00 00       	callq  e1a7 <netif_carrier_on+0x2dd>
			e1a3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e1a7:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e1ab:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    e1af:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    e1b3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e1b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e1bc: R_X86_64_32S	.rodata.str1.1+0x1d76
    e1c0:	4c 89 e2             	mov    %r12,%rdx
    e1c3:	4c 89 ee             	mov    %r13,%rsi
    e1c6:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
    e1cd:	48 01 d9             	add    %rbx,%rcx
    e1d0:	48 ff c3             	inc    %rbx
    e1d3:	e8 00 00 00 00       	callq  e1d8 <netif_carrier_on+0x30e>
			e1d4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e1d8:	48 83 fb 14          	cmp    $0x14,%rbx
    e1dc:	75 c9                	jne    e1a7 <netif_carrier_on+0x2dd>
    e1de:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e1e2:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
    e1e6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    e1ec:	4c 89 e2             	mov    %r12,%rdx
    e1ef:	4c 89 ee             	mov    %r13,%rsi
    e1f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e1f5: R_X86_64_32S	.rodata.str1.1+0x1d76
    e1f9:	48 89 d9             	mov    %rbx,%rcx
    e1fc:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
    e202:	83 e0 01             	and    $0x1,%eax
    e205:	0f b6 c0             	movzbl %al,%eax
    e208:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
    e20b:	e8 00 00 00 00       	callq  e210 <netif_carrier_on+0x346>
			e20c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e210:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e214:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    e21a:	48 89 d9             	mov    %rbx,%rcx
    e21d:	4c 89 e2             	mov    %r12,%rdx
    e220:	4c 89 ee             	mov    %r13,%rsi
    e223:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e226: R_X86_64_32S	.rodata.str1.1+0x1d76
    e22a:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
    e230:	d0 e8                	shr    %al
    e232:	83 e0 01             	and    $0x1,%eax
    e235:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
    e238:	e8 00 00 00 00       	callq  e23d <netif_carrier_on+0x373>
			e239: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e23d:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e241:	4c 89 e2             	mov    %r12,%rdx
    e244:	4c 89 ee             	mov    %r13,%rsi
    e247:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e24a: R_X86_64_32S	.rodata.str1.1+0x1d76
    e24e:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
    e255:	e8 00 00 00 00       	callq  e25a <netif_carrier_on+0x390>
			e256: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e25a:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e25e:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
    e265:	48 85 c0             	test   %rax,%rax
    e268:	0f 84 bb 00 00 00    	je     e329 <netif_carrier_on+0x45f>
    e26e:	48 8d 48 18          	lea    0x18(%rax),%rcx
    e272:	4c 89 e2             	mov    %r12,%rdx
    e275:	4c 89 ee             	mov    %r13,%rsi
    e278:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e27b: R_X86_64_32S	.rodata.str1.1+0x1d76
    e27f:	e8 00 00 00 00       	callq  e284 <netif_carrier_on+0x3ba>
			e280: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e284:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e288:	4c 89 e2             	mov    %r12,%rdx
    e28b:	4c 89 ee             	mov    %r13,%rsi
    e28e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e291: R_X86_64_32S	.rodata.str1.1+0x1d76
    e295:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    e29c:	48 83 c1 20          	add    $0x20,%rcx
    e2a0:	e8 00 00 00 00       	callq  e2a5 <netif_carrier_on+0x3db>
			e2a1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e2a5:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e2a9:	4c 89 e2             	mov    %r12,%rdx
    e2ac:	4c 89 ee             	mov    %r13,%rsi
    e2af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e2b2: R_X86_64_32S	.rodata.str1.1+0x1d76
    e2b6:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    e2bd:	48 83 c1 30          	add    $0x30,%rcx
    e2c1:	e8 00 00 00 00       	callq  e2c6 <netif_carrier_on+0x3fc>
			e2c2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e2c6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e2ca:	4c 89 e2             	mov    %r12,%rdx
    e2cd:	4c 89 ee             	mov    %r13,%rsi
    e2d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e2d3: R_X86_64_32S	.rodata.str1.1+0x1d76
    e2d7:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    e2de:	48 83 c1 10          	add    $0x10,%rcx
    e2e2:	e8 00 00 00 00       	callq  e2e7 <netif_carrier_on+0x41d>
			e2e3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e2e7:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e2eb:	4c 89 e2             	mov    %r12,%rdx
    e2ee:	4c 89 ee             	mov    %r13,%rsi
    e2f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e2f4: R_X86_64_32S	.rodata.str1.1+0x1d76
    e2f8:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    e2ff:	48 83 c1 28          	add    $0x28,%rcx
    e303:	e8 00 00 00 00       	callq  e308 <netif_carrier_on+0x43e>
			e304: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e308:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e30c:	4c 89 e2             	mov    %r12,%rdx
    e30f:	4c 89 ee             	mov    %r13,%rsi
    e312:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e315: R_X86_64_32S	.rodata.str1.1+0x1d76
    e319:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    e320:	48 83 c1 08          	add    $0x8,%rcx
    e324:	e8 00 00 00 00       	callq  e329 <netif_carrier_on+0x45f>
			e325: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e329:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e32d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    e333:	4c 89 e2             	mov    %r12,%rdx
    e336:	4c 89 ee             	mov    %r13,%rsi
    e339:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e33c: R_X86_64_32S	.rodata.str1.1+0x1d76
    e340:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
    e347:	e8 00 00 00 00       	callq  e34c <netif_carrier_on+0x482>
			e348: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e34c:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e350:	4c 89 e2             	mov    %r12,%rdx
    e353:	4c 89 ee             	mov    %r13,%rsi
    e356:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e359: R_X86_64_32S	.rodata.str1.1+0x1d76
    e35d:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
    e364:	e8 00 00 00 00       	callq  e369 <netif_carrier_on+0x49f>
			e365: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e369:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e36d:	4c 89 e2             	mov    %r12,%rdx
    e370:	4c 89 ee             	mov    %r13,%rsi
    e373:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e376: R_X86_64_32S	.rodata.str1.1+0x1d76
    e37a:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
    e381:	e8 00 00 00 00       	callq  e386 <netif_carrier_on+0x4bc>
			e382: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e386:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e38a:	4c 89 e2             	mov    %r12,%rdx
    e38d:	4c 89 ee             	mov    %r13,%rsi
    e390:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e393: R_X86_64_32S	.rodata.str1.1+0x1d76
    e397:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
    e39e:	e8 00 00 00 00       	callq  e3a3 <netif_carrier_on+0x4d9>
			e39f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e3a3:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e3a7:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
    e3ae:	48 85 c9             	test   %rcx,%rcx
    e3b1:	74 18                	je     e3cb <netif_carrier_on+0x501>
    e3b3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    e3b9:	4c 89 e2             	mov    %r12,%rdx
    e3bc:	4c 89 ee             	mov    %r13,%rsi
    e3bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e3c2: R_X86_64_32S	.rodata.str1.1+0x1d76
    e3c6:	e8 00 00 00 00       	callq  e3cb <netif_carrier_on+0x501>
			e3c7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e3cb:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e3cf:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    e3d5:	4c 89 e2             	mov    %r12,%rdx
    e3d8:	4c 89 ee             	mov    %r13,%rsi
    e3db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e3de: R_X86_64_32S	.rodata.str1.1+0x1d76
    e3e2:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
    e3e9:	e8 00 00 00 00       	callq  e3ee <netif_carrier_on+0x524>
			e3ea: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e3ee:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e3f2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    e3f8:	4c 89 e2             	mov    %r12,%rdx
    e3fb:	4c 89 ee             	mov    %r13,%rsi
    e3fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e401: R_X86_64_32S	.rodata.str1.1+0x1d76
    e405:	48 83 c1 70          	add    $0x70,%rcx
    e409:	e8 00 00 00 00       	callq  e40e <netif_carrier_on+0x544>
			e40a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e40e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e412:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    e418:	4c 89 e2             	mov    %r12,%rdx
    e41b:	4c 89 ee             	mov    %r13,%rsi
    e41e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e421: R_X86_64_32S	.rodata.str1.1+0x1d76
    e425:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
    e42c:	e8 00 00 00 00       	callq  e431 <netif_carrier_on+0x567>
			e42d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e431:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e435:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    e43b:	4c 89 e2             	mov    %r12,%rdx
    e43e:	4c 89 ee             	mov    %r13,%rsi
    e441:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e444: R_X86_64_32S	.rodata.str1.1+0x1d76
    e448:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
    e44f:	e8 00 00 00 00       	callq  e454 <netif_carrier_on+0x58a>
			e450: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e454:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e458:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    e45e:	4c 89 e2             	mov    %r12,%rdx
    e461:	4c 89 ee             	mov    %r13,%rsi
    e464:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e467: R_X86_64_32S	.rodata.str1.1+0x1d76
    e46b:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
    e472:	e8 00 00 00 00       	callq  e477 <netif_carrier_on+0x5ad>
			e473: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e477:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e47b:	4c 89 e2             	mov    %r12,%rdx
    e47e:	4c 89 ee             	mov    %r13,%rsi
    e481:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e484: R_X86_64_32S	.rodata.str1.1+0x1d76
    e488:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    e48f:	e8 00 00 00 00       	callq  e494 <netif_carrier_on+0x5ca>
			e490: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e494:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e498:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    e49f:	00 
    e4a0:	74 5a                	je     e4fc <netif_carrier_on+0x632>
    e4a2:	31 db                	xor    %ebx,%ebx
    e4a4:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e4a8:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    e4ac:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    e4b0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e4b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e4b9: R_X86_64_32S	.rodata.str1.1+0x1d76
    e4bd:	4c 89 e2             	mov    %r12,%rdx
    e4c0:	4c 89 ee             	mov    %r13,%rsi
    e4c3:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    e4ca:	48 83 c1 08          	add    $0x8,%rcx
    e4ce:	48 01 d9             	add    %rbx,%rcx
    e4d1:	48 ff c3             	inc    %rbx
    e4d4:	e8 00 00 00 00       	callq  e4d9 <netif_carrier_on+0x60f>
			e4d5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e4d9:	48 83 fb 20          	cmp    $0x20,%rbx
    e4dd:	75 c5                	jne    e4a4 <netif_carrier_on+0x5da>
    e4df:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e4e3:	4c 89 e2             	mov    %r12,%rdx
    e4e6:	4c 89 ee             	mov    %r13,%rsi
    e4e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e4ec: R_X86_64_32S	.rodata.str1.1+0x1d76
    e4f0:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    e4f7:	e8 00 00 00 00       	callq  e4fc <netif_carrier_on+0x632>
			e4f8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e4fc:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e500:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
    e504:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    e508:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e50b: R_X86_64_32S	.rodata.str1.1+0x1d76
    e50f:	48 89 da             	mov    %rbx,%rdx
    e512:	4c 89 e6             	mov    %r12,%rsi
    e515:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    e51c:	e8 00 00 00 00       	callq  e521 <netif_carrier_on+0x657>
			e51d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e521:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e525:	48 89 da             	mov    %rbx,%rdx
    e528:	4c 89 e6             	mov    %r12,%rsi
    e52b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e52e: R_X86_64_32S	.rodata.str1.1+0x1d76
    e532:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    e539:	e8 00 00 00 00       	callq  e53e <netif_carrier_on+0x674>
			e53a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e53e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e542:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    e549:	48 85 c0             	test   %rax,%rax
    e54c:	74 37                	je     e585 <netif_carrier_on+0x6bb>
    e54e:	48 8d 48 60          	lea    0x60(%rax),%rcx
    e552:	48 89 da             	mov    %rbx,%rdx
    e555:	4c 89 e6             	mov    %r12,%rsi
    e558:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e55b: R_X86_64_32S	.rodata.str1.1+0x1d76
    e55f:	e8 00 00 00 00       	callq  e564 <netif_carrier_on+0x69a>
			e560: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e564:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e568:	48 89 da             	mov    %rbx,%rdx
    e56b:	4c 89 e6             	mov    %r12,%rsi
    e56e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e571: R_X86_64_32S	.rodata.str1.1+0x1d76
    e575:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    e57c:	48 83 c1 58          	add    $0x58,%rcx
    e580:	e8 00 00 00 00       	callq  e585 <netif_carrier_on+0x6bb>
			e581: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e585:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e589:	48 89 da             	mov    %rbx,%rdx
    e58c:	4c 89 e6             	mov    %r12,%rsi
    e58f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e592: R_X86_64_32S	.rodata.str1.1+0x1d76
    e596:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    e59d:	e8 00 00 00 00       	callq  e5a2 <netif_carrier_on+0x6d8>
			e59e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e5a2:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e5a6:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
    e5ad:	48 85 c0             	test   %rax,%rax
    e5b0:	74 3d                	je     e5ef <netif_carrier_on+0x725>
    e5b2:	48 8d 48 10          	lea    0x10(%rax),%rcx
    e5b6:	48 89 da             	mov    %rbx,%rdx
    e5b9:	4c 89 e6             	mov    %r12,%rsi
    e5bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e5bf: R_X86_64_32S	.rodata.str1.1+0x1d76
    e5c3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    e5c9:	e8 00 00 00 00       	callq  e5ce <netif_carrier_on+0x704>
			e5ca: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e5ce:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e5d2:	48 89 da             	mov    %rbx,%rdx
    e5d5:	4c 89 e6             	mov    %r12,%rsi
    e5d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e5db: R_X86_64_32S	.rodata.str1.1+0x1d76
    e5df:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    e5e6:	48 83 c1 08          	add    $0x8,%rcx
    e5ea:	e8 00 00 00 00       	callq  e5ef <netif_carrier_on+0x725>
			e5eb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e5ef:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
    e5f3:	48 89 da             	mov    %rbx,%rdx
    e5f6:	4c 89 e6             	mov    %r12,%rsi
    e5f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e5fc: R_X86_64_32S	.rodata.str1.1+0x1d76
    e600:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    e607:	e8 00 00 00 00       	callq  e60c <netif_carrier_on+0x742>
			e608: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e60c:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e610:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    e617:	00 
    e618:	74 5a                	je     e674 <netif_carrier_on+0x7aa>
    e61a:	31 db                	xor    %ebx,%ebx
    e61c:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e620:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
    e624:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    e628:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e62e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e631: R_X86_64_32S	.rodata.str1.1+0x1d76
    e635:	4c 89 e2             	mov    %r12,%rdx
    e638:	4c 89 ee             	mov    %r13,%rsi
    e63b:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    e642:	48 83 c1 08          	add    $0x8,%rcx
    e646:	48 01 d9             	add    %rbx,%rcx
    e649:	48 ff c3             	inc    %rbx
    e64c:	e8 00 00 00 00       	callq  e651 <netif_carrier_on+0x787>
			e64d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    e651:	48 83 fb 20          	cmp    $0x20,%rbx
    e655:	75 c5                	jne    e61c <netif_carrier_on+0x752>
    e657:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
    e65b:	4c 89 e2             	mov    %r12,%rdx
    e65e:	4c 89 ee             	mov    %r13,%rsi
    e661:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e664: R_X86_64_32S	.rodata.str1.1+0x1d76
    e668:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    e66f:	e8 00 00 00 00       	callq  e674 <netif_carrier_on+0x7aa>
			e670: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    e674:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    e678:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    e67c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e67f: R_X86_64_32S	.rodata.str1.1+0x1d76
    e683:	48 c7 45 b0 e2 05 00 	movq   $0x5e2,0xffffffffffffffb0(%rbp)
    e68a:	00 
    e68b:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
    e68f:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
    e693:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
    e696:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    e699:	e8 00 00 00 00       	callq  e69e <netif_carrier_on+0x7d4>
			e69a: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    e69e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e6a1: R_X86_64_32S	.rodata.str1.1+0x1da6
    e6a5:	4c 89 75 c8          	mov    %r14,0xffffffffffffffc8(%rbp)
    e6a9:	e8 00 00 00 00       	callq  e6ae <netif_carrier_on+0x7e4>
			e6aa: R_X86_64_PC32	record_function+0xfffffffffffffffc
    e6ae:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
    e6b2:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
    e6b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e6b9: R_X86_64_32S	.rodata.str1.1+0x1d76
    e6bd:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    e6c3:	48 89 da             	mov    %rbx,%rdx
    e6c6:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
    e6cd:	4c 89 e6             	mov    %r12,%rsi
    e6d0:	e8 00 00 00 00       	callq  e6d5 <netif_carrier_on+0x80b>
			e6d1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    e6d5:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
    e6d9:	48 85 ff             	test   %rdi,%rdi
    e6dc:	0f 84 db 07 00 00    	je     eebd <netif_carrier_on+0xff3>
    e6e2:	ba 08 00 00 00       	mov    $0x8,%edx
    e6e7:	be 10 03 00 00       	mov    $0x310,%esi
    e6ec:	e8 00 00 00 00       	callq  e6f1 <netif_carrier_on+0x827>
			e6ed: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    e6f1:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e6f5:	48 89 da             	mov    %rbx,%rdx
    e6f8:	b9 08 00 00 00       	mov    $0x8,%ecx
    e6fd:	4c 89 e6             	mov    %r12,%rsi
    e700:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e703: R_X86_64_32S	.rodata.str1.1+0x1d76
    e707:	49 81 c0 10 03 00 00 	add    $0x310,%r8
    e70e:	e8 00 00 00 00       	callq  e713 <netif_carrier_on+0x849>
			e70f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e713:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e717:	48 89 da             	mov    %rbx,%rdx
    e71a:	b9 02 00 00 00       	mov    $0x2,%ecx
    e71f:	4c 89 e6             	mov    %r12,%rsi
    e722:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e725: R_X86_64_32S	.rodata.str1.1+0x1d76
    e729:	49 81 c0 70 01 00 00 	add    $0x170,%r8
    e730:	e8 00 00 00 00       	callq  e735 <netif_carrier_on+0x86b>
			e731: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e735:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e739:	48 89 da             	mov    %rbx,%rdx
    e73c:	b9 08 00 00 00       	mov    $0x8,%ecx
    e741:	4c 89 e6             	mov    %r12,%rsi
    e744:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e747: R_X86_64_32S	.rodata.str1.1+0x1d76
    e74b:	49 81 c0 48 03 00 00 	add    $0x348,%r8
    e752:	e8 00 00 00 00       	callq  e757 <netif_carrier_on+0x88d>
			e753: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e757:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e75b:	48 89 da             	mov    %rbx,%rdx
    e75e:	b9 04 00 00 00       	mov    $0x4,%ecx
    e763:	4c 89 e6             	mov    %r12,%rsi
    e766:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e769: R_X86_64_32S	.rodata.str1.1+0x1d76
    e76d:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
    e774:	e8 00 00 00 00       	callq  e779 <netif_carrier_on+0x8af>
			e775: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e779:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e77d:	48 89 da             	mov    %rbx,%rdx
    e780:	b9 04 00 00 00       	mov    $0x4,%ecx
    e785:	4c 89 e6             	mov    %r12,%rsi
    e788:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e78b: R_X86_64_32S	.rodata.str1.1+0x1d76
    e78f:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
    e796:	e8 00 00 00 00       	callq  e79b <netif_carrier_on+0x8d1>
			e797: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e79b:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    e79f:	48 89 da             	mov    %rbx,%rdx
    e7a2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e7a8:	4c 89 e6             	mov    %r12,%rsi
    e7ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e7ae: R_X86_64_32S	.rodata.str1.1+0x1d76
    e7b2:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    e7b9:	e8 00 00 00 00       	callq  e7be <netif_carrier_on+0x8f4>
			e7ba: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    e7be:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    e7c2:	48 89 da             	mov    %rbx,%rdx
    e7c5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e7cb:	4c 89 e6             	mov    %r12,%rsi
    e7ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e7d1: R_X86_64_32S	.rodata.str1.1+0x1d76
    e7d5:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    e7dc:	e8 00 00 00 00       	callq  e7e1 <netif_carrier_on+0x917>
			e7dd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    e7e1:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    e7e5:	48 89 da             	mov    %rbx,%rdx
    e7e8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e7ee:	4c 89 e6             	mov    %r12,%rsi
    e7f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e7f4: R_X86_64_32S	.rodata.str1.1+0x1d76
    e7f8:	31 db                	xor    %ebx,%ebx
    e7fa:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    e801:	e8 00 00 00 00       	callq  e806 <netif_carrier_on+0x93c>
			e802: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    e806:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e80a:	48 8d 55 dc          	lea    0xffffffffffffffdc(%rbp),%rdx
    e80e:	b9 01 00 00 00       	mov    $0x1,%ecx
    e813:	4c 89 e6             	mov    %r12,%rsi
    e816:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e819: R_X86_64_32S	.rodata.str1.1+0x1d76
    e81d:	49 81 c0 60 02 00 00 	add    $0x260,%r8
    e824:	49 01 d8             	add    %rbx,%r8
    e827:	48 ff c3             	inc    %rbx
    e82a:	e8 00 00 00 00       	callq  e82f <netif_carrier_on+0x965>
			e82b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e82f:	48 83 fb 20          	cmp    $0x20,%rbx
    e833:	75 d1                	jne    e806 <netif_carrier_on+0x93c>
    e835:	30 db                	xor    %bl,%bl
    e837:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e83b:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    e83f:	b9 01 00 00 00       	mov    $0x1,%ecx
    e844:	4c 89 e6             	mov    %r12,%rsi
    e847:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e84a: R_X86_64_32S	.rodata.str1.1+0x1d76
    e84e:	4c 89 ea             	mov    %r13,%rdx
    e851:	49 81 c0 80 01 00 00 	add    $0x180,%r8
    e858:	49 01 d8             	add    %rbx,%r8
    e85b:	48 ff c3             	inc    %rbx
    e85e:	e8 00 00 00 00       	callq  e863 <netif_carrier_on+0x999>
			e85f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e863:	48 83 fb 20          	cmp    $0x20,%rbx
    e867:	75 ce                	jne    e837 <netif_carrier_on+0x96d>
    e869:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e86d:	b9 02 00 00 00       	mov    $0x2,%ecx
    e872:	4c 89 ea             	mov    %r13,%rdx
    e875:	4c 89 e6             	mov    %r12,%rsi
    e878:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e87b: R_X86_64_32S	.rodata.str1.1+0x1d76
    e87f:	30 db                	xor    %bl,%bl
    e881:	49 81 c0 72 01 00 00 	add    $0x172,%r8
    e888:	e8 00 00 00 00       	callq  e88d <netif_carrier_on+0x9c3>
			e889: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e88d:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
    e891:	ba 08 00 00 00       	mov    $0x8,%edx
    e896:	be 48 00 00 00       	mov    $0x48,%esi
    e89b:	e8 00 00 00 00       	callq  e8a0 <netif_carrier_on+0x9d6>
			e89c: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    e8a0:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e8a4:	b9 08 00 00 00       	mov    $0x8,%ecx
    e8a9:	4c 89 ea             	mov    %r13,%rdx
    e8ac:	4c 89 e6             	mov    %r12,%rsi
    e8af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e8b2: R_X86_64_32S	.rodata.str1.1+0x1d76
    e8b6:	49 83 c0 48          	add    $0x48,%r8
    e8ba:	e8 00 00 00 00       	callq  e8bf <netif_carrier_on+0x9f5>
			e8bb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e8bf:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e8c3:	48 8d 55 dc          	lea    0xffffffffffffffdc(%rbp),%rdx
    e8c7:	b9 01 00 00 00       	mov    $0x1,%ecx
    e8cc:	4c 89 e6             	mov    %r12,%rsi
    e8cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e8d2: R_X86_64_32S	.rodata.str1.1+0x1d76
    e8d6:	49 81 c0 40 02 00 00 	add    $0x240,%r8
    e8dd:	49 01 d8             	add    %rbx,%r8
    e8e0:	48 ff c3             	inc    %rbx
    e8e3:	e8 00 00 00 00       	callq  e8e8 <netif_carrier_on+0xa1e>
			e8e4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e8e8:	48 83 fb 20          	cmp    $0x20,%rbx
    e8ec:	75 d1                	jne    e8bf <netif_carrier_on+0x9f5>
    e8ee:	30 db                	xor    %bl,%bl
    e8f0:	49 89 d8             	mov    %rbx,%r8
    e8f3:	4c 03 45 c8          	add    0xffffffffffffffc8(%rbp),%r8
    e8f7:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    e8fb:	b9 01 00 00 00       	mov    $0x1,%ecx
    e900:	4c 89 e6             	mov    %r12,%rsi
    e903:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e906: R_X86_64_32S	.rodata.str1.1+0x1d76
    e90a:	4c 89 ea             	mov    %r13,%rdx
    e90d:	48 ff c3             	inc    %rbx
    e910:	e8 00 00 00 00       	callq  e915 <netif_carrier_on+0xa4b>
			e911: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e915:	48 83 fb 10          	cmp    $0x10,%rbx
    e919:	75 d5                	jne    e8f0 <netif_carrier_on+0xa26>
    e91b:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
    e91f:	ba 10 00 00 00       	mov    $0x10,%edx
    e924:	be 18 04 00 00       	mov    $0x418,%esi
    e929:	30 db                	xor    %bl,%bl
    e92b:	e8 00 00 00 00       	callq  e930 <netif_carrier_on+0xa66>
			e92c: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    e930:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e934:	b9 01 00 00 00       	mov    $0x1,%ecx
    e939:	4c 89 ea             	mov    %r13,%rdx
    e93c:	4c 89 e6             	mov    %r12,%rsi
    e93f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e942: R_X86_64_32S	.rodata.str1.1+0x1d76
    e946:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
    e94d:	e8 00 00 00 00       	callq  e952 <netif_carrier_on+0xa88>
			e94e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e952:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    e956:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    e95a:	b9 01 00 00 00       	mov    $0x1,%ecx
    e95f:	4c 89 e6             	mov    %r12,%rsi
    e962:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e965: R_X86_64_32S	.rodata.str1.1+0x1d76
    e969:	4c 89 ea             	mov    %r13,%rdx
    e96c:	49 81 c0 60 05 00 00 	add    $0x560,%r8
    e973:	49 01 d8             	add    %rbx,%r8
    e976:	48 ff c3             	inc    %rbx
    e979:	e8 00 00 00 00       	callq  e97e <netif_carrier_on+0xab4>
			e97a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e97e:	48 83 fb 14          	cmp    $0x14,%rbx
    e982:	75 ce                	jne    e952 <netif_carrier_on+0xa88>
    e984:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
    e988:	b9 04 00 00 00       	mov    $0x4,%ecx
    e98d:	4c 89 ea             	mov    %r13,%rdx
    e990:	4c 89 e6             	mov    %r12,%rsi
    e993:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e996: R_X86_64_32S	.rodata.str1.1+0x1d76
    e99a:	49 89 d8             	mov    %rbx,%r8
    e99d:	e8 00 00 00 00       	callq  e9a2 <netif_carrier_on+0xad8>
			e99e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e9a2:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    e9a6:	8a 55 d8             	mov    0xffffffffffffffd8(%rbp),%dl
    e9a9:	49 89 d8             	mov    %rbx,%r8
    e9ac:	4c 89 e6             	mov    %r12,%rsi
    e9af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e9b2: R_X86_64_32S	.rodata.str1.1+0x1d76
    e9b6:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
    e9bc:	83 e2 01             	and    $0x1,%edx
    e9bf:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
    e9c2:	09 d0                	or     %edx,%eax
    e9c4:	4c 89 ea             	mov    %r13,%rdx
    e9c7:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
    e9cd:	b9 04 00 00 00       	mov    $0x4,%ecx
    e9d2:	e8 00 00 00 00       	callq  e9d7 <netif_carrier_on+0xb0d>
			e9d3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    e9d7:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    e9db:	8a 55 d8             	mov    0xffffffffffffffd8(%rbp),%dl
    e9de:	41 b8 78 00 00 00    	mov    $0x78,%r8d
    e9e4:	4c 89 e6             	mov    %r12,%rsi
    e9e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e9ea: R_X86_64_32S	.rodata.str1.1+0x1d76
    e9ee:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
    e9f4:	83 e2 01             	and    $0x1,%edx
    e9f7:	01 d2                	add    %edx,%edx
    e9f9:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
    e9fc:	09 d0                	or     %edx,%eax
    e9fe:	4c 89 ea             	mov    %r13,%rdx
    ea01:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
    ea07:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    ea0b:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
    ea12:	e8 00 00 00 00       	callq  ea17 <netif_carrier_on+0xb4d>
			ea13: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ea17:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ea1b:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
    ea22:	48 85 c0             	test   %rax,%rax
    ea25:	0f 84 df 00 00 00    	je     eb0a <netif_carrier_on+0xc40>
    ea2b:	48 8d 48 18          	lea    0x18(%rax),%rcx
    ea2f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ea35:	4c 89 ea             	mov    %r13,%rdx
    ea38:	4c 89 e6             	mov    %r12,%rsi
    ea3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ea3e: R_X86_64_32S	.rodata.str1.1+0x1d76
    ea42:	e8 00 00 00 00       	callq  ea47 <netif_carrier_on+0xb7d>
			ea43: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ea47:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ea4b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ea51:	4c 89 ea             	mov    %r13,%rdx
    ea54:	4c 89 e6             	mov    %r12,%rsi
    ea57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ea5a: R_X86_64_32S	.rodata.str1.1+0x1d76
    ea5e:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    ea65:	48 83 c1 20          	add    $0x20,%rcx
    ea69:	e8 00 00 00 00       	callq  ea6e <netif_carrier_on+0xba4>
			ea6a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ea6e:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ea72:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ea78:	4c 89 ea             	mov    %r13,%rdx
    ea7b:	4c 89 e6             	mov    %r12,%rsi
    ea7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ea81: R_X86_64_32S	.rodata.str1.1+0x1d76
    ea85:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    ea8c:	48 83 c1 30          	add    $0x30,%rcx
    ea90:	e8 00 00 00 00       	callq  ea95 <netif_carrier_on+0xbcb>
			ea91: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ea95:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ea99:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ea9f:	4c 89 ea             	mov    %r13,%rdx
    eaa2:	4c 89 e6             	mov    %r12,%rsi
    eaa5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eaa8: R_X86_64_32S	.rodata.str1.1+0x1d76
    eaac:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    eab3:	48 83 c1 10          	add    $0x10,%rcx
    eab7:	e8 00 00 00 00       	callq  eabc <netif_carrier_on+0xbf2>
			eab8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eabc:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    eac0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    eac6:	4c 89 ea             	mov    %r13,%rdx
    eac9:	4c 89 e6             	mov    %r12,%rsi
    eacc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eacf: R_X86_64_32S	.rodata.str1.1+0x1d76
    ead3:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    eada:	48 83 c1 28          	add    $0x28,%rcx
    eade:	e8 00 00 00 00       	callq  eae3 <netif_carrier_on+0xc19>
			eadf: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eae3:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    eae7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    eaed:	4c 89 ea             	mov    %r13,%rdx
    eaf0:	4c 89 e6             	mov    %r12,%rsi
    eaf3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eaf6: R_X86_64_32S	.rodata.str1.1+0x1d76
    eafa:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    eb01:	48 83 c1 08          	add    $0x8,%rcx
    eb05:	e8 00 00 00 00       	callq  eb0a <netif_carrier_on+0xc40>
			eb06: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eb0a:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    eb0e:	b9 08 00 00 00       	mov    $0x8,%ecx
    eb13:	4c 89 ea             	mov    %r13,%rdx
    eb16:	4c 89 e6             	mov    %r12,%rsi
    eb19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eb1c: R_X86_64_32S	.rodata.str1.1+0x1d76
    eb20:	49 81 c0 20 06 00 00 	add    $0x620,%r8
    eb27:	e8 00 00 00 00       	callq  eb2c <netif_carrier_on+0xc62>
			eb28: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    eb2c:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    eb30:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    eb36:	4c 89 ea             	mov    %r13,%rdx
    eb39:	4c 89 e6             	mov    %r12,%rsi
    eb3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eb3f: R_X86_64_32S	.rodata.str1.1+0x1d76
    eb43:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
    eb4a:	e8 00 00 00 00       	callq  eb4f <netif_carrier_on+0xc85>
			eb4b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eb4f:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    eb53:	41 b8 78 02 00 00    	mov    $0x278,%r8d
    eb59:	4c 89 ea             	mov    %r13,%rdx
    eb5c:	4c 89 e6             	mov    %r12,%rsi
    eb5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eb62: R_X86_64_32S	.rodata.str1.1+0x1d76
    eb66:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
    eb6d:	e8 00 00 00 00       	callq  eb72 <netif_carrier_on+0xca8>
			eb6e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eb72:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    eb76:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    eb7c:	4c 89 ea             	mov    %r13,%rdx
    eb7f:	4c 89 e6             	mov    %r12,%rsi
    eb82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eb85: R_X86_64_32S	.rodata.str1.1+0x1d76
    eb89:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
    eb90:	e8 00 00 00 00       	callq  eb95 <netif_carrier_on+0xccb>
			eb91: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eb95:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    eb99:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
    eba0:	48 85 c0             	test   %rax,%rax
    eba3:	74 1a                	je     ebbf <netif_carrier_on+0xcf5>
    eba5:	49 89 c0             	mov    %rax,%r8
    eba8:	b9 08 00 00 00       	mov    $0x8,%ecx
    ebad:	4c 89 ea             	mov    %r13,%rdx
    ebb0:	4c 89 e6             	mov    %r12,%rsi
    ebb3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ebb6: R_X86_64_32S	.rodata.str1.1+0x1d76
    ebba:	e8 00 00 00 00       	callq  ebbf <netif_carrier_on+0xcf5>
			ebbb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ebbf:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    ebc3:	b9 04 00 00 00       	mov    $0x4,%ecx
    ebc8:	4c 89 ea             	mov    %r13,%rdx
    ebcb:	4c 89 e6             	mov    %r12,%rsi
    ebce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ebd1: R_X86_64_32S	.rodata.str1.1+0x1d76
    ebd5:	49 81 c0 30 04 00 00 	add    $0x430,%r8
    ebdc:	e8 00 00 00 00       	callq  ebe1 <netif_carrier_on+0xd17>
			ebdd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ebe1:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    ebe5:	b9 08 00 00 00       	mov    $0x8,%ecx
    ebea:	4c 89 ea             	mov    %r13,%rdx
    ebed:	4c 89 e6             	mov    %r12,%rsi
    ebf0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ebf3: R_X86_64_32S	.rodata.str1.1+0x1d76
    ebf7:	49 83 c0 70          	add    $0x70,%r8
    ebfb:	e8 00 00 00 00       	callq  ec00 <netif_carrier_on+0xd36>
			ebfc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ec00:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
    ec04:	ba 10 00 00 00       	mov    $0x10,%edx
    ec09:	be 10 00 00 00       	mov    $0x10,%esi
    ec0e:	e8 00 00 00 00       	callq  ec13 <netif_carrier_on+0xd49>
			ec0f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    ec13:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    ec17:	b9 04 00 00 00       	mov    $0x4,%ecx
    ec1c:	4c 89 ea             	mov    %r13,%rdx
    ec1f:	4c 89 e6             	mov    %r12,%rsi
    ec22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ec25: R_X86_64_32S	.rodata.str1.1+0x1d76
    ec29:	49 81 c0 50 03 00 00 	add    $0x350,%r8
    ec30:	e8 00 00 00 00       	callq  ec35 <netif_carrier_on+0xd6b>
			ec31: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ec35:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    ec39:	b9 08 00 00 00       	mov    $0x8,%ecx
    ec3e:	4c 89 ea             	mov    %r13,%rdx
    ec41:	4c 89 e6             	mov    %r12,%rsi
    ec44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ec47: R_X86_64_32S	.rodata.str1.1+0x1d76
    ec4b:	49 81 c0 00 07 00 00 	add    $0x700,%r8
    ec52:	e8 00 00 00 00       	callq  ec57 <netif_carrier_on+0xd8d>
			ec53: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ec57:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
    ec5b:	b9 04 00 00 00       	mov    $0x4,%ecx
    ec60:	4c 89 ea             	mov    %r13,%rdx
    ec63:	4c 89 e6             	mov    %r12,%rsi
    ec66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ec69: R_X86_64_32S	.rodata.str1.1+0x1d76
    ec6d:	49 81 c0 60 01 00 00 	add    $0x160,%r8
    ec74:	e8 00 00 00 00       	callq  ec79 <netif_carrier_on+0xdaf>
			ec75: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ec79:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    ec7d:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    ec83:	4c 89 ea             	mov    %r13,%rdx
    ec86:	4c 89 e6             	mov    %r12,%rsi
    ec89:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ec8c: R_X86_64_32S	.rodata.str1.1+0x1d76
    ec90:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    ec97:	e8 00 00 00 00       	callq  ec9c <netif_carrier_on+0xdd2>
			ec98: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ec9c:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    eca0:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    eca7:	00 
    eca8:	74 5b                	je     ed05 <netif_carrier_on+0xe3b>
    ecaa:	31 db                	xor    %ebx,%ebx
    ecac:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ecb0:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    ecb4:	b9 01 00 00 00       	mov    $0x1,%ecx
    ecb9:	4c 89 e6             	mov    %r12,%rsi
    ecbc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ecbf: R_X86_64_32S	.rodata.str1.1+0x1d76
    ecc3:	4c 89 ea             	mov    %r13,%rdx
    ecc6:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
    eccd:	49 83 c0 08          	add    $0x8,%r8
    ecd1:	49 01 d8             	add    %rbx,%r8
    ecd4:	48 ff c3             	inc    %rbx
    ecd7:	e8 00 00 00 00       	callq  ecdc <netif_carrier_on+0xe12>
			ecd8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ecdc:	48 83 fb 20          	cmp    $0x20,%rbx
    ece0:	75 ca                	jne    ecac <netif_carrier_on+0xde2>
    ece2:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ece6:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    ecec:	4c 89 ea             	mov    %r13,%rdx
    ecef:	4c 89 e6             	mov    %r12,%rsi
    ecf2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ecf5: R_X86_64_32S	.rodata.str1.1+0x1d76
    ecf9:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    ed00:	e8 00 00 00 00       	callq  ed05 <netif_carrier_on+0xe3b>
			ed01: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ed05:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    ed09:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
    ed0d:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
    ed13:	4c 89 e6             	mov    %r12,%rsi
    ed16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ed19: R_X86_64_32S	.rodata.str1.1+0x1d76
    ed1d:	48 89 da             	mov    %rbx,%rdx
    ed20:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    ed27:	e8 00 00 00 00       	callq  ed2c <netif_carrier_on+0xe62>
			ed28: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ed2c:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    ed30:	41 b8 68 01 00 00    	mov    $0x168,%r8d
    ed36:	48 89 da             	mov    %rbx,%rdx
    ed39:	4c 89 e6             	mov    %r12,%rsi
    ed3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ed3f: R_X86_64_32S	.rodata.str1.1+0x1d76
    ed43:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    ed4a:	e8 00 00 00 00       	callq  ed4f <netif_carrier_on+0xe85>
			ed4b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ed4f:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ed53:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    ed5a:	48 85 c0             	test   %rax,%rax
    ed5d:	74 43                	je     eda2 <netif_carrier_on+0xed8>
    ed5f:	48 8d 48 60          	lea    0x60(%rax),%rcx
    ed63:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ed69:	48 89 da             	mov    %rbx,%rdx
    ed6c:	4c 89 e6             	mov    %r12,%rsi
    ed6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ed72: R_X86_64_32S	.rodata.str1.1+0x1d76
    ed76:	e8 00 00 00 00       	callq  ed7b <netif_carrier_on+0xeb1>
			ed77: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ed7b:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ed7f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ed85:	48 89 da             	mov    %rbx,%rdx
    ed88:	4c 89 e6             	mov    %r12,%rsi
    ed8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ed8e: R_X86_64_32S	.rodata.str1.1+0x1d76
    ed92:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    ed99:	48 83 c1 58          	add    $0x58,%rcx
    ed9d:	e8 00 00 00 00       	callq  eda2 <netif_carrier_on+0xed8>
			ed9e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eda2:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    eda6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eda9: R_X86_64_32S	.rodata.str1.1+0x1d76
    edad:	41 b8 80 00 00 00    	mov    $0x80,%r8d
    edb3:	48 89 da             	mov    %rbx,%rdx
    edb6:	4c 89 e6             	mov    %r12,%rsi
    edb9:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    edc0:	e8 00 00 00 00       	callq  edc5 <netif_carrier_on+0xefb>
			edc1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    edc5:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    edc9:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
    edd0:	48 85 ff             	test   %rdi,%rdi
    edd3:	74 5c                	je     ee31 <netif_carrier_on+0xf67>
    edd5:	ba 08 00 00 00       	mov    $0x8,%edx
    edda:	be 10 00 00 00       	mov    $0x10,%esi
    eddf:	e8 00 00 00 00       	callq  ede4 <netif_carrier_on+0xf1a>
			ede0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    ede4:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ede8:	b9 08 00 00 00       	mov    $0x8,%ecx
    eded:	48 89 da             	mov    %rbx,%rdx
    edf0:	4c 89 e6             	mov    %r12,%rsi
    edf3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			edf6: R_X86_64_32S	.rodata.str1.1+0x1d76
    edfa:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
    ee01:	49 83 c0 10          	add    $0x10,%r8
    ee05:	e8 00 00 00 00       	callq  ee0a <netif_carrier_on+0xf40>
			ee06: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ee0a:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ee0e:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
    ee14:	48 89 da             	mov    %rbx,%rdx
    ee17:	4c 89 e6             	mov    %r12,%rsi
    ee1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ee1d: R_X86_64_32S	.rodata.str1.1+0x1d76
    ee21:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    ee28:	48 83 c1 08          	add    $0x8,%rcx
    ee2c:	e8 00 00 00 00       	callq  ee31 <netif_carrier_on+0xf67>
			ee2d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ee31:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
    ee35:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    ee3b:	48 89 da             	mov    %rbx,%rdx
    ee3e:	4c 89 e6             	mov    %r12,%rsi
    ee41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ee44: R_X86_64_32S	.rodata.str1.1+0x1d76
    ee48:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    ee4f:	e8 00 00 00 00       	callq  ee54 <netif_carrier_on+0xf8a>
			ee50: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ee54:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ee58:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    ee5f:	00 
    ee60:	74 5b                	je     eebd <netif_carrier_on+0xff3>
    ee62:	31 db                	xor    %ebx,%ebx
    ee64:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ee68:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
    ee6c:	b9 01 00 00 00       	mov    $0x1,%ecx
    ee71:	4c 89 e6             	mov    %r12,%rsi
    ee74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ee77: R_X86_64_32S	.rodata.str1.1+0x1d76
    ee7b:	4c 89 ea             	mov    %r13,%rdx
    ee7e:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
    ee85:	49 83 c0 08          	add    $0x8,%r8
    ee89:	49 01 d8             	add    %rbx,%r8
    ee8c:	48 ff c3             	inc    %rbx
    ee8f:	e8 00 00 00 00       	callq  ee94 <netif_carrier_on+0xfca>
			ee90: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ee94:	48 83 fb 20          	cmp    $0x20,%rbx
    ee98:	75 ca                	jne    ee64 <netif_carrier_on+0xf9a>
    ee9a:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
    ee9e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    eea4:	4c 89 ea             	mov    %r13,%rdx
    eea7:	4c 89 e6             	mov    %r12,%rsi
    eeaa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eead: R_X86_64_32S	.rodata.str1.1+0x1d76
    eeb1:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    eeb8:	e8 00 00 00 00       	callq  eebd <netif_carrier_on+0xff3>
			eeb9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    eebd:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
    eec1:	48 85 ff             	test   %rdi,%rdi
    eec4:	74 05                	je     eecb <netif_carrier_on+0x1001>
    eec6:	e8 00 00 00 00       	callq  eecb <netif_carrier_on+0x1001>
			eec7: R_X86_64_PC32	kfree+0xfffffffffffffffc
    eecb:	48 83 c4 30          	add    $0x30,%rsp
    eecf:	5b                   	pop    %rbx
    eed0:	41 5c                	pop    %r12
    eed2:	41 5d                	pop    %r13
    eed4:	41 5e                	pop    %r14
    eed6:	c9                   	leaveq 
    eed7:	c3                   	retq   

000000000000eed8 <netif_napi_add>:
    eed8:	55                   	push   %rbp
    eed9:	48 89 e5             	mov    %rsp,%rbp
    eedc:	41 57                	push   %r15
    eede:	49 89 f7             	mov    %rsi,%r15
    eee1:	41 56                	push   %r14
    eee3:	49 89 fe             	mov    %rdi,%r14
    eee6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eee9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    eeed:	41 55                	push   %r13
    eeef:	41 54                	push   %r12
    eef1:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
    eef5:	53                   	push   %rbx
    eef6:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    eefa:	48 83 ec 68          	sub    $0x68,%rsp
    eefe:	48 89 95 78 ff ff ff 	mov    %rdx,0xffffffffffffff78(%rbp)
    ef05:	89 8d 74 ff ff ff    	mov    %ecx,0xffffffffffffff74(%rbp)
    ef0b:	e8 00 00 00 00       	callq  ef10 <netif_napi_add+0x38>
			ef0c: R_X86_64_PC32	record_function+0xfffffffffffffffc
    ef10:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    ef17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ef1a: R_X86_64_32S	.rodata.str1.1+0x1dd4
    ef1e:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
    ef25:	00 
    ef26:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
    ef2d:	00 
    ef2e:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
    ef35:	4c 89 75 a8          	mov    %r14,0xffffffffffffffa8(%rbp)
    ef39:	4c 89 7d a0          	mov    %r15,0xffffffffffffffa0(%rbp)
    ef3d:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
    ef41:	8b 85 74 ff ff ff    	mov    0xffffffffffffff74(%rbp),%eax
    ef47:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
    ef4a:	e8 00 00 00 00       	callq  ef4f <netif_napi_add+0x77>
			ef4b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    ef4f:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    ef53:	48 89 da             	mov    %rbx,%rdx
    ef56:	4c 89 e6             	mov    %r12,%rsi
    ef59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ef5c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ef60:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    ef67:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
    ef6e:	00 
    ef6f:	e8 00 00 00 00       	callq  ef74 <netif_napi_add+0x9c>
			ef70: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    ef74:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    ef78:	48 85 c0             	test   %rax,%rax
    ef7b:	0f 84 2b 07 00 00    	je     f6ac <netif_napi_add+0x7d4>
    ef81:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
    ef88:	48 89 da             	mov    %rbx,%rdx
    ef8b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    ef91:	4c 89 e6             	mov    %r12,%rsi
    ef94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ef97: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ef9b:	e8 00 00 00 00       	callq  efa0 <netif_napi_add+0xc8>
			ef9c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    efa0:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    efa4:	48 89 da             	mov    %rbx,%rdx
    efa7:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    efad:	4c 89 e6             	mov    %r12,%rsi
    efb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			efb3: R_X86_64_32S	.rodata.str1.1+0x1dc5
    efb7:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
    efbe:	e8 00 00 00 00       	callq  efc3 <netif_napi_add+0xeb>
			efbf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    efc3:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    efc7:	48 89 da             	mov    %rbx,%rdx
    efca:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    efd0:	4c 89 e6             	mov    %r12,%rsi
    efd3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			efd6: R_X86_64_32S	.rodata.str1.1+0x1dc5
    efda:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
    efe1:	e8 00 00 00 00       	callq  efe6 <netif_napi_add+0x10e>
			efe2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    efe6:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    efea:	48 89 da             	mov    %rbx,%rdx
    efed:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    eff3:	4c 89 e6             	mov    %r12,%rsi
    eff6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eff9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    effd:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
    f004:	e8 00 00 00 00       	callq  f009 <netif_napi_add+0x131>
			f005: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f009:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f00d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f013:	48 89 da             	mov    %rbx,%rdx
    f016:	4c 89 e6             	mov    %r12,%rsi
    f019:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f01c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f020:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
    f027:	e8 00 00 00 00       	callq  f02c <netif_napi_add+0x154>
			f028: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f02c:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f030:	48 89 da             	mov    %rbx,%rdx
    f033:	4c 89 e6             	mov    %r12,%rsi
    f036:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f039: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f03d:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    f044:	e8 00 00 00 00       	callq  f049 <netif_napi_add+0x171>
			f045: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f049:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f04d:	48 89 da             	mov    %rbx,%rdx
    f050:	4c 89 e6             	mov    %r12,%rsi
    f053:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f056: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f05a:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    f061:	e8 00 00 00 00       	callq  f066 <netif_napi_add+0x18e>
			f062: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f066:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f06a:	48 89 da             	mov    %rbx,%rdx
    f06d:	4c 89 e6             	mov    %r12,%rsi
    f070:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f073: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f077:	31 db                	xor    %ebx,%ebx
    f079:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    f080:	e8 00 00 00 00       	callq  f085 <netif_napi_add+0x1ad>
			f081: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f085:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f089:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    f08d:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    f091:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f097:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f09a: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f09e:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
    f0a5:	48 01 d9             	add    %rbx,%rcx
    f0a8:	48 ff c3             	inc    %rbx
    f0ab:	e8 00 00 00 00       	callq  f0b0 <netif_napi_add+0x1d8>
			f0ac: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f0b0:	48 83 fb 20          	cmp    $0x20,%rbx
    f0b4:	75 cf                	jne    f085 <netif_napi_add+0x1ad>
    f0b6:	30 db                	xor    %bl,%bl
    f0b8:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f0bc:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    f0c0:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    f0c4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f0ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f0cd: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f0d1:	4c 89 e2             	mov    %r12,%rdx
    f0d4:	4c 89 ee             	mov    %r13,%rsi
    f0d7:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
    f0de:	48 01 d9             	add    %rbx,%rcx
    f0e1:	48 ff c3             	inc    %rbx
    f0e4:	e8 00 00 00 00       	callq  f0e9 <netif_napi_add+0x211>
			f0e5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f0e9:	48 83 fb 20          	cmp    $0x20,%rbx
    f0ed:	75 c9                	jne    f0b8 <netif_napi_add+0x1e0>
    f0ef:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f0f3:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    f0f9:	4c 89 e2             	mov    %r12,%rdx
    f0fc:	4c 89 ee             	mov    %r13,%rsi
    f0ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f102: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f106:	30 db                	xor    %bl,%bl
    f108:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
    f10f:	e8 00 00 00 00       	callq  f114 <netif_napi_add+0x23c>
			f110: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f114:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f118:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f11e:	4c 89 e2             	mov    %r12,%rdx
    f121:	4c 89 ee             	mov    %r13,%rsi
    f124:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f127: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f12b:	48 83 c1 48          	add    $0x48,%rcx
    f12f:	e8 00 00 00 00       	callq  f134 <netif_napi_add+0x25c>
			f130: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f134:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f138:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    f13c:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
    f140:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f146:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f149: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f14d:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
    f154:	48 01 d9             	add    %rbx,%rcx
    f157:	48 ff c3             	inc    %rbx
    f15a:	e8 00 00 00 00       	callq  f15f <netif_napi_add+0x287>
			f15b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f15f:	48 83 fb 20          	cmp    $0x20,%rbx
    f163:	75 cf                	jne    f134 <netif_napi_add+0x25c>
    f165:	30 db                	xor    %bl,%bl
    f167:	48 89 d9             	mov    %rbx,%rcx
    f16a:	48 03 4d a8          	add    0xffffffffffffffa8(%rbp),%rcx
    f16e:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    f172:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    f176:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f17c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f17f: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f183:	4c 89 e2             	mov    %r12,%rdx
    f186:	48 ff c3             	inc    %rbx
    f189:	4c 89 ee             	mov    %r13,%rsi
    f18c:	e8 00 00 00 00       	callq  f191 <netif_napi_add+0x2b9>
			f18d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f191:	48 83 fb 10          	cmp    $0x10,%rbx
    f195:	75 d0                	jne    f167 <netif_napi_add+0x28f>
    f197:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f19b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f1a1:	4c 89 e2             	mov    %r12,%rdx
    f1a4:	4c 89 ee             	mov    %r13,%rsi
    f1a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f1aa: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f1ae:	30 db                	xor    %bl,%bl
    f1b0:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
    f1b7:	e8 00 00 00 00       	callq  f1bc <netif_napi_add+0x2e4>
			f1b8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f1bc:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f1c0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f1c6:	4c 89 e2             	mov    %r12,%rdx
    f1c9:	4c 89 ee             	mov    %r13,%rsi
    f1cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f1cf: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f1d3:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
    f1da:	e8 00 00 00 00       	callq  f1df <netif_napi_add+0x307>
			f1db: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f1df:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f1e3:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    f1e7:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    f1eb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f1f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f1f4: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f1f8:	4c 89 e2             	mov    %r12,%rdx
    f1fb:	4c 89 ee             	mov    %r13,%rsi
    f1fe:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
    f205:	48 01 d9             	add    %rbx,%rcx
    f208:	48 ff c3             	inc    %rbx
    f20b:	e8 00 00 00 00       	callq  f210 <netif_napi_add+0x338>
			f20c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f210:	48 83 fb 14          	cmp    $0x14,%rbx
    f214:	75 c9                	jne    f1df <netif_napi_add+0x307>
    f216:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f21a:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
    f21e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f224:	4c 89 e2             	mov    %r12,%rdx
    f227:	4c 89 ee             	mov    %r13,%rsi
    f22a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f22d: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f231:	48 89 d9             	mov    %rbx,%rcx
    f234:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
    f23a:	83 e0 01             	and    $0x1,%eax
    f23d:	0f b6 c0             	movzbl %al,%eax
    f240:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    f243:	e8 00 00 00 00       	callq  f248 <netif_napi_add+0x370>
			f244: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f248:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f24c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f252:	48 89 d9             	mov    %rbx,%rcx
    f255:	4c 89 e2             	mov    %r12,%rdx
    f258:	4c 89 ee             	mov    %r13,%rsi
    f25b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f25e: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f262:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
    f268:	d0 e8                	shr    %al
    f26a:	83 e0 01             	and    $0x1,%eax
    f26d:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    f270:	e8 00 00 00 00       	callq  f275 <netif_napi_add+0x39d>
			f271: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f275:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f279:	4c 89 e2             	mov    %r12,%rdx
    f27c:	4c 89 ee             	mov    %r13,%rsi
    f27f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f282: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f286:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
    f28d:	e8 00 00 00 00       	callq  f292 <netif_napi_add+0x3ba>
			f28e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f292:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f296:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
    f29d:	48 85 c0             	test   %rax,%rax
    f2a0:	0f 84 bb 00 00 00    	je     f361 <netif_napi_add+0x489>
    f2a6:	48 8d 48 18          	lea    0x18(%rax),%rcx
    f2aa:	4c 89 e2             	mov    %r12,%rdx
    f2ad:	4c 89 ee             	mov    %r13,%rsi
    f2b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f2b3: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f2b7:	e8 00 00 00 00       	callq  f2bc <netif_napi_add+0x3e4>
			f2b8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f2bc:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f2c0:	4c 89 e2             	mov    %r12,%rdx
    f2c3:	4c 89 ee             	mov    %r13,%rsi
    f2c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f2c9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f2cd:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    f2d4:	48 83 c1 20          	add    $0x20,%rcx
    f2d8:	e8 00 00 00 00       	callq  f2dd <netif_napi_add+0x405>
			f2d9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f2dd:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f2e1:	4c 89 e2             	mov    %r12,%rdx
    f2e4:	4c 89 ee             	mov    %r13,%rsi
    f2e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f2ea: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f2ee:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    f2f5:	48 83 c1 30          	add    $0x30,%rcx
    f2f9:	e8 00 00 00 00       	callq  f2fe <netif_napi_add+0x426>
			f2fa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f2fe:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f302:	4c 89 e2             	mov    %r12,%rdx
    f305:	4c 89 ee             	mov    %r13,%rsi
    f308:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f30b: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f30f:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    f316:	48 83 c1 10          	add    $0x10,%rcx
    f31a:	e8 00 00 00 00       	callq  f31f <netif_napi_add+0x447>
			f31b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f31f:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f323:	4c 89 e2             	mov    %r12,%rdx
    f326:	4c 89 ee             	mov    %r13,%rsi
    f329:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f32c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f330:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    f337:	48 83 c1 28          	add    $0x28,%rcx
    f33b:	e8 00 00 00 00       	callq  f340 <netif_napi_add+0x468>
			f33c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f340:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f344:	4c 89 e2             	mov    %r12,%rdx
    f347:	4c 89 ee             	mov    %r13,%rsi
    f34a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f34d: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f351:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    f358:	48 83 c1 08          	add    $0x8,%rcx
    f35c:	e8 00 00 00 00       	callq  f361 <netif_napi_add+0x489>
			f35d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f361:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f365:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f36b:	4c 89 e2             	mov    %r12,%rdx
    f36e:	4c 89 ee             	mov    %r13,%rsi
    f371:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f374: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f378:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
    f37f:	e8 00 00 00 00       	callq  f384 <netif_napi_add+0x4ac>
			f380: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f384:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f388:	4c 89 e2             	mov    %r12,%rdx
    f38b:	4c 89 ee             	mov    %r13,%rsi
    f38e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f391: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f395:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
    f39c:	e8 00 00 00 00       	callq  f3a1 <netif_napi_add+0x4c9>
			f39d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f3a1:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f3a5:	4c 89 e2             	mov    %r12,%rdx
    f3a8:	4c 89 ee             	mov    %r13,%rsi
    f3ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f3ae: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f3b2:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
    f3b9:	e8 00 00 00 00       	callq  f3be <netif_napi_add+0x4e6>
			f3ba: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f3be:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f3c2:	4c 89 e2             	mov    %r12,%rdx
    f3c5:	4c 89 ee             	mov    %r13,%rsi
    f3c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f3cb: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f3cf:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
    f3d6:	e8 00 00 00 00       	callq  f3db <netif_napi_add+0x503>
			f3d7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f3db:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f3df:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
    f3e6:	48 85 c9             	test   %rcx,%rcx
    f3e9:	74 18                	je     f403 <netif_napi_add+0x52b>
    f3eb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f3f1:	4c 89 e2             	mov    %r12,%rdx
    f3f4:	4c 89 ee             	mov    %r13,%rsi
    f3f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f3fa: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f3fe:	e8 00 00 00 00       	callq  f403 <netif_napi_add+0x52b>
			f3ff: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f403:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f407:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f40d:	4c 89 e2             	mov    %r12,%rdx
    f410:	4c 89 ee             	mov    %r13,%rsi
    f413:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f416: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f41a:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
    f421:	e8 00 00 00 00       	callq  f426 <netif_napi_add+0x54e>
			f422: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f426:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f42a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f430:	4c 89 e2             	mov    %r12,%rdx
    f433:	4c 89 ee             	mov    %r13,%rsi
    f436:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f439: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f43d:	48 83 c1 70          	add    $0x70,%rcx
    f441:	e8 00 00 00 00       	callq  f446 <netif_napi_add+0x56e>
			f442: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f446:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f44a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f450:	4c 89 e2             	mov    %r12,%rdx
    f453:	4c 89 ee             	mov    %r13,%rsi
    f456:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f459: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f45d:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
    f464:	e8 00 00 00 00       	callq  f469 <netif_napi_add+0x591>
			f465: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f469:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f46d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f473:	4c 89 e2             	mov    %r12,%rdx
    f476:	4c 89 ee             	mov    %r13,%rsi
    f479:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f47c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f480:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
    f487:	e8 00 00 00 00       	callq  f48c <netif_napi_add+0x5b4>
			f488: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f48c:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f490:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f496:	4c 89 e2             	mov    %r12,%rdx
    f499:	4c 89 ee             	mov    %r13,%rsi
    f49c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f49f: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f4a3:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
    f4aa:	e8 00 00 00 00       	callq  f4af <netif_napi_add+0x5d7>
			f4ab: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f4af:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f4b3:	4c 89 e2             	mov    %r12,%rdx
    f4b6:	4c 89 ee             	mov    %r13,%rsi
    f4b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f4bc: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f4c0:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    f4c7:	e8 00 00 00 00       	callq  f4cc <netif_napi_add+0x5f4>
			f4c8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f4cc:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f4d0:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    f4d7:	00 
    f4d8:	74 5a                	je     f534 <netif_napi_add+0x65c>
    f4da:	31 db                	xor    %ebx,%ebx
    f4dc:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f4e0:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    f4e4:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    f4e8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f4ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f4f1: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f4f5:	4c 89 e2             	mov    %r12,%rdx
    f4f8:	4c 89 ee             	mov    %r13,%rsi
    f4fb:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    f502:	48 83 c1 08          	add    $0x8,%rcx
    f506:	48 01 d9             	add    %rbx,%rcx
    f509:	48 ff c3             	inc    %rbx
    f50c:	e8 00 00 00 00       	callq  f511 <netif_napi_add+0x639>
			f50d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f511:	48 83 fb 20          	cmp    $0x20,%rbx
    f515:	75 c5                	jne    f4dc <netif_napi_add+0x604>
    f517:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f51b:	4c 89 e2             	mov    %r12,%rdx
    f51e:	4c 89 ee             	mov    %r13,%rsi
    f521:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f524: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f528:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    f52f:	e8 00 00 00 00       	callq  f534 <netif_napi_add+0x65c>
			f530: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f534:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f538:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    f53c:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
    f540:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f543: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f547:	48 89 da             	mov    %rbx,%rdx
    f54a:	4c 89 e6             	mov    %r12,%rsi
    f54d:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    f554:	e8 00 00 00 00       	callq  f559 <netif_napi_add+0x681>
			f555: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f559:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f55d:	48 89 da             	mov    %rbx,%rdx
    f560:	4c 89 e6             	mov    %r12,%rsi
    f563:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f566: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f56a:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    f571:	e8 00 00 00 00       	callq  f576 <netif_napi_add+0x69e>
			f572: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f576:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f57a:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    f581:	48 85 c0             	test   %rax,%rax
    f584:	74 37                	je     f5bd <netif_napi_add+0x6e5>
    f586:	48 8d 48 60          	lea    0x60(%rax),%rcx
    f58a:	48 89 da             	mov    %rbx,%rdx
    f58d:	4c 89 e6             	mov    %r12,%rsi
    f590:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f593: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f597:	e8 00 00 00 00       	callq  f59c <netif_napi_add+0x6c4>
			f598: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f59c:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f5a0:	48 89 da             	mov    %rbx,%rdx
    f5a3:	4c 89 e6             	mov    %r12,%rsi
    f5a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f5a9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f5ad:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    f5b4:	48 83 c1 58          	add    $0x58,%rcx
    f5b8:	e8 00 00 00 00       	callq  f5bd <netif_napi_add+0x6e5>
			f5b9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f5bd:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f5c1:	48 89 da             	mov    %rbx,%rdx
    f5c4:	4c 89 e6             	mov    %r12,%rsi
    f5c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f5ca: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f5ce:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    f5d5:	e8 00 00 00 00       	callq  f5da <netif_napi_add+0x702>
			f5d6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f5da:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f5de:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
    f5e5:	48 85 c0             	test   %rax,%rax
    f5e8:	74 3d                	je     f627 <netif_napi_add+0x74f>
    f5ea:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f5ee:	48 89 da             	mov    %rbx,%rdx
    f5f1:	4c 89 e6             	mov    %r12,%rsi
    f5f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f5f7: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f5fb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f601:	e8 00 00 00 00       	callq  f606 <netif_napi_add+0x72e>
			f602: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f606:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f60a:	48 89 da             	mov    %rbx,%rdx
    f60d:	4c 89 e6             	mov    %r12,%rsi
    f610:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f613: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f617:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    f61e:	48 83 c1 08          	add    $0x8,%rcx
    f622:	e8 00 00 00 00       	callq  f627 <netif_napi_add+0x74f>
			f623: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f627:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
    f62b:	48 89 da             	mov    %rbx,%rdx
    f62e:	4c 89 e6             	mov    %r12,%rsi
    f631:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f634: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f638:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    f63f:	e8 00 00 00 00       	callq  f644 <netif_napi_add+0x76c>
			f640: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f644:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f648:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    f64f:	00 
    f650:	74 5a                	je     f6ac <netif_napi_add+0x7d4>
    f652:	31 db                	xor    %ebx,%ebx
    f654:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f658:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
    f65c:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
    f660:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f666:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f669: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f66d:	4c 89 e2             	mov    %r12,%rdx
    f670:	4c 89 ee             	mov    %r13,%rsi
    f673:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    f67a:	48 83 c1 08          	add    $0x8,%rcx
    f67e:	48 01 d9             	add    %rbx,%rcx
    f681:	48 ff c3             	inc    %rbx
    f684:	e8 00 00 00 00       	callq  f689 <netif_napi_add+0x7b1>
			f685: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f689:	48 83 fb 20          	cmp    $0x20,%rbx
    f68d:	75 c5                	jne    f654 <netif_napi_add+0x77c>
    f68f:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
    f693:	4c 89 e2             	mov    %r12,%rdx
    f696:	4c 89 ee             	mov    %r13,%rsi
    f699:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f69c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f6a0:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    f6a7:	e8 00 00 00 00       	callq  f6ac <netif_napi_add+0x7d4>
			f6a8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f6ac:	4c 8d 6d a0          	lea    0xffffffffffffffa0(%rbp),%r13
    f6b0:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    f6b4:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
    f6b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f6bb: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f6bf:	4c 89 e9             	mov    %r13,%rcx
    f6c2:	48 89 da             	mov    %rbx,%rdx
    f6c5:	4c 89 e6             	mov    %r12,%rsi
    f6c8:	e8 00 00 00 00       	callq  f6cd <netif_napi_add+0x7f5>
			f6c9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f6cd:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    f6d1:	48 85 c0             	test   %rax,%rax
    f6d4:	74 1c                	je     f6f2 <netif_napi_add+0x81a>
    f6d6:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f6da:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    f6e0:	48 89 da             	mov    %rbx,%rdx
    f6e3:	4c 89 e6             	mov    %r12,%rsi
    f6e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f6e9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f6ed:	e8 00 00 00 00       	callq  f6f2 <netif_napi_add+0x81a>
			f6ee: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f6f2:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
    f6f6:	4c 89 e6             	mov    %r12,%rsi
    f6f9:	48 89 da             	mov    %rbx,%rdx
    f6fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f6ff: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f703:	e8 00 00 00 00       	callq  f708 <netif_napi_add+0x830>
			f704: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
    f708:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
    f70c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    f712:	48 89 da             	mov    %rbx,%rdx
    f715:	4c 89 e6             	mov    %r12,%rsi
    f718:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f71b: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f71f:	e8 00 00 00 00       	callq  f724 <netif_napi_add+0x84c>
			f720: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
    f724:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
    f728:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
    f72c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f72f: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f733:	48 c7 45 80 e5 05 00 	movq   $0x5e5,0xffffffffffffff80(%rbp)
    f73a:	00 
    f73b:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
    f73f:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
    f742:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
    f745:	e8 00 00 00 00       	callq  f74a <netif_napi_add+0x872>
			f746: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
    f74a:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
    f751:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f754: R_X86_64_32S	.rodata.str1.1+0x1df1
    f758:	4c 89 75 a0          	mov    %r14,0xffffffffffffffa0(%rbp)
    f75c:	4c 89 7d a8          	mov    %r15,0xffffffffffffffa8(%rbp)
    f760:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
    f764:	8b 85 74 ff ff ff    	mov    0xffffffffffffff74(%rbp),%eax
    f76a:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
    f76d:	e8 00 00 00 00       	callq  f772 <netif_napi_add+0x89a>
			f76e: R_X86_64_PC32	record_function+0xfffffffffffffffc
    f772:	4c 8b 65 90          	mov    0xffffffffffffff90(%rbp),%r12
    f776:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f779: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f77d:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    f783:	4c 89 e9             	mov    %r13,%rcx
    f786:	48 89 da             	mov    %rbx,%rdx
    f789:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
    f790:	4c 89 e6             	mov    %r12,%rsi
    f793:	e8 00 00 00 00       	callq  f798 <netif_napi_add+0x8c0>
			f794: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    f798:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    f79c:	48 85 ff             	test   %rdi,%rdi
    f79f:	0f 84 db 07 00 00    	je     ff80 <netif_napi_add+0x10a8>
    f7a5:	ba 08 00 00 00       	mov    $0x8,%edx
    f7aa:	be 10 03 00 00       	mov    $0x310,%esi
    f7af:	e8 00 00 00 00       	callq  f7b4 <netif_napi_add+0x8dc>
			f7b0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    f7b4:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f7b8:	48 89 da             	mov    %rbx,%rdx
    f7bb:	b9 08 00 00 00       	mov    $0x8,%ecx
    f7c0:	4c 89 e6             	mov    %r12,%rsi
    f7c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f7c6: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f7ca:	49 81 c0 10 03 00 00 	add    $0x310,%r8
    f7d1:	e8 00 00 00 00       	callq  f7d6 <netif_napi_add+0x8fe>
			f7d2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f7d6:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f7da:	48 89 da             	mov    %rbx,%rdx
    f7dd:	b9 02 00 00 00       	mov    $0x2,%ecx
    f7e2:	4c 89 e6             	mov    %r12,%rsi
    f7e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f7e8: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f7ec:	49 81 c0 70 01 00 00 	add    $0x170,%r8
    f7f3:	e8 00 00 00 00       	callq  f7f8 <netif_napi_add+0x920>
			f7f4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f7f8:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f7fc:	48 89 da             	mov    %rbx,%rdx
    f7ff:	b9 08 00 00 00       	mov    $0x8,%ecx
    f804:	4c 89 e6             	mov    %r12,%rsi
    f807:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f80a: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f80e:	49 81 c0 48 03 00 00 	add    $0x348,%r8
    f815:	e8 00 00 00 00       	callq  f81a <netif_napi_add+0x942>
			f816: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f81a:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f81e:	48 89 da             	mov    %rbx,%rdx
    f821:	b9 04 00 00 00       	mov    $0x4,%ecx
    f826:	4c 89 e6             	mov    %r12,%rsi
    f829:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f82c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f830:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
    f837:	e8 00 00 00 00       	callq  f83c <netif_napi_add+0x964>
			f838: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f83c:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f840:	48 89 da             	mov    %rbx,%rdx
    f843:	b9 04 00 00 00       	mov    $0x4,%ecx
    f848:	4c 89 e6             	mov    %r12,%rsi
    f84b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f84e: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f852:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
    f859:	e8 00 00 00 00       	callq  f85e <netif_napi_add+0x986>
			f85a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f85e:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    f862:	48 89 da             	mov    %rbx,%rdx
    f865:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f86b:	4c 89 e6             	mov    %r12,%rsi
    f86e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f871: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f875:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
    f87c:	e8 00 00 00 00       	callq  f881 <netif_napi_add+0x9a9>
			f87d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    f881:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    f885:	48 89 da             	mov    %rbx,%rdx
    f888:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f88e:	4c 89 e6             	mov    %r12,%rsi
    f891:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f894: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f898:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
    f89f:	e8 00 00 00 00       	callq  f8a4 <netif_napi_add+0x9cc>
			f8a0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    f8a4:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    f8a8:	48 89 da             	mov    %rbx,%rdx
    f8ab:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f8b1:	4c 89 e6             	mov    %r12,%rsi
    f8b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f8b7: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f8bb:	31 db                	xor    %ebx,%ebx
    f8bd:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
    f8c4:	e8 00 00 00 00       	callq  f8c9 <netif_napi_add+0x9f1>
			f8c5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    f8c9:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f8cd:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    f8d1:	b9 01 00 00 00       	mov    $0x1,%ecx
    f8d6:	4c 89 e6             	mov    %r12,%rsi
    f8d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f8dc: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f8e0:	49 81 c0 60 02 00 00 	add    $0x260,%r8
    f8e7:	49 01 d8             	add    %rbx,%r8
    f8ea:	48 ff c3             	inc    %rbx
    f8ed:	e8 00 00 00 00       	callq  f8f2 <netif_napi_add+0xa1a>
			f8ee: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f8f2:	48 83 fb 20          	cmp    $0x20,%rbx
    f8f6:	75 d1                	jne    f8c9 <netif_napi_add+0x9f1>
    f8f8:	30 db                	xor    %bl,%bl
    f8fa:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f8fe:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    f902:	b9 01 00 00 00       	mov    $0x1,%ecx
    f907:	4c 89 e6             	mov    %r12,%rsi
    f90a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f90d: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f911:	4c 89 ea             	mov    %r13,%rdx
    f914:	49 81 c0 80 01 00 00 	add    $0x180,%r8
    f91b:	49 01 d8             	add    %rbx,%r8
    f91e:	48 ff c3             	inc    %rbx
    f921:	e8 00 00 00 00       	callq  f926 <netif_napi_add+0xa4e>
			f922: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f926:	48 83 fb 20          	cmp    $0x20,%rbx
    f92a:	75 ce                	jne    f8fa <netif_napi_add+0xa22>
    f92c:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f930:	b9 02 00 00 00       	mov    $0x2,%ecx
    f935:	4c 89 ea             	mov    %r13,%rdx
    f938:	4c 89 e6             	mov    %r12,%rsi
    f93b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f93e: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f942:	30 db                	xor    %bl,%bl
    f944:	49 81 c0 72 01 00 00 	add    $0x172,%r8
    f94b:	e8 00 00 00 00       	callq  f950 <netif_napi_add+0xa78>
			f94c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f950:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    f954:	ba 08 00 00 00       	mov    $0x8,%edx
    f959:	be 48 00 00 00       	mov    $0x48,%esi
    f95e:	e8 00 00 00 00       	callq  f963 <netif_napi_add+0xa8b>
			f95f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    f963:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f967:	b9 08 00 00 00       	mov    $0x8,%ecx
    f96c:	4c 89 ea             	mov    %r13,%rdx
    f96f:	4c 89 e6             	mov    %r12,%rsi
    f972:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f975: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f979:	49 83 c0 48          	add    $0x48,%r8
    f97d:	e8 00 00 00 00       	callq  f982 <netif_napi_add+0xaaa>
			f97e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f982:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f986:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
    f98a:	b9 01 00 00 00       	mov    $0x1,%ecx
    f98f:	4c 89 e6             	mov    %r12,%rsi
    f992:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f995: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f999:	49 81 c0 40 02 00 00 	add    $0x240,%r8
    f9a0:	49 01 d8             	add    %rbx,%r8
    f9a3:	48 ff c3             	inc    %rbx
    f9a6:	e8 00 00 00 00       	callq  f9ab <netif_napi_add+0xad3>
			f9a7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f9ab:	48 83 fb 20          	cmp    $0x20,%rbx
    f9af:	75 d1                	jne    f982 <netif_napi_add+0xaaa>
    f9b1:	30 db                	xor    %bl,%bl
    f9b3:	49 89 d8             	mov    %rbx,%r8
    f9b6:	4c 03 45 a0          	add    0xffffffffffffffa0(%rbp),%r8
    f9ba:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    f9be:	b9 01 00 00 00       	mov    $0x1,%ecx
    f9c3:	4c 89 e6             	mov    %r12,%rsi
    f9c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f9c9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    f9cd:	4c 89 ea             	mov    %r13,%rdx
    f9d0:	48 ff c3             	inc    %rbx
    f9d3:	e8 00 00 00 00       	callq  f9d8 <netif_napi_add+0xb00>
			f9d4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    f9d8:	48 83 fb 10          	cmp    $0x10,%rbx
    f9dc:	75 d5                	jne    f9b3 <netif_napi_add+0xadb>
    f9de:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    f9e2:	ba 10 00 00 00       	mov    $0x10,%edx
    f9e7:	be 18 04 00 00       	mov    $0x418,%esi
    f9ec:	30 db                	xor    %bl,%bl
    f9ee:	e8 00 00 00 00       	callq  f9f3 <netif_napi_add+0xb1b>
			f9ef: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    f9f3:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    f9f7:	b9 01 00 00 00       	mov    $0x1,%ecx
    f9fc:	4c 89 ea             	mov    %r13,%rdx
    f9ff:	4c 89 e6             	mov    %r12,%rsi
    fa02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fa05: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fa09:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
    fa10:	e8 00 00 00 00       	callq  fa15 <netif_napi_add+0xb3d>
			fa11: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fa15:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fa19:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    fa1d:	b9 01 00 00 00       	mov    $0x1,%ecx
    fa22:	4c 89 e6             	mov    %r12,%rsi
    fa25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fa28: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fa2c:	4c 89 ea             	mov    %r13,%rdx
    fa2f:	49 81 c0 60 05 00 00 	add    $0x560,%r8
    fa36:	49 01 d8             	add    %rbx,%r8
    fa39:	48 ff c3             	inc    %rbx
    fa3c:	e8 00 00 00 00       	callq  fa41 <netif_napi_add+0xb69>
			fa3d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fa41:	48 83 fb 14          	cmp    $0x14,%rbx
    fa45:	75 ce                	jne    fa15 <netif_napi_add+0xb3d>
    fa47:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
    fa4b:	b9 04 00 00 00       	mov    $0x4,%ecx
    fa50:	4c 89 ea             	mov    %r13,%rdx
    fa53:	4c 89 e6             	mov    %r12,%rsi
    fa56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fa59: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fa5d:	49 89 d8             	mov    %rbx,%r8
    fa60:	e8 00 00 00 00       	callq  fa65 <netif_napi_add+0xb8d>
			fa61: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fa65:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fa69:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
    fa6c:	49 89 d8             	mov    %rbx,%r8
    fa6f:	4c 89 e6             	mov    %r12,%rsi
    fa72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fa75: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fa79:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
    fa7f:	83 e2 01             	and    $0x1,%edx
    fa82:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
    fa85:	09 d0                	or     %edx,%eax
    fa87:	4c 89 ea             	mov    %r13,%rdx
    fa8a:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
    fa90:	b9 04 00 00 00       	mov    $0x4,%ecx
    fa95:	e8 00 00 00 00       	callq  fa9a <netif_napi_add+0xbc2>
			fa96: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fa9a:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fa9e:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
    faa1:	41 b8 78 00 00 00    	mov    $0x78,%r8d
    faa7:	4c 89 e6             	mov    %r12,%rsi
    faaa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			faad: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fab1:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
    fab7:	83 e2 01             	and    $0x1,%edx
    faba:	01 d2                	add    %edx,%edx
    fabc:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
    fabf:	09 d0                	or     %edx,%eax
    fac1:	4c 89 ea             	mov    %r13,%rdx
    fac4:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
    faca:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    face:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
    fad5:	e8 00 00 00 00       	callq  fada <netif_napi_add+0xc02>
			fad6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fada:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fade:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
    fae5:	48 85 c0             	test   %rax,%rax
    fae8:	0f 84 df 00 00 00    	je     fbcd <netif_napi_add+0xcf5>
    faee:	48 8d 48 18          	lea    0x18(%rax),%rcx
    faf2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    faf8:	4c 89 ea             	mov    %r13,%rdx
    fafb:	4c 89 e6             	mov    %r12,%rsi
    fafe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fb01: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fb05:	e8 00 00 00 00       	callq  fb0a <netif_napi_add+0xc32>
			fb06: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fb0a:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fb0e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fb14:	4c 89 ea             	mov    %r13,%rdx
    fb17:	4c 89 e6             	mov    %r12,%rsi
    fb1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fb1d: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fb21:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    fb28:	48 83 c1 20          	add    $0x20,%rcx
    fb2c:	e8 00 00 00 00       	callq  fb31 <netif_napi_add+0xc59>
			fb2d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fb31:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fb35:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fb3b:	4c 89 ea             	mov    %r13,%rdx
    fb3e:	4c 89 e6             	mov    %r12,%rsi
    fb41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fb44: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fb48:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    fb4f:	48 83 c1 30          	add    $0x30,%rcx
    fb53:	e8 00 00 00 00       	callq  fb58 <netif_napi_add+0xc80>
			fb54: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fb58:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fb5c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fb62:	4c 89 ea             	mov    %r13,%rdx
    fb65:	4c 89 e6             	mov    %r12,%rsi
    fb68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fb6b: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fb6f:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    fb76:	48 83 c1 10          	add    $0x10,%rcx
    fb7a:	e8 00 00 00 00       	callq  fb7f <netif_napi_add+0xca7>
			fb7b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fb7f:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fb83:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fb89:	4c 89 ea             	mov    %r13,%rdx
    fb8c:	4c 89 e6             	mov    %r12,%rsi
    fb8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fb92: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fb96:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    fb9d:	48 83 c1 28          	add    $0x28,%rcx
    fba1:	e8 00 00 00 00       	callq  fba6 <netif_napi_add+0xcce>
			fba2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fba6:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fbaa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fbb0:	4c 89 ea             	mov    %r13,%rdx
    fbb3:	4c 89 e6             	mov    %r12,%rsi
    fbb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fbb9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fbbd:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
    fbc4:	48 83 c1 08          	add    $0x8,%rcx
    fbc8:	e8 00 00 00 00       	callq  fbcd <netif_napi_add+0xcf5>
			fbc9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fbcd:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fbd1:	b9 08 00 00 00       	mov    $0x8,%ecx
    fbd6:	4c 89 ea             	mov    %r13,%rdx
    fbd9:	4c 89 e6             	mov    %r12,%rsi
    fbdc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fbdf: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fbe3:	49 81 c0 20 06 00 00 	add    $0x620,%r8
    fbea:	e8 00 00 00 00       	callq  fbef <netif_napi_add+0xd17>
			fbeb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fbef:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fbf3:	41 b8 00 08 00 00    	mov    $0x800,%r8d
    fbf9:	4c 89 ea             	mov    %r13,%rdx
    fbfc:	4c 89 e6             	mov    %r12,%rsi
    fbff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fc02: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fc06:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
    fc0d:	e8 00 00 00 00       	callq  fc12 <netif_napi_add+0xd3a>
			fc0e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fc12:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fc16:	41 b8 78 02 00 00    	mov    $0x278,%r8d
    fc1c:	4c 89 ea             	mov    %r13,%rdx
    fc1f:	4c 89 e6             	mov    %r12,%rsi
    fc22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fc25: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fc29:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
    fc30:	e8 00 00 00 00       	callq  fc35 <netif_napi_add+0xd5d>
			fc31: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fc35:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fc39:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    fc3f:	4c 89 ea             	mov    %r13,%rdx
    fc42:	4c 89 e6             	mov    %r12,%rsi
    fc45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fc48: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fc4c:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
    fc53:	e8 00 00 00 00       	callq  fc58 <netif_napi_add+0xd80>
			fc54: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fc58:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fc5c:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
    fc63:	48 85 c0             	test   %rax,%rax
    fc66:	74 1a                	je     fc82 <netif_napi_add+0xdaa>
    fc68:	49 89 c0             	mov    %rax,%r8
    fc6b:	b9 08 00 00 00       	mov    $0x8,%ecx
    fc70:	4c 89 ea             	mov    %r13,%rdx
    fc73:	4c 89 e6             	mov    %r12,%rsi
    fc76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fc79: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fc7d:	e8 00 00 00 00       	callq  fc82 <netif_napi_add+0xdaa>
			fc7e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fc82:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fc86:	b9 04 00 00 00       	mov    $0x4,%ecx
    fc8b:	4c 89 ea             	mov    %r13,%rdx
    fc8e:	4c 89 e6             	mov    %r12,%rsi
    fc91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fc94: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fc98:	49 81 c0 30 04 00 00 	add    $0x430,%r8
    fc9f:	e8 00 00 00 00       	callq  fca4 <netif_napi_add+0xdcc>
			fca0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fca4:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fca8:	b9 08 00 00 00       	mov    $0x8,%ecx
    fcad:	4c 89 ea             	mov    %r13,%rdx
    fcb0:	4c 89 e6             	mov    %r12,%rsi
    fcb3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fcb6: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fcba:	49 83 c0 70          	add    $0x70,%r8
    fcbe:	e8 00 00 00 00       	callq  fcc3 <netif_napi_add+0xdeb>
			fcbf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fcc3:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
    fcc7:	ba 10 00 00 00       	mov    $0x10,%edx
    fccc:	be 10 00 00 00       	mov    $0x10,%esi
    fcd1:	e8 00 00 00 00       	callq  fcd6 <netif_napi_add+0xdfe>
			fcd2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    fcd6:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fcda:	b9 04 00 00 00       	mov    $0x4,%ecx
    fcdf:	4c 89 ea             	mov    %r13,%rdx
    fce2:	4c 89 e6             	mov    %r12,%rsi
    fce5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fce8: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fcec:	49 81 c0 50 03 00 00 	add    $0x350,%r8
    fcf3:	e8 00 00 00 00       	callq  fcf8 <netif_napi_add+0xe20>
			fcf4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fcf8:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fcfc:	b9 08 00 00 00       	mov    $0x8,%ecx
    fd01:	4c 89 ea             	mov    %r13,%rdx
    fd04:	4c 89 e6             	mov    %r12,%rsi
    fd07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fd0a: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fd0e:	49 81 c0 00 07 00 00 	add    $0x700,%r8
    fd15:	e8 00 00 00 00       	callq  fd1a <netif_napi_add+0xe42>
			fd16: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fd1a:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
    fd1e:	b9 04 00 00 00       	mov    $0x4,%ecx
    fd23:	4c 89 ea             	mov    %r13,%rdx
    fd26:	4c 89 e6             	mov    %r12,%rsi
    fd29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fd2c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fd30:	49 81 c0 60 01 00 00 	add    $0x160,%r8
    fd37:	e8 00 00 00 00       	callq  fd3c <netif_napi_add+0xe64>
			fd38: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fd3c:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fd40:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    fd46:	4c 89 ea             	mov    %r13,%rdx
    fd49:	4c 89 e6             	mov    %r12,%rsi
    fd4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fd4f: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fd53:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
    fd5a:	e8 00 00 00 00       	callq  fd5f <netif_napi_add+0xe87>
			fd5b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fd5f:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fd63:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
    fd6a:	00 
    fd6b:	74 5b                	je     fdc8 <netif_napi_add+0xef0>
    fd6d:	31 db                	xor    %ebx,%ebx
    fd6f:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fd73:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    fd77:	b9 01 00 00 00       	mov    $0x1,%ecx
    fd7c:	4c 89 e6             	mov    %r12,%rsi
    fd7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fd82: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fd86:	4c 89 ea             	mov    %r13,%rdx
    fd89:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
    fd90:	49 83 c0 08          	add    $0x8,%r8
    fd94:	49 01 d8             	add    %rbx,%r8
    fd97:	48 ff c3             	inc    %rbx
    fd9a:	e8 00 00 00 00       	callq  fd9f <netif_napi_add+0xec7>
			fd9b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fd9f:	48 83 fb 20          	cmp    $0x20,%rbx
    fda3:	75 ca                	jne    fd6f <netif_napi_add+0xe97>
    fda5:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fda9:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    fdaf:	4c 89 ea             	mov    %r13,%rdx
    fdb2:	4c 89 e6             	mov    %r12,%rsi
    fdb5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fdb8: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fdbc:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
    fdc3:	e8 00 00 00 00       	callq  fdc8 <netif_napi_add+0xef0>
			fdc4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fdc8:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fdcc:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    fdd0:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
    fdd6:	4c 89 e6             	mov    %r12,%rsi
    fdd9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fddc: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fde0:	48 89 da             	mov    %rbx,%rdx
    fde3:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
    fdea:	e8 00 00 00 00       	callq  fdef <netif_napi_add+0xf17>
			fdeb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fdef:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fdf3:	41 b8 68 01 00 00    	mov    $0x168,%r8d
    fdf9:	48 89 da             	mov    %rbx,%rdx
    fdfc:	4c 89 e6             	mov    %r12,%rsi
    fdff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fe02: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fe06:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
    fe0d:	e8 00 00 00 00       	callq  fe12 <netif_napi_add+0xf3a>
			fe0e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fe12:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fe16:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    fe1d:	48 85 c0             	test   %rax,%rax
    fe20:	74 43                	je     fe65 <netif_napi_add+0xf8d>
    fe22:	48 8d 48 60          	lea    0x60(%rax),%rcx
    fe26:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fe2c:	48 89 da             	mov    %rbx,%rdx
    fe2f:	4c 89 e6             	mov    %r12,%rsi
    fe32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fe35: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fe39:	e8 00 00 00 00       	callq  fe3e <netif_napi_add+0xf66>
			fe3a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fe3e:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fe42:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    fe48:	48 89 da             	mov    %rbx,%rdx
    fe4b:	4c 89 e6             	mov    %r12,%rsi
    fe4e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fe51: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fe55:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
    fe5c:	48 83 c1 58          	add    $0x58,%rcx
    fe60:	e8 00 00 00 00       	callq  fe65 <netif_napi_add+0xf8d>
			fe61: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fe65:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fe69:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fe6c: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fe70:	41 b8 80 00 00 00    	mov    $0x80,%r8d
    fe76:	48 89 da             	mov    %rbx,%rdx
    fe79:	4c 89 e6             	mov    %r12,%rsi
    fe7c:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
    fe83:	e8 00 00 00 00       	callq  fe88 <netif_napi_add+0xfb0>
			fe84: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fe88:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fe8c:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
    fe93:	48 85 ff             	test   %rdi,%rdi
    fe96:	74 5c                	je     fef4 <netif_napi_add+0x101c>
    fe98:	ba 08 00 00 00       	mov    $0x8,%edx
    fe9d:	be 10 00 00 00       	mov    $0x10,%esi
    fea2:	e8 00 00 00 00       	callq  fea7 <netif_napi_add+0xfcf>
			fea3: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    fea7:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    feab:	b9 08 00 00 00       	mov    $0x8,%ecx
    feb0:	48 89 da             	mov    %rbx,%rdx
    feb3:	4c 89 e6             	mov    %r12,%rsi
    feb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			feb9: R_X86_64_32S	.rodata.str1.1+0x1dc5
    febd:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
    fec4:	49 83 c0 10          	add    $0x10,%r8
    fec8:	e8 00 00 00 00       	callq  fecd <netif_napi_add+0xff5>
			fec9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    fecd:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    fed1:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
    fed7:	48 89 da             	mov    %rbx,%rdx
    feda:	4c 89 e6             	mov    %r12,%rsi
    fedd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fee0: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fee4:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
    feeb:	48 83 c1 08          	add    $0x8,%rcx
    feef:	e8 00 00 00 00       	callq  fef4 <netif_napi_add+0x101c>
			fef0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fef4:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
    fef8:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    fefe:	48 89 da             	mov    %rbx,%rdx
    ff01:	4c 89 e6             	mov    %r12,%rsi
    ff04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ff07: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ff0b:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
    ff12:	e8 00 00 00 00       	callq  ff17 <netif_napi_add+0x103f>
			ff13: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ff17:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    ff1b:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
    ff22:	00 
    ff23:	74 5b                	je     ff80 <netif_napi_add+0x10a8>
    ff25:	31 db                	xor    %ebx,%ebx
    ff27:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    ff2b:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
    ff2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    ff34:	4c 89 e6             	mov    %r12,%rsi
    ff37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ff3a: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ff3e:	4c 89 ea             	mov    %r13,%rdx
    ff41:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
    ff48:	49 83 c0 08          	add    $0x8,%r8
    ff4c:	49 01 d8             	add    %rbx,%r8
    ff4f:	48 ff c3             	inc    %rbx
    ff52:	e8 00 00 00 00       	callq  ff57 <netif_napi_add+0x107f>
			ff53: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ff57:	48 83 fb 20          	cmp    $0x20,%rbx
    ff5b:	75 ca                	jne    ff27 <netif_napi_add+0x104f>
    ff5d:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
    ff61:	41 b8 38 00 00 00    	mov    $0x38,%r8d
    ff67:	4c 89 ea             	mov    %r13,%rdx
    ff6a:	4c 89 e6             	mov    %r12,%rsi
    ff6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ff70: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ff74:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
    ff7b:	e8 00 00 00 00       	callq  ff80 <netif_napi_add+0x10a8>
			ff7c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ff80:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
    ff84:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
    ff88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ff8b: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ff8f:	41 b8 88 00 00 00    	mov    $0x88,%r8d
    ff95:	4c 89 e6             	mov    %r12,%rsi
    ff98:	48 89 da             	mov    %rbx,%rdx
    ff9b:	e8 00 00 00 00       	callq  ffa0 <netif_napi_add+0x10c8>
			ff9c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    ffa0:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
    ffa4:	48 85 ff             	test   %rdi,%rdi
    ffa7:	74 2e                	je     ffd7 <netif_napi_add+0x10ff>
    ffa9:	ba 08 00 00 00       	mov    $0x8,%edx
    ffae:	be 10 00 00 00       	mov    $0x10,%esi
    ffb3:	e8 00 00 00 00       	callq  ffb8 <netif_napi_add+0x10e0>
			ffb4: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
    ffb8:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
    ffbc:	b9 08 00 00 00       	mov    $0x8,%ecx
    ffc1:	48 89 da             	mov    %rbx,%rdx
    ffc4:	4c 89 e6             	mov    %r12,%rsi
    ffc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ffca: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ffce:	49 83 c0 10          	add    $0x10,%r8
    ffd2:	e8 00 00 00 00       	callq  ffd7 <netif_napi_add+0x10ff>
			ffd3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
    ffd7:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
    ffdb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ffe1:	48 89 da             	mov    %rbx,%rdx
    ffe4:	4c 89 e6             	mov    %r12,%rsi
    ffe7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ffea: R_X86_64_32S	.rodata.str1.1+0x1dc5
    ffee:	e8 00 00 00 00       	callq  fff3 <netif_napi_add+0x111b>
			ffef: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
    fff3:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
    fff7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			fffa: R_X86_64_32S	.rodata.str1.1+0x1dc5
    fffe:	b9 04 00 00 00       	mov    $0x4,%ecx
   10003:	48 89 da             	mov    %rbx,%rdx
   10006:	4c 89 e6             	mov    %r12,%rsi
   10009:	e8 00 00 00 00       	callq  1000e <netif_napi_add+0x1136>
			1000a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1000e:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   10012:	48 85 ff             	test   %rdi,%rdi
   10015:	74 05                	je     1001c <netif_napi_add+0x1144>
   10017:	e8 00 00 00 00       	callq  1001c <netif_napi_add+0x1144>
			10018: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1001c:	48 83 c4 68          	add    $0x68,%rsp
   10020:	5b                   	pop    %rbx
   10021:	41 5c                	pop    %r12
   10023:	41 5d                	pop    %r13
   10025:	41 5e                	pop    %r14
   10027:	41 5f                	pop    %r15
   10029:	c9                   	leaveq 
   1002a:	c3                   	retq   

000000000001002b <e1000_request_irq>:
   1002b:	55                   	push   %rbp
   1002c:	48 89 e5             	mov    %rsp,%rbp
   1002f:	41 57                	push   %r15
   10031:	41 56                	push   %r14
   10033:	41 55                	push   %r13
   10035:	41 54                	push   %r12
   10037:	53                   	push   %rbx
   10038:	48 83 ec 58          	sub    $0x58,%rsp
   1003c:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
   10040:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10043: R_X86_64_32S	.rodata.str1.1+0x1e0e
   10047:	e8 00 00 00 00       	callq  1004c <e1000_request_irq+0x21>
			10048: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1004c:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   10050:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   10054:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			10057: R_X86_64_32S	.text+0x230f0
   1005b:	48 8b 80 f0 02 00 00 	mov    0x2f0(%rax),%rax
   10062:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   10066:	83 ba c8 03 00 00 0d 	cmpl   $0xd,0x3c8(%rdx)
   1006d:	b8 80 00 00 00       	mov    $0x80,%eax
   10072:	0f 86 d0 13 00 00    	jbe    11448 <e1000_request_irq+0x141d>
   10078:	48 8b 8a f8 02 00 00 	mov    0x2f8(%rdx),%rcx
   1007f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10082: R_X86_64_32S	.rodata.str1.1+0x1e20
   10086:	48 89 4d 98          	mov    %rcx,0xffffffffffffff98(%rbp)
   1008a:	e8 00 00 00 00       	callq  1008f <e1000_request_irq+0x64>
			1008b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1008f:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   10093:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10096: R_X86_64_32S	.rodata.str1.1+0x1e2f
   1009a:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   100a1:	00 
   100a2:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   100a9:	00 
   100aa:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   100b1:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   100b5:	e8 00 00 00 00       	callq  100ba <e1000_request_irq+0x8f>
			100b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   100ba:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   100be:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   100c2:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   100c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			100c9: R_X86_64_32S	.rodata.str1.1+0x1e20
   100cd:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   100d4:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   100db:	00 
   100dc:	e8 00 00 00 00       	callq  100e1 <e1000_request_irq+0xb6>
			100dd: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   100e1:	48 83 7d c0 00       	cmpq   $0x0,0xffffffffffffffc0(%rbp)
   100e6:	0f 84 5c 09 00 00    	je     10a48 <e1000_request_irq+0xa1d>
   100ec:	45 31 ff             	xor    %r15d,%r15d
   100ef:	45 31 f6             	xor    %r14d,%r14d
   100f2:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   100f9:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   100fd:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   10101:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   10107:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1010a: R_X86_64_32S	.rodata.str1.1+0x1e20
   1010e:	41 ff c7             	inc    %r15d
   10111:	48 89 d9             	mov    %rbx,%rcx
   10114:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
   10118:	4c 89 e2             	mov    %r12,%rdx
   1011b:	4c 89 ee             	mov    %r13,%rsi
   1011e:	48 83 c1 08          	add    $0x8,%rcx
   10122:	e8 00 00 00 00       	callq  10127 <e1000_request_irq+0xfc>
			10123: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10127:	48 03 5d c0          	add    0xffffffffffffffc0(%rbp),%rbx
   1012b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   10131:	4c 89 e2             	mov    %r12,%rdx
   10134:	4c 89 ee             	mov    %r13,%rsi
   10137:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1013a: R_X86_64_32S	.rodata.str1.1+0x1e20
   1013e:	48 89 d9             	mov    %rbx,%rcx
   10141:	e8 00 00 00 00       	callq  10146 <e1000_request_irq+0x11b>
			10142: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10146:	4c 89 f1             	mov    %r14,%rcx
   10149:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
   1014d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   10153:	4c 89 e2             	mov    %r12,%rdx
   10156:	4c 89 ee             	mov    %r13,%rsi
   10159:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1015c: R_X86_64_32S	.rodata.str1.1+0x1e20
   10160:	49 83 c6 38          	add    $0x38,%r14
   10164:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   1016b:	e8 00 00 00 00       	callq  10170 <e1000_request_irq+0x145>
			1016c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10170:	41 83 ff 0c          	cmp    $0xc,%r15d
   10174:	0f 85 78 ff ff ff    	jne    100f2 <e1000_request_irq+0xc7>
   1017a:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   1017e:	4c 89 e2             	mov    %r12,%rdx
   10181:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10187:	4c 89 ee             	mov    %r13,%rsi
   1018a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1018d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10191:	45 31 ff             	xor    %r15d,%r15d
   10194:	48 83 c1 48          	add    $0x48,%rcx
   10198:	e8 00 00 00 00       	callq  1019d <e1000_request_irq+0x172>
			10199: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1019d:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   101a1:	4c 89 e2             	mov    %r12,%rdx
   101a4:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   101aa:	4c 89 ee             	mov    %r13,%rsi
   101ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			101b0: R_X86_64_32S	.rodata.str1.1+0x1e20
   101b4:	48 83 c1 38          	add    $0x38,%rcx
   101b8:	e8 00 00 00 00       	callq  101bd <e1000_request_irq+0x192>
			101b9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   101bd:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   101c1:	4c 89 e2             	mov    %r12,%rdx
   101c4:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   101ca:	4c 89 ee             	mov    %r13,%rsi
   101cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			101d0: R_X86_64_32S	.rodata.str1.1+0x1e20
   101d4:	48 83 c1 7c          	add    $0x7c,%rcx
   101d8:	e8 00 00 00 00       	callq  101dd <e1000_request_irq+0x1b2>
			101d9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   101dd:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   101e1:	4c 89 e2             	mov    %r12,%rdx
   101e4:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   101ea:	4c 89 ee             	mov    %r13,%rsi
   101ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			101f0: R_X86_64_32S	.rodata.str1.1+0x1e20
   101f4:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   101fb:	e8 00 00 00 00       	callq  10200 <e1000_request_irq+0x1d5>
			101fc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10200:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   10204:	4c 89 e2             	mov    %r12,%rdx
   10207:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1020d:	4c 89 ee             	mov    %r13,%rsi
   10210:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10213: R_X86_64_32S	.rodata.str1.1+0x1e20
   10217:	48 83 c1 3e          	add    $0x3e,%rcx
   1021b:	e8 00 00 00 00       	callq  10220 <e1000_request_irq+0x1f5>
			1021c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10220:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   10224:	4c 89 e2             	mov    %r12,%rdx
   10227:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1022d:	4c 89 ee             	mov    %r13,%rsi
   10230:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10233: R_X86_64_32S	.rodata.str1.1+0x1e20
   10237:	48 83 c1 42          	add    $0x42,%rcx
   1023b:	e8 00 00 00 00       	callq  10240 <e1000_request_irq+0x215>
			1023c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10240:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
   10244:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   10248:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   1024f:	00 
   10250:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   10254:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   10258:	48 89 d9             	mov    %rbx,%rcx
   1025b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10261:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10264: R_X86_64_32S	.rodata.str1.1+0x1e20
   10268:	49 ff c7             	inc    %r15
   1026b:	4c 89 ea             	mov    %r13,%rdx
   1026e:	4c 89 f6             	mov    %r14,%rsi
   10271:	48 ff c3             	inc    %rbx
   10274:	e8 00 00 00 00       	callq  10279 <e1000_request_irq+0x24e>
			10275: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10279:	49 83 ff 14          	cmp    $0x14,%r15
   1027d:	75 d1                	jne    10250 <e1000_request_irq+0x225>
   1027f:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   10286:	00 
   10287:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   1028b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   10291:	4c 89 ea             	mov    %r13,%rdx
   10294:	4c 89 f6             	mov    %r14,%rsi
   10297:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1029a: R_X86_64_32S	.rodata.str1.1+0x1e20
   1029e:	48 89 d9             	mov    %rbx,%rcx
   102a1:	83 e0 01             	and    $0x1,%eax
   102a4:	0f b6 c0             	movzbl %al,%eax
   102a7:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   102aa:	e8 00 00 00 00       	callq  102af <e1000_request_irq+0x284>
			102ab: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   102af:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   102b6:	00 
   102b7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   102bd:	48 89 d9             	mov    %rbx,%rcx
   102c0:	4c 89 ea             	mov    %r13,%rdx
   102c3:	4c 89 f6             	mov    %r14,%rsi
   102c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			102c9: R_X86_64_32S	.rodata.str1.1+0x1e20
   102cd:	d0 e8                	shr    %al
   102cf:	83 e0 01             	and    $0x1,%eax
   102d2:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   102d5:	e8 00 00 00 00       	callq  102da <e1000_request_irq+0x2af>
			102d6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   102da:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   102e1:	00 
   102e2:	4c 89 ea             	mov    %r13,%rdx
   102e5:	4c 89 f6             	mov    %r14,%rsi
   102e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			102eb: R_X86_64_32S	.rodata.str1.1+0x1e20
   102ef:	e8 00 00 00 00       	callq  102f4 <e1000_request_irq+0x2c9>
			102f0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   102f4:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   102fb:	00 
   102fc:	48 85 c0             	test   %rax,%rax
   102ff:	0f 84 ac 00 00 00    	je     103b1 <e1000_request_irq+0x386>
   10305:	48 8d 48 18          	lea    0x18(%rax),%rcx
   10309:	4c 89 ea             	mov    %r13,%rdx
   1030c:	4c 89 f6             	mov    %r14,%rsi
   1030f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10312: R_X86_64_32S	.rodata.str1.1+0x1e20
   10316:	e8 00 00 00 00       	callq  1031b <e1000_request_irq+0x2f0>
			10317: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1031b:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10322:	00 
   10323:	4c 89 ea             	mov    %r13,%rdx
   10326:	4c 89 f6             	mov    %r14,%rsi
   10329:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1032c: R_X86_64_32S	.rodata.str1.1+0x1e20
   10330:	48 83 c1 20          	add    $0x20,%rcx
   10334:	e8 00 00 00 00       	callq  10339 <e1000_request_irq+0x30e>
			10335: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10339:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10340:	00 
   10341:	4c 89 ea             	mov    %r13,%rdx
   10344:	4c 89 f6             	mov    %r14,%rsi
   10347:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1034a: R_X86_64_32S	.rodata.str1.1+0x1e20
   1034e:	48 83 c1 30          	add    $0x30,%rcx
   10352:	e8 00 00 00 00       	callq  10357 <e1000_request_irq+0x32c>
			10353: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10357:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1035e:	00 
   1035f:	4c 89 ea             	mov    %r13,%rdx
   10362:	4c 89 f6             	mov    %r14,%rsi
   10365:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10368: R_X86_64_32S	.rodata.str1.1+0x1e20
   1036c:	48 83 c1 10          	add    $0x10,%rcx
   10370:	e8 00 00 00 00       	callq  10375 <e1000_request_irq+0x34a>
			10371: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10375:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1037c:	00 
   1037d:	4c 89 ea             	mov    %r13,%rdx
   10380:	4c 89 f6             	mov    %r14,%rsi
   10383:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10386: R_X86_64_32S	.rodata.str1.1+0x1e20
   1038a:	48 83 c1 28          	add    $0x28,%rcx
   1038e:	e8 00 00 00 00       	callq  10393 <e1000_request_irq+0x368>
			1038f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10393:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1039a:	00 
   1039b:	4c 89 ea             	mov    %r13,%rdx
   1039e:	4c 89 f6             	mov    %r14,%rsi
   103a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			103a4: R_X86_64_32S	.rodata.str1.1+0x1e20
   103a8:	48 83 c1 08          	add    $0x8,%rcx
   103ac:	e8 00 00 00 00       	callq  103b1 <e1000_request_irq+0x386>
			103ad: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   103b1:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   103b8:	00 
   103b9:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   103bf:	4c 89 ea             	mov    %r13,%rdx
   103c2:	4c 89 f6             	mov    %r14,%rsi
   103c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			103c8: R_X86_64_32S	.rodata.str1.1+0x1e20
   103cc:	e8 00 00 00 00       	callq  103d1 <e1000_request_irq+0x3a6>
			103cd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   103d1:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   103d8:	00 
   103d9:	4c 89 ea             	mov    %r13,%rdx
   103dc:	4c 89 f6             	mov    %r14,%rsi
   103df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			103e2: R_X86_64_32S	.rodata.str1.1+0x1e20
   103e6:	e8 00 00 00 00       	callq  103eb <e1000_request_irq+0x3c0>
			103e7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   103eb:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   103f2:	00 
   103f3:	48 85 c0             	test   %rax,%rax
   103f6:	0f 84 91 05 00 00    	je     1098d <e1000_request_irq+0x962>
   103fc:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   10403:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   10409:	4c 89 ea             	mov    %r13,%rdx
   1040c:	4c 89 f6             	mov    %r14,%rsi
   1040f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10412: R_X86_64_32S	.rodata.str1.1+0x1e20
   10416:	31 db                	xor    %ebx,%ebx
   10418:	e8 00 00 00 00       	callq  1041d <e1000_request_irq+0x3f2>
			10419: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1041d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10424:	00 
   10425:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1042b:	4c 89 ea             	mov    %r13,%rdx
   1042e:	4c 89 f6             	mov    %r14,%rsi
   10431:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10434: R_X86_64_32S	.rodata.str1.1+0x1e20
   10438:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   1043f:	e8 00 00 00 00       	callq  10444 <e1000_request_irq+0x419>
			10440: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10444:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1044b:	00 
   1044c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   10452:	4c 89 ea             	mov    %r13,%rdx
   10455:	4c 89 f6             	mov    %r14,%rsi
   10458:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1045b: R_X86_64_32S	.rodata.str1.1+0x1e20
   1045f:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   10466:	e8 00 00 00 00       	callq  1046b <e1000_request_irq+0x440>
			10467: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1046b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10472:	00 
   10473:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   10479:	4c 89 ea             	mov    %r13,%rdx
   1047c:	4c 89 f6             	mov    %r14,%rsi
   1047f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10482: R_X86_64_32S	.rodata.str1.1+0x1e20
   10486:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   1048d:	e8 00 00 00 00       	callq  10492 <e1000_request_irq+0x467>
			1048e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10492:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10499:	00 
   1049a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   104a0:	4c 89 ea             	mov    %r13,%rdx
   104a3:	4c 89 f6             	mov    %r14,%rsi
   104a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			104a9: R_X86_64_32S	.rodata.str1.1+0x1e20
   104ad:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   104b4:	e8 00 00 00 00       	callq  104b9 <e1000_request_irq+0x48e>
			104b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   104b9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   104c0:	00 
   104c1:	4c 89 ea             	mov    %r13,%rdx
   104c4:	4c 89 f6             	mov    %r14,%rsi
   104c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			104ca: R_X86_64_32S	.rodata.str1.1+0x1e20
   104ce:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   104d5:	e8 00 00 00 00       	callq  104da <e1000_request_irq+0x4af>
			104d6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   104da:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   104e1:	00 
   104e2:	4c 89 ea             	mov    %r13,%rdx
   104e5:	4c 89 f6             	mov    %r14,%rsi
   104e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			104eb: R_X86_64_32S	.rodata.str1.1+0x1e20
   104ef:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   104f6:	e8 00 00 00 00       	callq  104fb <e1000_request_irq+0x4d0>
			104f7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   104fb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10502:	00 
   10503:	4c 89 ea             	mov    %r13,%rdx
   10506:	4c 89 f6             	mov    %r14,%rsi
   10509:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1050c: R_X86_64_32S	.rodata.str1.1+0x1e20
   10510:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   10517:	e8 00 00 00 00       	callq  1051c <e1000_request_irq+0x4f1>
			10518: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1051c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10523:	00 
   10524:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   10528:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   1052c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10532:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10535: R_X86_64_32S	.rodata.str1.1+0x1e20
   10539:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   10540:	48 01 d9             	add    %rbx,%rcx
   10543:	48 ff c3             	inc    %rbx
   10546:	e8 00 00 00 00       	callq  1054b <e1000_request_irq+0x520>
			10547: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1054b:	48 83 fb 20          	cmp    $0x20,%rbx
   1054f:	75 cb                	jne    1051c <e1000_request_irq+0x4f1>
   10551:	30 db                	xor    %bl,%bl
   10553:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1055a:	00 
   1055b:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1055f:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   10563:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10569:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1056c: R_X86_64_32S	.rodata.str1.1+0x1e20
   10570:	4c 89 ea             	mov    %r13,%rdx
   10573:	4c 89 f6             	mov    %r14,%rsi
   10576:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   1057d:	48 01 d9             	add    %rbx,%rcx
   10580:	48 ff c3             	inc    %rbx
   10583:	e8 00 00 00 00       	callq  10588 <e1000_request_irq+0x55d>
			10584: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10588:	48 83 fb 20          	cmp    $0x20,%rbx
   1058c:	75 c5                	jne    10553 <e1000_request_irq+0x528>
   1058e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10595:	00 
   10596:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1059c:	4c 89 ea             	mov    %r13,%rdx
   1059f:	4c 89 f6             	mov    %r14,%rsi
   105a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			105a5: R_X86_64_32S	.rodata.str1.1+0x1e20
   105a9:	30 db                	xor    %bl,%bl
   105ab:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   105b2:	e8 00 00 00 00       	callq  105b7 <e1000_request_irq+0x58c>
			105b3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   105b7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   105be:	00 
   105bf:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   105c5:	4c 89 ea             	mov    %r13,%rdx
   105c8:	4c 89 f6             	mov    %r14,%rsi
   105cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			105ce: R_X86_64_32S	.rodata.str1.1+0x1e20
   105d2:	48 83 c1 48          	add    $0x48,%rcx
   105d6:	e8 00 00 00 00       	callq  105db <e1000_request_irq+0x5b0>
			105d7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   105db:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   105e2:	00 
   105e3:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   105e7:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   105eb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   105f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			105f4: R_X86_64_32S	.rodata.str1.1+0x1e20
   105f8:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   105ff:	48 01 d9             	add    %rbx,%rcx
   10602:	48 ff c3             	inc    %rbx
   10605:	e8 00 00 00 00       	callq  1060a <e1000_request_irq+0x5df>
			10606: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1060a:	48 83 fb 20          	cmp    $0x20,%rbx
   1060e:	75 cb                	jne    105db <e1000_request_irq+0x5b0>
   10610:	30 db                	xor    %bl,%bl
   10612:	48 89 d9             	mov    %rbx,%rcx
   10615:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   1061c:	00 
   1061d:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   10621:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   10625:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1062b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1062e: R_X86_64_32S	.rodata.str1.1+0x1e20
   10632:	4c 89 ea             	mov    %r13,%rdx
   10635:	48 ff c3             	inc    %rbx
   10638:	4c 89 f6             	mov    %r14,%rsi
   1063b:	e8 00 00 00 00       	callq  10640 <e1000_request_irq+0x615>
			1063c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10640:	48 83 fb 10          	cmp    $0x10,%rbx
   10644:	75 cc                	jne    10612 <e1000_request_irq+0x5e7>
   10646:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1064d:	00 
   1064e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10654:	4c 89 ea             	mov    %r13,%rdx
   10657:	4c 89 f6             	mov    %r14,%rsi
   1065a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1065d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10661:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   10668:	e8 00 00 00 00       	callq  1066d <e1000_request_irq+0x642>
			10669: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1066d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10674:	00 
   10675:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1067b:	4c 89 ea             	mov    %r13,%rdx
   1067e:	4c 89 f6             	mov    %r14,%rsi
   10681:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10684: R_X86_64_32S	.rodata.str1.1+0x1e20
   10688:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   1068f:	e8 00 00 00 00       	callq  10694 <e1000_request_irq+0x669>
			10690: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10694:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1069b:	00 
   1069c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   106a2:	4c 89 ea             	mov    %r13,%rdx
   106a5:	4c 89 f6             	mov    %r14,%rsi
   106a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			106ab: R_X86_64_32S	.rodata.str1.1+0x1e20
   106af:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   106b6:	e8 00 00 00 00       	callq  106bb <e1000_request_irq+0x690>
			106b7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   106bb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   106c2:	00 
   106c3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   106c9:	4c 89 ea             	mov    %r13,%rdx
   106cc:	4c 89 f6             	mov    %r14,%rsi
   106cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			106d2: R_X86_64_32S	.rodata.str1.1+0x1e20
   106d6:	48 83 c1 70          	add    $0x70,%rcx
   106da:	e8 00 00 00 00       	callq  106df <e1000_request_irq+0x6b4>
			106db: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   106df:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   106e6:	00 
   106e7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   106ed:	4c 89 ea             	mov    %r13,%rdx
   106f0:	4c 89 f6             	mov    %r14,%rsi
   106f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			106f6: R_X86_64_32S	.rodata.str1.1+0x1e20
   106fa:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   10701:	e8 00 00 00 00       	callq  10706 <e1000_request_irq+0x6db>
			10702: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10706:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1070d:	00 
   1070e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   10714:	4c 89 ea             	mov    %r13,%rdx
   10717:	4c 89 f6             	mov    %r14,%rsi
   1071a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1071d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10721:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   10728:	e8 00 00 00 00       	callq  1072d <e1000_request_irq+0x702>
			10729: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1072d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10734:	00 
   10735:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1073b:	4c 89 ea             	mov    %r13,%rdx
   1073e:	4c 89 f6             	mov    %r14,%rsi
   10741:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10744: R_X86_64_32S	.rodata.str1.1+0x1e20
   10748:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   1074f:	e8 00 00 00 00       	callq  10754 <e1000_request_irq+0x729>
			10750: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10754:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1075b:	00 
   1075c:	4c 89 ea             	mov    %r13,%rdx
   1075f:	4c 89 f6             	mov    %r14,%rsi
   10762:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10765: R_X86_64_32S	.rodata.str1.1+0x1e20
   10769:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   10770:	e8 00 00 00 00       	callq  10775 <e1000_request_irq+0x74a>
			10771: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10775:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1077c:	00 
   1077d:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   10784:	00 
   10785:	74 62                	je     107e9 <e1000_request_irq+0x7be>
   10787:	30 db                	xor    %bl,%bl
   10789:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   10790:	00 
   10791:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   10795:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   10799:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1079f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			107a2: R_X86_64_32S	.rodata.str1.1+0x1e20
   107a6:	4c 89 ea             	mov    %r13,%rdx
   107a9:	4c 89 f6             	mov    %r14,%rsi
   107ac:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   107b3:	48 83 c1 08          	add    $0x8,%rcx
   107b7:	48 01 d9             	add    %rbx,%rcx
   107ba:	48 ff c3             	inc    %rbx
   107bd:	e8 00 00 00 00       	callq  107c2 <e1000_request_irq+0x797>
			107be: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   107c2:	48 83 fb 20          	cmp    $0x20,%rbx
   107c6:	75 c1                	jne    10789 <e1000_request_irq+0x75e>
   107c8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   107cf:	00 
   107d0:	4c 89 ea             	mov    %r13,%rdx
   107d3:	4c 89 f6             	mov    %r14,%rsi
   107d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			107d9: R_X86_64_32S	.rodata.str1.1+0x1e20
   107dd:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   107e4:	e8 00 00 00 00       	callq  107e9 <e1000_request_irq+0x7be>
			107e5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   107e9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   107f0:	00 
   107f1:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   107f5:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   107f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			107fc: R_X86_64_32S	.rodata.str1.1+0x1e20
   10800:	48 89 da             	mov    %rbx,%rdx
   10803:	4c 89 ee             	mov    %r13,%rsi
   10806:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1080d:	e8 00 00 00 00       	callq  10812 <e1000_request_irq+0x7e7>
			1080e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10812:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10819:	00 
   1081a:	48 89 da             	mov    %rbx,%rdx
   1081d:	4c 89 ee             	mov    %r13,%rsi
   10820:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10823: R_X86_64_32S	.rodata.str1.1+0x1e20
   10827:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1082e:	e8 00 00 00 00       	callq  10833 <e1000_request_irq+0x808>
			1082f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10833:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1083a:	00 
   1083b:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   10842:	48 85 c0             	test   %rax,%rax
   10845:	74 3b                	je     10882 <e1000_request_irq+0x857>
   10847:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1084b:	48 89 da             	mov    %rbx,%rdx
   1084e:	4c 89 ee             	mov    %r13,%rsi
   10851:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10854: R_X86_64_32S	.rodata.str1.1+0x1e20
   10858:	e8 00 00 00 00       	callq  1085d <e1000_request_irq+0x832>
			10859: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1085d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   10864:	00 
   10865:	48 89 da             	mov    %rbx,%rdx
   10868:	4c 89 ee             	mov    %r13,%rsi
   1086b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1086e: R_X86_64_32S	.rodata.str1.1+0x1e20
   10872:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   10879:	48 83 c1 58          	add    $0x58,%rcx
   1087d:	e8 00 00 00 00       	callq  10882 <e1000_request_irq+0x857>
			1087e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10882:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10889:	00 
   1088a:	48 89 da             	mov    %rbx,%rdx
   1088d:	4c 89 ee             	mov    %r13,%rsi
   10890:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10893: R_X86_64_32S	.rodata.str1.1+0x1e20
   10897:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1089e:	e8 00 00 00 00       	callq  108a3 <e1000_request_irq+0x878>
			1089f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   108a3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   108aa:	00 
   108ab:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   108b2:	48 85 c0             	test   %rax,%rax
   108b5:	74 41                	je     108f8 <e1000_request_irq+0x8cd>
   108b7:	48 8d 48 10          	lea    0x10(%rax),%rcx
   108bb:	48 89 da             	mov    %rbx,%rdx
   108be:	4c 89 ee             	mov    %r13,%rsi
   108c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			108c4: R_X86_64_32S	.rodata.str1.1+0x1e20
   108c8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   108ce:	e8 00 00 00 00       	callq  108d3 <e1000_request_irq+0x8a8>
			108cf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   108d3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   108da:	00 
   108db:	48 89 da             	mov    %rbx,%rdx
   108de:	4c 89 ee             	mov    %r13,%rsi
   108e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			108e4: R_X86_64_32S	.rodata.str1.1+0x1e20
   108e8:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   108ef:	48 83 c1 08          	add    $0x8,%rcx
   108f3:	e8 00 00 00 00       	callq  108f8 <e1000_request_irq+0x8cd>
			108f4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   108f8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   108ff:	00 
   10900:	48 89 da             	mov    %rbx,%rdx
   10903:	4c 89 ee             	mov    %r13,%rsi
   10906:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10909: R_X86_64_32S	.rodata.str1.1+0x1e20
   1090d:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   10914:	e8 00 00 00 00       	callq  10919 <e1000_request_irq+0x8ee>
			10915: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10919:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   10920:	00 
   10921:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   10928:	00 
   10929:	74 62                	je     1098d <e1000_request_irq+0x962>
   1092b:	31 db                	xor    %ebx,%ebx
   1092d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   10934:	00 
   10935:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   10939:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1093d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10943:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10946: R_X86_64_32S	.rodata.str1.1+0x1e20
   1094a:	4c 89 ea             	mov    %r13,%rdx
   1094d:	4c 89 f6             	mov    %r14,%rsi
   10950:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   10957:	48 83 c1 08          	add    $0x8,%rcx
   1095b:	48 01 d9             	add    %rbx,%rcx
   1095e:	48 ff c3             	inc    %rbx
   10961:	e8 00 00 00 00       	callq  10966 <e1000_request_irq+0x93b>
			10962: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10966:	48 83 fb 20          	cmp    $0x20,%rbx
   1096a:	75 c1                	jne    1092d <e1000_request_irq+0x902>
   1096c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   10973:	00 
   10974:	4c 89 ea             	mov    %r13,%rdx
   10977:	4c 89 f6             	mov    %r14,%rsi
   1097a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1097d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10981:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   10988:	e8 00 00 00 00       	callq  1098d <e1000_request_irq+0x962>
			10989: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1098d:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   10991:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   10995:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   1099c:	00 
   1099d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			109a0: R_X86_64_32S	.rodata.str1.1+0x1e20
   109a4:	48 89 da             	mov    %rbx,%rdx
   109a7:	4c 89 ee             	mov    %r13,%rsi
   109aa:	e8 00 00 00 00       	callq  109af <e1000_request_irq+0x984>
			109ab: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   109af:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   109b6:	00 
   109b7:	48 89 da             	mov    %rbx,%rdx
   109ba:	4c 89 ee             	mov    %r13,%rsi
   109bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			109c0: R_X86_64_32S	.rodata.str1.1+0x1e20
   109c4:	e8 00 00 00 00       	callq  109c9 <e1000_request_irq+0x99e>
			109c5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   109c9:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   109d0:	00 
   109d1:	48 85 c9             	test   %rcx,%rcx
   109d4:	74 18                	je     109ee <e1000_request_irq+0x9c3>
   109d6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   109dc:	48 89 da             	mov    %rbx,%rdx
   109df:	4c 89 ee             	mov    %r13,%rsi
   109e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			109e5: R_X86_64_32S	.rodata.str1.1+0x1e20
   109e9:	e8 00 00 00 00       	callq  109ee <e1000_request_irq+0x9c3>
			109ea: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   109ee:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   109f2:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   109f8:	48 89 da             	mov    %rbx,%rdx
   109fb:	4c 89 ee             	mov    %r13,%rsi
   109fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a01: R_X86_64_32S	.rodata.str1.1+0x1e20
   10a05:	48 83 c1 40          	add    $0x40,%rcx
   10a09:	e8 00 00 00 00       	callq  10a0e <e1000_request_irq+0x9e3>
			10a0a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10a0e:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   10a12:	48 89 da             	mov    %rbx,%rdx
   10a15:	4c 89 ee             	mov    %r13,%rsi
   10a18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a1b: R_X86_64_32S	.rodata.str1.1+0x1e20
   10a1f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   10a25:	48 83 c1 3c          	add    $0x3c,%rcx
   10a29:	e8 00 00 00 00       	callq  10a2e <e1000_request_irq+0xa03>
			10a2a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   10a2e:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   10a32:	48 89 da             	mov    %rbx,%rdx
   10a35:	4c 89 ee             	mov    %r13,%rsi
   10a38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a3b: R_X86_64_32S	.rodata.str1.1+0x1e20
   10a3f:	48 83 c1 10          	add    $0x10,%rcx
   10a43:	e8 00 00 00 00       	callq  10a48 <e1000_request_irq+0xa1d>
			10a44: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   10a48:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   10a4c:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   10a50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a53: R_X86_64_32S	.rodata.str1.1+0x1e20
   10a57:	48 c7 45 a0 13 06 00 	movq   $0x613,0xffffffffffffffa0(%rbp)
   10a5e:	00 
   10a5f:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   10a63:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   10a67:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   10a6a:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   10a6d:	e8 00 00 00 00       	callq  10a72 <e1000_request_irq+0xa47>
			10a6e: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   10a72:	48 8b 55 98          	mov    0xffffffffffffff98(%rbp),%rdx
   10a76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a79: R_X86_64_32S	.rodata.str1.1+0x1e4c
   10a7d:	48 89 55 b8          	mov    %rdx,0xffffffffffffffb8(%rbp)
   10a81:	e8 00 00 00 00       	callq  10a86 <e1000_request_irq+0xa5b>
			10a82: R_X86_64_PC32	record_function+0xfffffffffffffffc
   10a86:	4c 8b 6d b0          	mov    0xffffffffffffffb0(%rbp),%r13
   10a8a:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   10a8e:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   10a94:	48 89 da             	mov    %rbx,%rdx
   10a97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10a9a: R_X86_64_32S	.rodata.str1.1+0x1e20
   10a9e:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   10aa5:	4c 89 ee             	mov    %r13,%rsi
   10aa8:	e8 00 00 00 00       	callq  10aad <e1000_request_irq+0xa82>
			10aa9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10aad:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   10ab1:	48 85 c0             	test   %rax,%rax
   10ab4:	0f 84 3e 09 00 00    	je     113f8 <e1000_request_irq+0x13cd>
   10aba:	4c 8d 40 38          	lea    0x38(%rax),%r8
   10abe:	48 89 da             	mov    %rbx,%rdx
   10ac1:	b9 04 00 00 00       	mov    $0x4,%ecx
   10ac6:	4c 89 ee             	mov    %r13,%rsi
   10ac9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10acc: R_X86_64_32S	.rodata.str1.1+0x1e20
   10ad0:	45 31 f6             	xor    %r14d,%r14d
   10ad3:	e8 00 00 00 00       	callq  10ad8 <e1000_request_irq+0xaad>
			10ad4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10ad8:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   10adc:	48 89 da             	mov    %rbx,%rdx
   10adf:	b9 04 00 00 00       	mov    $0x4,%ecx
   10ae4:	4c 89 ee             	mov    %r13,%rsi
   10ae7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10aea: R_X86_64_32S	.rodata.str1.1+0x1e20
   10aee:	49 83 c0 7c          	add    $0x7c,%r8
   10af2:	e8 00 00 00 00       	callq  10af7 <e1000_request_irq+0xacc>
			10af3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10af7:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   10afb:	48 89 da             	mov    %rbx,%rdx
   10afe:	b9 04 00 00 00       	mov    $0x4,%ecx
   10b03:	4c 89 ee             	mov    %r13,%rsi
   10b06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10b09: R_X86_64_32S	.rodata.str1.1+0x1e20
   10b0d:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   10b14:	e8 00 00 00 00       	callq  10b19 <e1000_request_irq+0xaee>
			10b15: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10b19:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   10b1d:	48 89 da             	mov    %rbx,%rdx
   10b20:	b9 02 00 00 00       	mov    $0x2,%ecx
   10b25:	4c 89 ee             	mov    %r13,%rsi
   10b28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10b2b: R_X86_64_32S	.rodata.str1.1+0x1e20
   10b2f:	49 83 c0 3e          	add    $0x3e,%r8
   10b33:	e8 00 00 00 00       	callq  10b38 <e1000_request_irq+0xb0d>
			10b34: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10b38:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   10b3c:	ba 78 02 00 00       	mov    $0x278,%edx
   10b41:	be 80 00 00 00       	mov    $0x80,%esi
   10b46:	e8 00 00 00 00       	callq  10b4b <e1000_request_irq+0xb20>
			10b47: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   10b4b:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   10b4f:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   10b53:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   10b5a:	00 
   10b5b:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
   10b5f:	49 89 d8             	mov    %rbx,%r8
   10b62:	b9 01 00 00 00       	mov    $0x1,%ecx
   10b67:	4c 89 ee             	mov    %r13,%rsi
   10b6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10b6d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10b71:	49 ff c6             	inc    %r14
   10b74:	4c 89 fa             	mov    %r15,%rdx
   10b77:	48 ff c3             	inc    %rbx
   10b7a:	e8 00 00 00 00       	callq  10b7f <e1000_request_irq+0xb54>
			10b7b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10b7f:	49 83 fe 14          	cmp    $0x14,%r14
   10b83:	75 d6                	jne    10b5b <e1000_request_irq+0xb30>
   10b85:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
   10b89:	b9 04 00 00 00       	mov    $0x4,%ecx
   10b8e:	4c 89 fa             	mov    %r15,%rdx
   10b91:	4c 89 ee             	mov    %r13,%rsi
   10b94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10b97: R_X86_64_32S	.rodata.str1.1+0x1e20
   10b9b:	49 89 d8             	mov    %rbx,%r8
   10b9e:	e8 00 00 00 00       	callq  10ba3 <e1000_request_irq+0xb78>
			10b9f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10ba3:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   10ba6:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   10bad:	00 
   10bae:	49 89 d8             	mov    %rbx,%r8
   10bb1:	b9 04 00 00 00       	mov    $0x4,%ecx
   10bb6:	4c 89 ee             	mov    %r13,%rsi
   10bb9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10bbc: R_X86_64_32S	.rodata.str1.1+0x1e20
   10bc0:	83 e2 01             	and    $0x1,%edx
   10bc3:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   10bc6:	09 d0                	or     %edx,%eax
   10bc8:	4c 89 fa             	mov    %r15,%rdx
   10bcb:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   10bd2:	00 
   10bd3:	e8 00 00 00 00       	callq  10bd8 <e1000_request_irq+0xbad>
			10bd4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10bd8:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   10bdb:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   10be2:	00 
   10be3:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   10bea:	00 
   10beb:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   10bf1:	4c 89 ee             	mov    %r13,%rsi
   10bf4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10bf7: R_X86_64_32S	.rodata.str1.1+0x1e20
   10bfb:	83 e2 01             	and    $0x1,%edx
   10bfe:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   10c01:	01 d2                	add    %edx,%edx
   10c03:	09 d0                	or     %edx,%eax
   10c05:	4c 89 fa             	mov    %r15,%rdx
   10c08:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   10c0f:	00 
   10c10:	e8 00 00 00 00       	callq  10c15 <e1000_request_irq+0xbea>
			10c11: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10c15:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   10c1c:	00 
   10c1d:	48 85 c0             	test   %rax,%rax
   10c20:	0f 84 d0 00 00 00    	je     10cf6 <e1000_request_irq+0xccb>
   10c26:	48 8d 48 18          	lea    0x18(%rax),%rcx
   10c2a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10c30:	4c 89 fa             	mov    %r15,%rdx
   10c33:	4c 89 ee             	mov    %r13,%rsi
   10c36:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10c39: R_X86_64_32S	.rodata.str1.1+0x1e20
   10c3d:	e8 00 00 00 00       	callq  10c42 <e1000_request_irq+0xc17>
			10c3e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10c42:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10c49:	00 
   10c4a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10c50:	4c 89 fa             	mov    %r15,%rdx
   10c53:	4c 89 ee             	mov    %r13,%rsi
   10c56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10c59: R_X86_64_32S	.rodata.str1.1+0x1e20
   10c5d:	48 83 c1 20          	add    $0x20,%rcx
   10c61:	e8 00 00 00 00       	callq  10c66 <e1000_request_irq+0xc3b>
			10c62: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10c66:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10c6d:	00 
   10c6e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10c74:	4c 89 fa             	mov    %r15,%rdx
   10c77:	4c 89 ee             	mov    %r13,%rsi
   10c7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10c7d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10c81:	48 83 c1 30          	add    $0x30,%rcx
   10c85:	e8 00 00 00 00       	callq  10c8a <e1000_request_irq+0xc5f>
			10c86: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10c8a:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10c91:	00 
   10c92:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10c98:	4c 89 fa             	mov    %r15,%rdx
   10c9b:	4c 89 ee             	mov    %r13,%rsi
   10c9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ca1: R_X86_64_32S	.rodata.str1.1+0x1e20
   10ca5:	48 83 c1 10          	add    $0x10,%rcx
   10ca9:	e8 00 00 00 00       	callq  10cae <e1000_request_irq+0xc83>
			10caa: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10cae:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10cb5:	00 
   10cb6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10cbc:	4c 89 fa             	mov    %r15,%rdx
   10cbf:	4c 89 ee             	mov    %r13,%rsi
   10cc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10cc5: R_X86_64_32S	.rodata.str1.1+0x1e20
   10cc9:	48 83 c1 28          	add    $0x28,%rcx
   10ccd:	e8 00 00 00 00       	callq  10cd2 <e1000_request_irq+0xca7>
			10cce: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10cd2:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   10cd9:	00 
   10cda:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10ce0:	4c 89 fa             	mov    %r15,%rdx
   10ce3:	4c 89 ee             	mov    %r13,%rsi
   10ce6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ce9: R_X86_64_32S	.rodata.str1.1+0x1e20
   10ced:	48 83 c1 08          	add    $0x8,%rcx
   10cf1:	e8 00 00 00 00       	callq  10cf6 <e1000_request_irq+0xccb>
			10cf2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10cf6:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   10cfd:	00 
   10cfe:	b9 08 00 00 00       	mov    $0x8,%ecx
   10d03:	4c 89 fa             	mov    %r15,%rdx
   10d06:	4c 89 ee             	mov    %r13,%rsi
   10d09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10d0c: R_X86_64_32S	.rodata.str1.1+0x1e20
   10d10:	e8 00 00 00 00       	callq  10d15 <e1000_request_irq+0xcea>
			10d11: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10d15:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   10d1c:	00 
   10d1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10d20: R_X86_64_32S	.rodata.str1.1+0x1e20
   10d24:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   10d2a:	4c 89 fa             	mov    %r15,%rdx
   10d2d:	4c 89 ee             	mov    %r13,%rsi
   10d30:	e8 00 00 00 00       	callq  10d35 <e1000_request_irq+0xd0a>
			10d31: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10d35:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   10d3c:	00 
   10d3d:	48 85 ff             	test   %rdi,%rdi
   10d40:	0f 84 08 06 00 00    	je     1134e <e1000_request_irq+0x1323>
   10d46:	ba 08 00 00 00       	mov    $0x8,%edx
   10d4b:	be 10 03 00 00       	mov    $0x310,%esi
   10d50:	31 db                	xor    %ebx,%ebx
   10d52:	e8 00 00 00 00       	callq  10d57 <e1000_request_irq+0xd2c>
			10d53: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   10d57:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10d5e:	00 
   10d5f:	b9 08 00 00 00       	mov    $0x8,%ecx
   10d64:	4c 89 fa             	mov    %r15,%rdx
   10d67:	4c 89 ee             	mov    %r13,%rsi
   10d6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10d6d: R_X86_64_32S	.rodata.str1.1+0x1e20
   10d71:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   10d78:	e8 00 00 00 00       	callq  10d7d <e1000_request_irq+0xd52>
			10d79: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10d7d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10d84:	00 
   10d85:	b9 02 00 00 00       	mov    $0x2,%ecx
   10d8a:	4c 89 fa             	mov    %r15,%rdx
   10d8d:	4c 89 ee             	mov    %r13,%rsi
   10d90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10d93: R_X86_64_32S	.rodata.str1.1+0x1e20
   10d97:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   10d9e:	e8 00 00 00 00       	callq  10da3 <e1000_request_irq+0xd78>
			10d9f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10da3:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10daa:	00 
   10dab:	b9 08 00 00 00       	mov    $0x8,%ecx
   10db0:	4c 89 fa             	mov    %r15,%rdx
   10db3:	4c 89 ee             	mov    %r13,%rsi
   10db6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10db9: R_X86_64_32S	.rodata.str1.1+0x1e20
   10dbd:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   10dc4:	e8 00 00 00 00       	callq  10dc9 <e1000_request_irq+0xd9e>
			10dc5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10dc9:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10dd0:	00 
   10dd1:	b9 04 00 00 00       	mov    $0x4,%ecx
   10dd6:	4c 89 fa             	mov    %r15,%rdx
   10dd9:	4c 89 ee             	mov    %r13,%rsi
   10ddc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ddf: R_X86_64_32S	.rodata.str1.1+0x1e20
   10de3:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   10dea:	e8 00 00 00 00       	callq  10def <e1000_request_irq+0xdc4>
			10deb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10def:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10df6:	00 
   10df7:	b9 04 00 00 00       	mov    $0x4,%ecx
   10dfc:	4c 89 fa             	mov    %r15,%rdx
   10dff:	4c 89 ee             	mov    %r13,%rsi
   10e02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10e05: R_X86_64_32S	.rodata.str1.1+0x1e20
   10e09:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   10e10:	e8 00 00 00 00       	callq  10e15 <e1000_request_irq+0xdea>
			10e11: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10e15:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10e1c:	00 
   10e1d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10e23:	4c 89 fa             	mov    %r15,%rdx
   10e26:	4c 89 ee             	mov    %r13,%rsi
   10e29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10e2c: R_X86_64_32S	.rodata.str1.1+0x1e20
   10e30:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   10e37:	e8 00 00 00 00       	callq  10e3c <e1000_request_irq+0xe11>
			10e38: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10e3c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10e43:	00 
   10e44:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10e4a:	4c 89 fa             	mov    %r15,%rdx
   10e4d:	4c 89 ee             	mov    %r13,%rsi
   10e50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10e53: R_X86_64_32S	.rodata.str1.1+0x1e20
   10e57:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   10e5e:	e8 00 00 00 00       	callq  10e63 <e1000_request_irq+0xe38>
			10e5f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10e63:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   10e6a:	00 
   10e6b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10e71:	4c 89 fa             	mov    %r15,%rdx
   10e74:	4c 89 ee             	mov    %r13,%rsi
   10e77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10e7a: R_X86_64_32S	.rodata.str1.1+0x1e20
   10e7e:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   10e85:	e8 00 00 00 00       	callq  10e8a <e1000_request_irq+0xe5f>
			10e86: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   10e8a:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10e91:	00 
   10e92:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   10e96:	b9 01 00 00 00       	mov    $0x1,%ecx
   10e9b:	4c 89 ee             	mov    %r13,%rsi
   10e9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ea1: R_X86_64_32S	.rodata.str1.1+0x1e20
   10ea5:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   10eac:	49 01 d8             	add    %rbx,%r8
   10eaf:	48 ff c3             	inc    %rbx
   10eb2:	e8 00 00 00 00       	callq  10eb7 <e1000_request_irq+0xe8c>
			10eb3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10eb7:	48 83 fb 20          	cmp    $0x20,%rbx
   10ebb:	75 cd                	jne    10e8a <e1000_request_irq+0xe5f>
   10ebd:	30 db                	xor    %bl,%bl
   10ebf:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10ec6:	00 
   10ec7:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   10ecb:	b9 01 00 00 00       	mov    $0x1,%ecx
   10ed0:	4c 89 ee             	mov    %r13,%rsi
   10ed3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10ed6: R_X86_64_32S	.rodata.str1.1+0x1e20
   10eda:	4c 89 f2             	mov    %r14,%rdx
   10edd:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   10ee4:	49 01 d8             	add    %rbx,%r8
   10ee7:	48 ff c3             	inc    %rbx
   10eea:	e8 00 00 00 00       	callq  10eef <e1000_request_irq+0xec4>
			10eeb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10eef:	48 83 fb 20          	cmp    $0x20,%rbx
   10ef3:	75 ca                	jne    10ebf <e1000_request_irq+0xe94>
   10ef5:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10efc:	00 
   10efd:	b9 02 00 00 00       	mov    $0x2,%ecx
   10f02:	4c 89 f2             	mov    %r14,%rdx
   10f05:	4c 89 ee             	mov    %r13,%rsi
   10f08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10f0b: R_X86_64_32S	.rodata.str1.1+0x1e20
   10f0f:	30 db                	xor    %bl,%bl
   10f11:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   10f18:	e8 00 00 00 00       	callq  10f1d <e1000_request_irq+0xef2>
			10f19: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10f1d:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   10f24:	00 
   10f25:	ba 08 00 00 00       	mov    $0x8,%edx
   10f2a:	be 48 00 00 00       	mov    $0x48,%esi
   10f2f:	e8 00 00 00 00       	callq  10f34 <e1000_request_irq+0xf09>
			10f30: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   10f34:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10f3b:	00 
   10f3c:	b9 08 00 00 00       	mov    $0x8,%ecx
   10f41:	4c 89 f2             	mov    %r14,%rdx
   10f44:	4c 89 ee             	mov    %r13,%rsi
   10f47:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10f4a: R_X86_64_32S	.rodata.str1.1+0x1e20
   10f4e:	49 83 c0 48          	add    $0x48,%r8
   10f52:	e8 00 00 00 00       	callq  10f57 <e1000_request_irq+0xf2c>
			10f53: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10f57:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10f5e:	00 
   10f5f:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   10f63:	b9 01 00 00 00       	mov    $0x1,%ecx
   10f68:	4c 89 ee             	mov    %r13,%rsi
   10f6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10f6e: R_X86_64_32S	.rodata.str1.1+0x1e20
   10f72:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   10f79:	49 01 d8             	add    %rbx,%r8
   10f7c:	48 ff c3             	inc    %rbx
   10f7f:	e8 00 00 00 00       	callq  10f84 <e1000_request_irq+0xf59>
			10f80: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10f84:	48 83 fb 20          	cmp    $0x20,%rbx
   10f88:	75 cd                	jne    10f57 <e1000_request_irq+0xf2c>
   10f8a:	30 db                	xor    %bl,%bl
   10f8c:	49 89 d8             	mov    %rbx,%r8
   10f8f:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   10f96:	00 
   10f97:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   10f9b:	b9 01 00 00 00       	mov    $0x1,%ecx
   10fa0:	4c 89 ee             	mov    %r13,%rsi
   10fa3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10fa6: R_X86_64_32S	.rodata.str1.1+0x1e20
   10faa:	4c 89 f2             	mov    %r14,%rdx
   10fad:	48 ff c3             	inc    %rbx
   10fb0:	e8 00 00 00 00       	callq  10fb5 <e1000_request_irq+0xf8a>
			10fb1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10fb5:	48 83 fb 10          	cmp    $0x10,%rbx
   10fb9:	75 d1                	jne    10f8c <e1000_request_irq+0xf61>
   10fbb:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   10fc2:	00 
   10fc3:	ba 10 00 00 00       	mov    $0x10,%edx
   10fc8:	be 18 04 00 00       	mov    $0x418,%esi
   10fcd:	e8 00 00 00 00       	callq  10fd2 <e1000_request_irq+0xfa7>
			10fce: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   10fd2:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10fd9:	00 
   10fda:	b9 01 00 00 00       	mov    $0x1,%ecx
   10fdf:	4c 89 f2             	mov    %r14,%rdx
   10fe2:	4c 89 ee             	mov    %r13,%rsi
   10fe5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			10fe8: R_X86_64_32S	.rodata.str1.1+0x1e20
   10fec:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   10ff3:	e8 00 00 00 00       	callq  10ff8 <e1000_request_irq+0xfcd>
			10ff4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   10ff8:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   10fff:	00 
   11000:	b9 04 00 00 00       	mov    $0x4,%ecx
   11005:	4c 89 f2             	mov    %r14,%rdx
   11008:	4c 89 ee             	mov    %r13,%rsi
   1100b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1100e: R_X86_64_32S	.rodata.str1.1+0x1e20
   11012:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   11019:	e8 00 00 00 00       	callq  1101e <e1000_request_irq+0xff3>
			1101a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1101e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   11025:	00 
   11026:	b9 08 00 00 00       	mov    $0x8,%ecx
   1102b:	4c 89 f2             	mov    %r14,%rdx
   1102e:	4c 89 ee             	mov    %r13,%rsi
   11031:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11034: R_X86_64_32S	.rodata.str1.1+0x1e20
   11038:	49 83 c0 70          	add    $0x70,%r8
   1103c:	e8 00 00 00 00       	callq  11041 <e1000_request_irq+0x1016>
			1103d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   11041:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   11048:	00 
   11049:	ba 10 00 00 00       	mov    $0x10,%edx
   1104e:	be 10 00 00 00       	mov    $0x10,%esi
   11053:	e8 00 00 00 00       	callq  11058 <e1000_request_irq+0x102d>
			11054: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   11058:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1105f:	00 
   11060:	b9 04 00 00 00       	mov    $0x4,%ecx
   11065:	4c 89 f2             	mov    %r14,%rdx
   11068:	4c 89 ee             	mov    %r13,%rsi
   1106b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1106e: R_X86_64_32S	.rodata.str1.1+0x1e20
   11072:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   11079:	e8 00 00 00 00       	callq  1107e <e1000_request_irq+0x1053>
			1107a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1107e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   11085:	00 
   11086:	b9 08 00 00 00       	mov    $0x8,%ecx
   1108b:	4c 89 f2             	mov    %r14,%rdx
   1108e:	4c 89 ee             	mov    %r13,%rsi
   11091:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11094: R_X86_64_32S	.rodata.str1.1+0x1e20
   11098:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   1109f:	e8 00 00 00 00       	callq  110a4 <e1000_request_irq+0x1079>
			110a0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   110a4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   110ab:	00 
   110ac:	b9 04 00 00 00       	mov    $0x4,%ecx
   110b1:	4c 89 f2             	mov    %r14,%rdx
   110b4:	4c 89 ee             	mov    %r13,%rsi
   110b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			110ba: R_X86_64_32S	.rodata.str1.1+0x1e20
   110be:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   110c5:	e8 00 00 00 00       	callq  110ca <e1000_request_irq+0x109f>
			110c6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   110ca:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   110d1:	00 
   110d2:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   110d8:	4c 89 f2             	mov    %r14,%rdx
   110db:	4c 89 ee             	mov    %r13,%rsi
   110de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			110e1: R_X86_64_32S	.rodata.str1.1+0x1e20
   110e5:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   110ec:	e8 00 00 00 00       	callq  110f1 <e1000_request_irq+0x10c6>
			110ed: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   110f1:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   110f8:	00 
   110f9:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   11100:	00 
   11101:	74 63                	je     11166 <e1000_request_irq+0x113b>
   11103:	30 db                	xor    %bl,%bl
   11105:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1110c:	00 
   1110d:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   11111:	b9 01 00 00 00       	mov    $0x1,%ecx
   11116:	4c 89 ee             	mov    %r13,%rsi
   11119:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1111c: R_X86_64_32S	.rodata.str1.1+0x1e20
   11120:	4c 89 f2             	mov    %r14,%rdx
   11123:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   1112a:	49 83 c0 08          	add    $0x8,%r8
   1112e:	49 01 d8             	add    %rbx,%r8
   11131:	48 ff c3             	inc    %rbx
   11134:	e8 00 00 00 00       	callq  11139 <e1000_request_irq+0x110e>
			11135: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   11139:	48 83 fb 20          	cmp    $0x20,%rbx
   1113d:	75 c6                	jne    11105 <e1000_request_irq+0x10da>
   1113f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11146:	00 
   11147:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1114d:	4c 89 f2             	mov    %r14,%rdx
   11150:	4c 89 ee             	mov    %r13,%rsi
   11153:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11156: R_X86_64_32S	.rodata.str1.1+0x1e20
   1115a:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   11161:	e8 00 00 00 00       	callq  11166 <e1000_request_irq+0x113b>
			11162: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   11166:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1116d:	00 
   1116e:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   11172:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   11178:	4c 89 ee             	mov    %r13,%rsi
   1117b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1117e: R_X86_64_32S	.rodata.str1.1+0x1e20
   11182:	48 89 da             	mov    %rbx,%rdx
   11185:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1118c:	e8 00 00 00 00       	callq  11191 <e1000_request_irq+0x1166>
			1118d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   11191:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11198:	00 
   11199:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   1119f:	48 89 da             	mov    %rbx,%rdx
   111a2:	4c 89 ee             	mov    %r13,%rsi
   111a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			111a8: R_X86_64_32S	.rodata.str1.1+0x1e20
   111ac:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   111b3:	e8 00 00 00 00       	callq  111b8 <e1000_request_irq+0x118d>
			111b4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   111b8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   111bf:	00 
   111c0:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   111c7:	48 85 c0             	test   %rax,%rax
   111ca:	74 47                	je     11213 <e1000_request_irq+0x11e8>
   111cc:	48 8d 48 60          	lea    0x60(%rax),%rcx
   111d0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   111d6:	48 89 da             	mov    %rbx,%rdx
   111d9:	4c 89 ee             	mov    %r13,%rsi
   111dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			111df: R_X86_64_32S	.rodata.str1.1+0x1e20
   111e3:	e8 00 00 00 00       	callq  111e8 <e1000_request_irq+0x11bd>
			111e4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   111e8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   111ef:	00 
   111f0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   111f6:	48 89 da             	mov    %rbx,%rdx
   111f9:	4c 89 ee             	mov    %r13,%rsi
   111fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			111ff: R_X86_64_32S	.rodata.str1.1+0x1e20
   11203:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1120a:	48 83 c1 58          	add    $0x58,%rcx
   1120e:	e8 00 00 00 00       	callq  11213 <e1000_request_irq+0x11e8>
			1120f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   11213:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1121a:	00 
   1121b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1121e: R_X86_64_32S	.rodata.str1.1+0x1e20
   11222:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   11228:	48 89 da             	mov    %rbx,%rdx
   1122b:	4c 89 ee             	mov    %r13,%rsi
   1122e:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   11235:	e8 00 00 00 00       	callq  1123a <e1000_request_irq+0x120f>
			11236: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1123a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11241:	00 
   11242:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   11249:	48 85 ff             	test   %rdi,%rdi
   1124c:	74 64                	je     112b2 <e1000_request_irq+0x1287>
   1124e:	ba 08 00 00 00       	mov    $0x8,%edx
   11253:	be 10 00 00 00       	mov    $0x10,%esi
   11258:	e8 00 00 00 00       	callq  1125d <e1000_request_irq+0x1232>
			11259: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1125d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11264:	00 
   11265:	b9 08 00 00 00       	mov    $0x8,%ecx
   1126a:	48 89 da             	mov    %rbx,%rdx
   1126d:	4c 89 ee             	mov    %r13,%rsi
   11270:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11273: R_X86_64_32S	.rodata.str1.1+0x1e20
   11277:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   1127e:	49 83 c0 10          	add    $0x10,%r8
   11282:	e8 00 00 00 00       	callq  11287 <e1000_request_irq+0x125c>
			11283: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   11287:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1128e:	00 
   1128f:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   11295:	48 89 da             	mov    %rbx,%rdx
   11298:	4c 89 ee             	mov    %r13,%rsi
   1129b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1129e: R_X86_64_32S	.rodata.str1.1+0x1e20
   112a2:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   112a9:	48 83 c1 08          	add    $0x8,%rcx
   112ad:	e8 00 00 00 00       	callq  112b2 <e1000_request_irq+0x1287>
			112ae: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   112b2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   112b9:	00 
   112ba:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   112c0:	48 89 da             	mov    %rbx,%rdx
   112c3:	4c 89 ee             	mov    %r13,%rsi
   112c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			112c9: R_X86_64_32S	.rodata.str1.1+0x1e20
   112cd:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   112d4:	e8 00 00 00 00       	callq  112d9 <e1000_request_irq+0x12ae>
			112d5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   112d9:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   112e0:	00 
   112e1:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   112e8:	00 
   112e9:	74 63                	je     1134e <e1000_request_irq+0x1323>
   112eb:	31 db                	xor    %ebx,%ebx
   112ed:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   112f4:	00 
   112f5:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   112f9:	b9 01 00 00 00       	mov    $0x1,%ecx
   112fe:	4c 89 ee             	mov    %r13,%rsi
   11301:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11304: R_X86_64_32S	.rodata.str1.1+0x1e20
   11308:	4c 89 f2             	mov    %r14,%rdx
   1130b:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   11312:	49 83 c0 08          	add    $0x8,%r8
   11316:	49 01 d8             	add    %rbx,%r8
   11319:	48 ff c3             	inc    %rbx
   1131c:	e8 00 00 00 00       	callq  11321 <e1000_request_irq+0x12f6>
			1131d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   11321:	48 83 fb 20          	cmp    $0x20,%rbx
   11325:	75 c6                	jne    112ed <e1000_request_irq+0x12c2>
   11327:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1132e:	00 
   1132f:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   11335:	4c 89 f2             	mov    %r14,%rdx
   11338:	4c 89 ee             	mov    %r13,%rsi
   1133b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1133e: R_X86_64_32S	.rodata.str1.1+0x1e20
   11342:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   11349:	e8 00 00 00 00       	callq  1134e <e1000_request_irq+0x1323>
			1134a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1134e:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   11352:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   11359:	00 
   1135a:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   11360:	4c 89 ee             	mov    %r13,%rsi
   11363:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11366: R_X86_64_32S	.rodata.str1.1+0x1e20
   1136a:	48 89 da             	mov    %rbx,%rdx
   1136d:	e8 00 00 00 00       	callq  11372 <e1000_request_irq+0x1347>
			1136e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   11372:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   11379:	00 
   1137a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11380:	48 89 da             	mov    %rbx,%rdx
   11383:	4c 89 ee             	mov    %r13,%rsi
   11386:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11389: R_X86_64_32S	.rodata.str1.1+0x1e20
   1138d:	e8 00 00 00 00       	callq  11392 <e1000_request_irq+0x1367>
			1138e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   11392:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   11399:	00 
   1139a:	48 85 c0             	test   %rax,%rax
   1139d:	74 1a                	je     113b9 <e1000_request_irq+0x138e>
   1139f:	49 89 c0             	mov    %rax,%r8
   113a2:	b9 08 00 00 00       	mov    $0x8,%ecx
   113a7:	48 89 da             	mov    %rbx,%rdx
   113aa:	4c 89 ee             	mov    %r13,%rsi
   113ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			113b0: R_X86_64_32S	.rodata.str1.1+0x1e20
   113b4:	e8 00 00 00 00       	callq  113b9 <e1000_request_irq+0x138e>
			113b5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   113b9:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   113bd:	b9 02 00 00 00       	mov    $0x2,%ecx
   113c2:	48 89 da             	mov    %rbx,%rdx
   113c5:	4c 89 ee             	mov    %r13,%rsi
   113c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			113cb: R_X86_64_32S	.rodata.str1.1+0x1e20
   113cf:	49 83 c0 3c          	add    $0x3c,%r8
   113d3:	e8 00 00 00 00       	callq  113d8 <e1000_request_irq+0x13ad>
			113d4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   113d8:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   113dc:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   113e2:	48 89 da             	mov    %rbx,%rdx
   113e5:	4c 89 ee             	mov    %r13,%rsi
   113e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			113eb: R_X86_64_32S	.rodata.str1.1+0x1e20
   113ef:	48 83 c1 10          	add    $0x10,%rcx
   113f3:	e8 00 00 00 00       	callq  113f8 <e1000_request_irq+0x13cd>
			113f4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   113f8:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   113fc:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   11400:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11403: R_X86_64_32S	.rodata.str1.1+0x1e20
   11407:	b9 04 00 00 00       	mov    $0x4,%ecx
   1140c:	4c 89 ee             	mov    %r13,%rsi
   1140f:	e8 00 00 00 00       	callq  11414 <e1000_request_irq+0x13e9>
			11410: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   11414:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   11418:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
   1141b:	48 85 ff             	test   %rdi,%rdi
   1141e:	74 0d                	je     1142d <e1000_request_irq+0x1402>
   11420:	e8 00 00 00 00       	callq  11425 <e1000_request_irq+0x13fa>
			11421: R_X86_64_PC32	kfree+0xfffffffffffffffc
   11425:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   1142c:	00 
   1142d:	85 db                	test   %ebx,%ebx
   1142f:	74 68                	je     11499 <e1000_request_irq+0x146e>
   11431:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   11435:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			11438: R_X86_64_32S	.text+0x230f0
   1143c:	b8 80 00 00 00       	mov    $0x80,%eax
   11441:	c6 81 c4 07 00 00 00 	movb   $0x0,0x7c4(%rcx)
   11448:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   1144c:	48 63 d0             	movslq %eax,%rdx
   1144f:	4c 8b 45 90          	mov    0xffffffffffffff90(%rbp),%r8
   11453:	48 8b 81 f8 02 00 00 	mov    0x2f8(%rcx),%rax
   1145a:	4c 89 c1             	mov    %r8,%rcx
   1145d:	8b b8 fc 02 00 00    	mov    0x2fc(%rax),%edi
   11463:	e8 70 32 ff ff       	callq  46d8 <request_irq>
   11468:	85 c0                	test   %eax,%eax
   1146a:	89 c3                	mov    %eax,%ebx
   1146c:	74 41                	je     114af <e1000_request_irq+0x1484>
   1146e:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   11472:	80 b8 c4 07 00 00 00 	cmpb   $0x0,0x7c4(%rax)
   11479:	74 0c                	je     11487 <e1000_request_irq+0x145c>
   1147b:	48 8b b8 f8 02 00 00 	mov    0x2f8(%rax),%rdi
   11482:	e8 3e 8a ff ff       	callq  9ec5 <pci_disable_msi>
   11487:	89 de                	mov    %ebx,%esi
   11489:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1148c: R_X86_64_32S	str_478483537
   11490:	31 c0                	xor    %eax,%eax
   11492:	e8 00 00 00 00       	callq  11497 <e1000_request_irq+0x146c>
			11493: R_X86_64_PC32	printk+0xfffffffffffffffc
   11497:	eb 16                	jmp    114af <e1000_request_irq+0x1484>
   11499:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   1149d:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			114a0: R_X86_64_32S	.text+0x3697d
   114a4:	31 c0                	xor    %eax,%eax
   114a6:	c6 82 c4 07 00 00 01 	movb   $0x1,0x7c4(%rdx)
   114ad:	eb 99                	jmp    11448 <e1000_request_irq+0x141d>
   114af:	48 83 c4 58          	add    $0x58,%rsp
   114b3:	89 d8                	mov    %ebx,%eax
   114b5:	5b                   	pop    %rbx
   114b6:	41 5c                	pop    %r12
   114b8:	41 5d                	pop    %r13
   114ba:	41 5e                	pop    %r14
   114bc:	41 5f                	pop    %r15
   114be:	c9                   	leaveq 
   114bf:	c3                   	retq   

00000000000114c0 <__napi_schedule>:
   114c0:	55                   	push   %rbp
   114c1:	48 89 e5             	mov    %rsp,%rbp
   114c4:	41 55                	push   %r13
   114c6:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
   114ca:	41 54                	push   %r12
   114cc:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   114d0:	53                   	push   %rbx
   114d1:	48 89 fb             	mov    %rdi,%rbx
   114d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			114d7: R_X86_64_32S	.rodata.str1.1+0x1e69
   114db:	48 83 ec 38          	sub    $0x38,%rsp
   114df:	e8 00 00 00 00       	callq  114e4 <__napi_schedule+0x24>
			114e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   114e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			114e7: R_X86_64_32S	.rodata.str1.1+0x1e79
   114eb:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   114f2:	00 
   114f3:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   114fa:	00 
   114fb:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   11502:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
   11506:	e8 00 00 00 00       	callq  1150b <__napi_schedule+0x4b>
			11507: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1150b:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
   1150f:	4c 89 ea             	mov    %r13,%rdx
   11512:	4c 89 e6             	mov    %r12,%rsi
   11515:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11518: R_X86_64_32S	.rodata.str1.1+0x1e69
   1151c:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
   11523:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
   1152a:	00 
   1152b:	e8 00 00 00 00       	callq  11530 <__napi_schedule+0x70>
			1152c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11530:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   11534:	48 85 c0             	test   %rax,%rax
   11537:	74 1c                	je     11555 <__napi_schedule+0x95>
   11539:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1153d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11543:	4c 89 ea             	mov    %r13,%rdx
   11546:	4c 89 e6             	mov    %r12,%rsi
   11549:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1154c: R_X86_64_32S	.rodata.str1.1+0x1e69
   11550:	e8 00 00 00 00       	callq  11555 <__napi_schedule+0x95>
			11551: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11555:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   11559:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   1155d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11560: R_X86_64_32S	.rodata.str1.1+0x1e69
   11564:	48 c7 45 b0 39 04 00 	movq   $0x439,0xffffffffffffffb0(%rbp)
   1156b:	00 
   1156c:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   11570:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
   11573:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
   11576:	e8 00 00 00 00       	callq  1157b <__napi_schedule+0xbb>
			11577: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   1157b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1157e: R_X86_64_32S	.rodata.str1.1+0x1e97
   11582:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
   11586:	e8 00 00 00 00       	callq  1158b <__napi_schedule+0xcb>
			11587: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1158b:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
   1158f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11592: R_X86_64_32S	.rodata.str1.1+0x1e69
   11596:	41 b8 88 00 00 00    	mov    $0x88,%r8d
   1159c:	4c 89 e1             	mov    %r12,%rcx
   1159f:	4c 89 ea             	mov    %r13,%rdx
   115a2:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
   115a9:	48 89 de             	mov    %rbx,%rsi
   115ac:	e8 00 00 00 00       	callq  115b1 <__napi_schedule+0xf1>
			115ad: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   115b1:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   115b5:	48 85 ff             	test   %rdi,%rdi
   115b8:	74 2e                	je     115e8 <__napi_schedule+0x128>
   115ba:	ba 08 00 00 00       	mov    $0x8,%edx
   115bf:	be 10 00 00 00       	mov    $0x10,%esi
   115c4:	e8 00 00 00 00       	callq  115c9 <__napi_schedule+0x109>
			115c5: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   115c9:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   115cd:	b9 08 00 00 00       	mov    $0x8,%ecx
   115d2:	4c 89 ea             	mov    %r13,%rdx
   115d5:	48 89 de             	mov    %rbx,%rsi
   115d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			115db: R_X86_64_32S	.rodata.str1.1+0x1e69
   115df:	49 83 c0 10          	add    $0x10,%r8
   115e3:	e8 00 00 00 00       	callq  115e8 <__napi_schedule+0x128>
			115e4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   115e8:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   115ec:	48 85 ff             	test   %rdi,%rdi
   115ef:	74 05                	je     115f6 <__napi_schedule+0x136>
   115f1:	e8 00 00 00 00       	callq  115f6 <__napi_schedule+0x136>
			115f2: R_X86_64_PC32	kfree+0xfffffffffffffffc
   115f6:	48 83 c4 38          	add    $0x38,%rsp
   115fa:	5b                   	pop    %rbx
   115fb:	41 5c                	pop    %r12
   115fd:	41 5d                	pop    %r13
   115ff:	c9                   	leaveq 
   11600:	c3                   	retq   

0000000000011601 <pci_ioremap_bar>:
   11601:	55                   	push   %rbp
   11602:	48 89 e5             	mov    %rsp,%rbp
   11605:	41 57                	push   %r15
   11607:	41 56                	push   %r14
   11609:	41 55                	push   %r13
   1160b:	41 54                	push   %r12
   1160d:	53                   	push   %rbx
   1160e:	48 83 ec 58          	sub    $0x58,%rsp
   11612:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
   11616:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11619: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1161d:	89 75 84             	mov    %esi,0xffffffffffffff84(%rbp)
   11620:	e8 00 00 00 00       	callq  11625 <pci_ioremap_bar+0x24>
			11621: R_X86_64_PC32	record_function+0xfffffffffffffffc
   11625:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   11629:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1162c: R_X86_64_32S	.rodata.str1.1+0x1ec5
   11630:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   11637:	00 
   11638:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   1163f:	00 
   11640:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   11647:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   1164b:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   1164e:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   11651:	e8 00 00 00 00       	callq  11656 <pci_ioremap_bar+0x55>
			11652: R_X86_64_PC32	record_function+0xfffffffffffffffc
   11656:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   1165a:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1165e:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   11662:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11665: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11669:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   11670:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   11677:	00 
   11678:	e8 00 00 00 00       	callq  1167d <pci_ioremap_bar+0x7c>
			11679: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1167d:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   11682:	0f 84 5c 09 00 00    	je     11fe4 <pci_ioremap_bar+0x9e3>
   11688:	45 31 ff             	xor    %r15d,%r15d
   1168b:	45 31 f6             	xor    %r14d,%r14d
   1168e:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   11695:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   11699:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   1169d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   116a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			116a6: R_X86_64_32S	.rodata.str1.1+0x1eb5
   116aa:	41 ff c7             	inc    %r15d
   116ad:	48 89 d9             	mov    %rbx,%rcx
   116b0:	48 03 4d b0          	add    0xffffffffffffffb0(%rbp),%rcx
   116b4:	4c 89 e2             	mov    %r12,%rdx
   116b7:	4c 89 ee             	mov    %r13,%rsi
   116ba:	48 83 c1 08          	add    $0x8,%rcx
   116be:	e8 00 00 00 00       	callq  116c3 <pci_ioremap_bar+0xc2>
			116bf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   116c3:	48 03 5d b0          	add    0xffffffffffffffb0(%rbp),%rbx
   116c7:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   116cd:	4c 89 e2             	mov    %r12,%rdx
   116d0:	4c 89 ee             	mov    %r13,%rsi
   116d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			116d6: R_X86_64_32S	.rodata.str1.1+0x1eb5
   116da:	48 89 d9             	mov    %rbx,%rcx
   116dd:	e8 00 00 00 00       	callq  116e2 <pci_ioremap_bar+0xe1>
			116de: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   116e2:	4c 89 f1             	mov    %r14,%rcx
   116e5:	48 03 4d b0          	add    0xffffffffffffffb0(%rbp),%rcx
   116e9:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   116ef:	4c 89 e2             	mov    %r12,%rdx
   116f2:	4c 89 ee             	mov    %r13,%rsi
   116f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			116f8: R_X86_64_32S	.rodata.str1.1+0x1eb5
   116fc:	49 83 c6 38          	add    $0x38,%r14
   11700:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   11707:	e8 00 00 00 00       	callq  1170c <pci_ioremap_bar+0x10b>
			11708: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1170c:	41 83 ff 0c          	cmp    $0xc,%r15d
   11710:	0f 85 78 ff ff ff    	jne    1168e <pci_ioremap_bar+0x8d>
   11716:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1171a:	4c 89 e2             	mov    %r12,%rdx
   1171d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11723:	4c 89 ee             	mov    %r13,%rsi
   11726:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11729: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1172d:	45 31 ff             	xor    %r15d,%r15d
   11730:	48 83 c1 48          	add    $0x48,%rcx
   11734:	e8 00 00 00 00       	callq  11739 <pci_ioremap_bar+0x138>
			11735: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11739:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1173d:	4c 89 e2             	mov    %r12,%rdx
   11740:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11746:	4c 89 ee             	mov    %r13,%rsi
   11749:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1174c: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11750:	48 83 c1 38          	add    $0x38,%rcx
   11754:	e8 00 00 00 00       	callq  11759 <pci_ioremap_bar+0x158>
			11755: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11759:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1175d:	4c 89 e2             	mov    %r12,%rdx
   11760:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11766:	4c 89 ee             	mov    %r13,%rsi
   11769:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1176c: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11770:	48 83 c1 7c          	add    $0x7c,%rcx
   11774:	e8 00 00 00 00       	callq  11779 <pci_ioremap_bar+0x178>
			11775: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11779:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1177d:	4c 89 e2             	mov    %r12,%rdx
   11780:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11786:	4c 89 ee             	mov    %r13,%rsi
   11789:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1178c: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11790:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   11797:	e8 00 00 00 00       	callq  1179c <pci_ioremap_bar+0x19b>
			11798: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1179c:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   117a0:	4c 89 e2             	mov    %r12,%rdx
   117a3:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   117a9:	4c 89 ee             	mov    %r13,%rsi
   117ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			117af: R_X86_64_32S	.rodata.str1.1+0x1eb5
   117b3:	48 83 c1 3e          	add    $0x3e,%rcx
   117b7:	e8 00 00 00 00       	callq  117bc <pci_ioremap_bar+0x1bb>
			117b8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   117bc:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   117c0:	4c 89 e2             	mov    %r12,%rdx
   117c3:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   117c9:	4c 89 ee             	mov    %r13,%rsi
   117cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			117cf: R_X86_64_32S	.rodata.str1.1+0x1eb5
   117d3:	48 83 c1 42          	add    $0x42,%rcx
   117d7:	e8 00 00 00 00       	callq  117dc <pci_ioremap_bar+0x1db>
			117d8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   117dc:	4c 8b 65 b0          	mov    0xffffffffffffffb0(%rbp),%r12
   117e0:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   117e4:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   117eb:	00 
   117ec:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   117f0:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   117f4:	48 89 d9             	mov    %rbx,%rcx
   117f7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   117fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11800: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11804:	49 ff c7             	inc    %r15
   11807:	4c 89 ea             	mov    %r13,%rdx
   1180a:	4c 89 f6             	mov    %r14,%rsi
   1180d:	48 ff c3             	inc    %rbx
   11810:	e8 00 00 00 00       	callq  11815 <pci_ioremap_bar+0x214>
			11811: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11815:	49 83 ff 14          	cmp    $0x14,%r15
   11819:	75 d1                	jne    117ec <pci_ioremap_bar+0x1eb>
   1181b:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   11822:	00 
   11823:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   11827:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1182d:	4c 89 ea             	mov    %r13,%rdx
   11830:	4c 89 f6             	mov    %r14,%rsi
   11833:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11836: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1183a:	48 89 d9             	mov    %rbx,%rcx
   1183d:	83 e0 01             	and    $0x1,%eax
   11840:	0f b6 c0             	movzbl %al,%eax
   11843:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   11846:	e8 00 00 00 00       	callq  1184b <pci_ioremap_bar+0x24a>
			11847: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1184b:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   11852:	00 
   11853:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11859:	48 89 d9             	mov    %rbx,%rcx
   1185c:	4c 89 ea             	mov    %r13,%rdx
   1185f:	4c 89 f6             	mov    %r14,%rsi
   11862:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11865: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11869:	d0 e8                	shr    %al
   1186b:	83 e0 01             	and    $0x1,%eax
   1186e:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   11871:	e8 00 00 00 00       	callq  11876 <pci_ioremap_bar+0x275>
			11872: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11876:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   1187d:	00 
   1187e:	4c 89 ea             	mov    %r13,%rdx
   11881:	4c 89 f6             	mov    %r14,%rsi
   11884:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11887: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1188b:	e8 00 00 00 00       	callq  11890 <pci_ioremap_bar+0x28f>
			1188c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11890:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   11897:	00 
   11898:	48 85 c0             	test   %rax,%rax
   1189b:	0f 84 ac 00 00 00    	je     1194d <pci_ioremap_bar+0x34c>
   118a1:	48 8d 48 18          	lea    0x18(%rax),%rcx
   118a5:	4c 89 ea             	mov    %r13,%rdx
   118a8:	4c 89 f6             	mov    %r14,%rsi
   118ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			118ae: R_X86_64_32S	.rodata.str1.1+0x1eb5
   118b2:	e8 00 00 00 00       	callq  118b7 <pci_ioremap_bar+0x2b6>
			118b3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   118b7:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   118be:	00 
   118bf:	4c 89 ea             	mov    %r13,%rdx
   118c2:	4c 89 f6             	mov    %r14,%rsi
   118c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			118c8: R_X86_64_32S	.rodata.str1.1+0x1eb5
   118cc:	48 83 c1 20          	add    $0x20,%rcx
   118d0:	e8 00 00 00 00       	callq  118d5 <pci_ioremap_bar+0x2d4>
			118d1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   118d5:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   118dc:	00 
   118dd:	4c 89 ea             	mov    %r13,%rdx
   118e0:	4c 89 f6             	mov    %r14,%rsi
   118e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			118e6: R_X86_64_32S	.rodata.str1.1+0x1eb5
   118ea:	48 83 c1 30          	add    $0x30,%rcx
   118ee:	e8 00 00 00 00       	callq  118f3 <pci_ioremap_bar+0x2f2>
			118ef: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   118f3:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   118fa:	00 
   118fb:	4c 89 ea             	mov    %r13,%rdx
   118fe:	4c 89 f6             	mov    %r14,%rsi
   11901:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11904: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11908:	48 83 c1 10          	add    $0x10,%rcx
   1190c:	e8 00 00 00 00       	callq  11911 <pci_ioremap_bar+0x310>
			1190d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11911:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   11918:	00 
   11919:	4c 89 ea             	mov    %r13,%rdx
   1191c:	4c 89 f6             	mov    %r14,%rsi
   1191f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11922: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11926:	48 83 c1 28          	add    $0x28,%rcx
   1192a:	e8 00 00 00 00       	callq  1192f <pci_ioremap_bar+0x32e>
			1192b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1192f:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   11936:	00 
   11937:	4c 89 ea             	mov    %r13,%rdx
   1193a:	4c 89 f6             	mov    %r14,%rsi
   1193d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11940: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11944:	48 83 c1 08          	add    $0x8,%rcx
   11948:	e8 00 00 00 00       	callq  1194d <pci_ioremap_bar+0x34c>
			11949: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1194d:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   11954:	00 
   11955:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1195b:	4c 89 ea             	mov    %r13,%rdx
   1195e:	4c 89 f6             	mov    %r14,%rsi
   11961:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11964: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11968:	e8 00 00 00 00       	callq  1196d <pci_ioremap_bar+0x36c>
			11969: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1196d:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   11974:	00 
   11975:	4c 89 ea             	mov    %r13,%rdx
   11978:	4c 89 f6             	mov    %r14,%rsi
   1197b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1197e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11982:	e8 00 00 00 00       	callq  11987 <pci_ioremap_bar+0x386>
			11983: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11987:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1198e:	00 
   1198f:	48 85 c0             	test   %rax,%rax
   11992:	0f 84 91 05 00 00    	je     11f29 <pci_ioremap_bar+0x928>
   11998:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   1199f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   119a5:	4c 89 ea             	mov    %r13,%rdx
   119a8:	4c 89 f6             	mov    %r14,%rsi
   119ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			119ae: R_X86_64_32S	.rodata.str1.1+0x1eb5
   119b2:	31 db                	xor    %ebx,%ebx
   119b4:	e8 00 00 00 00       	callq  119b9 <pci_ioremap_bar+0x3b8>
			119b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   119b9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   119c0:	00 
   119c1:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   119c7:	4c 89 ea             	mov    %r13,%rdx
   119ca:	4c 89 f6             	mov    %r14,%rsi
   119cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			119d0: R_X86_64_32S	.rodata.str1.1+0x1eb5
   119d4:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   119db:	e8 00 00 00 00       	callq  119e0 <pci_ioremap_bar+0x3df>
			119dc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   119e0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   119e7:	00 
   119e8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   119ee:	4c 89 ea             	mov    %r13,%rdx
   119f1:	4c 89 f6             	mov    %r14,%rsi
   119f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			119f7: R_X86_64_32S	.rodata.str1.1+0x1eb5
   119fb:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   11a02:	e8 00 00 00 00       	callq  11a07 <pci_ioremap_bar+0x406>
			11a03: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11a07:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11a0e:	00 
   11a0f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11a15:	4c 89 ea             	mov    %r13,%rdx
   11a18:	4c 89 f6             	mov    %r14,%rsi
   11a1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11a1e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11a22:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   11a29:	e8 00 00 00 00       	callq  11a2e <pci_ioremap_bar+0x42d>
			11a2a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11a2e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11a35:	00 
   11a36:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11a3c:	4c 89 ea             	mov    %r13,%rdx
   11a3f:	4c 89 f6             	mov    %r14,%rsi
   11a42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11a45: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11a49:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   11a50:	e8 00 00 00 00       	callq  11a55 <pci_ioremap_bar+0x454>
			11a51: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11a55:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11a5c:	00 
   11a5d:	4c 89 ea             	mov    %r13,%rdx
   11a60:	4c 89 f6             	mov    %r14,%rsi
   11a63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11a66: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11a6a:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   11a71:	e8 00 00 00 00       	callq  11a76 <pci_ioremap_bar+0x475>
			11a72: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11a76:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11a7d:	00 
   11a7e:	4c 89 ea             	mov    %r13,%rdx
   11a81:	4c 89 f6             	mov    %r14,%rsi
   11a84:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11a87: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11a8b:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   11a92:	e8 00 00 00 00       	callq  11a97 <pci_ioremap_bar+0x496>
			11a93: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11a97:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11a9e:	00 
   11a9f:	4c 89 ea             	mov    %r13,%rdx
   11aa2:	4c 89 f6             	mov    %r14,%rsi
   11aa5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11aa8: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11aac:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   11ab3:	e8 00 00 00 00       	callq  11ab8 <pci_ioremap_bar+0x4b7>
			11ab4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11ab8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11abf:	00 
   11ac0:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   11ac4:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   11ac8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11ace:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11ad1: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11ad5:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   11adc:	48 01 d9             	add    %rbx,%rcx
   11adf:	48 ff c3             	inc    %rbx
   11ae2:	e8 00 00 00 00       	callq  11ae7 <pci_ioremap_bar+0x4e6>
			11ae3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11ae7:	48 83 fb 20          	cmp    $0x20,%rbx
   11aeb:	75 cb                	jne    11ab8 <pci_ioremap_bar+0x4b7>
   11aed:	30 db                	xor    %bl,%bl
   11aef:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11af6:	00 
   11af7:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   11afb:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   11aff:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11b05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11b08: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11b0c:	4c 89 ea             	mov    %r13,%rdx
   11b0f:	4c 89 f6             	mov    %r14,%rsi
   11b12:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   11b19:	48 01 d9             	add    %rbx,%rcx
   11b1c:	48 ff c3             	inc    %rbx
   11b1f:	e8 00 00 00 00       	callq  11b24 <pci_ioremap_bar+0x523>
			11b20: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11b24:	48 83 fb 20          	cmp    $0x20,%rbx
   11b28:	75 c5                	jne    11aef <pci_ioremap_bar+0x4ee>
   11b2a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11b31:	00 
   11b32:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   11b38:	4c 89 ea             	mov    %r13,%rdx
   11b3b:	4c 89 f6             	mov    %r14,%rsi
   11b3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11b41: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11b45:	30 db                	xor    %bl,%bl
   11b47:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   11b4e:	e8 00 00 00 00       	callq  11b53 <pci_ioremap_bar+0x552>
			11b4f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11b53:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11b5a:	00 
   11b5b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11b61:	4c 89 ea             	mov    %r13,%rdx
   11b64:	4c 89 f6             	mov    %r14,%rsi
   11b67:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11b6a: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11b6e:	48 83 c1 48          	add    $0x48,%rcx
   11b72:	e8 00 00 00 00       	callq  11b77 <pci_ioremap_bar+0x576>
			11b73: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11b77:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11b7e:	00 
   11b7f:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   11b83:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   11b87:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11b8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11b90: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11b94:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   11b9b:	48 01 d9             	add    %rbx,%rcx
   11b9e:	48 ff c3             	inc    %rbx
   11ba1:	e8 00 00 00 00       	callq  11ba6 <pci_ioremap_bar+0x5a5>
			11ba2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11ba6:	48 83 fb 20          	cmp    $0x20,%rbx
   11baa:	75 cb                	jne    11b77 <pci_ioremap_bar+0x576>
   11bac:	30 db                	xor    %bl,%bl
   11bae:	48 89 d9             	mov    %rbx,%rcx
   11bb1:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   11bb8:	00 
   11bb9:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   11bbd:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   11bc1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11bc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11bca: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11bce:	4c 89 ea             	mov    %r13,%rdx
   11bd1:	48 ff c3             	inc    %rbx
   11bd4:	4c 89 f6             	mov    %r14,%rsi
   11bd7:	e8 00 00 00 00       	callq  11bdc <pci_ioremap_bar+0x5db>
			11bd8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11bdc:	48 83 fb 10          	cmp    $0x10,%rbx
   11be0:	75 cc                	jne    11bae <pci_ioremap_bar+0x5ad>
   11be2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11be9:	00 
   11bea:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11bf0:	4c 89 ea             	mov    %r13,%rdx
   11bf3:	4c 89 f6             	mov    %r14,%rsi
   11bf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11bf9: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11bfd:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   11c04:	e8 00 00 00 00       	callq  11c09 <pci_ioremap_bar+0x608>
			11c05: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11c09:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11c10:	00 
   11c11:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11c17:	4c 89 ea             	mov    %r13,%rdx
   11c1a:	4c 89 f6             	mov    %r14,%rsi
   11c1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11c20: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11c24:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   11c2b:	e8 00 00 00 00       	callq  11c30 <pci_ioremap_bar+0x62f>
			11c2c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11c30:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11c37:	00 
   11c38:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11c3e:	4c 89 ea             	mov    %r13,%rdx
   11c41:	4c 89 f6             	mov    %r14,%rsi
   11c44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11c47: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11c4b:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   11c52:	e8 00 00 00 00       	callq  11c57 <pci_ioremap_bar+0x656>
			11c53: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11c57:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11c5e:	00 
   11c5f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11c65:	4c 89 ea             	mov    %r13,%rdx
   11c68:	4c 89 f6             	mov    %r14,%rsi
   11c6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11c6e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11c72:	48 83 c1 70          	add    $0x70,%rcx
   11c76:	e8 00 00 00 00       	callq  11c7b <pci_ioremap_bar+0x67a>
			11c77: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11c7b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11c82:	00 
   11c83:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11c89:	4c 89 ea             	mov    %r13,%rdx
   11c8c:	4c 89 f6             	mov    %r14,%rsi
   11c8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11c92: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11c96:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   11c9d:	e8 00 00 00 00       	callq  11ca2 <pci_ioremap_bar+0x6a1>
			11c9e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11ca2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11ca9:	00 
   11caa:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11cb0:	4c 89 ea             	mov    %r13,%rdx
   11cb3:	4c 89 f6             	mov    %r14,%rsi
   11cb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11cb9: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11cbd:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   11cc4:	e8 00 00 00 00       	callq  11cc9 <pci_ioremap_bar+0x6c8>
			11cc5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11cc9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11cd0:	00 
   11cd1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11cd7:	4c 89 ea             	mov    %r13,%rdx
   11cda:	4c 89 f6             	mov    %r14,%rsi
   11cdd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11ce0: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11ce4:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   11ceb:	e8 00 00 00 00       	callq  11cf0 <pci_ioremap_bar+0x6ef>
			11cec: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11cf0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11cf7:	00 
   11cf8:	4c 89 ea             	mov    %r13,%rdx
   11cfb:	4c 89 f6             	mov    %r14,%rsi
   11cfe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11d01: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11d05:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   11d0c:	e8 00 00 00 00       	callq  11d11 <pci_ioremap_bar+0x710>
			11d0d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11d11:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11d18:	00 
   11d19:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   11d20:	00 
   11d21:	74 62                	je     11d85 <pci_ioremap_bar+0x784>
   11d23:	30 db                	xor    %bl,%bl
   11d25:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11d2c:	00 
   11d2d:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   11d31:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   11d35:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11d3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11d3e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11d42:	4c 89 ea             	mov    %r13,%rdx
   11d45:	4c 89 f6             	mov    %r14,%rsi
   11d48:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   11d4f:	48 83 c1 08          	add    $0x8,%rcx
   11d53:	48 01 d9             	add    %rbx,%rcx
   11d56:	48 ff c3             	inc    %rbx
   11d59:	e8 00 00 00 00       	callq  11d5e <pci_ioremap_bar+0x75d>
			11d5a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11d5e:	48 83 fb 20          	cmp    $0x20,%rbx
   11d62:	75 c1                	jne    11d25 <pci_ioremap_bar+0x724>
   11d64:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11d6b:	00 
   11d6c:	4c 89 ea             	mov    %r13,%rdx
   11d6f:	4c 89 f6             	mov    %r14,%rsi
   11d72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11d75: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11d79:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   11d80:	e8 00 00 00 00       	callq  11d85 <pci_ioremap_bar+0x784>
			11d81: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11d85:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11d8c:	00 
   11d8d:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   11d91:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   11d95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11d98: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11d9c:	48 89 da             	mov    %rbx,%rdx
   11d9f:	4c 89 ee             	mov    %r13,%rsi
   11da2:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   11da9:	e8 00 00 00 00       	callq  11dae <pci_ioremap_bar+0x7ad>
			11daa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11dae:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11db5:	00 
   11db6:	48 89 da             	mov    %rbx,%rdx
   11db9:	4c 89 ee             	mov    %r13,%rsi
   11dbc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11dbf: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11dc3:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   11dca:	e8 00 00 00 00       	callq  11dcf <pci_ioremap_bar+0x7ce>
			11dcb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11dcf:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11dd6:	00 
   11dd7:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   11dde:	48 85 c0             	test   %rax,%rax
   11de1:	74 3b                	je     11e1e <pci_ioremap_bar+0x81d>
   11de3:	48 8d 48 60          	lea    0x60(%rax),%rcx
   11de7:	48 89 da             	mov    %rbx,%rdx
   11dea:	4c 89 ee             	mov    %r13,%rsi
   11ded:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11df0: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11df4:	e8 00 00 00 00       	callq  11df9 <pci_ioremap_bar+0x7f8>
			11df5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11df9:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11e00:	00 
   11e01:	48 89 da             	mov    %rbx,%rdx
   11e04:	4c 89 ee             	mov    %r13,%rsi
   11e07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11e0a: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11e0e:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   11e15:	48 83 c1 58          	add    $0x58,%rcx
   11e19:	e8 00 00 00 00       	callq  11e1e <pci_ioremap_bar+0x81d>
			11e1a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11e1e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11e25:	00 
   11e26:	48 89 da             	mov    %rbx,%rdx
   11e29:	4c 89 ee             	mov    %r13,%rsi
   11e2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11e2f: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11e33:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   11e3a:	e8 00 00 00 00       	callq  11e3f <pci_ioremap_bar+0x83e>
			11e3b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11e3f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11e46:	00 
   11e47:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   11e4e:	48 85 c0             	test   %rax,%rax
   11e51:	74 41                	je     11e94 <pci_ioremap_bar+0x893>
   11e53:	48 8d 48 10          	lea    0x10(%rax),%rcx
   11e57:	48 89 da             	mov    %rbx,%rdx
   11e5a:	4c 89 ee             	mov    %r13,%rsi
   11e5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11e60: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11e64:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11e6a:	e8 00 00 00 00       	callq  11e6f <pci_ioremap_bar+0x86e>
			11e6b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11e6f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11e76:	00 
   11e77:	48 89 da             	mov    %rbx,%rdx
   11e7a:	4c 89 ee             	mov    %r13,%rsi
   11e7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11e80: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11e84:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   11e8b:	48 83 c1 08          	add    $0x8,%rcx
   11e8f:	e8 00 00 00 00       	callq  11e94 <pci_ioremap_bar+0x893>
			11e90: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11e94:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   11e9b:	00 
   11e9c:	48 89 da             	mov    %rbx,%rdx
   11e9f:	4c 89 ee             	mov    %r13,%rsi
   11ea2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11ea5: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11ea9:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   11eb0:	e8 00 00 00 00       	callq  11eb5 <pci_ioremap_bar+0x8b4>
			11eb1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11eb5:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11ebc:	00 
   11ebd:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   11ec4:	00 
   11ec5:	74 62                	je     11f29 <pci_ioremap_bar+0x928>
   11ec7:	31 db                	xor    %ebx,%ebx
   11ec9:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11ed0:	00 
   11ed1:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   11ed5:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   11ed9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11edf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11ee2: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11ee6:	4c 89 ea             	mov    %r13,%rdx
   11ee9:	4c 89 f6             	mov    %r14,%rsi
   11eec:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   11ef3:	48 83 c1 08          	add    $0x8,%rcx
   11ef7:	48 01 d9             	add    %rbx,%rcx
   11efa:	48 ff c3             	inc    %rbx
   11efd:	e8 00 00 00 00       	callq  11f02 <pci_ioremap_bar+0x901>
			11efe: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11f02:	48 83 fb 20          	cmp    $0x20,%rbx
   11f06:	75 c1                	jne    11ec9 <pci_ioremap_bar+0x8c8>
   11f08:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   11f0f:	00 
   11f10:	4c 89 ea             	mov    %r13,%rdx
   11f13:	4c 89 f6             	mov    %r14,%rsi
   11f16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f19: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11f1d:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   11f24:	e8 00 00 00 00       	callq  11f29 <pci_ioremap_bar+0x928>
			11f25: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11f29:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   11f2d:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   11f31:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   11f38:	00 
   11f39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f3c: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11f40:	48 89 da             	mov    %rbx,%rdx
   11f43:	4c 89 ee             	mov    %r13,%rsi
   11f46:	e8 00 00 00 00       	callq  11f4b <pci_ioremap_bar+0x94a>
			11f47: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11f4b:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   11f52:	00 
   11f53:	48 89 da             	mov    %rbx,%rdx
   11f56:	4c 89 ee             	mov    %r13,%rsi
   11f59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f5c: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11f60:	e8 00 00 00 00       	callq  11f65 <pci_ioremap_bar+0x964>
			11f61: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11f65:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   11f6c:	00 
   11f6d:	48 85 c9             	test   %rcx,%rcx
   11f70:	74 18                	je     11f8a <pci_ioremap_bar+0x989>
   11f72:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   11f78:	48 89 da             	mov    %rbx,%rdx
   11f7b:	4c 89 ee             	mov    %r13,%rsi
   11f7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f81: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11f85:	e8 00 00 00 00       	callq  11f8a <pci_ioremap_bar+0x989>
			11f86: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11f8a:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   11f8e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   11f94:	48 89 da             	mov    %rbx,%rdx
   11f97:	4c 89 ee             	mov    %r13,%rsi
   11f9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11f9d: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11fa1:	48 83 c1 40          	add    $0x40,%rcx
   11fa5:	e8 00 00 00 00       	callq  11faa <pci_ioremap_bar+0x9a9>
			11fa6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11faa:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   11fae:	48 89 da             	mov    %rbx,%rdx
   11fb1:	4c 89 ee             	mov    %r13,%rsi
   11fb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11fb7: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11fbb:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   11fc1:	48 83 c1 3c          	add    $0x3c,%rcx
   11fc5:	e8 00 00 00 00       	callq  11fca <pci_ioremap_bar+0x9c9>
			11fc6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   11fca:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   11fce:	48 89 da             	mov    %rbx,%rdx
   11fd1:	4c 89 ee             	mov    %r13,%rsi
   11fd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11fd7: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11fdb:	48 83 c1 10          	add    $0x10,%rcx
   11fdf:	e8 00 00 00 00       	callq  11fe4 <pci_ioremap_bar+0x9e3>
			11fe0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   11fe4:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   11fe8:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   11fec:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   11ff0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   11ff6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			11ff9: R_X86_64_32S	.rodata.str1.1+0x1eb5
   11ffd:	4c 89 e2             	mov    %r12,%rdx
   12000:	48 89 de             	mov    %rbx,%rsi
   12003:	e8 00 00 00 00       	callq  12008 <pci_ioremap_bar+0xa07>
			12004: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12008:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   1200c:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   12010:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12013: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12017:	48 c7 45 90 18 06 00 	movq   $0x618,0xffffffffffffff90(%rbp)
   1201e:	00 
   1201f:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   12023:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   12026:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   12029:	e8 00 00 00 00       	callq  1202e <pci_ioremap_bar+0xa2d>
			1202a: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   1202e:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   12032:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12035: R_X86_64_32S	.rodata.str1.1+0x1ee3
   12039:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   1203d:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   12040:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   12043:	e8 00 00 00 00       	callq  12048 <pci_ioremap_bar+0xa47>
			12044: R_X86_64_PC32	record_function+0xfffffffffffffffc
   12048:	4c 8b 6d a0          	mov    0xffffffffffffffa0(%rbp),%r13
   1204c:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   12052:	48 89 d9             	mov    %rbx,%rcx
   12055:	4c 89 e2             	mov    %r12,%rdx
   12058:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1205b: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1205f:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   12066:	4c 89 ee             	mov    %r13,%rsi
   12069:	e8 00 00 00 00       	callq  1206e <pci_ioremap_bar+0xa6d>
			1206a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1206e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   12072:	48 85 c0             	test   %rax,%rax
   12075:	0f 84 3e 09 00 00    	je     129b9 <pci_ioremap_bar+0x13b8>
   1207b:	4c 8d 40 38          	lea    0x38(%rax),%r8
   1207f:	4c 89 e2             	mov    %r12,%rdx
   12082:	b9 04 00 00 00       	mov    $0x4,%ecx
   12087:	4c 89 ee             	mov    %r13,%rsi
   1208a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1208d: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12091:	45 31 f6             	xor    %r14d,%r14d
   12094:	e8 00 00 00 00       	callq  12099 <pci_ioremap_bar+0xa98>
			12095: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12099:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   1209d:	4c 89 e2             	mov    %r12,%rdx
   120a0:	b9 04 00 00 00       	mov    $0x4,%ecx
   120a5:	4c 89 ee             	mov    %r13,%rsi
   120a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			120ab: R_X86_64_32S	.rodata.str1.1+0x1eb5
   120af:	49 83 c0 7c          	add    $0x7c,%r8
   120b3:	e8 00 00 00 00       	callq  120b8 <pci_ioremap_bar+0xab7>
			120b4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   120b8:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   120bc:	4c 89 e2             	mov    %r12,%rdx
   120bf:	b9 04 00 00 00       	mov    $0x4,%ecx
   120c4:	4c 89 ee             	mov    %r13,%rsi
   120c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			120ca: R_X86_64_32S	.rodata.str1.1+0x1eb5
   120ce:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   120d5:	e8 00 00 00 00       	callq  120da <pci_ioremap_bar+0xad9>
			120d6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   120da:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   120de:	4c 89 e2             	mov    %r12,%rdx
   120e1:	b9 02 00 00 00       	mov    $0x2,%ecx
   120e6:	4c 89 ee             	mov    %r13,%rsi
   120e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			120ec: R_X86_64_32S	.rodata.str1.1+0x1eb5
   120f0:	49 83 c0 3e          	add    $0x3e,%r8
   120f4:	e8 00 00 00 00       	callq  120f9 <pci_ioremap_bar+0xaf8>
			120f5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   120f9:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   120fd:	ba 78 02 00 00       	mov    $0x278,%edx
   12102:	be 80 00 00 00       	mov    $0x80,%esi
   12107:	e8 00 00 00 00       	callq  1210c <pci_ioremap_bar+0xb0b>
			12108: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1210c:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   12110:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   12114:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   1211b:	00 
   1211c:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
   12120:	49 89 d8             	mov    %rbx,%r8
   12123:	b9 01 00 00 00       	mov    $0x1,%ecx
   12128:	4c 89 ee             	mov    %r13,%rsi
   1212b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1212e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12132:	49 ff c6             	inc    %r14
   12135:	4c 89 fa             	mov    %r15,%rdx
   12138:	48 ff c3             	inc    %rbx
   1213b:	e8 00 00 00 00       	callq  12140 <pci_ioremap_bar+0xb3f>
			1213c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12140:	49 83 fe 14          	cmp    $0x14,%r14
   12144:	75 d6                	jne    1211c <pci_ioremap_bar+0xb1b>
   12146:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   1214a:	b9 04 00 00 00       	mov    $0x4,%ecx
   1214f:	4c 89 fa             	mov    %r15,%rdx
   12152:	4c 89 ee             	mov    %r13,%rsi
   12155:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12158: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1215c:	49 89 d8             	mov    %rbx,%r8
   1215f:	e8 00 00 00 00       	callq  12164 <pci_ioremap_bar+0xb63>
			12160: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12164:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   12167:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   1216e:	00 
   1216f:	49 89 d8             	mov    %rbx,%r8
   12172:	b9 04 00 00 00       	mov    $0x4,%ecx
   12177:	4c 89 ee             	mov    %r13,%rsi
   1217a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1217d: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12181:	83 e2 01             	and    $0x1,%edx
   12184:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   12187:	09 d0                	or     %edx,%eax
   12189:	4c 89 fa             	mov    %r15,%rdx
   1218c:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   12193:	00 
   12194:	e8 00 00 00 00       	callq  12199 <pci_ioremap_bar+0xb98>
			12195: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12199:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   1219c:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   121a3:	00 
   121a4:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   121ab:	00 
   121ac:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   121b2:	4c 89 ee             	mov    %r13,%rsi
   121b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			121b8: R_X86_64_32S	.rodata.str1.1+0x1eb5
   121bc:	83 e2 01             	and    $0x1,%edx
   121bf:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   121c2:	01 d2                	add    %edx,%edx
   121c4:	09 d0                	or     %edx,%eax
   121c6:	4c 89 fa             	mov    %r15,%rdx
   121c9:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   121d0:	00 
   121d1:	e8 00 00 00 00       	callq  121d6 <pci_ioremap_bar+0xbd5>
			121d2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   121d6:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   121dd:	00 
   121de:	48 85 c0             	test   %rax,%rax
   121e1:	0f 84 d0 00 00 00    	je     122b7 <pci_ioremap_bar+0xcb6>
   121e7:	48 8d 48 18          	lea    0x18(%rax),%rcx
   121eb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   121f1:	4c 89 fa             	mov    %r15,%rdx
   121f4:	4c 89 ee             	mov    %r13,%rsi
   121f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			121fa: R_X86_64_32S	.rodata.str1.1+0x1eb5
   121fe:	e8 00 00 00 00       	callq  12203 <pci_ioremap_bar+0xc02>
			121ff: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12203:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1220a:	00 
   1220b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12211:	4c 89 fa             	mov    %r15,%rdx
   12214:	4c 89 ee             	mov    %r13,%rsi
   12217:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1221a: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1221e:	48 83 c1 20          	add    $0x20,%rcx
   12222:	e8 00 00 00 00       	callq  12227 <pci_ioremap_bar+0xc26>
			12223: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12227:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1222e:	00 
   1222f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12235:	4c 89 fa             	mov    %r15,%rdx
   12238:	4c 89 ee             	mov    %r13,%rsi
   1223b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1223e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12242:	48 83 c1 30          	add    $0x30,%rcx
   12246:	e8 00 00 00 00       	callq  1224b <pci_ioremap_bar+0xc4a>
			12247: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1224b:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12252:	00 
   12253:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12259:	4c 89 fa             	mov    %r15,%rdx
   1225c:	4c 89 ee             	mov    %r13,%rsi
   1225f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12262: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12266:	48 83 c1 10          	add    $0x10,%rcx
   1226a:	e8 00 00 00 00       	callq  1226f <pci_ioremap_bar+0xc6e>
			1226b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1226f:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12276:	00 
   12277:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1227d:	4c 89 fa             	mov    %r15,%rdx
   12280:	4c 89 ee             	mov    %r13,%rsi
   12283:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12286: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1228a:	48 83 c1 28          	add    $0x28,%rcx
   1228e:	e8 00 00 00 00       	callq  12293 <pci_ioremap_bar+0xc92>
			1228f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12293:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1229a:	00 
   1229b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   122a1:	4c 89 fa             	mov    %r15,%rdx
   122a4:	4c 89 ee             	mov    %r13,%rsi
   122a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			122aa: R_X86_64_32S	.rodata.str1.1+0x1eb5
   122ae:	48 83 c1 08          	add    $0x8,%rcx
   122b2:	e8 00 00 00 00       	callq  122b7 <pci_ioremap_bar+0xcb6>
			122b3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   122b7:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   122be:	00 
   122bf:	b9 08 00 00 00       	mov    $0x8,%ecx
   122c4:	4c 89 fa             	mov    %r15,%rdx
   122c7:	4c 89 ee             	mov    %r13,%rsi
   122ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			122cd: R_X86_64_32S	.rodata.str1.1+0x1eb5
   122d1:	e8 00 00 00 00       	callq  122d6 <pci_ioremap_bar+0xcd5>
			122d2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   122d6:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   122dd:	00 
   122de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			122e1: R_X86_64_32S	.rodata.str1.1+0x1eb5
   122e5:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   122eb:	4c 89 fa             	mov    %r15,%rdx
   122ee:	4c 89 ee             	mov    %r13,%rsi
   122f1:	e8 00 00 00 00       	callq  122f6 <pci_ioremap_bar+0xcf5>
			122f2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   122f6:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   122fd:	00 
   122fe:	48 85 ff             	test   %rdi,%rdi
   12301:	0f 84 08 06 00 00    	je     1290f <pci_ioremap_bar+0x130e>
   12307:	ba 08 00 00 00       	mov    $0x8,%edx
   1230c:	be 10 03 00 00       	mov    $0x310,%esi
   12311:	31 db                	xor    %ebx,%ebx
   12313:	e8 00 00 00 00       	callq  12318 <pci_ioremap_bar+0xd17>
			12314: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   12318:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1231f:	00 
   12320:	b9 08 00 00 00       	mov    $0x8,%ecx
   12325:	4c 89 fa             	mov    %r15,%rdx
   12328:	4c 89 ee             	mov    %r13,%rsi
   1232b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1232e: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12332:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   12339:	e8 00 00 00 00       	callq  1233e <pci_ioremap_bar+0xd3d>
			1233a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1233e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   12345:	00 
   12346:	b9 02 00 00 00       	mov    $0x2,%ecx
   1234b:	4c 89 fa             	mov    %r15,%rdx
   1234e:	4c 89 ee             	mov    %r13,%rsi
   12351:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12354: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12358:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   1235f:	e8 00 00 00 00       	callq  12364 <pci_ioremap_bar+0xd63>
			12360: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12364:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1236b:	00 
   1236c:	b9 08 00 00 00       	mov    $0x8,%ecx
   12371:	4c 89 fa             	mov    %r15,%rdx
   12374:	4c 89 ee             	mov    %r13,%rsi
   12377:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1237a: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1237e:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   12385:	e8 00 00 00 00       	callq  1238a <pci_ioremap_bar+0xd89>
			12386: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1238a:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   12391:	00 
   12392:	b9 04 00 00 00       	mov    $0x4,%ecx
   12397:	4c 89 fa             	mov    %r15,%rdx
   1239a:	4c 89 ee             	mov    %r13,%rsi
   1239d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			123a0: R_X86_64_32S	.rodata.str1.1+0x1eb5
   123a4:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   123ab:	e8 00 00 00 00       	callq  123b0 <pci_ioremap_bar+0xdaf>
			123ac: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   123b0:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   123b7:	00 
   123b8:	b9 04 00 00 00       	mov    $0x4,%ecx
   123bd:	4c 89 fa             	mov    %r15,%rdx
   123c0:	4c 89 ee             	mov    %r13,%rsi
   123c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			123c6: R_X86_64_32S	.rodata.str1.1+0x1eb5
   123ca:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   123d1:	e8 00 00 00 00       	callq  123d6 <pci_ioremap_bar+0xdd5>
			123d2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   123d6:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   123dd:	00 
   123de:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   123e4:	4c 89 fa             	mov    %r15,%rdx
   123e7:	4c 89 ee             	mov    %r13,%rsi
   123ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			123ed: R_X86_64_32S	.rodata.str1.1+0x1eb5
   123f1:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   123f8:	e8 00 00 00 00       	callq  123fd <pci_ioremap_bar+0xdfc>
			123f9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   123fd:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12404:	00 
   12405:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1240b:	4c 89 fa             	mov    %r15,%rdx
   1240e:	4c 89 ee             	mov    %r13,%rsi
   12411:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12414: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12418:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1241f:	e8 00 00 00 00       	callq  12424 <pci_ioremap_bar+0xe23>
			12420: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12424:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1242b:	00 
   1242c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12432:	4c 89 fa             	mov    %r15,%rdx
   12435:	4c 89 ee             	mov    %r13,%rsi
   12438:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1243b: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1243f:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   12446:	e8 00 00 00 00       	callq  1244b <pci_ioremap_bar+0xe4a>
			12447: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1244b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   12452:	00 
   12453:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   12457:	b9 01 00 00 00       	mov    $0x1,%ecx
   1245c:	4c 89 ee             	mov    %r13,%rsi
   1245f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12462: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12466:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   1246d:	49 01 d8             	add    %rbx,%r8
   12470:	48 ff c3             	inc    %rbx
   12473:	e8 00 00 00 00       	callq  12478 <pci_ioremap_bar+0xe77>
			12474: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12478:	48 83 fb 20          	cmp    $0x20,%rbx
   1247c:	75 cd                	jne    1244b <pci_ioremap_bar+0xe4a>
   1247e:	30 db                	xor    %bl,%bl
   12480:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   12487:	00 
   12488:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1248c:	b9 01 00 00 00       	mov    $0x1,%ecx
   12491:	4c 89 ee             	mov    %r13,%rsi
   12494:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12497: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1249b:	4c 89 f2             	mov    %r14,%rdx
   1249e:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   124a5:	49 01 d8             	add    %rbx,%r8
   124a8:	48 ff c3             	inc    %rbx
   124ab:	e8 00 00 00 00       	callq  124b0 <pci_ioremap_bar+0xeaf>
			124ac: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   124b0:	48 83 fb 20          	cmp    $0x20,%rbx
   124b4:	75 ca                	jne    12480 <pci_ioremap_bar+0xe7f>
   124b6:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   124bd:	00 
   124be:	b9 02 00 00 00       	mov    $0x2,%ecx
   124c3:	4c 89 f2             	mov    %r14,%rdx
   124c6:	4c 89 ee             	mov    %r13,%rsi
   124c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			124cc: R_X86_64_32S	.rodata.str1.1+0x1eb5
   124d0:	30 db                	xor    %bl,%bl
   124d2:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   124d9:	e8 00 00 00 00       	callq  124de <pci_ioremap_bar+0xedd>
			124da: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   124de:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   124e5:	00 
   124e6:	ba 08 00 00 00       	mov    $0x8,%edx
   124eb:	be 48 00 00 00       	mov    $0x48,%esi
   124f0:	e8 00 00 00 00       	callq  124f5 <pci_ioremap_bar+0xef4>
			124f1: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   124f5:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   124fc:	00 
   124fd:	b9 08 00 00 00       	mov    $0x8,%ecx
   12502:	4c 89 f2             	mov    %r14,%rdx
   12505:	4c 89 ee             	mov    %r13,%rsi
   12508:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1250b: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1250f:	49 83 c0 48          	add    $0x48,%r8
   12513:	e8 00 00 00 00       	callq  12518 <pci_ioremap_bar+0xf17>
			12514: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12518:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1251f:	00 
   12520:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   12524:	b9 01 00 00 00       	mov    $0x1,%ecx
   12529:	4c 89 ee             	mov    %r13,%rsi
   1252c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1252f: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12533:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   1253a:	49 01 d8             	add    %rbx,%r8
   1253d:	48 ff c3             	inc    %rbx
   12540:	e8 00 00 00 00       	callq  12545 <pci_ioremap_bar+0xf44>
			12541: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12545:	48 83 fb 20          	cmp    $0x20,%rbx
   12549:	75 cd                	jne    12518 <pci_ioremap_bar+0xf17>
   1254b:	30 db                	xor    %bl,%bl
   1254d:	49 89 d8             	mov    %rbx,%r8
   12550:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   12557:	00 
   12558:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1255c:	b9 01 00 00 00       	mov    $0x1,%ecx
   12561:	4c 89 ee             	mov    %r13,%rsi
   12564:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12567: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1256b:	4c 89 f2             	mov    %r14,%rdx
   1256e:	48 ff c3             	inc    %rbx
   12571:	e8 00 00 00 00       	callq  12576 <pci_ioremap_bar+0xf75>
			12572: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12576:	48 83 fb 10          	cmp    $0x10,%rbx
   1257a:	75 d1                	jne    1254d <pci_ioremap_bar+0xf4c>
   1257c:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   12583:	00 
   12584:	ba 10 00 00 00       	mov    $0x10,%edx
   12589:	be 18 04 00 00       	mov    $0x418,%esi
   1258e:	e8 00 00 00 00       	callq  12593 <pci_ioremap_bar+0xf92>
			1258f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   12593:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1259a:	00 
   1259b:	b9 01 00 00 00       	mov    $0x1,%ecx
   125a0:	4c 89 f2             	mov    %r14,%rdx
   125a3:	4c 89 ee             	mov    %r13,%rsi
   125a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			125a9: R_X86_64_32S	.rodata.str1.1+0x1eb5
   125ad:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   125b4:	e8 00 00 00 00       	callq  125b9 <pci_ioremap_bar+0xfb8>
			125b5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   125b9:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   125c0:	00 
   125c1:	b9 04 00 00 00       	mov    $0x4,%ecx
   125c6:	4c 89 f2             	mov    %r14,%rdx
   125c9:	4c 89 ee             	mov    %r13,%rsi
   125cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			125cf: R_X86_64_32S	.rodata.str1.1+0x1eb5
   125d3:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   125da:	e8 00 00 00 00       	callq  125df <pci_ioremap_bar+0xfde>
			125db: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   125df:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   125e6:	00 
   125e7:	b9 08 00 00 00       	mov    $0x8,%ecx
   125ec:	4c 89 f2             	mov    %r14,%rdx
   125ef:	4c 89 ee             	mov    %r13,%rsi
   125f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			125f5: R_X86_64_32S	.rodata.str1.1+0x1eb5
   125f9:	49 83 c0 70          	add    $0x70,%r8
   125fd:	e8 00 00 00 00       	callq  12602 <pci_ioremap_bar+0x1001>
			125fe: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12602:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   12609:	00 
   1260a:	ba 10 00 00 00       	mov    $0x10,%edx
   1260f:	be 10 00 00 00       	mov    $0x10,%esi
   12614:	e8 00 00 00 00       	callq  12619 <pci_ioremap_bar+0x1018>
			12615: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   12619:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   12620:	00 
   12621:	b9 04 00 00 00       	mov    $0x4,%ecx
   12626:	4c 89 f2             	mov    %r14,%rdx
   12629:	4c 89 ee             	mov    %r13,%rsi
   1262c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1262f: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12633:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   1263a:	e8 00 00 00 00       	callq  1263f <pci_ioremap_bar+0x103e>
			1263b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1263f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   12646:	00 
   12647:	b9 08 00 00 00       	mov    $0x8,%ecx
   1264c:	4c 89 f2             	mov    %r14,%rdx
   1264f:	4c 89 ee             	mov    %r13,%rsi
   12652:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12655: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12659:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   12660:	e8 00 00 00 00       	callq  12665 <pci_ioremap_bar+0x1064>
			12661: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12665:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1266c:	00 
   1266d:	b9 04 00 00 00       	mov    $0x4,%ecx
   12672:	4c 89 f2             	mov    %r14,%rdx
   12675:	4c 89 ee             	mov    %r13,%rsi
   12678:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1267b: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1267f:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   12686:	e8 00 00 00 00       	callq  1268b <pci_ioremap_bar+0x108a>
			12687: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1268b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12692:	00 
   12693:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   12699:	4c 89 f2             	mov    %r14,%rdx
   1269c:	4c 89 ee             	mov    %r13,%rsi
   1269f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			126a2: R_X86_64_32S	.rodata.str1.1+0x1eb5
   126a6:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   126ad:	e8 00 00 00 00       	callq  126b2 <pci_ioremap_bar+0x10b1>
			126ae: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   126b2:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   126b9:	00 
   126ba:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   126c1:	00 
   126c2:	74 63                	je     12727 <pci_ioremap_bar+0x1126>
   126c4:	30 db                	xor    %bl,%bl
   126c6:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   126cd:	00 
   126ce:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   126d2:	b9 01 00 00 00       	mov    $0x1,%ecx
   126d7:	4c 89 ee             	mov    %r13,%rsi
   126da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			126dd: R_X86_64_32S	.rodata.str1.1+0x1eb5
   126e1:	4c 89 f2             	mov    %r14,%rdx
   126e4:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   126eb:	49 83 c0 08          	add    $0x8,%r8
   126ef:	49 01 d8             	add    %rbx,%r8
   126f2:	48 ff c3             	inc    %rbx
   126f5:	e8 00 00 00 00       	callq  126fa <pci_ioremap_bar+0x10f9>
			126f6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   126fa:	48 83 fb 20          	cmp    $0x20,%rbx
   126fe:	75 c6                	jne    126c6 <pci_ioremap_bar+0x10c5>
   12700:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   12707:	00 
   12708:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1270e:	4c 89 f2             	mov    %r14,%rdx
   12711:	4c 89 ee             	mov    %r13,%rsi
   12714:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12717: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1271b:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   12722:	e8 00 00 00 00       	callq  12727 <pci_ioremap_bar+0x1126>
			12723: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12727:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1272e:	00 
   1272f:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   12733:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   12739:	4c 89 ee             	mov    %r13,%rsi
   1273c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1273f: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12743:	48 89 da             	mov    %rbx,%rdx
   12746:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1274d:	e8 00 00 00 00       	callq  12752 <pci_ioremap_bar+0x1151>
			1274e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12752:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12759:	00 
   1275a:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   12760:	48 89 da             	mov    %rbx,%rdx
   12763:	4c 89 ee             	mov    %r13,%rsi
   12766:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12769: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1276d:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   12774:	e8 00 00 00 00       	callq  12779 <pci_ioremap_bar+0x1178>
			12775: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12779:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   12780:	00 
   12781:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   12788:	48 85 c0             	test   %rax,%rax
   1278b:	74 47                	je     127d4 <pci_ioremap_bar+0x11d3>
   1278d:	48 8d 48 60          	lea    0x60(%rax),%rcx
   12791:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12797:	48 89 da             	mov    %rbx,%rdx
   1279a:	4c 89 ee             	mov    %r13,%rsi
   1279d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			127a0: R_X86_64_32S	.rodata.str1.1+0x1eb5
   127a4:	e8 00 00 00 00       	callq  127a9 <pci_ioremap_bar+0x11a8>
			127a5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   127a9:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   127b0:	00 
   127b1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   127b7:	48 89 da             	mov    %rbx,%rdx
   127ba:	4c 89 ee             	mov    %r13,%rsi
   127bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			127c0: R_X86_64_32S	.rodata.str1.1+0x1eb5
   127c4:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   127cb:	48 83 c1 58          	add    $0x58,%rcx
   127cf:	e8 00 00 00 00       	callq  127d4 <pci_ioremap_bar+0x11d3>
			127d0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   127d4:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   127db:	00 
   127dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			127df: R_X86_64_32S	.rodata.str1.1+0x1eb5
   127e3:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   127e9:	48 89 da             	mov    %rbx,%rdx
   127ec:	4c 89 ee             	mov    %r13,%rsi
   127ef:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   127f6:	e8 00 00 00 00       	callq  127fb <pci_ioremap_bar+0x11fa>
			127f7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   127fb:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   12802:	00 
   12803:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   1280a:	48 85 ff             	test   %rdi,%rdi
   1280d:	74 64                	je     12873 <pci_ioremap_bar+0x1272>
   1280f:	ba 08 00 00 00       	mov    $0x8,%edx
   12814:	be 10 00 00 00       	mov    $0x10,%esi
   12819:	e8 00 00 00 00       	callq  1281e <pci_ioremap_bar+0x121d>
			1281a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1281e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   12825:	00 
   12826:	b9 08 00 00 00       	mov    $0x8,%ecx
   1282b:	48 89 da             	mov    %rbx,%rdx
   1282e:	4c 89 ee             	mov    %r13,%rsi
   12831:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12834: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12838:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   1283f:	49 83 c0 10          	add    $0x10,%r8
   12843:	e8 00 00 00 00       	callq  12848 <pci_ioremap_bar+0x1247>
			12844: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12848:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1284f:	00 
   12850:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   12856:	48 89 da             	mov    %rbx,%rdx
   12859:	4c 89 ee             	mov    %r13,%rsi
   1285c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1285f: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12863:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   1286a:	48 83 c1 08          	add    $0x8,%rcx
   1286e:	e8 00 00 00 00       	callq  12873 <pci_ioremap_bar+0x1272>
			1286f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12873:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1287a:	00 
   1287b:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   12881:	48 89 da             	mov    %rbx,%rdx
   12884:	4c 89 ee             	mov    %r13,%rsi
   12887:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1288a: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1288e:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   12895:	e8 00 00 00 00       	callq  1289a <pci_ioremap_bar+0x1299>
			12896: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1289a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   128a1:	00 
   128a2:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   128a9:	00 
   128aa:	74 63                	je     1290f <pci_ioremap_bar+0x130e>
   128ac:	31 db                	xor    %ebx,%ebx
   128ae:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   128b5:	00 
   128b6:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   128ba:	b9 01 00 00 00       	mov    $0x1,%ecx
   128bf:	4c 89 ee             	mov    %r13,%rsi
   128c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			128c5: R_X86_64_32S	.rodata.str1.1+0x1eb5
   128c9:	4c 89 f2             	mov    %r14,%rdx
   128cc:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   128d3:	49 83 c0 08          	add    $0x8,%r8
   128d7:	49 01 d8             	add    %rbx,%r8
   128da:	48 ff c3             	inc    %rbx
   128dd:	e8 00 00 00 00       	callq  128e2 <pci_ioremap_bar+0x12e1>
			128de: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   128e2:	48 83 fb 20          	cmp    $0x20,%rbx
   128e6:	75 c6                	jne    128ae <pci_ioremap_bar+0x12ad>
   128e8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   128ef:	00 
   128f0:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   128f6:	4c 89 f2             	mov    %r14,%rdx
   128f9:	4c 89 ee             	mov    %r13,%rsi
   128fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			128ff: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12903:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1290a:	e8 00 00 00 00       	callq  1290f <pci_ioremap_bar+0x130e>
			1290b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1290f:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   12913:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   1291a:	00 
   1291b:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   12921:	4c 89 ee             	mov    %r13,%rsi
   12924:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12927: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1292b:	48 89 da             	mov    %rbx,%rdx
   1292e:	e8 00 00 00 00       	callq  12933 <pci_ioremap_bar+0x1332>
			1292f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12933:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   1293a:	00 
   1293b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12941:	48 89 da             	mov    %rbx,%rdx
   12944:	4c 89 ee             	mov    %r13,%rsi
   12947:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1294a: R_X86_64_32S	.rodata.str1.1+0x1eb5
   1294e:	e8 00 00 00 00       	callq  12953 <pci_ioremap_bar+0x1352>
			1294f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   12953:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   1295a:	00 
   1295b:	48 85 c0             	test   %rax,%rax
   1295e:	74 1a                	je     1297a <pci_ioremap_bar+0x1379>
   12960:	49 89 c0             	mov    %rax,%r8
   12963:	b9 08 00 00 00       	mov    $0x8,%ecx
   12968:	48 89 da             	mov    %rbx,%rdx
   1296b:	4c 89 ee             	mov    %r13,%rsi
   1296e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12971: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12975:	e8 00 00 00 00       	callq  1297a <pci_ioremap_bar+0x1379>
			12976: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1297a:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   1297e:	b9 02 00 00 00       	mov    $0x2,%ecx
   12983:	48 89 da             	mov    %rbx,%rdx
   12986:	4c 89 ee             	mov    %r13,%rsi
   12989:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1298c: R_X86_64_32S	.rodata.str1.1+0x1eb5
   12990:	49 83 c0 3c          	add    $0x3c,%r8
   12994:	e8 00 00 00 00       	callq  12999 <pci_ioremap_bar+0x1398>
			12995: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   12999:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1299d:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   129a3:	48 89 da             	mov    %rbx,%rdx
   129a6:	4c 89 ee             	mov    %r13,%rsi
   129a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			129ac: R_X86_64_32S	.rodata.str1.1+0x1eb5
   129b0:	48 83 c1 10          	add    $0x10,%rcx
   129b4:	e8 00 00 00 00       	callq  129b9 <pci_ioremap_bar+0x13b8>
			129b5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   129b9:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   129bd:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   129c1:	b9 04 00 00 00       	mov    $0x4,%ecx
   129c6:	4c 89 ee             	mov    %r13,%rsi
   129c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			129cc: R_X86_64_32S	.rodata.str1.1+0x1eb5
   129d0:	48 89 da             	mov    %rbx,%rdx
   129d3:	e8 00 00 00 00       	callq  129d8 <pci_ioremap_bar+0x13d7>
			129d4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   129d8:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   129dc:	48 89 da             	mov    %rbx,%rdx
   129df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			129e2: R_X86_64_32S	.rodata.str1.1+0x1eb5
   129e6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   129ec:	4c 89 ee             	mov    %r13,%rsi
   129ef:	e8 00 00 00 00       	callq  129f4 <pci_ioremap_bar+0x13f3>
			129f0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   129f4:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   129f8:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   129fc:	48 85 ff             	test   %rdi,%rdi
   129ff:	74 05                	je     12a06 <pci_ioremap_bar+0x1405>
   12a01:	e8 00 00 00 00       	callq  12a06 <pci_ioremap_bar+0x1405>
			12a02: R_X86_64_PC32	kfree+0xfffffffffffffffc
   12a06:	48 83 c4 58          	add    $0x58,%rsp
   12a0a:	48 89 d8             	mov    %rbx,%rax
   12a0d:	5b                   	pop    %rbx
   12a0e:	41 5c                	pop    %r12
   12a10:	41 5d                	pop    %r13
   12a12:	41 5e                	pop    %r14
   12a14:	41 5f                	pop    %r15
   12a16:	c9                   	leaveq 
   12a17:	c3                   	retq   

0000000000012a18 <pci_request_selected_regions>:
   12a18:	55                   	push   %rbp
   12a19:	48 89 e5             	mov    %rsp,%rbp
   12a1c:	41 57                	push   %r15
   12a1e:	41 56                	push   %r14
   12a20:	41 55                	push   %r13
   12a22:	41 54                	push   %r12
   12a24:	53                   	push   %rbx
   12a25:	48 83 ec 68          	sub    $0x68,%rsp
   12a29:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
   12a2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12a30: R_X86_64_32S	.rodata.str1.1+0x1f01
   12a34:	89 75 84             	mov    %esi,0xffffffffffffff84(%rbp)
   12a37:	48 89 95 78 ff ff ff 	mov    %rdx,0xffffffffffffff78(%rbp)
   12a3e:	e8 00 00 00 00       	callq  12a43 <pci_request_selected_regions+0x2b>
			12a3f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   12a43:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   12a47:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12a4a: R_X86_64_32S	.rodata.str1.1+0x1f1e
   12a4e:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   12a55:	00 
   12a56:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   12a5d:	00 
   12a5e:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   12a65:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
   12a69:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   12a6c:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   12a6f:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
   12a76:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   12a7a:	e8 00 00 00 00       	callq  12a7f <pci_request_selected_regions+0x67>
			12a7b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   12a7f:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   12a83:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   12a87:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   12a8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12a8e: R_X86_64_32S	.rodata.str1.1+0x1f01
   12a92:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   12a99:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   12aa0:	00 
   12aa1:	e8 00 00 00 00       	callq  12aa6 <pci_request_selected_regions+0x8e>
			12aa2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12aa6:	48 83 7d a8 00       	cmpq   $0x0,0xffffffffffffffa8(%rbp)
   12aab:	0f 84 5c 09 00 00    	je     1340d <pci_request_selected_regions+0x9f5>
   12ab1:	45 31 ff             	xor    %r15d,%r15d
   12ab4:	45 31 f6             	xor    %r14d,%r14d
   12ab7:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   12abe:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   12ac2:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   12ac6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12acc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12acf: R_X86_64_32S	.rodata.str1.1+0x1f01
   12ad3:	41 ff c7             	inc    %r15d
   12ad6:	48 89 d9             	mov    %rbx,%rcx
   12ad9:	48 03 4d a8          	add    0xffffffffffffffa8(%rbp),%rcx
   12add:	4c 89 e2             	mov    %r12,%rdx
   12ae0:	4c 89 ee             	mov    %r13,%rsi
   12ae3:	48 83 c1 08          	add    $0x8,%rcx
   12ae7:	e8 00 00 00 00       	callq  12aec <pci_request_selected_regions+0xd4>
			12ae8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12aec:	48 03 5d a8          	add    0xffffffffffffffa8(%rbp),%rbx
   12af0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12af6:	4c 89 e2             	mov    %r12,%rdx
   12af9:	4c 89 ee             	mov    %r13,%rsi
   12afc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12aff: R_X86_64_32S	.rodata.str1.1+0x1f01
   12b03:	48 89 d9             	mov    %rbx,%rcx
   12b06:	e8 00 00 00 00       	callq  12b0b <pci_request_selected_regions+0xf3>
			12b07: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12b0b:	4c 89 f1             	mov    %r14,%rcx
   12b0e:	48 03 4d a8          	add    0xffffffffffffffa8(%rbp),%rcx
   12b12:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12b18:	4c 89 e2             	mov    %r12,%rdx
   12b1b:	4c 89 ee             	mov    %r13,%rsi
   12b1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12b21: R_X86_64_32S	.rodata.str1.1+0x1f01
   12b25:	49 83 c6 38          	add    $0x38,%r14
   12b29:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   12b30:	e8 00 00 00 00       	callq  12b35 <pci_request_selected_regions+0x11d>
			12b31: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12b35:	41 83 ff 0c          	cmp    $0xc,%r15d
   12b39:	0f 85 78 ff ff ff    	jne    12ab7 <pci_request_selected_regions+0x9f>
   12b3f:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   12b43:	4c 89 e2             	mov    %r12,%rdx
   12b46:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12b4c:	4c 89 ee             	mov    %r13,%rsi
   12b4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12b52: R_X86_64_32S	.rodata.str1.1+0x1f01
   12b56:	45 31 ff             	xor    %r15d,%r15d
   12b59:	48 83 c1 48          	add    $0x48,%rcx
   12b5d:	e8 00 00 00 00       	callq  12b62 <pci_request_selected_regions+0x14a>
			12b5e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12b62:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   12b66:	4c 89 e2             	mov    %r12,%rdx
   12b69:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12b6f:	4c 89 ee             	mov    %r13,%rsi
   12b72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12b75: R_X86_64_32S	.rodata.str1.1+0x1f01
   12b79:	48 83 c1 38          	add    $0x38,%rcx
   12b7d:	e8 00 00 00 00       	callq  12b82 <pci_request_selected_regions+0x16a>
			12b7e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12b82:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   12b86:	4c 89 e2             	mov    %r12,%rdx
   12b89:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12b8f:	4c 89 ee             	mov    %r13,%rsi
   12b92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12b95: R_X86_64_32S	.rodata.str1.1+0x1f01
   12b99:	48 83 c1 7c          	add    $0x7c,%rcx
   12b9d:	e8 00 00 00 00       	callq  12ba2 <pci_request_selected_regions+0x18a>
			12b9e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12ba2:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   12ba6:	4c 89 e2             	mov    %r12,%rdx
   12ba9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12baf:	4c 89 ee             	mov    %r13,%rsi
   12bb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12bb5: R_X86_64_32S	.rodata.str1.1+0x1f01
   12bb9:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   12bc0:	e8 00 00 00 00       	callq  12bc5 <pci_request_selected_regions+0x1ad>
			12bc1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12bc5:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   12bc9:	4c 89 e2             	mov    %r12,%rdx
   12bcc:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   12bd2:	4c 89 ee             	mov    %r13,%rsi
   12bd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12bd8: R_X86_64_32S	.rodata.str1.1+0x1f01
   12bdc:	48 83 c1 3e          	add    $0x3e,%rcx
   12be0:	e8 00 00 00 00       	callq  12be5 <pci_request_selected_regions+0x1cd>
			12be1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12be5:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   12be9:	4c 89 e2             	mov    %r12,%rdx
   12bec:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   12bf2:	4c 89 ee             	mov    %r13,%rsi
   12bf5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12bf8: R_X86_64_32S	.rodata.str1.1+0x1f01
   12bfc:	48 83 c1 42          	add    $0x42,%rcx
   12c00:	e8 00 00 00 00       	callq  12c05 <pci_request_selected_regions+0x1ed>
			12c01: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12c05:	4c 8b 65 a8          	mov    0xffffffffffffffa8(%rbp),%r12
   12c09:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   12c0d:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   12c14:	00 
   12c15:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   12c19:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   12c1d:	48 89 d9             	mov    %rbx,%rcx
   12c20:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12c26:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12c29: R_X86_64_32S	.rodata.str1.1+0x1f01
   12c2d:	49 ff c7             	inc    %r15
   12c30:	4c 89 ea             	mov    %r13,%rdx
   12c33:	4c 89 f6             	mov    %r14,%rsi
   12c36:	48 ff c3             	inc    %rbx
   12c39:	e8 00 00 00 00       	callq  12c3e <pci_request_selected_regions+0x226>
			12c3a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12c3e:	49 83 ff 14          	cmp    $0x14,%r15
   12c42:	75 d1                	jne    12c15 <pci_request_selected_regions+0x1fd>
   12c44:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   12c4b:	00 
   12c4c:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   12c50:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12c56:	4c 89 ea             	mov    %r13,%rdx
   12c59:	4c 89 f6             	mov    %r14,%rsi
   12c5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12c5f: R_X86_64_32S	.rodata.str1.1+0x1f01
   12c63:	48 89 d9             	mov    %rbx,%rcx
   12c66:	83 e0 01             	and    $0x1,%eax
   12c69:	0f b6 c0             	movzbl %al,%eax
   12c6c:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   12c6f:	e8 00 00 00 00       	callq  12c74 <pci_request_selected_regions+0x25c>
			12c70: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12c74:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   12c7b:	00 
   12c7c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12c82:	48 89 d9             	mov    %rbx,%rcx
   12c85:	4c 89 ea             	mov    %r13,%rdx
   12c88:	4c 89 f6             	mov    %r14,%rsi
   12c8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12c8e: R_X86_64_32S	.rodata.str1.1+0x1f01
   12c92:	d0 e8                	shr    %al
   12c94:	83 e0 01             	and    $0x1,%eax
   12c97:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   12c9a:	e8 00 00 00 00       	callq  12c9f <pci_request_selected_regions+0x287>
			12c9b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12c9f:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   12ca6:	00 
   12ca7:	4c 89 ea             	mov    %r13,%rdx
   12caa:	4c 89 f6             	mov    %r14,%rsi
   12cad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12cb0: R_X86_64_32S	.rodata.str1.1+0x1f01
   12cb4:	e8 00 00 00 00       	callq  12cb9 <pci_request_selected_regions+0x2a1>
			12cb5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12cb9:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   12cc0:	00 
   12cc1:	48 85 c0             	test   %rax,%rax
   12cc4:	0f 84 ac 00 00 00    	je     12d76 <pci_request_selected_regions+0x35e>
   12cca:	48 8d 48 18          	lea    0x18(%rax),%rcx
   12cce:	4c 89 ea             	mov    %r13,%rdx
   12cd1:	4c 89 f6             	mov    %r14,%rsi
   12cd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12cd7: R_X86_64_32S	.rodata.str1.1+0x1f01
   12cdb:	e8 00 00 00 00       	callq  12ce0 <pci_request_selected_regions+0x2c8>
			12cdc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12ce0:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12ce7:	00 
   12ce8:	4c 89 ea             	mov    %r13,%rdx
   12ceb:	4c 89 f6             	mov    %r14,%rsi
   12cee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12cf1: R_X86_64_32S	.rodata.str1.1+0x1f01
   12cf5:	48 83 c1 20          	add    $0x20,%rcx
   12cf9:	e8 00 00 00 00       	callq  12cfe <pci_request_selected_regions+0x2e6>
			12cfa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12cfe:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12d05:	00 
   12d06:	4c 89 ea             	mov    %r13,%rdx
   12d09:	4c 89 f6             	mov    %r14,%rsi
   12d0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12d0f: R_X86_64_32S	.rodata.str1.1+0x1f01
   12d13:	48 83 c1 30          	add    $0x30,%rcx
   12d17:	e8 00 00 00 00       	callq  12d1c <pci_request_selected_regions+0x304>
			12d18: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12d1c:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12d23:	00 
   12d24:	4c 89 ea             	mov    %r13,%rdx
   12d27:	4c 89 f6             	mov    %r14,%rsi
   12d2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12d2d: R_X86_64_32S	.rodata.str1.1+0x1f01
   12d31:	48 83 c1 10          	add    $0x10,%rcx
   12d35:	e8 00 00 00 00       	callq  12d3a <pci_request_selected_regions+0x322>
			12d36: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12d3a:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12d41:	00 
   12d42:	4c 89 ea             	mov    %r13,%rdx
   12d45:	4c 89 f6             	mov    %r14,%rsi
   12d48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12d4b: R_X86_64_32S	.rodata.str1.1+0x1f01
   12d4f:	48 83 c1 28          	add    $0x28,%rcx
   12d53:	e8 00 00 00 00       	callq  12d58 <pci_request_selected_regions+0x340>
			12d54: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12d58:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   12d5f:	00 
   12d60:	4c 89 ea             	mov    %r13,%rdx
   12d63:	4c 89 f6             	mov    %r14,%rsi
   12d66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12d69: R_X86_64_32S	.rodata.str1.1+0x1f01
   12d6d:	48 83 c1 08          	add    $0x8,%rcx
   12d71:	e8 00 00 00 00       	callq  12d76 <pci_request_selected_regions+0x35e>
			12d72: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12d76:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   12d7d:	00 
   12d7e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12d84:	4c 89 ea             	mov    %r13,%rdx
   12d87:	4c 89 f6             	mov    %r14,%rsi
   12d8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12d8d: R_X86_64_32S	.rodata.str1.1+0x1f01
   12d91:	e8 00 00 00 00       	callq  12d96 <pci_request_selected_regions+0x37e>
			12d92: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12d96:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   12d9d:	00 
   12d9e:	4c 89 ea             	mov    %r13,%rdx
   12da1:	4c 89 f6             	mov    %r14,%rsi
   12da4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12da7: R_X86_64_32S	.rodata.str1.1+0x1f01
   12dab:	e8 00 00 00 00       	callq  12db0 <pci_request_selected_regions+0x398>
			12dac: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12db0:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   12db7:	00 
   12db8:	48 85 c0             	test   %rax,%rax
   12dbb:	0f 84 91 05 00 00    	je     13352 <pci_request_selected_regions+0x93a>
   12dc1:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   12dc8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12dce:	4c 89 ea             	mov    %r13,%rdx
   12dd1:	4c 89 f6             	mov    %r14,%rsi
   12dd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12dd7: R_X86_64_32S	.rodata.str1.1+0x1f01
   12ddb:	31 db                	xor    %ebx,%ebx
   12ddd:	e8 00 00 00 00       	callq  12de2 <pci_request_selected_regions+0x3ca>
			12dde: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12de2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12de9:	00 
   12dea:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   12df0:	4c 89 ea             	mov    %r13,%rdx
   12df3:	4c 89 f6             	mov    %r14,%rsi
   12df6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12df9: R_X86_64_32S	.rodata.str1.1+0x1f01
   12dfd:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   12e04:	e8 00 00 00 00       	callq  12e09 <pci_request_selected_regions+0x3f1>
			12e05: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12e09:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12e10:	00 
   12e11:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12e17:	4c 89 ea             	mov    %r13,%rdx
   12e1a:	4c 89 f6             	mov    %r14,%rsi
   12e1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12e20: R_X86_64_32S	.rodata.str1.1+0x1f01
   12e24:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   12e2b:	e8 00 00 00 00       	callq  12e30 <pci_request_selected_regions+0x418>
			12e2c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12e30:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12e37:	00 
   12e38:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12e3e:	4c 89 ea             	mov    %r13,%rdx
   12e41:	4c 89 f6             	mov    %r14,%rsi
   12e44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12e47: R_X86_64_32S	.rodata.str1.1+0x1f01
   12e4b:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   12e52:	e8 00 00 00 00       	callq  12e57 <pci_request_selected_regions+0x43f>
			12e53: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12e57:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12e5e:	00 
   12e5f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   12e65:	4c 89 ea             	mov    %r13,%rdx
   12e68:	4c 89 f6             	mov    %r14,%rsi
   12e6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12e6e: R_X86_64_32S	.rodata.str1.1+0x1f01
   12e72:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   12e79:	e8 00 00 00 00       	callq  12e7e <pci_request_selected_regions+0x466>
			12e7a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12e7e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12e85:	00 
   12e86:	4c 89 ea             	mov    %r13,%rdx
   12e89:	4c 89 f6             	mov    %r14,%rsi
   12e8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12e8f: R_X86_64_32S	.rodata.str1.1+0x1f01
   12e93:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   12e9a:	e8 00 00 00 00       	callq  12e9f <pci_request_selected_regions+0x487>
			12e9b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12e9f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12ea6:	00 
   12ea7:	4c 89 ea             	mov    %r13,%rdx
   12eaa:	4c 89 f6             	mov    %r14,%rsi
   12ead:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12eb0: R_X86_64_32S	.rodata.str1.1+0x1f01
   12eb4:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   12ebb:	e8 00 00 00 00       	callq  12ec0 <pci_request_selected_regions+0x4a8>
			12ebc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12ec0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12ec7:	00 
   12ec8:	4c 89 ea             	mov    %r13,%rdx
   12ecb:	4c 89 f6             	mov    %r14,%rsi
   12ece:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12ed1: R_X86_64_32S	.rodata.str1.1+0x1f01
   12ed5:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   12edc:	e8 00 00 00 00       	callq  12ee1 <pci_request_selected_regions+0x4c9>
			12edd: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   12ee1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12ee8:	00 
   12ee9:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   12eed:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   12ef1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12ef7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12efa: R_X86_64_32S	.rodata.str1.1+0x1f01
   12efe:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   12f05:	48 01 d9             	add    %rbx,%rcx
   12f08:	48 ff c3             	inc    %rbx
   12f0b:	e8 00 00 00 00       	callq  12f10 <pci_request_selected_regions+0x4f8>
			12f0c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12f10:	48 83 fb 20          	cmp    $0x20,%rbx
   12f14:	75 cb                	jne    12ee1 <pci_request_selected_regions+0x4c9>
   12f16:	30 db                	xor    %bl,%bl
   12f18:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12f1f:	00 
   12f20:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   12f24:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   12f28:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12f2e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12f31: R_X86_64_32S	.rodata.str1.1+0x1f01
   12f35:	4c 89 ea             	mov    %r13,%rdx
   12f38:	4c 89 f6             	mov    %r14,%rsi
   12f3b:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   12f42:	48 01 d9             	add    %rbx,%rcx
   12f45:	48 ff c3             	inc    %rbx
   12f48:	e8 00 00 00 00       	callq  12f4d <pci_request_selected_regions+0x535>
			12f49: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12f4d:	48 83 fb 20          	cmp    $0x20,%rbx
   12f51:	75 c5                	jne    12f18 <pci_request_selected_regions+0x500>
   12f53:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12f5a:	00 
   12f5b:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   12f61:	4c 89 ea             	mov    %r13,%rdx
   12f64:	4c 89 f6             	mov    %r14,%rsi
   12f67:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12f6a: R_X86_64_32S	.rodata.str1.1+0x1f01
   12f6e:	30 db                	xor    %bl,%bl
   12f70:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   12f77:	e8 00 00 00 00       	callq  12f7c <pci_request_selected_regions+0x564>
			12f78: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12f7c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12f83:	00 
   12f84:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   12f8a:	4c 89 ea             	mov    %r13,%rdx
   12f8d:	4c 89 f6             	mov    %r14,%rsi
   12f90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12f93: R_X86_64_32S	.rodata.str1.1+0x1f01
   12f97:	48 83 c1 48          	add    $0x48,%rcx
   12f9b:	e8 00 00 00 00       	callq  12fa0 <pci_request_selected_regions+0x588>
			12f9c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12fa0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   12fa7:	00 
   12fa8:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   12fac:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   12fb0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12fb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12fb9: R_X86_64_32S	.rodata.str1.1+0x1f01
   12fbd:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   12fc4:	48 01 d9             	add    %rbx,%rcx
   12fc7:	48 ff c3             	inc    %rbx
   12fca:	e8 00 00 00 00       	callq  12fcf <pci_request_selected_regions+0x5b7>
			12fcb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   12fcf:	48 83 fb 20          	cmp    $0x20,%rbx
   12fd3:	75 cb                	jne    12fa0 <pci_request_selected_regions+0x588>
   12fd5:	30 db                	xor    %bl,%bl
   12fd7:	48 89 d9             	mov    %rbx,%rcx
   12fda:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   12fe1:	00 
   12fe2:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   12fe6:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   12fea:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12ff0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12ff3: R_X86_64_32S	.rodata.str1.1+0x1f01
   12ff7:	4c 89 ea             	mov    %r13,%rdx
   12ffa:	48 ff c3             	inc    %rbx
   12ffd:	4c 89 f6             	mov    %r14,%rsi
   13000:	e8 00 00 00 00       	callq  13005 <pci_request_selected_regions+0x5ed>
			13001: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13005:	48 83 fb 10          	cmp    $0x10,%rbx
   13009:	75 cc                	jne    12fd7 <pci_request_selected_regions+0x5bf>
   1300b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13012:	00 
   13013:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13019:	4c 89 ea             	mov    %r13,%rdx
   1301c:	4c 89 f6             	mov    %r14,%rsi
   1301f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13022: R_X86_64_32S	.rodata.str1.1+0x1f01
   13026:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   1302d:	e8 00 00 00 00       	callq  13032 <pci_request_selected_regions+0x61a>
			1302e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13032:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13039:	00 
   1303a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   13040:	4c 89 ea             	mov    %r13,%rdx
   13043:	4c 89 f6             	mov    %r14,%rsi
   13046:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13049: R_X86_64_32S	.rodata.str1.1+0x1f01
   1304d:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   13054:	e8 00 00 00 00       	callq  13059 <pci_request_selected_regions+0x641>
			13055: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13059:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13060:	00 
   13061:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   13067:	4c 89 ea             	mov    %r13,%rdx
   1306a:	4c 89 f6             	mov    %r14,%rsi
   1306d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13070: R_X86_64_32S	.rodata.str1.1+0x1f01
   13074:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   1307b:	e8 00 00 00 00       	callq  13080 <pci_request_selected_regions+0x668>
			1307c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13080:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13087:	00 
   13088:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1308e:	4c 89 ea             	mov    %r13,%rdx
   13091:	4c 89 f6             	mov    %r14,%rsi
   13094:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13097: R_X86_64_32S	.rodata.str1.1+0x1f01
   1309b:	48 83 c1 70          	add    $0x70,%rcx
   1309f:	e8 00 00 00 00       	callq  130a4 <pci_request_selected_regions+0x68c>
			130a0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   130a4:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   130ab:	00 
   130ac:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   130b2:	4c 89 ea             	mov    %r13,%rdx
   130b5:	4c 89 f6             	mov    %r14,%rsi
   130b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			130bb: R_X86_64_32S	.rodata.str1.1+0x1f01
   130bf:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   130c6:	e8 00 00 00 00       	callq  130cb <pci_request_selected_regions+0x6b3>
			130c7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   130cb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   130d2:	00 
   130d3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   130d9:	4c 89 ea             	mov    %r13,%rdx
   130dc:	4c 89 f6             	mov    %r14,%rsi
   130df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			130e2: R_X86_64_32S	.rodata.str1.1+0x1f01
   130e6:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   130ed:	e8 00 00 00 00       	callq  130f2 <pci_request_selected_regions+0x6da>
			130ee: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   130f2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   130f9:	00 
   130fa:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   13100:	4c 89 ea             	mov    %r13,%rdx
   13103:	4c 89 f6             	mov    %r14,%rsi
   13106:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13109: R_X86_64_32S	.rodata.str1.1+0x1f01
   1310d:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   13114:	e8 00 00 00 00       	callq  13119 <pci_request_selected_regions+0x701>
			13115: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13119:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13120:	00 
   13121:	4c 89 ea             	mov    %r13,%rdx
   13124:	4c 89 f6             	mov    %r14,%rsi
   13127:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1312a: R_X86_64_32S	.rodata.str1.1+0x1f01
   1312e:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   13135:	e8 00 00 00 00       	callq  1313a <pci_request_selected_regions+0x722>
			13136: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1313a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13141:	00 
   13142:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   13149:	00 
   1314a:	74 62                	je     131ae <pci_request_selected_regions+0x796>
   1314c:	30 db                	xor    %bl,%bl
   1314e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13155:	00 
   13156:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1315a:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   1315e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13164:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13167: R_X86_64_32S	.rodata.str1.1+0x1f01
   1316b:	4c 89 ea             	mov    %r13,%rdx
   1316e:	4c 89 f6             	mov    %r14,%rsi
   13171:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   13178:	48 83 c1 08          	add    $0x8,%rcx
   1317c:	48 01 d9             	add    %rbx,%rcx
   1317f:	48 ff c3             	inc    %rbx
   13182:	e8 00 00 00 00       	callq  13187 <pci_request_selected_regions+0x76f>
			13183: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13187:	48 83 fb 20          	cmp    $0x20,%rbx
   1318b:	75 c1                	jne    1314e <pci_request_selected_regions+0x736>
   1318d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13194:	00 
   13195:	4c 89 ea             	mov    %r13,%rdx
   13198:	4c 89 f6             	mov    %r14,%rsi
   1319b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1319e: R_X86_64_32S	.rodata.str1.1+0x1f01
   131a2:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   131a9:	e8 00 00 00 00       	callq  131ae <pci_request_selected_regions+0x796>
			131aa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   131ae:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   131b5:	00 
   131b6:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   131ba:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   131be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			131c1: R_X86_64_32S	.rodata.str1.1+0x1f01
   131c5:	48 89 da             	mov    %rbx,%rdx
   131c8:	4c 89 ee             	mov    %r13,%rsi
   131cb:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   131d2:	e8 00 00 00 00       	callq  131d7 <pci_request_selected_regions+0x7bf>
			131d3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   131d7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   131de:	00 
   131df:	48 89 da             	mov    %rbx,%rdx
   131e2:	4c 89 ee             	mov    %r13,%rsi
   131e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			131e8: R_X86_64_32S	.rodata.str1.1+0x1f01
   131ec:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   131f3:	e8 00 00 00 00       	callq  131f8 <pci_request_selected_regions+0x7e0>
			131f4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   131f8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   131ff:	00 
   13200:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   13207:	48 85 c0             	test   %rax,%rax
   1320a:	74 3b                	je     13247 <pci_request_selected_regions+0x82f>
   1320c:	48 8d 48 60          	lea    0x60(%rax),%rcx
   13210:	48 89 da             	mov    %rbx,%rdx
   13213:	4c 89 ee             	mov    %r13,%rsi
   13216:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13219: R_X86_64_32S	.rodata.str1.1+0x1f01
   1321d:	e8 00 00 00 00       	callq  13222 <pci_request_selected_regions+0x80a>
			1321e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   13222:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13229:	00 
   1322a:	48 89 da             	mov    %rbx,%rdx
   1322d:	4c 89 ee             	mov    %r13,%rsi
   13230:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13233: R_X86_64_32S	.rodata.str1.1+0x1f01
   13237:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1323e:	48 83 c1 58          	add    $0x58,%rcx
   13242:	e8 00 00 00 00       	callq  13247 <pci_request_selected_regions+0x82f>
			13243: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   13247:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1324e:	00 
   1324f:	48 89 da             	mov    %rbx,%rdx
   13252:	4c 89 ee             	mov    %r13,%rsi
   13255:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13258: R_X86_64_32S	.rodata.str1.1+0x1f01
   1325c:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   13263:	e8 00 00 00 00       	callq  13268 <pci_request_selected_regions+0x850>
			13264: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   13268:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1326f:	00 
   13270:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   13277:	48 85 c0             	test   %rax,%rax
   1327a:	74 41                	je     132bd <pci_request_selected_regions+0x8a5>
   1327c:	48 8d 48 10          	lea    0x10(%rax),%rcx
   13280:	48 89 da             	mov    %rbx,%rdx
   13283:	4c 89 ee             	mov    %r13,%rsi
   13286:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13289: R_X86_64_32S	.rodata.str1.1+0x1f01
   1328d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   13293:	e8 00 00 00 00       	callq  13298 <pci_request_selected_regions+0x880>
			13294: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13298:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1329f:	00 
   132a0:	48 89 da             	mov    %rbx,%rdx
   132a3:	4c 89 ee             	mov    %r13,%rsi
   132a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			132a9: R_X86_64_32S	.rodata.str1.1+0x1f01
   132ad:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   132b4:	48 83 c1 08          	add    $0x8,%rcx
   132b8:	e8 00 00 00 00       	callq  132bd <pci_request_selected_regions+0x8a5>
			132b9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   132bd:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   132c4:	00 
   132c5:	48 89 da             	mov    %rbx,%rdx
   132c8:	4c 89 ee             	mov    %r13,%rsi
   132cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			132ce: R_X86_64_32S	.rodata.str1.1+0x1f01
   132d2:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   132d9:	e8 00 00 00 00       	callq  132de <pci_request_selected_regions+0x8c6>
			132da: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   132de:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   132e5:	00 
   132e6:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   132ed:	00 
   132ee:	74 62                	je     13352 <pci_request_selected_regions+0x93a>
   132f0:	31 db                	xor    %ebx,%ebx
   132f2:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   132f9:	00 
   132fa:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   132fe:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   13302:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13308:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1330b: R_X86_64_32S	.rodata.str1.1+0x1f01
   1330f:	4c 89 ea             	mov    %r13,%rdx
   13312:	4c 89 f6             	mov    %r14,%rsi
   13315:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1331c:	48 83 c1 08          	add    $0x8,%rcx
   13320:	48 01 d9             	add    %rbx,%rcx
   13323:	48 ff c3             	inc    %rbx
   13326:	e8 00 00 00 00       	callq  1332b <pci_request_selected_regions+0x913>
			13327: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1332b:	48 83 fb 20          	cmp    $0x20,%rbx
   1332f:	75 c1                	jne    132f2 <pci_request_selected_regions+0x8da>
   13331:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13338:	00 
   13339:	4c 89 ea             	mov    %r13,%rdx
   1333c:	4c 89 f6             	mov    %r14,%rsi
   1333f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13342: R_X86_64_32S	.rodata.str1.1+0x1f01
   13346:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1334d:	e8 00 00 00 00       	callq  13352 <pci_request_selected_regions+0x93a>
			1334e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   13352:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   13356:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   1335a:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   13361:	00 
   13362:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13365: R_X86_64_32S	.rodata.str1.1+0x1f01
   13369:	48 89 da             	mov    %rbx,%rdx
   1336c:	4c 89 ee             	mov    %r13,%rsi
   1336f:	e8 00 00 00 00       	callq  13374 <pci_request_selected_regions+0x95c>
			13370: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   13374:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   1337b:	00 
   1337c:	48 89 da             	mov    %rbx,%rdx
   1337f:	4c 89 ee             	mov    %r13,%rsi
   13382:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13385: R_X86_64_32S	.rodata.str1.1+0x1f01
   13389:	e8 00 00 00 00       	callq  1338e <pci_request_selected_regions+0x976>
			1338a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1338e:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   13395:	00 
   13396:	48 85 c9             	test   %rcx,%rcx
   13399:	74 18                	je     133b3 <pci_request_selected_regions+0x99b>
   1339b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   133a1:	48 89 da             	mov    %rbx,%rdx
   133a4:	4c 89 ee             	mov    %r13,%rsi
   133a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			133aa: R_X86_64_32S	.rodata.str1.1+0x1f01
   133ae:	e8 00 00 00 00       	callq  133b3 <pci_request_selected_regions+0x99b>
			133af: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   133b3:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   133b7:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   133bd:	48 89 da             	mov    %rbx,%rdx
   133c0:	4c 89 ee             	mov    %r13,%rsi
   133c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			133c6: R_X86_64_32S	.rodata.str1.1+0x1f01
   133ca:	48 83 c1 40          	add    $0x40,%rcx
   133ce:	e8 00 00 00 00       	callq  133d3 <pci_request_selected_regions+0x9bb>
			133cf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   133d3:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   133d7:	48 89 da             	mov    %rbx,%rdx
   133da:	4c 89 ee             	mov    %r13,%rsi
   133dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			133e0: R_X86_64_32S	.rodata.str1.1+0x1f01
   133e4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   133ea:	48 83 c1 3c          	add    $0x3c,%rcx
   133ee:	e8 00 00 00 00       	callq  133f3 <pci_request_selected_regions+0x9db>
			133ef: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   133f3:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   133f7:	48 89 da             	mov    %rbx,%rdx
   133fa:	4c 89 ee             	mov    %r13,%rsi
   133fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13400: R_X86_64_32S	.rodata.str1.1+0x1f01
   13404:	48 83 c1 10          	add    $0x10,%rcx
   13408:	e8 00 00 00 00       	callq  1340d <pci_request_selected_regions+0x9f5>
			13409: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1340d:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   13411:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   13415:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   13419:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1341f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13422: R_X86_64_32S	.rodata.str1.1+0x1f01
   13426:	4c 89 f1             	mov    %r14,%rcx
   13429:	48 89 da             	mov    %rbx,%rdx
   1342c:	4c 89 e6             	mov    %r12,%rsi
   1342f:	e8 00 00 00 00       	callq  13434 <pci_request_selected_regions+0xa1c>
			13430: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13434:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   13438:	48 89 da             	mov    %rbx,%rdx
   1343b:	4c 89 e6             	mov    %r12,%rsi
   1343e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13441: R_X86_64_32S	.rodata.str1.1+0x1f01
   13445:	e8 00 00 00 00       	callq  1344a <pci_request_selected_regions+0xa32>
			13446: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1344a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1344e:	48 85 c9             	test   %rcx,%rcx
   13451:	74 18                	je     1346b <pci_request_selected_regions+0xa53>
   13453:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13459:	48 89 da             	mov    %rbx,%rdx
   1345c:	4c 89 e6             	mov    %r12,%rsi
   1345f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13462: R_X86_64_32S	.rodata.str1.1+0x1f01
   13466:	e8 00 00 00 00       	callq  1346b <pci_request_selected_regions+0xa53>
			13467: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1346b:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   1346f:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   13473:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13476: R_X86_64_32S	.rodata.str1.1+0x1f01
   1347a:	48 c7 45 90 1e 06 00 	movq   $0x61e,0xffffffffffffff90(%rbp)
   13481:	00 
   13482:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   13486:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   13489:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   1348c:	e8 00 00 00 00       	callq  13491 <pci_request_selected_regions+0xa79>
			1348d: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   13491:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   13495:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13498: R_X86_64_32S	.rodata.str1.1+0x1f49
   1349c:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
   134a0:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   134a3:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   134a6:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
   134ad:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   134b1:	e8 00 00 00 00       	callq  134b6 <pci_request_selected_regions+0xa9e>
			134b2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   134b6:	4c 8b 6d a0          	mov    0xffffffffffffffa0(%rbp),%r13
   134ba:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   134be:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   134c4:	4c 89 f2             	mov    %r14,%rdx
   134c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			134ca: R_X86_64_32S	.rodata.str1.1+0x1f01
   134ce:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   134d5:	4c 89 ee             	mov    %r13,%rsi
   134d8:	e8 00 00 00 00       	callq  134dd <pci_request_selected_regions+0xac5>
			134d9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   134dd:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   134e1:	48 85 c0             	test   %rax,%rax
   134e4:	0f 84 3e 09 00 00    	je     13e28 <pci_request_selected_regions+0x1410>
   134ea:	4c 8d 40 38          	lea    0x38(%rax),%r8
   134ee:	4c 89 f2             	mov    %r14,%rdx
   134f1:	b9 04 00 00 00       	mov    $0x4,%ecx
   134f6:	4c 89 ee             	mov    %r13,%rsi
   134f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			134fc: R_X86_64_32S	.rodata.str1.1+0x1f01
   13500:	e8 00 00 00 00       	callq  13505 <pci_request_selected_regions+0xaed>
			13501: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13505:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   13509:	4c 89 f2             	mov    %r14,%rdx
   1350c:	b9 04 00 00 00       	mov    $0x4,%ecx
   13511:	4c 89 ee             	mov    %r13,%rsi
   13514:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13517: R_X86_64_32S	.rodata.str1.1+0x1f01
   1351b:	49 83 c0 7c          	add    $0x7c,%r8
   1351f:	e8 00 00 00 00       	callq  13524 <pci_request_selected_regions+0xb0c>
			13520: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13524:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   13528:	4c 89 f2             	mov    %r14,%rdx
   1352b:	b9 04 00 00 00       	mov    $0x4,%ecx
   13530:	4c 89 ee             	mov    %r13,%rsi
   13533:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13536: R_X86_64_32S	.rodata.str1.1+0x1f01
   1353a:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   13541:	e8 00 00 00 00       	callq  13546 <pci_request_selected_regions+0xb2e>
			13542: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13546:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   1354a:	4c 89 f2             	mov    %r14,%rdx
   1354d:	b9 02 00 00 00       	mov    $0x2,%ecx
   13552:	4c 89 ee             	mov    %r13,%rsi
   13555:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13558: R_X86_64_32S	.rodata.str1.1+0x1f01
   1355c:	45 31 f6             	xor    %r14d,%r14d
   1355f:	49 83 c0 3e          	add    $0x3e,%r8
   13563:	e8 00 00 00 00       	callq  13568 <pci_request_selected_regions+0xb50>
			13564: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13568:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
   1356c:	ba 78 02 00 00       	mov    $0x278,%edx
   13571:	be 80 00 00 00       	mov    $0x80,%esi
   13576:	e8 00 00 00 00       	callq  1357b <pci_request_selected_regions+0xb63>
			13577: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1357b:	4c 8b 65 a8          	mov    0xffffffffffffffa8(%rbp),%r12
   1357f:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   13583:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   1358a:	00 
   1358b:	4c 8d 7d c4          	lea    0xffffffffffffffc4(%rbp),%r15
   1358f:	49 89 d8             	mov    %rbx,%r8
   13592:	b9 01 00 00 00       	mov    $0x1,%ecx
   13597:	4c 89 ee             	mov    %r13,%rsi
   1359a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1359d: R_X86_64_32S	.rodata.str1.1+0x1f01
   135a1:	49 ff c6             	inc    %r14
   135a4:	4c 89 fa             	mov    %r15,%rdx
   135a7:	48 ff c3             	inc    %rbx
   135aa:	e8 00 00 00 00       	callq  135af <pci_request_selected_regions+0xb97>
			135ab: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   135af:	49 83 fe 14          	cmp    $0x14,%r14
   135b3:	75 d6                	jne    1358b <pci_request_selected_regions+0xb73>
   135b5:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   135b9:	b9 04 00 00 00       	mov    $0x4,%ecx
   135be:	4c 89 fa             	mov    %r15,%rdx
   135c1:	4c 89 ee             	mov    %r13,%rsi
   135c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			135c7: R_X86_64_32S	.rodata.str1.1+0x1f01
   135cb:	49 89 d8             	mov    %rbx,%r8
   135ce:	e8 00 00 00 00       	callq  135d3 <pci_request_selected_regions+0xbbb>
			135cf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   135d3:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   135d6:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   135dd:	00 
   135de:	49 89 d8             	mov    %rbx,%r8
   135e1:	b9 04 00 00 00       	mov    $0x4,%ecx
   135e6:	4c 89 ee             	mov    %r13,%rsi
   135e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			135ec: R_X86_64_32S	.rodata.str1.1+0x1f01
   135f0:	83 e2 01             	and    $0x1,%edx
   135f3:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   135f6:	09 d0                	or     %edx,%eax
   135f8:	4c 89 fa             	mov    %r15,%rdx
   135fb:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   13602:	00 
   13603:	e8 00 00 00 00       	callq  13608 <pci_request_selected_regions+0xbf0>
			13604: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13608:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   1360b:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   13612:	00 
   13613:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   1361a:	00 
   1361b:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   13621:	4c 89 ee             	mov    %r13,%rsi
   13624:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13627: R_X86_64_32S	.rodata.str1.1+0x1f01
   1362b:	83 e2 01             	and    $0x1,%edx
   1362e:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   13631:	01 d2                	add    %edx,%edx
   13633:	09 d0                	or     %edx,%eax
   13635:	4c 89 fa             	mov    %r15,%rdx
   13638:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   1363f:	00 
   13640:	e8 00 00 00 00       	callq  13645 <pci_request_selected_regions+0xc2d>
			13641: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13645:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   1364c:	00 
   1364d:	48 85 c0             	test   %rax,%rax
   13650:	0f 84 d0 00 00 00    	je     13726 <pci_request_selected_regions+0xd0e>
   13656:	48 8d 48 18          	lea    0x18(%rax),%rcx
   1365a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13660:	4c 89 fa             	mov    %r15,%rdx
   13663:	4c 89 ee             	mov    %r13,%rsi
   13666:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13669: R_X86_64_32S	.rodata.str1.1+0x1f01
   1366d:	e8 00 00 00 00       	callq  13672 <pci_request_selected_regions+0xc5a>
			1366e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13672:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   13679:	00 
   1367a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13680:	4c 89 fa             	mov    %r15,%rdx
   13683:	4c 89 ee             	mov    %r13,%rsi
   13686:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13689: R_X86_64_32S	.rodata.str1.1+0x1f01
   1368d:	48 83 c1 20          	add    $0x20,%rcx
   13691:	e8 00 00 00 00       	callq  13696 <pci_request_selected_regions+0xc7e>
			13692: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13696:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1369d:	00 
   1369e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   136a4:	4c 89 fa             	mov    %r15,%rdx
   136a7:	4c 89 ee             	mov    %r13,%rsi
   136aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			136ad: R_X86_64_32S	.rodata.str1.1+0x1f01
   136b1:	48 83 c1 30          	add    $0x30,%rcx
   136b5:	e8 00 00 00 00       	callq  136ba <pci_request_selected_regions+0xca2>
			136b6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   136ba:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   136c1:	00 
   136c2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   136c8:	4c 89 fa             	mov    %r15,%rdx
   136cb:	4c 89 ee             	mov    %r13,%rsi
   136ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			136d1: R_X86_64_32S	.rodata.str1.1+0x1f01
   136d5:	48 83 c1 10          	add    $0x10,%rcx
   136d9:	e8 00 00 00 00       	callq  136de <pci_request_selected_regions+0xcc6>
			136da: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   136de:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   136e5:	00 
   136e6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   136ec:	4c 89 fa             	mov    %r15,%rdx
   136ef:	4c 89 ee             	mov    %r13,%rsi
   136f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			136f5: R_X86_64_32S	.rodata.str1.1+0x1f01
   136f9:	48 83 c1 28          	add    $0x28,%rcx
   136fd:	e8 00 00 00 00       	callq  13702 <pci_request_selected_regions+0xcea>
			136fe: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13702:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   13709:	00 
   1370a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13710:	4c 89 fa             	mov    %r15,%rdx
   13713:	4c 89 ee             	mov    %r13,%rsi
   13716:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13719: R_X86_64_32S	.rodata.str1.1+0x1f01
   1371d:	48 83 c1 08          	add    $0x8,%rcx
   13721:	e8 00 00 00 00       	callq  13726 <pci_request_selected_regions+0xd0e>
			13722: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13726:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   1372d:	00 
   1372e:	b9 08 00 00 00       	mov    $0x8,%ecx
   13733:	4c 89 fa             	mov    %r15,%rdx
   13736:	4c 89 ee             	mov    %r13,%rsi
   13739:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1373c: R_X86_64_32S	.rodata.str1.1+0x1f01
   13740:	e8 00 00 00 00       	callq  13745 <pci_request_selected_regions+0xd2d>
			13741: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13745:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   1374c:	00 
   1374d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13750: R_X86_64_32S	.rodata.str1.1+0x1f01
   13754:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   1375a:	4c 89 fa             	mov    %r15,%rdx
   1375d:	4c 89 ee             	mov    %r13,%rsi
   13760:	e8 00 00 00 00       	callq  13765 <pci_request_selected_regions+0xd4d>
			13761: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13765:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1376c:	00 
   1376d:	48 85 ff             	test   %rdi,%rdi
   13770:	0f 84 08 06 00 00    	je     13d7e <pci_request_selected_regions+0x1366>
   13776:	ba 08 00 00 00       	mov    $0x8,%edx
   1377b:	be 10 03 00 00       	mov    $0x310,%esi
   13780:	31 db                	xor    %ebx,%ebx
   13782:	e8 00 00 00 00       	callq  13787 <pci_request_selected_regions+0xd6f>
			13783: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   13787:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1378e:	00 
   1378f:	b9 08 00 00 00       	mov    $0x8,%ecx
   13794:	4c 89 fa             	mov    %r15,%rdx
   13797:	4c 89 ee             	mov    %r13,%rsi
   1379a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1379d: R_X86_64_32S	.rodata.str1.1+0x1f01
   137a1:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   137a8:	e8 00 00 00 00       	callq  137ad <pci_request_selected_regions+0xd95>
			137a9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   137ad:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   137b4:	00 
   137b5:	b9 02 00 00 00       	mov    $0x2,%ecx
   137ba:	4c 89 fa             	mov    %r15,%rdx
   137bd:	4c 89 ee             	mov    %r13,%rsi
   137c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			137c3: R_X86_64_32S	.rodata.str1.1+0x1f01
   137c7:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   137ce:	e8 00 00 00 00       	callq  137d3 <pci_request_selected_regions+0xdbb>
			137cf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   137d3:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   137da:	00 
   137db:	b9 08 00 00 00       	mov    $0x8,%ecx
   137e0:	4c 89 fa             	mov    %r15,%rdx
   137e3:	4c 89 ee             	mov    %r13,%rsi
   137e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			137e9: R_X86_64_32S	.rodata.str1.1+0x1f01
   137ed:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   137f4:	e8 00 00 00 00       	callq  137f9 <pci_request_selected_regions+0xde1>
			137f5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   137f9:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13800:	00 
   13801:	b9 04 00 00 00       	mov    $0x4,%ecx
   13806:	4c 89 fa             	mov    %r15,%rdx
   13809:	4c 89 ee             	mov    %r13,%rsi
   1380c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1380f: R_X86_64_32S	.rodata.str1.1+0x1f01
   13813:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   1381a:	e8 00 00 00 00       	callq  1381f <pci_request_selected_regions+0xe07>
			1381b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1381f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13826:	00 
   13827:	b9 04 00 00 00       	mov    $0x4,%ecx
   1382c:	4c 89 fa             	mov    %r15,%rdx
   1382f:	4c 89 ee             	mov    %r13,%rsi
   13832:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13835: R_X86_64_32S	.rodata.str1.1+0x1f01
   13839:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   13840:	e8 00 00 00 00       	callq  13845 <pci_request_selected_regions+0xe2d>
			13841: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13845:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1384c:	00 
   1384d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13853:	4c 89 fa             	mov    %r15,%rdx
   13856:	4c 89 ee             	mov    %r13,%rsi
   13859:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1385c: R_X86_64_32S	.rodata.str1.1+0x1f01
   13860:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   13867:	e8 00 00 00 00       	callq  1386c <pci_request_selected_regions+0xe54>
			13868: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1386c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13873:	00 
   13874:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1387a:	4c 89 fa             	mov    %r15,%rdx
   1387d:	4c 89 ee             	mov    %r13,%rsi
   13880:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13883: R_X86_64_32S	.rodata.str1.1+0x1f01
   13887:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1388e:	e8 00 00 00 00       	callq  13893 <pci_request_selected_regions+0xe7b>
			1388f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13893:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1389a:	00 
   1389b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   138a1:	4c 89 fa             	mov    %r15,%rdx
   138a4:	4c 89 ee             	mov    %r13,%rsi
   138a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			138aa: R_X86_64_32S	.rodata.str1.1+0x1f01
   138ae:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   138b5:	e8 00 00 00 00       	callq  138ba <pci_request_selected_regions+0xea2>
			138b6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   138ba:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   138c1:	00 
   138c2:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   138c6:	b9 01 00 00 00       	mov    $0x1,%ecx
   138cb:	4c 89 ee             	mov    %r13,%rsi
   138ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			138d1: R_X86_64_32S	.rodata.str1.1+0x1f01
   138d5:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   138dc:	49 01 d8             	add    %rbx,%r8
   138df:	48 ff c3             	inc    %rbx
   138e2:	e8 00 00 00 00       	callq  138e7 <pci_request_selected_regions+0xecf>
			138e3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   138e7:	48 83 fb 20          	cmp    $0x20,%rbx
   138eb:	75 cd                	jne    138ba <pci_request_selected_regions+0xea2>
   138ed:	30 db                	xor    %bl,%bl
   138ef:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   138f6:	00 
   138f7:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   138fb:	b9 01 00 00 00       	mov    $0x1,%ecx
   13900:	4c 89 ee             	mov    %r13,%rsi
   13903:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13906: R_X86_64_32S	.rodata.str1.1+0x1f01
   1390a:	4c 89 f2             	mov    %r14,%rdx
   1390d:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   13914:	49 01 d8             	add    %rbx,%r8
   13917:	48 ff c3             	inc    %rbx
   1391a:	e8 00 00 00 00       	callq  1391f <pci_request_selected_regions+0xf07>
			1391b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1391f:	48 83 fb 20          	cmp    $0x20,%rbx
   13923:	75 ca                	jne    138ef <pci_request_selected_regions+0xed7>
   13925:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1392c:	00 
   1392d:	b9 02 00 00 00       	mov    $0x2,%ecx
   13932:	4c 89 f2             	mov    %r14,%rdx
   13935:	4c 89 ee             	mov    %r13,%rsi
   13938:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1393b: R_X86_64_32S	.rodata.str1.1+0x1f01
   1393f:	30 db                	xor    %bl,%bl
   13941:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   13948:	e8 00 00 00 00       	callq  1394d <pci_request_selected_regions+0xf35>
			13949: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1394d:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   13954:	00 
   13955:	ba 08 00 00 00       	mov    $0x8,%edx
   1395a:	be 48 00 00 00       	mov    $0x48,%esi
   1395f:	e8 00 00 00 00       	callq  13964 <pci_request_selected_regions+0xf4c>
			13960: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   13964:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1396b:	00 
   1396c:	b9 08 00 00 00       	mov    $0x8,%ecx
   13971:	4c 89 f2             	mov    %r14,%rdx
   13974:	4c 89 ee             	mov    %r13,%rsi
   13977:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1397a: R_X86_64_32S	.rodata.str1.1+0x1f01
   1397e:	49 83 c0 48          	add    $0x48,%r8
   13982:	e8 00 00 00 00       	callq  13987 <pci_request_selected_regions+0xf6f>
			13983: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13987:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1398e:	00 
   1398f:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   13993:	b9 01 00 00 00       	mov    $0x1,%ecx
   13998:	4c 89 ee             	mov    %r13,%rsi
   1399b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1399e: R_X86_64_32S	.rodata.str1.1+0x1f01
   139a2:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   139a9:	49 01 d8             	add    %rbx,%r8
   139ac:	48 ff c3             	inc    %rbx
   139af:	e8 00 00 00 00       	callq  139b4 <pci_request_selected_regions+0xf9c>
			139b0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   139b4:	48 83 fb 20          	cmp    $0x20,%rbx
   139b8:	75 cd                	jne    13987 <pci_request_selected_regions+0xf6f>
   139ba:	30 db                	xor    %bl,%bl
   139bc:	49 89 d8             	mov    %rbx,%r8
   139bf:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   139c6:	00 
   139c7:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   139cb:	b9 01 00 00 00       	mov    $0x1,%ecx
   139d0:	4c 89 ee             	mov    %r13,%rsi
   139d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			139d6: R_X86_64_32S	.rodata.str1.1+0x1f01
   139da:	4c 89 f2             	mov    %r14,%rdx
   139dd:	48 ff c3             	inc    %rbx
   139e0:	e8 00 00 00 00       	callq  139e5 <pci_request_selected_regions+0xfcd>
			139e1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   139e5:	48 83 fb 10          	cmp    $0x10,%rbx
   139e9:	75 d1                	jne    139bc <pci_request_selected_regions+0xfa4>
   139eb:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   139f2:	00 
   139f3:	ba 10 00 00 00       	mov    $0x10,%edx
   139f8:	be 18 04 00 00       	mov    $0x418,%esi
   139fd:	e8 00 00 00 00       	callq  13a02 <pci_request_selected_regions+0xfea>
			139fe: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   13a02:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13a09:	00 
   13a0a:	b9 01 00 00 00       	mov    $0x1,%ecx
   13a0f:	4c 89 f2             	mov    %r14,%rdx
   13a12:	4c 89 ee             	mov    %r13,%rsi
   13a15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13a18: R_X86_64_32S	.rodata.str1.1+0x1f01
   13a1c:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   13a23:	e8 00 00 00 00       	callq  13a28 <pci_request_selected_regions+0x1010>
			13a24: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13a28:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13a2f:	00 
   13a30:	b9 04 00 00 00       	mov    $0x4,%ecx
   13a35:	4c 89 f2             	mov    %r14,%rdx
   13a38:	4c 89 ee             	mov    %r13,%rsi
   13a3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13a3e: R_X86_64_32S	.rodata.str1.1+0x1f01
   13a42:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   13a49:	e8 00 00 00 00       	callq  13a4e <pci_request_selected_regions+0x1036>
			13a4a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13a4e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13a55:	00 
   13a56:	b9 08 00 00 00       	mov    $0x8,%ecx
   13a5b:	4c 89 f2             	mov    %r14,%rdx
   13a5e:	4c 89 ee             	mov    %r13,%rsi
   13a61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13a64: R_X86_64_32S	.rodata.str1.1+0x1f01
   13a68:	49 83 c0 70          	add    $0x70,%r8
   13a6c:	e8 00 00 00 00       	callq  13a71 <pci_request_selected_regions+0x1059>
			13a6d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13a71:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   13a78:	00 
   13a79:	ba 10 00 00 00       	mov    $0x10,%edx
   13a7e:	be 10 00 00 00       	mov    $0x10,%esi
   13a83:	e8 00 00 00 00       	callq  13a88 <pci_request_selected_regions+0x1070>
			13a84: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   13a88:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13a8f:	00 
   13a90:	b9 04 00 00 00       	mov    $0x4,%ecx
   13a95:	4c 89 f2             	mov    %r14,%rdx
   13a98:	4c 89 ee             	mov    %r13,%rsi
   13a9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13a9e: R_X86_64_32S	.rodata.str1.1+0x1f01
   13aa2:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   13aa9:	e8 00 00 00 00       	callq  13aae <pci_request_selected_regions+0x1096>
			13aaa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13aae:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13ab5:	00 
   13ab6:	b9 08 00 00 00       	mov    $0x8,%ecx
   13abb:	4c 89 f2             	mov    %r14,%rdx
   13abe:	4c 89 ee             	mov    %r13,%rsi
   13ac1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13ac4: R_X86_64_32S	.rodata.str1.1+0x1f01
   13ac8:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   13acf:	e8 00 00 00 00       	callq  13ad4 <pci_request_selected_regions+0x10bc>
			13ad0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13ad4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   13adb:	00 
   13adc:	b9 04 00 00 00       	mov    $0x4,%ecx
   13ae1:	4c 89 f2             	mov    %r14,%rdx
   13ae4:	4c 89 ee             	mov    %r13,%rsi
   13ae7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13aea: R_X86_64_32S	.rodata.str1.1+0x1f01
   13aee:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   13af5:	e8 00 00 00 00       	callq  13afa <pci_request_selected_regions+0x10e2>
			13af6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13afa:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13b01:	00 
   13b02:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   13b08:	4c 89 f2             	mov    %r14,%rdx
   13b0b:	4c 89 ee             	mov    %r13,%rsi
   13b0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13b11: R_X86_64_32S	.rodata.str1.1+0x1f01
   13b15:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   13b1c:	e8 00 00 00 00       	callq  13b21 <pci_request_selected_regions+0x1109>
			13b1d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13b21:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13b28:	00 
   13b29:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   13b30:	00 
   13b31:	74 63                	je     13b96 <pci_request_selected_regions+0x117e>
   13b33:	30 db                	xor    %bl,%bl
   13b35:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13b3c:	00 
   13b3d:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   13b41:	b9 01 00 00 00       	mov    $0x1,%ecx
   13b46:	4c 89 ee             	mov    %r13,%rsi
   13b49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13b4c: R_X86_64_32S	.rodata.str1.1+0x1f01
   13b50:	4c 89 f2             	mov    %r14,%rdx
   13b53:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   13b5a:	49 83 c0 08          	add    $0x8,%r8
   13b5e:	49 01 d8             	add    %rbx,%r8
   13b61:	48 ff c3             	inc    %rbx
   13b64:	e8 00 00 00 00       	callq  13b69 <pci_request_selected_regions+0x1151>
			13b65: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13b69:	48 83 fb 20          	cmp    $0x20,%rbx
   13b6d:	75 c6                	jne    13b35 <pci_request_selected_regions+0x111d>
   13b6f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13b76:	00 
   13b77:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   13b7d:	4c 89 f2             	mov    %r14,%rdx
   13b80:	4c 89 ee             	mov    %r13,%rsi
   13b83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13b86: R_X86_64_32S	.rodata.str1.1+0x1f01
   13b8a:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   13b91:	e8 00 00 00 00       	callq  13b96 <pci_request_selected_regions+0x117e>
			13b92: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13b96:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13b9d:	00 
   13b9e:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   13ba2:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   13ba8:	4c 89 ee             	mov    %r13,%rsi
   13bab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13bae: R_X86_64_32S	.rodata.str1.1+0x1f01
   13bb2:	48 89 da             	mov    %rbx,%rdx
   13bb5:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   13bbc:	e8 00 00 00 00       	callq  13bc1 <pci_request_selected_regions+0x11a9>
			13bbd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13bc1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13bc8:	00 
   13bc9:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   13bcf:	48 89 da             	mov    %rbx,%rdx
   13bd2:	4c 89 ee             	mov    %r13,%rsi
   13bd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13bd8: R_X86_64_32S	.rodata.str1.1+0x1f01
   13bdc:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   13be3:	e8 00 00 00 00       	callq  13be8 <pci_request_selected_regions+0x11d0>
			13be4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13be8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13bef:	00 
   13bf0:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   13bf7:	48 85 c0             	test   %rax,%rax
   13bfa:	74 47                	je     13c43 <pci_request_selected_regions+0x122b>
   13bfc:	48 8d 48 60          	lea    0x60(%rax),%rcx
   13c00:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13c06:	48 89 da             	mov    %rbx,%rdx
   13c09:	4c 89 ee             	mov    %r13,%rsi
   13c0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13c0f: R_X86_64_32S	.rodata.str1.1+0x1f01
   13c13:	e8 00 00 00 00       	callq  13c18 <pci_request_selected_regions+0x1200>
			13c14: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13c18:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13c1f:	00 
   13c20:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13c26:	48 89 da             	mov    %rbx,%rdx
   13c29:	4c 89 ee             	mov    %r13,%rsi
   13c2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13c2f: R_X86_64_32S	.rodata.str1.1+0x1f01
   13c33:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   13c3a:	48 83 c1 58          	add    $0x58,%rcx
   13c3e:	e8 00 00 00 00       	callq  13c43 <pci_request_selected_regions+0x122b>
			13c3f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13c43:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13c4a:	00 
   13c4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13c4e: R_X86_64_32S	.rodata.str1.1+0x1f01
   13c52:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   13c58:	48 89 da             	mov    %rbx,%rdx
   13c5b:	4c 89 ee             	mov    %r13,%rsi
   13c5e:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   13c65:	e8 00 00 00 00       	callq  13c6a <pci_request_selected_regions+0x1252>
			13c66: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13c6a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13c71:	00 
   13c72:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   13c79:	48 85 ff             	test   %rdi,%rdi
   13c7c:	74 64                	je     13ce2 <pci_request_selected_regions+0x12ca>
   13c7e:	ba 08 00 00 00       	mov    $0x8,%edx
   13c83:	be 10 00 00 00       	mov    $0x10,%esi
   13c88:	e8 00 00 00 00       	callq  13c8d <pci_request_selected_regions+0x1275>
			13c89: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   13c8d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13c94:	00 
   13c95:	b9 08 00 00 00       	mov    $0x8,%ecx
   13c9a:	48 89 da             	mov    %rbx,%rdx
   13c9d:	4c 89 ee             	mov    %r13,%rsi
   13ca0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13ca3: R_X86_64_32S	.rodata.str1.1+0x1f01
   13ca7:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   13cae:	49 83 c0 10          	add    $0x10,%r8
   13cb2:	e8 00 00 00 00       	callq  13cb7 <pci_request_selected_regions+0x129f>
			13cb3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13cb7:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13cbe:	00 
   13cbf:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   13cc5:	48 89 da             	mov    %rbx,%rdx
   13cc8:	4c 89 ee             	mov    %r13,%rsi
   13ccb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13cce: R_X86_64_32S	.rodata.str1.1+0x1f01
   13cd2:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   13cd9:	48 83 c1 08          	add    $0x8,%rcx
   13cdd:	e8 00 00 00 00       	callq  13ce2 <pci_request_selected_regions+0x12ca>
			13cde: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13ce2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   13ce9:	00 
   13cea:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   13cf0:	48 89 da             	mov    %rbx,%rdx
   13cf3:	4c 89 ee             	mov    %r13,%rsi
   13cf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13cf9: R_X86_64_32S	.rodata.str1.1+0x1f01
   13cfd:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   13d04:	e8 00 00 00 00       	callq  13d09 <pci_request_selected_regions+0x12f1>
			13d05: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13d09:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13d10:	00 
   13d11:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   13d18:	00 
   13d19:	74 63                	je     13d7e <pci_request_selected_regions+0x1366>
   13d1b:	31 db                	xor    %ebx,%ebx
   13d1d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13d24:	00 
   13d25:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   13d29:	b9 01 00 00 00       	mov    $0x1,%ecx
   13d2e:	4c 89 ee             	mov    %r13,%rsi
   13d31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13d34: R_X86_64_32S	.rodata.str1.1+0x1f01
   13d38:	4c 89 f2             	mov    %r14,%rdx
   13d3b:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   13d42:	49 83 c0 08          	add    $0x8,%r8
   13d46:	49 01 d8             	add    %rbx,%r8
   13d49:	48 ff c3             	inc    %rbx
   13d4c:	e8 00 00 00 00       	callq  13d51 <pci_request_selected_regions+0x1339>
			13d4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13d51:	48 83 fb 20          	cmp    $0x20,%rbx
   13d55:	75 c6                	jne    13d1d <pci_request_selected_regions+0x1305>
   13d57:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   13d5e:	00 
   13d5f:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   13d65:	4c 89 f2             	mov    %r14,%rdx
   13d68:	4c 89 ee             	mov    %r13,%rsi
   13d6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13d6e: R_X86_64_32S	.rodata.str1.1+0x1f01
   13d72:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   13d79:	e8 00 00 00 00       	callq  13d7e <pci_request_selected_regions+0x1366>
			13d7a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13d7e:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   13d82:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   13d89:	00 
   13d8a:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   13d90:	4c 89 ee             	mov    %r13,%rsi
   13d93:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13d96: R_X86_64_32S	.rodata.str1.1+0x1f01
   13d9a:	48 89 da             	mov    %rbx,%rdx
   13d9d:	e8 00 00 00 00       	callq  13da2 <pci_request_selected_regions+0x138a>
			13d9e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13da2:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   13da9:	00 
   13daa:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   13db0:	48 89 da             	mov    %rbx,%rdx
   13db3:	4c 89 ee             	mov    %r13,%rsi
   13db6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13db9: R_X86_64_32S	.rodata.str1.1+0x1f01
   13dbd:	e8 00 00 00 00       	callq  13dc2 <pci_request_selected_regions+0x13aa>
			13dbe: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13dc2:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   13dc9:	00 
   13dca:	48 85 c0             	test   %rax,%rax
   13dcd:	74 1a                	je     13de9 <pci_request_selected_regions+0x13d1>
   13dcf:	49 89 c0             	mov    %rax,%r8
   13dd2:	b9 08 00 00 00       	mov    $0x8,%ecx
   13dd7:	48 89 da             	mov    %rbx,%rdx
   13dda:	4c 89 ee             	mov    %r13,%rsi
   13ddd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13de0: R_X86_64_32S	.rodata.str1.1+0x1f01
   13de4:	e8 00 00 00 00       	callq  13de9 <pci_request_selected_regions+0x13d1>
			13de5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13de9:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   13ded:	b9 02 00 00 00       	mov    $0x2,%ecx
   13df2:	48 89 da             	mov    %rbx,%rdx
   13df5:	4c 89 ee             	mov    %r13,%rsi
   13df8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13dfb: R_X86_64_32S	.rodata.str1.1+0x1f01
   13dff:	49 83 c0 3c          	add    $0x3c,%r8
   13e03:	e8 00 00 00 00       	callq  13e08 <pci_request_selected_regions+0x13f0>
			13e04: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13e08:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   13e0c:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   13e12:	48 89 da             	mov    %rbx,%rdx
   13e15:	4c 89 ee             	mov    %r13,%rsi
   13e18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13e1b: R_X86_64_32S	.rodata.str1.1+0x1f01
   13e1f:	48 83 c1 10          	add    $0x10,%rcx
   13e23:	e8 00 00 00 00       	callq  13e28 <pci_request_selected_regions+0x1410>
			13e24: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13e28:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   13e2c:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   13e30:	b9 04 00 00 00       	mov    $0x4,%ecx
   13e35:	4c 89 ee             	mov    %r13,%rsi
   13e38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13e3b: R_X86_64_32S	.rodata.str1.1+0x1f01
   13e3f:	48 89 da             	mov    %rbx,%rdx
   13e42:	e8 00 00 00 00       	callq  13e47 <pci_request_selected_regions+0x142f>
			13e43: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13e47:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   13e4b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13e51:	48 89 da             	mov    %rbx,%rdx
   13e54:	4c 89 ee             	mov    %r13,%rsi
   13e57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13e5a: R_X86_64_32S	.rodata.str1.1+0x1f01
   13e5e:	e8 00 00 00 00       	callq  13e63 <pci_request_selected_regions+0x144b>
			13e5f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   13e63:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   13e67:	48 85 c0             	test   %rax,%rax
   13e6a:	74 1a                	je     13e86 <pci_request_selected_regions+0x146e>
   13e6c:	49 89 c0             	mov    %rax,%r8
   13e6f:	b9 01 00 00 00       	mov    $0x1,%ecx
   13e74:	48 89 da             	mov    %rbx,%rdx
   13e77:	4c 89 ee             	mov    %r13,%rsi
   13e7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13e7d: R_X86_64_32S	.rodata.str1.1+0x1f01
   13e81:	e8 00 00 00 00       	callq  13e86 <pci_request_selected_regions+0x146e>
			13e82: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13e86:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   13e8a:	48 89 da             	mov    %rbx,%rdx
   13e8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13e90: R_X86_64_32S	.rodata.str1.1+0x1f01
   13e94:	b9 04 00 00 00       	mov    $0x4,%ecx
   13e99:	4c 89 ee             	mov    %r13,%rsi
   13e9c:	e8 00 00 00 00       	callq  13ea1 <pci_request_selected_regions+0x1489>
			13e9d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   13ea1:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   13ea5:	8b 5d c8             	mov    0xffffffffffffffc8(%rbp),%ebx
   13ea8:	48 85 ff             	test   %rdi,%rdi
   13eab:	74 05                	je     13eb2 <pci_request_selected_regions+0x149a>
   13ead:	e8 00 00 00 00       	callq  13eb2 <pci_request_selected_regions+0x149a>
			13eae: R_X86_64_PC32	kfree+0xfffffffffffffffc
   13eb2:	48 83 c4 68          	add    $0x68,%rsp
   13eb6:	89 d8                	mov    %ebx,%eax
   13eb8:	5b                   	pop    %rbx
   13eb9:	41 5c                	pop    %r12
   13ebb:	41 5d                	pop    %r13
   13ebd:	41 5e                	pop    %r14
   13ebf:	41 5f                	pop    %r15
   13ec1:	c9                   	leaveq 
   13ec2:	c3                   	retq   

0000000000013ec3 <e1000_pcix_set_mmrbc>:
   13ec3:	55                   	push   %rbp
   13ec4:	48 89 e5             	mov    %rsp,%rbp
   13ec7:	41 57                	push   %r15
   13ec9:	41 56                	push   %r14
   13ecb:	41 55                	push   %r13
   13ecd:	41 54                	push   %r12
   13ecf:	53                   	push   %rbx
   13ed0:	48 89 fb             	mov    %rdi,%rbx
   13ed3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13ed6: R_X86_64_32S	.rodata.str1.1+0x1f74
   13eda:	48 83 ec 58          	sub    $0x58,%rsp
   13ede:	89 75 84             	mov    %esi,0xffffffffffffff84(%rbp)
   13ee1:	e8 00 00 00 00       	callq  13ee6 <e1000_pcix_set_mmrbc+0x23>
			13ee2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   13ee6:	48 8b 43 20          	mov    0x20(%rbx),%rax
   13eea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13eed: R_X86_64_32S	.rodata.str1.1+0x1f89
   13ef1:	48 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%rax
   13ef8:	48 89 45 88          	mov    %rax,0xffffffffffffff88(%rbp)
   13efc:	e8 00 00 00 00       	callq  13f01 <e1000_pcix_set_mmrbc+0x3e>
			13efd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   13f01:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   13f05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13f08: R_X86_64_32S	.rodata.str1.1+0x1f98
   13f0c:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   13f13:	00 
   13f14:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   13f1b:	00 
   13f1c:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   13f23:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   13f27:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   13f2a:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   13f2d:	e8 00 00 00 00       	callq  13f32 <e1000_pcix_set_mmrbc+0x6f>
			13f2e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   13f32:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   13f36:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   13f3a:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   13f3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13f41: R_X86_64_32S	.rodata.str1.1+0x1f89
   13f45:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   13f4c:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   13f53:	00 
   13f54:	e8 00 00 00 00       	callq  13f59 <e1000_pcix_set_mmrbc+0x96>
			13f55: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   13f59:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
   13f5e:	0f 84 5c 09 00 00    	je     148c0 <e1000_pcix_set_mmrbc+0x9fd>
   13f64:	45 31 ff             	xor    %r15d,%r15d
   13f67:	45 31 f6             	xor    %r14d,%r14d
   13f6a:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   13f71:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   13f75:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   13f79:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   13f7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13f82: R_X86_64_32S	.rodata.str1.1+0x1f89
   13f86:	41 ff c7             	inc    %r15d
   13f89:	48 89 d9             	mov    %rbx,%rcx
   13f8c:	48 03 4d b8          	add    0xffffffffffffffb8(%rbp),%rcx
   13f90:	4c 89 e2             	mov    %r12,%rdx
   13f93:	4c 89 ee             	mov    %r13,%rsi
   13f96:	48 83 c1 08          	add    $0x8,%rcx
   13f9a:	e8 00 00 00 00       	callq  13f9f <e1000_pcix_set_mmrbc+0xdc>
			13f9b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13f9f:	48 03 5d b8          	add    0xffffffffffffffb8(%rbp),%rbx
   13fa3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   13fa9:	4c 89 e2             	mov    %r12,%rdx
   13fac:	4c 89 ee             	mov    %r13,%rsi
   13faf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13fb2: R_X86_64_32S	.rodata.str1.1+0x1f89
   13fb6:	48 89 d9             	mov    %rbx,%rcx
   13fb9:	e8 00 00 00 00       	callq  13fbe <e1000_pcix_set_mmrbc+0xfb>
			13fba: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13fbe:	4c 89 f1             	mov    %r14,%rcx
   13fc1:	48 03 4d b8          	add    0xffffffffffffffb8(%rbp),%rcx
   13fc5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   13fcb:	4c 89 e2             	mov    %r12,%rdx
   13fce:	4c 89 ee             	mov    %r13,%rsi
   13fd1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13fd4: R_X86_64_32S	.rodata.str1.1+0x1f89
   13fd8:	49 83 c6 38          	add    $0x38,%r14
   13fdc:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   13fe3:	e8 00 00 00 00       	callq  13fe8 <e1000_pcix_set_mmrbc+0x125>
			13fe4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   13fe8:	41 83 ff 0c          	cmp    $0xc,%r15d
   13fec:	0f 85 78 ff ff ff    	jne    13f6a <e1000_pcix_set_mmrbc+0xa7>
   13ff2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   13ff6:	4c 89 e2             	mov    %r12,%rdx
   13ff9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   13fff:	4c 89 ee             	mov    %r13,%rsi
   14002:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14005: R_X86_64_32S	.rodata.str1.1+0x1f89
   14009:	45 31 ff             	xor    %r15d,%r15d
   1400c:	48 83 c1 48          	add    $0x48,%rcx
   14010:	e8 00 00 00 00       	callq  14015 <e1000_pcix_set_mmrbc+0x152>
			14011: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14015:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   14019:	4c 89 e2             	mov    %r12,%rdx
   1401c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14022:	4c 89 ee             	mov    %r13,%rsi
   14025:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14028: R_X86_64_32S	.rodata.str1.1+0x1f89
   1402c:	48 83 c1 38          	add    $0x38,%rcx
   14030:	e8 00 00 00 00       	callq  14035 <e1000_pcix_set_mmrbc+0x172>
			14031: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14035:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   14039:	4c 89 e2             	mov    %r12,%rdx
   1403c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14042:	4c 89 ee             	mov    %r13,%rsi
   14045:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14048: R_X86_64_32S	.rodata.str1.1+0x1f89
   1404c:	48 83 c1 7c          	add    $0x7c,%rcx
   14050:	e8 00 00 00 00       	callq  14055 <e1000_pcix_set_mmrbc+0x192>
			14051: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14055:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   14059:	4c 89 e2             	mov    %r12,%rdx
   1405c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14062:	4c 89 ee             	mov    %r13,%rsi
   14065:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14068: R_X86_64_32S	.rodata.str1.1+0x1f89
   1406c:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   14073:	e8 00 00 00 00       	callq  14078 <e1000_pcix_set_mmrbc+0x1b5>
			14074: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14078:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1407c:	4c 89 e2             	mov    %r12,%rdx
   1407f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   14085:	4c 89 ee             	mov    %r13,%rsi
   14088:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1408b: R_X86_64_32S	.rodata.str1.1+0x1f89
   1408f:	48 83 c1 3e          	add    $0x3e,%rcx
   14093:	e8 00 00 00 00       	callq  14098 <e1000_pcix_set_mmrbc+0x1d5>
			14094: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14098:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1409c:	4c 89 e2             	mov    %r12,%rdx
   1409f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   140a5:	4c 89 ee             	mov    %r13,%rsi
   140a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			140ab: R_X86_64_32S	.rodata.str1.1+0x1f89
   140af:	48 83 c1 42          	add    $0x42,%rcx
   140b3:	e8 00 00 00 00       	callq  140b8 <e1000_pcix_set_mmrbc+0x1f5>
			140b4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   140b8:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   140bc:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   140c0:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   140c7:	00 
   140c8:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   140cc:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   140d0:	48 89 d9             	mov    %rbx,%rcx
   140d3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   140d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			140dc: R_X86_64_32S	.rodata.str1.1+0x1f89
   140e0:	49 ff c7             	inc    %r15
   140e3:	4c 89 ea             	mov    %r13,%rdx
   140e6:	4c 89 f6             	mov    %r14,%rsi
   140e9:	48 ff c3             	inc    %rbx
   140ec:	e8 00 00 00 00       	callq  140f1 <e1000_pcix_set_mmrbc+0x22e>
			140ed: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   140f1:	49 83 ff 14          	cmp    $0x14,%r15
   140f5:	75 d1                	jne    140c8 <e1000_pcix_set_mmrbc+0x205>
   140f7:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   140fe:	00 
   140ff:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   14103:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14109:	4c 89 ea             	mov    %r13,%rdx
   1410c:	4c 89 f6             	mov    %r14,%rsi
   1410f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14112: R_X86_64_32S	.rodata.str1.1+0x1f89
   14116:	48 89 d9             	mov    %rbx,%rcx
   14119:	83 e0 01             	and    $0x1,%eax
   1411c:	0f b6 c0             	movzbl %al,%eax
   1411f:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   14122:	e8 00 00 00 00       	callq  14127 <e1000_pcix_set_mmrbc+0x264>
			14123: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14127:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   1412e:	00 
   1412f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14135:	48 89 d9             	mov    %rbx,%rcx
   14138:	4c 89 ea             	mov    %r13,%rdx
   1413b:	4c 89 f6             	mov    %r14,%rsi
   1413e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14141: R_X86_64_32S	.rodata.str1.1+0x1f89
   14145:	d0 e8                	shr    %al
   14147:	83 e0 01             	and    $0x1,%eax
   1414a:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   1414d:	e8 00 00 00 00       	callq  14152 <e1000_pcix_set_mmrbc+0x28f>
			1414e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14152:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   14159:	00 
   1415a:	4c 89 ea             	mov    %r13,%rdx
   1415d:	4c 89 f6             	mov    %r14,%rsi
   14160:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14163: R_X86_64_32S	.rodata.str1.1+0x1f89
   14167:	e8 00 00 00 00       	callq  1416c <e1000_pcix_set_mmrbc+0x2a9>
			14168: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1416c:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   14173:	00 
   14174:	48 85 c0             	test   %rax,%rax
   14177:	0f 84 ac 00 00 00    	je     14229 <e1000_pcix_set_mmrbc+0x366>
   1417d:	48 8d 48 18          	lea    0x18(%rax),%rcx
   14181:	4c 89 ea             	mov    %r13,%rdx
   14184:	4c 89 f6             	mov    %r14,%rsi
   14187:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1418a: R_X86_64_32S	.rodata.str1.1+0x1f89
   1418e:	e8 00 00 00 00       	callq  14193 <e1000_pcix_set_mmrbc+0x2d0>
			1418f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14193:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1419a:	00 
   1419b:	4c 89 ea             	mov    %r13,%rdx
   1419e:	4c 89 f6             	mov    %r14,%rsi
   141a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			141a4: R_X86_64_32S	.rodata.str1.1+0x1f89
   141a8:	48 83 c1 20          	add    $0x20,%rcx
   141ac:	e8 00 00 00 00       	callq  141b1 <e1000_pcix_set_mmrbc+0x2ee>
			141ad: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   141b1:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   141b8:	00 
   141b9:	4c 89 ea             	mov    %r13,%rdx
   141bc:	4c 89 f6             	mov    %r14,%rsi
   141bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			141c2: R_X86_64_32S	.rodata.str1.1+0x1f89
   141c6:	48 83 c1 30          	add    $0x30,%rcx
   141ca:	e8 00 00 00 00       	callq  141cf <e1000_pcix_set_mmrbc+0x30c>
			141cb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   141cf:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   141d6:	00 
   141d7:	4c 89 ea             	mov    %r13,%rdx
   141da:	4c 89 f6             	mov    %r14,%rsi
   141dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			141e0: R_X86_64_32S	.rodata.str1.1+0x1f89
   141e4:	48 83 c1 10          	add    $0x10,%rcx
   141e8:	e8 00 00 00 00       	callq  141ed <e1000_pcix_set_mmrbc+0x32a>
			141e9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   141ed:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   141f4:	00 
   141f5:	4c 89 ea             	mov    %r13,%rdx
   141f8:	4c 89 f6             	mov    %r14,%rsi
   141fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			141fe: R_X86_64_32S	.rodata.str1.1+0x1f89
   14202:	48 83 c1 28          	add    $0x28,%rcx
   14206:	e8 00 00 00 00       	callq  1420b <e1000_pcix_set_mmrbc+0x348>
			14207: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1420b:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   14212:	00 
   14213:	4c 89 ea             	mov    %r13,%rdx
   14216:	4c 89 f6             	mov    %r14,%rsi
   14219:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1421c: R_X86_64_32S	.rodata.str1.1+0x1f89
   14220:	48 83 c1 08          	add    $0x8,%rcx
   14224:	e8 00 00 00 00       	callq  14229 <e1000_pcix_set_mmrbc+0x366>
			14225: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14229:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   14230:	00 
   14231:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   14237:	4c 89 ea             	mov    %r13,%rdx
   1423a:	4c 89 f6             	mov    %r14,%rsi
   1423d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14240: R_X86_64_32S	.rodata.str1.1+0x1f89
   14244:	e8 00 00 00 00       	callq  14249 <e1000_pcix_set_mmrbc+0x386>
			14245: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14249:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   14250:	00 
   14251:	4c 89 ea             	mov    %r13,%rdx
   14254:	4c 89 f6             	mov    %r14,%rsi
   14257:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1425a: R_X86_64_32S	.rodata.str1.1+0x1f89
   1425e:	e8 00 00 00 00       	callq  14263 <e1000_pcix_set_mmrbc+0x3a0>
			1425f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14263:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1426a:	00 
   1426b:	48 85 c0             	test   %rax,%rax
   1426e:	0f 84 91 05 00 00    	je     14805 <e1000_pcix_set_mmrbc+0x942>
   14274:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   1427b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   14281:	4c 89 ea             	mov    %r13,%rdx
   14284:	4c 89 f6             	mov    %r14,%rsi
   14287:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1428a: R_X86_64_32S	.rodata.str1.1+0x1f89
   1428e:	31 db                	xor    %ebx,%ebx
   14290:	e8 00 00 00 00       	callq  14295 <e1000_pcix_set_mmrbc+0x3d2>
			14291: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14295:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1429c:	00 
   1429d:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   142a3:	4c 89 ea             	mov    %r13,%rdx
   142a6:	4c 89 f6             	mov    %r14,%rsi
   142a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			142ac: R_X86_64_32S	.rodata.str1.1+0x1f89
   142b0:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   142b7:	e8 00 00 00 00       	callq  142bc <e1000_pcix_set_mmrbc+0x3f9>
			142b8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   142bc:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   142c3:	00 
   142c4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   142ca:	4c 89 ea             	mov    %r13,%rdx
   142cd:	4c 89 f6             	mov    %r14,%rsi
   142d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			142d3: R_X86_64_32S	.rodata.str1.1+0x1f89
   142d7:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   142de:	e8 00 00 00 00       	callq  142e3 <e1000_pcix_set_mmrbc+0x420>
			142df: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   142e3:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   142ea:	00 
   142eb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   142f1:	4c 89 ea             	mov    %r13,%rdx
   142f4:	4c 89 f6             	mov    %r14,%rsi
   142f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			142fa: R_X86_64_32S	.rodata.str1.1+0x1f89
   142fe:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   14305:	e8 00 00 00 00       	callq  1430a <e1000_pcix_set_mmrbc+0x447>
			14306: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1430a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14311:	00 
   14312:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14318:	4c 89 ea             	mov    %r13,%rdx
   1431b:	4c 89 f6             	mov    %r14,%rsi
   1431e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14321: R_X86_64_32S	.rodata.str1.1+0x1f89
   14325:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   1432c:	e8 00 00 00 00       	callq  14331 <e1000_pcix_set_mmrbc+0x46e>
			1432d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14331:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14338:	00 
   14339:	4c 89 ea             	mov    %r13,%rdx
   1433c:	4c 89 f6             	mov    %r14,%rsi
   1433f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14342: R_X86_64_32S	.rodata.str1.1+0x1f89
   14346:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1434d:	e8 00 00 00 00       	callq  14352 <e1000_pcix_set_mmrbc+0x48f>
			1434e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14352:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14359:	00 
   1435a:	4c 89 ea             	mov    %r13,%rdx
   1435d:	4c 89 f6             	mov    %r14,%rsi
   14360:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14363: R_X86_64_32S	.rodata.str1.1+0x1f89
   14367:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1436e:	e8 00 00 00 00       	callq  14373 <e1000_pcix_set_mmrbc+0x4b0>
			1436f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14373:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1437a:	00 
   1437b:	4c 89 ea             	mov    %r13,%rdx
   1437e:	4c 89 f6             	mov    %r14,%rsi
   14381:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14384: R_X86_64_32S	.rodata.str1.1+0x1f89
   14388:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   1438f:	e8 00 00 00 00       	callq  14394 <e1000_pcix_set_mmrbc+0x4d1>
			14390: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14394:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1439b:	00 
   1439c:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   143a0:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   143a4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   143aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			143ad: R_X86_64_32S	.rodata.str1.1+0x1f89
   143b1:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   143b8:	48 01 d9             	add    %rbx,%rcx
   143bb:	48 ff c3             	inc    %rbx
   143be:	e8 00 00 00 00       	callq  143c3 <e1000_pcix_set_mmrbc+0x500>
			143bf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   143c3:	48 83 fb 20          	cmp    $0x20,%rbx
   143c7:	75 cb                	jne    14394 <e1000_pcix_set_mmrbc+0x4d1>
   143c9:	30 db                	xor    %bl,%bl
   143cb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   143d2:	00 
   143d3:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   143d7:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   143db:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   143e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			143e4: R_X86_64_32S	.rodata.str1.1+0x1f89
   143e8:	4c 89 ea             	mov    %r13,%rdx
   143eb:	4c 89 f6             	mov    %r14,%rsi
   143ee:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   143f5:	48 01 d9             	add    %rbx,%rcx
   143f8:	48 ff c3             	inc    %rbx
   143fb:	e8 00 00 00 00       	callq  14400 <e1000_pcix_set_mmrbc+0x53d>
			143fc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14400:	48 83 fb 20          	cmp    $0x20,%rbx
   14404:	75 c5                	jne    143cb <e1000_pcix_set_mmrbc+0x508>
   14406:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1440d:	00 
   1440e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   14414:	4c 89 ea             	mov    %r13,%rdx
   14417:	4c 89 f6             	mov    %r14,%rsi
   1441a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1441d: R_X86_64_32S	.rodata.str1.1+0x1f89
   14421:	30 db                	xor    %bl,%bl
   14423:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   1442a:	e8 00 00 00 00       	callq  1442f <e1000_pcix_set_mmrbc+0x56c>
			1442b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1442f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14436:	00 
   14437:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1443d:	4c 89 ea             	mov    %r13,%rdx
   14440:	4c 89 f6             	mov    %r14,%rsi
   14443:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14446: R_X86_64_32S	.rodata.str1.1+0x1f89
   1444a:	48 83 c1 48          	add    $0x48,%rcx
   1444e:	e8 00 00 00 00       	callq  14453 <e1000_pcix_set_mmrbc+0x590>
			1444f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14453:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1445a:	00 
   1445b:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1445f:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   14463:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14469:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1446c: R_X86_64_32S	.rodata.str1.1+0x1f89
   14470:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   14477:	48 01 d9             	add    %rbx,%rcx
   1447a:	48 ff c3             	inc    %rbx
   1447d:	e8 00 00 00 00       	callq  14482 <e1000_pcix_set_mmrbc+0x5bf>
			1447e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14482:	48 83 fb 20          	cmp    $0x20,%rbx
   14486:	75 cb                	jne    14453 <e1000_pcix_set_mmrbc+0x590>
   14488:	30 db                	xor    %bl,%bl
   1448a:	48 89 d9             	mov    %rbx,%rcx
   1448d:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   14494:	00 
   14495:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   14499:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   1449d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   144a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			144a6: R_X86_64_32S	.rodata.str1.1+0x1f89
   144aa:	4c 89 ea             	mov    %r13,%rdx
   144ad:	48 ff c3             	inc    %rbx
   144b0:	4c 89 f6             	mov    %r14,%rsi
   144b3:	e8 00 00 00 00       	callq  144b8 <e1000_pcix_set_mmrbc+0x5f5>
			144b4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   144b8:	48 83 fb 10          	cmp    $0x10,%rbx
   144bc:	75 cc                	jne    1448a <e1000_pcix_set_mmrbc+0x5c7>
   144be:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   144c5:	00 
   144c6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   144cc:	4c 89 ea             	mov    %r13,%rdx
   144cf:	4c 89 f6             	mov    %r14,%rsi
   144d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			144d5: R_X86_64_32S	.rodata.str1.1+0x1f89
   144d9:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   144e0:	e8 00 00 00 00       	callq  144e5 <e1000_pcix_set_mmrbc+0x622>
			144e1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   144e5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   144ec:	00 
   144ed:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   144f3:	4c 89 ea             	mov    %r13,%rdx
   144f6:	4c 89 f6             	mov    %r14,%rsi
   144f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			144fc: R_X86_64_32S	.rodata.str1.1+0x1f89
   14500:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   14507:	e8 00 00 00 00       	callq  1450c <e1000_pcix_set_mmrbc+0x649>
			14508: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1450c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14513:	00 
   14514:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1451a:	4c 89 ea             	mov    %r13,%rdx
   1451d:	4c 89 f6             	mov    %r14,%rsi
   14520:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14523: R_X86_64_32S	.rodata.str1.1+0x1f89
   14527:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   1452e:	e8 00 00 00 00       	callq  14533 <e1000_pcix_set_mmrbc+0x670>
			1452f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14533:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1453a:	00 
   1453b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   14541:	4c 89 ea             	mov    %r13,%rdx
   14544:	4c 89 f6             	mov    %r14,%rsi
   14547:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1454a: R_X86_64_32S	.rodata.str1.1+0x1f89
   1454e:	48 83 c1 70          	add    $0x70,%rcx
   14552:	e8 00 00 00 00       	callq  14557 <e1000_pcix_set_mmrbc+0x694>
			14553: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14557:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1455e:	00 
   1455f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   14565:	4c 89 ea             	mov    %r13,%rdx
   14568:	4c 89 f6             	mov    %r14,%rsi
   1456b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1456e: R_X86_64_32S	.rodata.str1.1+0x1f89
   14572:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   14579:	e8 00 00 00 00       	callq  1457e <e1000_pcix_set_mmrbc+0x6bb>
			1457a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1457e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14585:	00 
   14586:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1458c:	4c 89 ea             	mov    %r13,%rdx
   1458f:	4c 89 f6             	mov    %r14,%rsi
   14592:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14595: R_X86_64_32S	.rodata.str1.1+0x1f89
   14599:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   145a0:	e8 00 00 00 00       	callq  145a5 <e1000_pcix_set_mmrbc+0x6e2>
			145a1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   145a5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   145ac:	00 
   145ad:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   145b3:	4c 89 ea             	mov    %r13,%rdx
   145b6:	4c 89 f6             	mov    %r14,%rsi
   145b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			145bc: R_X86_64_32S	.rodata.str1.1+0x1f89
   145c0:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   145c7:	e8 00 00 00 00       	callq  145cc <e1000_pcix_set_mmrbc+0x709>
			145c8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   145cc:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   145d3:	00 
   145d4:	4c 89 ea             	mov    %r13,%rdx
   145d7:	4c 89 f6             	mov    %r14,%rsi
   145da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			145dd: R_X86_64_32S	.rodata.str1.1+0x1f89
   145e1:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   145e8:	e8 00 00 00 00       	callq  145ed <e1000_pcix_set_mmrbc+0x72a>
			145e9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   145ed:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   145f4:	00 
   145f5:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   145fc:	00 
   145fd:	74 62                	je     14661 <e1000_pcix_set_mmrbc+0x79e>
   145ff:	30 db                	xor    %bl,%bl
   14601:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14608:	00 
   14609:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1460d:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   14611:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14617:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1461a: R_X86_64_32S	.rodata.str1.1+0x1f89
   1461e:	4c 89 ea             	mov    %r13,%rdx
   14621:	4c 89 f6             	mov    %r14,%rsi
   14624:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1462b:	48 83 c1 08          	add    $0x8,%rcx
   1462f:	48 01 d9             	add    %rbx,%rcx
   14632:	48 ff c3             	inc    %rbx
   14635:	e8 00 00 00 00       	callq  1463a <e1000_pcix_set_mmrbc+0x777>
			14636: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1463a:	48 83 fb 20          	cmp    $0x20,%rbx
   1463e:	75 c1                	jne    14601 <e1000_pcix_set_mmrbc+0x73e>
   14640:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14647:	00 
   14648:	4c 89 ea             	mov    %r13,%rdx
   1464b:	4c 89 f6             	mov    %r14,%rsi
   1464e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14651: R_X86_64_32S	.rodata.str1.1+0x1f89
   14655:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1465c:	e8 00 00 00 00       	callq  14661 <e1000_pcix_set_mmrbc+0x79e>
			1465d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14661:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14668:	00 
   14669:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1466d:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   14671:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14674: R_X86_64_32S	.rodata.str1.1+0x1f89
   14678:	48 89 da             	mov    %rbx,%rdx
   1467b:	4c 89 ee             	mov    %r13,%rsi
   1467e:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   14685:	e8 00 00 00 00       	callq  1468a <e1000_pcix_set_mmrbc+0x7c7>
			14686: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1468a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14691:	00 
   14692:	48 89 da             	mov    %rbx,%rdx
   14695:	4c 89 ee             	mov    %r13,%rsi
   14698:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1469b: R_X86_64_32S	.rodata.str1.1+0x1f89
   1469f:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   146a6:	e8 00 00 00 00       	callq  146ab <e1000_pcix_set_mmrbc+0x7e8>
			146a7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   146ab:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   146b2:	00 
   146b3:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   146ba:	48 85 c0             	test   %rax,%rax
   146bd:	74 3b                	je     146fa <e1000_pcix_set_mmrbc+0x837>
   146bf:	48 8d 48 60          	lea    0x60(%rax),%rcx
   146c3:	48 89 da             	mov    %rbx,%rdx
   146c6:	4c 89 ee             	mov    %r13,%rsi
   146c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			146cc: R_X86_64_32S	.rodata.str1.1+0x1f89
   146d0:	e8 00 00 00 00       	callq  146d5 <e1000_pcix_set_mmrbc+0x812>
			146d1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   146d5:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   146dc:	00 
   146dd:	48 89 da             	mov    %rbx,%rdx
   146e0:	4c 89 ee             	mov    %r13,%rsi
   146e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			146e6: R_X86_64_32S	.rodata.str1.1+0x1f89
   146ea:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   146f1:	48 83 c1 58          	add    $0x58,%rcx
   146f5:	e8 00 00 00 00       	callq  146fa <e1000_pcix_set_mmrbc+0x837>
			146f6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   146fa:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14701:	00 
   14702:	48 89 da             	mov    %rbx,%rdx
   14705:	4c 89 ee             	mov    %r13,%rsi
   14708:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1470b: R_X86_64_32S	.rodata.str1.1+0x1f89
   1470f:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   14716:	e8 00 00 00 00       	callq  1471b <e1000_pcix_set_mmrbc+0x858>
			14717: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1471b:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14722:	00 
   14723:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   1472a:	48 85 c0             	test   %rax,%rax
   1472d:	74 41                	je     14770 <e1000_pcix_set_mmrbc+0x8ad>
   1472f:	48 8d 48 10          	lea    0x10(%rax),%rcx
   14733:	48 89 da             	mov    %rbx,%rdx
   14736:	4c 89 ee             	mov    %r13,%rsi
   14739:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1473c: R_X86_64_32S	.rodata.str1.1+0x1f89
   14740:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   14746:	e8 00 00 00 00       	callq  1474b <e1000_pcix_set_mmrbc+0x888>
			14747: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1474b:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14752:	00 
   14753:	48 89 da             	mov    %rbx,%rdx
   14756:	4c 89 ee             	mov    %r13,%rsi
   14759:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1475c: R_X86_64_32S	.rodata.str1.1+0x1f89
   14760:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   14767:	48 83 c1 08          	add    $0x8,%rcx
   1476b:	e8 00 00 00 00       	callq  14770 <e1000_pcix_set_mmrbc+0x8ad>
			1476c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14770:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14777:	00 
   14778:	48 89 da             	mov    %rbx,%rdx
   1477b:	4c 89 ee             	mov    %r13,%rsi
   1477e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14781: R_X86_64_32S	.rodata.str1.1+0x1f89
   14785:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   1478c:	e8 00 00 00 00       	callq  14791 <e1000_pcix_set_mmrbc+0x8ce>
			1478d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14791:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14798:	00 
   14799:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   147a0:	00 
   147a1:	74 62                	je     14805 <e1000_pcix_set_mmrbc+0x942>
   147a3:	31 db                	xor    %ebx,%ebx
   147a5:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   147ac:	00 
   147ad:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   147b1:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   147b5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   147bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			147be: R_X86_64_32S	.rodata.str1.1+0x1f89
   147c2:	4c 89 ea             	mov    %r13,%rdx
   147c5:	4c 89 f6             	mov    %r14,%rsi
   147c8:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   147cf:	48 83 c1 08          	add    $0x8,%rcx
   147d3:	48 01 d9             	add    %rbx,%rcx
   147d6:	48 ff c3             	inc    %rbx
   147d9:	e8 00 00 00 00       	callq  147de <e1000_pcix_set_mmrbc+0x91b>
			147da: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   147de:	48 83 fb 20          	cmp    $0x20,%rbx
   147e2:	75 c1                	jne    147a5 <e1000_pcix_set_mmrbc+0x8e2>
   147e4:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   147eb:	00 
   147ec:	4c 89 ea             	mov    %r13,%rdx
   147ef:	4c 89 f6             	mov    %r14,%rsi
   147f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			147f5: R_X86_64_32S	.rodata.str1.1+0x1f89
   147f9:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   14800:	e8 00 00 00 00       	callq  14805 <e1000_pcix_set_mmrbc+0x942>
			14801: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14805:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   14809:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   1480d:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   14814:	00 
   14815:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14818: R_X86_64_32S	.rodata.str1.1+0x1f89
   1481c:	48 89 da             	mov    %rbx,%rdx
   1481f:	4c 89 ee             	mov    %r13,%rsi
   14822:	e8 00 00 00 00       	callq  14827 <e1000_pcix_set_mmrbc+0x964>
			14823: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14827:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   1482e:	00 
   1482f:	48 89 da             	mov    %rbx,%rdx
   14832:	4c 89 ee             	mov    %r13,%rsi
   14835:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14838: R_X86_64_32S	.rodata.str1.1+0x1f89
   1483c:	e8 00 00 00 00       	callq  14841 <e1000_pcix_set_mmrbc+0x97e>
			1483d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   14841:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   14848:	00 
   14849:	48 85 c9             	test   %rcx,%rcx
   1484c:	74 18                	je     14866 <e1000_pcix_set_mmrbc+0x9a3>
   1484e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   14854:	48 89 da             	mov    %rbx,%rdx
   14857:	4c 89 ee             	mov    %r13,%rsi
   1485a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1485d: R_X86_64_32S	.rodata.str1.1+0x1f89
   14861:	e8 00 00 00 00       	callq  14866 <e1000_pcix_set_mmrbc+0x9a3>
			14862: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14866:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1486a:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   14870:	48 89 da             	mov    %rbx,%rdx
   14873:	4c 89 ee             	mov    %r13,%rsi
   14876:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14879: R_X86_64_32S	.rodata.str1.1+0x1f89
   1487d:	48 83 c1 40          	add    $0x40,%rcx
   14881:	e8 00 00 00 00       	callq  14886 <e1000_pcix_set_mmrbc+0x9c3>
			14882: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   14886:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1488a:	48 89 da             	mov    %rbx,%rdx
   1488d:	4c 89 ee             	mov    %r13,%rsi
   14890:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14893: R_X86_64_32S	.rodata.str1.1+0x1f89
   14897:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1489d:	48 83 c1 3c          	add    $0x3c,%rcx
   148a1:	e8 00 00 00 00       	callq  148a6 <e1000_pcix_set_mmrbc+0x9e3>
			148a2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   148a6:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   148aa:	48 89 da             	mov    %rbx,%rdx
   148ad:	4c 89 ee             	mov    %r13,%rsi
   148b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			148b3: R_X86_64_32S	.rodata.str1.1+0x1f89
   148b7:	48 83 c1 10          	add    $0x10,%rcx
   148bb:	e8 00 00 00 00       	callq  148c0 <e1000_pcix_set_mmrbc+0x9fd>
			148bc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   148c0:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   148c4:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   148c8:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   148cc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   148d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			148d5: R_X86_64_32S	.rodata.str1.1+0x1f89
   148d9:	4c 89 e1             	mov    %r12,%rcx
   148dc:	48 89 de             	mov    %rbx,%rsi
   148df:	e8 00 00 00 00       	callq  148e4 <e1000_pcix_set_mmrbc+0xa21>
			148e0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   148e4:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   148e8:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   148ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			148ef: R_X86_64_32S	.rodata.str1.1+0x1f89
   148f3:	48 c7 45 90 2c 06 00 	movq   $0x62c,0xffffffffffffff90(%rbp)
   148fa:	00 
   148fb:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   148ff:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   14902:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   14905:	e8 00 00 00 00       	callq  1490a <e1000_pcix_set_mmrbc+0xa47>
			14906: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   1490a:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   1490e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14911: R_X86_64_32S	.rodata.str1.1+0x1fb5
   14915:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   14919:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   1491c:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   1491f:	e8 00 00 00 00       	callq  14924 <e1000_pcix_set_mmrbc+0xa61>
			14920: R_X86_64_PC32	record_function+0xfffffffffffffffc
   14924:	4c 8b 6d a0          	mov    0xffffffffffffffa0(%rbp),%r13
   14928:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   1492e:	48 89 d9             	mov    %rbx,%rcx
   14931:	4c 89 e2             	mov    %r12,%rdx
   14934:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14937: R_X86_64_32S	.rodata.str1.1+0x1f89
   1493b:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   14942:	4c 89 ee             	mov    %r13,%rsi
   14945:	e8 00 00 00 00       	callq  1494a <e1000_pcix_set_mmrbc+0xa87>
			14946: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1494a:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   1494e:	48 85 c0             	test   %rax,%rax
   14951:	0f 84 3e 09 00 00    	je     15295 <e1000_pcix_set_mmrbc+0x13d2>
   14957:	4c 8d 40 38          	lea    0x38(%rax),%r8
   1495b:	4c 89 e2             	mov    %r12,%rdx
   1495e:	b9 04 00 00 00       	mov    $0x4,%ecx
   14963:	4c 89 ee             	mov    %r13,%rsi
   14966:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14969: R_X86_64_32S	.rodata.str1.1+0x1f89
   1496d:	45 31 f6             	xor    %r14d,%r14d
   14970:	e8 00 00 00 00       	callq  14975 <e1000_pcix_set_mmrbc+0xab2>
			14971: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14975:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   14979:	4c 89 e2             	mov    %r12,%rdx
   1497c:	b9 04 00 00 00       	mov    $0x4,%ecx
   14981:	4c 89 ee             	mov    %r13,%rsi
   14984:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14987: R_X86_64_32S	.rodata.str1.1+0x1f89
   1498b:	49 83 c0 7c          	add    $0x7c,%r8
   1498f:	e8 00 00 00 00       	callq  14994 <e1000_pcix_set_mmrbc+0xad1>
			14990: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14994:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   14998:	4c 89 e2             	mov    %r12,%rdx
   1499b:	b9 04 00 00 00       	mov    $0x4,%ecx
   149a0:	4c 89 ee             	mov    %r13,%rsi
   149a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			149a6: R_X86_64_32S	.rodata.str1.1+0x1f89
   149aa:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   149b1:	e8 00 00 00 00       	callq  149b6 <e1000_pcix_set_mmrbc+0xaf3>
			149b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   149b6:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   149ba:	4c 89 e2             	mov    %r12,%rdx
   149bd:	b9 02 00 00 00       	mov    $0x2,%ecx
   149c2:	4c 89 ee             	mov    %r13,%rsi
   149c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			149c8: R_X86_64_32S	.rodata.str1.1+0x1f89
   149cc:	49 83 c0 3e          	add    $0x3e,%r8
   149d0:	e8 00 00 00 00       	callq  149d5 <e1000_pcix_set_mmrbc+0xb12>
			149d1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   149d5:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   149d9:	ba 78 02 00 00       	mov    $0x278,%edx
   149de:	be 80 00 00 00       	mov    $0x80,%esi
   149e3:	e8 00 00 00 00       	callq  149e8 <e1000_pcix_set_mmrbc+0xb25>
			149e4: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   149e8:	4c 8b 65 b0          	mov    0xffffffffffffffb0(%rbp),%r12
   149ec:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   149f0:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   149f7:	00 
   149f8:	4c 8d 7d c4          	lea    0xffffffffffffffc4(%rbp),%r15
   149fc:	49 89 d8             	mov    %rbx,%r8
   149ff:	b9 01 00 00 00       	mov    $0x1,%ecx
   14a04:	4c 89 ee             	mov    %r13,%rsi
   14a07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14a0a: R_X86_64_32S	.rodata.str1.1+0x1f89
   14a0e:	49 ff c6             	inc    %r14
   14a11:	4c 89 fa             	mov    %r15,%rdx
   14a14:	48 ff c3             	inc    %rbx
   14a17:	e8 00 00 00 00       	callq  14a1c <e1000_pcix_set_mmrbc+0xb59>
			14a18: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14a1c:	49 83 fe 14          	cmp    $0x14,%r14
   14a20:	75 d6                	jne    149f8 <e1000_pcix_set_mmrbc+0xb35>
   14a22:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   14a26:	b9 04 00 00 00       	mov    $0x4,%ecx
   14a2b:	4c 89 fa             	mov    %r15,%rdx
   14a2e:	4c 89 ee             	mov    %r13,%rsi
   14a31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14a34: R_X86_64_32S	.rodata.str1.1+0x1f89
   14a38:	49 89 d8             	mov    %rbx,%r8
   14a3b:	e8 00 00 00 00       	callq  14a40 <e1000_pcix_set_mmrbc+0xb7d>
			14a3c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14a40:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   14a43:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   14a4a:	00 
   14a4b:	49 89 d8             	mov    %rbx,%r8
   14a4e:	b9 04 00 00 00       	mov    $0x4,%ecx
   14a53:	4c 89 ee             	mov    %r13,%rsi
   14a56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14a59: R_X86_64_32S	.rodata.str1.1+0x1f89
   14a5d:	83 e2 01             	and    $0x1,%edx
   14a60:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   14a63:	09 d0                	or     %edx,%eax
   14a65:	4c 89 fa             	mov    %r15,%rdx
   14a68:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   14a6f:	00 
   14a70:	e8 00 00 00 00       	callq  14a75 <e1000_pcix_set_mmrbc+0xbb2>
			14a71: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14a75:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   14a78:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   14a7f:	00 
   14a80:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   14a87:	00 
   14a88:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   14a8e:	4c 89 ee             	mov    %r13,%rsi
   14a91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14a94: R_X86_64_32S	.rodata.str1.1+0x1f89
   14a98:	83 e2 01             	and    $0x1,%edx
   14a9b:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   14a9e:	01 d2                	add    %edx,%edx
   14aa0:	09 d0                	or     %edx,%eax
   14aa2:	4c 89 fa             	mov    %r15,%rdx
   14aa5:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   14aac:	00 
   14aad:	e8 00 00 00 00       	callq  14ab2 <e1000_pcix_set_mmrbc+0xbef>
			14aae: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14ab2:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   14ab9:	00 
   14aba:	48 85 c0             	test   %rax,%rax
   14abd:	0f 84 d0 00 00 00    	je     14b93 <e1000_pcix_set_mmrbc+0xcd0>
   14ac3:	48 8d 48 18          	lea    0x18(%rax),%rcx
   14ac7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14acd:	4c 89 fa             	mov    %r15,%rdx
   14ad0:	4c 89 ee             	mov    %r13,%rsi
   14ad3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ad6: R_X86_64_32S	.rodata.str1.1+0x1f89
   14ada:	e8 00 00 00 00       	callq  14adf <e1000_pcix_set_mmrbc+0xc1c>
			14adb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14adf:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   14ae6:	00 
   14ae7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14aed:	4c 89 fa             	mov    %r15,%rdx
   14af0:	4c 89 ee             	mov    %r13,%rsi
   14af3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14af6: R_X86_64_32S	.rodata.str1.1+0x1f89
   14afa:	48 83 c1 20          	add    $0x20,%rcx
   14afe:	e8 00 00 00 00       	callq  14b03 <e1000_pcix_set_mmrbc+0xc40>
			14aff: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14b03:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   14b0a:	00 
   14b0b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14b11:	4c 89 fa             	mov    %r15,%rdx
   14b14:	4c 89 ee             	mov    %r13,%rsi
   14b17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14b1a: R_X86_64_32S	.rodata.str1.1+0x1f89
   14b1e:	48 83 c1 30          	add    $0x30,%rcx
   14b22:	e8 00 00 00 00       	callq  14b27 <e1000_pcix_set_mmrbc+0xc64>
			14b23: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14b27:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   14b2e:	00 
   14b2f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14b35:	4c 89 fa             	mov    %r15,%rdx
   14b38:	4c 89 ee             	mov    %r13,%rsi
   14b3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14b3e: R_X86_64_32S	.rodata.str1.1+0x1f89
   14b42:	48 83 c1 10          	add    $0x10,%rcx
   14b46:	e8 00 00 00 00       	callq  14b4b <e1000_pcix_set_mmrbc+0xc88>
			14b47: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14b4b:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   14b52:	00 
   14b53:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14b59:	4c 89 fa             	mov    %r15,%rdx
   14b5c:	4c 89 ee             	mov    %r13,%rsi
   14b5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14b62: R_X86_64_32S	.rodata.str1.1+0x1f89
   14b66:	48 83 c1 28          	add    $0x28,%rcx
   14b6a:	e8 00 00 00 00       	callq  14b6f <e1000_pcix_set_mmrbc+0xcac>
			14b6b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14b6f:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   14b76:	00 
   14b77:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14b7d:	4c 89 fa             	mov    %r15,%rdx
   14b80:	4c 89 ee             	mov    %r13,%rsi
   14b83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14b86: R_X86_64_32S	.rodata.str1.1+0x1f89
   14b8a:	48 83 c1 08          	add    $0x8,%rcx
   14b8e:	e8 00 00 00 00       	callq  14b93 <e1000_pcix_set_mmrbc+0xcd0>
			14b8f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14b93:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   14b9a:	00 
   14b9b:	b9 08 00 00 00       	mov    $0x8,%ecx
   14ba0:	4c 89 fa             	mov    %r15,%rdx
   14ba3:	4c 89 ee             	mov    %r13,%rsi
   14ba6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ba9: R_X86_64_32S	.rodata.str1.1+0x1f89
   14bad:	e8 00 00 00 00       	callq  14bb2 <e1000_pcix_set_mmrbc+0xcef>
			14bae: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14bb2:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   14bb9:	00 
   14bba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14bbd: R_X86_64_32S	.rodata.str1.1+0x1f89
   14bc1:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   14bc7:	4c 89 fa             	mov    %r15,%rdx
   14bca:	4c 89 ee             	mov    %r13,%rsi
   14bcd:	e8 00 00 00 00       	callq  14bd2 <e1000_pcix_set_mmrbc+0xd0f>
			14bce: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14bd2:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   14bd9:	00 
   14bda:	48 85 ff             	test   %rdi,%rdi
   14bdd:	0f 84 08 06 00 00    	je     151eb <e1000_pcix_set_mmrbc+0x1328>
   14be3:	ba 08 00 00 00       	mov    $0x8,%edx
   14be8:	be 10 03 00 00       	mov    $0x310,%esi
   14bed:	31 db                	xor    %ebx,%ebx
   14bef:	e8 00 00 00 00       	callq  14bf4 <e1000_pcix_set_mmrbc+0xd31>
			14bf0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   14bf4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14bfb:	00 
   14bfc:	b9 08 00 00 00       	mov    $0x8,%ecx
   14c01:	4c 89 fa             	mov    %r15,%rdx
   14c04:	4c 89 ee             	mov    %r13,%rsi
   14c07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14c0a: R_X86_64_32S	.rodata.str1.1+0x1f89
   14c0e:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   14c15:	e8 00 00 00 00       	callq  14c1a <e1000_pcix_set_mmrbc+0xd57>
			14c16: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14c1a:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14c21:	00 
   14c22:	b9 02 00 00 00       	mov    $0x2,%ecx
   14c27:	4c 89 fa             	mov    %r15,%rdx
   14c2a:	4c 89 ee             	mov    %r13,%rsi
   14c2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14c30: R_X86_64_32S	.rodata.str1.1+0x1f89
   14c34:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   14c3b:	e8 00 00 00 00       	callq  14c40 <e1000_pcix_set_mmrbc+0xd7d>
			14c3c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14c40:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14c47:	00 
   14c48:	b9 08 00 00 00       	mov    $0x8,%ecx
   14c4d:	4c 89 fa             	mov    %r15,%rdx
   14c50:	4c 89 ee             	mov    %r13,%rsi
   14c53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14c56: R_X86_64_32S	.rodata.str1.1+0x1f89
   14c5a:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   14c61:	e8 00 00 00 00       	callq  14c66 <e1000_pcix_set_mmrbc+0xda3>
			14c62: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14c66:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14c6d:	00 
   14c6e:	b9 04 00 00 00       	mov    $0x4,%ecx
   14c73:	4c 89 fa             	mov    %r15,%rdx
   14c76:	4c 89 ee             	mov    %r13,%rsi
   14c79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14c7c: R_X86_64_32S	.rodata.str1.1+0x1f89
   14c80:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   14c87:	e8 00 00 00 00       	callq  14c8c <e1000_pcix_set_mmrbc+0xdc9>
			14c88: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14c8c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14c93:	00 
   14c94:	b9 04 00 00 00       	mov    $0x4,%ecx
   14c99:	4c 89 fa             	mov    %r15,%rdx
   14c9c:	4c 89 ee             	mov    %r13,%rsi
   14c9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ca2: R_X86_64_32S	.rodata.str1.1+0x1f89
   14ca6:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   14cad:	e8 00 00 00 00       	callq  14cb2 <e1000_pcix_set_mmrbc+0xdef>
			14cae: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14cb2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14cb9:	00 
   14cba:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14cc0:	4c 89 fa             	mov    %r15,%rdx
   14cc3:	4c 89 ee             	mov    %r13,%rsi
   14cc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14cc9: R_X86_64_32S	.rodata.str1.1+0x1f89
   14ccd:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   14cd4:	e8 00 00 00 00       	callq  14cd9 <e1000_pcix_set_mmrbc+0xe16>
			14cd5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14cd9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14ce0:	00 
   14ce1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14ce7:	4c 89 fa             	mov    %r15,%rdx
   14cea:	4c 89 ee             	mov    %r13,%rsi
   14ced:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14cf0: R_X86_64_32S	.rodata.str1.1+0x1f89
   14cf4:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   14cfb:	e8 00 00 00 00       	callq  14d00 <e1000_pcix_set_mmrbc+0xe3d>
			14cfc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14d00:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14d07:	00 
   14d08:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14d0e:	4c 89 fa             	mov    %r15,%rdx
   14d11:	4c 89 ee             	mov    %r13,%rsi
   14d14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14d17: R_X86_64_32S	.rodata.str1.1+0x1f89
   14d1b:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   14d22:	e8 00 00 00 00       	callq  14d27 <e1000_pcix_set_mmrbc+0xe64>
			14d23: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14d27:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14d2e:	00 
   14d2f:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   14d33:	b9 01 00 00 00       	mov    $0x1,%ecx
   14d38:	4c 89 ee             	mov    %r13,%rsi
   14d3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14d3e: R_X86_64_32S	.rodata.str1.1+0x1f89
   14d42:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   14d49:	49 01 d8             	add    %rbx,%r8
   14d4c:	48 ff c3             	inc    %rbx
   14d4f:	e8 00 00 00 00       	callq  14d54 <e1000_pcix_set_mmrbc+0xe91>
			14d50: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14d54:	48 83 fb 20          	cmp    $0x20,%rbx
   14d58:	75 cd                	jne    14d27 <e1000_pcix_set_mmrbc+0xe64>
   14d5a:	30 db                	xor    %bl,%bl
   14d5c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14d63:	00 
   14d64:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   14d68:	b9 01 00 00 00       	mov    $0x1,%ecx
   14d6d:	4c 89 ee             	mov    %r13,%rsi
   14d70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14d73: R_X86_64_32S	.rodata.str1.1+0x1f89
   14d77:	4c 89 f2             	mov    %r14,%rdx
   14d7a:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   14d81:	49 01 d8             	add    %rbx,%r8
   14d84:	48 ff c3             	inc    %rbx
   14d87:	e8 00 00 00 00       	callq  14d8c <e1000_pcix_set_mmrbc+0xec9>
			14d88: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14d8c:	48 83 fb 20          	cmp    $0x20,%rbx
   14d90:	75 ca                	jne    14d5c <e1000_pcix_set_mmrbc+0xe99>
   14d92:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14d99:	00 
   14d9a:	b9 02 00 00 00       	mov    $0x2,%ecx
   14d9f:	4c 89 f2             	mov    %r14,%rdx
   14da2:	4c 89 ee             	mov    %r13,%rsi
   14da5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14da8: R_X86_64_32S	.rodata.str1.1+0x1f89
   14dac:	30 db                	xor    %bl,%bl
   14dae:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   14db5:	e8 00 00 00 00       	callq  14dba <e1000_pcix_set_mmrbc+0xef7>
			14db6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14dba:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   14dc1:	00 
   14dc2:	ba 08 00 00 00       	mov    $0x8,%edx
   14dc7:	be 48 00 00 00       	mov    $0x48,%esi
   14dcc:	e8 00 00 00 00       	callq  14dd1 <e1000_pcix_set_mmrbc+0xf0e>
			14dcd: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   14dd1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14dd8:	00 
   14dd9:	b9 08 00 00 00       	mov    $0x8,%ecx
   14dde:	4c 89 f2             	mov    %r14,%rdx
   14de1:	4c 89 ee             	mov    %r13,%rsi
   14de4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14de7: R_X86_64_32S	.rodata.str1.1+0x1f89
   14deb:	49 83 c0 48          	add    $0x48,%r8
   14def:	e8 00 00 00 00       	callq  14df4 <e1000_pcix_set_mmrbc+0xf31>
			14df0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14df4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14dfb:	00 
   14dfc:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   14e00:	b9 01 00 00 00       	mov    $0x1,%ecx
   14e05:	4c 89 ee             	mov    %r13,%rsi
   14e08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14e0b: R_X86_64_32S	.rodata.str1.1+0x1f89
   14e0f:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   14e16:	49 01 d8             	add    %rbx,%r8
   14e19:	48 ff c3             	inc    %rbx
   14e1c:	e8 00 00 00 00       	callq  14e21 <e1000_pcix_set_mmrbc+0xf5e>
			14e1d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14e21:	48 83 fb 20          	cmp    $0x20,%rbx
   14e25:	75 cd                	jne    14df4 <e1000_pcix_set_mmrbc+0xf31>
   14e27:	30 db                	xor    %bl,%bl
   14e29:	49 89 d8             	mov    %rbx,%r8
   14e2c:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   14e33:	00 
   14e34:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   14e38:	b9 01 00 00 00       	mov    $0x1,%ecx
   14e3d:	4c 89 ee             	mov    %r13,%rsi
   14e40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14e43: R_X86_64_32S	.rodata.str1.1+0x1f89
   14e47:	4c 89 f2             	mov    %r14,%rdx
   14e4a:	48 ff c3             	inc    %rbx
   14e4d:	e8 00 00 00 00       	callq  14e52 <e1000_pcix_set_mmrbc+0xf8f>
			14e4e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14e52:	48 83 fb 10          	cmp    $0x10,%rbx
   14e56:	75 d1                	jne    14e29 <e1000_pcix_set_mmrbc+0xf66>
   14e58:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   14e5f:	00 
   14e60:	ba 10 00 00 00       	mov    $0x10,%edx
   14e65:	be 18 04 00 00       	mov    $0x418,%esi
   14e6a:	e8 00 00 00 00       	callq  14e6f <e1000_pcix_set_mmrbc+0xfac>
			14e6b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   14e6f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14e76:	00 
   14e77:	b9 01 00 00 00       	mov    $0x1,%ecx
   14e7c:	4c 89 f2             	mov    %r14,%rdx
   14e7f:	4c 89 ee             	mov    %r13,%rsi
   14e82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14e85: R_X86_64_32S	.rodata.str1.1+0x1f89
   14e89:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   14e90:	e8 00 00 00 00       	callq  14e95 <e1000_pcix_set_mmrbc+0xfd2>
			14e91: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14e95:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14e9c:	00 
   14e9d:	b9 04 00 00 00       	mov    $0x4,%ecx
   14ea2:	4c 89 f2             	mov    %r14,%rdx
   14ea5:	4c 89 ee             	mov    %r13,%rsi
   14ea8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14eab: R_X86_64_32S	.rodata.str1.1+0x1f89
   14eaf:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   14eb6:	e8 00 00 00 00       	callq  14ebb <e1000_pcix_set_mmrbc+0xff8>
			14eb7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14ebb:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14ec2:	00 
   14ec3:	b9 08 00 00 00       	mov    $0x8,%ecx
   14ec8:	4c 89 f2             	mov    %r14,%rdx
   14ecb:	4c 89 ee             	mov    %r13,%rsi
   14ece:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ed1: R_X86_64_32S	.rodata.str1.1+0x1f89
   14ed5:	49 83 c0 70          	add    $0x70,%r8
   14ed9:	e8 00 00 00 00       	callq  14ede <e1000_pcix_set_mmrbc+0x101b>
			14eda: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14ede:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   14ee5:	00 
   14ee6:	ba 10 00 00 00       	mov    $0x10,%edx
   14eeb:	be 10 00 00 00       	mov    $0x10,%esi
   14ef0:	e8 00 00 00 00       	callq  14ef5 <e1000_pcix_set_mmrbc+0x1032>
			14ef1: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   14ef5:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14efc:	00 
   14efd:	b9 04 00 00 00       	mov    $0x4,%ecx
   14f02:	4c 89 f2             	mov    %r14,%rdx
   14f05:	4c 89 ee             	mov    %r13,%rsi
   14f08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14f0b: R_X86_64_32S	.rodata.str1.1+0x1f89
   14f0f:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   14f16:	e8 00 00 00 00       	callq  14f1b <e1000_pcix_set_mmrbc+0x1058>
			14f17: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14f1b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14f22:	00 
   14f23:	b9 08 00 00 00       	mov    $0x8,%ecx
   14f28:	4c 89 f2             	mov    %r14,%rdx
   14f2b:	4c 89 ee             	mov    %r13,%rsi
   14f2e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14f31: R_X86_64_32S	.rodata.str1.1+0x1f89
   14f35:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   14f3c:	e8 00 00 00 00       	callq  14f41 <e1000_pcix_set_mmrbc+0x107e>
			14f3d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14f41:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   14f48:	00 
   14f49:	b9 04 00 00 00       	mov    $0x4,%ecx
   14f4e:	4c 89 f2             	mov    %r14,%rdx
   14f51:	4c 89 ee             	mov    %r13,%rsi
   14f54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14f57: R_X86_64_32S	.rodata.str1.1+0x1f89
   14f5b:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   14f62:	e8 00 00 00 00       	callq  14f67 <e1000_pcix_set_mmrbc+0x10a4>
			14f63: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14f67:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   14f6e:	00 
   14f6f:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   14f75:	4c 89 f2             	mov    %r14,%rdx
   14f78:	4c 89 ee             	mov    %r13,%rsi
   14f7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14f7e: R_X86_64_32S	.rodata.str1.1+0x1f89
   14f82:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   14f89:	e8 00 00 00 00       	callq  14f8e <e1000_pcix_set_mmrbc+0x10cb>
			14f8a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   14f8e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14f95:	00 
   14f96:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   14f9d:	00 
   14f9e:	74 63                	je     15003 <e1000_pcix_set_mmrbc+0x1140>
   14fa0:	30 db                	xor    %bl,%bl
   14fa2:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14fa9:	00 
   14faa:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   14fae:	b9 01 00 00 00       	mov    $0x1,%ecx
   14fb3:	4c 89 ee             	mov    %r13,%rsi
   14fb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14fb9: R_X86_64_32S	.rodata.str1.1+0x1f89
   14fbd:	4c 89 f2             	mov    %r14,%rdx
   14fc0:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   14fc7:	49 83 c0 08          	add    $0x8,%r8
   14fcb:	49 01 d8             	add    %rbx,%r8
   14fce:	48 ff c3             	inc    %rbx
   14fd1:	e8 00 00 00 00       	callq  14fd6 <e1000_pcix_set_mmrbc+0x1113>
			14fd2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   14fd6:	48 83 fb 20          	cmp    $0x20,%rbx
   14fda:	75 c6                	jne    14fa2 <e1000_pcix_set_mmrbc+0x10df>
   14fdc:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   14fe3:	00 
   14fe4:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   14fea:	4c 89 f2             	mov    %r14,%rdx
   14fed:	4c 89 ee             	mov    %r13,%rsi
   14ff0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			14ff3: R_X86_64_32S	.rodata.str1.1+0x1f89
   14ff7:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   14ffe:	e8 00 00 00 00       	callq  15003 <e1000_pcix_set_mmrbc+0x1140>
			14fff: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15003:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1500a:	00 
   1500b:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   1500f:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   15015:	4c 89 ee             	mov    %r13,%rsi
   15018:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1501b: R_X86_64_32S	.rodata.str1.1+0x1f89
   1501f:	48 89 da             	mov    %rbx,%rdx
   15022:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   15029:	e8 00 00 00 00       	callq  1502e <e1000_pcix_set_mmrbc+0x116b>
			1502a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1502e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   15035:	00 
   15036:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   1503c:	48 89 da             	mov    %rbx,%rdx
   1503f:	4c 89 ee             	mov    %r13,%rsi
   15042:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15045: R_X86_64_32S	.rodata.str1.1+0x1f89
   15049:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   15050:	e8 00 00 00 00       	callq  15055 <e1000_pcix_set_mmrbc+0x1192>
			15051: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15055:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1505c:	00 
   1505d:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   15064:	48 85 c0             	test   %rax,%rax
   15067:	74 47                	je     150b0 <e1000_pcix_set_mmrbc+0x11ed>
   15069:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1506d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15073:	48 89 da             	mov    %rbx,%rdx
   15076:	4c 89 ee             	mov    %r13,%rsi
   15079:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1507c: R_X86_64_32S	.rodata.str1.1+0x1f89
   15080:	e8 00 00 00 00       	callq  15085 <e1000_pcix_set_mmrbc+0x11c2>
			15081: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15085:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1508c:	00 
   1508d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15093:	48 89 da             	mov    %rbx,%rdx
   15096:	4c 89 ee             	mov    %r13,%rsi
   15099:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1509c: R_X86_64_32S	.rodata.str1.1+0x1f89
   150a0:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   150a7:	48 83 c1 58          	add    $0x58,%rcx
   150ab:	e8 00 00 00 00       	callq  150b0 <e1000_pcix_set_mmrbc+0x11ed>
			150ac: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   150b0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   150b7:	00 
   150b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			150bb: R_X86_64_32S	.rodata.str1.1+0x1f89
   150bf:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   150c5:	48 89 da             	mov    %rbx,%rdx
   150c8:	4c 89 ee             	mov    %r13,%rsi
   150cb:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   150d2:	e8 00 00 00 00       	callq  150d7 <e1000_pcix_set_mmrbc+0x1214>
			150d3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   150d7:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   150de:	00 
   150df:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   150e6:	48 85 ff             	test   %rdi,%rdi
   150e9:	74 64                	je     1514f <e1000_pcix_set_mmrbc+0x128c>
   150eb:	ba 08 00 00 00       	mov    $0x8,%edx
   150f0:	be 10 00 00 00       	mov    $0x10,%esi
   150f5:	e8 00 00 00 00       	callq  150fa <e1000_pcix_set_mmrbc+0x1237>
			150f6: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   150fa:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   15101:	00 
   15102:	b9 08 00 00 00       	mov    $0x8,%ecx
   15107:	48 89 da             	mov    %rbx,%rdx
   1510a:	4c 89 ee             	mov    %r13,%rsi
   1510d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15110: R_X86_64_32S	.rodata.str1.1+0x1f89
   15114:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   1511b:	49 83 c0 10          	add    $0x10,%r8
   1511f:	e8 00 00 00 00       	callq  15124 <e1000_pcix_set_mmrbc+0x1261>
			15120: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15124:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1512b:	00 
   1512c:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   15132:	48 89 da             	mov    %rbx,%rdx
   15135:	4c 89 ee             	mov    %r13,%rsi
   15138:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1513b: R_X86_64_32S	.rodata.str1.1+0x1f89
   1513f:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   15146:	48 83 c1 08          	add    $0x8,%rcx
   1514a:	e8 00 00 00 00       	callq  1514f <e1000_pcix_set_mmrbc+0x128c>
			1514b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1514f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   15156:	00 
   15157:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1515d:	48 89 da             	mov    %rbx,%rdx
   15160:	4c 89 ee             	mov    %r13,%rsi
   15163:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15166: R_X86_64_32S	.rodata.str1.1+0x1f89
   1516a:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   15171:	e8 00 00 00 00       	callq  15176 <e1000_pcix_set_mmrbc+0x12b3>
			15172: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15176:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1517d:	00 
   1517e:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   15185:	00 
   15186:	74 63                	je     151eb <e1000_pcix_set_mmrbc+0x1328>
   15188:	31 db                	xor    %ebx,%ebx
   1518a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   15191:	00 
   15192:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   15196:	b9 01 00 00 00       	mov    $0x1,%ecx
   1519b:	4c 89 ee             	mov    %r13,%rsi
   1519e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			151a1: R_X86_64_32S	.rodata.str1.1+0x1f89
   151a5:	4c 89 f2             	mov    %r14,%rdx
   151a8:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   151af:	49 83 c0 08          	add    $0x8,%r8
   151b3:	49 01 d8             	add    %rbx,%r8
   151b6:	48 ff c3             	inc    %rbx
   151b9:	e8 00 00 00 00       	callq  151be <e1000_pcix_set_mmrbc+0x12fb>
			151ba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   151be:	48 83 fb 20          	cmp    $0x20,%rbx
   151c2:	75 c6                	jne    1518a <e1000_pcix_set_mmrbc+0x12c7>
   151c4:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   151cb:	00 
   151cc:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   151d2:	4c 89 f2             	mov    %r14,%rdx
   151d5:	4c 89 ee             	mov    %r13,%rsi
   151d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			151db: R_X86_64_32S	.rodata.str1.1+0x1f89
   151df:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   151e6:	e8 00 00 00 00       	callq  151eb <e1000_pcix_set_mmrbc+0x1328>
			151e7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   151eb:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   151ef:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   151f6:	00 
   151f7:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   151fd:	4c 89 ee             	mov    %r13,%rsi
   15200:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15203: R_X86_64_32S	.rodata.str1.1+0x1f89
   15207:	48 89 da             	mov    %rbx,%rdx
   1520a:	e8 00 00 00 00       	callq  1520f <e1000_pcix_set_mmrbc+0x134c>
			1520b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1520f:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   15216:	00 
   15217:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1521d:	48 89 da             	mov    %rbx,%rdx
   15220:	4c 89 ee             	mov    %r13,%rsi
   15223:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15226: R_X86_64_32S	.rodata.str1.1+0x1f89
   1522a:	e8 00 00 00 00       	callq  1522f <e1000_pcix_set_mmrbc+0x136c>
			1522b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1522f:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   15236:	00 
   15237:	48 85 c0             	test   %rax,%rax
   1523a:	74 1a                	je     15256 <e1000_pcix_set_mmrbc+0x1393>
   1523c:	49 89 c0             	mov    %rax,%r8
   1523f:	b9 08 00 00 00       	mov    $0x8,%ecx
   15244:	48 89 da             	mov    %rbx,%rdx
   15247:	4c 89 ee             	mov    %r13,%rsi
   1524a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1524d: R_X86_64_32S	.rodata.str1.1+0x1f89
   15251:	e8 00 00 00 00       	callq  15256 <e1000_pcix_set_mmrbc+0x1393>
			15252: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15256:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   1525a:	b9 02 00 00 00       	mov    $0x2,%ecx
   1525f:	48 89 da             	mov    %rbx,%rdx
   15262:	4c 89 ee             	mov    %r13,%rsi
   15265:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15268: R_X86_64_32S	.rodata.str1.1+0x1f89
   1526c:	49 83 c0 3c          	add    $0x3c,%r8
   15270:	e8 00 00 00 00       	callq  15275 <e1000_pcix_set_mmrbc+0x13b2>
			15271: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15275:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   15279:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   1527f:	48 89 da             	mov    %rbx,%rdx
   15282:	4c 89 ee             	mov    %r13,%rsi
   15285:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15288: R_X86_64_32S	.rodata.str1.1+0x1f89
   1528c:	48 83 c1 10          	add    $0x10,%rcx
   15290:	e8 00 00 00 00       	callq  15295 <e1000_pcix_set_mmrbc+0x13d2>
			15291: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15295:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   15299:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   1529d:	b9 04 00 00 00       	mov    $0x4,%ecx
   152a2:	4c 89 ee             	mov    %r13,%rsi
   152a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			152a8: R_X86_64_32S	.rodata.str1.1+0x1f89
   152ac:	48 89 da             	mov    %rbx,%rdx
   152af:	e8 00 00 00 00       	callq  152b4 <e1000_pcix_set_mmrbc+0x13f1>
			152b0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   152b4:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   152b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			152bb: R_X86_64_32S	.rodata.str1.1+0x1f89
   152bf:	b9 04 00 00 00       	mov    $0x4,%ecx
   152c4:	48 89 da             	mov    %rbx,%rdx
   152c7:	4c 89 ee             	mov    %r13,%rsi
   152ca:	e8 00 00 00 00       	callq  152cf <e1000_pcix_set_mmrbc+0x140c>
			152cb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   152cf:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   152d3:	48 85 ff             	test   %rdi,%rdi
   152d6:	74 05                	je     152dd <e1000_pcix_set_mmrbc+0x141a>
   152d8:	e8 00 00 00 00       	callq  152dd <e1000_pcix_set_mmrbc+0x141a>
			152d9: R_X86_64_PC32	kfree+0xfffffffffffffffc
   152dd:	48 83 c4 58          	add    $0x58,%rsp
   152e1:	5b                   	pop    %rbx
   152e2:	41 5c                	pop    %r12
   152e4:	41 5d                	pop    %r13
   152e6:	41 5e                	pop    %r14
   152e8:	41 5f                	pop    %r15
   152ea:	c9                   	leaveq 
   152eb:	c3                   	retq   

00000000000152ec <dev_open>:
   152ec:	55                   	push   %rbp
   152ed:	48 89 e5             	mov    %rsp,%rbp
   152f0:	41 56                	push   %r14
   152f2:	49 89 fe             	mov    %rdi,%r14
   152f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			152f8: R_X86_64_32S	.rodata.str1.1+0x1fd2
   152fc:	41 55                	push   %r13
   152fe:	41 54                	push   %r12
   15300:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   15304:	53                   	push   %rbx
   15305:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   15309:	48 83 ec 30          	sub    $0x30,%rsp
   1530d:	e8 00 00 00 00       	callq  15312 <dev_open+0x26>
			1530e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   15312:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15315: R_X86_64_32S	.rodata.str1.1+0x1fdb
   15319:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   15320:	00 
   15321:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   15328:	00 
   15329:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   15330:	4c 89 75 d0          	mov    %r14,0xffffffffffffffd0(%rbp)
   15334:	e8 00 00 00 00       	callq  15339 <dev_open+0x4d>
			15335: R_X86_64_PC32	record_function+0xfffffffffffffffc
   15339:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
   1533d:	48 89 da             	mov    %rbx,%rdx
   15340:	4c 89 e6             	mov    %r12,%rsi
   15343:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15346: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1534a:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   15351:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
   15358:	00 
   15359:	e8 00 00 00 00       	callq  1535e <dev_open+0x72>
			1535a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1535e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15362:	48 85 c0             	test   %rax,%rax
   15365:	0f 84 2b 07 00 00    	je     15a96 <dev_open+0x7aa>
   1536b:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   15372:	48 89 da             	mov    %rbx,%rdx
   15375:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1537b:	4c 89 e6             	mov    %r12,%rsi
   1537e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15381: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15385:	e8 00 00 00 00       	callq  1538a <dev_open+0x9e>
			15386: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1538a:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1538e:	48 89 da             	mov    %rbx,%rdx
   15391:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   15397:	4c 89 e6             	mov    %r12,%rsi
   1539a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1539d: R_X86_64_32S	.rodata.str1.1+0x1fd2
   153a1:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   153a8:	e8 00 00 00 00       	callq  153ad <dev_open+0xc1>
			153a9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   153ad:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   153b1:	48 89 da             	mov    %rbx,%rdx
   153b4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   153ba:	4c 89 e6             	mov    %r12,%rsi
   153bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			153c0: R_X86_64_32S	.rodata.str1.1+0x1fd2
   153c4:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   153cb:	e8 00 00 00 00       	callq  153d0 <dev_open+0xe4>
			153cc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   153d0:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   153d4:	48 89 da             	mov    %rbx,%rdx
   153d7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   153dd:	4c 89 e6             	mov    %r12,%rsi
   153e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			153e3: R_X86_64_32S	.rodata.str1.1+0x1fd2
   153e7:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   153ee:	e8 00 00 00 00       	callq  153f3 <dev_open+0x107>
			153ef: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   153f3:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   153f7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   153fd:	48 89 da             	mov    %rbx,%rdx
   15400:	4c 89 e6             	mov    %r12,%rsi
   15403:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15406: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1540a:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   15411:	e8 00 00 00 00       	callq  15416 <dev_open+0x12a>
			15412: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15416:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1541a:	48 89 da             	mov    %rbx,%rdx
   1541d:	4c 89 e6             	mov    %r12,%rsi
   15420:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15423: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15427:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1542e:	e8 00 00 00 00       	callq  15433 <dev_open+0x147>
			1542f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15433:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15437:	48 89 da             	mov    %rbx,%rdx
   1543a:	4c 89 e6             	mov    %r12,%rsi
   1543d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15440: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15444:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1544b:	e8 00 00 00 00       	callq  15450 <dev_open+0x164>
			1544c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15450:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15454:	48 89 da             	mov    %rbx,%rdx
   15457:	4c 89 e6             	mov    %r12,%rsi
   1545a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1545d: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15461:	31 db                	xor    %ebx,%ebx
   15463:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   1546a:	e8 00 00 00 00       	callq  1546f <dev_open+0x183>
			1546b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1546f:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15473:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   15477:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
   1547b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15481:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15484: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15488:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   1548f:	48 01 d9             	add    %rbx,%rcx
   15492:	48 ff c3             	inc    %rbx
   15495:	e8 00 00 00 00       	callq  1549a <dev_open+0x1ae>
			15496: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1549a:	48 83 fb 20          	cmp    $0x20,%rbx
   1549e:	75 cf                	jne    1546f <dev_open+0x183>
   154a0:	30 db                	xor    %bl,%bl
   154a2:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   154a6:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   154aa:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   154ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   154b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			154b7: R_X86_64_32S	.rodata.str1.1+0x1fd2
   154bb:	4c 89 e2             	mov    %r12,%rdx
   154be:	4c 89 ee             	mov    %r13,%rsi
   154c1:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   154c8:	48 01 d9             	add    %rbx,%rcx
   154cb:	48 ff c3             	inc    %rbx
   154ce:	e8 00 00 00 00       	callq  154d3 <dev_open+0x1e7>
			154cf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   154d3:	48 83 fb 20          	cmp    $0x20,%rbx
   154d7:	75 c9                	jne    154a2 <dev_open+0x1b6>
   154d9:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   154dd:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   154e3:	4c 89 e2             	mov    %r12,%rdx
   154e6:	4c 89 ee             	mov    %r13,%rsi
   154e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			154ec: R_X86_64_32S	.rodata.str1.1+0x1fd2
   154f0:	30 db                	xor    %bl,%bl
   154f2:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   154f9:	e8 00 00 00 00       	callq  154fe <dev_open+0x212>
			154fa: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   154fe:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15502:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   15508:	4c 89 e2             	mov    %r12,%rdx
   1550b:	4c 89 ee             	mov    %r13,%rsi
   1550e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15511: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15515:	48 83 c1 48          	add    $0x48,%rcx
   15519:	e8 00 00 00 00       	callq  1551e <dev_open+0x232>
			1551a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1551e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15522:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   15526:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
   1552a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15530:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15533: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15537:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   1553e:	48 01 d9             	add    %rbx,%rcx
   15541:	48 ff c3             	inc    %rbx
   15544:	e8 00 00 00 00       	callq  15549 <dev_open+0x25d>
			15545: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15549:	48 83 fb 20          	cmp    $0x20,%rbx
   1554d:	75 cf                	jne    1551e <dev_open+0x232>
   1554f:	30 db                	xor    %bl,%bl
   15551:	48 89 d9             	mov    %rbx,%rcx
   15554:	48 03 4d d0          	add    0xffffffffffffffd0(%rbp),%rcx
   15558:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   1555c:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   15560:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15566:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15569: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1556d:	4c 89 e2             	mov    %r12,%rdx
   15570:	48 ff c3             	inc    %rbx
   15573:	4c 89 ee             	mov    %r13,%rsi
   15576:	e8 00 00 00 00       	callq  1557b <dev_open+0x28f>
			15577: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1557b:	48 83 fb 10          	cmp    $0x10,%rbx
   1557f:	75 d0                	jne    15551 <dev_open+0x265>
   15581:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15585:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1558b:	4c 89 e2             	mov    %r12,%rdx
   1558e:	4c 89 ee             	mov    %r13,%rsi
   15591:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15594: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15598:	30 db                	xor    %bl,%bl
   1559a:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   155a1:	e8 00 00 00 00       	callq  155a6 <dev_open+0x2ba>
			155a2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   155a6:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   155aa:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   155b0:	4c 89 e2             	mov    %r12,%rdx
   155b3:	4c 89 ee             	mov    %r13,%rsi
   155b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			155b9: R_X86_64_32S	.rodata.str1.1+0x1fd2
   155bd:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   155c4:	e8 00 00 00 00       	callq  155c9 <dev_open+0x2dd>
			155c5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   155c9:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   155cd:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   155d1:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   155d5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   155db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			155de: R_X86_64_32S	.rodata.str1.1+0x1fd2
   155e2:	4c 89 e2             	mov    %r12,%rdx
   155e5:	4c 89 ee             	mov    %r13,%rsi
   155e8:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
   155ef:	48 01 d9             	add    %rbx,%rcx
   155f2:	48 ff c3             	inc    %rbx
   155f5:	e8 00 00 00 00       	callq  155fa <dev_open+0x30e>
			155f6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   155fa:	48 83 fb 14          	cmp    $0x14,%rbx
   155fe:	75 c9                	jne    155c9 <dev_open+0x2dd>
   15600:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15604:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
   15608:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1560e:	4c 89 e2             	mov    %r12,%rdx
   15611:	4c 89 ee             	mov    %r13,%rsi
   15614:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15617: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1561b:	48 89 d9             	mov    %rbx,%rcx
   1561e:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   15624:	83 e0 01             	and    $0x1,%eax
   15627:	0f b6 c0             	movzbl %al,%eax
   1562a:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
   1562d:	e8 00 00 00 00       	callq  15632 <dev_open+0x346>
			1562e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15632:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15636:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1563c:	48 89 d9             	mov    %rbx,%rcx
   1563f:	4c 89 e2             	mov    %r12,%rdx
   15642:	4c 89 ee             	mov    %r13,%rsi
   15645:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15648: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1564c:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   15652:	d0 e8                	shr    %al
   15654:	83 e0 01             	and    $0x1,%eax
   15657:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
   1565a:	e8 00 00 00 00       	callq  1565f <dev_open+0x373>
			1565b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1565f:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15663:	4c 89 e2             	mov    %r12,%rdx
   15666:	4c 89 ee             	mov    %r13,%rsi
   15669:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1566c: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15670:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   15677:	e8 00 00 00 00       	callq  1567c <dev_open+0x390>
			15678: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1567c:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15680:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   15687:	48 85 c0             	test   %rax,%rax
   1568a:	0f 84 bb 00 00 00    	je     1574b <dev_open+0x45f>
   15690:	48 8d 48 18          	lea    0x18(%rax),%rcx
   15694:	4c 89 e2             	mov    %r12,%rdx
   15697:	4c 89 ee             	mov    %r13,%rsi
   1569a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1569d: R_X86_64_32S	.rodata.str1.1+0x1fd2
   156a1:	e8 00 00 00 00       	callq  156a6 <dev_open+0x3ba>
			156a2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   156a6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   156aa:	4c 89 e2             	mov    %r12,%rdx
   156ad:	4c 89 ee             	mov    %r13,%rsi
   156b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			156b3: R_X86_64_32S	.rodata.str1.1+0x1fd2
   156b7:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   156be:	48 83 c1 20          	add    $0x20,%rcx
   156c2:	e8 00 00 00 00       	callq  156c7 <dev_open+0x3db>
			156c3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   156c7:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   156cb:	4c 89 e2             	mov    %r12,%rdx
   156ce:	4c 89 ee             	mov    %r13,%rsi
   156d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			156d4: R_X86_64_32S	.rodata.str1.1+0x1fd2
   156d8:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   156df:	48 83 c1 30          	add    $0x30,%rcx
   156e3:	e8 00 00 00 00       	callq  156e8 <dev_open+0x3fc>
			156e4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   156e8:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   156ec:	4c 89 e2             	mov    %r12,%rdx
   156ef:	4c 89 ee             	mov    %r13,%rsi
   156f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			156f5: R_X86_64_32S	.rodata.str1.1+0x1fd2
   156f9:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15700:	48 83 c1 10          	add    $0x10,%rcx
   15704:	e8 00 00 00 00       	callq  15709 <dev_open+0x41d>
			15705: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15709:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1570d:	4c 89 e2             	mov    %r12,%rdx
   15710:	4c 89 ee             	mov    %r13,%rsi
   15713:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15716: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1571a:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15721:	48 83 c1 28          	add    $0x28,%rcx
   15725:	e8 00 00 00 00       	callq  1572a <dev_open+0x43e>
			15726: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1572a:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1572e:	4c 89 e2             	mov    %r12,%rdx
   15731:	4c 89 ee             	mov    %r13,%rsi
   15734:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15737: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1573b:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15742:	48 83 c1 08          	add    $0x8,%rcx
   15746:	e8 00 00 00 00       	callq  1574b <dev_open+0x45f>
			15747: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1574b:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1574f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   15755:	4c 89 e2             	mov    %r12,%rdx
   15758:	4c 89 ee             	mov    %r13,%rsi
   1575b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1575e: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15762:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
   15769:	e8 00 00 00 00       	callq  1576e <dev_open+0x482>
			1576a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1576e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15772:	4c 89 e2             	mov    %r12,%rdx
   15775:	4c 89 ee             	mov    %r13,%rsi
   15778:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1577b: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1577f:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   15786:	e8 00 00 00 00       	callq  1578b <dev_open+0x49f>
			15787: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1578b:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1578f:	4c 89 e2             	mov    %r12,%rdx
   15792:	4c 89 ee             	mov    %r13,%rsi
   15795:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15798: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1579c:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   157a3:	e8 00 00 00 00       	callq  157a8 <dev_open+0x4bc>
			157a4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   157a8:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   157ac:	4c 89 e2             	mov    %r12,%rdx
   157af:	4c 89 ee             	mov    %r13,%rsi
   157b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			157b5: R_X86_64_32S	.rodata.str1.1+0x1fd2
   157b9:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   157c0:	e8 00 00 00 00       	callq  157c5 <dev_open+0x4d9>
			157c1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   157c5:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   157c9:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
   157d0:	48 85 c9             	test   %rcx,%rcx
   157d3:	74 18                	je     157ed <dev_open+0x501>
   157d5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   157db:	4c 89 e2             	mov    %r12,%rdx
   157de:	4c 89 ee             	mov    %r13,%rsi
   157e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			157e4: R_X86_64_32S	.rodata.str1.1+0x1fd2
   157e8:	e8 00 00 00 00       	callq  157ed <dev_open+0x501>
			157e9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   157ed:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   157f1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   157f7:	4c 89 e2             	mov    %r12,%rdx
   157fa:	4c 89 ee             	mov    %r13,%rsi
   157fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15800: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15804:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   1580b:	e8 00 00 00 00       	callq  15810 <dev_open+0x524>
			1580c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15810:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15814:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1581a:	4c 89 e2             	mov    %r12,%rdx
   1581d:	4c 89 ee             	mov    %r13,%rsi
   15820:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15823: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15827:	48 83 c1 70          	add    $0x70,%rcx
   1582b:	e8 00 00 00 00       	callq  15830 <dev_open+0x544>
			1582c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15830:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15834:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1583a:	4c 89 e2             	mov    %r12,%rdx
   1583d:	4c 89 ee             	mov    %r13,%rsi
   15840:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15843: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15847:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   1584e:	e8 00 00 00 00       	callq  15853 <dev_open+0x567>
			1584f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15853:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15857:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1585d:	4c 89 e2             	mov    %r12,%rdx
   15860:	4c 89 ee             	mov    %r13,%rsi
   15863:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15866: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1586a:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   15871:	e8 00 00 00 00       	callq  15876 <dev_open+0x58a>
			15872: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15876:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1587a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   15880:	4c 89 e2             	mov    %r12,%rdx
   15883:	4c 89 ee             	mov    %r13,%rsi
   15886:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15889: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1588d:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   15894:	e8 00 00 00 00       	callq  15899 <dev_open+0x5ad>
			15895: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15899:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1589d:	4c 89 e2             	mov    %r12,%rdx
   158a0:	4c 89 ee             	mov    %r13,%rsi
   158a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			158a6: R_X86_64_32S	.rodata.str1.1+0x1fd2
   158aa:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   158b1:	e8 00 00 00 00       	callq  158b6 <dev_open+0x5ca>
			158b2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   158b6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   158ba:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   158c1:	00 
   158c2:	74 5a                	je     1591e <dev_open+0x632>
   158c4:	31 db                	xor    %ebx,%ebx
   158c6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   158ca:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   158ce:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   158d2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   158d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			158db: R_X86_64_32S	.rodata.str1.1+0x1fd2
   158df:	4c 89 e2             	mov    %r12,%rdx
   158e2:	4c 89 ee             	mov    %r13,%rsi
   158e5:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   158ec:	48 83 c1 08          	add    $0x8,%rcx
   158f0:	48 01 d9             	add    %rbx,%rcx
   158f3:	48 ff c3             	inc    %rbx
   158f6:	e8 00 00 00 00       	callq  158fb <dev_open+0x60f>
			158f7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   158fb:	48 83 fb 20          	cmp    $0x20,%rbx
   158ff:	75 c5                	jne    158c6 <dev_open+0x5da>
   15901:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15905:	4c 89 e2             	mov    %r12,%rdx
   15908:	4c 89 ee             	mov    %r13,%rsi
   1590b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1590e: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15912:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   15919:	e8 00 00 00 00       	callq  1591e <dev_open+0x632>
			1591a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1591e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15922:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   15926:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   1592a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1592d: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15931:	48 89 da             	mov    %rbx,%rdx
   15934:	4c 89 e6             	mov    %r12,%rsi
   15937:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1593e:	e8 00 00 00 00       	callq  15943 <dev_open+0x657>
			1593f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15943:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15947:	48 89 da             	mov    %rbx,%rdx
   1594a:	4c 89 e6             	mov    %r12,%rsi
   1594d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15950: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15954:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1595b:	e8 00 00 00 00       	callq  15960 <dev_open+0x674>
			1595c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15960:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15964:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   1596b:	48 85 c0             	test   %rax,%rax
   1596e:	74 37                	je     159a7 <dev_open+0x6bb>
   15970:	48 8d 48 60          	lea    0x60(%rax),%rcx
   15974:	48 89 da             	mov    %rbx,%rdx
   15977:	4c 89 e6             	mov    %r12,%rsi
   1597a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1597d: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15981:	e8 00 00 00 00       	callq  15986 <dev_open+0x69a>
			15982: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15986:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1598a:	48 89 da             	mov    %rbx,%rdx
   1598d:	4c 89 e6             	mov    %r12,%rsi
   15990:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15993: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15997:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1599e:	48 83 c1 58          	add    $0x58,%rcx
   159a2:	e8 00 00 00 00       	callq  159a7 <dev_open+0x6bb>
			159a3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   159a7:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   159ab:	48 89 da             	mov    %rbx,%rdx
   159ae:	4c 89 e6             	mov    %r12,%rsi
   159b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			159b4: R_X86_64_32S	.rodata.str1.1+0x1fd2
   159b8:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   159bf:	e8 00 00 00 00       	callq  159c4 <dev_open+0x6d8>
			159c0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   159c4:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   159c8:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   159cf:	48 85 c0             	test   %rax,%rax
   159d2:	74 3d                	je     15a11 <dev_open+0x725>
   159d4:	48 8d 48 10          	lea    0x10(%rax),%rcx
   159d8:	48 89 da             	mov    %rbx,%rdx
   159db:	4c 89 e6             	mov    %r12,%rsi
   159de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			159e1: R_X86_64_32S	.rodata.str1.1+0x1fd2
   159e5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   159eb:	e8 00 00 00 00       	callq  159f0 <dev_open+0x704>
			159ec: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   159f0:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   159f4:	48 89 da             	mov    %rbx,%rdx
   159f7:	4c 89 e6             	mov    %r12,%rsi
   159fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			159fd: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15a01:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   15a08:	48 83 c1 08          	add    $0x8,%rcx
   15a0c:	e8 00 00 00 00       	callq  15a11 <dev_open+0x725>
			15a0d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15a11:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   15a15:	48 89 da             	mov    %rbx,%rdx
   15a18:	4c 89 e6             	mov    %r12,%rsi
   15a1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15a1e: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15a22:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   15a29:	e8 00 00 00 00       	callq  15a2e <dev_open+0x742>
			15a2a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15a2e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15a32:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   15a39:	00 
   15a3a:	74 5a                	je     15a96 <dev_open+0x7aa>
   15a3c:	31 db                	xor    %ebx,%ebx
   15a3e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15a42:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   15a46:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   15a4a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15a50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15a53: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15a57:	4c 89 e2             	mov    %r12,%rdx
   15a5a:	4c 89 ee             	mov    %r13,%rsi
   15a5d:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   15a64:	48 83 c1 08          	add    $0x8,%rcx
   15a68:	48 01 d9             	add    %rbx,%rcx
   15a6b:	48 ff c3             	inc    %rbx
   15a6e:	e8 00 00 00 00       	callq  15a73 <dev_open+0x787>
			15a6f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   15a73:	48 83 fb 20          	cmp    $0x20,%rbx
   15a77:	75 c5                	jne    15a3e <dev_open+0x752>
   15a79:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   15a7d:	4c 89 e2             	mov    %r12,%rdx
   15a80:	4c 89 ee             	mov    %r13,%rsi
   15a83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15a86: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15a8a:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   15a91:	e8 00 00 00 00       	callq  15a96 <dev_open+0x7aa>
			15a92: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   15a96:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15a9a:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   15a9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15aa1: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15aa5:	48 c7 45 b0 7d 04 00 	movq   $0x47d,0xffffffffffffffb0(%rbp)
   15aac:	00 
   15aad:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   15ab1:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   15ab5:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
   15ab8:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
   15abb:	e8 00 00 00 00       	callq  15ac0 <dev_open+0x7d4>
			15abc: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   15ac0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15ac3: R_X86_64_32S	.rodata.str1.1+0x1ff2
   15ac7:	4c 89 75 c8          	mov    %r14,0xffffffffffffffc8(%rbp)
   15acb:	e8 00 00 00 00       	callq  15ad0 <dev_open+0x7e4>
			15acc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   15ad0:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
   15ad4:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   15ad8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15adb: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15adf:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   15ae5:	48 89 da             	mov    %rbx,%rdx
   15ae8:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   15aef:	4c 89 e6             	mov    %r12,%rsi
   15af2:	e8 00 00 00 00       	callq  15af7 <dev_open+0x80b>
			15af3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15af7:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   15afb:	48 85 ff             	test   %rdi,%rdi
   15afe:	0f 84 db 07 00 00    	je     162df <dev_open+0xff3>
   15b04:	ba 08 00 00 00       	mov    $0x8,%edx
   15b09:	be 10 03 00 00       	mov    $0x310,%esi
   15b0e:	e8 00 00 00 00       	callq  15b13 <dev_open+0x827>
			15b0f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   15b13:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15b17:	48 89 da             	mov    %rbx,%rdx
   15b1a:	b9 08 00 00 00       	mov    $0x8,%ecx
   15b1f:	4c 89 e6             	mov    %r12,%rsi
   15b22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15b25: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15b29:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   15b30:	e8 00 00 00 00       	callq  15b35 <dev_open+0x849>
			15b31: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15b35:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15b39:	48 89 da             	mov    %rbx,%rdx
   15b3c:	b9 02 00 00 00       	mov    $0x2,%ecx
   15b41:	4c 89 e6             	mov    %r12,%rsi
   15b44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15b47: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15b4b:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   15b52:	e8 00 00 00 00       	callq  15b57 <dev_open+0x86b>
			15b53: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15b57:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15b5b:	48 89 da             	mov    %rbx,%rdx
   15b5e:	b9 08 00 00 00       	mov    $0x8,%ecx
   15b63:	4c 89 e6             	mov    %r12,%rsi
   15b66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15b69: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15b6d:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   15b74:	e8 00 00 00 00       	callq  15b79 <dev_open+0x88d>
			15b75: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15b79:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15b7d:	48 89 da             	mov    %rbx,%rdx
   15b80:	b9 04 00 00 00       	mov    $0x4,%ecx
   15b85:	4c 89 e6             	mov    %r12,%rsi
   15b88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15b8b: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15b8f:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   15b96:	e8 00 00 00 00       	callq  15b9b <dev_open+0x8af>
			15b97: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15b9b:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15b9f:	48 89 da             	mov    %rbx,%rdx
   15ba2:	b9 04 00 00 00       	mov    $0x4,%ecx
   15ba7:	4c 89 e6             	mov    %r12,%rsi
   15baa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15bad: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15bb1:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   15bb8:	e8 00 00 00 00       	callq  15bbd <dev_open+0x8d1>
			15bb9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15bbd:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15bc1:	48 89 da             	mov    %rbx,%rdx
   15bc4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15bca:	4c 89 e6             	mov    %r12,%rsi
   15bcd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15bd0: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15bd4:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   15bdb:	e8 00 00 00 00       	callq  15be0 <dev_open+0x8f4>
			15bdc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15be0:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15be4:	48 89 da             	mov    %rbx,%rdx
   15be7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15bed:	4c 89 e6             	mov    %r12,%rsi
   15bf0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15bf3: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15bf7:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   15bfe:	e8 00 00 00 00       	callq  15c03 <dev_open+0x917>
			15bff: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15c03:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15c07:	48 89 da             	mov    %rbx,%rdx
   15c0a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15c10:	4c 89 e6             	mov    %r12,%rsi
   15c13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15c16: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15c1a:	31 db                	xor    %ebx,%ebx
   15c1c:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   15c23:	e8 00 00 00 00       	callq  15c28 <dev_open+0x93c>
			15c24: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15c28:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15c2c:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   15c30:	b9 01 00 00 00       	mov    $0x1,%ecx
   15c35:	4c 89 e6             	mov    %r12,%rsi
   15c38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15c3b: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15c3f:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   15c46:	49 01 d8             	add    %rbx,%r8
   15c49:	48 ff c3             	inc    %rbx
   15c4c:	e8 00 00 00 00       	callq  15c51 <dev_open+0x965>
			15c4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15c51:	48 83 fb 20          	cmp    $0x20,%rbx
   15c55:	75 d1                	jne    15c28 <dev_open+0x93c>
   15c57:	30 db                	xor    %bl,%bl
   15c59:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15c5d:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   15c61:	b9 01 00 00 00       	mov    $0x1,%ecx
   15c66:	4c 89 e6             	mov    %r12,%rsi
   15c69:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15c6c: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15c70:	4c 89 ea             	mov    %r13,%rdx
   15c73:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   15c7a:	49 01 d8             	add    %rbx,%r8
   15c7d:	48 ff c3             	inc    %rbx
   15c80:	e8 00 00 00 00       	callq  15c85 <dev_open+0x999>
			15c81: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15c85:	48 83 fb 20          	cmp    $0x20,%rbx
   15c89:	75 ce                	jne    15c59 <dev_open+0x96d>
   15c8b:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15c8f:	b9 02 00 00 00       	mov    $0x2,%ecx
   15c94:	4c 89 ea             	mov    %r13,%rdx
   15c97:	4c 89 e6             	mov    %r12,%rsi
   15c9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15c9d: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15ca1:	30 db                	xor    %bl,%bl
   15ca3:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   15caa:	e8 00 00 00 00       	callq  15caf <dev_open+0x9c3>
			15cab: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15caf:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   15cb3:	ba 08 00 00 00       	mov    $0x8,%edx
   15cb8:	be 48 00 00 00       	mov    $0x48,%esi
   15cbd:	e8 00 00 00 00       	callq  15cc2 <dev_open+0x9d6>
			15cbe: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   15cc2:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15cc6:	b9 08 00 00 00       	mov    $0x8,%ecx
   15ccb:	4c 89 ea             	mov    %r13,%rdx
   15cce:	4c 89 e6             	mov    %r12,%rsi
   15cd1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15cd4: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15cd8:	49 83 c0 48          	add    $0x48,%r8
   15cdc:	e8 00 00 00 00       	callq  15ce1 <dev_open+0x9f5>
			15cdd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15ce1:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15ce5:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   15ce9:	b9 01 00 00 00       	mov    $0x1,%ecx
   15cee:	4c 89 e6             	mov    %r12,%rsi
   15cf1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15cf4: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15cf8:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   15cff:	49 01 d8             	add    %rbx,%r8
   15d02:	48 ff c3             	inc    %rbx
   15d05:	e8 00 00 00 00       	callq  15d0a <dev_open+0xa1e>
			15d06: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15d0a:	48 83 fb 20          	cmp    $0x20,%rbx
   15d0e:	75 d1                	jne    15ce1 <dev_open+0x9f5>
   15d10:	30 db                	xor    %bl,%bl
   15d12:	49 89 d8             	mov    %rbx,%r8
   15d15:	4c 03 45 c8          	add    0xffffffffffffffc8(%rbp),%r8
   15d19:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   15d1d:	b9 01 00 00 00       	mov    $0x1,%ecx
   15d22:	4c 89 e6             	mov    %r12,%rsi
   15d25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15d28: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15d2c:	4c 89 ea             	mov    %r13,%rdx
   15d2f:	48 ff c3             	inc    %rbx
   15d32:	e8 00 00 00 00       	callq  15d37 <dev_open+0xa4b>
			15d33: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15d37:	48 83 fb 10          	cmp    $0x10,%rbx
   15d3b:	75 d5                	jne    15d12 <dev_open+0xa26>
   15d3d:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   15d41:	ba 10 00 00 00       	mov    $0x10,%edx
   15d46:	be 18 04 00 00       	mov    $0x418,%esi
   15d4b:	30 db                	xor    %bl,%bl
   15d4d:	e8 00 00 00 00       	callq  15d52 <dev_open+0xa66>
			15d4e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   15d52:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15d56:	b9 01 00 00 00       	mov    $0x1,%ecx
   15d5b:	4c 89 ea             	mov    %r13,%rdx
   15d5e:	4c 89 e6             	mov    %r12,%rsi
   15d61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15d64: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15d68:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   15d6f:	e8 00 00 00 00       	callq  15d74 <dev_open+0xa88>
			15d70: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15d74:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15d78:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   15d7c:	b9 01 00 00 00       	mov    $0x1,%ecx
   15d81:	4c 89 e6             	mov    %r12,%rsi
   15d84:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15d87: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15d8b:	4c 89 ea             	mov    %r13,%rdx
   15d8e:	49 81 c0 60 05 00 00 	add    $0x560,%r8
   15d95:	49 01 d8             	add    %rbx,%r8
   15d98:	48 ff c3             	inc    %rbx
   15d9b:	e8 00 00 00 00       	callq  15da0 <dev_open+0xab4>
			15d9c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15da0:	48 83 fb 14          	cmp    $0x14,%rbx
   15da4:	75 ce                	jne    15d74 <dev_open+0xa88>
   15da6:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   15daa:	b9 04 00 00 00       	mov    $0x4,%ecx
   15daf:	4c 89 ea             	mov    %r13,%rdx
   15db2:	4c 89 e6             	mov    %r12,%rsi
   15db5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15db8: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15dbc:	49 89 d8             	mov    %rbx,%r8
   15dbf:	e8 00 00 00 00       	callq  15dc4 <dev_open+0xad8>
			15dc0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15dc4:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15dc8:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   15dcb:	49 89 d8             	mov    %rbx,%r8
   15dce:	4c 89 e6             	mov    %r12,%rsi
   15dd1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15dd4: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15dd8:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   15dde:	83 e2 01             	and    $0x1,%edx
   15de1:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   15de4:	09 d0                	or     %edx,%eax
   15de6:	4c 89 ea             	mov    %r13,%rdx
   15de9:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   15def:	b9 04 00 00 00       	mov    $0x4,%ecx
   15df4:	e8 00 00 00 00       	callq  15df9 <dev_open+0xb0d>
			15df5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15df9:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15dfd:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   15e00:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   15e06:	4c 89 e6             	mov    %r12,%rsi
   15e09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15e0c: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15e10:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   15e16:	83 e2 01             	and    $0x1,%edx
   15e19:	01 d2                	add    %edx,%edx
   15e1b:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   15e1e:	09 d0                	or     %edx,%eax
   15e20:	4c 89 ea             	mov    %r13,%rdx
   15e23:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   15e29:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15e2d:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   15e34:	e8 00 00 00 00       	callq  15e39 <dev_open+0xb4d>
			15e35: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15e39:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15e3d:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   15e44:	48 85 c0             	test   %rax,%rax
   15e47:	0f 84 df 00 00 00    	je     15f2c <dev_open+0xc40>
   15e4d:	48 8d 48 18          	lea    0x18(%rax),%rcx
   15e51:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15e57:	4c 89 ea             	mov    %r13,%rdx
   15e5a:	4c 89 e6             	mov    %r12,%rsi
   15e5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15e60: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15e64:	e8 00 00 00 00       	callq  15e69 <dev_open+0xb7d>
			15e65: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15e69:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15e6d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15e73:	4c 89 ea             	mov    %r13,%rdx
   15e76:	4c 89 e6             	mov    %r12,%rsi
   15e79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15e7c: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15e80:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15e87:	48 83 c1 20          	add    $0x20,%rcx
   15e8b:	e8 00 00 00 00       	callq  15e90 <dev_open+0xba4>
			15e8c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15e90:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15e94:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15e9a:	4c 89 ea             	mov    %r13,%rdx
   15e9d:	4c 89 e6             	mov    %r12,%rsi
   15ea0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15ea3: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15ea7:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15eae:	48 83 c1 30          	add    $0x30,%rcx
   15eb2:	e8 00 00 00 00       	callq  15eb7 <dev_open+0xbcb>
			15eb3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15eb7:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15ebb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15ec1:	4c 89 ea             	mov    %r13,%rdx
   15ec4:	4c 89 e6             	mov    %r12,%rsi
   15ec7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15eca: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15ece:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15ed5:	48 83 c1 10          	add    $0x10,%rcx
   15ed9:	e8 00 00 00 00       	callq  15ede <dev_open+0xbf2>
			15eda: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15ede:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15ee2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15ee8:	4c 89 ea             	mov    %r13,%rdx
   15eeb:	4c 89 e6             	mov    %r12,%rsi
   15eee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15ef1: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15ef5:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15efc:	48 83 c1 28          	add    $0x28,%rcx
   15f00:	e8 00 00 00 00       	callq  15f05 <dev_open+0xc19>
			15f01: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15f05:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15f09:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   15f0f:	4c 89 ea             	mov    %r13,%rdx
   15f12:	4c 89 e6             	mov    %r12,%rsi
   15f15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15f18: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15f1c:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   15f23:	48 83 c1 08          	add    $0x8,%rcx
   15f27:	e8 00 00 00 00       	callq  15f2c <dev_open+0xc40>
			15f28: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15f2c:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15f30:	b9 08 00 00 00       	mov    $0x8,%ecx
   15f35:	4c 89 ea             	mov    %r13,%rdx
   15f38:	4c 89 e6             	mov    %r12,%rsi
   15f3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15f3e: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15f42:	49 81 c0 20 06 00 00 	add    $0x620,%r8
   15f49:	e8 00 00 00 00       	callq  15f4e <dev_open+0xc62>
			15f4a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15f4e:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15f52:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   15f58:	4c 89 ea             	mov    %r13,%rdx
   15f5b:	4c 89 e6             	mov    %r12,%rsi
   15f5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15f61: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15f65:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   15f6c:	e8 00 00 00 00       	callq  15f71 <dev_open+0xc85>
			15f6d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15f71:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15f75:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   15f7b:	4c 89 ea             	mov    %r13,%rdx
   15f7e:	4c 89 e6             	mov    %r12,%rsi
   15f81:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15f84: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15f88:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   15f8f:	e8 00 00 00 00       	callq  15f94 <dev_open+0xca8>
			15f90: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15f94:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   15f98:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   15f9e:	4c 89 ea             	mov    %r13,%rdx
   15fa1:	4c 89 e6             	mov    %r12,%rsi
   15fa4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15fa7: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15fab:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   15fb2:	e8 00 00 00 00       	callq  15fb7 <dev_open+0xccb>
			15fb3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   15fb7:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   15fbb:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
   15fc2:	48 85 c0             	test   %rax,%rax
   15fc5:	74 1a                	je     15fe1 <dev_open+0xcf5>
   15fc7:	49 89 c0             	mov    %rax,%r8
   15fca:	b9 08 00 00 00       	mov    $0x8,%ecx
   15fcf:	4c 89 ea             	mov    %r13,%rdx
   15fd2:	4c 89 e6             	mov    %r12,%rsi
   15fd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15fd8: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15fdc:	e8 00 00 00 00       	callq  15fe1 <dev_open+0xcf5>
			15fdd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   15fe1:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   15fe5:	b9 04 00 00 00       	mov    $0x4,%ecx
   15fea:	4c 89 ea             	mov    %r13,%rdx
   15fed:	4c 89 e6             	mov    %r12,%rsi
   15ff0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15ff3: R_X86_64_32S	.rodata.str1.1+0x1fd2
   15ff7:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   15ffe:	e8 00 00 00 00       	callq  16003 <dev_open+0xd17>
			15fff: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16003:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16007:	b9 08 00 00 00       	mov    $0x8,%ecx
   1600c:	4c 89 ea             	mov    %r13,%rdx
   1600f:	4c 89 e6             	mov    %r12,%rsi
   16012:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16015: R_X86_64_32S	.rodata.str1.1+0x1fd2
   16019:	49 83 c0 70          	add    $0x70,%r8
   1601d:	e8 00 00 00 00       	callq  16022 <dev_open+0xd36>
			1601e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16022:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   16026:	ba 10 00 00 00       	mov    $0x10,%edx
   1602b:	be 10 00 00 00       	mov    $0x10,%esi
   16030:	e8 00 00 00 00       	callq  16035 <dev_open+0xd49>
			16031: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   16035:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16039:	b9 04 00 00 00       	mov    $0x4,%ecx
   1603e:	4c 89 ea             	mov    %r13,%rdx
   16041:	4c 89 e6             	mov    %r12,%rsi
   16044:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16047: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1604b:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   16052:	e8 00 00 00 00       	callq  16057 <dev_open+0xd6b>
			16053: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16057:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1605b:	b9 08 00 00 00       	mov    $0x8,%ecx
   16060:	4c 89 ea             	mov    %r13,%rdx
   16063:	4c 89 e6             	mov    %r12,%rsi
   16066:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16069: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1606d:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   16074:	e8 00 00 00 00       	callq  16079 <dev_open+0xd8d>
			16075: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16079:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1607d:	b9 04 00 00 00       	mov    $0x4,%ecx
   16082:	4c 89 ea             	mov    %r13,%rdx
   16085:	4c 89 e6             	mov    %r12,%rsi
   16088:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1608b: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1608f:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   16096:	e8 00 00 00 00       	callq  1609b <dev_open+0xdaf>
			16097: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1609b:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1609f:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   160a5:	4c 89 ea             	mov    %r13,%rdx
   160a8:	4c 89 e6             	mov    %r12,%rsi
   160ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			160ae: R_X86_64_32S	.rodata.str1.1+0x1fd2
   160b2:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   160b9:	e8 00 00 00 00       	callq  160be <dev_open+0xdd2>
			160ba: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   160be:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   160c2:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   160c9:	00 
   160ca:	74 5b                	je     16127 <dev_open+0xe3b>
   160cc:	31 db                	xor    %ebx,%ebx
   160ce:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   160d2:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   160d6:	b9 01 00 00 00       	mov    $0x1,%ecx
   160db:	4c 89 e6             	mov    %r12,%rsi
   160de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			160e1: R_X86_64_32S	.rodata.str1.1+0x1fd2
   160e5:	4c 89 ea             	mov    %r13,%rdx
   160e8:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   160ef:	49 83 c0 08          	add    $0x8,%r8
   160f3:	49 01 d8             	add    %rbx,%r8
   160f6:	48 ff c3             	inc    %rbx
   160f9:	e8 00 00 00 00       	callq  160fe <dev_open+0xe12>
			160fa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   160fe:	48 83 fb 20          	cmp    $0x20,%rbx
   16102:	75 ca                	jne    160ce <dev_open+0xde2>
   16104:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   16108:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1610e:	4c 89 ea             	mov    %r13,%rdx
   16111:	4c 89 e6             	mov    %r12,%rsi
   16114:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16117: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1611b:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   16122:	e8 00 00 00 00       	callq  16127 <dev_open+0xe3b>
			16123: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16127:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1612b:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   1612f:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   16135:	4c 89 e6             	mov    %r12,%rsi
   16138:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1613b: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1613f:	48 89 da             	mov    %rbx,%rdx
   16142:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   16149:	e8 00 00 00 00       	callq  1614e <dev_open+0xe62>
			1614a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1614e:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16152:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   16158:	48 89 da             	mov    %rbx,%rdx
   1615b:	4c 89 e6             	mov    %r12,%rsi
   1615e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16161: R_X86_64_32S	.rodata.str1.1+0x1fd2
   16165:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1616c:	e8 00 00 00 00       	callq  16171 <dev_open+0xe85>
			1616d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16171:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   16175:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   1617c:	48 85 c0             	test   %rax,%rax
   1617f:	74 43                	je     161c4 <dev_open+0xed8>
   16181:	48 8d 48 60          	lea    0x60(%rax),%rcx
   16185:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1618b:	48 89 da             	mov    %rbx,%rdx
   1618e:	4c 89 e6             	mov    %r12,%rsi
   16191:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16194: R_X86_64_32S	.rodata.str1.1+0x1fd2
   16198:	e8 00 00 00 00       	callq  1619d <dev_open+0xeb1>
			16199: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1619d:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   161a1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   161a7:	48 89 da             	mov    %rbx,%rdx
   161aa:	4c 89 e6             	mov    %r12,%rsi
   161ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			161b0: R_X86_64_32S	.rodata.str1.1+0x1fd2
   161b4:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   161bb:	48 83 c1 58          	add    $0x58,%rcx
   161bf:	e8 00 00 00 00       	callq  161c4 <dev_open+0xed8>
			161c0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   161c4:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   161c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			161cb: R_X86_64_32S	.rodata.str1.1+0x1fd2
   161cf:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   161d5:	48 89 da             	mov    %rbx,%rdx
   161d8:	4c 89 e6             	mov    %r12,%rsi
   161db:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   161e2:	e8 00 00 00 00       	callq  161e7 <dev_open+0xefb>
			161e3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   161e7:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   161eb:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   161f2:	48 85 ff             	test   %rdi,%rdi
   161f5:	74 5c                	je     16253 <dev_open+0xf67>
   161f7:	ba 08 00 00 00       	mov    $0x8,%edx
   161fc:	be 10 00 00 00       	mov    $0x10,%esi
   16201:	e8 00 00 00 00       	callq  16206 <dev_open+0xf1a>
			16202: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   16206:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1620a:	b9 08 00 00 00       	mov    $0x8,%ecx
   1620f:	48 89 da             	mov    %rbx,%rdx
   16212:	4c 89 e6             	mov    %r12,%rsi
   16215:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16218: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1621c:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   16223:	49 83 c0 10          	add    $0x10,%r8
   16227:	e8 00 00 00 00       	callq  1622c <dev_open+0xf40>
			16228: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1622c:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   16230:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   16236:	48 89 da             	mov    %rbx,%rdx
   16239:	4c 89 e6             	mov    %r12,%rsi
   1623c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1623f: R_X86_64_32S	.rodata.str1.1+0x1fd2
   16243:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   1624a:	48 83 c1 08          	add    $0x8,%rcx
   1624e:	e8 00 00 00 00       	callq  16253 <dev_open+0xf67>
			1624f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16253:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16257:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1625d:	48 89 da             	mov    %rbx,%rdx
   16260:	4c 89 e6             	mov    %r12,%rsi
   16263:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16266: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1626a:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   16271:	e8 00 00 00 00       	callq  16276 <dev_open+0xf8a>
			16272: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16276:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1627a:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   16281:	00 
   16282:	74 5b                	je     162df <dev_open+0xff3>
   16284:	31 db                	xor    %ebx,%ebx
   16286:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1628a:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   1628e:	b9 01 00 00 00       	mov    $0x1,%ecx
   16293:	4c 89 e6             	mov    %r12,%rsi
   16296:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16299: R_X86_64_32S	.rodata.str1.1+0x1fd2
   1629d:	4c 89 ea             	mov    %r13,%rdx
   162a0:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   162a7:	49 83 c0 08          	add    $0x8,%r8
   162ab:	49 01 d8             	add    %rbx,%r8
   162ae:	48 ff c3             	inc    %rbx
   162b1:	e8 00 00 00 00       	callq  162b6 <dev_open+0xfca>
			162b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   162b6:	48 83 fb 20          	cmp    $0x20,%rbx
   162ba:	75 ca                	jne    16286 <dev_open+0xf9a>
   162bc:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   162c0:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   162c6:	4c 89 ea             	mov    %r13,%rdx
   162c9:	4c 89 e6             	mov    %r12,%rsi
   162cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			162cf: R_X86_64_32S	.rodata.str1.1+0x1fd2
   162d3:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   162da:	e8 00 00 00 00       	callq  162df <dev_open+0xff3>
			162db: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   162df:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   162e3:	4c 8d 45 dc          	lea    0xffffffffffffffdc(%rbp),%r8
   162e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			162ea: R_X86_64_32S	.rodata.str1.1+0x1fd2
   162ee:	b9 04 00 00 00       	mov    $0x4,%ecx
   162f3:	4c 89 e6             	mov    %r12,%rsi
   162f6:	e8 00 00 00 00       	callq  162fb <dev_open+0x100f>
			162f7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   162fb:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   162ff:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
   16302:	48 85 ff             	test   %rdi,%rdi
   16305:	74 05                	je     1630c <dev_open+0x1020>
   16307:	e8 00 00 00 00       	callq  1630c <dev_open+0x1020>
			16308: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1630c:	48 83 c4 30          	add    $0x30,%rsp
   16310:	89 d8                	mov    %ebx,%eax
   16312:	5b                   	pop    %rbx
   16313:	41 5c                	pop    %r12
   16315:	41 5d                	pop    %r13
   16317:	41 5e                	pop    %r14
   16319:	c9                   	leaveq 
   1631a:	c3                   	retq   

000000000001631b <netif_carrier_off>:
   1631b:	55                   	push   %rbp
   1631c:	48 89 e5             	mov    %rsp,%rbp
   1631f:	41 55                	push   %r13
   16321:	4c 8d 6d dc          	lea    0xffffffffffffffdc(%rbp),%r13
   16325:	41 54                	push   %r12
   16327:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   1632b:	53                   	push   %rbx
   1632c:	48 89 fb             	mov    %rdi,%rbx
   1632f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16332: R_X86_64_32S	.rodata.str1.1+0x2009
   16336:	48 83 ec 38          	sub    $0x38,%rsp
   1633a:	e8 00 00 00 00       	callq  1633f <netif_carrier_off+0x24>
			1633b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1633f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16342: R_X86_64_32S	.rodata.str1.1+0x201b
   16346:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   1634d:	00 
   1634e:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   16355:	00 
   16356:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   1635d:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
   16361:	e8 00 00 00 00       	callq  16366 <netif_carrier_off+0x4b>
			16362: R_X86_64_PC32	record_function+0xfffffffffffffffc
   16366:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
   1636a:	4c 89 ea             	mov    %r13,%rdx
   1636d:	4c 89 e6             	mov    %r12,%rsi
   16370:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16373: R_X86_64_32S	.rodata.str1.1+0x2009
   16377:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
   1637e:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
   16385:	00 
   16386:	e8 00 00 00 00       	callq  1638b <netif_carrier_off+0x70>
			16387: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1638b:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1638f:	48 85 c0             	test   %rax,%rax
   16392:	74 1c                	je     163b0 <netif_carrier_off+0x95>
   16394:	48 8d 48 48          	lea    0x48(%rax),%rcx
   16398:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1639e:	4c 89 ea             	mov    %r13,%rdx
   163a1:	4c 89 e6             	mov    %r12,%rsi
   163a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			163a7: R_X86_64_32S	.rodata.str1.1+0x2009
   163ab:	e8 00 00 00 00       	callq  163b0 <netif_carrier_off+0x95>
			163ac: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   163b0:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   163b4:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   163b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			163bb: R_X86_64_32S	.rodata.str1.1+0x2009
   163bf:	48 c7 45 b0 e0 05 00 	movq   $0x5e0,0xffffffffffffffb0(%rbp)
   163c6:	00 
   163c7:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   163cb:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
   163ce:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
   163d1:	e8 00 00 00 00       	callq  163d6 <netif_carrier_off+0xbb>
			163d2: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   163d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			163d9: R_X86_64_32S	.rodata.str1.1+0x203b
   163dd:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
   163e1:	e8 00 00 00 00       	callq  163e6 <netif_carrier_off+0xcb>
			163e2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   163e6:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
   163ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			163ed: R_X86_64_32S	.rodata.str1.1+0x2009
   163f1:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   163f7:	4c 89 e1             	mov    %r12,%rcx
   163fa:	4c 89 ea             	mov    %r13,%rdx
   163fd:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
   16404:	48 89 de             	mov    %rbx,%rsi
   16407:	e8 00 00 00 00       	callq  1640c <netif_carrier_off+0xf1>
			16408: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1640c:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   16410:	48 85 ff             	test   %rdi,%rdi
   16413:	74 2e                	je     16443 <netif_carrier_off+0x128>
   16415:	ba 08 00 00 00       	mov    $0x8,%edx
   1641a:	be 48 00 00 00       	mov    $0x48,%esi
   1641f:	e8 00 00 00 00       	callq  16424 <netif_carrier_off+0x109>
			16420: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   16424:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16428:	b9 08 00 00 00       	mov    $0x8,%ecx
   1642d:	4c 89 ea             	mov    %r13,%rdx
   16430:	48 89 de             	mov    %rbx,%rsi
   16433:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16436: R_X86_64_32S	.rodata.str1.1+0x2009
   1643a:	49 83 c0 48          	add    $0x48,%r8
   1643e:	e8 00 00 00 00       	callq  16443 <netif_carrier_off+0x128>
			1643f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16443:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   16447:	48 85 ff             	test   %rdi,%rdi
   1644a:	74 05                	je     16451 <netif_carrier_off+0x136>
   1644c:	e8 00 00 00 00       	callq  16451 <netif_carrier_off+0x136>
			1644d: R_X86_64_PC32	kfree+0xfffffffffffffffc
   16451:	48 83 c4 38          	add    $0x38,%rsp
   16455:	5b                   	pop    %rbx
   16456:	41 5c                	pop    %r12
   16458:	41 5d                	pop    %r13
   1645a:	c9                   	leaveq 
   1645b:	c3                   	retq   

000000000001645c <register_netdev>:
   1645c:	55                   	push   %rbp
   1645d:	48 89 e5             	mov    %rsp,%rbp
   16460:	41 56                	push   %r14
   16462:	49 89 fe             	mov    %rdi,%r14
   16465:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16468: R_X86_64_32S	.rodata.str1.1+0x205b
   1646c:	41 55                	push   %r13
   1646e:	41 54                	push   %r12
   16470:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   16474:	53                   	push   %rbx
   16475:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   16479:	48 83 ec 30          	sub    $0x30,%rsp
   1647d:	e8 00 00 00 00       	callq  16482 <register_netdev+0x26>
			1647e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   16482:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16485: R_X86_64_32S	.rodata.str1.1+0x206b
   16489:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   16490:	00 
   16491:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   16498:	00 
   16499:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   164a0:	4c 89 75 d0          	mov    %r14,0xffffffffffffffd0(%rbp)
   164a4:	e8 00 00 00 00       	callq  164a9 <register_netdev+0x4d>
			164a5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   164a9:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
   164ad:	48 89 da             	mov    %rbx,%rdx
   164b0:	4c 89 e6             	mov    %r12,%rsi
   164b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			164b6: R_X86_64_32S	.rodata.str1.1+0x205b
   164ba:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   164c1:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
   164c8:	00 
   164c9:	e8 00 00 00 00       	callq  164ce <register_netdev+0x72>
			164ca: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   164ce:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   164d2:	48 85 c0             	test   %rax,%rax
   164d5:	0f 84 2b 07 00 00    	je     16c06 <register_netdev+0x7aa>
   164db:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   164e2:	48 89 da             	mov    %rbx,%rdx
   164e5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   164eb:	4c 89 e6             	mov    %r12,%rsi
   164ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			164f1: R_X86_64_32S	.rodata.str1.1+0x205b
   164f5:	e8 00 00 00 00       	callq  164fa <register_netdev+0x9e>
			164f6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   164fa:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   164fe:	48 89 da             	mov    %rbx,%rdx
   16501:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   16507:	4c 89 e6             	mov    %r12,%rsi
   1650a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1650d: R_X86_64_32S	.rodata.str1.1+0x205b
   16511:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   16518:	e8 00 00 00 00       	callq  1651d <register_netdev+0xc1>
			16519: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1651d:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16521:	48 89 da             	mov    %rbx,%rdx
   16524:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1652a:	4c 89 e6             	mov    %r12,%rsi
   1652d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16530: R_X86_64_32S	.rodata.str1.1+0x205b
   16534:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   1653b:	e8 00 00 00 00       	callq  16540 <register_netdev+0xe4>
			1653c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16540:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16544:	48 89 da             	mov    %rbx,%rdx
   16547:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1654d:	4c 89 e6             	mov    %r12,%rsi
   16550:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16553: R_X86_64_32S	.rodata.str1.1+0x205b
   16557:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   1655e:	e8 00 00 00 00       	callq  16563 <register_netdev+0x107>
			1655f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16563:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16567:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1656d:	48 89 da             	mov    %rbx,%rdx
   16570:	4c 89 e6             	mov    %r12,%rsi
   16573:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16576: R_X86_64_32S	.rodata.str1.1+0x205b
   1657a:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   16581:	e8 00 00 00 00       	callq  16586 <register_netdev+0x12a>
			16582: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16586:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1658a:	48 89 da             	mov    %rbx,%rdx
   1658d:	4c 89 e6             	mov    %r12,%rsi
   16590:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16593: R_X86_64_32S	.rodata.str1.1+0x205b
   16597:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1659e:	e8 00 00 00 00       	callq  165a3 <register_netdev+0x147>
			1659f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   165a3:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   165a7:	48 89 da             	mov    %rbx,%rdx
   165aa:	4c 89 e6             	mov    %r12,%rsi
   165ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			165b0: R_X86_64_32S	.rodata.str1.1+0x205b
   165b4:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   165bb:	e8 00 00 00 00       	callq  165c0 <register_netdev+0x164>
			165bc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   165c0:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   165c4:	48 89 da             	mov    %rbx,%rdx
   165c7:	4c 89 e6             	mov    %r12,%rsi
   165ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			165cd: R_X86_64_32S	.rodata.str1.1+0x205b
   165d1:	31 db                	xor    %ebx,%ebx
   165d3:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   165da:	e8 00 00 00 00       	callq  165df <register_netdev+0x183>
			165db: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   165df:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   165e3:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   165e7:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
   165eb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   165f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			165f4: R_X86_64_32S	.rodata.str1.1+0x205b
   165f8:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   165ff:	48 01 d9             	add    %rbx,%rcx
   16602:	48 ff c3             	inc    %rbx
   16605:	e8 00 00 00 00       	callq  1660a <register_netdev+0x1ae>
			16606: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1660a:	48 83 fb 20          	cmp    $0x20,%rbx
   1660e:	75 cf                	jne    165df <register_netdev+0x183>
   16610:	30 db                	xor    %bl,%bl
   16612:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16616:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   1661a:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1661e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16624:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16627: R_X86_64_32S	.rodata.str1.1+0x205b
   1662b:	4c 89 e2             	mov    %r12,%rdx
   1662e:	4c 89 ee             	mov    %r13,%rsi
   16631:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   16638:	48 01 d9             	add    %rbx,%rcx
   1663b:	48 ff c3             	inc    %rbx
   1663e:	e8 00 00 00 00       	callq  16643 <register_netdev+0x1e7>
			1663f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16643:	48 83 fb 20          	cmp    $0x20,%rbx
   16647:	75 c9                	jne    16612 <register_netdev+0x1b6>
   16649:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1664d:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   16653:	4c 89 e2             	mov    %r12,%rdx
   16656:	4c 89 ee             	mov    %r13,%rsi
   16659:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1665c: R_X86_64_32S	.rodata.str1.1+0x205b
   16660:	30 db                	xor    %bl,%bl
   16662:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   16669:	e8 00 00 00 00       	callq  1666e <register_netdev+0x212>
			1666a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1666e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16672:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   16678:	4c 89 e2             	mov    %r12,%rdx
   1667b:	4c 89 ee             	mov    %r13,%rsi
   1667e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16681: R_X86_64_32S	.rodata.str1.1+0x205b
   16685:	48 83 c1 48          	add    $0x48,%rcx
   16689:	e8 00 00 00 00       	callq  1668e <register_netdev+0x232>
			1668a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1668e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16692:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   16696:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
   1669a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   166a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			166a3: R_X86_64_32S	.rodata.str1.1+0x205b
   166a7:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   166ae:	48 01 d9             	add    %rbx,%rcx
   166b1:	48 ff c3             	inc    %rbx
   166b4:	e8 00 00 00 00       	callq  166b9 <register_netdev+0x25d>
			166b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   166b9:	48 83 fb 20          	cmp    $0x20,%rbx
   166bd:	75 cf                	jne    1668e <register_netdev+0x232>
   166bf:	30 db                	xor    %bl,%bl
   166c1:	48 89 d9             	mov    %rbx,%rcx
   166c4:	48 03 4d d0          	add    0xffffffffffffffd0(%rbp),%rcx
   166c8:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   166cc:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   166d0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   166d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			166d9: R_X86_64_32S	.rodata.str1.1+0x205b
   166dd:	4c 89 e2             	mov    %r12,%rdx
   166e0:	48 ff c3             	inc    %rbx
   166e3:	4c 89 ee             	mov    %r13,%rsi
   166e6:	e8 00 00 00 00       	callq  166eb <register_netdev+0x28f>
			166e7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   166eb:	48 83 fb 10          	cmp    $0x10,%rbx
   166ef:	75 d0                	jne    166c1 <register_netdev+0x265>
   166f1:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   166f5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   166fb:	4c 89 e2             	mov    %r12,%rdx
   166fe:	4c 89 ee             	mov    %r13,%rsi
   16701:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16704: R_X86_64_32S	.rodata.str1.1+0x205b
   16708:	30 db                	xor    %bl,%bl
   1670a:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   16711:	e8 00 00 00 00       	callq  16716 <register_netdev+0x2ba>
			16712: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16716:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1671a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   16720:	4c 89 e2             	mov    %r12,%rdx
   16723:	4c 89 ee             	mov    %r13,%rsi
   16726:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16729: R_X86_64_32S	.rodata.str1.1+0x205b
   1672d:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   16734:	e8 00 00 00 00       	callq  16739 <register_netdev+0x2dd>
			16735: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16739:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1673d:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   16741:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   16745:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1674b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1674e: R_X86_64_32S	.rodata.str1.1+0x205b
   16752:	4c 89 e2             	mov    %r12,%rdx
   16755:	4c 89 ee             	mov    %r13,%rsi
   16758:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
   1675f:	48 01 d9             	add    %rbx,%rcx
   16762:	48 ff c3             	inc    %rbx
   16765:	e8 00 00 00 00       	callq  1676a <register_netdev+0x30e>
			16766: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1676a:	48 83 fb 14          	cmp    $0x14,%rbx
   1676e:	75 c9                	jne    16739 <register_netdev+0x2dd>
   16770:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16774:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
   16778:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1677e:	4c 89 e2             	mov    %r12,%rdx
   16781:	4c 89 ee             	mov    %r13,%rsi
   16784:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16787: R_X86_64_32S	.rodata.str1.1+0x205b
   1678b:	48 89 d9             	mov    %rbx,%rcx
   1678e:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   16794:	83 e0 01             	and    $0x1,%eax
   16797:	0f b6 c0             	movzbl %al,%eax
   1679a:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
   1679d:	e8 00 00 00 00       	callq  167a2 <register_netdev+0x346>
			1679e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   167a2:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   167a6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   167ac:	48 89 d9             	mov    %rbx,%rcx
   167af:	4c 89 e2             	mov    %r12,%rdx
   167b2:	4c 89 ee             	mov    %r13,%rsi
   167b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			167b8: R_X86_64_32S	.rodata.str1.1+0x205b
   167bc:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   167c2:	d0 e8                	shr    %al
   167c4:	83 e0 01             	and    $0x1,%eax
   167c7:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
   167ca:	e8 00 00 00 00       	callq  167cf <register_netdev+0x373>
			167cb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   167cf:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   167d3:	4c 89 e2             	mov    %r12,%rdx
   167d6:	4c 89 ee             	mov    %r13,%rsi
   167d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			167dc: R_X86_64_32S	.rodata.str1.1+0x205b
   167e0:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   167e7:	e8 00 00 00 00       	callq  167ec <register_netdev+0x390>
			167e8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   167ec:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   167f0:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   167f7:	48 85 c0             	test   %rax,%rax
   167fa:	0f 84 bb 00 00 00    	je     168bb <register_netdev+0x45f>
   16800:	48 8d 48 18          	lea    0x18(%rax),%rcx
   16804:	4c 89 e2             	mov    %r12,%rdx
   16807:	4c 89 ee             	mov    %r13,%rsi
   1680a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1680d: R_X86_64_32S	.rodata.str1.1+0x205b
   16811:	e8 00 00 00 00       	callq  16816 <register_netdev+0x3ba>
			16812: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16816:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1681a:	4c 89 e2             	mov    %r12,%rdx
   1681d:	4c 89 ee             	mov    %r13,%rsi
   16820:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16823: R_X86_64_32S	.rodata.str1.1+0x205b
   16827:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1682e:	48 83 c1 20          	add    $0x20,%rcx
   16832:	e8 00 00 00 00       	callq  16837 <register_netdev+0x3db>
			16833: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16837:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1683b:	4c 89 e2             	mov    %r12,%rdx
   1683e:	4c 89 ee             	mov    %r13,%rsi
   16841:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16844: R_X86_64_32S	.rodata.str1.1+0x205b
   16848:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1684f:	48 83 c1 30          	add    $0x30,%rcx
   16853:	e8 00 00 00 00       	callq  16858 <register_netdev+0x3fc>
			16854: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16858:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1685c:	4c 89 e2             	mov    %r12,%rdx
   1685f:	4c 89 ee             	mov    %r13,%rsi
   16862:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16865: R_X86_64_32S	.rodata.str1.1+0x205b
   16869:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   16870:	48 83 c1 10          	add    $0x10,%rcx
   16874:	e8 00 00 00 00       	callq  16879 <register_netdev+0x41d>
			16875: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16879:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1687d:	4c 89 e2             	mov    %r12,%rdx
   16880:	4c 89 ee             	mov    %r13,%rsi
   16883:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16886: R_X86_64_32S	.rodata.str1.1+0x205b
   1688a:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   16891:	48 83 c1 28          	add    $0x28,%rcx
   16895:	e8 00 00 00 00       	callq  1689a <register_netdev+0x43e>
			16896: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1689a:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1689e:	4c 89 e2             	mov    %r12,%rdx
   168a1:	4c 89 ee             	mov    %r13,%rsi
   168a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			168a7: R_X86_64_32S	.rodata.str1.1+0x205b
   168ab:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   168b2:	48 83 c1 08          	add    $0x8,%rcx
   168b6:	e8 00 00 00 00       	callq  168bb <register_netdev+0x45f>
			168b7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   168bb:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   168bf:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   168c5:	4c 89 e2             	mov    %r12,%rdx
   168c8:	4c 89 ee             	mov    %r13,%rsi
   168cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			168ce: R_X86_64_32S	.rodata.str1.1+0x205b
   168d2:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
   168d9:	e8 00 00 00 00       	callq  168de <register_netdev+0x482>
			168da: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   168de:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   168e2:	4c 89 e2             	mov    %r12,%rdx
   168e5:	4c 89 ee             	mov    %r13,%rsi
   168e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			168eb: R_X86_64_32S	.rodata.str1.1+0x205b
   168ef:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   168f6:	e8 00 00 00 00       	callq  168fb <register_netdev+0x49f>
			168f7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   168fb:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   168ff:	4c 89 e2             	mov    %r12,%rdx
   16902:	4c 89 ee             	mov    %r13,%rsi
   16905:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16908: R_X86_64_32S	.rodata.str1.1+0x205b
   1690c:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   16913:	e8 00 00 00 00       	callq  16918 <register_netdev+0x4bc>
			16914: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16918:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1691c:	4c 89 e2             	mov    %r12,%rdx
   1691f:	4c 89 ee             	mov    %r13,%rsi
   16922:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16925: R_X86_64_32S	.rodata.str1.1+0x205b
   16929:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   16930:	e8 00 00 00 00       	callq  16935 <register_netdev+0x4d9>
			16931: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16935:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16939:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
   16940:	48 85 c9             	test   %rcx,%rcx
   16943:	74 18                	je     1695d <register_netdev+0x501>
   16945:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1694b:	4c 89 e2             	mov    %r12,%rdx
   1694e:	4c 89 ee             	mov    %r13,%rsi
   16951:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16954: R_X86_64_32S	.rodata.str1.1+0x205b
   16958:	e8 00 00 00 00       	callq  1695d <register_netdev+0x501>
			16959: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1695d:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16961:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   16967:	4c 89 e2             	mov    %r12,%rdx
   1696a:	4c 89 ee             	mov    %r13,%rsi
   1696d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16970: R_X86_64_32S	.rodata.str1.1+0x205b
   16974:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   1697b:	e8 00 00 00 00       	callq  16980 <register_netdev+0x524>
			1697c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16980:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16984:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1698a:	4c 89 e2             	mov    %r12,%rdx
   1698d:	4c 89 ee             	mov    %r13,%rsi
   16990:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16993: R_X86_64_32S	.rodata.str1.1+0x205b
   16997:	48 83 c1 70          	add    $0x70,%rcx
   1699b:	e8 00 00 00 00       	callq  169a0 <register_netdev+0x544>
			1699c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   169a0:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   169a4:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   169aa:	4c 89 e2             	mov    %r12,%rdx
   169ad:	4c 89 ee             	mov    %r13,%rsi
   169b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			169b3: R_X86_64_32S	.rodata.str1.1+0x205b
   169b7:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   169be:	e8 00 00 00 00       	callq  169c3 <register_netdev+0x567>
			169bf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   169c3:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   169c7:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   169cd:	4c 89 e2             	mov    %r12,%rdx
   169d0:	4c 89 ee             	mov    %r13,%rsi
   169d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			169d6: R_X86_64_32S	.rodata.str1.1+0x205b
   169da:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   169e1:	e8 00 00 00 00       	callq  169e6 <register_netdev+0x58a>
			169e2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   169e6:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   169ea:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   169f0:	4c 89 e2             	mov    %r12,%rdx
   169f3:	4c 89 ee             	mov    %r13,%rsi
   169f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			169f9: R_X86_64_32S	.rodata.str1.1+0x205b
   169fd:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   16a04:	e8 00 00 00 00       	callq  16a09 <register_netdev+0x5ad>
			16a05: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16a09:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16a0d:	4c 89 e2             	mov    %r12,%rdx
   16a10:	4c 89 ee             	mov    %r13,%rsi
   16a13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16a16: R_X86_64_32S	.rodata.str1.1+0x205b
   16a1a:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   16a21:	e8 00 00 00 00       	callq  16a26 <register_netdev+0x5ca>
			16a22: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16a26:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16a2a:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   16a31:	00 
   16a32:	74 5a                	je     16a8e <register_netdev+0x632>
   16a34:	31 db                	xor    %ebx,%ebx
   16a36:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16a3a:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   16a3e:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   16a42:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16a48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16a4b: R_X86_64_32S	.rodata.str1.1+0x205b
   16a4f:	4c 89 e2             	mov    %r12,%rdx
   16a52:	4c 89 ee             	mov    %r13,%rsi
   16a55:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   16a5c:	48 83 c1 08          	add    $0x8,%rcx
   16a60:	48 01 d9             	add    %rbx,%rcx
   16a63:	48 ff c3             	inc    %rbx
   16a66:	e8 00 00 00 00       	callq  16a6b <register_netdev+0x60f>
			16a67: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16a6b:	48 83 fb 20          	cmp    $0x20,%rbx
   16a6f:	75 c5                	jne    16a36 <register_netdev+0x5da>
   16a71:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16a75:	4c 89 e2             	mov    %r12,%rdx
   16a78:	4c 89 ee             	mov    %r13,%rsi
   16a7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16a7e: R_X86_64_32S	.rodata.str1.1+0x205b
   16a82:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   16a89:	e8 00 00 00 00       	callq  16a8e <register_netdev+0x632>
			16a8a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16a8e:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16a92:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   16a96:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   16a9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16a9d: R_X86_64_32S	.rodata.str1.1+0x205b
   16aa1:	48 89 da             	mov    %rbx,%rdx
   16aa4:	4c 89 e6             	mov    %r12,%rsi
   16aa7:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   16aae:	e8 00 00 00 00       	callq  16ab3 <register_netdev+0x657>
			16aaf: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16ab3:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16ab7:	48 89 da             	mov    %rbx,%rdx
   16aba:	4c 89 e6             	mov    %r12,%rsi
   16abd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16ac0: R_X86_64_32S	.rodata.str1.1+0x205b
   16ac4:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   16acb:	e8 00 00 00 00       	callq  16ad0 <register_netdev+0x674>
			16acc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16ad0:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16ad4:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   16adb:	48 85 c0             	test   %rax,%rax
   16ade:	74 37                	je     16b17 <register_netdev+0x6bb>
   16ae0:	48 8d 48 60          	lea    0x60(%rax),%rcx
   16ae4:	48 89 da             	mov    %rbx,%rdx
   16ae7:	4c 89 e6             	mov    %r12,%rsi
   16aea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16aed: R_X86_64_32S	.rodata.str1.1+0x205b
   16af1:	e8 00 00 00 00       	callq  16af6 <register_netdev+0x69a>
			16af2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16af6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16afa:	48 89 da             	mov    %rbx,%rdx
   16afd:	4c 89 e6             	mov    %r12,%rsi
   16b00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16b03: R_X86_64_32S	.rodata.str1.1+0x205b
   16b07:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   16b0e:	48 83 c1 58          	add    $0x58,%rcx
   16b12:	e8 00 00 00 00       	callq  16b17 <register_netdev+0x6bb>
			16b13: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16b17:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16b1b:	48 89 da             	mov    %rbx,%rdx
   16b1e:	4c 89 e6             	mov    %r12,%rsi
   16b21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16b24: R_X86_64_32S	.rodata.str1.1+0x205b
   16b28:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   16b2f:	e8 00 00 00 00       	callq  16b34 <register_netdev+0x6d8>
			16b30: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16b34:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16b38:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   16b3f:	48 85 c0             	test   %rax,%rax
   16b42:	74 3d                	je     16b81 <register_netdev+0x725>
   16b44:	48 8d 48 10          	lea    0x10(%rax),%rcx
   16b48:	48 89 da             	mov    %rbx,%rdx
   16b4b:	4c 89 e6             	mov    %r12,%rsi
   16b4e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16b51: R_X86_64_32S	.rodata.str1.1+0x205b
   16b55:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   16b5b:	e8 00 00 00 00       	callq  16b60 <register_netdev+0x704>
			16b5c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16b60:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16b64:	48 89 da             	mov    %rbx,%rdx
   16b67:	4c 89 e6             	mov    %r12,%rsi
   16b6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16b6d: R_X86_64_32S	.rodata.str1.1+0x205b
   16b71:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   16b78:	48 83 c1 08          	add    $0x8,%rcx
   16b7c:	e8 00 00 00 00       	callq  16b81 <register_netdev+0x725>
			16b7d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16b81:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   16b85:	48 89 da             	mov    %rbx,%rdx
   16b88:	4c 89 e6             	mov    %r12,%rsi
   16b8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16b8e: R_X86_64_32S	.rodata.str1.1+0x205b
   16b92:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   16b99:	e8 00 00 00 00       	callq  16b9e <register_netdev+0x742>
			16b9a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16b9e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16ba2:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   16ba9:	00 
   16baa:	74 5a                	je     16c06 <register_netdev+0x7aa>
   16bac:	31 db                	xor    %ebx,%ebx
   16bae:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16bb2:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   16bb6:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   16bba:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16bc0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16bc3: R_X86_64_32S	.rodata.str1.1+0x205b
   16bc7:	4c 89 e2             	mov    %r12,%rdx
   16bca:	4c 89 ee             	mov    %r13,%rsi
   16bcd:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   16bd4:	48 83 c1 08          	add    $0x8,%rcx
   16bd8:	48 01 d9             	add    %rbx,%rcx
   16bdb:	48 ff c3             	inc    %rbx
   16bde:	e8 00 00 00 00       	callq  16be3 <register_netdev+0x787>
			16bdf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   16be3:	48 83 fb 20          	cmp    $0x20,%rbx
   16be7:	75 c5                	jne    16bae <register_netdev+0x752>
   16be9:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   16bed:	4c 89 e2             	mov    %r12,%rdx
   16bf0:	4c 89 ee             	mov    %r13,%rsi
   16bf3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16bf6: R_X86_64_32S	.rodata.str1.1+0x205b
   16bfa:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   16c01:	e8 00 00 00 00       	callq  16c06 <register_netdev+0x7aa>
			16c02: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   16c06:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   16c0a:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   16c0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16c11: R_X86_64_32S	.rodata.str1.1+0x205b
   16c15:	48 c7 45 b0 37 06 00 	movq   $0x637,0xffffffffffffffb0(%rbp)
   16c1c:	00 
   16c1d:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   16c21:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   16c25:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
   16c28:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
   16c2b:	e8 00 00 00 00       	callq  16c30 <register_netdev+0x7d4>
			16c2c: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   16c30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16c33: R_X86_64_32S	.rodata.str1.1+0x2089
   16c37:	4c 89 75 c8          	mov    %r14,0xffffffffffffffc8(%rbp)
   16c3b:	e8 00 00 00 00       	callq  16c40 <register_netdev+0x7e4>
			16c3c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   16c40:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
   16c44:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   16c48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16c4b: R_X86_64_32S	.rodata.str1.1+0x205b
   16c4f:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   16c55:	48 89 da             	mov    %rbx,%rdx
   16c58:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   16c5f:	4c 89 e6             	mov    %r12,%rsi
   16c62:	e8 00 00 00 00       	callq  16c67 <register_netdev+0x80b>
			16c63: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16c67:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   16c6b:	48 85 ff             	test   %rdi,%rdi
   16c6e:	0f 84 db 07 00 00    	je     1744f <register_netdev+0xff3>
   16c74:	ba 08 00 00 00       	mov    $0x8,%edx
   16c79:	be 10 03 00 00       	mov    $0x310,%esi
   16c7e:	e8 00 00 00 00       	callq  16c83 <register_netdev+0x827>
			16c7f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   16c83:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16c87:	48 89 da             	mov    %rbx,%rdx
   16c8a:	b9 08 00 00 00       	mov    $0x8,%ecx
   16c8f:	4c 89 e6             	mov    %r12,%rsi
   16c92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16c95: R_X86_64_32S	.rodata.str1.1+0x205b
   16c99:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   16ca0:	e8 00 00 00 00       	callq  16ca5 <register_netdev+0x849>
			16ca1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16ca5:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16ca9:	48 89 da             	mov    %rbx,%rdx
   16cac:	b9 02 00 00 00       	mov    $0x2,%ecx
   16cb1:	4c 89 e6             	mov    %r12,%rsi
   16cb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16cb7: R_X86_64_32S	.rodata.str1.1+0x205b
   16cbb:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   16cc2:	e8 00 00 00 00       	callq  16cc7 <register_netdev+0x86b>
			16cc3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16cc7:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16ccb:	48 89 da             	mov    %rbx,%rdx
   16cce:	b9 08 00 00 00       	mov    $0x8,%ecx
   16cd3:	4c 89 e6             	mov    %r12,%rsi
   16cd6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16cd9: R_X86_64_32S	.rodata.str1.1+0x205b
   16cdd:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   16ce4:	e8 00 00 00 00       	callq  16ce9 <register_netdev+0x88d>
			16ce5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16ce9:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16ced:	48 89 da             	mov    %rbx,%rdx
   16cf0:	b9 04 00 00 00       	mov    $0x4,%ecx
   16cf5:	4c 89 e6             	mov    %r12,%rsi
   16cf8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16cfb: R_X86_64_32S	.rodata.str1.1+0x205b
   16cff:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   16d06:	e8 00 00 00 00       	callq  16d0b <register_netdev+0x8af>
			16d07: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16d0b:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16d0f:	48 89 da             	mov    %rbx,%rdx
   16d12:	b9 04 00 00 00       	mov    $0x4,%ecx
   16d17:	4c 89 e6             	mov    %r12,%rsi
   16d1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16d1d: R_X86_64_32S	.rodata.str1.1+0x205b
   16d21:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   16d28:	e8 00 00 00 00       	callq  16d2d <register_netdev+0x8d1>
			16d29: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16d2d:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16d31:	48 89 da             	mov    %rbx,%rdx
   16d34:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16d3a:	4c 89 e6             	mov    %r12,%rsi
   16d3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16d40: R_X86_64_32S	.rodata.str1.1+0x205b
   16d44:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   16d4b:	e8 00 00 00 00       	callq  16d50 <register_netdev+0x8f4>
			16d4c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16d50:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16d54:	48 89 da             	mov    %rbx,%rdx
   16d57:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16d5d:	4c 89 e6             	mov    %r12,%rsi
   16d60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16d63: R_X86_64_32S	.rodata.str1.1+0x205b
   16d67:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   16d6e:	e8 00 00 00 00       	callq  16d73 <register_netdev+0x917>
			16d6f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16d73:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16d77:	48 89 da             	mov    %rbx,%rdx
   16d7a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16d80:	4c 89 e6             	mov    %r12,%rsi
   16d83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16d86: R_X86_64_32S	.rodata.str1.1+0x205b
   16d8a:	31 db                	xor    %ebx,%ebx
   16d8c:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   16d93:	e8 00 00 00 00       	callq  16d98 <register_netdev+0x93c>
			16d94: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16d98:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16d9c:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   16da0:	b9 01 00 00 00       	mov    $0x1,%ecx
   16da5:	4c 89 e6             	mov    %r12,%rsi
   16da8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16dab: R_X86_64_32S	.rodata.str1.1+0x205b
   16daf:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   16db6:	49 01 d8             	add    %rbx,%r8
   16db9:	48 ff c3             	inc    %rbx
   16dbc:	e8 00 00 00 00       	callq  16dc1 <register_netdev+0x965>
			16dbd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16dc1:	48 83 fb 20          	cmp    $0x20,%rbx
   16dc5:	75 d1                	jne    16d98 <register_netdev+0x93c>
   16dc7:	30 db                	xor    %bl,%bl
   16dc9:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16dcd:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   16dd1:	b9 01 00 00 00       	mov    $0x1,%ecx
   16dd6:	4c 89 e6             	mov    %r12,%rsi
   16dd9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16ddc: R_X86_64_32S	.rodata.str1.1+0x205b
   16de0:	4c 89 ea             	mov    %r13,%rdx
   16de3:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   16dea:	49 01 d8             	add    %rbx,%r8
   16ded:	48 ff c3             	inc    %rbx
   16df0:	e8 00 00 00 00       	callq  16df5 <register_netdev+0x999>
			16df1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16df5:	48 83 fb 20          	cmp    $0x20,%rbx
   16df9:	75 ce                	jne    16dc9 <register_netdev+0x96d>
   16dfb:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16dff:	b9 02 00 00 00       	mov    $0x2,%ecx
   16e04:	4c 89 ea             	mov    %r13,%rdx
   16e07:	4c 89 e6             	mov    %r12,%rsi
   16e0a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16e0d: R_X86_64_32S	.rodata.str1.1+0x205b
   16e11:	30 db                	xor    %bl,%bl
   16e13:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   16e1a:	e8 00 00 00 00       	callq  16e1f <register_netdev+0x9c3>
			16e1b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16e1f:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   16e23:	ba 08 00 00 00       	mov    $0x8,%edx
   16e28:	be 48 00 00 00       	mov    $0x48,%esi
   16e2d:	e8 00 00 00 00       	callq  16e32 <register_netdev+0x9d6>
			16e2e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   16e32:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16e36:	b9 08 00 00 00       	mov    $0x8,%ecx
   16e3b:	4c 89 ea             	mov    %r13,%rdx
   16e3e:	4c 89 e6             	mov    %r12,%rsi
   16e41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16e44: R_X86_64_32S	.rodata.str1.1+0x205b
   16e48:	49 83 c0 48          	add    $0x48,%r8
   16e4c:	e8 00 00 00 00       	callq  16e51 <register_netdev+0x9f5>
			16e4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16e51:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16e55:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   16e59:	b9 01 00 00 00       	mov    $0x1,%ecx
   16e5e:	4c 89 e6             	mov    %r12,%rsi
   16e61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16e64: R_X86_64_32S	.rodata.str1.1+0x205b
   16e68:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   16e6f:	49 01 d8             	add    %rbx,%r8
   16e72:	48 ff c3             	inc    %rbx
   16e75:	e8 00 00 00 00       	callq  16e7a <register_netdev+0xa1e>
			16e76: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16e7a:	48 83 fb 20          	cmp    $0x20,%rbx
   16e7e:	75 d1                	jne    16e51 <register_netdev+0x9f5>
   16e80:	30 db                	xor    %bl,%bl
   16e82:	49 89 d8             	mov    %rbx,%r8
   16e85:	4c 03 45 c8          	add    0xffffffffffffffc8(%rbp),%r8
   16e89:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   16e8d:	b9 01 00 00 00       	mov    $0x1,%ecx
   16e92:	4c 89 e6             	mov    %r12,%rsi
   16e95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16e98: R_X86_64_32S	.rodata.str1.1+0x205b
   16e9c:	4c 89 ea             	mov    %r13,%rdx
   16e9f:	48 ff c3             	inc    %rbx
   16ea2:	e8 00 00 00 00       	callq  16ea7 <register_netdev+0xa4b>
			16ea3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16ea7:	48 83 fb 10          	cmp    $0x10,%rbx
   16eab:	75 d5                	jne    16e82 <register_netdev+0xa26>
   16ead:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   16eb1:	ba 10 00 00 00       	mov    $0x10,%edx
   16eb6:	be 18 04 00 00       	mov    $0x418,%esi
   16ebb:	30 db                	xor    %bl,%bl
   16ebd:	e8 00 00 00 00       	callq  16ec2 <register_netdev+0xa66>
			16ebe: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   16ec2:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16ec6:	b9 01 00 00 00       	mov    $0x1,%ecx
   16ecb:	4c 89 ea             	mov    %r13,%rdx
   16ece:	4c 89 e6             	mov    %r12,%rsi
   16ed1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16ed4: R_X86_64_32S	.rodata.str1.1+0x205b
   16ed8:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   16edf:	e8 00 00 00 00       	callq  16ee4 <register_netdev+0xa88>
			16ee0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16ee4:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   16ee8:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   16eec:	b9 01 00 00 00       	mov    $0x1,%ecx
   16ef1:	4c 89 e6             	mov    %r12,%rsi
   16ef4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16ef7: R_X86_64_32S	.rodata.str1.1+0x205b
   16efb:	4c 89 ea             	mov    %r13,%rdx
   16efe:	49 81 c0 60 05 00 00 	add    $0x560,%r8
   16f05:	49 01 d8             	add    %rbx,%r8
   16f08:	48 ff c3             	inc    %rbx
   16f0b:	e8 00 00 00 00       	callq  16f10 <register_netdev+0xab4>
			16f0c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16f10:	48 83 fb 14          	cmp    $0x14,%rbx
   16f14:	75 ce                	jne    16ee4 <register_netdev+0xa88>
   16f16:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   16f1a:	b9 04 00 00 00       	mov    $0x4,%ecx
   16f1f:	4c 89 ea             	mov    %r13,%rdx
   16f22:	4c 89 e6             	mov    %r12,%rsi
   16f25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16f28: R_X86_64_32S	.rodata.str1.1+0x205b
   16f2c:	49 89 d8             	mov    %rbx,%r8
   16f2f:	e8 00 00 00 00       	callq  16f34 <register_netdev+0xad8>
			16f30: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16f34:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16f38:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   16f3b:	49 89 d8             	mov    %rbx,%r8
   16f3e:	4c 89 e6             	mov    %r12,%rsi
   16f41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16f44: R_X86_64_32S	.rodata.str1.1+0x205b
   16f48:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   16f4e:	83 e2 01             	and    $0x1,%edx
   16f51:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   16f54:	09 d0                	or     %edx,%eax
   16f56:	4c 89 ea             	mov    %r13,%rdx
   16f59:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   16f5f:	b9 04 00 00 00       	mov    $0x4,%ecx
   16f64:	e8 00 00 00 00       	callq  16f69 <register_netdev+0xb0d>
			16f65: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   16f69:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16f6d:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   16f70:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   16f76:	4c 89 e6             	mov    %r12,%rsi
   16f79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16f7c: R_X86_64_32S	.rodata.str1.1+0x205b
   16f80:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   16f86:	83 e2 01             	and    $0x1,%edx
   16f89:	01 d2                	add    %edx,%edx
   16f8b:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   16f8e:	09 d0                	or     %edx,%eax
   16f90:	4c 89 ea             	mov    %r13,%rdx
   16f93:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   16f99:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   16f9d:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   16fa4:	e8 00 00 00 00       	callq  16fa9 <register_netdev+0xb4d>
			16fa5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16fa9:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   16fad:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   16fb4:	48 85 c0             	test   %rax,%rax
   16fb7:	0f 84 df 00 00 00    	je     1709c <register_netdev+0xc40>
   16fbd:	48 8d 48 18          	lea    0x18(%rax),%rcx
   16fc1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16fc7:	4c 89 ea             	mov    %r13,%rdx
   16fca:	4c 89 e6             	mov    %r12,%rsi
   16fcd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16fd0: R_X86_64_32S	.rodata.str1.1+0x205b
   16fd4:	e8 00 00 00 00       	callq  16fd9 <register_netdev+0xb7d>
			16fd5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   16fd9:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   16fdd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16fe3:	4c 89 ea             	mov    %r13,%rdx
   16fe6:	4c 89 e6             	mov    %r12,%rsi
   16fe9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16fec: R_X86_64_32S	.rodata.str1.1+0x205b
   16ff0:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   16ff7:	48 83 c1 20          	add    $0x20,%rcx
   16ffb:	e8 00 00 00 00       	callq  17000 <register_netdev+0xba4>
			16ffc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17000:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17004:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1700a:	4c 89 ea             	mov    %r13,%rdx
   1700d:	4c 89 e6             	mov    %r12,%rsi
   17010:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17013: R_X86_64_32S	.rodata.str1.1+0x205b
   17017:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1701e:	48 83 c1 30          	add    $0x30,%rcx
   17022:	e8 00 00 00 00       	callq  17027 <register_netdev+0xbcb>
			17023: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17027:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1702b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17031:	4c 89 ea             	mov    %r13,%rdx
   17034:	4c 89 e6             	mov    %r12,%rsi
   17037:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1703a: R_X86_64_32S	.rodata.str1.1+0x205b
   1703e:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   17045:	48 83 c1 10          	add    $0x10,%rcx
   17049:	e8 00 00 00 00       	callq  1704e <register_netdev+0xbf2>
			1704a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1704e:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17052:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17058:	4c 89 ea             	mov    %r13,%rdx
   1705b:	4c 89 e6             	mov    %r12,%rsi
   1705e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17061: R_X86_64_32S	.rodata.str1.1+0x205b
   17065:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1706c:	48 83 c1 28          	add    $0x28,%rcx
   17070:	e8 00 00 00 00       	callq  17075 <register_netdev+0xc19>
			17071: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17075:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17079:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1707f:	4c 89 ea             	mov    %r13,%rdx
   17082:	4c 89 e6             	mov    %r12,%rsi
   17085:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17088: R_X86_64_32S	.rodata.str1.1+0x205b
   1708c:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   17093:	48 83 c1 08          	add    $0x8,%rcx
   17097:	e8 00 00 00 00       	callq  1709c <register_netdev+0xc40>
			17098: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1709c:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   170a0:	b9 08 00 00 00       	mov    $0x8,%ecx
   170a5:	4c 89 ea             	mov    %r13,%rdx
   170a8:	4c 89 e6             	mov    %r12,%rsi
   170ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			170ae: R_X86_64_32S	.rodata.str1.1+0x205b
   170b2:	49 81 c0 20 06 00 00 	add    $0x620,%r8
   170b9:	e8 00 00 00 00       	callq  170be <register_netdev+0xc62>
			170ba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   170be:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   170c2:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   170c8:	4c 89 ea             	mov    %r13,%rdx
   170cb:	4c 89 e6             	mov    %r12,%rsi
   170ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			170d1: R_X86_64_32S	.rodata.str1.1+0x205b
   170d5:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   170dc:	e8 00 00 00 00       	callq  170e1 <register_netdev+0xc85>
			170dd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   170e1:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   170e5:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   170eb:	4c 89 ea             	mov    %r13,%rdx
   170ee:	4c 89 e6             	mov    %r12,%rsi
   170f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			170f4: R_X86_64_32S	.rodata.str1.1+0x205b
   170f8:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   170ff:	e8 00 00 00 00       	callq  17104 <register_netdev+0xca8>
			17100: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17104:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   17108:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1710e:	4c 89 ea             	mov    %r13,%rdx
   17111:	4c 89 e6             	mov    %r12,%rsi
   17114:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17117: R_X86_64_32S	.rodata.str1.1+0x205b
   1711b:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   17122:	e8 00 00 00 00       	callq  17127 <register_netdev+0xccb>
			17123: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17127:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1712b:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
   17132:	48 85 c0             	test   %rax,%rax
   17135:	74 1a                	je     17151 <register_netdev+0xcf5>
   17137:	49 89 c0             	mov    %rax,%r8
   1713a:	b9 08 00 00 00       	mov    $0x8,%ecx
   1713f:	4c 89 ea             	mov    %r13,%rdx
   17142:	4c 89 e6             	mov    %r12,%rsi
   17145:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17148: R_X86_64_32S	.rodata.str1.1+0x205b
   1714c:	e8 00 00 00 00       	callq  17151 <register_netdev+0xcf5>
			1714d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17151:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   17155:	b9 04 00 00 00       	mov    $0x4,%ecx
   1715a:	4c 89 ea             	mov    %r13,%rdx
   1715d:	4c 89 e6             	mov    %r12,%rsi
   17160:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17163: R_X86_64_32S	.rodata.str1.1+0x205b
   17167:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   1716e:	e8 00 00 00 00       	callq  17173 <register_netdev+0xd17>
			1716f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17173:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   17177:	b9 08 00 00 00       	mov    $0x8,%ecx
   1717c:	4c 89 ea             	mov    %r13,%rdx
   1717f:	4c 89 e6             	mov    %r12,%rsi
   17182:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17185: R_X86_64_32S	.rodata.str1.1+0x205b
   17189:	49 83 c0 70          	add    $0x70,%r8
   1718d:	e8 00 00 00 00       	callq  17192 <register_netdev+0xd36>
			1718e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17192:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   17196:	ba 10 00 00 00       	mov    $0x10,%edx
   1719b:	be 10 00 00 00       	mov    $0x10,%esi
   171a0:	e8 00 00 00 00       	callq  171a5 <register_netdev+0xd49>
			171a1: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   171a5:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   171a9:	b9 04 00 00 00       	mov    $0x4,%ecx
   171ae:	4c 89 ea             	mov    %r13,%rdx
   171b1:	4c 89 e6             	mov    %r12,%rsi
   171b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			171b7: R_X86_64_32S	.rodata.str1.1+0x205b
   171bb:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   171c2:	e8 00 00 00 00       	callq  171c7 <register_netdev+0xd6b>
			171c3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   171c7:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   171cb:	b9 08 00 00 00       	mov    $0x8,%ecx
   171d0:	4c 89 ea             	mov    %r13,%rdx
   171d3:	4c 89 e6             	mov    %r12,%rsi
   171d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			171d9: R_X86_64_32S	.rodata.str1.1+0x205b
   171dd:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   171e4:	e8 00 00 00 00       	callq  171e9 <register_netdev+0xd8d>
			171e5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   171e9:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   171ed:	b9 04 00 00 00       	mov    $0x4,%ecx
   171f2:	4c 89 ea             	mov    %r13,%rdx
   171f5:	4c 89 e6             	mov    %r12,%rsi
   171f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			171fb: R_X86_64_32S	.rodata.str1.1+0x205b
   171ff:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   17206:	e8 00 00 00 00       	callq  1720b <register_netdev+0xdaf>
			17207: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1720b:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1720f:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   17215:	4c 89 ea             	mov    %r13,%rdx
   17218:	4c 89 e6             	mov    %r12,%rsi
   1721b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1721e: R_X86_64_32S	.rodata.str1.1+0x205b
   17222:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   17229:	e8 00 00 00 00       	callq  1722e <register_netdev+0xdd2>
			1722a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1722e:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17232:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   17239:	00 
   1723a:	74 5b                	je     17297 <register_netdev+0xe3b>
   1723c:	31 db                	xor    %ebx,%ebx
   1723e:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17242:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   17246:	b9 01 00 00 00       	mov    $0x1,%ecx
   1724b:	4c 89 e6             	mov    %r12,%rsi
   1724e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17251: R_X86_64_32S	.rodata.str1.1+0x205b
   17255:	4c 89 ea             	mov    %r13,%rdx
   17258:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   1725f:	49 83 c0 08          	add    $0x8,%r8
   17263:	49 01 d8             	add    %rbx,%r8
   17266:	48 ff c3             	inc    %rbx
   17269:	e8 00 00 00 00       	callq  1726e <register_netdev+0xe12>
			1726a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1726e:	48 83 fb 20          	cmp    $0x20,%rbx
   17272:	75 ca                	jne    1723e <register_netdev+0xde2>
   17274:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17278:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1727e:	4c 89 ea             	mov    %r13,%rdx
   17281:	4c 89 e6             	mov    %r12,%rsi
   17284:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17287: R_X86_64_32S	.rodata.str1.1+0x205b
   1728b:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   17292:	e8 00 00 00 00       	callq  17297 <register_netdev+0xe3b>
			17293: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17297:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1729b:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   1729f:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   172a5:	4c 89 e6             	mov    %r12,%rsi
   172a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			172ab: R_X86_64_32S	.rodata.str1.1+0x205b
   172af:	48 89 da             	mov    %rbx,%rdx
   172b2:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   172b9:	e8 00 00 00 00       	callq  172be <register_netdev+0xe62>
			172ba: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   172be:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   172c2:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   172c8:	48 89 da             	mov    %rbx,%rdx
   172cb:	4c 89 e6             	mov    %r12,%rsi
   172ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			172d1: R_X86_64_32S	.rodata.str1.1+0x205b
   172d5:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   172dc:	e8 00 00 00 00       	callq  172e1 <register_netdev+0xe85>
			172dd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   172e1:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   172e5:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   172ec:	48 85 c0             	test   %rax,%rax
   172ef:	74 43                	je     17334 <register_netdev+0xed8>
   172f1:	48 8d 48 60          	lea    0x60(%rax),%rcx
   172f5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   172fb:	48 89 da             	mov    %rbx,%rdx
   172fe:	4c 89 e6             	mov    %r12,%rsi
   17301:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17304: R_X86_64_32S	.rodata.str1.1+0x205b
   17308:	e8 00 00 00 00       	callq  1730d <register_netdev+0xeb1>
			17309: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1730d:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17311:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17317:	48 89 da             	mov    %rbx,%rdx
   1731a:	4c 89 e6             	mov    %r12,%rsi
   1731d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17320: R_X86_64_32S	.rodata.str1.1+0x205b
   17324:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1732b:	48 83 c1 58          	add    $0x58,%rcx
   1732f:	e8 00 00 00 00       	callq  17334 <register_netdev+0xed8>
			17330: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17334:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   17338:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1733b: R_X86_64_32S	.rodata.str1.1+0x205b
   1733f:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   17345:	48 89 da             	mov    %rbx,%rdx
   17348:	4c 89 e6             	mov    %r12,%rsi
   1734b:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   17352:	e8 00 00 00 00       	callq  17357 <register_netdev+0xefb>
			17353: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17357:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1735b:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   17362:	48 85 ff             	test   %rdi,%rdi
   17365:	74 5c                	je     173c3 <register_netdev+0xf67>
   17367:	ba 08 00 00 00       	mov    $0x8,%edx
   1736c:	be 10 00 00 00       	mov    $0x10,%esi
   17371:	e8 00 00 00 00       	callq  17376 <register_netdev+0xf1a>
			17372: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   17376:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1737a:	b9 08 00 00 00       	mov    $0x8,%ecx
   1737f:	48 89 da             	mov    %rbx,%rdx
   17382:	4c 89 e6             	mov    %r12,%rsi
   17385:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17388: R_X86_64_32S	.rodata.str1.1+0x205b
   1738c:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   17393:	49 83 c0 10          	add    $0x10,%r8
   17397:	e8 00 00 00 00       	callq  1739c <register_netdev+0xf40>
			17398: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1739c:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   173a0:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   173a6:	48 89 da             	mov    %rbx,%rdx
   173a9:	4c 89 e6             	mov    %r12,%rsi
   173ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			173af: R_X86_64_32S	.rodata.str1.1+0x205b
   173b3:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   173ba:	48 83 c1 08          	add    $0x8,%rcx
   173be:	e8 00 00 00 00       	callq  173c3 <register_netdev+0xf67>
			173bf: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   173c3:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   173c7:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   173cd:	48 89 da             	mov    %rbx,%rdx
   173d0:	4c 89 e6             	mov    %r12,%rsi
   173d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			173d6: R_X86_64_32S	.rodata.str1.1+0x205b
   173da:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   173e1:	e8 00 00 00 00       	callq  173e6 <register_netdev+0xf8a>
			173e2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   173e6:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   173ea:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   173f1:	00 
   173f2:	74 5b                	je     1744f <register_netdev+0xff3>
   173f4:	31 db                	xor    %ebx,%ebx
   173f6:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   173fa:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   173fe:	b9 01 00 00 00       	mov    $0x1,%ecx
   17403:	4c 89 e6             	mov    %r12,%rsi
   17406:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17409: R_X86_64_32S	.rodata.str1.1+0x205b
   1740d:	4c 89 ea             	mov    %r13,%rdx
   17410:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   17417:	49 83 c0 08          	add    $0x8,%r8
   1741b:	49 01 d8             	add    %rbx,%r8
   1741e:	48 ff c3             	inc    %rbx
   17421:	e8 00 00 00 00       	callq  17426 <register_netdev+0xfca>
			17422: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17426:	48 83 fb 20          	cmp    $0x20,%rbx
   1742a:	75 ca                	jne    173f6 <register_netdev+0xf9a>
   1742c:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   17430:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   17436:	4c 89 ea             	mov    %r13,%rdx
   17439:	4c 89 e6             	mov    %r12,%rsi
   1743c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1743f: R_X86_64_32S	.rodata.str1.1+0x205b
   17443:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1744a:	e8 00 00 00 00       	callq  1744f <register_netdev+0xff3>
			1744b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1744f:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   17453:	4c 8d 45 dc          	lea    0xffffffffffffffdc(%rbp),%r8
   17457:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1745a: R_X86_64_32S	.rodata.str1.1+0x205b
   1745e:	b9 04 00 00 00       	mov    $0x4,%ecx
   17463:	4c 89 e6             	mov    %r12,%rsi
   17466:	e8 00 00 00 00       	callq  1746b <register_netdev+0x100f>
			17467: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1746b:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   1746f:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
   17472:	48 85 ff             	test   %rdi,%rdi
   17475:	74 05                	je     1747c <register_netdev+0x1020>
   17477:	e8 00 00 00 00       	callq  1747c <register_netdev+0x1020>
			17478: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1747c:	48 83 c4 30          	add    $0x30,%rsp
   17480:	89 d8                	mov    %ebx,%eax
   17482:	5b                   	pop    %rbx
   17483:	41 5c                	pop    %r12
   17485:	41 5d                	pop    %r13
   17487:	41 5e                	pop    %r14
   17489:	c9                   	leaveq 
   1748a:	c3                   	retq   

000000000001748b <e1000_pcix_get_mmrbc>:
   1748b:	55                   	push   %rbp
   1748c:	48 89 e5             	mov    %rsp,%rbp
   1748f:	41 57                	push   %r15
   17491:	41 56                	push   %r14
   17493:	41 55                	push   %r13
   17495:	41 54                	push   %r12
   17497:	53                   	push   %rbx
   17498:	48 89 fb             	mov    %rdi,%rbx
   1749b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1749e: R_X86_64_32S	.rodata.str1.1+0x20a7
   174a2:	48 83 ec 48          	sub    $0x48,%rsp
   174a6:	e8 00 00 00 00       	callq  174ab <e1000_pcix_get_mmrbc+0x20>
			174a7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   174ab:	48 8b 43 20          	mov    0x20(%rbx),%rax
   174af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			174b2: R_X86_64_32S	.rodata.str1.1+0x20bc
   174b6:	48 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%rax
   174bd:	48 89 45 98          	mov    %rax,0xffffffffffffff98(%rbp)
   174c1:	e8 00 00 00 00       	callq  174c6 <e1000_pcix_get_mmrbc+0x3b>
			174c2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   174c6:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   174ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			174cd: R_X86_64_32S	.rodata.str1.1+0x20cb
   174d1:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   174d8:	00 
   174d9:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   174e0:	00 
   174e1:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   174e8:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   174ec:	e8 00 00 00 00       	callq  174f1 <e1000_pcix_get_mmrbc+0x66>
			174ed: R_X86_64_PC32	record_function+0xfffffffffffffffc
   174f1:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   174f5:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   174f9:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   174fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17500: R_X86_64_32S	.rodata.str1.1+0x20bc
   17504:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   1750b:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   17512:	00 
   17513:	e8 00 00 00 00       	callq  17518 <e1000_pcix_get_mmrbc+0x8d>
			17514: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17518:	48 83 7d c0 00       	cmpq   $0x0,0xffffffffffffffc0(%rbp)
   1751d:	0f 84 5c 09 00 00    	je     17e7f <e1000_pcix_get_mmrbc+0x9f4>
   17523:	45 31 ff             	xor    %r15d,%r15d
   17526:	45 31 f6             	xor    %r14d,%r14d
   17529:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   17530:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   17534:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   17538:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1753e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17541: R_X86_64_32S	.rodata.str1.1+0x20bc
   17545:	41 ff c7             	inc    %r15d
   17548:	48 89 d9             	mov    %rbx,%rcx
   1754b:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
   1754f:	4c 89 e2             	mov    %r12,%rdx
   17552:	4c 89 ee             	mov    %r13,%rsi
   17555:	48 83 c1 08          	add    $0x8,%rcx
   17559:	e8 00 00 00 00       	callq  1755e <e1000_pcix_get_mmrbc+0xd3>
			1755a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1755e:	48 03 5d c0          	add    0xffffffffffffffc0(%rbp),%rbx
   17562:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17568:	4c 89 e2             	mov    %r12,%rdx
   1756b:	4c 89 ee             	mov    %r13,%rsi
   1756e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17571: R_X86_64_32S	.rodata.str1.1+0x20bc
   17575:	48 89 d9             	mov    %rbx,%rcx
   17578:	e8 00 00 00 00       	callq  1757d <e1000_pcix_get_mmrbc+0xf2>
			17579: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1757d:	4c 89 f1             	mov    %r14,%rcx
   17580:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
   17584:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1758a:	4c 89 e2             	mov    %r12,%rdx
   1758d:	4c 89 ee             	mov    %r13,%rsi
   17590:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17593: R_X86_64_32S	.rodata.str1.1+0x20bc
   17597:	49 83 c6 38          	add    $0x38,%r14
   1759b:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   175a2:	e8 00 00 00 00       	callq  175a7 <e1000_pcix_get_mmrbc+0x11c>
			175a3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   175a7:	41 83 ff 0c          	cmp    $0xc,%r15d
   175ab:	0f 85 78 ff ff ff    	jne    17529 <e1000_pcix_get_mmrbc+0x9e>
   175b1:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   175b5:	4c 89 e2             	mov    %r12,%rdx
   175b8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   175be:	4c 89 ee             	mov    %r13,%rsi
   175c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			175c4: R_X86_64_32S	.rodata.str1.1+0x20bc
   175c8:	45 31 ff             	xor    %r15d,%r15d
   175cb:	48 83 c1 48          	add    $0x48,%rcx
   175cf:	e8 00 00 00 00       	callq  175d4 <e1000_pcix_get_mmrbc+0x149>
			175d0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   175d4:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   175d8:	4c 89 e2             	mov    %r12,%rdx
   175db:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   175e1:	4c 89 ee             	mov    %r13,%rsi
   175e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			175e7: R_X86_64_32S	.rodata.str1.1+0x20bc
   175eb:	48 83 c1 38          	add    $0x38,%rcx
   175ef:	e8 00 00 00 00       	callq  175f4 <e1000_pcix_get_mmrbc+0x169>
			175f0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   175f4:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   175f8:	4c 89 e2             	mov    %r12,%rdx
   175fb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17601:	4c 89 ee             	mov    %r13,%rsi
   17604:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17607: R_X86_64_32S	.rodata.str1.1+0x20bc
   1760b:	48 83 c1 7c          	add    $0x7c,%rcx
   1760f:	e8 00 00 00 00       	callq  17614 <e1000_pcix_get_mmrbc+0x189>
			17610: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17614:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   17618:	4c 89 e2             	mov    %r12,%rdx
   1761b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17621:	4c 89 ee             	mov    %r13,%rsi
   17624:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17627: R_X86_64_32S	.rodata.str1.1+0x20bc
   1762b:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   17632:	e8 00 00 00 00       	callq  17637 <e1000_pcix_get_mmrbc+0x1ac>
			17633: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17637:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   1763b:	4c 89 e2             	mov    %r12,%rdx
   1763e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   17644:	4c 89 ee             	mov    %r13,%rsi
   17647:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1764a: R_X86_64_32S	.rodata.str1.1+0x20bc
   1764e:	48 83 c1 3e          	add    $0x3e,%rcx
   17652:	e8 00 00 00 00       	callq  17657 <e1000_pcix_get_mmrbc+0x1cc>
			17653: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17657:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   1765b:	4c 89 e2             	mov    %r12,%rdx
   1765e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   17664:	4c 89 ee             	mov    %r13,%rsi
   17667:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1766a: R_X86_64_32S	.rodata.str1.1+0x20bc
   1766e:	48 83 c1 42          	add    $0x42,%rcx
   17672:	e8 00 00 00 00       	callq  17677 <e1000_pcix_get_mmrbc+0x1ec>
			17673: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17677:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
   1767b:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   1767f:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   17686:	00 
   17687:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1768b:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1768f:	48 89 d9             	mov    %rbx,%rcx
   17692:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17698:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1769b: R_X86_64_32S	.rodata.str1.1+0x20bc
   1769f:	49 ff c7             	inc    %r15
   176a2:	4c 89 ea             	mov    %r13,%rdx
   176a5:	4c 89 f6             	mov    %r14,%rsi
   176a8:	48 ff c3             	inc    %rbx
   176ab:	e8 00 00 00 00       	callq  176b0 <e1000_pcix_get_mmrbc+0x225>
			176ac: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   176b0:	49 83 ff 14          	cmp    $0x14,%r15
   176b4:	75 d1                	jne    17687 <e1000_pcix_get_mmrbc+0x1fc>
   176b6:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   176bd:	00 
   176be:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   176c2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   176c8:	4c 89 ea             	mov    %r13,%rdx
   176cb:	4c 89 f6             	mov    %r14,%rsi
   176ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			176d1: R_X86_64_32S	.rodata.str1.1+0x20bc
   176d5:	48 89 d9             	mov    %rbx,%rcx
   176d8:	83 e0 01             	and    $0x1,%eax
   176db:	0f b6 c0             	movzbl %al,%eax
   176de:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   176e1:	e8 00 00 00 00       	callq  176e6 <e1000_pcix_get_mmrbc+0x25b>
			176e2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   176e6:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   176ed:	00 
   176ee:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   176f4:	48 89 d9             	mov    %rbx,%rcx
   176f7:	4c 89 ea             	mov    %r13,%rdx
   176fa:	4c 89 f6             	mov    %r14,%rsi
   176fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17700: R_X86_64_32S	.rodata.str1.1+0x20bc
   17704:	d0 e8                	shr    %al
   17706:	83 e0 01             	and    $0x1,%eax
   17709:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   1770c:	e8 00 00 00 00       	callq  17711 <e1000_pcix_get_mmrbc+0x286>
			1770d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17711:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   17718:	00 
   17719:	4c 89 ea             	mov    %r13,%rdx
   1771c:	4c 89 f6             	mov    %r14,%rsi
   1771f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17722: R_X86_64_32S	.rodata.str1.1+0x20bc
   17726:	e8 00 00 00 00       	callq  1772b <e1000_pcix_get_mmrbc+0x2a0>
			17727: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1772b:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   17732:	00 
   17733:	48 85 c0             	test   %rax,%rax
   17736:	0f 84 ac 00 00 00    	je     177e8 <e1000_pcix_get_mmrbc+0x35d>
   1773c:	48 8d 48 18          	lea    0x18(%rax),%rcx
   17740:	4c 89 ea             	mov    %r13,%rdx
   17743:	4c 89 f6             	mov    %r14,%rsi
   17746:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17749: R_X86_64_32S	.rodata.str1.1+0x20bc
   1774d:	e8 00 00 00 00       	callq  17752 <e1000_pcix_get_mmrbc+0x2c7>
			1774e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17752:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   17759:	00 
   1775a:	4c 89 ea             	mov    %r13,%rdx
   1775d:	4c 89 f6             	mov    %r14,%rsi
   17760:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17763: R_X86_64_32S	.rodata.str1.1+0x20bc
   17767:	48 83 c1 20          	add    $0x20,%rcx
   1776b:	e8 00 00 00 00       	callq  17770 <e1000_pcix_get_mmrbc+0x2e5>
			1776c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17770:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   17777:	00 
   17778:	4c 89 ea             	mov    %r13,%rdx
   1777b:	4c 89 f6             	mov    %r14,%rsi
   1777e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17781: R_X86_64_32S	.rodata.str1.1+0x20bc
   17785:	48 83 c1 30          	add    $0x30,%rcx
   17789:	e8 00 00 00 00       	callq  1778e <e1000_pcix_get_mmrbc+0x303>
			1778a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1778e:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   17795:	00 
   17796:	4c 89 ea             	mov    %r13,%rdx
   17799:	4c 89 f6             	mov    %r14,%rsi
   1779c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1779f: R_X86_64_32S	.rodata.str1.1+0x20bc
   177a3:	48 83 c1 10          	add    $0x10,%rcx
   177a7:	e8 00 00 00 00       	callq  177ac <e1000_pcix_get_mmrbc+0x321>
			177a8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   177ac:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   177b3:	00 
   177b4:	4c 89 ea             	mov    %r13,%rdx
   177b7:	4c 89 f6             	mov    %r14,%rsi
   177ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			177bd: R_X86_64_32S	.rodata.str1.1+0x20bc
   177c1:	48 83 c1 28          	add    $0x28,%rcx
   177c5:	e8 00 00 00 00       	callq  177ca <e1000_pcix_get_mmrbc+0x33f>
			177c6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   177ca:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   177d1:	00 
   177d2:	4c 89 ea             	mov    %r13,%rdx
   177d5:	4c 89 f6             	mov    %r14,%rsi
   177d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			177db: R_X86_64_32S	.rodata.str1.1+0x20bc
   177df:	48 83 c1 08          	add    $0x8,%rcx
   177e3:	e8 00 00 00 00       	callq  177e8 <e1000_pcix_get_mmrbc+0x35d>
			177e4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   177e8:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   177ef:	00 
   177f0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   177f6:	4c 89 ea             	mov    %r13,%rdx
   177f9:	4c 89 f6             	mov    %r14,%rsi
   177fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			177ff: R_X86_64_32S	.rodata.str1.1+0x20bc
   17803:	e8 00 00 00 00       	callq  17808 <e1000_pcix_get_mmrbc+0x37d>
			17804: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17808:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   1780f:	00 
   17810:	4c 89 ea             	mov    %r13,%rdx
   17813:	4c 89 f6             	mov    %r14,%rsi
   17816:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17819: R_X86_64_32S	.rodata.str1.1+0x20bc
   1781d:	e8 00 00 00 00       	callq  17822 <e1000_pcix_get_mmrbc+0x397>
			1781e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17822:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17829:	00 
   1782a:	48 85 c0             	test   %rax,%rax
   1782d:	0f 84 91 05 00 00    	je     17dc4 <e1000_pcix_get_mmrbc+0x939>
   17833:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   1783a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17840:	4c 89 ea             	mov    %r13,%rdx
   17843:	4c 89 f6             	mov    %r14,%rsi
   17846:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17849: R_X86_64_32S	.rodata.str1.1+0x20bc
   1784d:	31 db                	xor    %ebx,%ebx
   1784f:	e8 00 00 00 00       	callq  17854 <e1000_pcix_get_mmrbc+0x3c9>
			17850: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17854:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1785b:	00 
   1785c:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   17862:	4c 89 ea             	mov    %r13,%rdx
   17865:	4c 89 f6             	mov    %r14,%rsi
   17868:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1786b: R_X86_64_32S	.rodata.str1.1+0x20bc
   1786f:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   17876:	e8 00 00 00 00       	callq  1787b <e1000_pcix_get_mmrbc+0x3f0>
			17877: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1787b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17882:	00 
   17883:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17889:	4c 89 ea             	mov    %r13,%rdx
   1788c:	4c 89 f6             	mov    %r14,%rsi
   1788f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17892: R_X86_64_32S	.rodata.str1.1+0x20bc
   17896:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   1789d:	e8 00 00 00 00       	callq  178a2 <e1000_pcix_get_mmrbc+0x417>
			1789e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   178a2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   178a9:	00 
   178aa:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   178b0:	4c 89 ea             	mov    %r13,%rdx
   178b3:	4c 89 f6             	mov    %r14,%rsi
   178b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			178b9: R_X86_64_32S	.rodata.str1.1+0x20bc
   178bd:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   178c4:	e8 00 00 00 00       	callq  178c9 <e1000_pcix_get_mmrbc+0x43e>
			178c5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   178c9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   178d0:	00 
   178d1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   178d7:	4c 89 ea             	mov    %r13,%rdx
   178da:	4c 89 f6             	mov    %r14,%rsi
   178dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			178e0: R_X86_64_32S	.rodata.str1.1+0x20bc
   178e4:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   178eb:	e8 00 00 00 00       	callq  178f0 <e1000_pcix_get_mmrbc+0x465>
			178ec: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   178f0:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   178f7:	00 
   178f8:	4c 89 ea             	mov    %r13,%rdx
   178fb:	4c 89 f6             	mov    %r14,%rsi
   178fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17901: R_X86_64_32S	.rodata.str1.1+0x20bc
   17905:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1790c:	e8 00 00 00 00       	callq  17911 <e1000_pcix_get_mmrbc+0x486>
			1790d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17911:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17918:	00 
   17919:	4c 89 ea             	mov    %r13,%rdx
   1791c:	4c 89 f6             	mov    %r14,%rsi
   1791f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17922: R_X86_64_32S	.rodata.str1.1+0x20bc
   17926:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1792d:	e8 00 00 00 00       	callq  17932 <e1000_pcix_get_mmrbc+0x4a7>
			1792e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17932:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17939:	00 
   1793a:	4c 89 ea             	mov    %r13,%rdx
   1793d:	4c 89 f6             	mov    %r14,%rsi
   17940:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17943: R_X86_64_32S	.rodata.str1.1+0x20bc
   17947:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   1794e:	e8 00 00 00 00       	callq  17953 <e1000_pcix_get_mmrbc+0x4c8>
			1794f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17953:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1795a:	00 
   1795b:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1795f:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   17963:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17969:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1796c: R_X86_64_32S	.rodata.str1.1+0x20bc
   17970:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   17977:	48 01 d9             	add    %rbx,%rcx
   1797a:	48 ff c3             	inc    %rbx
   1797d:	e8 00 00 00 00       	callq  17982 <e1000_pcix_get_mmrbc+0x4f7>
			1797e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17982:	48 83 fb 20          	cmp    $0x20,%rbx
   17986:	75 cb                	jne    17953 <e1000_pcix_get_mmrbc+0x4c8>
   17988:	30 db                	xor    %bl,%bl
   1798a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17991:	00 
   17992:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   17996:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1799a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   179a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			179a3: R_X86_64_32S	.rodata.str1.1+0x20bc
   179a7:	4c 89 ea             	mov    %r13,%rdx
   179aa:	4c 89 f6             	mov    %r14,%rsi
   179ad:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   179b4:	48 01 d9             	add    %rbx,%rcx
   179b7:	48 ff c3             	inc    %rbx
   179ba:	e8 00 00 00 00       	callq  179bf <e1000_pcix_get_mmrbc+0x534>
			179bb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   179bf:	48 83 fb 20          	cmp    $0x20,%rbx
   179c3:	75 c5                	jne    1798a <e1000_pcix_get_mmrbc+0x4ff>
   179c5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   179cc:	00 
   179cd:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   179d3:	4c 89 ea             	mov    %r13,%rdx
   179d6:	4c 89 f6             	mov    %r14,%rsi
   179d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			179dc: R_X86_64_32S	.rodata.str1.1+0x20bc
   179e0:	30 db                	xor    %bl,%bl
   179e2:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   179e9:	e8 00 00 00 00       	callq  179ee <e1000_pcix_get_mmrbc+0x563>
			179ea: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   179ee:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   179f5:	00 
   179f6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   179fc:	4c 89 ea             	mov    %r13,%rdx
   179ff:	4c 89 f6             	mov    %r14,%rsi
   17a02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17a05: R_X86_64_32S	.rodata.str1.1+0x20bc
   17a09:	48 83 c1 48          	add    $0x48,%rcx
   17a0d:	e8 00 00 00 00       	callq  17a12 <e1000_pcix_get_mmrbc+0x587>
			17a0e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17a12:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17a19:	00 
   17a1a:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   17a1e:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   17a22:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17a28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17a2b: R_X86_64_32S	.rodata.str1.1+0x20bc
   17a2f:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   17a36:	48 01 d9             	add    %rbx,%rcx
   17a39:	48 ff c3             	inc    %rbx
   17a3c:	e8 00 00 00 00       	callq  17a41 <e1000_pcix_get_mmrbc+0x5b6>
			17a3d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17a41:	48 83 fb 20          	cmp    $0x20,%rbx
   17a45:	75 cb                	jne    17a12 <e1000_pcix_get_mmrbc+0x587>
   17a47:	30 db                	xor    %bl,%bl
   17a49:	48 89 d9             	mov    %rbx,%rcx
   17a4c:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   17a53:	00 
   17a54:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   17a58:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   17a5c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17a62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17a65: R_X86_64_32S	.rodata.str1.1+0x20bc
   17a69:	4c 89 ea             	mov    %r13,%rdx
   17a6c:	48 ff c3             	inc    %rbx
   17a6f:	4c 89 f6             	mov    %r14,%rsi
   17a72:	e8 00 00 00 00       	callq  17a77 <e1000_pcix_get_mmrbc+0x5ec>
			17a73: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17a77:	48 83 fb 10          	cmp    $0x10,%rbx
   17a7b:	75 cc                	jne    17a49 <e1000_pcix_get_mmrbc+0x5be>
   17a7d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17a84:	00 
   17a85:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17a8b:	4c 89 ea             	mov    %r13,%rdx
   17a8e:	4c 89 f6             	mov    %r14,%rsi
   17a91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17a94: R_X86_64_32S	.rodata.str1.1+0x20bc
   17a98:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   17a9f:	e8 00 00 00 00       	callq  17aa4 <e1000_pcix_get_mmrbc+0x619>
			17aa0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17aa4:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17aab:	00 
   17aac:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17ab2:	4c 89 ea             	mov    %r13,%rdx
   17ab5:	4c 89 f6             	mov    %r14,%rsi
   17ab8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17abb: R_X86_64_32S	.rodata.str1.1+0x20bc
   17abf:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   17ac6:	e8 00 00 00 00       	callq  17acb <e1000_pcix_get_mmrbc+0x640>
			17ac7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17acb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17ad2:	00 
   17ad3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17ad9:	4c 89 ea             	mov    %r13,%rdx
   17adc:	4c 89 f6             	mov    %r14,%rsi
   17adf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17ae2: R_X86_64_32S	.rodata.str1.1+0x20bc
   17ae6:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   17aed:	e8 00 00 00 00       	callq  17af2 <e1000_pcix_get_mmrbc+0x667>
			17aee: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17af2:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17af9:	00 
   17afa:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17b00:	4c 89 ea             	mov    %r13,%rdx
   17b03:	4c 89 f6             	mov    %r14,%rsi
   17b06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17b09: R_X86_64_32S	.rodata.str1.1+0x20bc
   17b0d:	48 83 c1 70          	add    $0x70,%rcx
   17b11:	e8 00 00 00 00       	callq  17b16 <e1000_pcix_get_mmrbc+0x68b>
			17b12: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17b16:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17b1d:	00 
   17b1e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17b24:	4c 89 ea             	mov    %r13,%rdx
   17b27:	4c 89 f6             	mov    %r14,%rsi
   17b2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17b2d: R_X86_64_32S	.rodata.str1.1+0x20bc
   17b31:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   17b38:	e8 00 00 00 00       	callq  17b3d <e1000_pcix_get_mmrbc+0x6b2>
			17b39: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17b3d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17b44:	00 
   17b45:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17b4b:	4c 89 ea             	mov    %r13,%rdx
   17b4e:	4c 89 f6             	mov    %r14,%rsi
   17b51:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17b54: R_X86_64_32S	.rodata.str1.1+0x20bc
   17b58:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   17b5f:	e8 00 00 00 00       	callq  17b64 <e1000_pcix_get_mmrbc+0x6d9>
			17b60: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17b64:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17b6b:	00 
   17b6c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17b72:	4c 89 ea             	mov    %r13,%rdx
   17b75:	4c 89 f6             	mov    %r14,%rsi
   17b78:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17b7b: R_X86_64_32S	.rodata.str1.1+0x20bc
   17b7f:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   17b86:	e8 00 00 00 00       	callq  17b8b <e1000_pcix_get_mmrbc+0x700>
			17b87: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17b8b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17b92:	00 
   17b93:	4c 89 ea             	mov    %r13,%rdx
   17b96:	4c 89 f6             	mov    %r14,%rsi
   17b99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17b9c: R_X86_64_32S	.rodata.str1.1+0x20bc
   17ba0:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   17ba7:	e8 00 00 00 00       	callq  17bac <e1000_pcix_get_mmrbc+0x721>
			17ba8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17bac:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17bb3:	00 
   17bb4:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   17bbb:	00 
   17bbc:	74 62                	je     17c20 <e1000_pcix_get_mmrbc+0x795>
   17bbe:	30 db                	xor    %bl,%bl
   17bc0:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17bc7:	00 
   17bc8:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   17bcc:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   17bd0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17bd6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17bd9: R_X86_64_32S	.rodata.str1.1+0x20bc
   17bdd:	4c 89 ea             	mov    %r13,%rdx
   17be0:	4c 89 f6             	mov    %r14,%rsi
   17be3:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   17bea:	48 83 c1 08          	add    $0x8,%rcx
   17bee:	48 01 d9             	add    %rbx,%rcx
   17bf1:	48 ff c3             	inc    %rbx
   17bf4:	e8 00 00 00 00       	callq  17bf9 <e1000_pcix_get_mmrbc+0x76e>
			17bf5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17bf9:	48 83 fb 20          	cmp    $0x20,%rbx
   17bfd:	75 c1                	jne    17bc0 <e1000_pcix_get_mmrbc+0x735>
   17bff:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17c06:	00 
   17c07:	4c 89 ea             	mov    %r13,%rdx
   17c0a:	4c 89 f6             	mov    %r14,%rsi
   17c0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17c10: R_X86_64_32S	.rodata.str1.1+0x20bc
   17c14:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   17c1b:	e8 00 00 00 00       	callq  17c20 <e1000_pcix_get_mmrbc+0x795>
			17c1c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17c20:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17c27:	00 
   17c28:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   17c2c:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   17c30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17c33: R_X86_64_32S	.rodata.str1.1+0x20bc
   17c37:	48 89 da             	mov    %rbx,%rdx
   17c3a:	4c 89 ee             	mov    %r13,%rsi
   17c3d:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   17c44:	e8 00 00 00 00       	callq  17c49 <e1000_pcix_get_mmrbc+0x7be>
			17c45: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17c49:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17c50:	00 
   17c51:	48 89 da             	mov    %rbx,%rdx
   17c54:	4c 89 ee             	mov    %r13,%rsi
   17c57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17c5a: R_X86_64_32S	.rodata.str1.1+0x20bc
   17c5e:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   17c65:	e8 00 00 00 00       	callq  17c6a <e1000_pcix_get_mmrbc+0x7df>
			17c66: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17c6a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17c71:	00 
   17c72:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   17c79:	48 85 c0             	test   %rax,%rax
   17c7c:	74 3b                	je     17cb9 <e1000_pcix_get_mmrbc+0x82e>
   17c7e:	48 8d 48 60          	lea    0x60(%rax),%rcx
   17c82:	48 89 da             	mov    %rbx,%rdx
   17c85:	4c 89 ee             	mov    %r13,%rsi
   17c88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17c8b: R_X86_64_32S	.rodata.str1.1+0x20bc
   17c8f:	e8 00 00 00 00       	callq  17c94 <e1000_pcix_get_mmrbc+0x809>
			17c90: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17c94:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17c9b:	00 
   17c9c:	48 89 da             	mov    %rbx,%rdx
   17c9f:	4c 89 ee             	mov    %r13,%rsi
   17ca2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17ca5: R_X86_64_32S	.rodata.str1.1+0x20bc
   17ca9:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   17cb0:	48 83 c1 58          	add    $0x58,%rcx
   17cb4:	e8 00 00 00 00       	callq  17cb9 <e1000_pcix_get_mmrbc+0x82e>
			17cb5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17cb9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17cc0:	00 
   17cc1:	48 89 da             	mov    %rbx,%rdx
   17cc4:	4c 89 ee             	mov    %r13,%rsi
   17cc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17cca: R_X86_64_32S	.rodata.str1.1+0x20bc
   17cce:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   17cd5:	e8 00 00 00 00       	callq  17cda <e1000_pcix_get_mmrbc+0x84f>
			17cd6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17cda:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17ce1:	00 
   17ce2:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   17ce9:	48 85 c0             	test   %rax,%rax
   17cec:	74 41                	je     17d2f <e1000_pcix_get_mmrbc+0x8a4>
   17cee:	48 8d 48 10          	lea    0x10(%rax),%rcx
   17cf2:	48 89 da             	mov    %rbx,%rdx
   17cf5:	4c 89 ee             	mov    %r13,%rsi
   17cf8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17cfb: R_X86_64_32S	.rodata.str1.1+0x20bc
   17cff:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17d05:	e8 00 00 00 00       	callq  17d0a <e1000_pcix_get_mmrbc+0x87f>
			17d06: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17d0a:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17d11:	00 
   17d12:	48 89 da             	mov    %rbx,%rdx
   17d15:	4c 89 ee             	mov    %r13,%rsi
   17d18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17d1b: R_X86_64_32S	.rodata.str1.1+0x20bc
   17d1f:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   17d26:	48 83 c1 08          	add    $0x8,%rcx
   17d2a:	e8 00 00 00 00       	callq  17d2f <e1000_pcix_get_mmrbc+0x8a4>
			17d2b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17d2f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   17d36:	00 
   17d37:	48 89 da             	mov    %rbx,%rdx
   17d3a:	4c 89 ee             	mov    %r13,%rsi
   17d3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17d40: R_X86_64_32S	.rodata.str1.1+0x20bc
   17d44:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   17d4b:	e8 00 00 00 00       	callq  17d50 <e1000_pcix_get_mmrbc+0x8c5>
			17d4c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17d50:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17d57:	00 
   17d58:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   17d5f:	00 
   17d60:	74 62                	je     17dc4 <e1000_pcix_get_mmrbc+0x939>
   17d62:	31 db                	xor    %ebx,%ebx
   17d64:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17d6b:	00 
   17d6c:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   17d70:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   17d74:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   17d7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17d7d: R_X86_64_32S	.rodata.str1.1+0x20bc
   17d81:	4c 89 ea             	mov    %r13,%rdx
   17d84:	4c 89 f6             	mov    %r14,%rsi
   17d87:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   17d8e:	48 83 c1 08          	add    $0x8,%rcx
   17d92:	48 01 d9             	add    %rbx,%rcx
   17d95:	48 ff c3             	inc    %rbx
   17d98:	e8 00 00 00 00       	callq  17d9d <e1000_pcix_get_mmrbc+0x912>
			17d99: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17d9d:	48 83 fb 20          	cmp    $0x20,%rbx
   17da1:	75 c1                	jne    17d64 <e1000_pcix_get_mmrbc+0x8d9>
   17da3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   17daa:	00 
   17dab:	4c 89 ea             	mov    %r13,%rdx
   17dae:	4c 89 f6             	mov    %r14,%rsi
   17db1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17db4: R_X86_64_32S	.rodata.str1.1+0x20bc
   17db8:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   17dbf:	e8 00 00 00 00       	callq  17dc4 <e1000_pcix_get_mmrbc+0x939>
			17dc0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17dc4:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   17dc8:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   17dcc:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   17dd3:	00 
   17dd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17dd7: R_X86_64_32S	.rodata.str1.1+0x20bc
   17ddb:	48 89 da             	mov    %rbx,%rdx
   17dde:	4c 89 ee             	mov    %r13,%rsi
   17de1:	e8 00 00 00 00       	callq  17de6 <e1000_pcix_get_mmrbc+0x95b>
			17de2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17de6:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   17ded:	00 
   17dee:	48 89 da             	mov    %rbx,%rdx
   17df1:	4c 89 ee             	mov    %r13,%rsi
   17df4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17df7: R_X86_64_32S	.rodata.str1.1+0x20bc
   17dfb:	e8 00 00 00 00       	callq  17e00 <e1000_pcix_get_mmrbc+0x975>
			17dfc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17e00:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   17e07:	00 
   17e08:	48 85 c9             	test   %rcx,%rcx
   17e0b:	74 18                	je     17e25 <e1000_pcix_get_mmrbc+0x99a>
   17e0d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   17e13:	48 89 da             	mov    %rbx,%rdx
   17e16:	4c 89 ee             	mov    %r13,%rsi
   17e19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17e1c: R_X86_64_32S	.rodata.str1.1+0x20bc
   17e20:	e8 00 00 00 00       	callq  17e25 <e1000_pcix_get_mmrbc+0x99a>
			17e21: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17e25:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   17e29:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   17e2f:	48 89 da             	mov    %rbx,%rdx
   17e32:	4c 89 ee             	mov    %r13,%rsi
   17e35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17e38: R_X86_64_32S	.rodata.str1.1+0x20bc
   17e3c:	48 83 c1 40          	add    $0x40,%rcx
   17e40:	e8 00 00 00 00       	callq  17e45 <e1000_pcix_get_mmrbc+0x9ba>
			17e41: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17e45:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   17e49:	48 89 da             	mov    %rbx,%rdx
   17e4c:	4c 89 ee             	mov    %r13,%rsi
   17e4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17e52: R_X86_64_32S	.rodata.str1.1+0x20bc
   17e56:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   17e5c:	48 83 c1 3c          	add    $0x3c,%rcx
   17e60:	e8 00 00 00 00       	callq  17e65 <e1000_pcix_get_mmrbc+0x9da>
			17e61: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   17e65:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   17e69:	48 89 da             	mov    %rbx,%rdx
   17e6c:	4c 89 ee             	mov    %r13,%rsi
   17e6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17e72: R_X86_64_32S	.rodata.str1.1+0x20bc
   17e76:	48 83 c1 10          	add    $0x10,%rcx
   17e7a:	e8 00 00 00 00       	callq  17e7f <e1000_pcix_get_mmrbc+0x9f4>
			17e7b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   17e7f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   17e83:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   17e87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17e8a: R_X86_64_32S	.rodata.str1.1+0x20bc
   17e8e:	48 c7 45 a0 2b 06 00 	movq   $0x62b,0xffffffffffffffa0(%rbp)
   17e95:	00 
   17e96:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   17e9a:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   17e9e:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   17ea1:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   17ea4:	e8 00 00 00 00       	callq  17ea9 <e1000_pcix_get_mmrbc+0xa1e>
			17ea5: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   17ea9:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   17ead:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17eb0: R_X86_64_32S	.rodata.str1.1+0x20e8
   17eb4:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   17eb8:	e8 00 00 00 00       	callq  17ebd <e1000_pcix_get_mmrbc+0xa32>
			17eb9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   17ebd:	4c 8b 6d b0          	mov    0xffffffffffffffb0(%rbp),%r13
   17ec1:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   17ec5:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   17ecb:	48 89 da             	mov    %rbx,%rdx
   17ece:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17ed1: R_X86_64_32S	.rodata.str1.1+0x20bc
   17ed5:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   17edc:	4c 89 ee             	mov    %r13,%rsi
   17edf:	e8 00 00 00 00       	callq  17ee4 <e1000_pcix_get_mmrbc+0xa59>
			17ee0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   17ee4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   17ee8:	48 85 c0             	test   %rax,%rax
   17eeb:	0f 84 3e 09 00 00    	je     1882f <e1000_pcix_get_mmrbc+0x13a4>
   17ef1:	4c 8d 40 38          	lea    0x38(%rax),%r8
   17ef5:	48 89 da             	mov    %rbx,%rdx
   17ef8:	b9 04 00 00 00       	mov    $0x4,%ecx
   17efd:	4c 89 ee             	mov    %r13,%rsi
   17f00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17f03: R_X86_64_32S	.rodata.str1.1+0x20bc
   17f07:	45 31 f6             	xor    %r14d,%r14d
   17f0a:	e8 00 00 00 00       	callq  17f0f <e1000_pcix_get_mmrbc+0xa84>
			17f0b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17f0f:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   17f13:	48 89 da             	mov    %rbx,%rdx
   17f16:	b9 04 00 00 00       	mov    $0x4,%ecx
   17f1b:	4c 89 ee             	mov    %r13,%rsi
   17f1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17f21: R_X86_64_32S	.rodata.str1.1+0x20bc
   17f25:	49 83 c0 7c          	add    $0x7c,%r8
   17f29:	e8 00 00 00 00       	callq  17f2e <e1000_pcix_get_mmrbc+0xaa3>
			17f2a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17f2e:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   17f32:	48 89 da             	mov    %rbx,%rdx
   17f35:	b9 04 00 00 00       	mov    $0x4,%ecx
   17f3a:	4c 89 ee             	mov    %r13,%rsi
   17f3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17f40: R_X86_64_32S	.rodata.str1.1+0x20bc
   17f44:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   17f4b:	e8 00 00 00 00       	callq  17f50 <e1000_pcix_get_mmrbc+0xac5>
			17f4c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17f50:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   17f54:	48 89 da             	mov    %rbx,%rdx
   17f57:	b9 02 00 00 00       	mov    $0x2,%ecx
   17f5c:	4c 89 ee             	mov    %r13,%rsi
   17f5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17f62: R_X86_64_32S	.rodata.str1.1+0x20bc
   17f66:	49 83 c0 3e          	add    $0x3e,%r8
   17f6a:	e8 00 00 00 00       	callq  17f6f <e1000_pcix_get_mmrbc+0xae4>
			17f6b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17f6f:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   17f73:	ba 78 02 00 00       	mov    $0x278,%edx
   17f78:	be 80 00 00 00       	mov    $0x80,%esi
   17f7d:	e8 00 00 00 00       	callq  17f82 <e1000_pcix_get_mmrbc+0xaf7>
			17f7e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   17f82:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   17f86:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   17f8a:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   17f91:	00 
   17f92:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
   17f96:	49 89 d8             	mov    %rbx,%r8
   17f99:	b9 01 00 00 00       	mov    $0x1,%ecx
   17f9e:	4c 89 ee             	mov    %r13,%rsi
   17fa1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17fa4: R_X86_64_32S	.rodata.str1.1+0x20bc
   17fa8:	49 ff c6             	inc    %r14
   17fab:	4c 89 fa             	mov    %r15,%rdx
   17fae:	48 ff c3             	inc    %rbx
   17fb1:	e8 00 00 00 00       	callq  17fb6 <e1000_pcix_get_mmrbc+0xb2b>
			17fb2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17fb6:	49 83 fe 14          	cmp    $0x14,%r14
   17fba:	75 d6                	jne    17f92 <e1000_pcix_get_mmrbc+0xb07>
   17fbc:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
   17fc0:	b9 04 00 00 00       	mov    $0x4,%ecx
   17fc5:	4c 89 fa             	mov    %r15,%rdx
   17fc8:	4c 89 ee             	mov    %r13,%rsi
   17fcb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17fce: R_X86_64_32S	.rodata.str1.1+0x20bc
   17fd2:	49 89 d8             	mov    %rbx,%r8
   17fd5:	e8 00 00 00 00       	callq  17fda <e1000_pcix_get_mmrbc+0xb4f>
			17fd6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   17fda:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   17fdd:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   17fe4:	00 
   17fe5:	49 89 d8             	mov    %rbx,%r8
   17fe8:	b9 04 00 00 00       	mov    $0x4,%ecx
   17fed:	4c 89 ee             	mov    %r13,%rsi
   17ff0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17ff3: R_X86_64_32S	.rodata.str1.1+0x20bc
   17ff7:	83 e2 01             	and    $0x1,%edx
   17ffa:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   17ffd:	09 d0                	or     %edx,%eax
   17fff:	4c 89 fa             	mov    %r15,%rdx
   18002:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   18009:	00 
   1800a:	e8 00 00 00 00       	callq  1800f <e1000_pcix_get_mmrbc+0xb84>
			1800b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1800f:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   18012:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   18019:	00 
   1801a:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   18021:	00 
   18022:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   18028:	4c 89 ee             	mov    %r13,%rsi
   1802b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1802e: R_X86_64_32S	.rodata.str1.1+0x20bc
   18032:	83 e2 01             	and    $0x1,%edx
   18035:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   18038:	01 d2                	add    %edx,%edx
   1803a:	09 d0                	or     %edx,%eax
   1803c:	4c 89 fa             	mov    %r15,%rdx
   1803f:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   18046:	00 
   18047:	e8 00 00 00 00       	callq  1804c <e1000_pcix_get_mmrbc+0xbc1>
			18048: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1804c:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   18053:	00 
   18054:	48 85 c0             	test   %rax,%rax
   18057:	0f 84 d0 00 00 00    	je     1812d <e1000_pcix_get_mmrbc+0xca2>
   1805d:	48 8d 48 18          	lea    0x18(%rax),%rcx
   18061:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18067:	4c 89 fa             	mov    %r15,%rdx
   1806a:	4c 89 ee             	mov    %r13,%rsi
   1806d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18070: R_X86_64_32S	.rodata.str1.1+0x20bc
   18074:	e8 00 00 00 00       	callq  18079 <e1000_pcix_get_mmrbc+0xbee>
			18075: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18079:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18080:	00 
   18081:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18087:	4c 89 fa             	mov    %r15,%rdx
   1808a:	4c 89 ee             	mov    %r13,%rsi
   1808d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18090: R_X86_64_32S	.rodata.str1.1+0x20bc
   18094:	48 83 c1 20          	add    $0x20,%rcx
   18098:	e8 00 00 00 00       	callq  1809d <e1000_pcix_get_mmrbc+0xc12>
			18099: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1809d:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   180a4:	00 
   180a5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   180ab:	4c 89 fa             	mov    %r15,%rdx
   180ae:	4c 89 ee             	mov    %r13,%rsi
   180b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			180b4: R_X86_64_32S	.rodata.str1.1+0x20bc
   180b8:	48 83 c1 30          	add    $0x30,%rcx
   180bc:	e8 00 00 00 00       	callq  180c1 <e1000_pcix_get_mmrbc+0xc36>
			180bd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   180c1:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   180c8:	00 
   180c9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   180cf:	4c 89 fa             	mov    %r15,%rdx
   180d2:	4c 89 ee             	mov    %r13,%rsi
   180d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			180d8: R_X86_64_32S	.rodata.str1.1+0x20bc
   180dc:	48 83 c1 10          	add    $0x10,%rcx
   180e0:	e8 00 00 00 00       	callq  180e5 <e1000_pcix_get_mmrbc+0xc5a>
			180e1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   180e5:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   180ec:	00 
   180ed:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   180f3:	4c 89 fa             	mov    %r15,%rdx
   180f6:	4c 89 ee             	mov    %r13,%rsi
   180f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			180fc: R_X86_64_32S	.rodata.str1.1+0x20bc
   18100:	48 83 c1 28          	add    $0x28,%rcx
   18104:	e8 00 00 00 00       	callq  18109 <e1000_pcix_get_mmrbc+0xc7e>
			18105: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18109:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18110:	00 
   18111:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18117:	4c 89 fa             	mov    %r15,%rdx
   1811a:	4c 89 ee             	mov    %r13,%rsi
   1811d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18120: R_X86_64_32S	.rodata.str1.1+0x20bc
   18124:	48 83 c1 08          	add    $0x8,%rcx
   18128:	e8 00 00 00 00       	callq  1812d <e1000_pcix_get_mmrbc+0xca2>
			18129: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1812d:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   18134:	00 
   18135:	b9 08 00 00 00       	mov    $0x8,%ecx
   1813a:	4c 89 fa             	mov    %r15,%rdx
   1813d:	4c 89 ee             	mov    %r13,%rsi
   18140:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18143: R_X86_64_32S	.rodata.str1.1+0x20bc
   18147:	e8 00 00 00 00       	callq  1814c <e1000_pcix_get_mmrbc+0xcc1>
			18148: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1814c:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   18153:	00 
   18154:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18157: R_X86_64_32S	.rodata.str1.1+0x20bc
   1815b:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   18161:	4c 89 fa             	mov    %r15,%rdx
   18164:	4c 89 ee             	mov    %r13,%rsi
   18167:	e8 00 00 00 00       	callq  1816c <e1000_pcix_get_mmrbc+0xce1>
			18168: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1816c:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   18173:	00 
   18174:	48 85 ff             	test   %rdi,%rdi
   18177:	0f 84 08 06 00 00    	je     18785 <e1000_pcix_get_mmrbc+0x12fa>
   1817d:	ba 08 00 00 00       	mov    $0x8,%edx
   18182:	be 10 03 00 00       	mov    $0x310,%esi
   18187:	31 db                	xor    %ebx,%ebx
   18189:	e8 00 00 00 00       	callq  1818e <e1000_pcix_get_mmrbc+0xd03>
			1818a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1818e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18195:	00 
   18196:	b9 08 00 00 00       	mov    $0x8,%ecx
   1819b:	4c 89 fa             	mov    %r15,%rdx
   1819e:	4c 89 ee             	mov    %r13,%rsi
   181a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			181a4: R_X86_64_32S	.rodata.str1.1+0x20bc
   181a8:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   181af:	e8 00 00 00 00       	callq  181b4 <e1000_pcix_get_mmrbc+0xd29>
			181b0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   181b4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   181bb:	00 
   181bc:	b9 02 00 00 00       	mov    $0x2,%ecx
   181c1:	4c 89 fa             	mov    %r15,%rdx
   181c4:	4c 89 ee             	mov    %r13,%rsi
   181c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			181ca: R_X86_64_32S	.rodata.str1.1+0x20bc
   181ce:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   181d5:	e8 00 00 00 00       	callq  181da <e1000_pcix_get_mmrbc+0xd4f>
			181d6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   181da:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   181e1:	00 
   181e2:	b9 08 00 00 00       	mov    $0x8,%ecx
   181e7:	4c 89 fa             	mov    %r15,%rdx
   181ea:	4c 89 ee             	mov    %r13,%rsi
   181ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			181f0: R_X86_64_32S	.rodata.str1.1+0x20bc
   181f4:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   181fb:	e8 00 00 00 00       	callq  18200 <e1000_pcix_get_mmrbc+0xd75>
			181fc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18200:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18207:	00 
   18208:	b9 04 00 00 00       	mov    $0x4,%ecx
   1820d:	4c 89 fa             	mov    %r15,%rdx
   18210:	4c 89 ee             	mov    %r13,%rsi
   18213:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18216: R_X86_64_32S	.rodata.str1.1+0x20bc
   1821a:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   18221:	e8 00 00 00 00       	callq  18226 <e1000_pcix_get_mmrbc+0xd9b>
			18222: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18226:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1822d:	00 
   1822e:	b9 04 00 00 00       	mov    $0x4,%ecx
   18233:	4c 89 fa             	mov    %r15,%rdx
   18236:	4c 89 ee             	mov    %r13,%rsi
   18239:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1823c: R_X86_64_32S	.rodata.str1.1+0x20bc
   18240:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   18247:	e8 00 00 00 00       	callq  1824c <e1000_pcix_get_mmrbc+0xdc1>
			18248: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1824c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18253:	00 
   18254:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1825a:	4c 89 fa             	mov    %r15,%rdx
   1825d:	4c 89 ee             	mov    %r13,%rsi
   18260:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18263: R_X86_64_32S	.rodata.str1.1+0x20bc
   18267:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1826e:	e8 00 00 00 00       	callq  18273 <e1000_pcix_get_mmrbc+0xde8>
			1826f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18273:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1827a:	00 
   1827b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18281:	4c 89 fa             	mov    %r15,%rdx
   18284:	4c 89 ee             	mov    %r13,%rsi
   18287:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1828a: R_X86_64_32S	.rodata.str1.1+0x20bc
   1828e:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   18295:	e8 00 00 00 00       	callq  1829a <e1000_pcix_get_mmrbc+0xe0f>
			18296: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1829a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   182a1:	00 
   182a2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   182a8:	4c 89 fa             	mov    %r15,%rdx
   182ab:	4c 89 ee             	mov    %r13,%rsi
   182ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			182b1: R_X86_64_32S	.rodata.str1.1+0x20bc
   182b5:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   182bc:	e8 00 00 00 00       	callq  182c1 <e1000_pcix_get_mmrbc+0xe36>
			182bd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   182c1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   182c8:	00 
   182c9:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   182cd:	b9 01 00 00 00       	mov    $0x1,%ecx
   182d2:	4c 89 ee             	mov    %r13,%rsi
   182d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			182d8: R_X86_64_32S	.rodata.str1.1+0x20bc
   182dc:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   182e3:	49 01 d8             	add    %rbx,%r8
   182e6:	48 ff c3             	inc    %rbx
   182e9:	e8 00 00 00 00       	callq  182ee <e1000_pcix_get_mmrbc+0xe63>
			182ea: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   182ee:	48 83 fb 20          	cmp    $0x20,%rbx
   182f2:	75 cd                	jne    182c1 <e1000_pcix_get_mmrbc+0xe36>
   182f4:	30 db                	xor    %bl,%bl
   182f6:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   182fd:	00 
   182fe:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   18302:	b9 01 00 00 00       	mov    $0x1,%ecx
   18307:	4c 89 ee             	mov    %r13,%rsi
   1830a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1830d: R_X86_64_32S	.rodata.str1.1+0x20bc
   18311:	4c 89 f2             	mov    %r14,%rdx
   18314:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   1831b:	49 01 d8             	add    %rbx,%r8
   1831e:	48 ff c3             	inc    %rbx
   18321:	e8 00 00 00 00       	callq  18326 <e1000_pcix_get_mmrbc+0xe9b>
			18322: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18326:	48 83 fb 20          	cmp    $0x20,%rbx
   1832a:	75 ca                	jne    182f6 <e1000_pcix_get_mmrbc+0xe6b>
   1832c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18333:	00 
   18334:	b9 02 00 00 00       	mov    $0x2,%ecx
   18339:	4c 89 f2             	mov    %r14,%rdx
   1833c:	4c 89 ee             	mov    %r13,%rsi
   1833f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18342: R_X86_64_32S	.rodata.str1.1+0x20bc
   18346:	30 db                	xor    %bl,%bl
   18348:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   1834f:	e8 00 00 00 00       	callq  18354 <e1000_pcix_get_mmrbc+0xec9>
			18350: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18354:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1835b:	00 
   1835c:	ba 08 00 00 00       	mov    $0x8,%edx
   18361:	be 48 00 00 00       	mov    $0x48,%esi
   18366:	e8 00 00 00 00       	callq  1836b <e1000_pcix_get_mmrbc+0xee0>
			18367: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1836b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18372:	00 
   18373:	b9 08 00 00 00       	mov    $0x8,%ecx
   18378:	4c 89 f2             	mov    %r14,%rdx
   1837b:	4c 89 ee             	mov    %r13,%rsi
   1837e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18381: R_X86_64_32S	.rodata.str1.1+0x20bc
   18385:	49 83 c0 48          	add    $0x48,%r8
   18389:	e8 00 00 00 00       	callq  1838e <e1000_pcix_get_mmrbc+0xf03>
			1838a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1838e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18395:	00 
   18396:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1839a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1839f:	4c 89 ee             	mov    %r13,%rsi
   183a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			183a5: R_X86_64_32S	.rodata.str1.1+0x20bc
   183a9:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   183b0:	49 01 d8             	add    %rbx,%r8
   183b3:	48 ff c3             	inc    %rbx
   183b6:	e8 00 00 00 00       	callq  183bb <e1000_pcix_get_mmrbc+0xf30>
			183b7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   183bb:	48 83 fb 20          	cmp    $0x20,%rbx
   183bf:	75 cd                	jne    1838e <e1000_pcix_get_mmrbc+0xf03>
   183c1:	30 db                	xor    %bl,%bl
   183c3:	49 89 d8             	mov    %rbx,%r8
   183c6:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   183cd:	00 
   183ce:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   183d2:	b9 01 00 00 00       	mov    $0x1,%ecx
   183d7:	4c 89 ee             	mov    %r13,%rsi
   183da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			183dd: R_X86_64_32S	.rodata.str1.1+0x20bc
   183e1:	4c 89 f2             	mov    %r14,%rdx
   183e4:	48 ff c3             	inc    %rbx
   183e7:	e8 00 00 00 00       	callq  183ec <e1000_pcix_get_mmrbc+0xf61>
			183e8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   183ec:	48 83 fb 10          	cmp    $0x10,%rbx
   183f0:	75 d1                	jne    183c3 <e1000_pcix_get_mmrbc+0xf38>
   183f2:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   183f9:	00 
   183fa:	ba 10 00 00 00       	mov    $0x10,%edx
   183ff:	be 18 04 00 00       	mov    $0x418,%esi
   18404:	e8 00 00 00 00       	callq  18409 <e1000_pcix_get_mmrbc+0xf7e>
			18405: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   18409:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18410:	00 
   18411:	b9 01 00 00 00       	mov    $0x1,%ecx
   18416:	4c 89 f2             	mov    %r14,%rdx
   18419:	4c 89 ee             	mov    %r13,%rsi
   1841c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1841f: R_X86_64_32S	.rodata.str1.1+0x20bc
   18423:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   1842a:	e8 00 00 00 00       	callq  1842f <e1000_pcix_get_mmrbc+0xfa4>
			1842b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1842f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18436:	00 
   18437:	b9 04 00 00 00       	mov    $0x4,%ecx
   1843c:	4c 89 f2             	mov    %r14,%rdx
   1843f:	4c 89 ee             	mov    %r13,%rsi
   18442:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18445: R_X86_64_32S	.rodata.str1.1+0x20bc
   18449:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   18450:	e8 00 00 00 00       	callq  18455 <e1000_pcix_get_mmrbc+0xfca>
			18451: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18455:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1845c:	00 
   1845d:	b9 08 00 00 00       	mov    $0x8,%ecx
   18462:	4c 89 f2             	mov    %r14,%rdx
   18465:	4c 89 ee             	mov    %r13,%rsi
   18468:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1846b: R_X86_64_32S	.rodata.str1.1+0x20bc
   1846f:	49 83 c0 70          	add    $0x70,%r8
   18473:	e8 00 00 00 00       	callq  18478 <e1000_pcix_get_mmrbc+0xfed>
			18474: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18478:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1847f:	00 
   18480:	ba 10 00 00 00       	mov    $0x10,%edx
   18485:	be 10 00 00 00       	mov    $0x10,%esi
   1848a:	e8 00 00 00 00       	callq  1848f <e1000_pcix_get_mmrbc+0x1004>
			1848b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1848f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   18496:	00 
   18497:	b9 04 00 00 00       	mov    $0x4,%ecx
   1849c:	4c 89 f2             	mov    %r14,%rdx
   1849f:	4c 89 ee             	mov    %r13,%rsi
   184a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			184a5: R_X86_64_32S	.rodata.str1.1+0x20bc
   184a9:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   184b0:	e8 00 00 00 00       	callq  184b5 <e1000_pcix_get_mmrbc+0x102a>
			184b1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   184b5:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   184bc:	00 
   184bd:	b9 08 00 00 00       	mov    $0x8,%ecx
   184c2:	4c 89 f2             	mov    %r14,%rdx
   184c5:	4c 89 ee             	mov    %r13,%rsi
   184c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			184cb: R_X86_64_32S	.rodata.str1.1+0x20bc
   184cf:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   184d6:	e8 00 00 00 00       	callq  184db <e1000_pcix_get_mmrbc+0x1050>
			184d7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   184db:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   184e2:	00 
   184e3:	b9 04 00 00 00       	mov    $0x4,%ecx
   184e8:	4c 89 f2             	mov    %r14,%rdx
   184eb:	4c 89 ee             	mov    %r13,%rsi
   184ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			184f1: R_X86_64_32S	.rodata.str1.1+0x20bc
   184f5:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   184fc:	e8 00 00 00 00       	callq  18501 <e1000_pcix_get_mmrbc+0x1076>
			184fd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18501:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18508:	00 
   18509:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1850f:	4c 89 f2             	mov    %r14,%rdx
   18512:	4c 89 ee             	mov    %r13,%rsi
   18515:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18518: R_X86_64_32S	.rodata.str1.1+0x20bc
   1851c:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   18523:	e8 00 00 00 00       	callq  18528 <e1000_pcix_get_mmrbc+0x109d>
			18524: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18528:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1852f:	00 
   18530:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   18537:	00 
   18538:	74 63                	je     1859d <e1000_pcix_get_mmrbc+0x1112>
   1853a:	30 db                	xor    %bl,%bl
   1853c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18543:	00 
   18544:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   18548:	b9 01 00 00 00       	mov    $0x1,%ecx
   1854d:	4c 89 ee             	mov    %r13,%rsi
   18550:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18553: R_X86_64_32S	.rodata.str1.1+0x20bc
   18557:	4c 89 f2             	mov    %r14,%rdx
   1855a:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   18561:	49 83 c0 08          	add    $0x8,%r8
   18565:	49 01 d8             	add    %rbx,%r8
   18568:	48 ff c3             	inc    %rbx
   1856b:	e8 00 00 00 00       	callq  18570 <e1000_pcix_get_mmrbc+0x10e5>
			1856c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18570:	48 83 fb 20          	cmp    $0x20,%rbx
   18574:	75 c6                	jne    1853c <e1000_pcix_get_mmrbc+0x10b1>
   18576:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1857d:	00 
   1857e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   18584:	4c 89 f2             	mov    %r14,%rdx
   18587:	4c 89 ee             	mov    %r13,%rsi
   1858a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1858d: R_X86_64_32S	.rodata.str1.1+0x20bc
   18591:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   18598:	e8 00 00 00 00       	callq  1859d <e1000_pcix_get_mmrbc+0x1112>
			18599: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1859d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   185a4:	00 
   185a5:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   185a9:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   185af:	4c 89 ee             	mov    %r13,%rsi
   185b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			185b5: R_X86_64_32S	.rodata.str1.1+0x20bc
   185b9:	48 89 da             	mov    %rbx,%rdx
   185bc:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   185c3:	e8 00 00 00 00       	callq  185c8 <e1000_pcix_get_mmrbc+0x113d>
			185c4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   185c8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   185cf:	00 
   185d0:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   185d6:	48 89 da             	mov    %rbx,%rdx
   185d9:	4c 89 ee             	mov    %r13,%rsi
   185dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			185df: R_X86_64_32S	.rodata.str1.1+0x20bc
   185e3:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   185ea:	e8 00 00 00 00       	callq  185ef <e1000_pcix_get_mmrbc+0x1164>
			185eb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   185ef:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   185f6:	00 
   185f7:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   185fe:	48 85 c0             	test   %rax,%rax
   18601:	74 47                	je     1864a <e1000_pcix_get_mmrbc+0x11bf>
   18603:	48 8d 48 60          	lea    0x60(%rax),%rcx
   18607:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1860d:	48 89 da             	mov    %rbx,%rdx
   18610:	4c 89 ee             	mov    %r13,%rsi
   18613:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18616: R_X86_64_32S	.rodata.str1.1+0x20bc
   1861a:	e8 00 00 00 00       	callq  1861f <e1000_pcix_get_mmrbc+0x1194>
			1861b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1861f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18626:	00 
   18627:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1862d:	48 89 da             	mov    %rbx,%rdx
   18630:	4c 89 ee             	mov    %r13,%rsi
   18633:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18636: R_X86_64_32S	.rodata.str1.1+0x20bc
   1863a:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   18641:	48 83 c1 58          	add    $0x58,%rcx
   18645:	e8 00 00 00 00       	callq  1864a <e1000_pcix_get_mmrbc+0x11bf>
			18646: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1864a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18651:	00 
   18652:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18655: R_X86_64_32S	.rodata.str1.1+0x20bc
   18659:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   1865f:	48 89 da             	mov    %rbx,%rdx
   18662:	4c 89 ee             	mov    %r13,%rsi
   18665:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1866c:	e8 00 00 00 00       	callq  18671 <e1000_pcix_get_mmrbc+0x11e6>
			1866d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18671:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18678:	00 
   18679:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   18680:	48 85 ff             	test   %rdi,%rdi
   18683:	74 64                	je     186e9 <e1000_pcix_get_mmrbc+0x125e>
   18685:	ba 08 00 00 00       	mov    $0x8,%edx
   1868a:	be 10 00 00 00       	mov    $0x10,%esi
   1868f:	e8 00 00 00 00       	callq  18694 <e1000_pcix_get_mmrbc+0x1209>
			18690: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   18694:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1869b:	00 
   1869c:	b9 08 00 00 00       	mov    $0x8,%ecx
   186a1:	48 89 da             	mov    %rbx,%rdx
   186a4:	4c 89 ee             	mov    %r13,%rsi
   186a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			186aa: R_X86_64_32S	.rodata.str1.1+0x20bc
   186ae:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   186b5:	49 83 c0 10          	add    $0x10,%r8
   186b9:	e8 00 00 00 00       	callq  186be <e1000_pcix_get_mmrbc+0x1233>
			186ba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   186be:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   186c5:	00 
   186c6:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   186cc:	48 89 da             	mov    %rbx,%rdx
   186cf:	4c 89 ee             	mov    %r13,%rsi
   186d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			186d5: R_X86_64_32S	.rodata.str1.1+0x20bc
   186d9:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   186e0:	48 83 c1 08          	add    $0x8,%rcx
   186e4:	e8 00 00 00 00       	callq  186e9 <e1000_pcix_get_mmrbc+0x125e>
			186e5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   186e9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   186f0:	00 
   186f1:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   186f7:	48 89 da             	mov    %rbx,%rdx
   186fa:	4c 89 ee             	mov    %r13,%rsi
   186fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18700: R_X86_64_32S	.rodata.str1.1+0x20bc
   18704:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   1870b:	e8 00 00 00 00       	callq  18710 <e1000_pcix_get_mmrbc+0x1285>
			1870c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18710:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18717:	00 
   18718:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   1871f:	00 
   18720:	74 63                	je     18785 <e1000_pcix_get_mmrbc+0x12fa>
   18722:	31 db                	xor    %ebx,%ebx
   18724:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1872b:	00 
   1872c:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   18730:	b9 01 00 00 00       	mov    $0x1,%ecx
   18735:	4c 89 ee             	mov    %r13,%rsi
   18738:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1873b: R_X86_64_32S	.rodata.str1.1+0x20bc
   1873f:	4c 89 f2             	mov    %r14,%rdx
   18742:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   18749:	49 83 c0 08          	add    $0x8,%r8
   1874d:	49 01 d8             	add    %rbx,%r8
   18750:	48 ff c3             	inc    %rbx
   18753:	e8 00 00 00 00       	callq  18758 <e1000_pcix_get_mmrbc+0x12cd>
			18754: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   18758:	48 83 fb 20          	cmp    $0x20,%rbx
   1875c:	75 c6                	jne    18724 <e1000_pcix_get_mmrbc+0x1299>
   1875e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18765:	00 
   18766:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1876c:	4c 89 f2             	mov    %r14,%rdx
   1876f:	4c 89 ee             	mov    %r13,%rsi
   18772:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18775: R_X86_64_32S	.rodata.str1.1+0x20bc
   18779:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   18780:	e8 00 00 00 00       	callq  18785 <e1000_pcix_get_mmrbc+0x12fa>
			18781: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   18785:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   18789:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   18790:	00 
   18791:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   18797:	4c 89 ee             	mov    %r13,%rsi
   1879a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1879d: R_X86_64_32S	.rodata.str1.1+0x20bc
   187a1:	48 89 da             	mov    %rbx,%rdx
   187a4:	e8 00 00 00 00       	callq  187a9 <e1000_pcix_get_mmrbc+0x131e>
			187a5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   187a9:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   187b0:	00 
   187b1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   187b7:	48 89 da             	mov    %rbx,%rdx
   187ba:	4c 89 ee             	mov    %r13,%rsi
   187bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			187c0: R_X86_64_32S	.rodata.str1.1+0x20bc
   187c4:	e8 00 00 00 00       	callq  187c9 <e1000_pcix_get_mmrbc+0x133e>
			187c5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   187c9:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   187d0:	00 
   187d1:	48 85 c0             	test   %rax,%rax
   187d4:	74 1a                	je     187f0 <e1000_pcix_get_mmrbc+0x1365>
   187d6:	49 89 c0             	mov    %rax,%r8
   187d9:	b9 08 00 00 00       	mov    $0x8,%ecx
   187de:	48 89 da             	mov    %rbx,%rdx
   187e1:	4c 89 ee             	mov    %r13,%rsi
   187e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			187e7: R_X86_64_32S	.rodata.str1.1+0x20bc
   187eb:	e8 00 00 00 00       	callq  187f0 <e1000_pcix_get_mmrbc+0x1365>
			187ec: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   187f0:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   187f4:	b9 02 00 00 00       	mov    $0x2,%ecx
   187f9:	48 89 da             	mov    %rbx,%rdx
   187fc:	4c 89 ee             	mov    %r13,%rsi
   187ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18802: R_X86_64_32S	.rodata.str1.1+0x20bc
   18806:	49 83 c0 3c          	add    $0x3c,%r8
   1880a:	e8 00 00 00 00       	callq  1880f <e1000_pcix_get_mmrbc+0x1384>
			1880b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1880f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   18813:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   18819:	48 89 da             	mov    %rbx,%rdx
   1881c:	4c 89 ee             	mov    %r13,%rsi
   1881f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18822: R_X86_64_32S	.rodata.str1.1+0x20bc
   18826:	48 83 c1 10          	add    $0x10,%rcx
   1882a:	e8 00 00 00 00       	callq  1882f <e1000_pcix_get_mmrbc+0x13a4>
			1882b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1882f:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   18833:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   18837:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1883a: R_X86_64_32S	.rodata.str1.1+0x20bc
   1883e:	b9 04 00 00 00       	mov    $0x4,%ecx
   18843:	4c 89 ee             	mov    %r13,%rsi
   18846:	e8 00 00 00 00       	callq  1884b <e1000_pcix_get_mmrbc+0x13c0>
			18847: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1884b:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   1884f:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
   18852:	48 85 ff             	test   %rdi,%rdi
   18855:	74 05                	je     1885c <e1000_pcix_get_mmrbc+0x13d1>
   18857:	e8 00 00 00 00       	callq  1885c <e1000_pcix_get_mmrbc+0x13d1>
			18858: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1885c:	48 83 c4 48          	add    $0x48,%rsp
   18860:	89 d8                	mov    %ebx,%eax
   18862:	5b                   	pop    %rbx
   18863:	41 5c                	pop    %r12
   18865:	41 5d                	pop    %r13
   18867:	41 5e                	pop    %r14
   18869:	41 5f                	pop    %r15
   1886b:	c9                   	leaveq 
   1886c:	c3                   	retq   

000000000001886d <pci_enable_device_mem>:
   1886d:	55                   	push   %rbp
   1886e:	48 89 e5             	mov    %rsp,%rbp
   18871:	41 57                	push   %r15
   18873:	41 56                	push   %r14
   18875:	41 55                	push   %r13
   18877:	41 54                	push   %r12
   18879:	53                   	push   %rbx
   1887a:	48 83 ec 48          	sub    $0x48,%rsp
   1887e:	48 89 7d 98          	mov    %rdi,0xffffffffffffff98(%rbp)
   18882:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18885: R_X86_64_32S	.rodata.str1.1+0x2105
   18889:	e8 00 00 00 00       	callq  1888e <pci_enable_device_mem+0x21>
			1888a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1888e:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   18892:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18895: R_X86_64_32S	.rodata.str1.1+0x211b
   18899:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   188a0:	00 
   188a1:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   188a8:	00 
   188a9:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   188b0:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   188b4:	e8 00 00 00 00       	callq  188b9 <pci_enable_device_mem+0x4c>
			188b5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   188b9:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   188bd:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   188c1:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   188c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			188c8: R_X86_64_32S	.rodata.str1.1+0x2105
   188cc:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   188d3:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   188da:	00 
   188db:	e8 00 00 00 00       	callq  188e0 <pci_enable_device_mem+0x73>
			188dc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   188e0:	48 83 7d c0 00       	cmpq   $0x0,0xffffffffffffffc0(%rbp)
   188e5:	0f 84 5c 09 00 00    	je     19247 <pci_enable_device_mem+0x9da>
   188eb:	45 31 ff             	xor    %r15d,%r15d
   188ee:	45 31 f6             	xor    %r14d,%r14d
   188f1:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   188f8:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   188fc:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   18900:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18906:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18909: R_X86_64_32S	.rodata.str1.1+0x2105
   1890d:	41 ff c7             	inc    %r15d
   18910:	48 89 d9             	mov    %rbx,%rcx
   18913:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
   18917:	4c 89 e2             	mov    %r12,%rdx
   1891a:	4c 89 ee             	mov    %r13,%rsi
   1891d:	48 83 c1 08          	add    $0x8,%rcx
   18921:	e8 00 00 00 00       	callq  18926 <pci_enable_device_mem+0xb9>
			18922: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18926:	48 03 5d c0          	add    0xffffffffffffffc0(%rbp),%rbx
   1892a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18930:	4c 89 e2             	mov    %r12,%rdx
   18933:	4c 89 ee             	mov    %r13,%rsi
   18936:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18939: R_X86_64_32S	.rodata.str1.1+0x2105
   1893d:	48 89 d9             	mov    %rbx,%rcx
   18940:	e8 00 00 00 00       	callq  18945 <pci_enable_device_mem+0xd8>
			18941: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18945:	4c 89 f1             	mov    %r14,%rcx
   18948:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
   1894c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18952:	4c 89 e2             	mov    %r12,%rdx
   18955:	4c 89 ee             	mov    %r13,%rsi
   18958:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1895b: R_X86_64_32S	.rodata.str1.1+0x2105
   1895f:	49 83 c6 38          	add    $0x38,%r14
   18963:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   1896a:	e8 00 00 00 00       	callq  1896f <pci_enable_device_mem+0x102>
			1896b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1896f:	41 83 ff 0c          	cmp    $0xc,%r15d
   18973:	0f 85 78 ff ff ff    	jne    188f1 <pci_enable_device_mem+0x84>
   18979:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   1897d:	4c 89 e2             	mov    %r12,%rdx
   18980:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18986:	4c 89 ee             	mov    %r13,%rsi
   18989:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1898c: R_X86_64_32S	.rodata.str1.1+0x2105
   18990:	45 31 ff             	xor    %r15d,%r15d
   18993:	48 83 c1 48          	add    $0x48,%rcx
   18997:	e8 00 00 00 00       	callq  1899c <pci_enable_device_mem+0x12f>
			18998: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1899c:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   189a0:	4c 89 e2             	mov    %r12,%rdx
   189a3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   189a9:	4c 89 ee             	mov    %r13,%rsi
   189ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			189af: R_X86_64_32S	.rodata.str1.1+0x2105
   189b3:	48 83 c1 38          	add    $0x38,%rcx
   189b7:	e8 00 00 00 00       	callq  189bc <pci_enable_device_mem+0x14f>
			189b8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   189bc:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   189c0:	4c 89 e2             	mov    %r12,%rdx
   189c3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   189c9:	4c 89 ee             	mov    %r13,%rsi
   189cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			189cf: R_X86_64_32S	.rodata.str1.1+0x2105
   189d3:	48 83 c1 7c          	add    $0x7c,%rcx
   189d7:	e8 00 00 00 00       	callq  189dc <pci_enable_device_mem+0x16f>
			189d8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   189dc:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   189e0:	4c 89 e2             	mov    %r12,%rdx
   189e3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   189e9:	4c 89 ee             	mov    %r13,%rsi
   189ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			189ef: R_X86_64_32S	.rodata.str1.1+0x2105
   189f3:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   189fa:	e8 00 00 00 00       	callq  189ff <pci_enable_device_mem+0x192>
			189fb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   189ff:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   18a03:	4c 89 e2             	mov    %r12,%rdx
   18a06:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   18a0c:	4c 89 ee             	mov    %r13,%rsi
   18a0f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18a12: R_X86_64_32S	.rodata.str1.1+0x2105
   18a16:	48 83 c1 3e          	add    $0x3e,%rcx
   18a1a:	e8 00 00 00 00       	callq  18a1f <pci_enable_device_mem+0x1b2>
			18a1b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18a1f:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   18a23:	4c 89 e2             	mov    %r12,%rdx
   18a26:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   18a2c:	4c 89 ee             	mov    %r13,%rsi
   18a2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18a32: R_X86_64_32S	.rodata.str1.1+0x2105
   18a36:	48 83 c1 42          	add    $0x42,%rcx
   18a3a:	e8 00 00 00 00       	callq  18a3f <pci_enable_device_mem+0x1d2>
			18a3b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18a3f:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
   18a43:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   18a47:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   18a4e:	00 
   18a4f:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   18a53:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   18a57:	48 89 d9             	mov    %rbx,%rcx
   18a5a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18a60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18a63: R_X86_64_32S	.rodata.str1.1+0x2105
   18a67:	49 ff c7             	inc    %r15
   18a6a:	4c 89 ea             	mov    %r13,%rdx
   18a6d:	4c 89 f6             	mov    %r14,%rsi
   18a70:	48 ff c3             	inc    %rbx
   18a73:	e8 00 00 00 00       	callq  18a78 <pci_enable_device_mem+0x20b>
			18a74: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18a78:	49 83 ff 14          	cmp    $0x14,%r15
   18a7c:	75 d1                	jne    18a4f <pci_enable_device_mem+0x1e2>
   18a7e:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   18a85:	00 
   18a86:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   18a8a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18a90:	4c 89 ea             	mov    %r13,%rdx
   18a93:	4c 89 f6             	mov    %r14,%rsi
   18a96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18a99: R_X86_64_32S	.rodata.str1.1+0x2105
   18a9d:	48 89 d9             	mov    %rbx,%rcx
   18aa0:	83 e0 01             	and    $0x1,%eax
   18aa3:	0f b6 c0             	movzbl %al,%eax
   18aa6:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   18aa9:	e8 00 00 00 00       	callq  18aae <pci_enable_device_mem+0x241>
			18aaa: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18aae:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   18ab5:	00 
   18ab6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18abc:	48 89 d9             	mov    %rbx,%rcx
   18abf:	4c 89 ea             	mov    %r13,%rdx
   18ac2:	4c 89 f6             	mov    %r14,%rsi
   18ac5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18ac8: R_X86_64_32S	.rodata.str1.1+0x2105
   18acc:	d0 e8                	shr    %al
   18ace:	83 e0 01             	and    $0x1,%eax
   18ad1:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   18ad4:	e8 00 00 00 00       	callq  18ad9 <pci_enable_device_mem+0x26c>
			18ad5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18ad9:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   18ae0:	00 
   18ae1:	4c 89 ea             	mov    %r13,%rdx
   18ae4:	4c 89 f6             	mov    %r14,%rsi
   18ae7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18aea: R_X86_64_32S	.rodata.str1.1+0x2105
   18aee:	e8 00 00 00 00       	callq  18af3 <pci_enable_device_mem+0x286>
			18aef: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18af3:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   18afa:	00 
   18afb:	48 85 c0             	test   %rax,%rax
   18afe:	0f 84 ac 00 00 00    	je     18bb0 <pci_enable_device_mem+0x343>
   18b04:	48 8d 48 18          	lea    0x18(%rax),%rcx
   18b08:	4c 89 ea             	mov    %r13,%rdx
   18b0b:	4c 89 f6             	mov    %r14,%rsi
   18b0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18b11: R_X86_64_32S	.rodata.str1.1+0x2105
   18b15:	e8 00 00 00 00       	callq  18b1a <pci_enable_device_mem+0x2ad>
			18b16: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18b1a:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18b21:	00 
   18b22:	4c 89 ea             	mov    %r13,%rdx
   18b25:	4c 89 f6             	mov    %r14,%rsi
   18b28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18b2b: R_X86_64_32S	.rodata.str1.1+0x2105
   18b2f:	48 83 c1 20          	add    $0x20,%rcx
   18b33:	e8 00 00 00 00       	callq  18b38 <pci_enable_device_mem+0x2cb>
			18b34: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18b38:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18b3f:	00 
   18b40:	4c 89 ea             	mov    %r13,%rdx
   18b43:	4c 89 f6             	mov    %r14,%rsi
   18b46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18b49: R_X86_64_32S	.rodata.str1.1+0x2105
   18b4d:	48 83 c1 30          	add    $0x30,%rcx
   18b51:	e8 00 00 00 00       	callq  18b56 <pci_enable_device_mem+0x2e9>
			18b52: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18b56:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18b5d:	00 
   18b5e:	4c 89 ea             	mov    %r13,%rdx
   18b61:	4c 89 f6             	mov    %r14,%rsi
   18b64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18b67: R_X86_64_32S	.rodata.str1.1+0x2105
   18b6b:	48 83 c1 10          	add    $0x10,%rcx
   18b6f:	e8 00 00 00 00       	callq  18b74 <pci_enable_device_mem+0x307>
			18b70: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18b74:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18b7b:	00 
   18b7c:	4c 89 ea             	mov    %r13,%rdx
   18b7f:	4c 89 f6             	mov    %r14,%rsi
   18b82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18b85: R_X86_64_32S	.rodata.str1.1+0x2105
   18b89:	48 83 c1 28          	add    $0x28,%rcx
   18b8d:	e8 00 00 00 00       	callq  18b92 <pci_enable_device_mem+0x325>
			18b8e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18b92:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   18b99:	00 
   18b9a:	4c 89 ea             	mov    %r13,%rdx
   18b9d:	4c 89 f6             	mov    %r14,%rsi
   18ba0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18ba3: R_X86_64_32S	.rodata.str1.1+0x2105
   18ba7:	48 83 c1 08          	add    $0x8,%rcx
   18bab:	e8 00 00 00 00       	callq  18bb0 <pci_enable_device_mem+0x343>
			18bac: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18bb0:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   18bb7:	00 
   18bb8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18bbe:	4c 89 ea             	mov    %r13,%rdx
   18bc1:	4c 89 f6             	mov    %r14,%rsi
   18bc4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18bc7: R_X86_64_32S	.rodata.str1.1+0x2105
   18bcb:	e8 00 00 00 00       	callq  18bd0 <pci_enable_device_mem+0x363>
			18bcc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18bd0:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   18bd7:	00 
   18bd8:	4c 89 ea             	mov    %r13,%rdx
   18bdb:	4c 89 f6             	mov    %r14,%rsi
   18bde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18be1: R_X86_64_32S	.rodata.str1.1+0x2105
   18be5:	e8 00 00 00 00       	callq  18bea <pci_enable_device_mem+0x37d>
			18be6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18bea:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18bf1:	00 
   18bf2:	48 85 c0             	test   %rax,%rax
   18bf5:	0f 84 91 05 00 00    	je     1918c <pci_enable_device_mem+0x91f>
   18bfb:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   18c02:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18c08:	4c 89 ea             	mov    %r13,%rdx
   18c0b:	4c 89 f6             	mov    %r14,%rsi
   18c0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18c11: R_X86_64_32S	.rodata.str1.1+0x2105
   18c15:	31 db                	xor    %ebx,%ebx
   18c17:	e8 00 00 00 00       	callq  18c1c <pci_enable_device_mem+0x3af>
			18c18: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18c1c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18c23:	00 
   18c24:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   18c2a:	4c 89 ea             	mov    %r13,%rdx
   18c2d:	4c 89 f6             	mov    %r14,%rsi
   18c30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18c33: R_X86_64_32S	.rodata.str1.1+0x2105
   18c37:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   18c3e:	e8 00 00 00 00       	callq  18c43 <pci_enable_device_mem+0x3d6>
			18c3f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18c43:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18c4a:	00 
   18c4b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18c51:	4c 89 ea             	mov    %r13,%rdx
   18c54:	4c 89 f6             	mov    %r14,%rsi
   18c57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18c5a: R_X86_64_32S	.rodata.str1.1+0x2105
   18c5e:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   18c65:	e8 00 00 00 00       	callq  18c6a <pci_enable_device_mem+0x3fd>
			18c66: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18c6a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18c71:	00 
   18c72:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18c78:	4c 89 ea             	mov    %r13,%rdx
   18c7b:	4c 89 f6             	mov    %r14,%rsi
   18c7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18c81: R_X86_64_32S	.rodata.str1.1+0x2105
   18c85:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   18c8c:	e8 00 00 00 00       	callq  18c91 <pci_enable_device_mem+0x424>
			18c8d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18c91:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18c98:	00 
   18c99:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18c9f:	4c 89 ea             	mov    %r13,%rdx
   18ca2:	4c 89 f6             	mov    %r14,%rsi
   18ca5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18ca8: R_X86_64_32S	.rodata.str1.1+0x2105
   18cac:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   18cb3:	e8 00 00 00 00       	callq  18cb8 <pci_enable_device_mem+0x44b>
			18cb4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18cb8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18cbf:	00 
   18cc0:	4c 89 ea             	mov    %r13,%rdx
   18cc3:	4c 89 f6             	mov    %r14,%rsi
   18cc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18cc9: R_X86_64_32S	.rodata.str1.1+0x2105
   18ccd:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   18cd4:	e8 00 00 00 00       	callq  18cd9 <pci_enable_device_mem+0x46c>
			18cd5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18cd9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18ce0:	00 
   18ce1:	4c 89 ea             	mov    %r13,%rdx
   18ce4:	4c 89 f6             	mov    %r14,%rsi
   18ce7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18cea: R_X86_64_32S	.rodata.str1.1+0x2105
   18cee:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   18cf5:	e8 00 00 00 00       	callq  18cfa <pci_enable_device_mem+0x48d>
			18cf6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18cfa:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18d01:	00 
   18d02:	4c 89 ea             	mov    %r13,%rdx
   18d05:	4c 89 f6             	mov    %r14,%rsi
   18d08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18d0b: R_X86_64_32S	.rodata.str1.1+0x2105
   18d0f:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   18d16:	e8 00 00 00 00       	callq  18d1b <pci_enable_device_mem+0x4ae>
			18d17: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18d1b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18d22:	00 
   18d23:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   18d27:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   18d2b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18d31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18d34: R_X86_64_32S	.rodata.str1.1+0x2105
   18d38:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   18d3f:	48 01 d9             	add    %rbx,%rcx
   18d42:	48 ff c3             	inc    %rbx
   18d45:	e8 00 00 00 00       	callq  18d4a <pci_enable_device_mem+0x4dd>
			18d46: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18d4a:	48 83 fb 20          	cmp    $0x20,%rbx
   18d4e:	75 cb                	jne    18d1b <pci_enable_device_mem+0x4ae>
   18d50:	30 db                	xor    %bl,%bl
   18d52:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18d59:	00 
   18d5a:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   18d5e:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   18d62:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18d68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18d6b: R_X86_64_32S	.rodata.str1.1+0x2105
   18d6f:	4c 89 ea             	mov    %r13,%rdx
   18d72:	4c 89 f6             	mov    %r14,%rsi
   18d75:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   18d7c:	48 01 d9             	add    %rbx,%rcx
   18d7f:	48 ff c3             	inc    %rbx
   18d82:	e8 00 00 00 00       	callq  18d87 <pci_enable_device_mem+0x51a>
			18d83: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18d87:	48 83 fb 20          	cmp    $0x20,%rbx
   18d8b:	75 c5                	jne    18d52 <pci_enable_device_mem+0x4e5>
   18d8d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18d94:	00 
   18d95:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   18d9b:	4c 89 ea             	mov    %r13,%rdx
   18d9e:	4c 89 f6             	mov    %r14,%rsi
   18da1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18da4: R_X86_64_32S	.rodata.str1.1+0x2105
   18da8:	30 db                	xor    %bl,%bl
   18daa:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   18db1:	e8 00 00 00 00       	callq  18db6 <pci_enable_device_mem+0x549>
			18db2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18db6:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18dbd:	00 
   18dbe:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18dc4:	4c 89 ea             	mov    %r13,%rdx
   18dc7:	4c 89 f6             	mov    %r14,%rsi
   18dca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18dcd: R_X86_64_32S	.rodata.str1.1+0x2105
   18dd1:	48 83 c1 48          	add    $0x48,%rcx
   18dd5:	e8 00 00 00 00       	callq  18dda <pci_enable_device_mem+0x56d>
			18dd6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18dda:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18de1:	00 
   18de2:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   18de6:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   18dea:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18df0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18df3: R_X86_64_32S	.rodata.str1.1+0x2105
   18df7:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   18dfe:	48 01 d9             	add    %rbx,%rcx
   18e01:	48 ff c3             	inc    %rbx
   18e04:	e8 00 00 00 00       	callq  18e09 <pci_enable_device_mem+0x59c>
			18e05: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18e09:	48 83 fb 20          	cmp    $0x20,%rbx
   18e0d:	75 cb                	jne    18dda <pci_enable_device_mem+0x56d>
   18e0f:	30 db                	xor    %bl,%bl
   18e11:	48 89 d9             	mov    %rbx,%rcx
   18e14:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   18e1b:	00 
   18e1c:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   18e20:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   18e24:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18e2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18e2d: R_X86_64_32S	.rodata.str1.1+0x2105
   18e31:	4c 89 ea             	mov    %r13,%rdx
   18e34:	48 ff c3             	inc    %rbx
   18e37:	4c 89 f6             	mov    %r14,%rsi
   18e3a:	e8 00 00 00 00       	callq  18e3f <pci_enable_device_mem+0x5d2>
			18e3b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18e3f:	48 83 fb 10          	cmp    $0x10,%rbx
   18e43:	75 cc                	jne    18e11 <pci_enable_device_mem+0x5a4>
   18e45:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18e4c:	00 
   18e4d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18e53:	4c 89 ea             	mov    %r13,%rdx
   18e56:	4c 89 f6             	mov    %r14,%rsi
   18e59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18e5c: R_X86_64_32S	.rodata.str1.1+0x2105
   18e60:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   18e67:	e8 00 00 00 00       	callq  18e6c <pci_enable_device_mem+0x5ff>
			18e68: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18e6c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18e73:	00 
   18e74:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18e7a:	4c 89 ea             	mov    %r13,%rdx
   18e7d:	4c 89 f6             	mov    %r14,%rsi
   18e80:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18e83: R_X86_64_32S	.rodata.str1.1+0x2105
   18e87:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   18e8e:	e8 00 00 00 00       	callq  18e93 <pci_enable_device_mem+0x626>
			18e8f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18e93:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18e9a:	00 
   18e9b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18ea1:	4c 89 ea             	mov    %r13,%rdx
   18ea4:	4c 89 f6             	mov    %r14,%rsi
   18ea7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18eaa: R_X86_64_32S	.rodata.str1.1+0x2105
   18eae:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   18eb5:	e8 00 00 00 00       	callq  18eba <pci_enable_device_mem+0x64d>
			18eb6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18eba:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18ec1:	00 
   18ec2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18ec8:	4c 89 ea             	mov    %r13,%rdx
   18ecb:	4c 89 f6             	mov    %r14,%rsi
   18ece:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18ed1: R_X86_64_32S	.rodata.str1.1+0x2105
   18ed5:	48 83 c1 70          	add    $0x70,%rcx
   18ed9:	e8 00 00 00 00       	callq  18ede <pci_enable_device_mem+0x671>
			18eda: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18ede:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18ee5:	00 
   18ee6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18eec:	4c 89 ea             	mov    %r13,%rdx
   18eef:	4c 89 f6             	mov    %r14,%rsi
   18ef2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18ef5: R_X86_64_32S	.rodata.str1.1+0x2105
   18ef9:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   18f00:	e8 00 00 00 00       	callq  18f05 <pci_enable_device_mem+0x698>
			18f01: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18f05:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18f0c:	00 
   18f0d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   18f13:	4c 89 ea             	mov    %r13,%rdx
   18f16:	4c 89 f6             	mov    %r14,%rsi
   18f19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18f1c: R_X86_64_32S	.rodata.str1.1+0x2105
   18f20:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   18f27:	e8 00 00 00 00       	callq  18f2c <pci_enable_device_mem+0x6bf>
			18f28: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18f2c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18f33:	00 
   18f34:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   18f3a:	4c 89 ea             	mov    %r13,%rdx
   18f3d:	4c 89 f6             	mov    %r14,%rsi
   18f40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18f43: R_X86_64_32S	.rodata.str1.1+0x2105
   18f47:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   18f4e:	e8 00 00 00 00       	callq  18f53 <pci_enable_device_mem+0x6e6>
			18f4f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18f53:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18f5a:	00 
   18f5b:	4c 89 ea             	mov    %r13,%rdx
   18f5e:	4c 89 f6             	mov    %r14,%rsi
   18f61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18f64: R_X86_64_32S	.rodata.str1.1+0x2105
   18f68:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   18f6f:	e8 00 00 00 00       	callq  18f74 <pci_enable_device_mem+0x707>
			18f70: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18f74:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18f7b:	00 
   18f7c:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   18f83:	00 
   18f84:	74 62                	je     18fe8 <pci_enable_device_mem+0x77b>
   18f86:	30 db                	xor    %bl,%bl
   18f88:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18f8f:	00 
   18f90:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   18f94:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   18f98:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18f9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18fa1: R_X86_64_32S	.rodata.str1.1+0x2105
   18fa5:	4c 89 ea             	mov    %r13,%rdx
   18fa8:	4c 89 f6             	mov    %r14,%rsi
   18fab:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   18fb2:	48 83 c1 08          	add    $0x8,%rcx
   18fb6:	48 01 d9             	add    %rbx,%rcx
   18fb9:	48 ff c3             	inc    %rbx
   18fbc:	e8 00 00 00 00       	callq  18fc1 <pci_enable_device_mem+0x754>
			18fbd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   18fc1:	48 83 fb 20          	cmp    $0x20,%rbx
   18fc5:	75 c1                	jne    18f88 <pci_enable_device_mem+0x71b>
   18fc7:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   18fce:	00 
   18fcf:	4c 89 ea             	mov    %r13,%rdx
   18fd2:	4c 89 f6             	mov    %r14,%rsi
   18fd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18fd8: R_X86_64_32S	.rodata.str1.1+0x2105
   18fdc:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   18fe3:	e8 00 00 00 00       	callq  18fe8 <pci_enable_device_mem+0x77b>
			18fe4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   18fe8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   18fef:	00 
   18ff0:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   18ff4:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   18ff8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18ffb: R_X86_64_32S	.rodata.str1.1+0x2105
   18fff:	48 89 da             	mov    %rbx,%rdx
   19002:	4c 89 ee             	mov    %r13,%rsi
   19005:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1900c:	e8 00 00 00 00       	callq  19011 <pci_enable_device_mem+0x7a4>
			1900d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19011:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19018:	00 
   19019:	48 89 da             	mov    %rbx,%rdx
   1901c:	4c 89 ee             	mov    %r13,%rsi
   1901f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19022: R_X86_64_32S	.rodata.str1.1+0x2105
   19026:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1902d:	e8 00 00 00 00       	callq  19032 <pci_enable_device_mem+0x7c5>
			1902e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19032:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19039:	00 
   1903a:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   19041:	48 85 c0             	test   %rax,%rax
   19044:	74 3b                	je     19081 <pci_enable_device_mem+0x814>
   19046:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1904a:	48 89 da             	mov    %rbx,%rdx
   1904d:	4c 89 ee             	mov    %r13,%rsi
   19050:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19053: R_X86_64_32S	.rodata.str1.1+0x2105
   19057:	e8 00 00 00 00       	callq  1905c <pci_enable_device_mem+0x7ef>
			19058: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1905c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19063:	00 
   19064:	48 89 da             	mov    %rbx,%rdx
   19067:	4c 89 ee             	mov    %r13,%rsi
   1906a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1906d: R_X86_64_32S	.rodata.str1.1+0x2105
   19071:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   19078:	48 83 c1 58          	add    $0x58,%rcx
   1907c:	e8 00 00 00 00       	callq  19081 <pci_enable_device_mem+0x814>
			1907d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19081:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19088:	00 
   19089:	48 89 da             	mov    %rbx,%rdx
   1908c:	4c 89 ee             	mov    %r13,%rsi
   1908f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19092: R_X86_64_32S	.rodata.str1.1+0x2105
   19096:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1909d:	e8 00 00 00 00       	callq  190a2 <pci_enable_device_mem+0x835>
			1909e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   190a2:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   190a9:	00 
   190aa:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   190b1:	48 85 c0             	test   %rax,%rax
   190b4:	74 41                	je     190f7 <pci_enable_device_mem+0x88a>
   190b6:	48 8d 48 10          	lea    0x10(%rax),%rcx
   190ba:	48 89 da             	mov    %rbx,%rdx
   190bd:	4c 89 ee             	mov    %r13,%rsi
   190c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			190c3: R_X86_64_32S	.rodata.str1.1+0x2105
   190c7:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   190cd:	e8 00 00 00 00       	callq  190d2 <pci_enable_device_mem+0x865>
			190ce: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   190d2:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   190d9:	00 
   190da:	48 89 da             	mov    %rbx,%rdx
   190dd:	4c 89 ee             	mov    %r13,%rsi
   190e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			190e3: R_X86_64_32S	.rodata.str1.1+0x2105
   190e7:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   190ee:	48 83 c1 08          	add    $0x8,%rcx
   190f2:	e8 00 00 00 00       	callq  190f7 <pci_enable_device_mem+0x88a>
			190f3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   190f7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   190fe:	00 
   190ff:	48 89 da             	mov    %rbx,%rdx
   19102:	4c 89 ee             	mov    %r13,%rsi
   19105:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19108: R_X86_64_32S	.rodata.str1.1+0x2105
   1910c:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   19113:	e8 00 00 00 00       	callq  19118 <pci_enable_device_mem+0x8ab>
			19114: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19118:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1911f:	00 
   19120:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   19127:	00 
   19128:	74 62                	je     1918c <pci_enable_device_mem+0x91f>
   1912a:	31 db                	xor    %ebx,%ebx
   1912c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19133:	00 
   19134:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   19138:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1913c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19142:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19145: R_X86_64_32S	.rodata.str1.1+0x2105
   19149:	4c 89 ea             	mov    %r13,%rdx
   1914c:	4c 89 f6             	mov    %r14,%rsi
   1914f:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   19156:	48 83 c1 08          	add    $0x8,%rcx
   1915a:	48 01 d9             	add    %rbx,%rcx
   1915d:	48 ff c3             	inc    %rbx
   19160:	e8 00 00 00 00       	callq  19165 <pci_enable_device_mem+0x8f8>
			19161: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19165:	48 83 fb 20          	cmp    $0x20,%rbx
   19169:	75 c1                	jne    1912c <pci_enable_device_mem+0x8bf>
   1916b:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19172:	00 
   19173:	4c 89 ea             	mov    %r13,%rdx
   19176:	4c 89 f6             	mov    %r14,%rsi
   19179:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1917c: R_X86_64_32S	.rodata.str1.1+0x2105
   19180:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   19187:	e8 00 00 00 00       	callq  1918c <pci_enable_device_mem+0x91f>
			19188: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1918c:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   19190:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   19194:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   1919b:	00 
   1919c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1919f: R_X86_64_32S	.rodata.str1.1+0x2105
   191a3:	48 89 da             	mov    %rbx,%rdx
   191a6:	4c 89 ee             	mov    %r13,%rsi
   191a9:	e8 00 00 00 00       	callq  191ae <pci_enable_device_mem+0x941>
			191aa: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   191ae:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   191b5:	00 
   191b6:	48 89 da             	mov    %rbx,%rdx
   191b9:	4c 89 ee             	mov    %r13,%rsi
   191bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			191bf: R_X86_64_32S	.rodata.str1.1+0x2105
   191c3:	e8 00 00 00 00       	callq  191c8 <pci_enable_device_mem+0x95b>
			191c4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   191c8:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   191cf:	00 
   191d0:	48 85 c9             	test   %rcx,%rcx
   191d3:	74 18                	je     191ed <pci_enable_device_mem+0x980>
   191d5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   191db:	48 89 da             	mov    %rbx,%rdx
   191de:	4c 89 ee             	mov    %r13,%rsi
   191e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			191e4: R_X86_64_32S	.rodata.str1.1+0x2105
   191e8:	e8 00 00 00 00       	callq  191ed <pci_enable_device_mem+0x980>
			191e9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   191ed:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   191f1:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   191f7:	48 89 da             	mov    %rbx,%rdx
   191fa:	4c 89 ee             	mov    %r13,%rsi
   191fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19200: R_X86_64_32S	.rodata.str1.1+0x2105
   19204:	48 83 c1 40          	add    $0x40,%rcx
   19208:	e8 00 00 00 00       	callq  1920d <pci_enable_device_mem+0x9a0>
			19209: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1920d:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   19211:	48 89 da             	mov    %rbx,%rdx
   19214:	4c 89 ee             	mov    %r13,%rsi
   19217:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1921a: R_X86_64_32S	.rodata.str1.1+0x2105
   1921e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   19224:	48 83 c1 3c          	add    $0x3c,%rcx
   19228:	e8 00 00 00 00       	callq  1922d <pci_enable_device_mem+0x9c0>
			19229: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1922d:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   19231:	48 89 da             	mov    %rbx,%rdx
   19234:	4c 89 ee             	mov    %r13,%rsi
   19237:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1923a: R_X86_64_32S	.rodata.str1.1+0x2105
   1923e:	48 83 c1 10          	add    $0x10,%rcx
   19242:	e8 00 00 00 00       	callq  19247 <pci_enable_device_mem+0x9da>
			19243: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19247:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   1924b:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   1924f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19252: R_X86_64_32S	.rodata.str1.1+0x2105
   19256:	48 c7 45 a0 12 06 00 	movq   $0x612,0xffffffffffffffa0(%rbp)
   1925d:	00 
   1925e:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   19262:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   19266:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   19269:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   1926c:	e8 00 00 00 00       	callq  19271 <pci_enable_device_mem+0xa04>
			1926d: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   19271:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   19275:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19278: R_X86_64_32S	.rodata.str1.1+0x213f
   1927c:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   19280:	e8 00 00 00 00       	callq  19285 <pci_enable_device_mem+0xa18>
			19281: R_X86_64_PC32	record_function+0xfffffffffffffffc
   19285:	4c 8b 6d b0          	mov    0xffffffffffffffb0(%rbp),%r13
   19289:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   1928d:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   19293:	48 89 da             	mov    %rbx,%rdx
   19296:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19299: R_X86_64_32S	.rodata.str1.1+0x2105
   1929d:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   192a4:	4c 89 ee             	mov    %r13,%rsi
   192a7:	e8 00 00 00 00       	callq  192ac <pci_enable_device_mem+0xa3f>
			192a8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   192ac:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   192b0:	48 85 c0             	test   %rax,%rax
   192b3:	0f 84 3e 09 00 00    	je     19bf7 <pci_enable_device_mem+0x138a>
   192b9:	4c 8d 40 38          	lea    0x38(%rax),%r8
   192bd:	48 89 da             	mov    %rbx,%rdx
   192c0:	b9 04 00 00 00       	mov    $0x4,%ecx
   192c5:	4c 89 ee             	mov    %r13,%rsi
   192c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			192cb: R_X86_64_32S	.rodata.str1.1+0x2105
   192cf:	45 31 f6             	xor    %r14d,%r14d
   192d2:	e8 00 00 00 00       	callq  192d7 <pci_enable_device_mem+0xa6a>
			192d3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   192d7:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   192db:	48 89 da             	mov    %rbx,%rdx
   192de:	b9 04 00 00 00       	mov    $0x4,%ecx
   192e3:	4c 89 ee             	mov    %r13,%rsi
   192e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			192e9: R_X86_64_32S	.rodata.str1.1+0x2105
   192ed:	49 83 c0 7c          	add    $0x7c,%r8
   192f1:	e8 00 00 00 00       	callq  192f6 <pci_enable_device_mem+0xa89>
			192f2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   192f6:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   192fa:	48 89 da             	mov    %rbx,%rdx
   192fd:	b9 04 00 00 00       	mov    $0x4,%ecx
   19302:	4c 89 ee             	mov    %r13,%rsi
   19305:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19308: R_X86_64_32S	.rodata.str1.1+0x2105
   1930c:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   19313:	e8 00 00 00 00       	callq  19318 <pci_enable_device_mem+0xaab>
			19314: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19318:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   1931c:	48 89 da             	mov    %rbx,%rdx
   1931f:	b9 02 00 00 00       	mov    $0x2,%ecx
   19324:	4c 89 ee             	mov    %r13,%rsi
   19327:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1932a: R_X86_64_32S	.rodata.str1.1+0x2105
   1932e:	49 83 c0 3e          	add    $0x3e,%r8
   19332:	e8 00 00 00 00       	callq  19337 <pci_enable_device_mem+0xaca>
			19333: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19337:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   1933b:	ba 78 02 00 00       	mov    $0x278,%edx
   19340:	be 80 00 00 00       	mov    $0x80,%esi
   19345:	e8 00 00 00 00       	callq  1934a <pci_enable_device_mem+0xadd>
			19346: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1934a:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   1934e:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   19352:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   19359:	00 
   1935a:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
   1935e:	49 89 d8             	mov    %rbx,%r8
   19361:	b9 01 00 00 00       	mov    $0x1,%ecx
   19366:	4c 89 ee             	mov    %r13,%rsi
   19369:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1936c: R_X86_64_32S	.rodata.str1.1+0x2105
   19370:	49 ff c6             	inc    %r14
   19373:	4c 89 fa             	mov    %r15,%rdx
   19376:	48 ff c3             	inc    %rbx
   19379:	e8 00 00 00 00       	callq  1937e <pci_enable_device_mem+0xb11>
			1937a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1937e:	49 83 fe 14          	cmp    $0x14,%r14
   19382:	75 d6                	jne    1935a <pci_enable_device_mem+0xaed>
   19384:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
   19388:	b9 04 00 00 00       	mov    $0x4,%ecx
   1938d:	4c 89 fa             	mov    %r15,%rdx
   19390:	4c 89 ee             	mov    %r13,%rsi
   19393:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19396: R_X86_64_32S	.rodata.str1.1+0x2105
   1939a:	49 89 d8             	mov    %rbx,%r8
   1939d:	e8 00 00 00 00       	callq  193a2 <pci_enable_device_mem+0xb35>
			1939e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   193a2:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   193a5:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   193ac:	00 
   193ad:	49 89 d8             	mov    %rbx,%r8
   193b0:	b9 04 00 00 00       	mov    $0x4,%ecx
   193b5:	4c 89 ee             	mov    %r13,%rsi
   193b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			193bb: R_X86_64_32S	.rodata.str1.1+0x2105
   193bf:	83 e2 01             	and    $0x1,%edx
   193c2:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   193c5:	09 d0                	or     %edx,%eax
   193c7:	4c 89 fa             	mov    %r15,%rdx
   193ca:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   193d1:	00 
   193d2:	e8 00 00 00 00       	callq  193d7 <pci_enable_device_mem+0xb6a>
			193d3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   193d7:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   193da:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   193e1:	00 
   193e2:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   193e9:	00 
   193ea:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   193f0:	4c 89 ee             	mov    %r13,%rsi
   193f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			193f6: R_X86_64_32S	.rodata.str1.1+0x2105
   193fa:	83 e2 01             	and    $0x1,%edx
   193fd:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   19400:	01 d2                	add    %edx,%edx
   19402:	09 d0                	or     %edx,%eax
   19404:	4c 89 fa             	mov    %r15,%rdx
   19407:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   1940e:	00 
   1940f:	e8 00 00 00 00       	callq  19414 <pci_enable_device_mem+0xba7>
			19410: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19414:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   1941b:	00 
   1941c:	48 85 c0             	test   %rax,%rax
   1941f:	0f 84 d0 00 00 00    	je     194f5 <pci_enable_device_mem+0xc88>
   19425:	48 8d 48 18          	lea    0x18(%rax),%rcx
   19429:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1942f:	4c 89 fa             	mov    %r15,%rdx
   19432:	4c 89 ee             	mov    %r13,%rsi
   19435:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19438: R_X86_64_32S	.rodata.str1.1+0x2105
   1943c:	e8 00 00 00 00       	callq  19441 <pci_enable_device_mem+0xbd4>
			1943d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19441:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   19448:	00 
   19449:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1944f:	4c 89 fa             	mov    %r15,%rdx
   19452:	4c 89 ee             	mov    %r13,%rsi
   19455:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19458: R_X86_64_32S	.rodata.str1.1+0x2105
   1945c:	48 83 c1 20          	add    $0x20,%rcx
   19460:	e8 00 00 00 00       	callq  19465 <pci_enable_device_mem+0xbf8>
			19461: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19465:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1946c:	00 
   1946d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19473:	4c 89 fa             	mov    %r15,%rdx
   19476:	4c 89 ee             	mov    %r13,%rsi
   19479:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1947c: R_X86_64_32S	.rodata.str1.1+0x2105
   19480:	48 83 c1 30          	add    $0x30,%rcx
   19484:	e8 00 00 00 00       	callq  19489 <pci_enable_device_mem+0xc1c>
			19485: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19489:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   19490:	00 
   19491:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19497:	4c 89 fa             	mov    %r15,%rdx
   1949a:	4c 89 ee             	mov    %r13,%rsi
   1949d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			194a0: R_X86_64_32S	.rodata.str1.1+0x2105
   194a4:	48 83 c1 10          	add    $0x10,%rcx
   194a8:	e8 00 00 00 00       	callq  194ad <pci_enable_device_mem+0xc40>
			194a9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   194ad:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   194b4:	00 
   194b5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   194bb:	4c 89 fa             	mov    %r15,%rdx
   194be:	4c 89 ee             	mov    %r13,%rsi
   194c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			194c4: R_X86_64_32S	.rodata.str1.1+0x2105
   194c8:	48 83 c1 28          	add    $0x28,%rcx
   194cc:	e8 00 00 00 00       	callq  194d1 <pci_enable_device_mem+0xc64>
			194cd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   194d1:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   194d8:	00 
   194d9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   194df:	4c 89 fa             	mov    %r15,%rdx
   194e2:	4c 89 ee             	mov    %r13,%rsi
   194e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			194e8: R_X86_64_32S	.rodata.str1.1+0x2105
   194ec:	48 83 c1 08          	add    $0x8,%rcx
   194f0:	e8 00 00 00 00       	callq  194f5 <pci_enable_device_mem+0xc88>
			194f1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   194f5:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   194fc:	00 
   194fd:	b9 08 00 00 00       	mov    $0x8,%ecx
   19502:	4c 89 fa             	mov    %r15,%rdx
   19505:	4c 89 ee             	mov    %r13,%rsi
   19508:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1950b: R_X86_64_32S	.rodata.str1.1+0x2105
   1950f:	e8 00 00 00 00       	callq  19514 <pci_enable_device_mem+0xca7>
			19510: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19514:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   1951b:	00 
   1951c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1951f: R_X86_64_32S	.rodata.str1.1+0x2105
   19523:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   19529:	4c 89 fa             	mov    %r15,%rdx
   1952c:	4c 89 ee             	mov    %r13,%rsi
   1952f:	e8 00 00 00 00       	callq  19534 <pci_enable_device_mem+0xcc7>
			19530: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19534:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1953b:	00 
   1953c:	48 85 ff             	test   %rdi,%rdi
   1953f:	0f 84 08 06 00 00    	je     19b4d <pci_enable_device_mem+0x12e0>
   19545:	ba 08 00 00 00       	mov    $0x8,%edx
   1954a:	be 10 03 00 00       	mov    $0x310,%esi
   1954f:	31 db                	xor    %ebx,%ebx
   19551:	e8 00 00 00 00       	callq  19556 <pci_enable_device_mem+0xce9>
			19552: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   19556:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1955d:	00 
   1955e:	b9 08 00 00 00       	mov    $0x8,%ecx
   19563:	4c 89 fa             	mov    %r15,%rdx
   19566:	4c 89 ee             	mov    %r13,%rsi
   19569:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1956c: R_X86_64_32S	.rodata.str1.1+0x2105
   19570:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   19577:	e8 00 00 00 00       	callq  1957c <pci_enable_device_mem+0xd0f>
			19578: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1957c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   19583:	00 
   19584:	b9 02 00 00 00       	mov    $0x2,%ecx
   19589:	4c 89 fa             	mov    %r15,%rdx
   1958c:	4c 89 ee             	mov    %r13,%rsi
   1958f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19592: R_X86_64_32S	.rodata.str1.1+0x2105
   19596:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   1959d:	e8 00 00 00 00       	callq  195a2 <pci_enable_device_mem+0xd35>
			1959e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   195a2:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   195a9:	00 
   195aa:	b9 08 00 00 00       	mov    $0x8,%ecx
   195af:	4c 89 fa             	mov    %r15,%rdx
   195b2:	4c 89 ee             	mov    %r13,%rsi
   195b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			195b8: R_X86_64_32S	.rodata.str1.1+0x2105
   195bc:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   195c3:	e8 00 00 00 00       	callq  195c8 <pci_enable_device_mem+0xd5b>
			195c4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   195c8:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   195cf:	00 
   195d0:	b9 04 00 00 00       	mov    $0x4,%ecx
   195d5:	4c 89 fa             	mov    %r15,%rdx
   195d8:	4c 89 ee             	mov    %r13,%rsi
   195db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			195de: R_X86_64_32S	.rodata.str1.1+0x2105
   195e2:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   195e9:	e8 00 00 00 00       	callq  195ee <pci_enable_device_mem+0xd81>
			195ea: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   195ee:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   195f5:	00 
   195f6:	b9 04 00 00 00       	mov    $0x4,%ecx
   195fb:	4c 89 fa             	mov    %r15,%rdx
   195fe:	4c 89 ee             	mov    %r13,%rsi
   19601:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19604: R_X86_64_32S	.rodata.str1.1+0x2105
   19608:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   1960f:	e8 00 00 00 00       	callq  19614 <pci_enable_device_mem+0xda7>
			19610: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19614:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1961b:	00 
   1961c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19622:	4c 89 fa             	mov    %r15,%rdx
   19625:	4c 89 ee             	mov    %r13,%rsi
   19628:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1962b: R_X86_64_32S	.rodata.str1.1+0x2105
   1962f:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   19636:	e8 00 00 00 00       	callq  1963b <pci_enable_device_mem+0xdce>
			19637: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1963b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19642:	00 
   19643:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19649:	4c 89 fa             	mov    %r15,%rdx
   1964c:	4c 89 ee             	mov    %r13,%rsi
   1964f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19652: R_X86_64_32S	.rodata.str1.1+0x2105
   19656:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1965d:	e8 00 00 00 00       	callq  19662 <pci_enable_device_mem+0xdf5>
			1965e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19662:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19669:	00 
   1966a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19670:	4c 89 fa             	mov    %r15,%rdx
   19673:	4c 89 ee             	mov    %r13,%rsi
   19676:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19679: R_X86_64_32S	.rodata.str1.1+0x2105
   1967d:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   19684:	e8 00 00 00 00       	callq  19689 <pci_enable_device_mem+0xe1c>
			19685: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19689:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   19690:	00 
   19691:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   19695:	b9 01 00 00 00       	mov    $0x1,%ecx
   1969a:	4c 89 ee             	mov    %r13,%rsi
   1969d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			196a0: R_X86_64_32S	.rodata.str1.1+0x2105
   196a4:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   196ab:	49 01 d8             	add    %rbx,%r8
   196ae:	48 ff c3             	inc    %rbx
   196b1:	e8 00 00 00 00       	callq  196b6 <pci_enable_device_mem+0xe49>
			196b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   196b6:	48 83 fb 20          	cmp    $0x20,%rbx
   196ba:	75 cd                	jne    19689 <pci_enable_device_mem+0xe1c>
   196bc:	30 db                	xor    %bl,%bl
   196be:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   196c5:	00 
   196c6:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   196ca:	b9 01 00 00 00       	mov    $0x1,%ecx
   196cf:	4c 89 ee             	mov    %r13,%rsi
   196d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			196d5: R_X86_64_32S	.rodata.str1.1+0x2105
   196d9:	4c 89 f2             	mov    %r14,%rdx
   196dc:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   196e3:	49 01 d8             	add    %rbx,%r8
   196e6:	48 ff c3             	inc    %rbx
   196e9:	e8 00 00 00 00       	callq  196ee <pci_enable_device_mem+0xe81>
			196ea: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   196ee:	48 83 fb 20          	cmp    $0x20,%rbx
   196f2:	75 ca                	jne    196be <pci_enable_device_mem+0xe51>
   196f4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   196fb:	00 
   196fc:	b9 02 00 00 00       	mov    $0x2,%ecx
   19701:	4c 89 f2             	mov    %r14,%rdx
   19704:	4c 89 ee             	mov    %r13,%rsi
   19707:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1970a: R_X86_64_32S	.rodata.str1.1+0x2105
   1970e:	30 db                	xor    %bl,%bl
   19710:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   19717:	e8 00 00 00 00       	callq  1971c <pci_enable_device_mem+0xeaf>
			19718: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1971c:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   19723:	00 
   19724:	ba 08 00 00 00       	mov    $0x8,%edx
   19729:	be 48 00 00 00       	mov    $0x48,%esi
   1972e:	e8 00 00 00 00       	callq  19733 <pci_enable_device_mem+0xec6>
			1972f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   19733:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1973a:	00 
   1973b:	b9 08 00 00 00       	mov    $0x8,%ecx
   19740:	4c 89 f2             	mov    %r14,%rdx
   19743:	4c 89 ee             	mov    %r13,%rsi
   19746:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19749: R_X86_64_32S	.rodata.str1.1+0x2105
   1974d:	49 83 c0 48          	add    $0x48,%r8
   19751:	e8 00 00 00 00       	callq  19756 <pci_enable_device_mem+0xee9>
			19752: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19756:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1975d:	00 
   1975e:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   19762:	b9 01 00 00 00       	mov    $0x1,%ecx
   19767:	4c 89 ee             	mov    %r13,%rsi
   1976a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1976d: R_X86_64_32S	.rodata.str1.1+0x2105
   19771:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   19778:	49 01 d8             	add    %rbx,%r8
   1977b:	48 ff c3             	inc    %rbx
   1977e:	e8 00 00 00 00       	callq  19783 <pci_enable_device_mem+0xf16>
			1977f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19783:	48 83 fb 20          	cmp    $0x20,%rbx
   19787:	75 cd                	jne    19756 <pci_enable_device_mem+0xee9>
   19789:	30 db                	xor    %bl,%bl
   1978b:	49 89 d8             	mov    %rbx,%r8
   1978e:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   19795:	00 
   19796:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1979a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1979f:	4c 89 ee             	mov    %r13,%rsi
   197a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			197a5: R_X86_64_32S	.rodata.str1.1+0x2105
   197a9:	4c 89 f2             	mov    %r14,%rdx
   197ac:	48 ff c3             	inc    %rbx
   197af:	e8 00 00 00 00       	callq  197b4 <pci_enable_device_mem+0xf47>
			197b0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   197b4:	48 83 fb 10          	cmp    $0x10,%rbx
   197b8:	75 d1                	jne    1978b <pci_enable_device_mem+0xf1e>
   197ba:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   197c1:	00 
   197c2:	ba 10 00 00 00       	mov    $0x10,%edx
   197c7:	be 18 04 00 00       	mov    $0x418,%esi
   197cc:	e8 00 00 00 00       	callq  197d1 <pci_enable_device_mem+0xf64>
			197cd: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   197d1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   197d8:	00 
   197d9:	b9 01 00 00 00       	mov    $0x1,%ecx
   197de:	4c 89 f2             	mov    %r14,%rdx
   197e1:	4c 89 ee             	mov    %r13,%rsi
   197e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			197e7: R_X86_64_32S	.rodata.str1.1+0x2105
   197eb:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   197f2:	e8 00 00 00 00       	callq  197f7 <pci_enable_device_mem+0xf8a>
			197f3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   197f7:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   197fe:	00 
   197ff:	b9 04 00 00 00       	mov    $0x4,%ecx
   19804:	4c 89 f2             	mov    %r14,%rdx
   19807:	4c 89 ee             	mov    %r13,%rsi
   1980a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1980d: R_X86_64_32S	.rodata.str1.1+0x2105
   19811:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   19818:	e8 00 00 00 00       	callq  1981d <pci_enable_device_mem+0xfb0>
			19819: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1981d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   19824:	00 
   19825:	b9 08 00 00 00       	mov    $0x8,%ecx
   1982a:	4c 89 f2             	mov    %r14,%rdx
   1982d:	4c 89 ee             	mov    %r13,%rsi
   19830:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19833: R_X86_64_32S	.rodata.str1.1+0x2105
   19837:	49 83 c0 70          	add    $0x70,%r8
   1983b:	e8 00 00 00 00       	callq  19840 <pci_enable_device_mem+0xfd3>
			1983c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19840:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   19847:	00 
   19848:	ba 10 00 00 00       	mov    $0x10,%edx
   1984d:	be 10 00 00 00       	mov    $0x10,%esi
   19852:	e8 00 00 00 00       	callq  19857 <pci_enable_device_mem+0xfea>
			19853: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   19857:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1985e:	00 
   1985f:	b9 04 00 00 00       	mov    $0x4,%ecx
   19864:	4c 89 f2             	mov    %r14,%rdx
   19867:	4c 89 ee             	mov    %r13,%rsi
   1986a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1986d: R_X86_64_32S	.rodata.str1.1+0x2105
   19871:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   19878:	e8 00 00 00 00       	callq  1987d <pci_enable_device_mem+0x1010>
			19879: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1987d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   19884:	00 
   19885:	b9 08 00 00 00       	mov    $0x8,%ecx
   1988a:	4c 89 f2             	mov    %r14,%rdx
   1988d:	4c 89 ee             	mov    %r13,%rsi
   19890:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19893: R_X86_64_32S	.rodata.str1.1+0x2105
   19897:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   1989e:	e8 00 00 00 00       	callq  198a3 <pci_enable_device_mem+0x1036>
			1989f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   198a3:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   198aa:	00 
   198ab:	b9 04 00 00 00       	mov    $0x4,%ecx
   198b0:	4c 89 f2             	mov    %r14,%rdx
   198b3:	4c 89 ee             	mov    %r13,%rsi
   198b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			198b9: R_X86_64_32S	.rodata.str1.1+0x2105
   198bd:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   198c4:	e8 00 00 00 00       	callq  198c9 <pci_enable_device_mem+0x105c>
			198c5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   198c9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   198d0:	00 
   198d1:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   198d7:	4c 89 f2             	mov    %r14,%rdx
   198da:	4c 89 ee             	mov    %r13,%rsi
   198dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			198e0: R_X86_64_32S	.rodata.str1.1+0x2105
   198e4:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   198eb:	e8 00 00 00 00       	callq  198f0 <pci_enable_device_mem+0x1083>
			198ec: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   198f0:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   198f7:	00 
   198f8:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   198ff:	00 
   19900:	74 63                	je     19965 <pci_enable_device_mem+0x10f8>
   19902:	30 db                	xor    %bl,%bl
   19904:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1990b:	00 
   1990c:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   19910:	b9 01 00 00 00       	mov    $0x1,%ecx
   19915:	4c 89 ee             	mov    %r13,%rsi
   19918:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1991b: R_X86_64_32S	.rodata.str1.1+0x2105
   1991f:	4c 89 f2             	mov    %r14,%rdx
   19922:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   19929:	49 83 c0 08          	add    $0x8,%r8
   1992d:	49 01 d8             	add    %rbx,%r8
   19930:	48 ff c3             	inc    %rbx
   19933:	e8 00 00 00 00       	callq  19938 <pci_enable_device_mem+0x10cb>
			19934: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19938:	48 83 fb 20          	cmp    $0x20,%rbx
   1993c:	75 c6                	jne    19904 <pci_enable_device_mem+0x1097>
   1993e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19945:	00 
   19946:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1994c:	4c 89 f2             	mov    %r14,%rdx
   1994f:	4c 89 ee             	mov    %r13,%rsi
   19952:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19955: R_X86_64_32S	.rodata.str1.1+0x2105
   19959:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   19960:	e8 00 00 00 00       	callq  19965 <pci_enable_device_mem+0x10f8>
			19961: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19965:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1996c:	00 
   1996d:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   19971:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   19977:	4c 89 ee             	mov    %r13,%rsi
   1997a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1997d: R_X86_64_32S	.rodata.str1.1+0x2105
   19981:	48 89 da             	mov    %rbx,%rdx
   19984:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1998b:	e8 00 00 00 00       	callq  19990 <pci_enable_device_mem+0x1123>
			1998c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19990:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19997:	00 
   19998:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   1999e:	48 89 da             	mov    %rbx,%rdx
   199a1:	4c 89 ee             	mov    %r13,%rsi
   199a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			199a7: R_X86_64_32S	.rodata.str1.1+0x2105
   199ab:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   199b2:	e8 00 00 00 00       	callq  199b7 <pci_enable_device_mem+0x114a>
			199b3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   199b7:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   199be:	00 
   199bf:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   199c6:	48 85 c0             	test   %rax,%rax
   199c9:	74 47                	je     19a12 <pci_enable_device_mem+0x11a5>
   199cb:	48 8d 48 60          	lea    0x60(%rax),%rcx
   199cf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   199d5:	48 89 da             	mov    %rbx,%rdx
   199d8:	4c 89 ee             	mov    %r13,%rsi
   199db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			199de: R_X86_64_32S	.rodata.str1.1+0x2105
   199e2:	e8 00 00 00 00       	callq  199e7 <pci_enable_device_mem+0x117a>
			199e3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   199e7:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   199ee:	00 
   199ef:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   199f5:	48 89 da             	mov    %rbx,%rdx
   199f8:	4c 89 ee             	mov    %r13,%rsi
   199fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			199fe: R_X86_64_32S	.rodata.str1.1+0x2105
   19a02:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   19a09:	48 83 c1 58          	add    $0x58,%rcx
   19a0d:	e8 00 00 00 00       	callq  19a12 <pci_enable_device_mem+0x11a5>
			19a0e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19a12:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19a19:	00 
   19a1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19a1d: R_X86_64_32S	.rodata.str1.1+0x2105
   19a21:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   19a27:	48 89 da             	mov    %rbx,%rdx
   19a2a:	4c 89 ee             	mov    %r13,%rsi
   19a2d:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   19a34:	e8 00 00 00 00       	callq  19a39 <pci_enable_device_mem+0x11cc>
			19a35: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19a39:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19a40:	00 
   19a41:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   19a48:	48 85 ff             	test   %rdi,%rdi
   19a4b:	74 64                	je     19ab1 <pci_enable_device_mem+0x1244>
   19a4d:	ba 08 00 00 00       	mov    $0x8,%edx
   19a52:	be 10 00 00 00       	mov    $0x10,%esi
   19a57:	e8 00 00 00 00       	callq  19a5c <pci_enable_device_mem+0x11ef>
			19a58: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   19a5c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19a63:	00 
   19a64:	b9 08 00 00 00       	mov    $0x8,%ecx
   19a69:	48 89 da             	mov    %rbx,%rdx
   19a6c:	4c 89 ee             	mov    %r13,%rsi
   19a6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19a72: R_X86_64_32S	.rodata.str1.1+0x2105
   19a76:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   19a7d:	49 83 c0 10          	add    $0x10,%r8
   19a81:	e8 00 00 00 00       	callq  19a86 <pci_enable_device_mem+0x1219>
			19a82: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19a86:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19a8d:	00 
   19a8e:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   19a94:	48 89 da             	mov    %rbx,%rdx
   19a97:	4c 89 ee             	mov    %r13,%rsi
   19a9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19a9d: R_X86_64_32S	.rodata.str1.1+0x2105
   19aa1:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   19aa8:	48 83 c1 08          	add    $0x8,%rcx
   19aac:	e8 00 00 00 00       	callq  19ab1 <pci_enable_device_mem+0x1244>
			19aad: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19ab1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   19ab8:	00 
   19ab9:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   19abf:	48 89 da             	mov    %rbx,%rdx
   19ac2:	4c 89 ee             	mov    %r13,%rsi
   19ac5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19ac8: R_X86_64_32S	.rodata.str1.1+0x2105
   19acc:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   19ad3:	e8 00 00 00 00       	callq  19ad8 <pci_enable_device_mem+0x126b>
			19ad4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19ad8:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19adf:	00 
   19ae0:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   19ae7:	00 
   19ae8:	74 63                	je     19b4d <pci_enable_device_mem+0x12e0>
   19aea:	31 db                	xor    %ebx,%ebx
   19aec:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19af3:	00 
   19af4:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   19af8:	b9 01 00 00 00       	mov    $0x1,%ecx
   19afd:	4c 89 ee             	mov    %r13,%rsi
   19b00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19b03: R_X86_64_32S	.rodata.str1.1+0x2105
   19b07:	4c 89 f2             	mov    %r14,%rdx
   19b0a:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   19b11:	49 83 c0 08          	add    $0x8,%r8
   19b15:	49 01 d8             	add    %rbx,%r8
   19b18:	48 ff c3             	inc    %rbx
   19b1b:	e8 00 00 00 00       	callq  19b20 <pci_enable_device_mem+0x12b3>
			19b1c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19b20:	48 83 fb 20          	cmp    $0x20,%rbx
   19b24:	75 c6                	jne    19aec <pci_enable_device_mem+0x127f>
   19b26:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   19b2d:	00 
   19b2e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   19b34:	4c 89 f2             	mov    %r14,%rdx
   19b37:	4c 89 ee             	mov    %r13,%rsi
   19b3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19b3d: R_X86_64_32S	.rodata.str1.1+0x2105
   19b41:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   19b48:	e8 00 00 00 00       	callq  19b4d <pci_enable_device_mem+0x12e0>
			19b49: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19b4d:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   19b51:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   19b58:	00 
   19b59:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   19b5f:	4c 89 ee             	mov    %r13,%rsi
   19b62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19b65: R_X86_64_32S	.rodata.str1.1+0x2105
   19b69:	48 89 da             	mov    %rbx,%rdx
   19b6c:	e8 00 00 00 00       	callq  19b71 <pci_enable_device_mem+0x1304>
			19b6d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19b71:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   19b78:	00 
   19b79:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   19b7f:	48 89 da             	mov    %rbx,%rdx
   19b82:	4c 89 ee             	mov    %r13,%rsi
   19b85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19b88: R_X86_64_32S	.rodata.str1.1+0x2105
   19b8c:	e8 00 00 00 00       	callq  19b91 <pci_enable_device_mem+0x1324>
			19b8d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19b91:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   19b98:	00 
   19b99:	48 85 c0             	test   %rax,%rax
   19b9c:	74 1a                	je     19bb8 <pci_enable_device_mem+0x134b>
   19b9e:	49 89 c0             	mov    %rax,%r8
   19ba1:	b9 08 00 00 00       	mov    $0x8,%ecx
   19ba6:	48 89 da             	mov    %rbx,%rdx
   19ba9:	4c 89 ee             	mov    %r13,%rsi
   19bac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19baf: R_X86_64_32S	.rodata.str1.1+0x2105
   19bb3:	e8 00 00 00 00       	callq  19bb8 <pci_enable_device_mem+0x134b>
			19bb4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19bb8:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   19bbc:	b9 02 00 00 00       	mov    $0x2,%ecx
   19bc1:	48 89 da             	mov    %rbx,%rdx
   19bc4:	4c 89 ee             	mov    %r13,%rsi
   19bc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19bca: R_X86_64_32S	.rodata.str1.1+0x2105
   19bce:	49 83 c0 3c          	add    $0x3c,%r8
   19bd2:	e8 00 00 00 00       	callq  19bd7 <pci_enable_device_mem+0x136a>
			19bd3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19bd7:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   19bdb:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   19be1:	48 89 da             	mov    %rbx,%rdx
   19be4:	4c 89 ee             	mov    %r13,%rsi
   19be7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19bea: R_X86_64_32S	.rodata.str1.1+0x2105
   19bee:	48 83 c1 10          	add    $0x10,%rcx
   19bf2:	e8 00 00 00 00       	callq  19bf7 <pci_enable_device_mem+0x138a>
			19bf3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   19bf7:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   19bfb:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   19bff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19c02: R_X86_64_32S	.rodata.str1.1+0x2105
   19c06:	b9 04 00 00 00       	mov    $0x4,%ecx
   19c0b:	4c 89 ee             	mov    %r13,%rsi
   19c0e:	e8 00 00 00 00       	callq  19c13 <pci_enable_device_mem+0x13a6>
			19c0f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   19c13:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   19c17:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
   19c1a:	48 85 ff             	test   %rdi,%rdi
   19c1d:	74 05                	je     19c24 <pci_enable_device_mem+0x13b7>
   19c1f:	e8 00 00 00 00       	callq  19c24 <pci_enable_device_mem+0x13b7>
			19c20: R_X86_64_PC32	kfree+0xfffffffffffffffc
   19c24:	48 83 c4 48          	add    $0x48,%rsp
   19c28:	89 d8                	mov    %ebx,%eax
   19c2a:	5b                   	pop    %rbx
   19c2b:	41 5c                	pop    %r12
   19c2d:	41 5d                	pop    %r13
   19c2f:	41 5e                	pop    %r14
   19c31:	41 5f                	pop    %r15
   19c33:	c9                   	leaveq 
   19c34:	c3                   	retq   

0000000000019c35 <dev_close>:
   19c35:	55                   	push   %rbp
   19c36:	48 89 e5             	mov    %rsp,%rbp
   19c39:	41 56                	push   %r14
   19c3b:	49 89 fe             	mov    %rdi,%r14
   19c3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19c41: R_X86_64_32S	.rodata.str1.1+0x2163
   19c45:	41 55                	push   %r13
   19c47:	41 54                	push   %r12
   19c49:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   19c4d:	53                   	push   %rbx
   19c4e:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   19c52:	48 83 ec 30          	sub    $0x30,%rsp
   19c56:	e8 00 00 00 00       	callq  19c5b <dev_close+0x26>
			19c57: R_X86_64_PC32	record_function+0xfffffffffffffffc
   19c5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19c5e: R_X86_64_32S	.rodata.str1.1+0x216d
   19c62:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   19c69:	00 
   19c6a:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   19c71:	00 
   19c72:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   19c79:	4c 89 75 d0          	mov    %r14,0xffffffffffffffd0(%rbp)
   19c7d:	e8 00 00 00 00       	callq  19c82 <dev_close+0x4d>
			19c7e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   19c82:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
   19c86:	48 89 da             	mov    %rbx,%rdx
   19c89:	4c 89 e6             	mov    %r12,%rsi
   19c8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19c8f: R_X86_64_32S	.rodata.str1.1+0x2163
   19c93:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   19c9a:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
   19ca1:	00 
   19ca2:	e8 00 00 00 00       	callq  19ca7 <dev_close+0x72>
			19ca3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19ca7:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   19cab:	48 85 c0             	test   %rax,%rax
   19cae:	0f 84 2b 07 00 00    	je     1a3df <dev_close+0x7aa>
   19cb4:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   19cbb:	48 89 da             	mov    %rbx,%rdx
   19cbe:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   19cc4:	4c 89 e6             	mov    %r12,%rsi
   19cc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19cca: R_X86_64_32S	.rodata.str1.1+0x2163
   19cce:	e8 00 00 00 00       	callq  19cd3 <dev_close+0x9e>
			19ccf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19cd3:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19cd7:	48 89 da             	mov    %rbx,%rdx
   19cda:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   19ce0:	4c 89 e6             	mov    %r12,%rsi
   19ce3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19ce6: R_X86_64_32S	.rodata.str1.1+0x2163
   19cea:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   19cf1:	e8 00 00 00 00       	callq  19cf6 <dev_close+0xc1>
			19cf2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19cf6:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19cfa:	48 89 da             	mov    %rbx,%rdx
   19cfd:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   19d03:	4c 89 e6             	mov    %r12,%rsi
   19d06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19d09: R_X86_64_32S	.rodata.str1.1+0x2163
   19d0d:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   19d14:	e8 00 00 00 00       	callq  19d19 <dev_close+0xe4>
			19d15: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19d19:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19d1d:	48 89 da             	mov    %rbx,%rdx
   19d20:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   19d26:	4c 89 e6             	mov    %r12,%rsi
   19d29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19d2c: R_X86_64_32S	.rodata.str1.1+0x2163
   19d30:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   19d37:	e8 00 00 00 00       	callq  19d3c <dev_close+0x107>
			19d38: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19d3c:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19d40:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   19d46:	48 89 da             	mov    %rbx,%rdx
   19d49:	4c 89 e6             	mov    %r12,%rsi
   19d4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19d4f: R_X86_64_32S	.rodata.str1.1+0x2163
   19d53:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   19d5a:	e8 00 00 00 00       	callq  19d5f <dev_close+0x12a>
			19d5b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19d5f:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19d63:	48 89 da             	mov    %rbx,%rdx
   19d66:	4c 89 e6             	mov    %r12,%rsi
   19d69:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19d6c: R_X86_64_32S	.rodata.str1.1+0x2163
   19d70:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   19d77:	e8 00 00 00 00       	callq  19d7c <dev_close+0x147>
			19d78: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19d7c:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19d80:	48 89 da             	mov    %rbx,%rdx
   19d83:	4c 89 e6             	mov    %r12,%rsi
   19d86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19d89: R_X86_64_32S	.rodata.str1.1+0x2163
   19d8d:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   19d94:	e8 00 00 00 00       	callq  19d99 <dev_close+0x164>
			19d95: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19d99:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19d9d:	48 89 da             	mov    %rbx,%rdx
   19da0:	4c 89 e6             	mov    %r12,%rsi
   19da3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19da6: R_X86_64_32S	.rodata.str1.1+0x2163
   19daa:	31 db                	xor    %ebx,%ebx
   19dac:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   19db3:	e8 00 00 00 00       	callq  19db8 <dev_close+0x183>
			19db4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19db8:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19dbc:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   19dc0:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
   19dc4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19dca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19dcd: R_X86_64_32S	.rodata.str1.1+0x2163
   19dd1:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   19dd8:	48 01 d9             	add    %rbx,%rcx
   19ddb:	48 ff c3             	inc    %rbx
   19dde:	e8 00 00 00 00       	callq  19de3 <dev_close+0x1ae>
			19ddf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19de3:	48 83 fb 20          	cmp    $0x20,%rbx
   19de7:	75 cf                	jne    19db8 <dev_close+0x183>
   19de9:	30 db                	xor    %bl,%bl
   19deb:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19def:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   19df3:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   19df7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19dfd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19e00: R_X86_64_32S	.rodata.str1.1+0x2163
   19e04:	4c 89 e2             	mov    %r12,%rdx
   19e07:	4c 89 ee             	mov    %r13,%rsi
   19e0a:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   19e11:	48 01 d9             	add    %rbx,%rcx
   19e14:	48 ff c3             	inc    %rbx
   19e17:	e8 00 00 00 00       	callq  19e1c <dev_close+0x1e7>
			19e18: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19e1c:	48 83 fb 20          	cmp    $0x20,%rbx
   19e20:	75 c9                	jne    19deb <dev_close+0x1b6>
   19e22:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19e26:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   19e2c:	4c 89 e2             	mov    %r12,%rdx
   19e2f:	4c 89 ee             	mov    %r13,%rsi
   19e32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19e35: R_X86_64_32S	.rodata.str1.1+0x2163
   19e39:	30 db                	xor    %bl,%bl
   19e3b:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   19e42:	e8 00 00 00 00       	callq  19e47 <dev_close+0x212>
			19e43: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19e47:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19e4b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   19e51:	4c 89 e2             	mov    %r12,%rdx
   19e54:	4c 89 ee             	mov    %r13,%rsi
   19e57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19e5a: R_X86_64_32S	.rodata.str1.1+0x2163
   19e5e:	48 83 c1 48          	add    $0x48,%rcx
   19e62:	e8 00 00 00 00       	callq  19e67 <dev_close+0x232>
			19e63: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19e67:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19e6b:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   19e6f:	48 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%rsi
   19e73:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19e79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19e7c: R_X86_64_32S	.rodata.str1.1+0x2163
   19e80:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   19e87:	48 01 d9             	add    %rbx,%rcx
   19e8a:	48 ff c3             	inc    %rbx
   19e8d:	e8 00 00 00 00       	callq  19e92 <dev_close+0x25d>
			19e8e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19e92:	48 83 fb 20          	cmp    $0x20,%rbx
   19e96:	75 cf                	jne    19e67 <dev_close+0x232>
   19e98:	30 db                	xor    %bl,%bl
   19e9a:	48 89 d9             	mov    %rbx,%rcx
   19e9d:	48 03 4d d0          	add    0xffffffffffffffd0(%rbp),%rcx
   19ea1:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   19ea5:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   19ea9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19eaf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19eb2: R_X86_64_32S	.rodata.str1.1+0x2163
   19eb6:	4c 89 e2             	mov    %r12,%rdx
   19eb9:	48 ff c3             	inc    %rbx
   19ebc:	4c 89 ee             	mov    %r13,%rsi
   19ebf:	e8 00 00 00 00       	callq  19ec4 <dev_close+0x28f>
			19ec0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19ec4:	48 83 fb 10          	cmp    $0x10,%rbx
   19ec8:	75 d0                	jne    19e9a <dev_close+0x265>
   19eca:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19ece:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19ed4:	4c 89 e2             	mov    %r12,%rdx
   19ed7:	4c 89 ee             	mov    %r13,%rsi
   19eda:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19edd: R_X86_64_32S	.rodata.str1.1+0x2163
   19ee1:	30 db                	xor    %bl,%bl
   19ee3:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   19eea:	e8 00 00 00 00       	callq  19eef <dev_close+0x2ba>
			19eeb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19eef:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19ef3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   19ef9:	4c 89 e2             	mov    %r12,%rdx
   19efc:	4c 89 ee             	mov    %r13,%rsi
   19eff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19f02: R_X86_64_32S	.rodata.str1.1+0x2163
   19f06:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   19f0d:	e8 00 00 00 00       	callq  19f12 <dev_close+0x2dd>
			19f0e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19f12:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19f16:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   19f1a:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   19f1e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   19f24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19f27: R_X86_64_32S	.rodata.str1.1+0x2163
   19f2b:	4c 89 e2             	mov    %r12,%rdx
   19f2e:	4c 89 ee             	mov    %r13,%rsi
   19f31:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
   19f38:	48 01 d9             	add    %rbx,%rcx
   19f3b:	48 ff c3             	inc    %rbx
   19f3e:	e8 00 00 00 00       	callq  19f43 <dev_close+0x30e>
			19f3f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19f43:	48 83 fb 14          	cmp    $0x14,%rbx
   19f47:	75 c9                	jne    19f12 <dev_close+0x2dd>
   19f49:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   19f4d:	48 8d 5d dc          	lea    0xffffffffffffffdc(%rbp),%rbx
   19f51:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   19f57:	4c 89 e2             	mov    %r12,%rdx
   19f5a:	4c 89 ee             	mov    %r13,%rsi
   19f5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19f60: R_X86_64_32S	.rodata.str1.1+0x2163
   19f64:	48 89 d9             	mov    %rbx,%rcx
   19f67:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   19f6d:	83 e0 01             	and    $0x1,%eax
   19f70:	0f b6 c0             	movzbl %al,%eax
   19f73:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
   19f76:	e8 00 00 00 00       	callq  19f7b <dev_close+0x346>
			19f77: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19f7b:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   19f7f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   19f85:	48 89 d9             	mov    %rbx,%rcx
   19f88:	4c 89 e2             	mov    %r12,%rdx
   19f8b:	4c 89 ee             	mov    %r13,%rsi
   19f8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19f91: R_X86_64_32S	.rodata.str1.1+0x2163
   19f95:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   19f9b:	d0 e8                	shr    %al
   19f9d:	83 e0 01             	and    $0x1,%eax
   19fa0:	89 45 dc             	mov    %eax,0xffffffffffffffdc(%rbp)
   19fa3:	e8 00 00 00 00       	callq  19fa8 <dev_close+0x373>
			19fa4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   19fa8:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   19fac:	4c 89 e2             	mov    %r12,%rdx
   19faf:	4c 89 ee             	mov    %r13,%rsi
   19fb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19fb5: R_X86_64_32S	.rodata.str1.1+0x2163
   19fb9:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   19fc0:	e8 00 00 00 00       	callq  19fc5 <dev_close+0x390>
			19fc1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19fc5:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   19fc9:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   19fd0:	48 85 c0             	test   %rax,%rax
   19fd3:	0f 84 bb 00 00 00    	je     1a094 <dev_close+0x45f>
   19fd9:	48 8d 48 18          	lea    0x18(%rax),%rcx
   19fdd:	4c 89 e2             	mov    %r12,%rdx
   19fe0:	4c 89 ee             	mov    %r13,%rsi
   19fe3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19fe6: R_X86_64_32S	.rodata.str1.1+0x2163
   19fea:	e8 00 00 00 00       	callq  19fef <dev_close+0x3ba>
			19feb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   19fef:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   19ff3:	4c 89 e2             	mov    %r12,%rdx
   19ff6:	4c 89 ee             	mov    %r13,%rsi
   19ff9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19ffc: R_X86_64_32S	.rodata.str1.1+0x2163
   1a000:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a007:	48 83 c1 20          	add    $0x20,%rcx
   1a00b:	e8 00 00 00 00       	callq  1a010 <dev_close+0x3db>
			1a00c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a010:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a014:	4c 89 e2             	mov    %r12,%rdx
   1a017:	4c 89 ee             	mov    %r13,%rsi
   1a01a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a01d: R_X86_64_32S	.rodata.str1.1+0x2163
   1a021:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a028:	48 83 c1 30          	add    $0x30,%rcx
   1a02c:	e8 00 00 00 00       	callq  1a031 <dev_close+0x3fc>
			1a02d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a031:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a035:	4c 89 e2             	mov    %r12,%rdx
   1a038:	4c 89 ee             	mov    %r13,%rsi
   1a03b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a03e: R_X86_64_32S	.rodata.str1.1+0x2163
   1a042:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a049:	48 83 c1 10          	add    $0x10,%rcx
   1a04d:	e8 00 00 00 00       	callq  1a052 <dev_close+0x41d>
			1a04e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a052:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a056:	4c 89 e2             	mov    %r12,%rdx
   1a059:	4c 89 ee             	mov    %r13,%rsi
   1a05c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a05f: R_X86_64_32S	.rodata.str1.1+0x2163
   1a063:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a06a:	48 83 c1 28          	add    $0x28,%rcx
   1a06e:	e8 00 00 00 00       	callq  1a073 <dev_close+0x43e>
			1a06f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a073:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a077:	4c 89 e2             	mov    %r12,%rdx
   1a07a:	4c 89 ee             	mov    %r13,%rsi
   1a07d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a080: R_X86_64_32S	.rodata.str1.1+0x2163
   1a084:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a08b:	48 83 c1 08          	add    $0x8,%rcx
   1a08f:	e8 00 00 00 00       	callq  1a094 <dev_close+0x45f>
			1a090: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a094:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a098:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1a09e:	4c 89 e2             	mov    %r12,%rdx
   1a0a1:	4c 89 ee             	mov    %r13,%rsi
   1a0a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a0a7: R_X86_64_32S	.rodata.str1.1+0x2163
   1a0ab:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
   1a0b2:	e8 00 00 00 00       	callq  1a0b7 <dev_close+0x482>
			1a0b3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a0b7:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a0bb:	4c 89 e2             	mov    %r12,%rdx
   1a0be:	4c 89 ee             	mov    %r13,%rsi
   1a0c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a0c4: R_X86_64_32S	.rodata.str1.1+0x2163
   1a0c8:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   1a0cf:	e8 00 00 00 00       	callq  1a0d4 <dev_close+0x49f>
			1a0d0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a0d4:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a0d8:	4c 89 e2             	mov    %r12,%rdx
   1a0db:	4c 89 ee             	mov    %r13,%rsi
   1a0de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a0e1: R_X86_64_32S	.rodata.str1.1+0x2163
   1a0e5:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   1a0ec:	e8 00 00 00 00       	callq  1a0f1 <dev_close+0x4bc>
			1a0ed: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a0f1:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a0f5:	4c 89 e2             	mov    %r12,%rdx
   1a0f8:	4c 89 ee             	mov    %r13,%rsi
   1a0fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a0fe: R_X86_64_32S	.rodata.str1.1+0x2163
   1a102:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   1a109:	e8 00 00 00 00       	callq  1a10e <dev_close+0x4d9>
			1a10a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a10e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a112:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
   1a119:	48 85 c9             	test   %rcx,%rcx
   1a11c:	74 18                	je     1a136 <dev_close+0x501>
   1a11e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1a124:	4c 89 e2             	mov    %r12,%rdx
   1a127:	4c 89 ee             	mov    %r13,%rsi
   1a12a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a12d: R_X86_64_32S	.rodata.str1.1+0x2163
   1a131:	e8 00 00 00 00       	callq  1a136 <dev_close+0x501>
			1a132: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a136:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a13a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1a140:	4c 89 e2             	mov    %r12,%rdx
   1a143:	4c 89 ee             	mov    %r13,%rsi
   1a146:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a149: R_X86_64_32S	.rodata.str1.1+0x2163
   1a14d:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   1a154:	e8 00 00 00 00       	callq  1a159 <dev_close+0x524>
			1a155: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a159:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a15d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1a163:	4c 89 e2             	mov    %r12,%rdx
   1a166:	4c 89 ee             	mov    %r13,%rsi
   1a169:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a16c: R_X86_64_32S	.rodata.str1.1+0x2163
   1a170:	48 83 c1 70          	add    $0x70,%rcx
   1a174:	e8 00 00 00 00       	callq  1a179 <dev_close+0x544>
			1a175: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a179:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a17d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1a183:	4c 89 e2             	mov    %r12,%rdx
   1a186:	4c 89 ee             	mov    %r13,%rsi
   1a189:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a18c: R_X86_64_32S	.rodata.str1.1+0x2163
   1a190:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   1a197:	e8 00 00 00 00       	callq  1a19c <dev_close+0x567>
			1a198: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a19c:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a1a0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1a1a6:	4c 89 e2             	mov    %r12,%rdx
   1a1a9:	4c 89 ee             	mov    %r13,%rsi
   1a1ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a1af: R_X86_64_32S	.rodata.str1.1+0x2163
   1a1b3:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   1a1ba:	e8 00 00 00 00       	callq  1a1bf <dev_close+0x58a>
			1a1bb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a1bf:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a1c3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1a1c9:	4c 89 e2             	mov    %r12,%rdx
   1a1cc:	4c 89 ee             	mov    %r13,%rsi
   1a1cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a1d2: R_X86_64_32S	.rodata.str1.1+0x2163
   1a1d6:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   1a1dd:	e8 00 00 00 00       	callq  1a1e2 <dev_close+0x5ad>
			1a1de: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a1e2:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a1e6:	4c 89 e2             	mov    %r12,%rdx
   1a1e9:	4c 89 ee             	mov    %r13,%rsi
   1a1ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a1ef: R_X86_64_32S	.rodata.str1.1+0x2163
   1a1f3:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   1a1fa:	e8 00 00 00 00       	callq  1a1ff <dev_close+0x5ca>
			1a1fb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a1ff:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a203:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   1a20a:	00 
   1a20b:	74 5a                	je     1a267 <dev_close+0x632>
   1a20d:	31 db                	xor    %ebx,%ebx
   1a20f:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a213:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   1a217:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1a21b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a221:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a224: R_X86_64_32S	.rodata.str1.1+0x2163
   1a228:	4c 89 e2             	mov    %r12,%rdx
   1a22b:	4c 89 ee             	mov    %r13,%rsi
   1a22e:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1a235:	48 83 c1 08          	add    $0x8,%rcx
   1a239:	48 01 d9             	add    %rbx,%rcx
   1a23c:	48 ff c3             	inc    %rbx
   1a23f:	e8 00 00 00 00       	callq  1a244 <dev_close+0x60f>
			1a240: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a244:	48 83 fb 20          	cmp    $0x20,%rbx
   1a248:	75 c5                	jne    1a20f <dev_close+0x5da>
   1a24a:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a24e:	4c 89 e2             	mov    %r12,%rdx
   1a251:	4c 89 ee             	mov    %r13,%rsi
   1a254:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a257: R_X86_64_32S	.rodata.str1.1+0x2163
   1a25b:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1a262:	e8 00 00 00 00       	callq  1a267 <dev_close+0x632>
			1a263: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a267:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a26b:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   1a26f:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   1a273:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a276: R_X86_64_32S	.rodata.str1.1+0x2163
   1a27a:	48 89 da             	mov    %rbx,%rdx
   1a27d:	4c 89 e6             	mov    %r12,%rsi
   1a280:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1a287:	e8 00 00 00 00       	callq  1a28c <dev_close+0x657>
			1a288: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a28c:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a290:	48 89 da             	mov    %rbx,%rdx
   1a293:	4c 89 e6             	mov    %r12,%rsi
   1a296:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a299: R_X86_64_32S	.rodata.str1.1+0x2163
   1a29d:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1a2a4:	e8 00 00 00 00       	callq  1a2a9 <dev_close+0x674>
			1a2a5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a2a9:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a2ad:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   1a2b4:	48 85 c0             	test   %rax,%rax
   1a2b7:	74 37                	je     1a2f0 <dev_close+0x6bb>
   1a2b9:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1a2bd:	48 89 da             	mov    %rbx,%rdx
   1a2c0:	4c 89 e6             	mov    %r12,%rsi
   1a2c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a2c6: R_X86_64_32S	.rodata.str1.1+0x2163
   1a2ca:	e8 00 00 00 00       	callq  1a2cf <dev_close+0x69a>
			1a2cb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a2cf:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a2d3:	48 89 da             	mov    %rbx,%rdx
   1a2d6:	4c 89 e6             	mov    %r12,%rsi
   1a2d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a2dc: R_X86_64_32S	.rodata.str1.1+0x2163
   1a2e0:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1a2e7:	48 83 c1 58          	add    $0x58,%rcx
   1a2eb:	e8 00 00 00 00       	callq  1a2f0 <dev_close+0x6bb>
			1a2ec: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a2f0:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a2f4:	48 89 da             	mov    %rbx,%rdx
   1a2f7:	4c 89 e6             	mov    %r12,%rsi
   1a2fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a2fd: R_X86_64_32S	.rodata.str1.1+0x2163
   1a301:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1a308:	e8 00 00 00 00       	callq  1a30d <dev_close+0x6d8>
			1a309: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a30d:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a311:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   1a318:	48 85 c0             	test   %rax,%rax
   1a31b:	74 3d                	je     1a35a <dev_close+0x725>
   1a31d:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1a321:	48 89 da             	mov    %rbx,%rdx
   1a324:	4c 89 e6             	mov    %r12,%rsi
   1a327:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a32a: R_X86_64_32S	.rodata.str1.1+0x2163
   1a32e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1a334:	e8 00 00 00 00       	callq  1a339 <dev_close+0x704>
			1a335: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a339:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a33d:	48 89 da             	mov    %rbx,%rdx
   1a340:	4c 89 e6             	mov    %r12,%rsi
   1a343:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a346: R_X86_64_32S	.rodata.str1.1+0x2163
   1a34a:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   1a351:	48 83 c1 08          	add    $0x8,%rcx
   1a355:	e8 00 00 00 00       	callq  1a35a <dev_close+0x725>
			1a356: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a35a:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   1a35e:	48 89 da             	mov    %rbx,%rdx
   1a361:	4c 89 e6             	mov    %r12,%rsi
   1a364:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a367: R_X86_64_32S	.rodata.str1.1+0x2163
   1a36b:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   1a372:	e8 00 00 00 00       	callq  1a377 <dev_close+0x742>
			1a373: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a377:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a37b:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   1a382:	00 
   1a383:	74 5a                	je     1a3df <dev_close+0x7aa>
   1a385:	31 db                	xor    %ebx,%ebx
   1a387:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a38b:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   1a38f:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1a393:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a399:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a39c: R_X86_64_32S	.rodata.str1.1+0x2163
   1a3a0:	4c 89 e2             	mov    %r12,%rdx
   1a3a3:	4c 89 ee             	mov    %r13,%rsi
   1a3a6:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1a3ad:	48 83 c1 08          	add    $0x8,%rcx
   1a3b1:	48 01 d9             	add    %rbx,%rcx
   1a3b4:	48 ff c3             	inc    %rbx
   1a3b7:	e8 00 00 00 00       	callq  1a3bc <dev_close+0x787>
			1a3b8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1a3bc:	48 83 fb 20          	cmp    $0x20,%rbx
   1a3c0:	75 c5                	jne    1a387 <dev_close+0x752>
   1a3c2:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   1a3c6:	4c 89 e2             	mov    %r12,%rdx
   1a3c9:	4c 89 ee             	mov    %r13,%rsi
   1a3cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a3cf: R_X86_64_32S	.rodata.str1.1+0x2163
   1a3d3:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1a3da:	e8 00 00 00 00       	callq  1a3df <dev_close+0x7aa>
			1a3db: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1a3df:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a3e3:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   1a3e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a3ea: R_X86_64_32S	.rodata.str1.1+0x2163
   1a3ee:	48 c7 45 b0 79 04 00 	movq   $0x479,0xffffffffffffffb0(%rbp)
   1a3f5:	00 
   1a3f6:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   1a3fa:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   1a3fe:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
   1a401:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
   1a404:	e8 00 00 00 00       	callq  1a409 <dev_close+0x7d4>
			1a405: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   1a409:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a40c: R_X86_64_32S	.rodata.str1.1+0x2185
   1a410:	4c 89 75 c8          	mov    %r14,0xffffffffffffffc8(%rbp)
   1a414:	e8 00 00 00 00       	callq  1a419 <dev_close+0x7e4>
			1a415: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1a419:	4c 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12
   1a41d:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   1a421:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a424: R_X86_64_32S	.rodata.str1.1+0x2163
   1a428:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   1a42e:	48 89 da             	mov    %rbx,%rdx
   1a431:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   1a438:	4c 89 e6             	mov    %r12,%rsi
   1a43b:	e8 00 00 00 00       	callq  1a440 <dev_close+0x80b>
			1a43c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a440:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   1a444:	48 85 ff             	test   %rdi,%rdi
   1a447:	0f 84 db 07 00 00    	je     1ac28 <dev_close+0xff3>
   1a44d:	ba 08 00 00 00       	mov    $0x8,%edx
   1a452:	be 10 03 00 00       	mov    $0x310,%esi
   1a457:	e8 00 00 00 00       	callq  1a45c <dev_close+0x827>
			1a458: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1a45c:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a460:	48 89 da             	mov    %rbx,%rdx
   1a463:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a468:	4c 89 e6             	mov    %r12,%rsi
   1a46b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a46e: R_X86_64_32S	.rodata.str1.1+0x2163
   1a472:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   1a479:	e8 00 00 00 00       	callq  1a47e <dev_close+0x849>
			1a47a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a47e:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a482:	48 89 da             	mov    %rbx,%rdx
   1a485:	b9 02 00 00 00       	mov    $0x2,%ecx
   1a48a:	4c 89 e6             	mov    %r12,%rsi
   1a48d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a490: R_X86_64_32S	.rodata.str1.1+0x2163
   1a494:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   1a49b:	e8 00 00 00 00       	callq  1a4a0 <dev_close+0x86b>
			1a49c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a4a0:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a4a4:	48 89 da             	mov    %rbx,%rdx
   1a4a7:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a4ac:	4c 89 e6             	mov    %r12,%rsi
   1a4af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a4b2: R_X86_64_32S	.rodata.str1.1+0x2163
   1a4b6:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   1a4bd:	e8 00 00 00 00       	callq  1a4c2 <dev_close+0x88d>
			1a4be: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a4c2:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a4c6:	48 89 da             	mov    %rbx,%rdx
   1a4c9:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a4ce:	4c 89 e6             	mov    %r12,%rsi
   1a4d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a4d4: R_X86_64_32S	.rodata.str1.1+0x2163
   1a4d8:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   1a4df:	e8 00 00 00 00       	callq  1a4e4 <dev_close+0x8af>
			1a4e0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a4e4:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a4e8:	48 89 da             	mov    %rbx,%rdx
   1a4eb:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a4f0:	4c 89 e6             	mov    %r12,%rsi
   1a4f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a4f6: R_X86_64_32S	.rodata.str1.1+0x2163
   1a4fa:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   1a501:	e8 00 00 00 00       	callq  1a506 <dev_close+0x8d1>
			1a502: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a506:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a50a:	48 89 da             	mov    %rbx,%rdx
   1a50d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a513:	4c 89 e6             	mov    %r12,%rsi
   1a516:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a519: R_X86_64_32S	.rodata.str1.1+0x2163
   1a51d:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1a524:	e8 00 00 00 00       	callq  1a529 <dev_close+0x8f4>
			1a525: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a529:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a52d:	48 89 da             	mov    %rbx,%rdx
   1a530:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a536:	4c 89 e6             	mov    %r12,%rsi
   1a539:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a53c: R_X86_64_32S	.rodata.str1.1+0x2163
   1a540:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1a547:	e8 00 00 00 00       	callq  1a54c <dev_close+0x917>
			1a548: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a54c:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a550:	48 89 da             	mov    %rbx,%rdx
   1a553:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a559:	4c 89 e6             	mov    %r12,%rsi
   1a55c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a55f: R_X86_64_32S	.rodata.str1.1+0x2163
   1a563:	31 db                	xor    %ebx,%ebx
   1a565:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   1a56c:	e8 00 00 00 00       	callq  1a571 <dev_close+0x93c>
			1a56d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a571:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a575:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1a579:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a57e:	4c 89 e6             	mov    %r12,%rsi
   1a581:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a584: R_X86_64_32S	.rodata.str1.1+0x2163
   1a588:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   1a58f:	49 01 d8             	add    %rbx,%r8
   1a592:	48 ff c3             	inc    %rbx
   1a595:	e8 00 00 00 00       	callq  1a59a <dev_close+0x965>
			1a596: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a59a:	48 83 fb 20          	cmp    $0x20,%rbx
   1a59e:	75 d1                	jne    1a571 <dev_close+0x93c>
   1a5a0:	30 db                	xor    %bl,%bl
   1a5a2:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a5a6:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   1a5aa:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a5af:	4c 89 e6             	mov    %r12,%rsi
   1a5b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a5b5: R_X86_64_32S	.rodata.str1.1+0x2163
   1a5b9:	4c 89 ea             	mov    %r13,%rdx
   1a5bc:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   1a5c3:	49 01 d8             	add    %rbx,%r8
   1a5c6:	48 ff c3             	inc    %rbx
   1a5c9:	e8 00 00 00 00       	callq  1a5ce <dev_close+0x999>
			1a5ca: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a5ce:	48 83 fb 20          	cmp    $0x20,%rbx
   1a5d2:	75 ce                	jne    1a5a2 <dev_close+0x96d>
   1a5d4:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a5d8:	b9 02 00 00 00       	mov    $0x2,%ecx
   1a5dd:	4c 89 ea             	mov    %r13,%rdx
   1a5e0:	4c 89 e6             	mov    %r12,%rsi
   1a5e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a5e6: R_X86_64_32S	.rodata.str1.1+0x2163
   1a5ea:	30 db                	xor    %bl,%bl
   1a5ec:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   1a5f3:	e8 00 00 00 00       	callq  1a5f8 <dev_close+0x9c3>
			1a5f4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a5f8:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   1a5fc:	ba 08 00 00 00       	mov    $0x8,%edx
   1a601:	be 48 00 00 00       	mov    $0x48,%esi
   1a606:	e8 00 00 00 00       	callq  1a60b <dev_close+0x9d6>
			1a607: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1a60b:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a60f:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a614:	4c 89 ea             	mov    %r13,%rdx
   1a617:	4c 89 e6             	mov    %r12,%rsi
   1a61a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a61d: R_X86_64_32S	.rodata.str1.1+0x2163
   1a621:	49 83 c0 48          	add    $0x48,%r8
   1a625:	e8 00 00 00 00       	callq  1a62a <dev_close+0x9f5>
			1a626: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a62a:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a62e:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1a632:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a637:	4c 89 e6             	mov    %r12,%rsi
   1a63a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a63d: R_X86_64_32S	.rodata.str1.1+0x2163
   1a641:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   1a648:	49 01 d8             	add    %rbx,%r8
   1a64b:	48 ff c3             	inc    %rbx
   1a64e:	e8 00 00 00 00       	callq  1a653 <dev_close+0xa1e>
			1a64f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a653:	48 83 fb 20          	cmp    $0x20,%rbx
   1a657:	75 d1                	jne    1a62a <dev_close+0x9f5>
   1a659:	30 db                	xor    %bl,%bl
   1a65b:	49 89 d8             	mov    %rbx,%r8
   1a65e:	4c 03 45 c8          	add    0xffffffffffffffc8(%rbp),%r8
   1a662:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   1a666:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a66b:	4c 89 e6             	mov    %r12,%rsi
   1a66e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a671: R_X86_64_32S	.rodata.str1.1+0x2163
   1a675:	4c 89 ea             	mov    %r13,%rdx
   1a678:	48 ff c3             	inc    %rbx
   1a67b:	e8 00 00 00 00       	callq  1a680 <dev_close+0xa4b>
			1a67c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a680:	48 83 fb 10          	cmp    $0x10,%rbx
   1a684:	75 d5                	jne    1a65b <dev_close+0xa26>
   1a686:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   1a68a:	ba 10 00 00 00       	mov    $0x10,%edx
   1a68f:	be 18 04 00 00       	mov    $0x418,%esi
   1a694:	30 db                	xor    %bl,%bl
   1a696:	e8 00 00 00 00       	callq  1a69b <dev_close+0xa66>
			1a697: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1a69b:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a69f:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a6a4:	4c 89 ea             	mov    %r13,%rdx
   1a6a7:	4c 89 e6             	mov    %r12,%rsi
   1a6aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a6ad: R_X86_64_32S	.rodata.str1.1+0x2163
   1a6b1:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   1a6b8:	e8 00 00 00 00       	callq  1a6bd <dev_close+0xa88>
			1a6b9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a6bd:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a6c1:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   1a6c5:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a6ca:	4c 89 e6             	mov    %r12,%rsi
   1a6cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a6d0: R_X86_64_32S	.rodata.str1.1+0x2163
   1a6d4:	4c 89 ea             	mov    %r13,%rdx
   1a6d7:	49 81 c0 60 05 00 00 	add    $0x560,%r8
   1a6de:	49 01 d8             	add    %rbx,%r8
   1a6e1:	48 ff c3             	inc    %rbx
   1a6e4:	e8 00 00 00 00       	callq  1a6e9 <dev_close+0xab4>
			1a6e5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a6e9:	48 83 fb 14          	cmp    $0x14,%rbx
   1a6ed:	75 ce                	jne    1a6bd <dev_close+0xa88>
   1a6ef:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   1a6f3:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a6f8:	4c 89 ea             	mov    %r13,%rdx
   1a6fb:	4c 89 e6             	mov    %r12,%rsi
   1a6fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a701: R_X86_64_32S	.rodata.str1.1+0x2163
   1a705:	49 89 d8             	mov    %rbx,%r8
   1a708:	e8 00 00 00 00       	callq  1a70d <dev_close+0xad8>
			1a709: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a70d:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a711:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   1a714:	49 89 d8             	mov    %rbx,%r8
   1a717:	4c 89 e6             	mov    %r12,%rsi
   1a71a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a71d: R_X86_64_32S	.rodata.str1.1+0x2163
   1a721:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   1a727:	83 e2 01             	and    $0x1,%edx
   1a72a:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   1a72d:	09 d0                	or     %edx,%eax
   1a72f:	4c 89 ea             	mov    %r13,%rdx
   1a732:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   1a738:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a73d:	e8 00 00 00 00       	callq  1a742 <dev_close+0xb0d>
			1a73e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a742:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a746:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   1a749:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   1a74f:	4c 89 e6             	mov    %r12,%rsi
   1a752:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a755: R_X86_64_32S	.rodata.str1.1+0x2163
   1a759:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   1a75f:	83 e2 01             	and    $0x1,%edx
   1a762:	01 d2                	add    %edx,%edx
   1a764:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   1a767:	09 d0                	or     %edx,%eax
   1a769:	4c 89 ea             	mov    %r13,%rdx
   1a76c:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   1a772:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a776:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   1a77d:	e8 00 00 00 00       	callq  1a782 <dev_close+0xb4d>
			1a77e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a782:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a786:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   1a78d:	48 85 c0             	test   %rax,%rax
   1a790:	0f 84 df 00 00 00    	je     1a875 <dev_close+0xc40>
   1a796:	48 8d 48 18          	lea    0x18(%rax),%rcx
   1a79a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a7a0:	4c 89 ea             	mov    %r13,%rdx
   1a7a3:	4c 89 e6             	mov    %r12,%rsi
   1a7a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a7a9: R_X86_64_32S	.rodata.str1.1+0x2163
   1a7ad:	e8 00 00 00 00       	callq  1a7b2 <dev_close+0xb7d>
			1a7ae: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a7b2:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a7b6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a7bc:	4c 89 ea             	mov    %r13,%rdx
   1a7bf:	4c 89 e6             	mov    %r12,%rsi
   1a7c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a7c5: R_X86_64_32S	.rodata.str1.1+0x2163
   1a7c9:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a7d0:	48 83 c1 20          	add    $0x20,%rcx
   1a7d4:	e8 00 00 00 00       	callq  1a7d9 <dev_close+0xba4>
			1a7d5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a7d9:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a7dd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a7e3:	4c 89 ea             	mov    %r13,%rdx
   1a7e6:	4c 89 e6             	mov    %r12,%rsi
   1a7e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a7ec: R_X86_64_32S	.rodata.str1.1+0x2163
   1a7f0:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a7f7:	48 83 c1 30          	add    $0x30,%rcx
   1a7fb:	e8 00 00 00 00       	callq  1a800 <dev_close+0xbcb>
			1a7fc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a800:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a804:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a80a:	4c 89 ea             	mov    %r13,%rdx
   1a80d:	4c 89 e6             	mov    %r12,%rsi
   1a810:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a813: R_X86_64_32S	.rodata.str1.1+0x2163
   1a817:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a81e:	48 83 c1 10          	add    $0x10,%rcx
   1a822:	e8 00 00 00 00       	callq  1a827 <dev_close+0xbf2>
			1a823: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a827:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a82b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a831:	4c 89 ea             	mov    %r13,%rdx
   1a834:	4c 89 e6             	mov    %r12,%rsi
   1a837:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a83a: R_X86_64_32S	.rodata.str1.1+0x2163
   1a83e:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a845:	48 83 c1 28          	add    $0x28,%rcx
   1a849:	e8 00 00 00 00       	callq  1a84e <dev_close+0xc19>
			1a84a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a84e:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a852:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a858:	4c 89 ea             	mov    %r13,%rdx
   1a85b:	4c 89 e6             	mov    %r12,%rsi
   1a85e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a861: R_X86_64_32S	.rodata.str1.1+0x2163
   1a865:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   1a86c:	48 83 c1 08          	add    $0x8,%rcx
   1a870:	e8 00 00 00 00       	callq  1a875 <dev_close+0xc40>
			1a871: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a875:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a879:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a87e:	4c 89 ea             	mov    %r13,%rdx
   1a881:	4c 89 e6             	mov    %r12,%rsi
   1a884:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a887: R_X86_64_32S	.rodata.str1.1+0x2163
   1a88b:	49 81 c0 20 06 00 00 	add    $0x620,%r8
   1a892:	e8 00 00 00 00       	callq  1a897 <dev_close+0xc62>
			1a893: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a897:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a89b:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   1a8a1:	4c 89 ea             	mov    %r13,%rdx
   1a8a4:	4c 89 e6             	mov    %r12,%rsi
   1a8a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a8aa: R_X86_64_32S	.rodata.str1.1+0x2163
   1a8ae:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   1a8b5:	e8 00 00 00 00       	callq  1a8ba <dev_close+0xc85>
			1a8b6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a8ba:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a8be:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   1a8c4:	4c 89 ea             	mov    %r13,%rdx
   1a8c7:	4c 89 e6             	mov    %r12,%rsi
   1a8ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a8cd: R_X86_64_32S	.rodata.str1.1+0x2163
   1a8d1:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   1a8d8:	e8 00 00 00 00       	callq  1a8dd <dev_close+0xca8>
			1a8d9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a8dd:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a8e1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1a8e7:	4c 89 ea             	mov    %r13,%rdx
   1a8ea:	4c 89 e6             	mov    %r12,%rsi
   1a8ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a8f0: R_X86_64_32S	.rodata.str1.1+0x2163
   1a8f4:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   1a8fb:	e8 00 00 00 00       	callq  1a900 <dev_close+0xccb>
			1a8fc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1a900:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1a904:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
   1a90b:	48 85 c0             	test   %rax,%rax
   1a90e:	74 1a                	je     1a92a <dev_close+0xcf5>
   1a910:	49 89 c0             	mov    %rax,%r8
   1a913:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a918:	4c 89 ea             	mov    %r13,%rdx
   1a91b:	4c 89 e6             	mov    %r12,%rsi
   1a91e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a921: R_X86_64_32S	.rodata.str1.1+0x2163
   1a925:	e8 00 00 00 00       	callq  1a92a <dev_close+0xcf5>
			1a926: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a92a:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a92e:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a933:	4c 89 ea             	mov    %r13,%rdx
   1a936:	4c 89 e6             	mov    %r12,%rsi
   1a939:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a93c: R_X86_64_32S	.rodata.str1.1+0x2163
   1a940:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   1a947:	e8 00 00 00 00       	callq  1a94c <dev_close+0xd17>
			1a948: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a94c:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a950:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a955:	4c 89 ea             	mov    %r13,%rdx
   1a958:	4c 89 e6             	mov    %r12,%rsi
   1a95b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a95e: R_X86_64_32S	.rodata.str1.1+0x2163
   1a962:	49 83 c0 70          	add    $0x70,%r8
   1a966:	e8 00 00 00 00       	callq  1a96b <dev_close+0xd36>
			1a967: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a96b:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   1a96f:	ba 10 00 00 00       	mov    $0x10,%edx
   1a974:	be 10 00 00 00       	mov    $0x10,%esi
   1a979:	e8 00 00 00 00       	callq  1a97e <dev_close+0xd49>
			1a97a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1a97e:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a982:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a987:	4c 89 ea             	mov    %r13,%rdx
   1a98a:	4c 89 e6             	mov    %r12,%rsi
   1a98d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a990: R_X86_64_32S	.rodata.str1.1+0x2163
   1a994:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   1a99b:	e8 00 00 00 00       	callq  1a9a0 <dev_close+0xd6b>
			1a99c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a9a0:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a9a4:	b9 08 00 00 00       	mov    $0x8,%ecx
   1a9a9:	4c 89 ea             	mov    %r13,%rdx
   1a9ac:	4c 89 e6             	mov    %r12,%rsi
   1a9af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a9b2: R_X86_64_32S	.rodata.str1.1+0x2163
   1a9b6:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   1a9bd:	e8 00 00 00 00       	callq  1a9c2 <dev_close+0xd8d>
			1a9be: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a9c2:	4c 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%r8
   1a9c6:	b9 04 00 00 00       	mov    $0x4,%ecx
   1a9cb:	4c 89 ea             	mov    %r13,%rdx
   1a9ce:	4c 89 e6             	mov    %r12,%rsi
   1a9d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a9d4: R_X86_64_32S	.rodata.str1.1+0x2163
   1a9d8:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   1a9df:	e8 00 00 00 00       	callq  1a9e4 <dev_close+0xdaf>
			1a9e0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1a9e4:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1a9e8:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1a9ee:	4c 89 ea             	mov    %r13,%rdx
   1a9f1:	4c 89 e6             	mov    %r12,%rsi
   1a9f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a9f7: R_X86_64_32S	.rodata.str1.1+0x2163
   1a9fb:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   1aa02:	e8 00 00 00 00       	callq  1aa07 <dev_close+0xdd2>
			1aa03: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1aa07:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1aa0b:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   1aa12:	00 
   1aa13:	74 5b                	je     1aa70 <dev_close+0xe3b>
   1aa15:	31 db                	xor    %ebx,%ebx
   1aa17:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1aa1b:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   1aa1f:	b9 01 00 00 00       	mov    $0x1,%ecx
   1aa24:	4c 89 e6             	mov    %r12,%rsi
   1aa27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aa2a: R_X86_64_32S	.rodata.str1.1+0x2163
   1aa2e:	4c 89 ea             	mov    %r13,%rdx
   1aa31:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   1aa38:	49 83 c0 08          	add    $0x8,%r8
   1aa3c:	49 01 d8             	add    %rbx,%r8
   1aa3f:	48 ff c3             	inc    %rbx
   1aa42:	e8 00 00 00 00       	callq  1aa47 <dev_close+0xe12>
			1aa43: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1aa47:	48 83 fb 20          	cmp    $0x20,%rbx
   1aa4b:	75 ca                	jne    1aa17 <dev_close+0xde2>
   1aa4d:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1aa51:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1aa57:	4c 89 ea             	mov    %r13,%rdx
   1aa5a:	4c 89 e6             	mov    %r12,%rsi
   1aa5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aa60: R_X86_64_32S	.rodata.str1.1+0x2163
   1aa64:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1aa6b:	e8 00 00 00 00       	callq  1aa70 <dev_close+0xe3b>
			1aa6c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1aa70:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1aa74:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   1aa78:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   1aa7e:	4c 89 e6             	mov    %r12,%rsi
   1aa81:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aa84: R_X86_64_32S	.rodata.str1.1+0x2163
   1aa88:	48 89 da             	mov    %rbx,%rdx
   1aa8b:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1aa92:	e8 00 00 00 00       	callq  1aa97 <dev_close+0xe62>
			1aa93: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1aa97:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1aa9b:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   1aaa1:	48 89 da             	mov    %rbx,%rdx
   1aaa4:	4c 89 e6             	mov    %r12,%rsi
   1aaa7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aaaa: R_X86_64_32S	.rodata.str1.1+0x2163
   1aaae:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1aab5:	e8 00 00 00 00       	callq  1aaba <dev_close+0xe85>
			1aab6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1aaba:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1aabe:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   1aac5:	48 85 c0             	test   %rax,%rax
   1aac8:	74 43                	je     1ab0d <dev_close+0xed8>
   1aaca:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1aace:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1aad4:	48 89 da             	mov    %rbx,%rdx
   1aad7:	4c 89 e6             	mov    %r12,%rsi
   1aada:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aadd: R_X86_64_32S	.rodata.str1.1+0x2163
   1aae1:	e8 00 00 00 00       	callq  1aae6 <dev_close+0xeb1>
			1aae2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1aae6:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1aaea:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1aaf0:	48 89 da             	mov    %rbx,%rdx
   1aaf3:	4c 89 e6             	mov    %r12,%rsi
   1aaf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aaf9: R_X86_64_32S	.rodata.str1.1+0x2163
   1aafd:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1ab04:	48 83 c1 58          	add    $0x58,%rcx
   1ab08:	e8 00 00 00 00       	callq  1ab0d <dev_close+0xed8>
			1ab09: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1ab0d:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1ab11:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ab14: R_X86_64_32S	.rodata.str1.1+0x2163
   1ab18:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   1ab1e:	48 89 da             	mov    %rbx,%rdx
   1ab21:	4c 89 e6             	mov    %r12,%rsi
   1ab24:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1ab2b:	e8 00 00 00 00       	callq  1ab30 <dev_close+0xefb>
			1ab2c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1ab30:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1ab34:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   1ab3b:	48 85 ff             	test   %rdi,%rdi
   1ab3e:	74 5c                	je     1ab9c <dev_close+0xf67>
   1ab40:	ba 08 00 00 00       	mov    $0x8,%edx
   1ab45:	be 10 00 00 00       	mov    $0x10,%esi
   1ab4a:	e8 00 00 00 00       	callq  1ab4f <dev_close+0xf1a>
			1ab4b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1ab4f:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1ab53:	b9 08 00 00 00       	mov    $0x8,%ecx
   1ab58:	48 89 da             	mov    %rbx,%rdx
   1ab5b:	4c 89 e6             	mov    %r12,%rsi
   1ab5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ab61: R_X86_64_32S	.rodata.str1.1+0x2163
   1ab65:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   1ab6c:	49 83 c0 10          	add    $0x10,%r8
   1ab70:	e8 00 00 00 00       	callq  1ab75 <dev_close+0xf40>
			1ab71: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1ab75:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1ab79:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   1ab7f:	48 89 da             	mov    %rbx,%rdx
   1ab82:	4c 89 e6             	mov    %r12,%rsi
   1ab85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ab88: R_X86_64_32S	.rodata.str1.1+0x2163
   1ab8c:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   1ab93:	48 83 c1 08          	add    $0x8,%rcx
   1ab97:	e8 00 00 00 00       	callq  1ab9c <dev_close+0xf67>
			1ab98: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1ab9c:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   1aba0:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1aba6:	48 89 da             	mov    %rbx,%rdx
   1aba9:	4c 89 e6             	mov    %r12,%rsi
   1abac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1abaf: R_X86_64_32S	.rodata.str1.1+0x2163
   1abb3:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   1abba:	e8 00 00 00 00       	callq  1abbf <dev_close+0xf8a>
			1abbb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1abbf:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1abc3:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   1abca:	00 
   1abcb:	74 5b                	je     1ac28 <dev_close+0xff3>
   1abcd:	31 db                	xor    %ebx,%ebx
   1abcf:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1abd3:	4c 8d 6d d8          	lea    0xffffffffffffffd8(%rbp),%r13
   1abd7:	b9 01 00 00 00       	mov    $0x1,%ecx
   1abdc:	4c 89 e6             	mov    %r12,%rsi
   1abdf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1abe2: R_X86_64_32S	.rodata.str1.1+0x2163
   1abe6:	4c 89 ea             	mov    %r13,%rdx
   1abe9:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   1abf0:	49 83 c0 08          	add    $0x8,%r8
   1abf4:	49 01 d8             	add    %rbx,%r8
   1abf7:	48 ff c3             	inc    %rbx
   1abfa:	e8 00 00 00 00       	callq  1abff <dev_close+0xfca>
			1abfb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1abff:	48 83 fb 20          	cmp    $0x20,%rbx
   1ac03:	75 ca                	jne    1abcf <dev_close+0xf9a>
   1ac05:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   1ac09:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1ac0f:	4c 89 ea             	mov    %r13,%rdx
   1ac12:	4c 89 e6             	mov    %r12,%rsi
   1ac15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ac18: R_X86_64_32S	.rodata.str1.1+0x2163
   1ac1c:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1ac23:	e8 00 00 00 00       	callq  1ac28 <dev_close+0xff3>
			1ac24: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1ac28:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1ac2c:	4c 8d 45 dc          	lea    0xffffffffffffffdc(%rbp),%r8
   1ac30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ac33: R_X86_64_32S	.rodata.str1.1+0x2163
   1ac37:	b9 04 00 00 00       	mov    $0x4,%ecx
   1ac3c:	4c 89 e6             	mov    %r12,%rsi
   1ac3f:	e8 00 00 00 00       	callq  1ac44 <dev_close+0x100f>
			1ac40: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1ac44:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   1ac48:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
   1ac4b:	48 85 ff             	test   %rdi,%rdi
   1ac4e:	74 05                	je     1ac55 <dev_close+0x1020>
   1ac50:	e8 00 00 00 00       	callq  1ac55 <dev_close+0x1020>
			1ac51: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1ac55:	48 83 c4 30          	add    $0x30,%rsp
   1ac59:	89 d8                	mov    %ebx,%eax
   1ac5b:	5b                   	pop    %rbx
   1ac5c:	41 5c                	pop    %r12
   1ac5e:	41 5d                	pop    %r13
   1ac60:	41 5e                	pop    %r14
   1ac62:	c9                   	leaveq 
   1ac63:	c3                   	retq   

000000000001ac64 <pci_select_bars>:
   1ac64:	55                   	push   %rbp
   1ac65:	48 89 e5             	mov    %rsp,%rbp
   1ac68:	41 57                	push   %r15
   1ac6a:	41 56                	push   %r14
   1ac6c:	41 55                	push   %r13
   1ac6e:	41 54                	push   %r12
   1ac70:	53                   	push   %rbx
   1ac71:	48 83 ec 58          	sub    $0x58,%rsp
   1ac75:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
   1ac79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ac7c: R_X86_64_32S	.rodata.str1.1+0x219d
   1ac80:	48 89 75 80          	mov    %rsi,0xffffffffffffff80(%rbp)
   1ac84:	e8 00 00 00 00       	callq  1ac89 <pci_select_bars+0x25>
			1ac85: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ac89:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   1ac8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ac90: R_X86_64_32S	.rodata.str1.1+0x21ad
   1ac94:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   1ac9b:	00 
   1ac9c:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   1aca3:	00 
   1aca4:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   1acab:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   1acaf:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   1acb3:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   1acb7:	e8 00 00 00 00       	callq  1acbc <pci_select_bars+0x58>
			1acb8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1acbc:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   1acc0:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1acc4:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   1acc8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1accb: R_X86_64_32S	.rodata.str1.1+0x219d
   1accf:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   1acd6:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   1acdd:	00 
   1acde:	e8 00 00 00 00       	callq  1ace3 <pci_select_bars+0x7f>
			1acdf: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1ace3:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   1ace8:	0f 84 5c 09 00 00    	je     1b64a <pci_select_bars+0x9e6>
   1acee:	45 31 ff             	xor    %r15d,%r15d
   1acf1:	45 31 f6             	xor    %r14d,%r14d
   1acf4:	49 8d 9e 00 03 00 00 	lea    0x300(%r14),%rbx
   1acfb:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   1acff:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   1ad03:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1ad09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ad0c: R_X86_64_32S	.rodata.str1.1+0x219d
   1ad10:	41 ff c7             	inc    %r15d
   1ad13:	48 89 d9             	mov    %rbx,%rcx
   1ad16:	48 03 4d b0          	add    0xffffffffffffffb0(%rbp),%rcx
   1ad1a:	4c 89 e2             	mov    %r12,%rdx
   1ad1d:	4c 89 ee             	mov    %r13,%rsi
   1ad20:	48 83 c1 08          	add    $0x8,%rcx
   1ad24:	e8 00 00 00 00       	callq  1ad29 <pci_select_bars+0xc5>
			1ad25: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ad29:	48 03 5d b0          	add    0xffffffffffffffb0(%rbp),%rbx
   1ad2d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1ad33:	4c 89 e2             	mov    %r12,%rdx
   1ad36:	4c 89 ee             	mov    %r13,%rsi
   1ad39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ad3c: R_X86_64_32S	.rodata.str1.1+0x219d
   1ad40:	48 89 d9             	mov    %rbx,%rcx
   1ad43:	e8 00 00 00 00       	callq  1ad48 <pci_select_bars+0xe4>
			1ad44: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ad48:	4c 89 f1             	mov    %r14,%rcx
   1ad4b:	48 03 4d b0          	add    0xffffffffffffffb0(%rbp),%rcx
   1ad4f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1ad55:	4c 89 e2             	mov    %r12,%rdx
   1ad58:	4c 89 ee             	mov    %r13,%rsi
   1ad5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ad5e: R_X86_64_32S	.rodata.str1.1+0x219d
   1ad62:	49 83 c6 38          	add    $0x38,%r14
   1ad66:	48 81 c1 18 03 00 00 	add    $0x318,%rcx
   1ad6d:	e8 00 00 00 00       	callq  1ad72 <pci_select_bars+0x10e>
			1ad6e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ad72:	41 83 ff 0c          	cmp    $0xc,%r15d
   1ad76:	0f 85 78 ff ff ff    	jne    1acf4 <pci_select_bars+0x90>
   1ad7c:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1ad80:	4c 89 e2             	mov    %r12,%rdx
   1ad83:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1ad89:	4c 89 ee             	mov    %r13,%rsi
   1ad8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ad8f: R_X86_64_32S	.rodata.str1.1+0x219d
   1ad93:	45 31 ff             	xor    %r15d,%r15d
   1ad96:	48 83 c1 48          	add    $0x48,%rcx
   1ad9a:	e8 00 00 00 00       	callq  1ad9f <pci_select_bars+0x13b>
			1ad9b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ad9f:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1ada3:	4c 89 e2             	mov    %r12,%rdx
   1ada6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1adac:	4c 89 ee             	mov    %r13,%rsi
   1adaf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1adb2: R_X86_64_32S	.rodata.str1.1+0x219d
   1adb6:	48 83 c1 38          	add    $0x38,%rcx
   1adba:	e8 00 00 00 00       	callq  1adbf <pci_select_bars+0x15b>
			1adbb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1adbf:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1adc3:	4c 89 e2             	mov    %r12,%rdx
   1adc6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1adcc:	4c 89 ee             	mov    %r13,%rsi
   1adcf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1add2: R_X86_64_32S	.rodata.str1.1+0x219d
   1add6:	48 83 c1 7c          	add    $0x7c,%rcx
   1adda:	e8 00 00 00 00       	callq  1addf <pci_select_bars+0x17b>
			1addb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1addf:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1ade3:	4c 89 e2             	mov    %r12,%rdx
   1ade6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1adec:	4c 89 ee             	mov    %r13,%rsi
   1adef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1adf2: R_X86_64_32S	.rodata.str1.1+0x219d
   1adf6:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   1adfd:	e8 00 00 00 00       	callq  1ae02 <pci_select_bars+0x19e>
			1adfe: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ae02:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1ae06:	4c 89 e2             	mov    %r12,%rdx
   1ae09:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1ae0f:	4c 89 ee             	mov    %r13,%rsi
   1ae12:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ae15: R_X86_64_32S	.rodata.str1.1+0x219d
   1ae19:	48 83 c1 3e          	add    $0x3e,%rcx
   1ae1d:	e8 00 00 00 00       	callq  1ae22 <pci_select_bars+0x1be>
			1ae1e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ae22:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1ae26:	4c 89 e2             	mov    %r12,%rdx
   1ae29:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1ae2f:	4c 89 ee             	mov    %r13,%rsi
   1ae32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ae35: R_X86_64_32S	.rodata.str1.1+0x219d
   1ae39:	48 83 c1 42          	add    $0x42,%rcx
   1ae3d:	e8 00 00 00 00       	callq  1ae42 <pci_select_bars+0x1de>
			1ae3e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ae42:	4c 8b 65 b0          	mov    0xffffffffffffffb0(%rbp),%r12
   1ae46:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   1ae4a:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   1ae51:	00 
   1ae52:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1ae56:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1ae5a:	48 89 d9             	mov    %rbx,%rcx
   1ae5d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1ae63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ae66: R_X86_64_32S	.rodata.str1.1+0x219d
   1ae6a:	49 ff c7             	inc    %r15
   1ae6d:	4c 89 ea             	mov    %r13,%rdx
   1ae70:	4c 89 f6             	mov    %r14,%rsi
   1ae73:	48 ff c3             	inc    %rbx
   1ae76:	e8 00 00 00 00       	callq  1ae7b <pci_select_bars+0x217>
			1ae77: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1ae7b:	49 83 ff 14          	cmp    $0x14,%r15
   1ae7f:	75 d1                	jne    1ae52 <pci_select_bars+0x1ee>
   1ae81:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   1ae88:	00 
   1ae89:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   1ae8d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1ae93:	4c 89 ea             	mov    %r13,%rdx
   1ae96:	4c 89 f6             	mov    %r14,%rsi
   1ae99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ae9c: R_X86_64_32S	.rodata.str1.1+0x219d
   1aea0:	48 89 d9             	mov    %rbx,%rcx
   1aea3:	83 e0 01             	and    $0x1,%eax
   1aea6:	0f b6 c0             	movzbl %al,%eax
   1aea9:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   1aeac:	e8 00 00 00 00       	callq  1aeb1 <pci_select_bars+0x24d>
			1aead: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1aeb1:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   1aeb8:	00 
   1aeb9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1aebf:	48 89 d9             	mov    %rbx,%rcx
   1aec2:	4c 89 ea             	mov    %r13,%rdx
   1aec5:	4c 89 f6             	mov    %r14,%rsi
   1aec8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aecb: R_X86_64_32S	.rodata.str1.1+0x219d
   1aecf:	d0 e8                	shr    %al
   1aed1:	83 e0 01             	and    $0x1,%eax
   1aed4:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   1aed7:	e8 00 00 00 00       	callq  1aedc <pci_select_bars+0x278>
			1aed8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1aedc:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   1aee3:	00 
   1aee4:	4c 89 ea             	mov    %r13,%rdx
   1aee7:	4c 89 f6             	mov    %r14,%rsi
   1aeea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1aeed: R_X86_64_32S	.rodata.str1.1+0x219d
   1aef1:	e8 00 00 00 00       	callq  1aef6 <pci_select_bars+0x292>
			1aef2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1aef6:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   1aefd:	00 
   1aefe:	48 85 c0             	test   %rax,%rax
   1af01:	0f 84 ac 00 00 00    	je     1afb3 <pci_select_bars+0x34f>
   1af07:	48 8d 48 18          	lea    0x18(%rax),%rcx
   1af0b:	4c 89 ea             	mov    %r13,%rdx
   1af0e:	4c 89 f6             	mov    %r14,%rsi
   1af11:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1af14: R_X86_64_32S	.rodata.str1.1+0x219d
   1af18:	e8 00 00 00 00       	callq  1af1d <pci_select_bars+0x2b9>
			1af19: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1af1d:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1af24:	00 
   1af25:	4c 89 ea             	mov    %r13,%rdx
   1af28:	4c 89 f6             	mov    %r14,%rsi
   1af2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1af2e: R_X86_64_32S	.rodata.str1.1+0x219d
   1af32:	48 83 c1 20          	add    $0x20,%rcx
   1af36:	e8 00 00 00 00       	callq  1af3b <pci_select_bars+0x2d7>
			1af37: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1af3b:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1af42:	00 
   1af43:	4c 89 ea             	mov    %r13,%rdx
   1af46:	4c 89 f6             	mov    %r14,%rsi
   1af49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1af4c: R_X86_64_32S	.rodata.str1.1+0x219d
   1af50:	48 83 c1 30          	add    $0x30,%rcx
   1af54:	e8 00 00 00 00       	callq  1af59 <pci_select_bars+0x2f5>
			1af55: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1af59:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1af60:	00 
   1af61:	4c 89 ea             	mov    %r13,%rdx
   1af64:	4c 89 f6             	mov    %r14,%rsi
   1af67:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1af6a: R_X86_64_32S	.rodata.str1.1+0x219d
   1af6e:	48 83 c1 10          	add    $0x10,%rcx
   1af72:	e8 00 00 00 00       	callq  1af77 <pci_select_bars+0x313>
			1af73: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1af77:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1af7e:	00 
   1af7f:	4c 89 ea             	mov    %r13,%rdx
   1af82:	4c 89 f6             	mov    %r14,%rsi
   1af85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1af88: R_X86_64_32S	.rodata.str1.1+0x219d
   1af8c:	48 83 c1 28          	add    $0x28,%rcx
   1af90:	e8 00 00 00 00       	callq  1af95 <pci_select_bars+0x331>
			1af91: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1af95:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1af9c:	00 
   1af9d:	4c 89 ea             	mov    %r13,%rdx
   1afa0:	4c 89 f6             	mov    %r14,%rsi
   1afa3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1afa6: R_X86_64_32S	.rodata.str1.1+0x219d
   1afaa:	48 83 c1 08          	add    $0x8,%rcx
   1afae:	e8 00 00 00 00       	callq  1afb3 <pci_select_bars+0x34f>
			1afaf: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1afb3:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   1afba:	00 
   1afbb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1afc1:	4c 89 ea             	mov    %r13,%rdx
   1afc4:	4c 89 f6             	mov    %r14,%rsi
   1afc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1afca: R_X86_64_32S	.rodata.str1.1+0x219d
   1afce:	e8 00 00 00 00       	callq  1afd3 <pci_select_bars+0x36f>
			1afcf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1afd3:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   1afda:	00 
   1afdb:	4c 89 ea             	mov    %r13,%rdx
   1afde:	4c 89 f6             	mov    %r14,%rsi
   1afe1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1afe4: R_X86_64_32S	.rodata.str1.1+0x219d
   1afe8:	e8 00 00 00 00       	callq  1afed <pci_select_bars+0x389>
			1afe9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1afed:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1aff4:	00 
   1aff5:	48 85 c0             	test   %rax,%rax
   1aff8:	0f 84 91 05 00 00    	je     1b58f <pci_select_bars+0x92b>
   1affe:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   1b005:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b00b:	4c 89 ea             	mov    %r13,%rdx
   1b00e:	4c 89 f6             	mov    %r14,%rsi
   1b011:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b014: R_X86_64_32S	.rodata.str1.1+0x219d
   1b018:	31 db                	xor    %ebx,%ebx
   1b01a:	e8 00 00 00 00       	callq  1b01f <pci_select_bars+0x3bb>
			1b01b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b01f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b026:	00 
   1b027:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1b02d:	4c 89 ea             	mov    %r13,%rdx
   1b030:	4c 89 f6             	mov    %r14,%rsi
   1b033:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b036: R_X86_64_32S	.rodata.str1.1+0x219d
   1b03a:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   1b041:	e8 00 00 00 00       	callq  1b046 <pci_select_bars+0x3e2>
			1b042: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b046:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b04d:	00 
   1b04e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b054:	4c 89 ea             	mov    %r13,%rdx
   1b057:	4c 89 f6             	mov    %r14,%rsi
   1b05a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b05d: R_X86_64_32S	.rodata.str1.1+0x219d
   1b061:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   1b068:	e8 00 00 00 00       	callq  1b06d <pci_select_bars+0x409>
			1b069: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b06d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b074:	00 
   1b075:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b07b:	4c 89 ea             	mov    %r13,%rdx
   1b07e:	4c 89 f6             	mov    %r14,%rsi
   1b081:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b084: R_X86_64_32S	.rodata.str1.1+0x219d
   1b088:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   1b08f:	e8 00 00 00 00       	callq  1b094 <pci_select_bars+0x430>
			1b090: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b094:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b09b:	00 
   1b09c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b0a2:	4c 89 ea             	mov    %r13,%rdx
   1b0a5:	4c 89 f6             	mov    %r14,%rsi
   1b0a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b0ab: R_X86_64_32S	.rodata.str1.1+0x219d
   1b0af:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   1b0b6:	e8 00 00 00 00       	callq  1b0bb <pci_select_bars+0x457>
			1b0b7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b0bb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b0c2:	00 
   1b0c3:	4c 89 ea             	mov    %r13,%rdx
   1b0c6:	4c 89 f6             	mov    %r14,%rsi
   1b0c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b0cc: R_X86_64_32S	.rodata.str1.1+0x219d
   1b0d0:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1b0d7:	e8 00 00 00 00       	callq  1b0dc <pci_select_bars+0x478>
			1b0d8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b0dc:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b0e3:	00 
   1b0e4:	4c 89 ea             	mov    %r13,%rdx
   1b0e7:	4c 89 f6             	mov    %r14,%rsi
   1b0ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b0ed: R_X86_64_32S	.rodata.str1.1+0x219d
   1b0f1:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1b0f8:	e8 00 00 00 00       	callq  1b0fd <pci_select_bars+0x499>
			1b0f9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b0fd:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b104:	00 
   1b105:	4c 89 ea             	mov    %r13,%rdx
   1b108:	4c 89 f6             	mov    %r14,%rsi
   1b10b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b10e: R_X86_64_32S	.rodata.str1.1+0x219d
   1b112:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   1b119:	e8 00 00 00 00       	callq  1b11e <pci_select_bars+0x4ba>
			1b11a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b11e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b125:	00 
   1b126:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1b12a:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   1b12e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b134:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b137: R_X86_64_32S	.rodata.str1.1+0x219d
   1b13b:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   1b142:	48 01 d9             	add    %rbx,%rcx
   1b145:	48 ff c3             	inc    %rbx
   1b148:	e8 00 00 00 00       	callq  1b14d <pci_select_bars+0x4e9>
			1b149: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b14d:	48 83 fb 20          	cmp    $0x20,%rbx
   1b151:	75 cb                	jne    1b11e <pci_select_bars+0x4ba>
   1b153:	30 db                	xor    %bl,%bl
   1b155:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b15c:	00 
   1b15d:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1b161:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1b165:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b16b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b16e: R_X86_64_32S	.rodata.str1.1+0x219d
   1b172:	4c 89 ea             	mov    %r13,%rdx
   1b175:	4c 89 f6             	mov    %r14,%rsi
   1b178:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   1b17f:	48 01 d9             	add    %rbx,%rcx
   1b182:	48 ff c3             	inc    %rbx
   1b185:	e8 00 00 00 00       	callq  1b18a <pci_select_bars+0x526>
			1b186: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b18a:	48 83 fb 20          	cmp    $0x20,%rbx
   1b18e:	75 c5                	jne    1b155 <pci_select_bars+0x4f1>
   1b190:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b197:	00 
   1b198:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1b19e:	4c 89 ea             	mov    %r13,%rdx
   1b1a1:	4c 89 f6             	mov    %r14,%rsi
   1b1a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b1a7: R_X86_64_32S	.rodata.str1.1+0x219d
   1b1ab:	30 db                	xor    %bl,%bl
   1b1ad:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   1b1b4:	e8 00 00 00 00       	callq  1b1b9 <pci_select_bars+0x555>
			1b1b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b1b9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b1c0:	00 
   1b1c1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b1c7:	4c 89 ea             	mov    %r13,%rdx
   1b1ca:	4c 89 f6             	mov    %r14,%rsi
   1b1cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b1d0: R_X86_64_32S	.rodata.str1.1+0x219d
   1b1d4:	48 83 c1 48          	add    $0x48,%rcx
   1b1d8:	e8 00 00 00 00       	callq  1b1dd <pci_select_bars+0x579>
			1b1d9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b1dd:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b1e4:	00 
   1b1e5:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1b1e9:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   1b1ed:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b1f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b1f6: R_X86_64_32S	.rodata.str1.1+0x219d
   1b1fa:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   1b201:	48 01 d9             	add    %rbx,%rcx
   1b204:	48 ff c3             	inc    %rbx
   1b207:	e8 00 00 00 00       	callq  1b20c <pci_select_bars+0x5a8>
			1b208: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b20c:	48 83 fb 20          	cmp    $0x20,%rbx
   1b210:	75 cb                	jne    1b1dd <pci_select_bars+0x579>
   1b212:	30 db                	xor    %bl,%bl
   1b214:	48 89 d9             	mov    %rbx,%rcx
   1b217:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   1b21e:	00 
   1b21f:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1b223:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1b227:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b22d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b230: R_X86_64_32S	.rodata.str1.1+0x219d
   1b234:	4c 89 ea             	mov    %r13,%rdx
   1b237:	48 ff c3             	inc    %rbx
   1b23a:	4c 89 f6             	mov    %r14,%rsi
   1b23d:	e8 00 00 00 00       	callq  1b242 <pci_select_bars+0x5de>
			1b23e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b242:	48 83 fb 10          	cmp    $0x10,%rbx
   1b246:	75 cc                	jne    1b214 <pci_select_bars+0x5b0>
   1b248:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b24f:	00 
   1b250:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b256:	4c 89 ea             	mov    %r13,%rdx
   1b259:	4c 89 f6             	mov    %r14,%rsi
   1b25c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b25f: R_X86_64_32S	.rodata.str1.1+0x219d
   1b263:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   1b26a:	e8 00 00 00 00       	callq  1b26f <pci_select_bars+0x60b>
			1b26b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b26f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b276:	00 
   1b277:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b27d:	4c 89 ea             	mov    %r13,%rdx
   1b280:	4c 89 f6             	mov    %r14,%rsi
   1b283:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b286: R_X86_64_32S	.rodata.str1.1+0x219d
   1b28a:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   1b291:	e8 00 00 00 00       	callq  1b296 <pci_select_bars+0x632>
			1b292: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b296:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b29d:	00 
   1b29e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b2a4:	4c 89 ea             	mov    %r13,%rdx
   1b2a7:	4c 89 f6             	mov    %r14,%rsi
   1b2aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b2ad: R_X86_64_32S	.rodata.str1.1+0x219d
   1b2b1:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   1b2b8:	e8 00 00 00 00       	callq  1b2bd <pci_select_bars+0x659>
			1b2b9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b2bd:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b2c4:	00 
   1b2c5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b2cb:	4c 89 ea             	mov    %r13,%rdx
   1b2ce:	4c 89 f6             	mov    %r14,%rsi
   1b2d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b2d4: R_X86_64_32S	.rodata.str1.1+0x219d
   1b2d8:	48 83 c1 70          	add    $0x70,%rcx
   1b2dc:	e8 00 00 00 00       	callq  1b2e1 <pci_select_bars+0x67d>
			1b2dd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b2e1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b2e8:	00 
   1b2e9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b2ef:	4c 89 ea             	mov    %r13,%rdx
   1b2f2:	4c 89 f6             	mov    %r14,%rsi
   1b2f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b2f8: R_X86_64_32S	.rodata.str1.1+0x219d
   1b2fc:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   1b303:	e8 00 00 00 00       	callq  1b308 <pci_select_bars+0x6a4>
			1b304: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b308:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b30f:	00 
   1b310:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b316:	4c 89 ea             	mov    %r13,%rdx
   1b319:	4c 89 f6             	mov    %r14,%rsi
   1b31c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b31f: R_X86_64_32S	.rodata.str1.1+0x219d
   1b323:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   1b32a:	e8 00 00 00 00       	callq  1b32f <pci_select_bars+0x6cb>
			1b32b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b32f:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b336:	00 
   1b337:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b33d:	4c 89 ea             	mov    %r13,%rdx
   1b340:	4c 89 f6             	mov    %r14,%rsi
   1b343:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b346: R_X86_64_32S	.rodata.str1.1+0x219d
   1b34a:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   1b351:	e8 00 00 00 00       	callq  1b356 <pci_select_bars+0x6f2>
			1b352: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b356:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b35d:	00 
   1b35e:	4c 89 ea             	mov    %r13,%rdx
   1b361:	4c 89 f6             	mov    %r14,%rsi
   1b364:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b367: R_X86_64_32S	.rodata.str1.1+0x219d
   1b36b:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   1b372:	e8 00 00 00 00       	callq  1b377 <pci_select_bars+0x713>
			1b373: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b377:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b37e:	00 
   1b37f:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   1b386:	00 
   1b387:	74 62                	je     1b3eb <pci_select_bars+0x787>
   1b389:	30 db                	xor    %bl,%bl
   1b38b:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b392:	00 
   1b393:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1b397:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1b39b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b3a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b3a4: R_X86_64_32S	.rodata.str1.1+0x219d
   1b3a8:	4c 89 ea             	mov    %r13,%rdx
   1b3ab:	4c 89 f6             	mov    %r14,%rsi
   1b3ae:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1b3b5:	48 83 c1 08          	add    $0x8,%rcx
   1b3b9:	48 01 d9             	add    %rbx,%rcx
   1b3bc:	48 ff c3             	inc    %rbx
   1b3bf:	e8 00 00 00 00       	callq  1b3c4 <pci_select_bars+0x760>
			1b3c0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b3c4:	48 83 fb 20          	cmp    $0x20,%rbx
   1b3c8:	75 c1                	jne    1b38b <pci_select_bars+0x727>
   1b3ca:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b3d1:	00 
   1b3d2:	4c 89 ea             	mov    %r13,%rdx
   1b3d5:	4c 89 f6             	mov    %r14,%rsi
   1b3d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b3db: R_X86_64_32S	.rodata.str1.1+0x219d
   1b3df:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1b3e6:	e8 00 00 00 00       	callq  1b3eb <pci_select_bars+0x787>
			1b3e7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b3eb:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b3f2:	00 
   1b3f3:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1b3f7:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   1b3fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b3fe: R_X86_64_32S	.rodata.str1.1+0x219d
   1b402:	48 89 da             	mov    %rbx,%rdx
   1b405:	4c 89 ee             	mov    %r13,%rsi
   1b408:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1b40f:	e8 00 00 00 00       	callq  1b414 <pci_select_bars+0x7b0>
			1b410: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b414:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b41b:	00 
   1b41c:	48 89 da             	mov    %rbx,%rdx
   1b41f:	4c 89 ee             	mov    %r13,%rsi
   1b422:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b425: R_X86_64_32S	.rodata.str1.1+0x219d
   1b429:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1b430:	e8 00 00 00 00       	callq  1b435 <pci_select_bars+0x7d1>
			1b431: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b435:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b43c:	00 
   1b43d:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   1b444:	48 85 c0             	test   %rax,%rax
   1b447:	74 3b                	je     1b484 <pci_select_bars+0x820>
   1b449:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1b44d:	48 89 da             	mov    %rbx,%rdx
   1b450:	4c 89 ee             	mov    %r13,%rsi
   1b453:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b456: R_X86_64_32S	.rodata.str1.1+0x219d
   1b45a:	e8 00 00 00 00       	callq  1b45f <pci_select_bars+0x7fb>
			1b45b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b45f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b466:	00 
   1b467:	48 89 da             	mov    %rbx,%rdx
   1b46a:	4c 89 ee             	mov    %r13,%rsi
   1b46d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b470: R_X86_64_32S	.rodata.str1.1+0x219d
   1b474:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1b47b:	48 83 c1 58          	add    $0x58,%rcx
   1b47f:	e8 00 00 00 00       	callq  1b484 <pci_select_bars+0x820>
			1b480: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b484:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b48b:	00 
   1b48c:	48 89 da             	mov    %rbx,%rdx
   1b48f:	4c 89 ee             	mov    %r13,%rsi
   1b492:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b495: R_X86_64_32S	.rodata.str1.1+0x219d
   1b499:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1b4a0:	e8 00 00 00 00       	callq  1b4a5 <pci_select_bars+0x841>
			1b4a1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b4a5:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b4ac:	00 
   1b4ad:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   1b4b4:	48 85 c0             	test   %rax,%rax
   1b4b7:	74 41                	je     1b4fa <pci_select_bars+0x896>
   1b4b9:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1b4bd:	48 89 da             	mov    %rbx,%rdx
   1b4c0:	4c 89 ee             	mov    %r13,%rsi
   1b4c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b4c6: R_X86_64_32S	.rodata.str1.1+0x219d
   1b4ca:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b4d0:	e8 00 00 00 00       	callq  1b4d5 <pci_select_bars+0x871>
			1b4d1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b4d5:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b4dc:	00 
   1b4dd:	48 89 da             	mov    %rbx,%rdx
   1b4e0:	4c 89 ee             	mov    %r13,%rsi
   1b4e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b4e6: R_X86_64_32S	.rodata.str1.1+0x219d
   1b4ea:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   1b4f1:	48 83 c1 08          	add    $0x8,%rcx
   1b4f5:	e8 00 00 00 00       	callq  1b4fa <pci_select_bars+0x896>
			1b4f6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b4fa:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1b501:	00 
   1b502:	48 89 da             	mov    %rbx,%rdx
   1b505:	4c 89 ee             	mov    %r13,%rsi
   1b508:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b50b: R_X86_64_32S	.rodata.str1.1+0x219d
   1b50f:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   1b516:	e8 00 00 00 00       	callq  1b51b <pci_select_bars+0x8b7>
			1b517: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b51b:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b522:	00 
   1b523:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   1b52a:	00 
   1b52b:	74 62                	je     1b58f <pci_select_bars+0x92b>
   1b52d:	31 db                	xor    %ebx,%ebx
   1b52f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b536:	00 
   1b537:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   1b53b:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   1b53f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b545:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b548: R_X86_64_32S	.rodata.str1.1+0x219d
   1b54c:	4c 89 ea             	mov    %r13,%rdx
   1b54f:	4c 89 f6             	mov    %r14,%rsi
   1b552:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1b559:	48 83 c1 08          	add    $0x8,%rcx
   1b55d:	48 01 d9             	add    %rbx,%rcx
   1b560:	48 ff c3             	inc    %rbx
   1b563:	e8 00 00 00 00       	callq  1b568 <pci_select_bars+0x904>
			1b564: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b568:	48 83 fb 20          	cmp    $0x20,%rbx
   1b56c:	75 c1                	jne    1b52f <pci_select_bars+0x8cb>
   1b56e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1b575:	00 
   1b576:	4c 89 ea             	mov    %r13,%rdx
   1b579:	4c 89 f6             	mov    %r14,%rsi
   1b57c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b57f: R_X86_64_32S	.rodata.str1.1+0x219d
   1b583:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1b58a:	e8 00 00 00 00       	callq  1b58f <pci_select_bars+0x92b>
			1b58b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b58f:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1b593:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   1b597:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   1b59e:	00 
   1b59f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b5a2: R_X86_64_32S	.rodata.str1.1+0x219d
   1b5a6:	48 89 da             	mov    %rbx,%rdx
   1b5a9:	4c 89 ee             	mov    %r13,%rsi
   1b5ac:	e8 00 00 00 00       	callq  1b5b1 <pci_select_bars+0x94d>
			1b5ad: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b5b1:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   1b5b8:	00 
   1b5b9:	48 89 da             	mov    %rbx,%rdx
   1b5bc:	4c 89 ee             	mov    %r13,%rsi
   1b5bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b5c2: R_X86_64_32S	.rodata.str1.1+0x219d
   1b5c6:	e8 00 00 00 00       	callq  1b5cb <pci_select_bars+0x967>
			1b5c7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b5cb:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   1b5d2:	00 
   1b5d3:	48 85 c9             	test   %rcx,%rcx
   1b5d6:	74 18                	je     1b5f0 <pci_select_bars+0x98c>
   1b5d8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b5de:	48 89 da             	mov    %rbx,%rdx
   1b5e1:	4c 89 ee             	mov    %r13,%rsi
   1b5e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b5e7: R_X86_64_32S	.rodata.str1.1+0x219d
   1b5eb:	e8 00 00 00 00       	callq  1b5f0 <pci_select_bars+0x98c>
			1b5ec: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b5f0:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1b5f4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1b5fa:	48 89 da             	mov    %rbx,%rdx
   1b5fd:	4c 89 ee             	mov    %r13,%rsi
   1b600:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b603: R_X86_64_32S	.rodata.str1.1+0x219d
   1b607:	48 83 c1 40          	add    $0x40,%rcx
   1b60b:	e8 00 00 00 00       	callq  1b610 <pci_select_bars+0x9ac>
			1b60c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b610:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1b614:	48 89 da             	mov    %rbx,%rdx
   1b617:	4c 89 ee             	mov    %r13,%rsi
   1b61a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b61d: R_X86_64_32S	.rodata.str1.1+0x219d
   1b621:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1b627:	48 83 c1 3c          	add    $0x3c,%rcx
   1b62b:	e8 00 00 00 00       	callq  1b630 <pci_select_bars+0x9cc>
			1b62c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b630:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1b634:	48 89 da             	mov    %rbx,%rdx
   1b637:	4c 89 ee             	mov    %r13,%rsi
   1b63a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b63d: R_X86_64_32S	.rodata.str1.1+0x219d
   1b641:	48 83 c1 10          	add    $0x10,%rcx
   1b645:	e8 00 00 00 00       	callq  1b64a <pci_select_bars+0x9e6>
			1b646: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1b64a:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1b64e:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   1b652:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   1b656:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1b65c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b65f: R_X86_64_32S	.rodata.str1.1+0x219d
   1b663:	48 89 da             	mov    %rbx,%rdx
   1b666:	e8 00 00 00 00       	callq  1b66b <pci_select_bars+0xa07>
			1b667: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   1b66b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   1b66f:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   1b673:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b676: R_X86_64_32S	.rodata.str1.1+0x219d
   1b67a:	48 c7 45 90 21 06 00 	movq   $0x621,0xffffffffffffff90(%rbp)
   1b681:	00 
   1b682:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   1b686:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   1b689:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   1b68c:	e8 00 00 00 00       	callq  1b691 <pci_select_bars+0xa2d>
			1b68d: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   1b691:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   1b695:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b698: R_X86_64_32S	.rodata.str1.1+0x21cb
   1b69c:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   1b6a0:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   1b6a4:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   1b6a8:	e8 00 00 00 00       	callq  1b6ad <pci_select_bars+0xa49>
			1b6a9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1b6ad:	4c 8b 6d a0          	mov    0xffffffffffffffa0(%rbp),%r13
   1b6b1:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   1b6b5:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   1b6bb:	48 89 da             	mov    %rbx,%rdx
   1b6be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b6c1: R_X86_64_32S	.rodata.str1.1+0x219d
   1b6c5:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   1b6cc:	4c 89 ee             	mov    %r13,%rsi
   1b6cf:	e8 00 00 00 00       	callq  1b6d4 <pci_select_bars+0xa70>
			1b6d0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b6d4:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   1b6d8:	48 85 c0             	test   %rax,%rax
   1b6db:	0f 84 3e 09 00 00    	je     1c01f <pci_select_bars+0x13bb>
   1b6e1:	4c 8d 40 38          	lea    0x38(%rax),%r8
   1b6e5:	48 89 da             	mov    %rbx,%rdx
   1b6e8:	b9 04 00 00 00       	mov    $0x4,%ecx
   1b6ed:	4c 89 ee             	mov    %r13,%rsi
   1b6f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b6f3: R_X86_64_32S	.rodata.str1.1+0x219d
   1b6f7:	45 31 f6             	xor    %r14d,%r14d
   1b6fa:	e8 00 00 00 00       	callq  1b6ff <pci_select_bars+0xa9b>
			1b6fb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b6ff:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   1b703:	48 89 da             	mov    %rbx,%rdx
   1b706:	b9 04 00 00 00       	mov    $0x4,%ecx
   1b70b:	4c 89 ee             	mov    %r13,%rsi
   1b70e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b711: R_X86_64_32S	.rodata.str1.1+0x219d
   1b715:	49 83 c0 7c          	add    $0x7c,%r8
   1b719:	e8 00 00 00 00       	callq  1b71e <pci_select_bars+0xaba>
			1b71a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b71e:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   1b722:	48 89 da             	mov    %rbx,%rdx
   1b725:	b9 04 00 00 00       	mov    $0x4,%ecx
   1b72a:	4c 89 ee             	mov    %r13,%rsi
   1b72d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b730: R_X86_64_32S	.rodata.str1.1+0x219d
   1b734:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   1b73b:	e8 00 00 00 00       	callq  1b740 <pci_select_bars+0xadc>
			1b73c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b740:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   1b744:	48 89 da             	mov    %rbx,%rdx
   1b747:	b9 02 00 00 00       	mov    $0x2,%ecx
   1b74c:	4c 89 ee             	mov    %r13,%rsi
   1b74f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b752: R_X86_64_32S	.rodata.str1.1+0x219d
   1b756:	49 83 c0 3e          	add    $0x3e,%r8
   1b75a:	e8 00 00 00 00       	callq  1b75f <pci_select_bars+0xafb>
			1b75b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b75f:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   1b763:	ba 78 02 00 00       	mov    $0x278,%edx
   1b768:	be 80 00 00 00       	mov    $0x80,%esi
   1b76d:	e8 00 00 00 00       	callq  1b772 <pci_select_bars+0xb0e>
			1b76e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1b772:	4c 8b 65 b0          	mov    0xffffffffffffffb0(%rbp),%r12
   1b776:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   1b77a:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   1b781:	00 
   1b782:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
   1b786:	49 89 d8             	mov    %rbx,%r8
   1b789:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b78e:	4c 89 ee             	mov    %r13,%rsi
   1b791:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b794: R_X86_64_32S	.rodata.str1.1+0x219d
   1b798:	49 ff c6             	inc    %r14
   1b79b:	4c 89 fa             	mov    %r15,%rdx
   1b79e:	48 ff c3             	inc    %rbx
   1b7a1:	e8 00 00 00 00       	callq  1b7a6 <pci_select_bars+0xb42>
			1b7a2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b7a6:	49 83 fe 14          	cmp    $0x14,%r14
   1b7aa:	75 d6                	jne    1b782 <pci_select_bars+0xb1e>
   1b7ac:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
   1b7b0:	b9 04 00 00 00       	mov    $0x4,%ecx
   1b7b5:	4c 89 fa             	mov    %r15,%rdx
   1b7b8:	4c 89 ee             	mov    %r13,%rsi
   1b7bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b7be: R_X86_64_32S	.rodata.str1.1+0x219d
   1b7c2:	49 89 d8             	mov    %rbx,%r8
   1b7c5:	e8 00 00 00 00       	callq  1b7ca <pci_select_bars+0xb66>
			1b7c6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b7ca:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   1b7cd:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   1b7d4:	00 
   1b7d5:	49 89 d8             	mov    %rbx,%r8
   1b7d8:	b9 04 00 00 00       	mov    $0x4,%ecx
   1b7dd:	4c 89 ee             	mov    %r13,%rsi
   1b7e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b7e3: R_X86_64_32S	.rodata.str1.1+0x219d
   1b7e7:	83 e2 01             	and    $0x1,%edx
   1b7ea:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   1b7ed:	09 d0                	or     %edx,%eax
   1b7ef:	4c 89 fa             	mov    %r15,%rdx
   1b7f2:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   1b7f9:	00 
   1b7fa:	e8 00 00 00 00       	callq  1b7ff <pci_select_bars+0xb9b>
			1b7fb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b7ff:	8a 55 c0             	mov    0xffffffffffffffc0(%rbp),%dl
   1b802:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   1b809:	00 
   1b80a:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   1b811:	00 
   1b812:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   1b818:	4c 89 ee             	mov    %r13,%rsi
   1b81b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b81e: R_X86_64_32S	.rodata.str1.1+0x219d
   1b822:	83 e2 01             	and    $0x1,%edx
   1b825:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   1b828:	01 d2                	add    %edx,%edx
   1b82a:	09 d0                	or     %edx,%eax
   1b82c:	4c 89 fa             	mov    %r15,%rdx
   1b82f:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   1b836:	00 
   1b837:	e8 00 00 00 00       	callq  1b83c <pci_select_bars+0xbd8>
			1b838: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b83c:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   1b843:	00 
   1b844:	48 85 c0             	test   %rax,%rax
   1b847:	0f 84 d0 00 00 00    	je     1b91d <pci_select_bars+0xcb9>
   1b84d:	48 8d 48 18          	lea    0x18(%rax),%rcx
   1b851:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b857:	4c 89 fa             	mov    %r15,%rdx
   1b85a:	4c 89 ee             	mov    %r13,%rsi
   1b85d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b860: R_X86_64_32S	.rodata.str1.1+0x219d
   1b864:	e8 00 00 00 00       	callq  1b869 <pci_select_bars+0xc05>
			1b865: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b869:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1b870:	00 
   1b871:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b877:	4c 89 fa             	mov    %r15,%rdx
   1b87a:	4c 89 ee             	mov    %r13,%rsi
   1b87d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b880: R_X86_64_32S	.rodata.str1.1+0x219d
   1b884:	48 83 c1 20          	add    $0x20,%rcx
   1b888:	e8 00 00 00 00       	callq  1b88d <pci_select_bars+0xc29>
			1b889: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b88d:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1b894:	00 
   1b895:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b89b:	4c 89 fa             	mov    %r15,%rdx
   1b89e:	4c 89 ee             	mov    %r13,%rsi
   1b8a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b8a4: R_X86_64_32S	.rodata.str1.1+0x219d
   1b8a8:	48 83 c1 30          	add    $0x30,%rcx
   1b8ac:	e8 00 00 00 00       	callq  1b8b1 <pci_select_bars+0xc4d>
			1b8ad: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b8b1:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1b8b8:	00 
   1b8b9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b8bf:	4c 89 fa             	mov    %r15,%rdx
   1b8c2:	4c 89 ee             	mov    %r13,%rsi
   1b8c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b8c8: R_X86_64_32S	.rodata.str1.1+0x219d
   1b8cc:	48 83 c1 10          	add    $0x10,%rcx
   1b8d0:	e8 00 00 00 00       	callq  1b8d5 <pci_select_bars+0xc71>
			1b8d1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b8d5:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1b8dc:	00 
   1b8dd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b8e3:	4c 89 fa             	mov    %r15,%rdx
   1b8e6:	4c 89 ee             	mov    %r13,%rsi
   1b8e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b8ec: R_X86_64_32S	.rodata.str1.1+0x219d
   1b8f0:	48 83 c1 28          	add    $0x28,%rcx
   1b8f4:	e8 00 00 00 00       	callq  1b8f9 <pci_select_bars+0xc95>
			1b8f5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b8f9:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   1b900:	00 
   1b901:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b907:	4c 89 fa             	mov    %r15,%rdx
   1b90a:	4c 89 ee             	mov    %r13,%rsi
   1b90d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b910: R_X86_64_32S	.rodata.str1.1+0x219d
   1b914:	48 83 c1 08          	add    $0x8,%rcx
   1b918:	e8 00 00 00 00       	callq  1b91d <pci_select_bars+0xcb9>
			1b919: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b91d:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   1b924:	00 
   1b925:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b92a:	4c 89 fa             	mov    %r15,%rdx
   1b92d:	4c 89 ee             	mov    %r13,%rsi
   1b930:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b933: R_X86_64_32S	.rodata.str1.1+0x219d
   1b937:	e8 00 00 00 00       	callq  1b93c <pci_select_bars+0xcd8>
			1b938: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b93c:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   1b943:	00 
   1b944:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b947: R_X86_64_32S	.rodata.str1.1+0x219d
   1b94b:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   1b951:	4c 89 fa             	mov    %r15,%rdx
   1b954:	4c 89 ee             	mov    %r13,%rsi
   1b957:	e8 00 00 00 00       	callq  1b95c <pci_select_bars+0xcf8>
			1b958: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1b95c:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1b963:	00 
   1b964:	48 85 ff             	test   %rdi,%rdi
   1b967:	0f 84 08 06 00 00    	je     1bf75 <pci_select_bars+0x1311>
   1b96d:	ba 08 00 00 00       	mov    $0x8,%edx
   1b972:	be 10 03 00 00       	mov    $0x310,%esi
   1b977:	31 db                	xor    %ebx,%ebx
   1b979:	e8 00 00 00 00       	callq  1b97e <pci_select_bars+0xd1a>
			1b97a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1b97e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1b985:	00 
   1b986:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b98b:	4c 89 fa             	mov    %r15,%rdx
   1b98e:	4c 89 ee             	mov    %r13,%rsi
   1b991:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b994: R_X86_64_32S	.rodata.str1.1+0x219d
   1b998:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   1b99f:	e8 00 00 00 00       	callq  1b9a4 <pci_select_bars+0xd40>
			1b9a0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b9a4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1b9ab:	00 
   1b9ac:	b9 02 00 00 00       	mov    $0x2,%ecx
   1b9b1:	4c 89 fa             	mov    %r15,%rdx
   1b9b4:	4c 89 ee             	mov    %r13,%rsi
   1b9b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b9ba: R_X86_64_32S	.rodata.str1.1+0x219d
   1b9be:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   1b9c5:	e8 00 00 00 00       	callq  1b9ca <pci_select_bars+0xd66>
			1b9c6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b9ca:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1b9d1:	00 
   1b9d2:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b9d7:	4c 89 fa             	mov    %r15,%rdx
   1b9da:	4c 89 ee             	mov    %r13,%rsi
   1b9dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b9e0: R_X86_64_32S	.rodata.str1.1+0x219d
   1b9e4:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   1b9eb:	e8 00 00 00 00       	callq  1b9f0 <pci_select_bars+0xd8c>
			1b9ec: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1b9f0:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1b9f7:	00 
   1b9f8:	b9 04 00 00 00       	mov    $0x4,%ecx
   1b9fd:	4c 89 fa             	mov    %r15,%rdx
   1ba00:	4c 89 ee             	mov    %r13,%rsi
   1ba03:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ba06: R_X86_64_32S	.rodata.str1.1+0x219d
   1ba0a:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   1ba11:	e8 00 00 00 00       	callq  1ba16 <pci_select_bars+0xdb2>
			1ba12: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1ba16:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1ba1d:	00 
   1ba1e:	b9 04 00 00 00       	mov    $0x4,%ecx
   1ba23:	4c 89 fa             	mov    %r15,%rdx
   1ba26:	4c 89 ee             	mov    %r13,%rsi
   1ba29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ba2c: R_X86_64_32S	.rodata.str1.1+0x219d
   1ba30:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   1ba37:	e8 00 00 00 00       	callq  1ba3c <pci_select_bars+0xdd8>
			1ba38: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1ba3c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1ba43:	00 
   1ba44:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1ba4a:	4c 89 fa             	mov    %r15,%rdx
   1ba4d:	4c 89 ee             	mov    %r13,%rsi
   1ba50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ba53: R_X86_64_32S	.rodata.str1.1+0x219d
   1ba57:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   1ba5e:	e8 00 00 00 00       	callq  1ba63 <pci_select_bars+0xdff>
			1ba5f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1ba63:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1ba6a:	00 
   1ba6b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1ba71:	4c 89 fa             	mov    %r15,%rdx
   1ba74:	4c 89 ee             	mov    %r13,%rsi
   1ba77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ba7a: R_X86_64_32S	.rodata.str1.1+0x219d
   1ba7e:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   1ba85:	e8 00 00 00 00       	callq  1ba8a <pci_select_bars+0xe26>
			1ba86: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1ba8a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1ba91:	00 
   1ba92:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1ba98:	4c 89 fa             	mov    %r15,%rdx
   1ba9b:	4c 89 ee             	mov    %r13,%rsi
   1ba9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1baa1: R_X86_64_32S	.rodata.str1.1+0x219d
   1baa5:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   1baac:	e8 00 00 00 00       	callq  1bab1 <pci_select_bars+0xe4d>
			1baad: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bab1:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bab8:	00 
   1bab9:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1babd:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bac2:	4c 89 ee             	mov    %r13,%rsi
   1bac5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bac8: R_X86_64_32S	.rodata.str1.1+0x219d
   1bacc:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   1bad3:	49 01 d8             	add    %rbx,%r8
   1bad6:	48 ff c3             	inc    %rbx
   1bad9:	e8 00 00 00 00       	callq  1bade <pci_select_bars+0xe7a>
			1bada: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bade:	48 83 fb 20          	cmp    $0x20,%rbx
   1bae2:	75 cd                	jne    1bab1 <pci_select_bars+0xe4d>
   1bae4:	30 db                	xor    %bl,%bl
   1bae6:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1baed:	00 
   1baee:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1baf2:	b9 01 00 00 00       	mov    $0x1,%ecx
   1baf7:	4c 89 ee             	mov    %r13,%rsi
   1bafa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bafd: R_X86_64_32S	.rodata.str1.1+0x219d
   1bb01:	4c 89 f2             	mov    %r14,%rdx
   1bb04:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   1bb0b:	49 01 d8             	add    %rbx,%r8
   1bb0e:	48 ff c3             	inc    %rbx
   1bb11:	e8 00 00 00 00       	callq  1bb16 <pci_select_bars+0xeb2>
			1bb12: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bb16:	48 83 fb 20          	cmp    $0x20,%rbx
   1bb1a:	75 ca                	jne    1bae6 <pci_select_bars+0xe82>
   1bb1c:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bb23:	00 
   1bb24:	b9 02 00 00 00       	mov    $0x2,%ecx
   1bb29:	4c 89 f2             	mov    %r14,%rdx
   1bb2c:	4c 89 ee             	mov    %r13,%rsi
   1bb2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bb32: R_X86_64_32S	.rodata.str1.1+0x219d
   1bb36:	30 db                	xor    %bl,%bl
   1bb38:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   1bb3f:	e8 00 00 00 00       	callq  1bb44 <pci_select_bars+0xee0>
			1bb40: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bb44:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1bb4b:	00 
   1bb4c:	ba 08 00 00 00       	mov    $0x8,%edx
   1bb51:	be 48 00 00 00       	mov    $0x48,%esi
   1bb56:	e8 00 00 00 00       	callq  1bb5b <pci_select_bars+0xef7>
			1bb57: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1bb5b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bb62:	00 
   1bb63:	b9 08 00 00 00       	mov    $0x8,%ecx
   1bb68:	4c 89 f2             	mov    %r14,%rdx
   1bb6b:	4c 89 ee             	mov    %r13,%rsi
   1bb6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bb71: R_X86_64_32S	.rodata.str1.1+0x219d
   1bb75:	49 83 c0 48          	add    $0x48,%r8
   1bb79:	e8 00 00 00 00       	callq  1bb7e <pci_select_bars+0xf1a>
			1bb7a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bb7e:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bb85:	00 
   1bb86:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1bb8a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bb8f:	4c 89 ee             	mov    %r13,%rsi
   1bb92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bb95: R_X86_64_32S	.rodata.str1.1+0x219d
   1bb99:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   1bba0:	49 01 d8             	add    %rbx,%r8
   1bba3:	48 ff c3             	inc    %rbx
   1bba6:	e8 00 00 00 00       	callq  1bbab <pci_select_bars+0xf47>
			1bba7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bbab:	48 83 fb 20          	cmp    $0x20,%rbx
   1bbaf:	75 cd                	jne    1bb7e <pci_select_bars+0xf1a>
   1bbb1:	30 db                	xor    %bl,%bl
   1bbb3:	49 89 d8             	mov    %rbx,%r8
   1bbb6:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   1bbbd:	00 
   1bbbe:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1bbc2:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bbc7:	4c 89 ee             	mov    %r13,%rsi
   1bbca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bbcd: R_X86_64_32S	.rodata.str1.1+0x219d
   1bbd1:	4c 89 f2             	mov    %r14,%rdx
   1bbd4:	48 ff c3             	inc    %rbx
   1bbd7:	e8 00 00 00 00       	callq  1bbdc <pci_select_bars+0xf78>
			1bbd8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bbdc:	48 83 fb 10          	cmp    $0x10,%rbx
   1bbe0:	75 d1                	jne    1bbb3 <pci_select_bars+0xf4f>
   1bbe2:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1bbe9:	00 
   1bbea:	ba 10 00 00 00       	mov    $0x10,%edx
   1bbef:	be 18 04 00 00       	mov    $0x418,%esi
   1bbf4:	e8 00 00 00 00       	callq  1bbf9 <pci_select_bars+0xf95>
			1bbf5: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1bbf9:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bc00:	00 
   1bc01:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bc06:	4c 89 f2             	mov    %r14,%rdx
   1bc09:	4c 89 ee             	mov    %r13,%rsi
   1bc0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bc0f: R_X86_64_32S	.rodata.str1.1+0x219d
   1bc13:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   1bc1a:	e8 00 00 00 00       	callq  1bc1f <pci_select_bars+0xfbb>
			1bc1b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bc1f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bc26:	00 
   1bc27:	b9 04 00 00 00       	mov    $0x4,%ecx
   1bc2c:	4c 89 f2             	mov    %r14,%rdx
   1bc2f:	4c 89 ee             	mov    %r13,%rsi
   1bc32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bc35: R_X86_64_32S	.rodata.str1.1+0x219d
   1bc39:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   1bc40:	e8 00 00 00 00       	callq  1bc45 <pci_select_bars+0xfe1>
			1bc41: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bc45:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bc4c:	00 
   1bc4d:	b9 08 00 00 00       	mov    $0x8,%ecx
   1bc52:	4c 89 f2             	mov    %r14,%rdx
   1bc55:	4c 89 ee             	mov    %r13,%rsi
   1bc58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bc5b: R_X86_64_32S	.rodata.str1.1+0x219d
   1bc5f:	49 83 c0 70          	add    $0x70,%r8
   1bc63:	e8 00 00 00 00       	callq  1bc68 <pci_select_bars+0x1004>
			1bc64: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bc68:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   1bc6f:	00 
   1bc70:	ba 10 00 00 00       	mov    $0x10,%edx
   1bc75:	be 10 00 00 00       	mov    $0x10,%esi
   1bc7a:	e8 00 00 00 00       	callq  1bc7f <pci_select_bars+0x101b>
			1bc7b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1bc7f:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bc86:	00 
   1bc87:	b9 04 00 00 00       	mov    $0x4,%ecx
   1bc8c:	4c 89 f2             	mov    %r14,%rdx
   1bc8f:	4c 89 ee             	mov    %r13,%rsi
   1bc92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bc95: R_X86_64_32S	.rodata.str1.1+0x219d
   1bc99:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   1bca0:	e8 00 00 00 00       	callq  1bca5 <pci_select_bars+0x1041>
			1bca1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bca5:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bcac:	00 
   1bcad:	b9 08 00 00 00       	mov    $0x8,%ecx
   1bcb2:	4c 89 f2             	mov    %r14,%rdx
   1bcb5:	4c 89 ee             	mov    %r13,%rsi
   1bcb8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bcbb: R_X86_64_32S	.rodata.str1.1+0x219d
   1bcbf:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   1bcc6:	e8 00 00 00 00       	callq  1bccb <pci_select_bars+0x1067>
			1bcc7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bccb:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   1bcd2:	00 
   1bcd3:	b9 04 00 00 00       	mov    $0x4,%ecx
   1bcd8:	4c 89 f2             	mov    %r14,%rdx
   1bcdb:	4c 89 ee             	mov    %r13,%rsi
   1bcde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bce1: R_X86_64_32S	.rodata.str1.1+0x219d
   1bce5:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   1bcec:	e8 00 00 00 00       	callq  1bcf1 <pci_select_bars+0x108d>
			1bced: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bcf1:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1bcf8:	00 
   1bcf9:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1bcff:	4c 89 f2             	mov    %r14,%rdx
   1bd02:	4c 89 ee             	mov    %r13,%rsi
   1bd05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bd08: R_X86_64_32S	.rodata.str1.1+0x219d
   1bd0c:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   1bd13:	e8 00 00 00 00       	callq  1bd18 <pci_select_bars+0x10b4>
			1bd14: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bd18:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bd1f:	00 
   1bd20:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   1bd27:	00 
   1bd28:	74 63                	je     1bd8d <pci_select_bars+0x1129>
   1bd2a:	30 db                	xor    %bl,%bl
   1bd2c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bd33:	00 
   1bd34:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1bd38:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bd3d:	4c 89 ee             	mov    %r13,%rsi
   1bd40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bd43: R_X86_64_32S	.rodata.str1.1+0x219d
   1bd47:	4c 89 f2             	mov    %r14,%rdx
   1bd4a:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   1bd51:	49 83 c0 08          	add    $0x8,%r8
   1bd55:	49 01 d8             	add    %rbx,%r8
   1bd58:	48 ff c3             	inc    %rbx
   1bd5b:	e8 00 00 00 00       	callq  1bd60 <pci_select_bars+0x10fc>
			1bd5c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bd60:	48 83 fb 20          	cmp    $0x20,%rbx
   1bd64:	75 c6                	jne    1bd2c <pci_select_bars+0x10c8>
   1bd66:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bd6d:	00 
   1bd6e:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1bd74:	4c 89 f2             	mov    %r14,%rdx
   1bd77:	4c 89 ee             	mov    %r13,%rsi
   1bd7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bd7d: R_X86_64_32S	.rodata.str1.1+0x219d
   1bd81:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   1bd88:	e8 00 00 00 00       	callq  1bd8d <pci_select_bars+0x1129>
			1bd89: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bd8d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1bd94:	00 
   1bd95:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1bd99:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   1bd9f:	4c 89 ee             	mov    %r13,%rsi
   1bda2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bda5: R_X86_64_32S	.rodata.str1.1+0x219d
   1bda9:	48 89 da             	mov    %rbx,%rdx
   1bdac:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   1bdb3:	e8 00 00 00 00       	callq  1bdb8 <pci_select_bars+0x1154>
			1bdb4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bdb8:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1bdbf:	00 
   1bdc0:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   1bdc6:	48 89 da             	mov    %rbx,%rdx
   1bdc9:	4c 89 ee             	mov    %r13,%rsi
   1bdcc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bdcf: R_X86_64_32S	.rodata.str1.1+0x219d
   1bdd3:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   1bdda:	e8 00 00 00 00       	callq  1bddf <pci_select_bars+0x117b>
			1bddb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bddf:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bde6:	00 
   1bde7:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   1bdee:	48 85 c0             	test   %rax,%rax
   1bdf1:	74 47                	je     1be3a <pci_select_bars+0x11d6>
   1bdf3:	48 8d 48 60          	lea    0x60(%rax),%rcx
   1bdf7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1bdfd:	48 89 da             	mov    %rbx,%rdx
   1be00:	4c 89 ee             	mov    %r13,%rsi
   1be03:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1be06: R_X86_64_32S	.rodata.str1.1+0x219d
   1be0a:	e8 00 00 00 00       	callq  1be0f <pci_select_bars+0x11ab>
			1be0b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1be0f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1be16:	00 
   1be17:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1be1d:	48 89 da             	mov    %rbx,%rdx
   1be20:	4c 89 ee             	mov    %r13,%rsi
   1be23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1be26: R_X86_64_32S	.rodata.str1.1+0x219d
   1be2a:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   1be31:	48 83 c1 58          	add    $0x58,%rcx
   1be35:	e8 00 00 00 00       	callq  1be3a <pci_select_bars+0x11d6>
			1be36: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1be3a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1be41:	00 
   1be42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1be45: R_X86_64_32S	.rodata.str1.1+0x219d
   1be49:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   1be4f:	48 89 da             	mov    %rbx,%rdx
   1be52:	4c 89 ee             	mov    %r13,%rsi
   1be55:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   1be5c:	e8 00 00 00 00       	callq  1be61 <pci_select_bars+0x11fd>
			1be5d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1be61:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1be68:	00 
   1be69:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   1be70:	48 85 ff             	test   %rdi,%rdi
   1be73:	74 64                	je     1bed9 <pci_select_bars+0x1275>
   1be75:	ba 08 00 00 00       	mov    $0x8,%edx
   1be7a:	be 10 00 00 00       	mov    $0x10,%esi
   1be7f:	e8 00 00 00 00       	callq  1be84 <pci_select_bars+0x1220>
			1be80: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1be84:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1be8b:	00 
   1be8c:	b9 08 00 00 00       	mov    $0x8,%ecx
   1be91:	48 89 da             	mov    %rbx,%rdx
   1be94:	4c 89 ee             	mov    %r13,%rsi
   1be97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1be9a: R_X86_64_32S	.rodata.str1.1+0x219d
   1be9e:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   1bea5:	49 83 c0 10          	add    $0x10,%r8
   1bea9:	e8 00 00 00 00       	callq  1beae <pci_select_bars+0x124a>
			1beaa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1beae:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1beb5:	00 
   1beb6:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   1bebc:	48 89 da             	mov    %rbx,%rdx
   1bebf:	4c 89 ee             	mov    %r13,%rsi
   1bec2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bec5: R_X86_64_32S	.rodata.str1.1+0x219d
   1bec9:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   1bed0:	48 83 c1 08          	add    $0x8,%rcx
   1bed4:	e8 00 00 00 00       	callq  1bed9 <pci_select_bars+0x1275>
			1bed5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bed9:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   1bee0:	00 
   1bee1:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1bee7:	48 89 da             	mov    %rbx,%rdx
   1beea:	4c 89 ee             	mov    %r13,%rsi
   1beed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bef0: R_X86_64_32S	.rodata.str1.1+0x219d
   1bef4:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   1befb:	e8 00 00 00 00       	callq  1bf00 <pci_select_bars+0x129c>
			1befc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bf00:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bf07:	00 
   1bf08:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   1bf0f:	00 
   1bf10:	74 63                	je     1bf75 <pci_select_bars+0x1311>
   1bf12:	31 db                	xor    %ebx,%ebx
   1bf14:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bf1b:	00 
   1bf1c:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   1bf20:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bf25:	4c 89 ee             	mov    %r13,%rsi
   1bf28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bf2b: R_X86_64_32S	.rodata.str1.1+0x219d
   1bf2f:	4c 89 f2             	mov    %r14,%rdx
   1bf32:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   1bf39:	49 83 c0 08          	add    $0x8,%r8
   1bf3d:	49 01 d8             	add    %rbx,%r8
   1bf40:	48 ff c3             	inc    %rbx
   1bf43:	e8 00 00 00 00       	callq  1bf48 <pci_select_bars+0x12e4>
			1bf44: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bf48:	48 83 fb 20          	cmp    $0x20,%rbx
   1bf4c:	75 c6                	jne    1bf14 <pci_select_bars+0x12b0>
   1bf4e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   1bf55:	00 
   1bf56:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   1bf5c:	4c 89 f2             	mov    %r14,%rdx
   1bf5f:	4c 89 ee             	mov    %r13,%rsi
   1bf62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bf65: R_X86_64_32S	.rodata.str1.1+0x219d
   1bf69:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   1bf70:	e8 00 00 00 00       	callq  1bf75 <pci_select_bars+0x1311>
			1bf71: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bf75:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1bf79:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   1bf80:	00 
   1bf81:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   1bf87:	4c 89 ee             	mov    %r13,%rsi
   1bf8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bf8d: R_X86_64_32S	.rodata.str1.1+0x219d
   1bf91:	48 89 da             	mov    %rbx,%rdx
   1bf94:	e8 00 00 00 00       	callq  1bf99 <pci_select_bars+0x1335>
			1bf95: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bf99:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   1bfa0:	00 
   1bfa1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1bfa7:	48 89 da             	mov    %rbx,%rdx
   1bfaa:	4c 89 ee             	mov    %r13,%rsi
   1bfad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bfb0: R_X86_64_32S	.rodata.str1.1+0x219d
   1bfb4:	e8 00 00 00 00       	callq  1bfb9 <pci_select_bars+0x1355>
			1bfb5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1bfb9:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   1bfc0:	00 
   1bfc1:	48 85 c0             	test   %rax,%rax
   1bfc4:	74 1a                	je     1bfe0 <pci_select_bars+0x137c>
   1bfc6:	49 89 c0             	mov    %rax,%r8
   1bfc9:	b9 08 00 00 00       	mov    $0x8,%ecx
   1bfce:	48 89 da             	mov    %rbx,%rdx
   1bfd1:	4c 89 ee             	mov    %r13,%rsi
   1bfd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bfd7: R_X86_64_32S	.rodata.str1.1+0x219d
   1bfdb:	e8 00 00 00 00       	callq  1bfe0 <pci_select_bars+0x137c>
			1bfdc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bfe0:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   1bfe4:	b9 02 00 00 00       	mov    $0x2,%ecx
   1bfe9:	48 89 da             	mov    %rbx,%rdx
   1bfec:	4c 89 ee             	mov    %r13,%rsi
   1bfef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bff2: R_X86_64_32S	.rodata.str1.1+0x219d
   1bff6:	49 83 c0 3c          	add    $0x3c,%r8
   1bffa:	e8 00 00 00 00       	callq  1bfff <pci_select_bars+0x139b>
			1bffb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1bfff:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   1c003:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   1c009:	48 89 da             	mov    %rbx,%rdx
   1c00c:	4c 89 ee             	mov    %r13,%rsi
   1c00f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c012: R_X86_64_32S	.rodata.str1.1+0x219d
   1c016:	48 83 c1 10          	add    $0x10,%rcx
   1c01a:	e8 00 00 00 00       	callq  1c01f <pci_select_bars+0x13bb>
			1c01b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1c01f:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   1c023:	4c 8d 45 b8          	lea    0xffffffffffffffb8(%rbp),%r8
   1c027:	b9 08 00 00 00       	mov    $0x8,%ecx
   1c02c:	4c 89 ee             	mov    %r13,%rsi
   1c02f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c032: R_X86_64_32S	.rodata.str1.1+0x219d
   1c036:	48 89 da             	mov    %rbx,%rdx
   1c039:	e8 00 00 00 00       	callq  1c03e <pci_select_bars+0x13da>
			1c03a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1c03e:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   1c042:	48 89 da             	mov    %rbx,%rdx
   1c045:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c048: R_X86_64_32S	.rodata.str1.1+0x219d
   1c04c:	b9 04 00 00 00       	mov    $0x4,%ecx
   1c051:	4c 89 ee             	mov    %r13,%rsi
   1c054:	e8 00 00 00 00       	callq  1c059 <pci_select_bars+0x13f5>
			1c055: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   1c059:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   1c05d:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
   1c060:	48 85 ff             	test   %rdi,%rdi
   1c063:	74 05                	je     1c06a <pci_select_bars+0x1406>
   1c065:	e8 00 00 00 00       	callq  1c06a <pci_select_bars+0x1406>
			1c066: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1c06a:	48 83 c4 58          	add    $0x58,%rsp
   1c06e:	89 d8                	mov    %ebx,%eax
   1c070:	5b                   	pop    %rbx
   1c071:	41 5c                	pop    %r12
   1c073:	41 5d                	pop    %r13
   1c075:	41 5e                	pop    %r14
   1c077:	41 5f                	pop    %r15
   1c079:	c9                   	leaveq 
   1c07a:	c3                   	retq   

000000000001c07b <cleanup_module>:
   1c07b:	55                   	push   %rbp
   1c07c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c07f: R_X86_64_32S	.rodata.str1.1+0x21e9
   1c083:	48 89 e5             	mov    %rsp,%rbp
   1c086:	41 54                	push   %r12
   1c088:	4c 8d 65 ec          	lea    0xffffffffffffffec(%rbp),%r12
   1c08c:	53                   	push   %rbx
   1c08d:	48 8d 5d d8          	lea    0xffffffffffffffd8(%rbp),%rbx
   1c091:	48 83 ec 30          	sub    $0x30,%rsp
   1c095:	e8 00 00 00 00       	callq  1c09a <cleanup_module+0x1f>
			1c096: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c09a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c09d: R_X86_64_32S	.rodata.str1.1+0x21f8
   1c0a1:	e8 00 00 00 00       	callq  1c0a6 <cleanup_module+0x2b>
			1c0a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c0a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c0a9: R_X86_64_32S	.rodata.str1.1+0x220a
   1c0ad:	e8 00 00 00 00       	callq  1c0b2 <cleanup_module+0x37>
			1c0ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c0b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c0b5: R_X86_64_32S	.rodata.str1.1+0x2220
   1c0b9:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   1c0c0:	00 
   1c0c1:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
   1c0c8:	00 
   1c0c9:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   1c0d0:	48 c7 45 e0 00 00 00 	movq   $0x0,0xffffffffffffffe0(%rbp)
   1c0d7:	00 
			1c0d4: R_X86_64_32S	.data+0x3dda0
   1c0d8:	e8 00 00 00 00       	callq  1c0dd <cleanup_module+0x62>
			1c0d9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c0dd:	48 8d 4d e0          	lea    0xffffffffffffffe0(%rbp),%rcx
   1c0e1:	4c 89 e2             	mov    %r12,%rdx
   1c0e4:	48 89 de             	mov    %rbx,%rsi
   1c0e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c0ea: R_X86_64_32S	.rodata.str1.1+0x220a
   1c0ee:	c7 45 ec 00 00 00 00 	movl   $0x0,0xffffffffffffffec(%rbp)
   1c0f5:	48 c7 45 d8 00 00 00 	movq   $0x0,0xffffffffffffffd8(%rbp)
   1c0fc:	00 
   1c0fd:	e8 00 00 00 00       	callq  1c102 <cleanup_module+0x87>
			1c0fe: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   1c102:	48 8b 45 d8          	mov    0xffffffffffffffd8(%rbp),%rax
   1c106:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
   1c10a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c10d: R_X86_64_32S	.rodata.str1.1+0x220a
   1c111:	48 c7 45 c0 2a 06 00 	movq   $0x62a,0xffffffffffffffc0(%rbp)
   1c118:	00 
   1c119:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   1c11d:	8b 45 ec             	mov    0xffffffffffffffec(%rbp),%eax
   1c120:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   1c123:	e8 00 00 00 00       	callq  1c128 <cleanup_module+0xad>
			1c124: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   1c128:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c12b: R_X86_64_32S	.rodata.str1.1+0x2244
   1c12f:	48 c7 45 d8 00 00 00 	movq   $0x0,0xffffffffffffffd8(%rbp)
   1c136:	00 
			1c133: R_X86_64_32S	.data+0x3dda0
   1c137:	e8 00 00 00 00       	callq  1c13c <cleanup_module+0xc1>
			1c138: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c13c:	48 8b 75 d0          	mov    0xffffffffffffffd0(%rbp),%rsi
   1c140:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c143: R_X86_64_32S	.rodata.str1.1+0x220a
   1c147:	41 b8 00 01 00 00    	mov    $0x100,%r8d
   1c14d:	48 89 d9             	mov    %rbx,%rcx
   1c150:	4c 89 e2             	mov    %r12,%rdx
   1c153:	c7 45 ec 00 00 00 00 	movl   $0x0,0xffffffffffffffec(%rbp)
   1c15a:	e8 00 00 00 00       	callq  1c15f <cleanup_module+0xe4>
			1c15b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   1c15f:	48 8b 7d d8          	mov    0xffffffffffffffd8(%rbp),%rdi
   1c163:	48 85 ff             	test   %rdi,%rdi
   1c166:	74 0f                	je     1c177 <cleanup_module+0xfc>
   1c168:	ba 60 00 00 00       	mov    $0x60,%edx
   1c16d:	be 60 00 00 00       	mov    $0x60,%esi
   1c172:	e8 00 00 00 00       	callq  1c177 <cleanup_module+0xfc>
			1c173: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   1c177:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
   1c17b:	48 85 ff             	test   %rdi,%rdi
   1c17e:	74 05                	je     1c185 <cleanup_module+0x10a>
   1c180:	e8 00 00 00 00       	callq  1c185 <cleanup_module+0x10a>
			1c181: R_X86_64_PC32	kfree+0xfffffffffffffffc
   1c185:	48 83 c4 30          	add    $0x30,%rsp
   1c189:	5b                   	pop    %rbx
   1c18a:	41 5c                	pop    %r12
   1c18c:	c9                   	leaveq 
   1c18d:	c3                   	retq   

000000000001c18e <e1000_release_eeprom>:
   1c18e:	55                   	push   %rbp
   1c18f:	48 89 e5             	mov    %rsp,%rbp
   1c192:	41 55                	push   %r13
   1c194:	49 89 fd             	mov    %rdi,%r13
   1c197:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c19a: R_X86_64_32S	.rodata.str1.1+0x2268
   1c19e:	41 54                	push   %r12
   1c1a0:	53                   	push   %rbx
   1c1a1:	48 83 ec 08          	sub    $0x8,%rsp
   1c1a5:	e8 00 00 00 00       	callq  1c1aa <e1000_release_eeprom+0x1c>
			1c1a6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c1aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c1ad: R_X86_64_32S	.rodata.str1.1+0xae
   1c1b1:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c1b5:	e8 00 00 00 00       	callq  1c1ba <e1000_release_eeprom+0x2c>
			1c1b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c1ba:	44 8b 63 10          	mov    0x10(%rbx),%r12d
   1c1be:	41 8b 45 48          	mov    0x48(%r13),%eax
   1c1c2:	83 f8 01             	cmp    $0x1,%eax
   1c1c5:	75 24                	jne    1c1eb <e1000_release_eeprom+0x5d>
   1c1c7:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c1cb:	41 83 cc 02          	or     $0x2,%r12d
   1c1cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c1d2: R_X86_64_32S	.rodata.str1.1+0xb4
   1c1d6:	41 83 e4 fe          	and    $0xfffffffffffffffe,%r12d
   1c1da:	e8 00 00 00 00       	callq  1c1df <e1000_release_eeprom+0x51>
			1c1db: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c1df:	48 83 c3 10          	add    $0x10,%rbx
   1c1e3:	44 89 23             	mov    %r12d,(%rbx)
   1c1e6:	e9 8a 00 00 00       	jmpq   1c275 <e1000_release_eeprom+0xe7>
   1c1eb:	83 f8 02             	cmp    $0x2,%eax
   1c1ee:	0f 85 8b 00 00 00    	jne    1c27f <e1000_release_eeprom+0xf1>
   1c1f4:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c1f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c1fb: R_X86_64_32S	.rodata.str1.1+0xb4
   1c1ff:	41 83 e4 f9          	and    $0xfffffffffffffff9,%r12d
   1c203:	e8 00 00 00 00       	callq  1c208 <e1000_release_eeprom+0x7a>
			1c204: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c208:	48 83 c3 10          	add    $0x10,%rbx
   1c20c:	44 89 23             	mov    %r12d,(%rbx)
   1c20f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c213:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c216: R_X86_64_32S	.rodata.str1.1+0xb4
   1c21a:	41 83 cc 01          	or     $0x1,%r12d
   1c21e:	e8 00 00 00 00       	callq  1c223 <e1000_release_eeprom+0x95>
			1c21f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c223:	48 83 c3 10          	add    $0x10,%rbx
   1c227:	44 89 23             	mov    %r12d,(%rbx)
   1c22a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c22d: R_X86_64_32S	.rodata.str1.1+0xae
   1c231:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c235:	e8 00 00 00 00       	callq  1c23a <e1000_release_eeprom+0xac>
			1c236: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c23a:	8b 43 08             	mov    0x8(%rbx),%eax
   1c23d:	41 0f b7 7d 52       	movzwl 0x52(%r13),%edi
   1c242:	41 83 e4 fe          	and    $0xfffffffffffffffe,%r12d
   1c246:	e8 00 00 00 00       	callq  1c24b <e1000_release_eeprom+0xbd>
			1c247: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c24b:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c24f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c252: R_X86_64_32S	.rodata.str1.1+0xb4
   1c256:	e8 00 00 00 00       	callq  1c25b <e1000_release_eeprom+0xcd>
			1c257: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c25b:	48 83 c3 10          	add    $0x10,%rbx
   1c25f:	44 89 23             	mov    %r12d,(%rbx)
   1c262:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c265: R_X86_64_32S	.rodata.str1.1+0xae
   1c269:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c26d:	e8 00 00 00 00       	callq  1c272 <e1000_release_eeprom+0xe4>
			1c26e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c272:	8b 43 08             	mov    0x8(%rbx),%eax
   1c275:	41 0f b7 7d 52       	movzwl 0x52(%r13),%edi
   1c27a:	e8 00 00 00 00       	callq  1c27f <e1000_release_eeprom+0xf1>
			1c27b: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c27f:	41 83 7d 10 04       	cmpl   $0x4,0x10(%r13)
   1c284:	76 1b                	jbe    1c2a1 <e1000_release_eeprom+0x113>
   1c286:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c28a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c28d: R_X86_64_32S	.rodata.str1.1+0xb4
   1c291:	41 83 e4 bf          	and    $0xffffffffffffffbf,%r12d
   1c295:	e8 00 00 00 00       	callq  1c29a <e1000_release_eeprom+0x10c>
			1c296: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c29a:	48 83 c3 10          	add    $0x10,%rbx
   1c29e:	44 89 23             	mov    %r12d,(%rbx)
   1c2a1:	4c 89 ef             	mov    %r13,%rdi
   1c2a4:	be 01 00 00 00       	mov    $0x1,%esi
   1c2a9:	e8 e2 8f fe ff       	callq  5290 <e1000_swfw_sync_release>
   1c2ae:	59                   	pop    %rcx
   1c2af:	5b                   	pop    %rbx
   1c2b0:	41 5c                	pop    %r12
   1c2b2:	41 5d                	pop    %r13
   1c2b4:	c9                   	leaveq 
   1c2b5:	c3                   	retq   

000000000001c2b6 <e1000_standby_eeprom>:
   1c2b6:	55                   	push   %rbp
   1c2b7:	48 89 e5             	mov    %rsp,%rbp
   1c2ba:	41 57                	push   %r15
   1c2bc:	41 56                	push   %r14
   1c2be:	49 89 fe             	mov    %rdi,%r14
   1c2c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c2c4: R_X86_64_32S	.rodata.str1.1+0x227d
   1c2c8:	4d 8d 7e 48          	lea    0x48(%r14),%r15
   1c2cc:	41 55                	push   %r13
   1c2ce:	41 54                	push   %r12
   1c2d0:	53                   	push   %rbx
   1c2d1:	48 83 ec 08          	sub    $0x8,%rsp
   1c2d5:	e8 00 00 00 00       	callq  1c2da <e1000_standby_eeprom+0x24>
			1c2d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c2da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c2dd: R_X86_64_32S	.rodata.str1.1+0xae
   1c2e1:	49 8b 1e             	mov    (%r14),%rbx
   1c2e4:	e8 00 00 00 00       	callq  1c2e9 <e1000_standby_eeprom+0x33>
			1c2e5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c2e9:	8b 53 10             	mov    0x10(%rbx),%edx
   1c2ec:	41 8b 46 48          	mov    0x48(%r14),%eax
   1c2f0:	83 f8 02             	cmp    $0x2,%eax
   1c2f3:	0f 85 ae 00 00 00    	jne    1c3a7 <e1000_standby_eeprom+0xf1>
   1c2f9:	49 8b 1e             	mov    (%r14),%rbx
   1c2fc:	41 89 d4             	mov    %edx,%r12d
   1c2ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c302: R_X86_64_32S	.rodata.str1.1+0xb4
   1c306:	41 83 e4 fc          	and    $0xfffffffffffffffc,%r12d
   1c30a:	e8 00 00 00 00       	callq  1c30f <e1000_standby_eeprom+0x59>
			1c30b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c30f:	48 83 c3 10          	add    $0x10,%rbx
   1c313:	44 89 23             	mov    %r12d,(%rbx)
   1c316:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c319: R_X86_64_32S	.rodata.str1.1+0xae
   1c31d:	49 8b 1e             	mov    (%r14),%rbx
   1c320:	e8 00 00 00 00       	callq  1c325 <e1000_standby_eeprom+0x6f>
			1c321: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c325:	8b 43 08             	mov    0x8(%rbx),%eax
   1c328:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
   1c32d:	45 89 e5             	mov    %r12d,%r13d
   1c330:	41 83 cd 01          	or     $0x1,%r13d
   1c334:	e8 00 00 00 00       	callq  1c339 <e1000_standby_eeprom+0x83>
			1c335: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c339:	49 8b 1e             	mov    (%r14),%rbx
   1c33c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c33f: R_X86_64_32S	.rodata.str1.1+0xb4
   1c343:	e8 00 00 00 00       	callq  1c348 <e1000_standby_eeprom+0x92>
			1c344: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c348:	48 83 c3 10          	add    $0x10,%rbx
   1c34c:	44 89 2b             	mov    %r13d,(%rbx)
   1c34f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c352: R_X86_64_32S	.rodata.str1.1+0xae
   1c356:	49 8b 1e             	mov    (%r14),%rbx
   1c359:	e8 00 00 00 00       	callq  1c35e <e1000_standby_eeprom+0xa8>
			1c35a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c35e:	8b 43 08             	mov    0x8(%rbx),%eax
   1c361:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
   1c366:	41 83 cc 03          	or     $0x3,%r12d
   1c36a:	e8 00 00 00 00       	callq  1c36f <e1000_standby_eeprom+0xb9>
			1c36b: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c36f:	49 8b 1e             	mov    (%r14),%rbx
   1c372:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c375: R_X86_64_32S	.rodata.str1.1+0xb4
   1c379:	e8 00 00 00 00       	callq  1c37e <e1000_standby_eeprom+0xc8>
			1c37a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c37e:	48 83 c3 10          	add    $0x10,%rbx
   1c382:	44 89 23             	mov    %r12d,(%rbx)
   1c385:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c388: R_X86_64_32S	.rodata.str1.1+0xae
   1c38c:	49 8b 1e             	mov    (%r14),%rbx
   1c38f:	e8 00 00 00 00       	callq  1c394 <e1000_standby_eeprom+0xde>
			1c390: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c394:	8b 43 08             	mov    0x8(%rbx),%eax
   1c397:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
   1c39c:	41 83 e4 fe          	and    $0xfffffffffffffffe,%r12d
   1c3a0:	e8 00 00 00 00       	callq  1c3a5 <e1000_standby_eeprom+0xef>
			1c3a1: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c3a5:	eb 41                	jmp    1c3e8 <e1000_standby_eeprom+0x132>
   1c3a7:	ff c8                	dec    %eax
   1c3a9:	75 6f                	jne    1c41a <e1000_standby_eeprom+0x164>
   1c3ab:	49 8b 1e             	mov    (%r14),%rbx
   1c3ae:	41 89 d4             	mov    %edx,%r12d
   1c3b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c3b4: R_X86_64_32S	.rodata.str1.1+0xb4
   1c3b8:	41 83 cc 02          	or     $0x2,%r12d
   1c3bc:	e8 00 00 00 00       	callq  1c3c1 <e1000_standby_eeprom+0x10b>
			1c3bd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c3c1:	48 83 c3 10          	add    $0x10,%rbx
   1c3c5:	44 89 23             	mov    %r12d,(%rbx)
   1c3c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c3cb: R_X86_64_32S	.rodata.str1.1+0xae
   1c3cf:	49 8b 1e             	mov    (%r14),%rbx
   1c3d2:	e8 00 00 00 00       	callq  1c3d7 <e1000_standby_eeprom+0x121>
			1c3d3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c3d7:	8b 43 08             	mov    0x8(%rbx),%eax
   1c3da:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
   1c3df:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
   1c3e3:	e8 00 00 00 00       	callq  1c3e8 <e1000_standby_eeprom+0x132>
			1c3e4: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c3e8:	49 8b 1e             	mov    (%r14),%rbx
   1c3eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c3ee: R_X86_64_32S	.rodata.str1.1+0xb4
   1c3f2:	e8 00 00 00 00       	callq  1c3f7 <e1000_standby_eeprom+0x141>
			1c3f3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c3f7:	48 83 c3 10          	add    $0x10,%rbx
   1c3fb:	44 89 23             	mov    %r12d,(%rbx)
   1c3fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c401: R_X86_64_32S	.rodata.str1.1+0xae
   1c405:	49 8b 1e             	mov    (%r14),%rbx
   1c408:	e8 00 00 00 00       	callq  1c40d <e1000_standby_eeprom+0x157>
			1c409: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c40d:	8b 43 08             	mov    0x8(%rbx),%eax
   1c410:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
   1c415:	e8 00 00 00 00       	callq  1c41a <e1000_standby_eeprom+0x164>
			1c416: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c41a:	5e                   	pop    %rsi
   1c41b:	5b                   	pop    %rbx
   1c41c:	41 5c                	pop    %r12
   1c41e:	41 5d                	pop    %r13
   1c420:	41 5e                	pop    %r14
   1c422:	41 5f                	pop    %r15
   1c424:	c9                   	leaveq 
   1c425:	c3                   	retq   

000000000001c426 <e1000_lower_ee_clk>:
   1c426:	55                   	push   %rbp
   1c427:	48 89 e5             	mov    %rsp,%rbp
   1c42a:	41 55                	push   %r13
   1c42c:	49 89 fd             	mov    %rdi,%r13
   1c42f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c432: R_X86_64_32S	.rodata.str1.1+0x2292
   1c436:	41 54                	push   %r12
   1c438:	53                   	push   %rbx
   1c439:	48 89 f3             	mov    %rsi,%rbx
   1c43c:	48 83 ec 08          	sub    $0x8,%rsp
   1c440:	e8 00 00 00 00       	callq  1c445 <e1000_lower_ee_clk+0x1f>
			1c441: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c445:	44 8b 23             	mov    (%rbx),%r12d
   1c448:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c44b: R_X86_64_32S	.rodata.str1.1+0xb4
   1c44f:	41 83 e4 fe          	and    $0xfffffffffffffffe,%r12d
   1c453:	44 89 23             	mov    %r12d,(%rbx)
   1c456:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c45a:	e8 00 00 00 00       	callq  1c45f <e1000_lower_ee_clk+0x39>
			1c45b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c45f:	48 83 c3 10          	add    $0x10,%rbx
   1c463:	44 89 23             	mov    %r12d,(%rbx)
   1c466:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c469: R_X86_64_32S	.rodata.str1.1+0xae
   1c46d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c471:	e8 00 00 00 00       	callq  1c476 <e1000_lower_ee_clk+0x50>
			1c472: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c476:	8b 43 08             	mov    0x8(%rbx),%eax
   1c479:	41 0f b7 7d 52       	movzwl 0x52(%r13),%edi
   1c47e:	e8 00 00 00 00       	callq  1c483 <e1000_lower_ee_clk+0x5d>
			1c47f: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c483:	5f                   	pop    %rdi
   1c484:	5b                   	pop    %rbx
   1c485:	41 5c                	pop    %r12
   1c487:	41 5d                	pop    %r13
   1c489:	c9                   	leaveq 
   1c48a:	c3                   	retq   

000000000001c48b <e1000_raise_ee_clk>:
   1c48b:	55                   	push   %rbp
   1c48c:	48 89 e5             	mov    %rsp,%rbp
   1c48f:	41 55                	push   %r13
   1c491:	49 89 fd             	mov    %rdi,%r13
   1c494:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c497: R_X86_64_32S	.rodata.str1.1+0x22a5
   1c49b:	41 54                	push   %r12
   1c49d:	53                   	push   %rbx
   1c49e:	48 89 f3             	mov    %rsi,%rbx
   1c4a1:	48 83 ec 08          	sub    $0x8,%rsp
   1c4a5:	e8 00 00 00 00       	callq  1c4aa <e1000_raise_ee_clk+0x1f>
			1c4a6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c4aa:	44 8b 23             	mov    (%rbx),%r12d
   1c4ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c4b0: R_X86_64_32S	.rodata.str1.1+0xb4
   1c4b4:	41 83 cc 01          	or     $0x1,%r12d
   1c4b8:	44 89 23             	mov    %r12d,(%rbx)
   1c4bb:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c4bf:	e8 00 00 00 00       	callq  1c4c4 <e1000_raise_ee_clk+0x39>
			1c4c0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c4c4:	48 83 c3 10          	add    $0x10,%rbx
   1c4c8:	44 89 23             	mov    %r12d,(%rbx)
   1c4cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c4ce: R_X86_64_32S	.rodata.str1.1+0xae
   1c4d2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c4d6:	e8 00 00 00 00       	callq  1c4db <e1000_raise_ee_clk+0x50>
			1c4d7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c4db:	8b 43 08             	mov    0x8(%rbx),%eax
   1c4de:	41 0f b7 7d 52       	movzwl 0x52(%r13),%edi
   1c4e3:	e8 00 00 00 00       	callq  1c4e8 <e1000_raise_ee_clk+0x5d>
			1c4e4: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c4e8:	41 58                	pop    %r8
   1c4ea:	5b                   	pop    %rbx
   1c4eb:	41 5c                	pop    %r12
   1c4ed:	41 5d                	pop    %r13
   1c4ef:	c9                   	leaveq 
   1c4f0:	c3                   	retq   

000000000001c4f1 <e1000_shift_in_ee_bits>:
   1c4f1:	55                   	push   %rbp
   1c4f2:	48 89 e5             	mov    %rsp,%rbp
   1c4f5:	41 57                	push   %r15
   1c4f7:	41 56                	push   %r14
   1c4f9:	41 55                	push   %r13
   1c4fb:	49 89 fd             	mov    %rdi,%r13
   1c4fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c501: R_X86_64_32S	.rodata.str1.1+0x22b8
   1c505:	41 54                	push   %r12
   1c507:	53                   	push   %rbx
   1c508:	48 83 ec 18          	sub    $0x18,%rsp
   1c50c:	66 89 75 c6          	mov    %si,0xffffffffffffffc6(%rbp)
   1c510:	e8 00 00 00 00       	callq  1c515 <e1000_shift_in_ee_bits+0x24>
			1c511: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c515:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c518: R_X86_64_32S	.rodata.str1.1+0xae
   1c51c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c520:	e8 00 00 00 00       	callq  1c525 <e1000_shift_in_ee_bits+0x34>
			1c521: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c525:	8b 43 10             	mov    0x10(%rbx),%eax
   1c528:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   1c52b:	45 31 ff             	xor    %r15d,%r15d
   1c52e:	45 31 f6             	xor    %r14d,%r14d
   1c531:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   1c534:	0f b7 45 c6          	movzwl 0xffffffffffffffc6(%rbp),%eax
   1c538:	41 39 c7             	cmp    %eax,%r15d
   1c53b:	74 49                	je     1c586 <e1000_shift_in_ee_bits+0x95>
   1c53d:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   1c541:	4c 89 ef             	mov    %r13,%rdi
   1c544:	45 01 f6             	add    %r14d,%r14d
   1c547:	4c 89 e6             	mov    %r12,%rsi
   1c54a:	e8 3c ff ff ff       	callq  1c48b <e1000_raise_ee_clk>
   1c54f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c552: R_X86_64_32S	.rodata.str1.1+0xae
   1c556:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c55a:	e8 00 00 00 00       	callq  1c55f <e1000_shift_in_ee_bits+0x6e>
			1c55b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c55f:	8b 43 10             	mov    0x10(%rbx),%eax
   1c562:	89 c1                	mov    %eax,%ecx
   1c564:	44 89 f2             	mov    %r14d,%edx
   1c567:	4c 89 e6             	mov    %r12,%rsi
   1c56a:	83 e1 fb             	and    $0xfffffffffffffffb,%ecx
   1c56d:	83 ca 01             	or     $0x1,%edx
   1c570:	a8 08                	test   $0x8,%al
   1c572:	44 0f 45 f2          	cmovne %edx,%r14d
   1c576:	4c 89 ef             	mov    %r13,%rdi
   1c579:	41 ff c7             	inc    %r15d
   1c57c:	89 4d d4             	mov    %ecx,0xffffffffffffffd4(%rbp)
   1c57f:	e8 a2 fe ff ff       	callq  1c426 <e1000_lower_ee_clk>
   1c584:	eb ae                	jmp    1c534 <e1000_shift_in_ee_bits+0x43>
   1c586:	48 83 c4 18          	add    $0x18,%rsp
   1c58a:	41 0f b7 c6          	movzwl %r14w,%eax
   1c58e:	5b                   	pop    %rbx
   1c58f:	41 5c                	pop    %r12
   1c591:	41 5d                	pop    %r13
   1c593:	41 5e                	pop    %r14
   1c595:	41 5f                	pop    %r15
   1c597:	c9                   	leaveq 
   1c598:	c3                   	retq   

000000000001c599 <e1000_shift_out_ee_bits>:
   1c599:	55                   	push   %rbp
   1c59a:	48 89 e5             	mov    %rsp,%rbp
   1c59d:	41 57                	push   %r15
   1c59f:	41 56                	push   %r14
   1c5a1:	41 55                	push   %r13
   1c5a3:	49 89 fd             	mov    %rdi,%r13
   1c5a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c5a9: R_X86_64_32S	.rodata.str1.1+0x22cf
   1c5ad:	4d 8d 7d 48          	lea    0x48(%r13),%r15
   1c5b1:	41 54                	push   %r12
   1c5b3:	41 89 d4             	mov    %edx,%r12d
   1c5b6:	53                   	push   %rbx
   1c5b7:	48 83 ec 18          	sub    $0x18,%rsp
   1c5bb:	66 89 75 c6          	mov    %si,0xffffffffffffffc6(%rbp)
   1c5bf:	e8 00 00 00 00       	callq  1c5c4 <e1000_shift_out_ee_bits+0x2b>
			1c5c0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c5c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c5c7: R_X86_64_32S	.rodata.str1.1+0xae
   1c5cb:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c5cf:	e8 00 00 00 00       	callq  1c5d4 <e1000_shift_out_ee_bits+0x3b>
			1c5d0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c5d4:	8b 43 10             	mov    0x10(%rbx),%eax
   1c5d7:	41 8b 55 48          	mov    0x48(%r13),%edx
   1c5db:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   1c5de:	83 fa 02             	cmp    $0x2,%edx
   1c5e1:	75 05                	jne    1c5e8 <e1000_shift_out_ee_bits+0x4f>
   1c5e3:	83 e0 f7             	and    $0xfffffffffffffff7,%eax
   1c5e6:	eb 07                	jmp    1c5ef <e1000_shift_out_ee_bits+0x56>
   1c5e8:	ff ca                	dec    %edx
   1c5ea:	75 06                	jne    1c5f2 <e1000_shift_out_ee_bits+0x59>
   1c5ec:	83 c8 08             	or     $0x8,%eax
   1c5ef:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   1c5f2:	41 0f b7 cc          	movzwl %r12w,%ecx
   1c5f6:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1c5fc:	ff c9                	dec    %ecx
   1c5fe:	41 d3 e6             	shl    %cl,%r14d
   1c601:	0f b7 45 c6          	movzwl 0xffffffffffffffc6(%rbp),%eax
   1c605:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   1c608:	83 e2 fb             	and    $0xfffffffffffffffb,%edx
   1c60b:	44 85 f0             	test   %r14d,%eax
   1c60e:	89 55 d4             	mov    %edx,0xffffffffffffffd4(%rbp)
   1c611:	74 06                	je     1c619 <e1000_shift_out_ee_bits+0x80>
   1c613:	83 ca 04             	or     $0x4,%edx
   1c616:	89 55 d4             	mov    %edx,0xffffffffffffffd4(%rbp)
   1c619:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c61d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c620: R_X86_64_32S	.rodata.str1.1+0xb4
   1c624:	44 8b 65 d4          	mov    0xffffffffffffffd4(%rbp),%r12d
   1c628:	e8 00 00 00 00       	callq  1c62d <e1000_shift_out_ee_bits+0x94>
			1c629: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c62d:	48 83 c3 10          	add    $0x10,%rbx
   1c631:	44 89 23             	mov    %r12d,(%rbx)
   1c634:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c637: R_X86_64_32S	.rodata.str1.1+0xae
   1c63b:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c63f:	e8 00 00 00 00       	callq  1c644 <e1000_shift_out_ee_bits+0xab>
			1c640: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c644:	8b 43 08             	mov    0x8(%rbx),%eax
   1c647:	41 0f b7 7f 0a       	movzwl 0xa(%r15),%edi
   1c64c:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   1c650:	e8 00 00 00 00       	callq  1c655 <e1000_shift_out_ee_bits+0xbc>
			1c651: R_X86_64_PC32	__udelay+0xfffffffffffffffc
   1c655:	48 89 de             	mov    %rbx,%rsi
   1c658:	4c 89 ef             	mov    %r13,%rdi
   1c65b:	e8 2b fe ff ff       	callq  1c48b <e1000_raise_ee_clk>
   1c660:	48 89 de             	mov    %rbx,%rsi
   1c663:	4c 89 ef             	mov    %r13,%rdi
   1c666:	e8 bb fd ff ff       	callq  1c426 <e1000_lower_ee_clk>
   1c66b:	41 d1 ee             	shr    %r14d
   1c66e:	75 91                	jne    1c601 <e1000_shift_out_ee_bits+0x68>
   1c670:	44 8b 65 d4          	mov    0xffffffffffffffd4(%rbp),%r12d
   1c674:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c678:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c67b: R_X86_64_32S	.rodata.str1.1+0xb4
   1c67f:	41 83 e4 fb          	and    $0xfffffffffffffffb,%r12d
   1c683:	48 83 c3 10          	add    $0x10,%rbx
   1c687:	44 89 65 d4          	mov    %r12d,0xffffffffffffffd4(%rbp)
   1c68b:	e8 00 00 00 00       	callq  1c690 <e1000_shift_out_ee_bits+0xf7>
			1c68c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c690:	44 89 23             	mov    %r12d,(%rbx)
   1c693:	48 83 c4 18          	add    $0x18,%rsp
   1c697:	5b                   	pop    %rbx
   1c698:	41 5c                	pop    %r12
   1c69a:	41 5d                	pop    %r13
   1c69c:	41 5e                	pop    %r14
   1c69e:	41 5f                	pop    %r15
   1c6a0:	c9                   	leaveq 
   1c6a1:	c3                   	retq   

000000000001c6a2 <e1000_spi_eeprom_ready>:
   1c6a2:	55                   	push   %rbp
   1c6a3:	48 89 e5             	mov    %rsp,%rbp
   1c6a6:	41 54                	push   %r12
   1c6a8:	45 31 e4             	xor    %r12d,%r12d
   1c6ab:	53                   	push   %rbx
   1c6ac:	48 89 fb             	mov    %rdi,%rbx
   1c6af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c6b2: R_X86_64_32S	.rodata.str1.1+0x22e7
   1c6b6:	e8 00 00 00 00       	callq  1c6bb <e1000_spi_eeprom_ready+0x19>
			1c6b7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c6bb:	0f b7 53 4e          	movzwl 0x4e(%rbx),%edx
   1c6bf:	be 05 00 00 00       	mov    $0x5,%esi
   1c6c4:	48 89 df             	mov    %rbx,%rdi
   1c6c7:	e8 cd fe ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1c6cc:	be 08 00 00 00       	mov    $0x8,%esi
   1c6d1:	48 89 df             	mov    %rbx,%rdi
   1c6d4:	e8 18 fe ff ff       	callq  1c4f1 <e1000_shift_in_ee_bits>
   1c6d9:	a8 01                	test   $0x1,%al
   1c6db:	74 20                	je     1c6fd <e1000_spi_eeprom_ready+0x5b>
   1c6dd:	bf e3 53 00 00       	mov    $0x53e3,%edi
   1c6e2:	41 83 c4 05          	add    $0x5,%r12d
   1c6e6:	e8 71 82 fe ff       	callq  495c <__const_udelay>
   1c6eb:	48 89 df             	mov    %rbx,%rdi
   1c6ee:	e8 c3 fb ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1c6f3:	66 41 81 fc 88 13    	cmp    $0x1388,%r12w
   1c6f9:	74 0c                	je     1c707 <e1000_spi_eeprom_ready+0x65>
   1c6fb:	eb be                	jmp    1c6bb <e1000_spi_eeprom_ready+0x19>
   1c6fd:	31 c0                	xor    %eax,%eax
   1c6ff:	66 41 81 fc 87 13    	cmp    $0x1387,%r12w
   1c705:	76 03                	jbe    1c70a <e1000_spi_eeprom_ready+0x68>
   1c707:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   1c70a:	5b                   	pop    %rbx
   1c70b:	41 5c                	pop    %r12
   1c70d:	c9                   	leaveq 
   1c70e:	c3                   	retq   

000000000001c70f <e1000_read_eeprom>:
   1c70f:	55                   	push   %rbp
   1c710:	48 89 e5             	mov    %rsp,%rbp
   1c713:	41 57                	push   %r15
   1c715:	41 56                	push   %r14
   1c717:	49 89 ce             	mov    %rcx,%r14
   1c71a:	41 55                	push   %r13
   1c71c:	49 89 fd             	mov    %rdi,%r13
   1c71f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c722: R_X86_64_32S	.rodata.str1.1+0x22fe
   1c726:	41 54                	push   %r12
   1c728:	53                   	push   %rbx
   1c729:	49 8d 5d 48          	lea    0x48(%r13),%rbx
   1c72d:	48 83 ec 28          	sub    $0x28,%rsp
   1c731:	66 89 75 be          	mov    %si,0xffffffffffffffbe(%rbp)
   1c735:	66 89 55 bc          	mov    %dx,0xffffffffffffffbc(%rbp)
   1c739:	e8 00 00 00 00       	callq  1c73e <e1000_read_eeprom+0x2f>
			1c73a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c73e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c741: R_X86_64_32S	.data+0x3ec20
   1c745:	e8 00 00 00 00       	callq  1c74a <e1000_read_eeprom+0x3b>
			1c746: R_X86_64_PC32	.spinlock.text+0xde
   1c74a:	0f b7 45 be          	movzwl 0xffffffffffffffbe(%rbp),%eax
   1c74e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c751: R_X86_64_32S	.rodata.str1.1+0x2310
   1c755:	89 45 c0             	mov    %eax,0xffffffffffffffc0(%rbp)
   1c758:	41 89 c4             	mov    %eax,%r12d
   1c75b:	e8 00 00 00 00       	callq  1c760 <e1000_read_eeprom+0x51>
			1c75c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c760:	66 83 7b 04 00       	cmpw   $0x0,0x4(%rbx)
   1c765:	75 08                	jne    1c76f <e1000_read_eeprom+0x60>
   1c767:	4c 89 ef             	mov    %r13,%rdi
   1c76a:	e8 5b 30 00 00       	callq  1f7ca <e1000_init_eeprom_params>
   1c76f:	8b 43 04             	mov    0x4(%rbx),%eax
   1c772:	66 41 39 c4          	cmp    %ax,%r12w
   1c776:	0f 83 90 02 00 00    	jae    1ca0c <e1000_read_eeprom+0x2fd>
   1c77c:	8b 4d bc             	mov    0xffffffffffffffbc(%rbp),%ecx
   1c77f:	45 0f b7 fc          	movzwl %r12w,%r15d
   1c783:	0f b7 c0             	movzwl %ax,%eax
   1c786:	44 29 f8             	sub    %r15d,%eax
   1c789:	0f b7 d1             	movzwl %cx,%edx
   1c78c:	39 c2                	cmp    %eax,%edx
   1c78e:	0f 8f 78 02 00 00    	jg     1ca0c <e1000_read_eeprom+0x2fd>
   1c794:	66 85 c9             	test   %cx,%cx
   1c797:	0f 84 6f 02 00 00    	je     1ca0c <e1000_read_eeprom+0x2fd>
   1c79d:	4c 89 ef             	mov    %r13,%rdi
   1c7a0:	e8 1d 3d fe ff       	callq  4c2 <e1000_is_onboard_nvm_eeprom>
   1c7a5:	84 c0                	test   %al,%al
   1c7a7:	74 17                	je     1c7c0 <e1000_read_eeprom+0xb1>
   1c7a9:	41 80 7d 56 00       	cmpb   $0x0,0x56(%r13)
   1c7ae:	75 10                	jne    1c7c0 <e1000_read_eeprom+0xb1>
   1c7b0:	4c 89 ef             	mov    %r13,%rdi
   1c7b3:	e8 15 92 fe ff       	callq  59cd <e1000_acquire_eeprom>
   1c7b8:	85 c0                	test   %eax,%eax
   1c7ba:	0f 85 4c 02 00 00    	jne    1ca0c <e1000_read_eeprom+0x2fd>
   1c7c0:	80 7b 0e 00          	cmpb   $0x0,0xe(%rbx)
   1c7c4:	74 7a                	je     1c840 <e1000_read_eeprom+0x131>
   1c7c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c7c9: R_X86_64_32S	.rodata.str1.1+0x2325
   1c7cd:	45 31 ff             	xor    %r15d,%r15d
   1c7d0:	e8 00 00 00 00       	callq  1c7d5 <e1000_read_eeprom+0xc6>
			1c7d1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c7d5:	0f b7 45 be          	movzwl 0xffffffffffffffbe(%rbp),%eax
   1c7d9:	44 8d 24 85 01 00 00 	lea    0x1(,%rax,4),%r12d
   1c7e0:	00 
   1c7e1:	0f b7 45 bc          	movzwl 0xffffffffffffffbc(%rbp),%eax
   1c7e5:	49 39 c7             	cmp    %rax,%r15
   1c7e8:	0f 84 1a 02 00 00    	je     1ca08 <e1000_read_eeprom+0x2f9>
   1c7ee:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c7f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c7f5: R_X86_64_32S	.rodata.str1.1+0xb4
   1c7f9:	e8 00 00 00 00       	callq  1c7fe <e1000_read_eeprom+0xef>
			1c7fa: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c7fe:	48 83 c3 14          	add    $0x14,%rbx
   1c802:	44 89 23             	mov    %r12d,(%rbx)
   1c805:	31 f6                	xor    %esi,%esi
   1c807:	4c 89 ef             	mov    %r13,%rdi
   1c80a:	41 83 c4 04          	add    $0x4,%r12d
   1c80e:	e8 58 90 fe ff       	callq  586b <e1000_poll_eerd_eewr_done>
   1c813:	85 c0                	test   %eax,%eax
   1c815:	89 c3                	mov    %eax,%ebx
   1c817:	0f 85 f2 01 00 00    	jne    1ca0f <e1000_read_eeprom+0x300>
   1c81d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c820: R_X86_64_32S	.rodata.str1.1+0xae
   1c824:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c828:	e8 00 00 00 00       	callq  1c82d <e1000_read_eeprom+0x11e>
			1c829: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c82d:	8b 43 14             	mov    0x14(%rbx),%eax
   1c830:	c1 e8 10             	shr    $0x10,%eax
   1c833:	49 ff c7             	inc    %r15
   1c836:	66 41 89 06          	mov    %ax,(%r14)
   1c83a:	49 83 c6 02          	add    $0x2,%r14
   1c83e:	eb a1                	jmp    1c7e1 <e1000_read_eeprom+0xd2>
   1c840:	8b 03                	mov    (%rbx),%eax
   1c842:	83 f8 04             	cmp    $0x4,%eax
   1c845:	0f 85 cf 00 00 00    	jne    1c91a <e1000_read_eeprom+0x20b>
   1c84b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c84e: R_X86_64_32S	.rodata.str1.1+0x233c
   1c852:	e8 00 00 00 00       	callq  1c857 <e1000_read_eeprom+0x148>
			1c853: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c857:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c85a: R_X86_64_32S	.rodata.str1.1+0xae
   1c85e:	66 c7 45 d6 00 00    	movw   $0x0,0xffffffffffffffd6(%rbp)
   1c864:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1c868:	e8 00 00 00 00       	callq  1c86d <e1000_read_eeprom+0x15e>
			1c869: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c86d:	8b 43 10             	mov    0x10(%rbx),%eax
   1c870:	41 8b 55 30          	mov    0x30(%r13),%edx
   1c874:	c1 e8 16             	shr    $0x16,%eax
   1c877:	4c 89 ef             	mov    %r13,%rdi
   1c87a:	83 e0 01             	and    $0x1,%eax
   1c87d:	44 8d 24 12          	lea    (%rdx,%rdx,1),%r12d
   1c881:	44 0f af e0          	imul   %eax,%r12d
   1c885:	e8 33 88 fe ff       	callq  50bd <e1000_get_software_flag>
   1c88a:	85 c0                	test   %eax,%eax
   1c88c:	89 c3                	mov    %eax,%ebx
   1c88e:	0f 85 7b 01 00 00    	jne    1ca0f <e1000_read_eeprom+0x300>
   1c894:	8b 45 c0             	mov    0xffffffffffffffc0(%rbp),%eax
   1c897:	66 c7 45 c6 00 00    	movw   $0x0,0xffffffffffffffc6(%rbp)
   1c89d:	45 31 ff             	xor    %r15d,%r15d
   1c8a0:	45 8d 24 44          	lea    (%r12,%rax,2),%r12d
   1c8a4:	8b 45 bc             	mov    0xffffffffffffffbc(%rbp),%eax
   1c8a7:	66 39 45 c6          	cmp    %ax,0xffffffffffffffc6(%rbp)
   1c8ab:	74 60                	je     1c90d <e1000_read_eeprom+0x1fe>
   1c8ad:	49 8b 55 28          	mov    0x28(%r13),%rdx
   1c8b1:	48 85 d2             	test   %rdx,%rdx
   1c8b4:	74 18                	je     1c8ce <e1000_read_eeprom+0x1bf>
   1c8b6:	0f b7 45 be          	movzwl 0xffffffffffffffbe(%rbp),%eax
   1c8ba:	44 01 f8             	add    %r15d,%eax
   1c8bd:	48 98                	cltq   
   1c8bf:	48 8d 04 82          	lea    (%rdx,%rax,4),%rax
   1c8c3:	80 78 02 00          	cmpb   $0x0,0x2(%rax)
   1c8c7:	74 05                	je     1c8ce <e1000_read_eeprom+0x1bf>
   1c8c9:	66 8b 00             	mov    (%rax),%ax
   1c8cc:	eb 2a                	jmp    1c8f8 <e1000_read_eeprom+0x1e9>
   1c8ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c8d1: R_X86_64_32S	.rodata.str1.1+0x2353
   1c8d5:	e8 00 00 00 00       	callq  1c8da <e1000_read_eeprom+0x1cb>
			1c8d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1c8da:	48 8d 4d d6          	lea    0xffffffffffffffd6(%rbp),%rcx
   1c8de:	ba 02 00 00 00       	mov    $0x2,%edx
   1c8e3:	44 89 e6             	mov    %r12d,%esi
   1c8e6:	4c 89 ef             	mov    %r13,%rdi
   1c8e9:	e8 0a 86 fe ff       	callq  4ef8 <e1000_read_ich8_data>
   1c8ee:	85 c0                	test   %eax,%eax
   1c8f0:	89 c3                	mov    %eax,%ebx
   1c8f2:	75 19                	jne    1c90d <e1000_read_eeprom+0x1fe>
   1c8f4:	66 8b 45 d6          	mov    0xffffffffffffffd6(%rbp),%ax
   1c8f8:	66 41 89 06          	mov    %ax,(%r14)
   1c8fc:	66 ff 45 c6          	incw   0xffffffffffffffc6(%rbp)
   1c900:	49 ff c7             	inc    %r15
   1c903:	49 83 c6 02          	add    $0x2,%r14
   1c907:	41 83 c4 02          	add    $0x2,%r12d
   1c90b:	eb 97                	jmp    1c8a4 <e1000_read_eeprom+0x195>
   1c90d:	4c 89 ef             	mov    %r13,%rdi
   1c910:	e8 9f 37 fe ff       	callq  b4 <e1000_release_software_flag>
   1c915:	e9 f5 00 00 00       	jmpq   1ca0f <e1000_read_eeprom+0x300>
   1c91a:	ff c8                	dec    %eax
   1c91c:	0f 85 81 00 00 00    	jne    1c9a3 <e1000_read_eeprom+0x294>
   1c922:	4c 89 ef             	mov    %r13,%rdi
   1c925:	e8 78 fd ff ff       	callq  1c6a2 <e1000_spi_eeprom_ready>
   1c92a:	85 c0                	test   %eax,%eax
   1c92c:	74 0d                	je     1c93b <e1000_read_eeprom+0x22c>
   1c92e:	4c 89 ef             	mov    %r13,%rdi
   1c931:	e8 58 f8 ff ff       	callq  1c18e <e1000_release_eeprom>
   1c936:	e9 d1 00 00 00       	jmpq   1ca0c <e1000_read_eeprom+0x2fd>
   1c93b:	4c 89 ef             	mov    %r13,%rdi
   1c93e:	e8 73 f9 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1c943:	66 83 7b 08 08       	cmpw   $0x8,0x8(%rbx)
   1c948:	75 09                	jne    1c953 <e1000_read_eeprom+0x244>
   1c94a:	66 41 83 fc 7f       	cmp    $0x7f,%r12w
   1c94f:	b0 0b                	mov    $0xb,%al
   1c951:	77 02                	ja     1c955 <e1000_read_eeprom+0x246>
   1c953:	b0 03                	mov    $0x3,%al
   1c955:	0f b7 53 06          	movzwl 0x6(%rbx),%edx
   1c959:	0f b6 f0             	movzbl %al,%esi
   1c95c:	4c 89 ef             	mov    %r13,%rdi
   1c95f:	45 31 e4             	xor    %r12d,%r12d
   1c962:	e8 32 fc ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1c967:	0f b7 53 08          	movzwl 0x8(%rbx),%edx
   1c96b:	43 8d 34 3f          	lea    (%r15,%r15,1),%esi
   1c96f:	4c 89 ef             	mov    %r13,%rdi
   1c972:	4c 89 f3             	mov    %r14,%rbx
   1c975:	0f b7 f6             	movzwl %si,%esi
   1c978:	e8 1c fc ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1c97d:	0f b7 45 bc          	movzwl 0xffffffffffffffbc(%rbp),%eax
   1c981:	49 39 c4             	cmp    %rax,%r12
   1c984:	74 7a                	je     1ca00 <e1000_read_eeprom+0x2f1>
   1c986:	be 10 00 00 00       	mov    $0x10,%esi
   1c98b:	4c 89 ef             	mov    %r13,%rdi
   1c98e:	49 ff c4             	inc    %r12
   1c991:	e8 5b fb ff ff       	callq  1c4f1 <e1000_shift_in_ee_bits>
   1c996:	66 c1 c0 08          	rol    $0x8,%ax
   1c99a:	66 89 03             	mov    %ax,(%rbx)
   1c99d:	48 83 c3 02          	add    $0x2,%rbx
   1c9a1:	eb da                	jmp    1c97d <e1000_read_eeprom+0x26e>
   1c9a3:	83 3b 02             	cmpl   $0x2,(%rbx)
   1c9a6:	75 58                	jne    1ca00 <e1000_read_eeprom+0x2f1>
   1c9a8:	4d 89 f4             	mov    %r14,%r12
   1c9ab:	45 31 f6             	xor    %r14d,%r14d
   1c9ae:	66 44 3b 75 bc       	cmp    0xffffffffffffffbc(%rbp),%r14w
   1c9b3:	74 4b                	je     1ca00 <e1000_read_eeprom+0x2f1>
   1c9b5:	0f b7 53 06          	movzwl 0x6(%rbx),%edx
   1c9b9:	be 06 00 00 00       	mov    $0x6,%esi
   1c9be:	4c 89 ef             	mov    %r13,%rdi
   1c9c1:	e8 d3 fb ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1c9c6:	66 8b 45 be          	mov    0xffffffffffffffbe(%rbp),%ax
   1c9ca:	0f b7 53 08          	movzwl 0x8(%rbx),%edx
   1c9ce:	4c 89 ef             	mov    %r13,%rdi
   1c9d1:	41 8d 34 06          	lea    (%r14,%rax,1),%esi
   1c9d5:	41 ff c6             	inc    %r14d
   1c9d8:	0f b7 f6             	movzwl %si,%esi
   1c9db:	e8 b9 fb ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1c9e0:	be 10 00 00 00       	mov    $0x10,%esi
   1c9e5:	4c 89 ef             	mov    %r13,%rdi
   1c9e8:	e8 04 fb ff ff       	callq  1c4f1 <e1000_shift_in_ee_bits>
   1c9ed:	4c 89 ef             	mov    %r13,%rdi
   1c9f0:	66 41 89 04 24       	mov    %ax,(%r12)
   1c9f5:	49 83 c4 02          	add    $0x2,%r12
   1c9f9:	e8 b8 f8 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1c9fe:	eb ae                	jmp    1c9ae <e1000_read_eeprom+0x29f>
   1ca00:	4c 89 ef             	mov    %r13,%rdi
   1ca03:	e8 86 f7 ff ff       	callq  1c18e <e1000_release_eeprom>
   1ca08:	31 db                	xor    %ebx,%ebx
   1ca0a:	eb 03                	jmp    1ca0f <e1000_read_eeprom+0x300>
   1ca0c:	83 cb ff             	or     $0xffffffffffffffff,%ebx
   1ca0f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ca12: R_X86_64_32S	.data+0x3ec20
   1ca16:	e8 00 00 00 00       	callq  1ca1b <e1000_read_eeprom+0x30c>
			1ca17: R_X86_64_PC32	.spinlock.text+0xfffffffffffffffc
   1ca1b:	48 83 c4 28          	add    $0x28,%rsp
   1ca1f:	89 d8                	mov    %ebx,%eax
   1ca21:	5b                   	pop    %rbx
   1ca22:	41 5c                	pop    %r12
   1ca24:	41 5d                	pop    %r13
   1ca26:	41 5e                	pop    %r14
   1ca28:	41 5f                	pop    %r15
   1ca2a:	c9                   	leaveq 
   1ca2b:	c3                   	retq   

000000000001ca2c <e1000_phy_hw_reset>:
   1ca2c:	55                   	push   %rbp
   1ca2d:	48 89 e5             	mov    %rsp,%rbp
   1ca30:	41 57                	push   %r15
   1ca32:	41 56                	push   %r14
   1ca34:	41 55                	push   %r13
   1ca36:	49 89 fd             	mov    %rdi,%r13
   1ca39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ca3c: R_X86_64_32S	.rodata.str1.1+0x2368
   1ca40:	41 54                	push   %r12
   1ca42:	53                   	push   %rbx
   1ca43:	48 83 ec 18          	sub    $0x18,%rsp
   1ca47:	e8 00 00 00 00       	callq  1ca4c <e1000_phy_hw_reset+0x20>
			1ca48: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ca4c:	4c 89 ef             	mov    %r13,%rdi
   1ca4f:	e8 c0 36 fe ff       	callq  114 <e1000_check_phy_reset_block>
   1ca54:	85 c0                	test   %eax,%eax
   1ca56:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   1ca59:	74 0c                	je     1ca67 <e1000_phy_hw_reset+0x3b>
   1ca5b:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   1ca62:	e9 69 04 00 00       	jmpq   1ced0 <e1000_phy_hw_reset+0x4a4>
   1ca67:	41 8b 45 10          	mov    0x10(%r13),%eax
   1ca6b:	83 f8 03             	cmp    $0x3,%eax
   1ca6e:	0f 86 fa 00 00 00    	jbe    1cb6e <e1000_phy_hw_reset+0x142>
   1ca74:	83 f8 11             	cmp    $0x11,%eax
   1ca77:	75 1c                	jne    1ca95 <e1000_phy_hw_reset+0x69>
   1ca79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ca7c: R_X86_64_32S	.rodata.str1.1+0xae
   1ca80:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1ca84:	e8 00 00 00 00       	callq  1ca89 <e1000_phy_hw_reset+0x5d>
			1ca85: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ca89:	8b 43 08             	mov    0x8(%rbx),%eax
   1ca8c:	a8 04                	test   $0x4,%al
   1ca8e:	ba 04 00 00 00       	mov    $0x4,%edx
   1ca93:	75 05                	jne    1ca9a <e1000_phy_hw_reset+0x6e>
   1ca95:	ba 02 00 00 00       	mov    $0x2,%edx
   1ca9a:	44 0f b7 fa          	movzwl %dx,%r15d
   1ca9e:	4c 89 ef             	mov    %r13,%rdi
   1caa1:	44 89 fe             	mov    %r15d,%esi
   1caa4:	e8 39 8e fe ff       	callq  58e2 <e1000_swfw_sync_acquire>
   1caa9:	85 c0                	test   %eax,%eax
   1caab:	74 0c                	je     1cab9 <e1000_phy_hw_reset+0x8d>
   1caad:	c7 45 c4 f3 ff ff ff 	movl   $0xfffffff3,0xffffffffffffffc4(%rbp)
   1cab4:	e9 17 04 00 00       	jmpq   1ced0 <e1000_phy_hw_reset+0x4a4>
   1cab9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cabc: R_X86_64_32S	.rodata.str1.1+0xae
   1cac0:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cac4:	e8 00 00 00 00       	callq  1cac9 <e1000_phy_hw_reset+0x9d>
			1cac5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cac9:	44 8b 33             	mov    (%rbx),%r14d
   1cacc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cacf: R_X86_64_32S	.rodata.str1.1+0xb4
   1cad3:	44 89 f3             	mov    %r14d,%ebx
   1cad6:	4d 8b 65 00          	mov    0x0(%r13),%r12
   1cada:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
   1cae0:	e8 00 00 00 00       	callq  1cae5 <e1000_phy_hw_reset+0xb9>
			1cae1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cae5:	41 89 1c 24          	mov    %ebx,(%r12)
   1cae9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1caec: R_X86_64_32S	.rodata.str1.1+0xae
   1caf0:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1caf4:	e8 00 00 00 00       	callq  1caf9 <e1000_phy_hw_reset+0xcd>
			1caf5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1caf9:	8b 43 08             	mov    0x8(%rbx),%eax
   1cafc:	41 83 7d 10 0d       	cmpl   $0xd,0x10(%r13)
   1cb01:	77 0c                	ja     1cb0f <e1000_phy_hw_reset+0xe3>
   1cb03:	bf 0a 00 00 00       	mov    $0xa,%edi
   1cb08:	e8 43 b0 fe ff       	callq  7b50 <msleep>
   1cb0d:	eb 0a                	jmp    1cb19 <e1000_phy_hw_reset+0xed>
   1cb0f:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
   1cb14:	e8 43 7e fe ff       	callq  495c <__const_udelay>
   1cb19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cb1c: R_X86_64_32S	.rodata.str1.1+0xb4
   1cb20:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cb24:	e8 00 00 00 00       	callq  1cb29 <e1000_phy_hw_reset+0xfd>
			1cb25: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cb29:	44 89 33             	mov    %r14d,(%rbx)
   1cb2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cb2f: R_X86_64_32S	.rodata.str1.1+0xae
   1cb33:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cb37:	e8 00 00 00 00       	callq  1cb3c <e1000_phy_hw_reset+0x110>
			1cb38: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cb3c:	8b 43 08             	mov    0x8(%rbx),%eax
   1cb3f:	41 83 7d 10 0d       	cmpl   $0xd,0x10(%r13)
   1cb44:	76 18                	jbe    1cb5e <e1000_phy_hw_reset+0x132>
   1cb46:	bb 09 00 00 00       	mov    $0x9,%ebx
   1cb4b:	bf 58 89 41 00       	mov    $0x418958,%edi
   1cb50:	48 ff cb             	dec    %rbx
   1cb53:	e8 04 7e fe ff       	callq  495c <__const_udelay>
   1cb58:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1cb5c:	75 ed                	jne    1cb4b <e1000_phy_hw_reset+0x11f>
   1cb5e:	44 89 fe             	mov    %r15d,%esi
   1cb61:	4c 89 ef             	mov    %r13,%rdi
   1cb64:	e8 27 87 fe ff       	callq  5290 <e1000_swfw_sync_release>
   1cb69:	e9 81 00 00 00       	jmpq   1cbef <e1000_phy_hw_reset+0x1c3>
   1cb6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cb71: R_X86_64_32S	.rodata.str1.1+0xae
   1cb75:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cb79:	e8 00 00 00 00       	callq  1cb7e <e1000_phy_hw_reset+0x152>
			1cb7a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cb7e:	44 8b 63 18          	mov    0x18(%rbx),%r12d
   1cb82:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cb86:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   1cb8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cb90: R_X86_64_32S	.rodata.str1.1+0xb4
   1cb94:	41 83 e4 ef          	and    $0xffffffffffffffef,%r12d
   1cb98:	e8 00 00 00 00       	callq  1cb9d <e1000_phy_hw_reset+0x171>
			1cb99: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cb9d:	48 83 c3 18          	add    $0x18,%rbx
   1cba1:	44 89 23             	mov    %r12d,(%rbx)
   1cba4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cba7: R_X86_64_32S	.rodata.str1.1+0xae
   1cbab:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cbaf:	e8 00 00 00 00       	callq  1cbb4 <e1000_phy_hw_reset+0x188>
			1cbb0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cbb4:	8b 43 08             	mov    0x8(%rbx),%eax
   1cbb7:	bf 0a 00 00 00       	mov    $0xa,%edi
   1cbbc:	41 83 cc 10          	or     $0x10,%r12d
   1cbc0:	e8 8b af fe ff       	callq  7b50 <msleep>
   1cbc5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cbc9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cbcc: R_X86_64_32S	.rodata.str1.1+0xb4
   1cbd0:	e8 00 00 00 00       	callq  1cbd5 <e1000_phy_hw_reset+0x1a9>
			1cbd1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cbd5:	48 83 c3 18          	add    $0x18,%rbx
   1cbd9:	44 89 23             	mov    %r12d,(%rbx)
   1cbdc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cbdf: R_X86_64_32S	.rodata.str1.1+0xae
   1cbe3:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cbe7:	e8 00 00 00 00       	callq  1cbec <e1000_phy_hw_reset+0x1c0>
			1cbe8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cbec:	8b 43 08             	mov    0x8(%rbx),%eax
   1cbef:	bf 9a d4 09 00       	mov    $0x9d49a,%edi
   1cbf4:	e8 63 7d fe ff       	callq  495c <__const_udelay>
   1cbf9:	41 8b 45 10          	mov    0x10(%r13),%eax
   1cbfd:	83 f8 0a             	cmp    $0xa,%eax
   1cc00:	74 05                	je     1cc07 <e1000_phy_hw_reset+0x1db>
   1cc02:	83 f8 0c             	cmp    $0xc,%eax
   1cc05:	75 3f                	jne    1cc46 <e1000_phy_hw_reset+0x21a>
   1cc07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cc0a: R_X86_64_32S	.rodata.str1.1+0xae
   1cc0e:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cc12:	e8 00 00 00 00       	callq  1cc17 <e1000_phy_hw_reset+0x1eb>
			1cc13: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cc17:	44 8b a3 00 0e 00 00 	mov    0xe00(%rbx),%r12d
   1cc1e:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cc22:	41 81 e4 ff f0 ff ff 	and    $0xfffff0ff,%r12d
   1cc29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cc2c: R_X86_64_32S	.rodata.str1.1+0xb4
   1cc30:	41 81 cc 00 03 00 07 	or     $0x7000300,%r12d
   1cc37:	e8 00 00 00 00       	callq  1cc3c <e1000_phy_hw_reset+0x210>
			1cc38: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cc3c:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
   1cc43:	44 89 23             	mov    %r12d,(%rbx)
   1cc46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cc49: R_X86_64_32S	.rodata.str1.1+0x237b
   1cc4d:	e8 00 00 00 00       	callq  1cc52 <e1000_phy_hw_reset+0x226>
			1cc4e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cc52:	41 8b 45 10          	mov    0x10(%r13),%eax
   1cc56:	83 f8 11             	cmp    $0x11,%eax
   1cc59:	74 28                	je     1cc83 <e1000_phy_hw_reset+0x257>
   1cc5b:	83 f8 0e             	cmp    $0xe,%eax
   1cc5e:	74 40                	je     1cca0 <e1000_phy_hw_reset+0x274>
   1cc60:	83 f8 0f             	cmp    $0xf,%eax
   1cc63:	74 3b                	je     1cca0 <e1000_phy_hw_reset+0x274>
   1cc65:	bb 09 00 00 00       	mov    $0x9,%ebx
   1cc6a:	bf 58 89 41 00       	mov    $0x418958,%edi
   1cc6f:	48 ff cb             	dec    %rbx
   1cc72:	e8 e5 7c fe ff       	callq  495c <__const_udelay>
   1cc77:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1cc7b:	0f 84 33 02 00 00    	je     1ceb4 <e1000_phy_hw_reset+0x488>
   1cc81:	eb e7                	jmp    1cc6a <e1000_phy_hw_reset+0x23e>
   1cc83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cc86: R_X86_64_32S	.rodata.str1.1+0xae
   1cc8a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cc8e:	e8 00 00 00 00       	callq  1cc93 <e1000_phy_hw_reset+0x267>
			1cc8f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cc93:	8b 43 08             	mov    0x8(%rbx),%eax
   1cc96:	a8 04                	test   $0x4,%al
   1cc98:	41 be 00 00 08 00    	mov    $0x80000,%r14d
   1cc9e:	75 06                	jne    1cca6 <e1000_phy_hw_reset+0x27a>
   1cca0:	41 be 00 00 04 00    	mov    $0x40000,%r14d
   1cca6:	41 bc 64 00 00 00    	mov    $0x64,%r12d
   1ccac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ccaf: R_X86_64_32S	.rodata.str1.1+0xae
   1ccb3:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1ccb7:	e8 00 00 00 00       	callq  1ccbc <e1000_phy_hw_reset+0x290>
			1ccb8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ccbc:	8b 83 10 10 00 00    	mov    0x1010(%rbx),%eax
   1ccc2:	41 85 c6             	test   %eax,%r14d
   1ccc5:	0f 85 e9 01 00 00    	jne    1ceb4 <e1000_phy_hw_reset+0x488>
   1cccb:	bf 01 00 00 00       	mov    $0x1,%edi
   1ccd0:	e8 7b ae fe ff       	callq  7b50 <msleep>
   1ccd5:	41 ff cc             	dec    %r12d
   1ccd8:	75 d2                	jne    1ccac <e1000_phy_hw_reset+0x280>
   1ccda:	c7 45 c4 f7 ff ff ff 	movl   $0xfffffff7,0xffffffffffffffc4(%rbp)
   1cce1:	e9 ea 01 00 00       	jmpq   1ced0 <e1000_phy_hw_reset+0x4a4>
   1cce6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cce9: R_X86_64_32S	.rodata.str1.1+0xae
   1cced:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1ccf1:	e8 00 00 00 00       	callq  1ccf6 <e1000_phy_hw_reset+0x2ca>
			1ccf2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ccf6:	44 8b a3 50 5b 00 00 	mov    0x5b50(%rbx),%r12d
   1ccfd:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cd01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cd04: R_X86_64_32S	.rodata.str1.1+0xb4
   1cd08:	41 83 e4 fe          	and    $0xfffffffffffffffe,%r12d
   1cd0c:	e8 00 00 00 00       	callq  1cd11 <e1000_phy_hw_reset+0x2e5>
			1cd0d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cd11:	48 81 c3 50 5b 00 00 	add    $0x5b50,%rbx
   1cd18:	44 89 23             	mov    %r12d,(%rbx)
   1cd1b:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
   1cd20:	0f 85 aa 01 00 00    	jne    1ced0 <e1000_phy_hw_reset+0x4a4>
   1cd26:	41 83 7d 14 04       	cmpl   $0x4,0x14(%r13)
   1cd2b:	0f 85 9f 01 00 00    	jne    1ced0 <e1000_phy_hw_reset+0x4a4>
   1cd31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cd34: R_X86_64_32S	.rodata.str1.1+0x2392
   1cd38:	e8 00 00 00 00       	callq  1cd3d <e1000_phy_hw_reset+0x311>
			1cd39: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cd3d:	41 83 7d 14 04       	cmpl   $0x4,0x14(%r13)
   1cd42:	0f 85 88 01 00 00    	jne    1ced0 <e1000_phy_hw_reset+0x4a4>
   1cd48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cd4b: R_X86_64_32S	.rodata.str1.1+0xae
   1cd4f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cd53:	e8 00 00 00 00       	callq  1cd58 <e1000_phy_hw_reset+0x32c>
			1cd54: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cd58:	8b 43 28             	mov    0x28(%rbx),%eax
   1cd5b:	a8 01                	test   $0x1,%al
   1cd5d:	0f 84 6d 01 00 00    	je     1ced0 <e1000_phy_hw_reset+0x4a4>
   1cd63:	45 31 e4             	xor    %r12d,%r12d
   1cd66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cd69: R_X86_64_32S	.rodata.str1.1+0xae
   1cd6d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cd71:	e8 00 00 00 00       	callq  1cd76 <e1000_phy_hw_reset+0x34a>
			1cd72: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cd76:	8b 5b 08             	mov    0x8(%rbx),%ebx
   1cd79:	bf bc 8d 06 00       	mov    $0x68dbc,%edi
   1cd7e:	e8 d9 7b fe ff       	callq  495c <__const_udelay>
   1cd83:	80 e7 02             	and    $0x2,%bh
   1cd86:	75 09                	jne    1cd91 <e1000_phy_hw_reset+0x365>
   1cd88:	41 ff c4             	inc    %r12d
   1cd8b:	41 83 fc 32          	cmp    $0x32,%r12d
   1cd8f:	75 d5                	jne    1cd66 <e1000_phy_hw_reset+0x33a>
   1cd91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cd94: R_X86_64_32S	.rodata.str1.1+0xae
   1cd98:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cd9c:	e8 00 00 00 00       	callq  1cda1 <e1000_phy_hw_reset+0x375>
			1cd9d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cda1:	44 8b 63 08          	mov    0x8(%rbx),%r12d
   1cda5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cda9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cdac: R_X86_64_32S	.rodata.str1.1+0xb4
   1cdb0:	41 81 e4 ff fd ff ff 	and    $0xfffffdff,%r12d
   1cdb7:	e8 00 00 00 00       	callq  1cdbc <e1000_phy_hw_reset+0x390>
			1cdb8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cdbc:	48 83 c3 08          	add    $0x8,%rbx
   1cdc0:	44 89 23             	mov    %r12d,(%rbx)
   1cdc3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cdc6: R_X86_64_32S	.rodata.str1.1+0xae
   1cdca:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cdce:	e8 00 00 00 00       	callq  1cdd3 <e1000_phy_hw_reset+0x3a7>
			1cdcf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cdd3:	8b 83 00 0f 00 00    	mov    0xf00(%rbx),%eax
   1cdd9:	a8 01                	test   $0x1,%al
   1cddb:	0f 85 ef 00 00 00    	jne    1ced0 <e1000_phy_hw_reset+0x4a4>
   1cde1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cde4: R_X86_64_32S	.rodata.str1.1+0xae
   1cde8:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cdec:	e8 00 00 00 00       	callq  1cdf1 <e1000_phy_hw_reset+0x3c5>
			1cded: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cdf1:	8b 83 08 0f 00 00    	mov    0xf08(%rbx),%eax
   1cdf7:	25 00 00 ff 00       	and    $0xff0000,%eax
   1cdfc:	41 89 c7             	mov    %eax,%r15d
   1cdff:	41 c1 ef 10          	shr    $0x10,%r15d
   1ce03:	0f 84 c7 00 00 00    	je     1ced0 <e1000_phy_hw_reset+0x4a4>
   1ce09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ce0c: R_X86_64_32S	.rodata.str1.1+0xae
   1ce10:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1ce14:	e8 00 00 00 00       	callq  1ce19 <e1000_phy_hw_reset+0x3ed>
			1ce15: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ce19:	8b 9b 00 0f 00 00    	mov    0xf00(%rbx),%ebx
   1ce1f:	c1 eb 0f             	shr    $0xf,%ebx
   1ce22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ce25: R_X86_64_32S	.rodata.str1.1+0x23aa
   1ce29:	45 31 e4             	xor    %r12d,%r12d
   1ce2c:	66 81 e3 fe 1f       	and    $0x1ffe,%bx
   1ce31:	45 31 f6             	xor    %r14d,%r14d
   1ce34:	e8 00 00 00 00       	callq  1ce39 <e1000_phy_hw_reset+0x40d>
			1ce35: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ce39:	41 0f b7 c6          	movzwl %r14w,%eax
   1ce3d:	44 39 f8             	cmp    %r15d,%eax
   1ce40:	73 66                	jae    1cea8 <e1000_phy_hw_reset+0x47c>
   1ce42:	44 8d 24 43          	lea    (%rbx,%rax,2),%r12d
   1ce46:	48 8d 4d d6          	lea    0xffffffffffffffd6(%rbp),%rcx
   1ce4a:	ba 01 00 00 00       	mov    $0x1,%edx
   1ce4f:	4c 89 ef             	mov    %r13,%rdi
   1ce52:	41 0f b7 f4          	movzwl %r12w,%esi
   1ce56:	e8 b4 f8 ff ff       	callq  1c70f <e1000_read_eeprom>
   1ce5b:	85 c0                	test   %eax,%eax
   1ce5d:	75 4c                	jne    1ceab <e1000_phy_hw_reset+0x47f>
   1ce5f:	41 8d 74 24 01       	lea    0x1(%r12),%esi
   1ce64:	48 8d 4d d4          	lea    0xffffffffffffffd4(%rbp),%rcx
   1ce68:	ba 01 00 00 00       	mov    $0x1,%edx
   1ce6d:	4c 89 ef             	mov    %r13,%rdi
   1ce70:	0f b7 f6             	movzwl %si,%esi
   1ce73:	e8 97 f8 ff ff       	callq  1c70f <e1000_read_eeprom>
   1ce78:	85 c0                	test   %eax,%eax
   1ce7a:	75 2f                	jne    1ceab <e1000_phy_hw_reset+0x47f>
   1ce7c:	4c 89 ef             	mov    %r13,%rdi
   1ce7f:	41 ff c6             	inc    %r14d
   1ce82:	e8 36 82 fe ff       	callq  50bd <e1000_get_software_flag>
   1ce87:	85 c0                	test   %eax,%eax
   1ce89:	75 20                	jne    1ceab <e1000_phy_hw_reset+0x47f>
   1ce8b:	0f b7 55 d6          	movzwl 0xffffffffffffffd6(%rbp),%edx
   1ce8f:	0f b7 75 d4          	movzwl 0xffffffffffffffd4(%rbp),%esi
   1ce93:	4c 89 ef             	mov    %r13,%rdi
   1ce96:	e8 11 8f fe ff       	callq  5dac <e1000_write_phy_reg_ex>
   1ce9b:	4c 89 ef             	mov    %r13,%rdi
   1ce9e:	41 89 c4             	mov    %eax,%r12d
   1cea1:	e8 0e 32 fe ff       	callq  b4 <e1000_release_software_flag>
   1cea6:	eb 91                	jmp    1ce39 <e1000_phy_hw_reset+0x40d>
   1cea8:	44 89 e0             	mov    %r12d,%eax
   1ceab:	85 c0                	test   %eax,%eax
   1cead:	74 21                	je     1ced0 <e1000_phy_hw_reset+0x4a4>
   1ceaf:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   1ceb2:	eb 1c                	jmp    1ced0 <e1000_phy_hw_reset+0x4a4>
   1ceb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ceb7: R_X86_64_32S	.rodata.str1.1+0x23d0
   1cebb:	e8 00 00 00 00       	callq  1cec0 <e1000_phy_hw_reset+0x494>
			1cebc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cec0:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
   1cec5:	0f 85 50 fe ff ff    	jne    1cd1b <e1000_phy_hw_reset+0x2ef>
   1cecb:	e9 16 fe ff ff       	jmpq   1cce6 <e1000_phy_hw_reset+0x2ba>
   1ced0:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
   1ced3:	48 83 c4 18          	add    $0x18,%rsp
   1ced7:	5b                   	pop    %rbx
   1ced8:	41 5c                	pop    %r12
   1ceda:	41 5d                	pop    %r13
   1cedc:	41 5e                	pop    %r14
   1cede:	41 5f                	pop    %r15
   1cee0:	c9                   	leaveq 
   1cee1:	c3                   	retq   

000000000001cee2 <e1000_get_speed_and_duplex>:
   1cee2:	55                   	push   %rbp
   1cee3:	48 89 e5             	mov    %rsp,%rbp
   1cee6:	41 57                	push   %r15
   1cee8:	41 56                	push   %r14
   1ceea:	49 89 f6             	mov    %rsi,%r14
   1ceed:	41 55                	push   %r13
   1ceef:	49 89 fd             	mov    %rdi,%r13
   1cef2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cef5: R_X86_64_32S	.rodata.str1.1+0x23f1
   1cef9:	41 54                	push   %r12
   1cefb:	49 89 d4             	mov    %rdx,%r12
   1cefe:	53                   	push   %rbx
   1ceff:	48 83 ec 18          	sub    $0x18,%rsp
   1cf03:	e8 00 00 00 00       	callq  1cf08 <e1000_get_speed_and_duplex+0x26>
			1cf04: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cf08:	41 83 7d 10 02       	cmpl   $0x2,0x10(%r13)
   1cf0d:	76 45                	jbe    1cf54 <e1000_get_speed_and_duplex+0x72>
   1cf0f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cf12: R_X86_64_32S	.rodata.str1.1+0xae
   1cf16:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1cf1a:	e8 00 00 00 00       	callq  1cf1f <e1000_get_speed_and_duplex+0x3d>
			1cf1b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cf1f:	8b 53 08             	mov    0x8(%rbx),%edx
   1cf22:	84 d2                	test   %dl,%dl
   1cf24:	79 08                	jns    1cf2e <e1000_get_speed_and_duplex+0x4c>
   1cf26:	66 41 c7 06 e8 03    	movw   $0x3e8,(%r14)
   1cf2c:	eb 14                	jmp    1cf42 <e1000_get_speed_and_duplex+0x60>
   1cf2e:	89 d0                	mov    %edx,%eax
   1cf30:	83 e0 40             	and    $0x40,%eax
   1cf33:	83 f8 01             	cmp    $0x1,%eax
   1cf36:	19 c0                	sbb    %eax,%eax
   1cf38:	83 e0 a6             	and    $0xffffffffffffffa6,%eax
   1cf3b:	83 c0 64             	add    $0x64,%eax
   1cf3e:	66 41 89 06          	mov    %ax,(%r14)
   1cf42:	83 e2 01             	and    $0x1,%edx
   1cf45:	83 fa 01             	cmp    $0x1,%edx
   1cf48:	19 c0                	sbb    %eax,%eax
   1cf4a:	83 c0 02             	add    $0x2,%eax
   1cf4d:	66 41 89 04 24       	mov    %ax,(%r12)
   1cf52:	eb 0d                	jmp    1cf61 <e1000_get_speed_and_duplex+0x7f>
   1cf54:	66 41 c7 06 e8 03    	movw   $0x3e8,(%r14)
   1cf5a:	66 41 c7 04 24 02 00 	movw   $0x2,(%r12)
   1cf61:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1cf66:	75 65                	jne    1cfcd <e1000_get_speed_and_duplex+0xeb>
   1cf68:	41 80 bd 01 01 00 00 	cmpb   $0x0,0x101(%r13)
   1cf6f:	00 
   1cf70:	74 5b                	je     1cfcd <e1000_get_speed_and_duplex+0xeb>
   1cf72:	48 8d 5d d6          	lea    0xffffffffffffffd6(%rbp),%rbx
   1cf76:	be 06 00 00 00       	mov    $0x6,%esi
   1cf7b:	4c 89 ef             	mov    %r13,%rdi
   1cf7e:	48 89 da             	mov    %rbx,%rdx
   1cf81:	e8 53 91 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1cf86:	85 c0                	test   %eax,%eax
   1cf88:	0f 85 91 02 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1cf8e:	f6 45 d6 01          	testb  $0x1,0xffffffffffffffd6(%rbp)
   1cf92:	74 32                	je     1cfc6 <e1000_get_speed_and_duplex+0xe4>
   1cf94:	48 89 da             	mov    %rbx,%rdx
   1cf97:	be 05 00 00 00       	mov    $0x5,%esi
   1cf9c:	4c 89 ef             	mov    %r13,%rdi
   1cf9f:	e8 35 91 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1cfa4:	85 c0                	test   %eax,%eax
   1cfa6:	0f 85 73 02 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1cfac:	66 41 83 3e 64       	cmpw   $0x64,(%r14)
   1cfb1:	75 06                	jne    1cfb9 <e1000_get_speed_and_duplex+0xd7>
   1cfb3:	f6 45 d7 01          	testb  $0x1,0xffffffffffffffd7(%rbp)
   1cfb7:	74 0d                	je     1cfc6 <e1000_get_speed_and_duplex+0xe4>
   1cfb9:	66 41 83 3e 0a       	cmpw   $0xa,(%r14)
   1cfbe:	75 0d                	jne    1cfcd <e1000_get_speed_and_duplex+0xeb>
   1cfc0:	f6 45 d6 40          	testb  $0x40,0xffffffffffffffd6(%rbp)
   1cfc4:	75 07                	jne    1cfcd <e1000_get_speed_and_duplex+0xeb>
   1cfc6:	66 41 c7 04 24 01 00 	movw   $0x1,(%r12)
   1cfcd:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
   1cfd2:	0f 85 5a 01 00 00    	jne    1d132 <e1000_get_speed_and_duplex+0x250>
   1cfd8:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   1cfdd:	0f 85 4f 01 00 00    	jne    1d132 <e1000_get_speed_and_duplex+0x250>
   1cfe3:	66 41 81 3e e8 03    	cmpw   $0x3e8,(%r14)
   1cfe9:	0f 85 90 00 00 00    	jne    1d07f <e1000_get_speed_and_duplex+0x19d>
   1cfef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cff2: R_X86_64_32S	.rodata.str1.1+0x240c
   1cff6:	e8 00 00 00 00       	callq  1cffb <e1000_get_speed_and_duplex+0x119>
			1cff7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1cffb:	31 d2                	xor    %edx,%edx
   1cffd:	be 10 00 00 00       	mov    $0x10,%esi
   1d002:	4c 89 ef             	mov    %r13,%rdi
   1d005:	66 c7 45 d4 00 00    	movw   $0x0,0xffffffffffffffd4(%rbp)
   1d00b:	e8 59 8b fe ff       	callq  5b69 <e1000_write_kmrn_reg>
   1d010:	85 c0                	test   %eax,%eax
   1d012:	0f 85 07 02 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d018:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d01b: R_X86_64_32S	.rodata.str1.1+0xae
   1d01f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d023:	e8 00 00 00 00       	callq  1d028 <e1000_get_speed_and_duplex+0x146>
			1d024: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d028:	44 8b a3 10 04 00 00 	mov    0x410(%rbx),%r12d
   1d02f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d033:	41 81 e4 00 fc ff ff 	and    $0xfffffc00,%r12d
   1d03a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d03d: R_X86_64_32S	.rodata.str1.1+0xb4
   1d041:	41 83 cc 08          	or     $0x8,%r12d
   1d045:	e8 00 00 00 00       	callq  1d04a <e1000_get_speed_and_duplex+0x168>
			1d046: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d04a:	48 81 c3 10 04 00 00 	add    $0x410,%rbx
   1d051:	44 89 23             	mov    %r12d,(%rbx)
   1d054:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   1d058:	be 30 18 00 00       	mov    $0x1830,%esi
   1d05d:	4c 89 ef             	mov    %r13,%rdi
   1d060:	e8 74 90 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d065:	85 c0                	test   %eax,%eax
   1d067:	0f 85 b2 01 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d06d:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   1d070:	80 e6 f7             	and    $0xf7,%dh
   1d073:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   1d077:	0f b7 d2             	movzwl %dx,%edx
   1d07a:	e9 9e 00 00 00       	jmpq   1d11d <e1000_get_speed_and_duplex+0x23b>
   1d07f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d082: R_X86_64_32S	.rodata.str1.1+0x242a
   1d086:	66 45 8b 3c 24       	mov    (%r12),%r15w
   1d08b:	e8 00 00 00 00       	callq  1d090 <e1000_get_speed_and_duplex+0x1ae>
			1d08c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d090:	ba 04 00 00 00       	mov    $0x4,%edx
   1d095:	be 10 00 00 00       	mov    $0x10,%esi
   1d09a:	4c 89 ef             	mov    %r13,%rdi
   1d09d:	66 c7 45 d4 04 00    	movw   $0x4,0xffffffffffffffd4(%rbp)
   1d0a3:	e8 c1 8a fe ff       	callq  5b69 <e1000_write_kmrn_reg>
   1d0a8:	85 c0                	test   %eax,%eax
   1d0aa:	0f 85 6f 01 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d0b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d0b3: R_X86_64_32S	.rodata.str1.1+0xae
   1d0b7:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d0bb:	e8 00 00 00 00       	callq  1d0c0 <e1000_get_speed_and_duplex+0x1de>
			1d0bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d0c0:	44 8b a3 10 04 00 00 	mov    0x410(%rbx),%r12d
   1d0c7:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d0cb:	41 81 e4 00 fc ff ff 	and    $0xfffffc00,%r12d
   1d0d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d0d5: R_X86_64_32S	.rodata.str1.1+0xb4
   1d0d9:	41 83 cc 09          	or     $0x9,%r12d
   1d0dd:	e8 00 00 00 00       	callq  1d0e2 <e1000_get_speed_and_duplex+0x200>
			1d0de: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d0e2:	48 81 c3 10 04 00 00 	add    $0x410,%rbx
   1d0e9:	44 89 23             	mov    %r12d,(%rbx)
   1d0ec:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   1d0f0:	be 30 18 00 00       	mov    $0x1830,%esi
   1d0f5:	4c 89 ef             	mov    %r13,%rdi
   1d0f8:	e8 dc 8f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d0fd:	85 c0                	test   %eax,%eax
   1d0ff:	0f 85 1a 01 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d105:	66 41 ff cf          	dec    %r15w
   1d109:	75 08                	jne    1d113 <e1000_get_speed_and_duplex+0x231>
   1d10b:	66 81 4d d4 00 08    	orw    $0x800,0xffffffffffffffd4(%rbp)
   1d111:	eb 06                	jmp    1d119 <e1000_get_speed_and_duplex+0x237>
   1d113:	66 81 65 d4 ff f7    	andw   $0xf7ff,0xffffffffffffffd4(%rbp)
   1d119:	0f b7 55 d4          	movzwl 0xffffffffffffffd4(%rbp),%edx
   1d11d:	be 30 18 00 00       	mov    $0x1830,%esi
   1d122:	4c 89 ef             	mov    %r13,%rdi
   1d125:	e8 5d 8d fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d12a:	85 c0                	test   %eax,%eax
   1d12c:	0f 85 ed 00 00 00    	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d132:	41 83 7d 14 04       	cmpl   $0x4,0x14(%r13)
   1d137:	0f 85 e0 00 00 00    	jne    1d21d <e1000_get_speed_and_duplex+0x33b>
   1d13d:	66 41 81 3e e8 03    	cmpw   $0x3e8,(%r14)
   1d143:	0f 85 d4 00 00 00    	jne    1d21d <e1000_get_speed_and_duplex+0x33b>
   1d149:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d14c: R_X86_64_32S	.rodata.str1.1+0x244a
   1d150:	e8 00 00 00 00       	callq  1d155 <e1000_get_speed_and_duplex+0x273>
			1d151: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d155:	41 80 bd 1b 01 00 00 	cmpb   $0x0,0x11b(%r13)
   1d15c:	00 
   1d15d:	0f 85 ba 00 00 00    	jne    1d21d <e1000_get_speed_and_duplex+0x33b>
   1d163:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   1d167:	be 01 00 00 00       	mov    $0x1,%esi
   1d16c:	4c 89 ef             	mov    %r13,%rdi
   1d16f:	48 89 da             	mov    %rbx,%rdx
   1d172:	e8 62 8f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d177:	48 89 da             	mov    %rbx,%rdx
   1d17a:	be 01 00 00 00       	mov    $0x1,%esi
   1d17f:	4c 89 ef             	mov    %r13,%rdi
   1d182:	e8 52 8f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d187:	f6 45 d4 04          	testb  $0x4,0xffffffffffffffd4(%rbp)
   1d18b:	0f 84 8c 00 00 00    	je     1d21d <e1000_get_speed_and_duplex+0x33b>
   1d191:	45 31 e4             	xor    %r12d,%r12d
   1d194:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   1d198:	be 53 60 00 00       	mov    $0x6053,%esi
   1d19d:	4c 89 ef             	mov    %r13,%rdi
   1d1a0:	48 89 da             	mov    %rbx,%rdx
   1d1a3:	e8 31 8f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d1a8:	85 c0                	test   %eax,%eax
   1d1aa:	75 73                	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d1ac:	48 89 da             	mov    %rbx,%rdx
   1d1af:	be 53 60 00 00       	mov    $0x6053,%esi
   1d1b4:	4c 89 ef             	mov    %r13,%rdi
   1d1b7:	e8 1d 8f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d1bc:	85 c0                	test   %eax,%eax
   1d1be:	75 5f                	jne    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d1c0:	f6 45 d4 02          	testb  $0x2,0xffffffffffffffd4(%rbp)
   1d1c4:	74 59                	je     1d21f <e1000_get_speed_and_duplex+0x33d>
   1d1c6:	4c 89 ef             	mov    %r13,%rdi
   1d1c9:	41 ff c4             	inc    %r12d
   1d1cc:	e8 5b f8 ff ff       	callq  1ca2c <e1000_phy_hw_reset>
   1d1d1:	bf b8 ae 47 01       	mov    $0x147aeb8,%edi
   1d1d6:	e8 81 77 fe ff       	callq  495c <__const_udelay>
   1d1db:	41 83 fc 0a          	cmp    $0xa,%r12d
   1d1df:	75 b3                	jne    1d194 <e1000_get_speed_and_duplex+0x2b2>
   1d1e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d1e4: R_X86_64_32S	.rodata.str1.1+0xae
   1d1e8:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d1ec:	e8 00 00 00 00       	callq  1d1f1 <e1000_get_speed_and_duplex+0x30f>
			1d1ed: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d1f1:	44 8b a3 10 0f 00 00 	mov    0xf10(%rbx),%r12d
   1d1f8:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d1fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d1ff: R_X86_64_32S	.rodata.str1.1+0xb4
   1d203:	41 83 cc 48          	or     $0x48,%r12d
   1d207:	e8 00 00 00 00       	callq  1d20c <e1000_get_speed_and_duplex+0x32a>
			1d208: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d20c:	48 81 c3 10 0f 00 00 	add    $0xf10,%rbx
   1d213:	44 89 23             	mov    %r12d,(%rbx)
   1d216:	b8 02 00 00 00       	mov    $0x2,%eax
   1d21b:	eb 02                	jmp    1d21f <e1000_get_speed_and_duplex+0x33d>
   1d21d:	31 c0                	xor    %eax,%eax
   1d21f:	48 83 c4 18          	add    $0x18,%rsp
   1d223:	5b                   	pop    %rbx
   1d224:	41 5c                	pop    %r12
   1d226:	41 5d                	pop    %r13
   1d228:	41 5e                	pop    %r14
   1d22a:	41 5f                	pop    %r15
   1d22c:	c9                   	leaveq 
   1d22d:	c3                   	retq   

000000000001d22e <e1000_config_dsp_after_link_change>:
   1d22e:	55                   	push   %rbp
   1d22f:	48 89 e5             	mov    %rsp,%rbp
   1d232:	41 57                	push   %r15
   1d234:	41 56                	push   %r14
   1d236:	41 55                	push   %r13
   1d238:	41 54                	push   %r12
   1d23a:	49 89 fc             	mov    %rdi,%r12
   1d23d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d240: R_X86_64_32S	.rodata.str1.1+0x246d
   1d244:	53                   	push   %rbx
   1d245:	40 88 f3             	mov    %sil,%bl
   1d248:	48 83 ec 28          	sub    $0x28,%rsp
   1d24c:	e8 00 00 00 00       	callq  1d251 <e1000_config_dsp_after_link_change+0x23>
			1d24d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d251:	41 83 7c 24 14 01    	cmpl   $0x1,0x14(%r12)
   1d257:	0f 85 77 03 00 00    	jne    1d5d4 <e1000_config_dsp_after_link_change+0x3a6>
   1d25d:	84 db                	test   %bl,%bl
   1d25f:	66 c7 45 b0 71 11    	movw   $0x1171,0xffffffffffffffb0(%rbp)
   1d265:	66 c7 45 b2 71 12    	movw   $0x1271,0xffffffffffffffb2(%rbp)
   1d26b:	66 c7 45 b4 71 14    	movw   $0x1471,0xffffffffffffffb4(%rbp)
   1d271:	66 c7 45 b6 71 18    	movw   $0x1871,0xffffffffffffffb6(%rbp)
   1d277:	0f 84 39 01 00 00    	je     1d3b6 <e1000_config_dsp_after_link_change+0x188>
   1d27d:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   1d281:	48 8d 75 ca          	lea    0xffffffffffffffca(%rbp),%rsi
   1d285:	4c 89 e7             	mov    %r12,%rdi
   1d288:	e8 55 fc ff ff       	callq  1cee2 <e1000_get_speed_and_duplex>
   1d28d:	85 c0                	test   %eax,%eax
   1d28f:	89 c3                	mov    %eax,%ebx
   1d291:	0f 85 3f 03 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d297:	66 81 7d ca e8 03    	cmpw   $0x3e8,0xffffffffffffffca(%rbp)
   1d29d:	0f 85 33 03 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d2a3:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   1d2a7:	48 8d 75 c6          	lea    0xffffffffffffffc6(%rbp),%rsi
   1d2ab:	4c 89 e7             	mov    %r12,%rdi
   1d2ae:	e8 f7 93 fe ff       	callq  66aa <e1000_get_cable_length>
   1d2b3:	85 c0                	test   %eax,%eax
   1d2b5:	89 c3                	mov    %eax,%ebx
   1d2b7:	0f 85 19 03 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d2bd:	41 83 bc 24 08 01 00 	cmpl   $0x1,0x108(%r12)
   1d2c4:	00 01 
   1d2c6:	75 5f                	jne    1d327 <e1000_config_dsp_after_link_change+0xf9>
   1d2c8:	66 83 7d c6 31       	cmpw   $0x31,0xffffffffffffffc6(%rbp)
   1d2cd:	76 58                	jbe    1d327 <e1000_config_dsp_after_link_change+0xf9>
   1d2cf:	45 31 f6             	xor    %r14d,%r14d
   1d2d2:	46 0f b7 6c 75 b0    	movzwl 0xffffffffffffffb0(%rbp,%r14,2),%r13d
   1d2d8:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
   1d2dc:	4c 89 e7             	mov    %r12,%rdi
   1d2df:	44 89 ee             	mov    %r13d,%esi
   1d2e2:	e8 f2 8d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d2e7:	85 c0                	test   %eax,%eax
   1d2e9:	0f 85 e1 02 00 00    	jne    1d5d0 <e1000_config_dsp_after_link_change+0x3a2>
   1d2ef:	66 8b 55 ce          	mov    0xffffffffffffffce(%rbp),%dx
   1d2f3:	44 89 ee             	mov    %r13d,%esi
   1d2f6:	4c 89 e7             	mov    %r12,%rdi
   1d2f9:	66 81 e2 ff 3f       	and    $0x3fff,%dx
   1d2fe:	66 89 55 ce          	mov    %dx,0xffffffffffffffce(%rbp)
   1d302:	0f b7 d2             	movzwl %dx,%edx
   1d305:	e8 7d 8b fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d30a:	85 c0                	test   %eax,%eax
   1d30c:	0f 85 be 02 00 00    	jne    1d5d0 <e1000_config_dsp_after_link_change+0x3a2>
   1d312:	49 ff c6             	inc    %r14
   1d315:	49 83 fe 04          	cmp    $0x4,%r14
   1d319:	75 b7                	jne    1d2d2 <e1000_config_dsp_after_link_change+0xa4>
   1d31b:	41 c7 84 24 08 01 00 	movl   $0x2,0x108(%r12)
   1d322:	00 02 00 00 00 
   1d327:	41 83 7c 24 60 00    	cmpl   $0x0,0x60(%r12)
   1d32d:	0f 85 a3 02 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d333:	66 83 7d c6 31       	cmpw   $0x31,0xffffffffffffffc6(%rbp)
   1d338:	0f 87 98 02 00 00    	ja     1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d33e:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
   1d342:	be 0a 00 00 00       	mov    $0xa,%esi
   1d347:	4c 89 e7             	mov    %r12,%rdi
   1d34a:	e8 8a 8d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d34f:	85 c0                	test   %eax,%eax
   1d351:	89 c3                	mov    %eax,%ebx
   1d353:	0f 85 7d 02 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d359:	45 31 ff             	xor    %r15d,%r15d
   1d35c:	41 be 14 00 00 00    	mov    $0x14,%r14d
   1d362:	45 31 ed             	xor    %r13d,%r13d
   1d365:	bf 58 89 41 00       	mov    $0x418958,%edi
   1d36a:	e8 ed 75 fe ff       	callq  495c <__const_udelay>
   1d36f:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
   1d373:	be 0a 00 00 00       	mov    $0xa,%esi
   1d378:	4c 89 e7             	mov    %r12,%rdi
   1d37b:	e8 59 8d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d380:	85 c0                	test   %eax,%eax
   1d382:	89 c3                	mov    %eax,%ebx
   1d384:	0f 85 4c 02 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d38a:	0f b6 45 ce          	movzbl 0xffffffffffffffce(%rbp),%eax
   1d38e:	41 01 c5             	add    %eax,%r13d
   1d391:	41 83 fd 05          	cmp    $0x5,%r13d
   1d395:	0f 87 1a 02 00 00    	ja     1d5b5 <e1000_config_dsp_after_link_change+0x387>
   1d39b:	45 85 ed             	test   %r13d,%r13d
   1d39e:	b8 64 00 00 00       	mov    $0x64,%eax
   1d3a3:	44 0f 45 f0          	cmovne %eax,%r14d
   1d3a7:	41 ff c7             	inc    %r15d
   1d3aa:	66 45 39 f7          	cmp    %r14w,%r15w
   1d3ae:	0f 83 22 02 00 00    	jae    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d3b4:	eb af                	jmp    1d365 <e1000_config_dsp_after_link_change+0x137>
   1d3b6:	41 83 bc 24 08 01 00 	cmpl   $0x2,0x108(%r12)
   1d3bd:	00 02 
   1d3bf:	0f 85 15 01 00 00    	jne    1d4da <e1000_config_dsp_after_link_change+0x2ac>
   1d3c5:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   1d3c9:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
   1d3ce:	4c 89 e7             	mov    %r12,%rdi
   1d3d1:	e8 03 8d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d3d6:	85 c0                	test   %eax,%eax
   1d3d8:	89 c3                	mov    %eax,%ebx
   1d3da:	0f 85 f6 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d3e0:	ba 03 00 00 00       	mov    $0x3,%edx
   1d3e5:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
   1d3ea:	4c 89 e7             	mov    %r12,%rdi
   1d3ed:	e8 95 8a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d3f2:	85 c0                	test   %eax,%eax
   1d3f4:	89 c3                	mov    %eax,%ebx
   1d3f6:	0f 85 da 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d3fc:	bb 13 00 00 00       	mov    $0x13,%ebx
   1d401:	bf 58 89 41 00       	mov    $0x418958,%edi
   1d406:	48 ff cb             	dec    %rbx
   1d409:	e8 4e 75 fe ff       	callq  495c <__const_udelay>
   1d40e:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1d412:	75 ed                	jne    1d401 <e1000_config_dsp_after_link_change+0x1d3>
   1d414:	31 f6                	xor    %esi,%esi
   1d416:	ba 40 01 00 00       	mov    $0x140,%edx
   1d41b:	4c 89 e7             	mov    %r12,%rdi
   1d41e:	e8 64 8a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d423:	85 c0                	test   %eax,%eax
   1d425:	89 c3                	mov    %eax,%ebx
   1d427:	0f 85 a9 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d42d:	45 31 ed             	xor    %r13d,%r13d
   1d430:	46 0f b7 74 6d b0    	movzwl 0xffffffffffffffb0(%rbp,%r13,2),%r14d
   1d436:	48 8d 55 ce          	lea    0xffffffffffffffce(%rbp),%rdx
   1d43a:	4c 89 e7             	mov    %r12,%rdi
   1d43d:	44 89 f6             	mov    %r14d,%esi
   1d440:	e8 94 8c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d445:	85 c0                	test   %eax,%eax
   1d447:	89 c3                	mov    %eax,%ebx
   1d449:	0f 85 87 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d44f:	66 8b 55 ce          	mov    0xffffffffffffffce(%rbp),%dx
   1d453:	44 89 f6             	mov    %r14d,%esi
   1d456:	4c 89 e7             	mov    %r12,%rdi
   1d459:	66 81 e2 ff 3f       	and    $0x3fff,%dx
   1d45e:	66 81 ca 00 80       	or     $0x8000,%dx
   1d463:	66 89 55 ce          	mov    %dx,0xffffffffffffffce(%rbp)
   1d467:	0f b7 d2             	movzwl %dx,%edx
   1d46a:	e8 18 8a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d46f:	85 c0                	test   %eax,%eax
   1d471:	89 c3                	mov    %eax,%ebx
   1d473:	0f 85 5d 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d479:	49 ff c5             	inc    %r13
   1d47c:	49 83 fd 04          	cmp    $0x4,%r13
   1d480:	75 ae                	jne    1d430 <e1000_config_dsp_after_link_change+0x202>
   1d482:	31 f6                	xor    %esi,%esi
   1d484:	ba 00 33 00 00       	mov    $0x3300,%edx
   1d489:	4c 89 e7             	mov    %r12,%rdi
   1d48c:	e8 f6 89 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d491:	85 c0                	test   %eax,%eax
   1d493:	89 c3                	mov    %eax,%ebx
   1d495:	0f 85 3b 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d49b:	bb 13 00 00 00       	mov    $0x13,%ebx
   1d4a0:	bf 58 89 41 00       	mov    $0x418958,%edi
   1d4a5:	48 ff cb             	dec    %rbx
   1d4a8:	e8 af 74 fe ff       	callq  495c <__const_udelay>
   1d4ad:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1d4b1:	75 ed                	jne    1d4a0 <e1000_config_dsp_after_link_change+0x272>
   1d4b3:	0f b7 55 cc          	movzwl 0xffffffffffffffcc(%rbp),%edx
   1d4b7:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
   1d4bc:	4c 89 e7             	mov    %r12,%rdi
   1d4bf:	e8 c3 89 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d4c4:	85 c0                	test   %eax,%eax
   1d4c6:	89 c3                	mov    %eax,%ebx
   1d4c8:	0f 85 08 01 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d4ce:	41 c7 84 24 08 01 00 	movl   $0x1,0x108(%r12)
   1d4d5:	00 01 00 00 00 
   1d4da:	41 83 7c 24 60 01    	cmpl   $0x1,0x60(%r12)
   1d4e0:	0f 85 ee 00 00 00    	jne    1d5d4 <e1000_config_dsp_after_link_change+0x3a6>
   1d4e6:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   1d4ea:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
   1d4ef:	4c 89 e7             	mov    %r12,%rdi
   1d4f2:	e8 e2 8b fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d4f7:	85 c0                	test   %eax,%eax
   1d4f9:	89 c3                	mov    %eax,%ebx
   1d4fb:	0f 85 d5 00 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d501:	ba 03 00 00 00       	mov    $0x3,%edx
   1d506:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
   1d50b:	4c 89 e7             	mov    %r12,%rdi
   1d50e:	e8 74 89 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d513:	85 c0                	test   %eax,%eax
   1d515:	89 c3                	mov    %eax,%ebx
   1d517:	0f 85 b9 00 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d51d:	bb 13 00 00 00       	mov    $0x13,%ebx
   1d522:	bf 58 89 41 00       	mov    $0x418958,%edi
   1d527:	48 ff cb             	dec    %rbx
   1d52a:	e8 2d 74 fe ff       	callq  495c <__const_udelay>
   1d52f:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1d533:	75 ed                	jne    1d522 <e1000_config_dsp_after_link_change+0x2f4>
   1d535:	31 f6                	xor    %esi,%esi
   1d537:	ba 40 01 00 00       	mov    $0x140,%edx
   1d53c:	4c 89 e7             	mov    %r12,%rdi
   1d53f:	e8 43 89 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d544:	85 c0                	test   %eax,%eax
   1d546:	89 c3                	mov    %eax,%ebx
   1d548:	0f 85 88 00 00 00    	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d54e:	ba 2a 00 00 00       	mov    $0x2a,%edx
   1d553:	be 35 1f 00 00       	mov    $0x1f35,%esi
   1d558:	4c 89 e7             	mov    %r12,%rdi
   1d55b:	e8 27 89 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d560:	85 c0                	test   %eax,%eax
   1d562:	89 c3                	mov    %eax,%ebx
   1d564:	75 70                	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d566:	31 f6                	xor    %esi,%esi
   1d568:	ba 00 33 00 00       	mov    $0x3300,%edx
   1d56d:	4c 89 e7             	mov    %r12,%rdi
   1d570:	e8 12 89 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d575:	85 c0                	test   %eax,%eax
   1d577:	89 c3                	mov    %eax,%ebx
   1d579:	75 5b                	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d57b:	bb 13 00 00 00       	mov    $0x13,%ebx
   1d580:	bf 58 89 41 00       	mov    $0x418958,%edi
   1d585:	48 ff cb             	dec    %rbx
   1d588:	e8 cf 73 fe ff       	callq  495c <__const_udelay>
   1d58d:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   1d591:	75 ed                	jne    1d580 <e1000_config_dsp_after_link_change+0x352>
   1d593:	0f b7 55 cc          	movzwl 0xffffffffffffffcc(%rbp),%edx
   1d597:	be 5b 2f 00 00       	mov    $0x2f5b,%esi
   1d59c:	4c 89 e7             	mov    %r12,%rdi
   1d59f:	e8 e3 88 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d5a4:	85 c0                	test   %eax,%eax
   1d5a6:	89 c3                	mov    %eax,%ebx
   1d5a8:	75 2c                	jne    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d5aa:	41 c7 44 24 60 00 00 	movl   $0x0,0x60(%r12)
   1d5b1:	00 00 
   1d5b3:	eb 21                	jmp    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d5b5:	41 c7 44 24 60 01 00 	movl   $0x1,0x60(%r12)
   1d5bc:	00 00 
   1d5be:	ba 69 00 00 00       	mov    $0x69,%edx
   1d5c3:	be 35 1f 00 00       	mov    $0x1f35,%esi
   1d5c8:	4c 89 e7             	mov    %r12,%rdi
   1d5cb:	e8 b7 88 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1d5d0:	89 c3                	mov    %eax,%ebx
   1d5d2:	eb 02                	jmp    1d5d6 <e1000_config_dsp_after_link_change+0x3a8>
   1d5d4:	31 db                	xor    %ebx,%ebx
   1d5d6:	48 83 c4 28          	add    $0x28,%rsp
   1d5da:	89 d8                	mov    %ebx,%eax
   1d5dc:	5b                   	pop    %rbx
   1d5dd:	41 5c                	pop    %r12
   1d5df:	41 5d                	pop    %r13
   1d5e1:	41 5e                	pop    %r14
   1d5e3:	41 5f                	pop    %r15
   1d5e5:	c9                   	leaveq 
   1d5e6:	c3                   	retq   

000000000001d5e7 <e1000_config_fc_after_link_up>:
   1d5e7:	55                   	push   %rbp
   1d5e8:	48 89 e5             	mov    %rsp,%rbp
   1d5eb:	41 54                	push   %r12
   1d5ed:	53                   	push   %rbx
   1d5ee:	48 89 fb             	mov    %rdi,%rbx
   1d5f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d5f4: R_X86_64_32S	.rodata.str1.1+0x2490
   1d5f8:	48 83 ec 10          	sub    $0x10,%rsp
   1d5fc:	e8 00 00 00 00       	callq  1d601 <e1000_config_fc_after_link_up+0x1a>
			1d5fd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d601:	8b 43 1c             	mov    0x1c(%rbx),%eax
   1d604:	83 f8 01             	cmp    $0x1,%eax
   1d607:	74 05                	je     1d60e <e1000_config_fc_after_link_up+0x27>
   1d609:	83 f8 02             	cmp    $0x2,%eax
   1d60c:	75 0e                	jne    1d61c <e1000_config_fc_after_link_up+0x35>
   1d60e:	83 bb 94 00 00 00 00 	cmpl   $0x0,0x94(%rbx)
   1d615:	75 16                	jne    1d62d <e1000_config_fc_after_link_up+0x46>
   1d617:	e9 4e 01 00 00       	jmpq   1d76a <e1000_config_fc_after_link_up+0x183>
   1d61c:	85 c0                	test   %eax,%eax
   1d61e:	0f 85 46 01 00 00    	jne    1d76a <e1000_config_fc_after_link_up+0x183>
   1d624:	80 bb ef 00 00 00 00 	cmpb   $0x0,0xef(%rbx)
   1d62b:	75 27                	jne    1d654 <e1000_config_fc_after_link_up+0x6d>
   1d62d:	48 89 df             	mov    %rbx,%rdi
   1d630:	e8 db 2e fe ff       	callq  510 <e1000_force_mac_fc>
   1d635:	85 c0                	test   %eax,%eax
   1d637:	0f 85 2f 01 00 00    	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d63d:	83 7b 1c 00          	cmpl   $0x0,0x1c(%rbx)
   1d641:	0f 85 25 01 00 00    	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d647:	80 bb ef 00 00 00 00 	cmpb   $0x0,0xef(%rbx)
   1d64e:	0f 84 18 01 00 00    	je     1d76c <e1000_config_fc_after_link_up+0x185>
   1d654:	4c 8d 65 ee          	lea    0xffffffffffffffee(%rbp),%r12
   1d658:	be 01 00 00 00       	mov    $0x1,%esi
   1d65d:	48 89 df             	mov    %rbx,%rdi
   1d660:	4c 89 e2             	mov    %r12,%rdx
   1d663:	e8 71 8a fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d668:	85 c0                	test   %eax,%eax
   1d66a:	0f 85 fc 00 00 00    	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d670:	4c 89 e2             	mov    %r12,%rdx
   1d673:	be 01 00 00 00       	mov    $0x1,%esi
   1d678:	48 89 df             	mov    %rbx,%rdi
   1d67b:	e8 59 8a fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d680:	85 c0                	test   %eax,%eax
   1d682:	0f 85 e4 00 00 00    	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d688:	f6 45 ee 20          	testb  $0x20,0xffffffffffffffee(%rbp)
   1d68c:	0f 84 da 00 00 00    	je     1d76c <e1000_config_fc_after_link_up+0x185>
   1d692:	48 8d 55 ec          	lea    0xffffffffffffffec(%rbp),%rdx
   1d696:	be 04 00 00 00       	mov    $0x4,%esi
   1d69b:	48 89 df             	mov    %rbx,%rdi
   1d69e:	e8 36 8a fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d6a3:	85 c0                	test   %eax,%eax
   1d6a5:	0f 85 c1 00 00 00    	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d6ab:	48 8d 55 ea          	lea    0xffffffffffffffea(%rbp),%rdx
   1d6af:	be 05 00 00 00       	mov    $0x5,%esi
   1d6b4:	48 89 df             	mov    %rbx,%rdi
   1d6b7:	e8 1d 8a fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d6bc:	85 c0                	test   %eax,%eax
   1d6be:	0f 85 a8 00 00 00    	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d6c4:	0f b7 45 ec          	movzwl 0xffffffffffffffec(%rbp),%eax
   1d6c8:	f6 c4 04             	test   $0x4,%ah
   1d6cb:	74 1b                	je     1d6e8 <e1000_config_fc_after_link_up+0x101>
   1d6cd:	0f b7 55 ea          	movzwl 0xffffffffffffffea(%rbp),%edx
   1d6d1:	f6 c6 04             	test   $0x4,%dh
   1d6d4:	74 2e                	je     1d704 <e1000_config_fc_after_link_up+0x11d>
   1d6d6:	31 c0                	xor    %eax,%eax
   1d6d8:	83 bb 8c 00 00 00 03 	cmpl   $0x3,0x8c(%rbx)
   1d6df:	0f 94 c0             	sete   %al
   1d6e2:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
   1d6e6:	eb 53                	jmp    1d73b <e1000_config_fc_after_link_up+0x154>
   1d6e8:	f6 c4 08             	test   $0x8,%ah
   1d6eb:	74 2a                	je     1d717 <e1000_config_fc_after_link_up+0x130>
   1d6ed:	0f b7 45 ea          	movzwl 0xffffffffffffffea(%rbp),%eax
   1d6f1:	f6 c4 04             	test   $0x4,%ah
   1d6f4:	74 21                	je     1d717 <e1000_config_fc_after_link_up+0x130>
   1d6f6:	f6 c4 08             	test   $0x8,%ah
   1d6f9:	74 1c                	je     1d717 <e1000_config_fc_after_link_up+0x130>
   1d6fb:	c7 43 38 02 00 00 00 	movl   $0x2,0x38(%rbx)
   1d702:	eb 3a                	jmp    1d73e <e1000_config_fc_after_link_up+0x157>
   1d704:	f6 c4 08             	test   $0x8,%ah
   1d707:	74 0e                	je     1d717 <e1000_config_fc_after_link_up+0x130>
   1d709:	80 e6 08             	and    $0x8,%dh
   1d70c:	74 09                	je     1d717 <e1000_config_fc_after_link_up+0x130>
   1d70e:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   1d715:	eb 27                	jmp    1d73e <e1000_config_fc_after_link_up+0x157>
   1d717:	8b 83 8c 00 00 00    	mov    0x8c(%rbx),%eax
   1d71d:	85 c0                	test   %eax,%eax
   1d71f:	74 05                	je     1d726 <e1000_config_fc_after_link_up+0x13f>
   1d721:	83 f8 02             	cmp    $0x2,%eax
   1d724:	75 09                	jne    1d72f <e1000_config_fc_after_link_up+0x148>
   1d726:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   1d72d:	eb 0f                	jmp    1d73e <e1000_config_fc_after_link_up+0x157>
   1d72f:	31 c0                	xor    %eax,%eax
   1d731:	80 bb 14 01 00 00 00 	cmpb   $0x0,0x114(%rbx)
   1d738:	0f 94 c0             	sete   %al
   1d73b:	89 43 38             	mov    %eax,0x38(%rbx)
   1d73e:	48 8d 55 e6          	lea    0xffffffffffffffe6(%rbp),%rdx
   1d742:	48 8d 75 e8          	lea    0xffffffffffffffe8(%rbp),%rsi
   1d746:	48 89 df             	mov    %rbx,%rdi
   1d749:	e8 94 f7 ff ff       	callq  1cee2 <e1000_get_speed_and_duplex>
   1d74e:	85 c0                	test   %eax,%eax
   1d750:	75 1a                	jne    1d76c <e1000_config_fc_after_link_up+0x185>
   1d752:	66 83 7d e6 01       	cmpw   $0x1,0xffffffffffffffe6(%rbp)
   1d757:	75 07                	jne    1d760 <e1000_config_fc_after_link_up+0x179>
   1d759:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   1d760:	48 89 df             	mov    %rbx,%rdi
   1d763:	e8 a8 2d fe ff       	callq  510 <e1000_force_mac_fc>
   1d768:	eb 02                	jmp    1d76c <e1000_config_fc_after_link_up+0x185>
   1d76a:	31 c0                	xor    %eax,%eax
   1d76c:	41 59                	pop    %r9
   1d76e:	41 5a                	pop    %r10
   1d770:	5b                   	pop    %rbx
   1d771:	41 5c                	pop    %r12
   1d773:	c9                   	leaveq 
   1d774:	c3                   	retq   

000000000001d775 <e1000_check_for_link>:
   1d775:	55                   	push   %rbp
   1d776:	48 89 e5             	mov    %rsp,%rbp
   1d779:	41 57                	push   %r15
   1d77b:	41 56                	push   %r14
   1d77d:	41 55                	push   %r13
   1d77f:	49 89 fd             	mov    %rdi,%r13
   1d782:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d785: R_X86_64_32S	.rodata.str1.1+0x24ae
   1d789:	41 54                	push   %r12
   1d78b:	53                   	push   %rbx
   1d78c:	48 83 ec 18          	sub    $0x18,%rsp
   1d790:	e8 00 00 00 00       	callq  1d795 <e1000_check_for_link+0x20>
			1d791: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d795:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d798: R_X86_64_32S	.rodata.str1.1+0xae
   1d79c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d7a0:	e8 00 00 00 00       	callq  1d7a5 <e1000_check_for_link+0x30>
			1d7a1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d7a5:	44 8b 33             	mov    (%rbx),%r14d
   1d7a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d7ab: R_X86_64_32S	.rodata.str1.1+0xae
   1d7af:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d7b3:	e8 00 00 00 00       	callq  1d7b8 <e1000_check_for_link+0x43>
			1d7b4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d7b8:	44 8b 7b 08          	mov    0x8(%rbx),%r15d
   1d7bc:	41 8b 45 1c          	mov    0x1c(%r13),%eax
   1d7c0:	83 f8 01             	cmp    $0x1,%eax
   1d7c3:	74 0a                	je     1d7cf <e1000_check_for_link+0x5a>
   1d7c5:	45 31 e4             	xor    %r12d,%r12d
   1d7c8:	31 d2                	xor    %edx,%edx
   1d7ca:	83 f8 02             	cmp    $0x2,%eax
   1d7cd:	75 3f                	jne    1d80e <e1000_check_for_link+0x99>
   1d7cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d7d2: R_X86_64_32S	.rodata.str1.1+0xae
   1d7d6:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d7da:	e8 00 00 00 00       	callq  1d7df <e1000_check_for_link+0x6a>
			1d7db: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d7df:	44 8b a3 80 01 00 00 	mov    0x180(%rbx),%r12d
   1d7e6:	31 d2                	xor    %edx,%edx
   1d7e8:	41 83 7d 1c 01       	cmpl   $0x1,0x1c(%r13)
   1d7ed:	75 1f                	jne    1d80e <e1000_check_for_link+0x99>
   1d7ef:	41 8b 45 10          	mov    0x10(%r13),%eax
   1d7f3:	83 f8 05             	cmp    $0x5,%eax
   1d7f6:	19 d2                	sbb    %edx,%edx
   1d7f8:	f7 d2                	not    %edx
   1d7fa:	81 e2 00 00 08 00    	and    $0x80000,%edx
   1d800:	41 f6 c7 02          	test   $0x2,%r15b
   1d804:	74 08                	je     1d80e <e1000_check_for_link+0x99>
   1d806:	41 c6 85 0c 01 00 00 	movb   $0x0,0x10c(%r13)
   1d80d:	00 
   1d80e:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   1d813:	0f 85 b0 02 00 00    	jne    1dac9 <e1000_check_for_link+0x354>
   1d819:	41 80 bd 0c 01 00 00 	cmpb   $0x0,0x10c(%r13)
   1d820:	00 
   1d821:	0f 84 a2 02 00 00    	je     1dac9 <e1000_check_for_link+0x354>
   1d827:	4c 8d 65 d6          	lea    0xffffffffffffffd6(%rbp),%r12
   1d82b:	be 01 00 00 00       	mov    $0x1,%esi
   1d830:	4c 89 ef             	mov    %r13,%rdi
   1d833:	4c 89 e2             	mov    %r12,%rdx
   1d836:	e8 9e 88 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d83b:	85 c0                	test   %eax,%eax
   1d83d:	89 c3                	mov    %eax,%ebx
   1d83f:	0f 85 35 04 00 00    	jne    1dc7a <e1000_check_for_link+0x505>
   1d845:	4c 89 e2             	mov    %r12,%rdx
   1d848:	be 01 00 00 00       	mov    $0x1,%esi
   1d84d:	4c 89 ef             	mov    %r13,%rdi
   1d850:	e8 84 88 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d855:	85 c0                	test   %eax,%eax
   1d857:	89 c3                	mov    %eax,%ebx
   1d859:	0f 85 1b 04 00 00    	jne    1dc7a <e1000_check_for_link+0x505>
   1d85f:	f6 45 d6 04          	testb  $0x4,0xffffffffffffffd6(%rbp)
   1d863:	0f 84 31 01 00 00    	je     1d99a <e1000_check_for_link+0x225>
   1d869:	41 c6 85 0c 01 00 00 	movb   $0x0,0x10c(%r13)
   1d870:	00 
   1d871:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d874: R_X86_64_32S	.rodata.str1.1+0x24c3
   1d878:	e8 00 00 00 00       	callq  1d87d <e1000_check_for_link+0x108>
			1d879: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d87d:	41 8b 45 14          	mov    0x14(%r13),%eax
   1d881:	83 f8 01             	cmp    $0x1,%eax
   1d884:	74 0a                	je     1d890 <e1000_check_for_link+0x11b>
   1d886:	83 f8 04             	cmp    $0x4,%eax
   1d889:	74 05                	je     1d890 <e1000_check_for_link+0x11b>
   1d88b:	83 f8 02             	cmp    $0x2,%eax
   1d88e:	75 25                	jne    1d8b5 <e1000_check_for_link+0x140>
   1d890:	48 8d 55 d0          	lea    0xffffffffffffffd0(%rbp),%rdx
   1d894:	be 13 00 00 00       	mov    $0x13,%esi
   1d899:	4c 89 ef             	mov    %r13,%rdi
   1d89c:	e8 38 88 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d8a1:	85 c0                	test   %eax,%eax
   1d8a3:	75 49                	jne    1d8ee <e1000_check_for_link+0x179>
   1d8a5:	8b 45 d0             	mov    0xffffffffffffffd0(%rbp),%eax
   1d8a8:	66 c1 e8 0f          	shr    $0xf,%ax
   1d8ac:	41 88 85 01 01 00 00 	mov    %al,0x101(%r13)
   1d8b3:	eb 39                	jmp    1d8ee <e1000_check_for_link+0x179>
   1d8b5:	85 c0                	test   %eax,%eax
   1d8b7:	74 05                	je     1d8be <e1000_check_for_link+0x149>
   1d8b9:	83 f8 03             	cmp    $0x3,%eax
   1d8bc:	75 23                	jne    1d8e1 <e1000_check_for_link+0x16c>
   1d8be:	48 8d 55 d0          	lea    0xffffffffffffffd0(%rbp),%rdx
   1d8c2:	be 11 00 00 00       	mov    $0x11,%esi
   1d8c7:	4c 89 ef             	mov    %r13,%rdi
   1d8ca:	e8 0a 88 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1d8cf:	85 c0                	test   %eax,%eax
   1d8d1:	75 1b                	jne    1d8ee <e1000_check_for_link+0x179>
   1d8d3:	f6 45 d0 20          	testb  $0x20,0xffffffffffffffd0(%rbp)
   1d8d7:	41 0f 95 85 01 01 00 	setne  0x101(%r13)
   1d8de:	00 
   1d8df:	eb 0d                	jmp    1d8ee <e1000_check_for_link+0x179>
   1d8e1:	83 f8 05             	cmp    $0x5,%eax
   1d8e4:	75 08                	jne    1d8ee <e1000_check_for_link+0x179>
   1d8e6:	41 c6 85 01 01 00 00 	movb   $0x0,0x101(%r13)
   1d8ed:	00 
   1d8ee:	41 8b 45 10          	mov    0x10(%r13),%eax
   1d8f2:	83 f8 04             	cmp    $0x4,%eax
   1d8f5:	74 09                	je     1d900 <e1000_check_for_link+0x18b>
   1d8f7:	83 f8 03             	cmp    $0x3,%eax
   1d8fa:	0f 85 a9 00 00 00    	jne    1d9a9 <e1000_check_for_link+0x234>
   1d900:	41 80 bd ef 00 00 00 	cmpb   $0x0,0xef(%r13)
   1d907:	00 
   1d908:	0f 85 9b 00 00 00    	jne    1d9a9 <e1000_check_for_link+0x234>
   1d90e:	41 8a 85 f1 00 00 00 	mov    0xf1(%r13),%al
   1d915:	3c 01                	cmp    $0x1,%al
   1d917:	74 08                	je     1d921 <e1000_check_for_link+0x1ac>
   1d919:	84 c0                	test   %al,%al
   1d91b:	0f 85 88 00 00 00    	jne    1d9a9 <e1000_check_for_link+0x234>
   1d921:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d925:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d928: R_X86_64_32S	.rodata.str1.1+0xb4
   1d92c:	e8 00 00 00 00       	callq  1d931 <e1000_check_for_link+0x1bc>
			1d92d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d931:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   1d934:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
   1d93b:	89 03                	mov    %eax,(%rbx)
   1d93d:	4c 89 ef             	mov    %r13,%rdi
   1d940:	e8 56 8a fe ff       	callq  639b <e1000_polarity_reversal_workaround>
   1d945:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d948: R_X86_64_32S	.rodata.str1.1+0xae
   1d94c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d950:	e8 00 00 00 00       	callq  1d955 <e1000_check_for_link+0x1e0>
			1d951: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d955:	44 8b a3 c0 00 00 00 	mov    0xc0(%rbx),%r12d
   1d95c:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d960:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d963: R_X86_64_32S	.rodata.str1.1+0xb4
   1d967:	41 83 e4 fb          	and    $0xfffffffffffffffb,%r12d
   1d96b:	e8 00 00 00 00       	callq  1d970 <e1000_check_for_link+0x1fb>
			1d96c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d970:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   1d977:	44 89 23             	mov    %r12d,(%rbx)
   1d97a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1d97e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d981: R_X86_64_32S	.rodata.str1.1+0xb4
   1d985:	e8 00 00 00 00       	callq  1d98a <e1000_check_for_link+0x215>
			1d986: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1d98a:	b8 9d 00 00 00       	mov    $0x9d,%eax
   1d98f:	48 81 c3 d0 00 00 00 	add    $0xd0,%rbx
   1d996:	89 03                	mov    %eax,(%rbx)
   1d998:	eb 0f                	jmp    1d9a9 <e1000_check_for_link+0x234>
   1d99a:	31 f6                	xor    %esi,%esi
   1d99c:	4c 89 ef             	mov    %r13,%rdi
   1d99f:	e8 8a f8 ff ff       	callq  1d22e <e1000_config_dsp_after_link_change>
   1d9a4:	e9 d1 02 00 00       	jmpq   1dc7a <e1000_check_for_link+0x505>
   1d9a9:	41 80 bd ef 00 00 00 	cmpb   $0x0,0xef(%r13)
   1d9b0:	00 
   1d9b1:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
   1d9b6:	0f 84 be 02 00 00    	je     1dc7a <e1000_check_for_link+0x505>
   1d9bc:	be 01 00 00 00       	mov    $0x1,%esi
   1d9c1:	4c 89 ef             	mov    %r13,%rdi
   1d9c4:	e8 65 f8 ff ff       	callq  1d22e <e1000_config_dsp_after_link_change>
   1d9c9:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
   1d9ce:	76 0a                	jbe    1d9da <e1000_check_for_link+0x265>
   1d9d0:	4c 89 ef             	mov    %r13,%rdi
   1d9d3:	e8 f0 2b fe ff       	callq  5c8 <e1000_config_collision_dist>
   1d9d8:	eb 12                	jmp    1d9ec <e1000_check_for_link+0x277>
   1d9da:	4c 89 ef             	mov    %r13,%rdi
   1d9dd:	e8 12 94 fe ff       	callq  6df4 <e1000_config_mac_to_phy>
   1d9e2:	85 c0                	test   %eax,%eax
   1d9e4:	89 c3                	mov    %eax,%ebx
   1d9e6:	0f 85 8e 02 00 00    	jne    1dc7a <e1000_check_for_link+0x505>
   1d9ec:	4c 89 ef             	mov    %r13,%rdi
   1d9ef:	e8 f3 fb ff ff       	callq  1d5e7 <e1000_config_fc_after_link_up>
   1d9f4:	85 c0                	test   %eax,%eax
   1d9f6:	89 c3                	mov    %eax,%ebx
   1d9f8:	0f 85 7c 02 00 00    	jne    1dc7a <e1000_check_for_link+0x505>
   1d9fe:	41 80 bd 0e 01 00 00 	cmpb   $0x0,0x10e(%r13)
   1da05:	00 
   1da06:	0f 84 2e 02 00 00    	je     1dc3a <e1000_check_for_link+0x4c5>
   1da0c:	48 8d 55 d2          	lea    0xffffffffffffffd2(%rbp),%rdx
   1da10:	48 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%rsi
   1da14:	4c 89 ef             	mov    %r13,%rdi
   1da17:	e8 c6 f4 ff ff       	callq  1cee2 <e1000_get_speed_and_duplex>
   1da1c:	85 c0                	test   %eax,%eax
   1da1e:	89 c3                	mov    %eax,%ebx
   1da20:	0f 85 54 02 00 00    	jne    1dc7a <e1000_check_for_link+0x505>
   1da26:	66 81 7d d4 e8 03    	cmpw   $0x3e8,0xffffffffffffffd4(%rbp)
   1da2c:	41 8a 85 0f 01 00 00 	mov    0x10f(%r13),%al
   1da33:	74 4a                	je     1da7f <e1000_check_for_link+0x30a>
   1da35:	84 c0                	test   %al,%al
   1da37:	0f 84 fd 01 00 00    	je     1dc3a <e1000_check_for_link+0x4c5>
   1da3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1da40: R_X86_64_32S	.rodata.str1.1+0xae
   1da44:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1da48:	e8 00 00 00 00       	callq  1da4d <e1000_check_for_link+0x2d8>
			1da49: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1da4d:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   1da54:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1da58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1da5b: R_X86_64_32S	.rodata.str1.1+0xb4
   1da5f:	41 83 e4 fb          	and    $0xfffffffffffffffb,%r12d
   1da63:	e8 00 00 00 00       	callq  1da68 <e1000_check_for_link+0x2f3>
			1da64: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1da68:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   1da6f:	44 89 23             	mov    %r12d,(%rbx)
   1da72:	41 c6 85 0f 01 00 00 	movb   $0x0,0x10f(%r13)
   1da79:	00 
   1da7a:	e9 bb 01 00 00       	jmpq   1dc3a <e1000_check_for_link+0x4c5>
   1da7f:	84 c0                	test   %al,%al
   1da81:	0f 85 b3 01 00 00    	jne    1dc3a <e1000_check_for_link+0x4c5>
   1da87:	41 c6 85 0f 01 00 00 	movb   $0x1,0x10f(%r13)
   1da8e:	01 
   1da8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1da92: R_X86_64_32S	.rodata.str1.1+0xae
   1da96:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1da9a:	e8 00 00 00 00       	callq  1da9f <e1000_check_for_link+0x32a>
			1da9b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1da9f:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   1daa6:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1daaa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1daad: R_X86_64_32S	.rodata.str1.1+0xb4
   1dab1:	41 83 cc 04          	or     $0x4,%r12d
   1dab5:	e8 00 00 00 00       	callq  1daba <e1000_check_for_link+0x345>
			1dab6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1daba:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   1dac1:	44 89 23             	mov    %r12d,(%rbx)
   1dac4:	e9 71 01 00 00       	jmpq   1dc3a <e1000_check_for_link+0x4c5>
   1dac9:	41 8b 45 1c          	mov    0x1c(%r13),%eax
   1dacd:	83 f8 01             	cmp    $0x1,%eax
   1dad0:	75 0c                	jne    1dade <e1000_check_for_link+0x369>
   1dad2:	44 89 f0             	mov    %r14d,%eax
   1dad5:	25 00 00 08 00       	and    $0x80000,%eax
   1dada:	39 d0                	cmp    %edx,%eax
   1dadc:	eb 03                	jmp    1dae1 <e1000_check_for_link+0x36c>
   1dade:	83 f8 02             	cmp    $0x2,%eax
   1dae1:	0f 85 99 00 00 00    	jne    1db80 <e1000_check_for_link+0x40b>
   1dae7:	41 80 e7 02          	and    $0x2,%r15b
   1daeb:	0f 85 8f 00 00 00    	jne    1db80 <e1000_check_for_link+0x40b>
   1daf1:	41 f7 c4 00 00 00 20 	test   $0x20000000,%r12d
   1daf8:	0f 85 82 00 00 00    	jne    1db80 <e1000_check_for_link+0x40b>
   1dafe:	41 83 bd 94 00 00 00 	cmpl   $0x0,0x94(%r13)
   1db05:	00 
   1db06:	75 10                	jne    1db18 <e1000_check_for_link+0x3a3>
   1db08:	41 c7 85 94 00 00 00 	movl   $0x1,0x94(%r13)
   1db0f:	01 00 00 00 
   1db13:	e9 60 01 00 00       	jmpq   1dc78 <e1000_check_for_link+0x503>
   1db18:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1db1c:	45 8b a5 90 00 00 00 	mov    0x90(%r13),%r12d
   1db23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1db26: R_X86_64_32S	.rodata.str1.1+0xb4
   1db2a:	e8 00 00 00 00       	callq  1db2f <e1000_check_for_link+0x3ba>
			1db2b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1db2f:	41 81 e4 ff ff ff 7f 	and    $0x7fffffff,%r12d
   1db36:	48 81 c3 78 01 00 00 	add    $0x178,%rbx
   1db3d:	44 89 23             	mov    %r12d,(%rbx)
   1db40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1db43: R_X86_64_32S	.rodata.str1.1+0xae
   1db47:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1db4b:	e8 00 00 00 00       	callq  1db50 <e1000_check_for_link+0x3db>
			1db4c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1db50:	8b 1b                	mov    (%rbx),%ebx
   1db52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1db55: R_X86_64_32S	.rodata.str1.1+0xb4
   1db59:	4d 8b 65 00          	mov    0x0(%r13),%r12
   1db5d:	83 cb 41             	or     $0x41,%ebx
   1db60:	e8 00 00 00 00       	callq  1db65 <e1000_check_for_link+0x3f0>
			1db61: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1db65:	41 89 1c 24          	mov    %ebx,(%r12)
   1db69:	4c 89 ef             	mov    %r13,%rdi
   1db6c:	e8 76 fa ff ff       	callq  1d5e7 <e1000_config_fc_after_link_up>
   1db71:	85 c0                	test   %eax,%eax
   1db73:	89 c3                	mov    %eax,%ebx
   1db75:	0f 84 bf 00 00 00    	je     1dc3a <e1000_check_for_link+0x4c5>
   1db7b:	e9 fa 00 00 00       	jmpq   1dc7a <e1000_check_for_link+0x505>
   1db80:	41 8b 45 1c          	mov    0x1c(%r13),%eax
   1db84:	83 f8 01             	cmp    $0x1,%eax
   1db87:	74 05                	je     1db8e <e1000_check_for_link+0x419>
   1db89:	83 f8 02             	cmp    $0x2,%eax
   1db8c:	75 49                	jne    1dbd7 <e1000_check_for_link+0x462>
   1db8e:	41 f6 c6 40          	test   $0x40,%r14b
   1db92:	74 43                	je     1dbd7 <e1000_check_for_link+0x462>
   1db94:	41 f7 c4 00 00 00 20 	test   $0x20000000,%r12d
   1db9b:	74 3a                	je     1dbd7 <e1000_check_for_link+0x462>
   1db9d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dba1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dba4: R_X86_64_32S	.rodata.str1.1+0xb4
   1dba8:	45 8b a5 90 00 00 00 	mov    0x90(%r13),%r12d
   1dbaf:	e8 00 00 00 00       	callq  1dbb4 <e1000_check_for_link+0x43f>
			1dbb0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dbb4:	48 81 c3 78 01 00 00 	add    $0x178,%rbx
   1dbbb:	44 89 23             	mov    %r12d,(%rbx)
   1dbbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dbc1: R_X86_64_32S	.rodata.str1.1+0xb4
   1dbc5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dbc9:	41 83 e6 bf          	and    $0xffffffffffffffbf,%r14d
   1dbcd:	e8 00 00 00 00       	callq  1dbd2 <e1000_check_for_link+0x45d>
			1dbce: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dbd2:	44 89 33             	mov    %r14d,(%rbx)
   1dbd5:	eb 51                	jmp    1dc28 <e1000_check_for_link+0x4b3>
   1dbd7:	41 83 7d 1c 02       	cmpl   $0x2,0x1c(%r13)
   1dbdc:	75 5c                	jne    1dc3a <e1000_check_for_link+0x4c5>
   1dbde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dbe1: R_X86_64_32S	.rodata.str1.1+0xae
   1dbe5:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dbe9:	e8 00 00 00 00       	callq  1dbee <e1000_check_for_link+0x479>
			1dbea: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dbee:	8b 83 78 01 00 00    	mov    0x178(%rbx),%eax
   1dbf4:	85 c0                	test   %eax,%eax
   1dbf6:	78 42                	js     1dc3a <e1000_check_for_link+0x4c5>
   1dbf8:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
   1dbfd:	e8 5a 6d fe ff       	callq  495c <__const_udelay>
   1dc02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dc05: R_X86_64_32S	.rodata.str1.1+0xae
   1dc09:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dc0d:	e8 00 00 00 00       	callq  1dc12 <e1000_check_for_link+0x49d>
			1dc0e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dc12:	8b 83 80 01 00 00    	mov    0x180(%rbx),%eax
   1dc18:	a9 00 00 00 40       	test   $0x40000000,%eax
   1dc1d:	74 13                	je     1dc32 <e1000_check_for_link+0x4bd>
   1dc1f:	41 81 e4 00 00 00 08 	and    $0x8000000,%r12d
   1dc26:	75 12                	jne    1dc3a <e1000_check_for_link+0x4c5>
   1dc28:	41 c6 85 0d 01 00 00 	movb   $0x0,0x10d(%r13)
   1dc2f:	00 
   1dc30:	eb 08                	jmp    1dc3a <e1000_check_for_link+0x4c5>
   1dc32:	41 c6 85 0d 01 00 00 	movb   $0x1,0x10d(%r13)
   1dc39:	01 
   1dc3a:	41 83 7d 1c 02       	cmpl   $0x2,0x1c(%r13)
   1dc3f:	75 37                	jne    1dc78 <e1000_check_for_link+0x503>
   1dc41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dc44: R_X86_64_32S	.rodata.str1.1+0xae
   1dc48:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dc4c:	e8 00 00 00 00       	callq  1dc51 <e1000_check_for_link+0x4dc>
			1dc4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dc51:	8b 83 78 01 00 00    	mov    0x178(%rbx),%eax
   1dc57:	85 c0                	test   %eax,%eax
   1dc59:	79 1d                	jns    1dc78 <e1000_check_for_link+0x503>
   1dc5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dc5e: R_X86_64_32S	.rodata.str1.1+0xae
   1dc62:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dc66:	e8 00 00 00 00       	callq  1dc6b <e1000_check_for_link+0x4f6>
			1dc67: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dc6b:	8b 43 08             	mov    0x8(%rbx),%eax
   1dc6e:	a8 02                	test   $0x2,%al
   1dc70:	41 0f 94 85 0d 01 00 	sete   0x10d(%r13)
   1dc77:	00 
   1dc78:	31 db                	xor    %ebx,%ebx
   1dc7a:	48 83 c4 18          	add    $0x18,%rsp
   1dc7e:	89 d8                	mov    %ebx,%eax
   1dc80:	5b                   	pop    %rbx
   1dc81:	41 5c                	pop    %r12
   1dc83:	41 5d                	pop    %r13
   1dc85:	41 5e                	pop    %r14
   1dc87:	41 5f                	pop    %r15
   1dc89:	c9                   	leaveq 
   1dc8a:	c3                   	retq   

000000000001dc8b <e1000_link_test>:
   1dc8b:	55                   	push   %rbp
   1dc8c:	48 89 e5             	mov    %rsp,%rbp
   1dc8f:	41 55                	push   %r13
   1dc91:	49 89 f5             	mov    %rsi,%r13
   1dc94:	41 54                	push   %r12
   1dc96:	49 89 fc             	mov    %rdi,%r12
   1dc99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dc9c: R_X86_64_32S	.rodata.str1.1+0x24d9
   1dca0:	53                   	push   %rbx
   1dca1:	49 8d 9c 24 b8 03 00 	lea    0x3b8(%r12),%rbx
   1dca8:	00 
   1dca9:	48 83 ec 08          	sub    $0x8,%rsp
   1dcad:	e8 00 00 00 00       	callq  1dcb2 <e1000_link_test+0x27>
			1dcae: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dcb2:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   1dcb9:	00 
   1dcba:	83 7b 1c 02          	cmpl   $0x2,0x1c(%rbx)
   1dcbe:	75 33                	jne    1dcf3 <e1000_link_test+0x68>
   1dcc0:	c6 83 0d 01 00 00 01 	movb   $0x1,0x10d(%rbx)
   1dcc7:	45 31 e4             	xor    %r12d,%r12d
   1dcca:	48 89 df             	mov    %rbx,%rdi
   1dccd:	e8 a3 fa ff ff       	callq  1d775 <e1000_check_for_link>
   1dcd2:	80 bb 0d 01 00 00 00 	cmpb   $0x0,0x10d(%rbx)
   1dcd9:	74 56                	je     1dd31 <e1000_link_test+0xa6>
   1dcdb:	bf 14 00 00 00       	mov    $0x14,%edi
   1dce0:	e8 6b 9e fe ff       	callq  7b50 <msleep>
   1dce5:	41 81 fc a6 0e 00 00 	cmp    $0xea6,%r12d
   1dcec:	74 3b                	je     1dd29 <e1000_link_test+0x9e>
   1dcee:	41 ff c4             	inc    %r12d
   1dcf1:	eb d7                	jmp    1dcca <e1000_link_test+0x3f>
   1dcf3:	48 89 df             	mov    %rbx,%rdi
   1dcf6:	e8 7a fa ff ff       	callq  1d775 <e1000_check_for_link>
   1dcfb:	80 bb ef 00 00 00 00 	cmpb   $0x0,0xef(%rbx)
   1dd02:	74 0a                	je     1dd0e <e1000_link_test+0x83>
   1dd04:	bf a0 0f 00 00       	mov    $0xfa0,%edi
   1dd09:	e8 42 9e fe ff       	callq  7b50 <msleep>
   1dd0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dd11: R_X86_64_32S	.rodata.str1.1+0xae
   1dd15:	49 8b 9c 24 b8 03 00 	mov    0x3b8(%r12),%rbx
   1dd1c:	00 
   1dd1d:	e8 00 00 00 00       	callq  1dd22 <e1000_link_test+0x97>
			1dd1e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dd22:	8b 43 08             	mov    0x8(%rbx),%eax
   1dd25:	a8 02                	test   $0x2,%al
   1dd27:	75 08                	jne    1dd31 <e1000_link_test+0xa6>
   1dd29:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
   1dd30:	00 
   1dd31:	41 8b 45 00          	mov    0x0(%r13),%eax
   1dd35:	41 5b                	pop    %r11
   1dd37:	5b                   	pop    %rbx
   1dd38:	41 5c                	pop    %r12
   1dd3a:	41 5d                	pop    %r13
   1dd3c:	c9                   	leaveq 
   1dd3d:	c3                   	retq   

000000000001dd3e <e1000_phy_reset>:
   1dd3e:	55                   	push   %rbp
   1dd3f:	48 89 e5             	mov    %rsp,%rbp
   1dd42:	41 54                	push   %r12
   1dd44:	53                   	push   %rbx
   1dd45:	48 89 fb             	mov    %rdi,%rbx
   1dd48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dd4b: R_X86_64_32S	.rodata.str1.1+0x24e9
   1dd4f:	48 83 ec 10          	sub    $0x10,%rsp
   1dd53:	e8 00 00 00 00       	callq  1dd58 <e1000_phy_reset+0x1a>
			1dd54: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dd58:	48 89 df             	mov    %rbx,%rdi
   1dd5b:	e8 b4 23 fe ff       	callq  114 <e1000_check_phy_reset_block>
   1dd60:	85 c0                	test   %eax,%eax
   1dd62:	41 89 c4             	mov    %eax,%r12d
   1dd65:	74 05                	je     1dd6c <e1000_phy_reset+0x2e>
   1dd67:	45 31 e4             	xor    %r12d,%r12d
   1dd6a:	eb 79                	jmp    1dde5 <e1000_phy_reset+0xa7>
   1dd6c:	8b 43 14             	mov    0x14(%rbx),%eax
   1dd6f:	83 f8 01             	cmp    $0x1,%eax
   1dd72:	74 0f                	je     1dd83 <e1000_phy_reset+0x45>
   1dd74:	83 f8 02             	cmp    $0x2,%eax
   1dd77:	74 0a                	je     1dd83 <e1000_phy_reset+0x45>
   1dd79:	83 f8 04             	cmp    $0x4,%eax
   1dd7c:	74 05                	je     1dd83 <e1000_phy_reset+0x45>
   1dd7e:	83 f8 05             	cmp    $0x5,%eax
   1dd81:	75 0e                	jne    1dd91 <e1000_phy_reset+0x53>
   1dd83:	48 89 df             	mov    %rbx,%rdi
   1dd86:	e8 a1 ec ff ff       	callq  1ca2c <e1000_phy_hw_reset>
   1dd8b:	85 c0                	test   %eax,%eax
   1dd8d:	74 41                	je     1ddd0 <e1000_phy_reset+0x92>
   1dd8f:	eb 30                	jmp    1ddc1 <e1000_phy_reset+0x83>
   1dd91:	48 8d 55 ee          	lea    0xffffffffffffffee(%rbp),%rdx
   1dd95:	31 f6                	xor    %esi,%esi
   1dd97:	48 89 df             	mov    %rbx,%rdi
   1dd9a:	e8 3a 83 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1dd9f:	85 c0                	test   %eax,%eax
   1dda1:	75 1e                	jne    1ddc1 <e1000_phy_reset+0x83>
   1dda3:	66 8b 55 ee          	mov    0xffffffffffffffee(%rbp),%dx
   1dda7:	31 f6                	xor    %esi,%esi
   1dda9:	48 89 df             	mov    %rbx,%rdi
   1ddac:	66 81 ca 00 80       	or     $0x8000,%dx
   1ddb1:	66 89 55 ee          	mov    %dx,0xffffffffffffffee(%rbp)
   1ddb5:	0f b7 d2             	movzwl %dx,%edx
   1ddb8:	e8 ca 80 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ddbd:	85 c0                	test   %eax,%eax
   1ddbf:	74 05                	je     1ddc6 <e1000_phy_reset+0x88>
   1ddc1:	41 89 c4             	mov    %eax,%r12d
   1ddc4:	eb 1f                	jmp    1dde5 <e1000_phy_reset+0xa7>
   1ddc6:	bf c7 10 00 00       	mov    $0x10c7,%edi
   1ddcb:	e8 8c 6b fe ff       	callq  495c <__const_udelay>
   1ddd0:	8b 43 14             	mov    0x14(%rbx),%eax
   1ddd3:	83 f8 01             	cmp    $0x1,%eax
   1ddd6:	74 05                	je     1dddd <e1000_phy_reset+0x9f>
   1ddd8:	83 f8 02             	cmp    $0x2,%eax
   1dddb:	75 08                	jne    1dde5 <e1000_phy_reset+0xa7>
   1dddd:	48 89 df             	mov    %rbx,%rdi
   1dde0:	e8 52 9e fe ff       	callq  7c37 <e1000_phy_init_script>
   1dde5:	5b                   	pop    %rbx
   1dde6:	44 89 e0             	mov    %r12d,%eax
   1dde9:	41 5c                	pop    %r12
   1ddeb:	5b                   	pop    %rbx
   1ddec:	41 5c                	pop    %r12
   1ddee:	c9                   	leaveq 
   1ddef:	c3                   	retq   

000000000001ddf0 <e1000_copper_link_igp_setup>:
   1ddf0:	55                   	push   %rbp
   1ddf1:	48 89 e5             	mov    %rsp,%rbp
   1ddf4:	41 55                	push   %r13
   1ddf6:	49 89 fd             	mov    %rdi,%r13
   1ddf9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ddfc: R_X86_64_32S	.rodata.str1.1+0x24f9
   1de00:	41 54                	push   %r12
   1de02:	53                   	push   %rbx
   1de03:	48 83 ec 18          	sub    $0x18,%rsp
   1de07:	e8 00 00 00 00       	callq  1de0c <e1000_copper_link_igp_setup+0x1c>
			1de08: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1de0c:	31 c0                	xor    %eax,%eax
   1de0e:	41 80 bd 11 01 00 00 	cmpb   $0x0,0x111(%r13)
   1de15:	00 
   1de16:	0f 85 87 04 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1de1c:	4c 89 ef             	mov    %r13,%rdi
   1de1f:	e8 1a ff ff ff       	callq  1dd3e <e1000_phy_reset>
   1de24:	85 c0                	test   %eax,%eax
   1de26:	0f 85 77 04 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1de2c:	bf 0f 00 00 00       	mov    $0xf,%edi
   1de31:	e8 1a 9d fe ff       	callq  7b50 <msleep>
   1de36:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
   1de3b:	74 3f                	je     1de7c <e1000_copper_link_igp_setup+0x8c>
   1de3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1de40: R_X86_64_32S	.rodata.str1.1+0xae
   1de44:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1de48:	e8 00 00 00 00       	callq  1de4d <e1000_copper_link_igp_setup+0x5d>
			1de49: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1de4d:	44 8b a3 00 0e 00 00 	mov    0xe00(%rbx),%r12d
   1de54:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1de58:	41 81 e4 ff f0 ff ff 	and    $0xfffff0ff,%r12d
   1de5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1de62: R_X86_64_32S	.rodata.str1.1+0xb4
   1de66:	41 81 cc 00 03 00 07 	or     $0x7000300,%r12d
   1de6d:	e8 00 00 00 00       	callq  1de72 <e1000_copper_link_igp_setup+0x82>
			1de6e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1de72:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
   1de79:	44 89 23             	mov    %r12d,(%rbx)
   1de7c:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1de81:	0f 85 4d 01 00 00    	jne    1dfd4 <e1000_copper_link_igp_setup+0x1e4>
   1de87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1de8a: R_X86_64_32S	.rodata.str1.1+0x2515
   1de8e:	e8 00 00 00 00       	callq  1de93 <e1000_copper_link_igp_setup+0xa3>
			1de8f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1de93:	41 8b 45 14          	mov    0x14(%r13),%eax
   1de97:	83 f8 01             	cmp    $0x1,%eax
   1de9a:	74 0e                	je     1deaa <e1000_copper_link_igp_setup+0xba>
   1de9c:	83 f8 02             	cmp    $0x2,%eax
   1de9f:	74 09                	je     1deaa <e1000_copper_link_igp_setup+0xba>
   1dea1:	83 f8 04             	cmp    $0x4,%eax
   1dea4:	0f 85 2a 01 00 00    	jne    1dfd4 <e1000_copper_link_igp_setup+0x1e4>
   1deaa:	41 8b 45 10          	mov    0x10(%r13),%eax
   1deae:	83 f8 0b             	cmp    $0xb,%eax
   1deb1:	74 05                	je     1deb8 <e1000_copper_link_igp_setup+0xc8>
   1deb3:	83 f8 0d             	cmp    $0xd,%eax
   1deb6:	75 0b                	jne    1dec3 <e1000_copper_link_igp_setup+0xd3>
   1deb8:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1debc:	be 14 00 00 00       	mov    $0x14,%esi
   1dec1:	eb 26                	jmp    1dee9 <e1000_copper_link_igp_setup+0xf9>
   1dec3:	83 f8 12             	cmp    $0x12,%eax
   1dec6:	75 18                	jne    1dee0 <e1000_copper_link_igp_setup+0xf0>
   1dec8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1decb: R_X86_64_32S	.rodata.str1.1+0xae
   1decf:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1ded3:	e8 00 00 00 00       	callq  1ded8 <e1000_copper_link_igp_setup+0xe8>
			1ded4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ded8:	8b 93 10 0f 00 00    	mov    0xf10(%rbx),%edx
   1dede:	eb 1b                	jmp    1defb <e1000_copper_link_igp_setup+0x10b>
   1dee0:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1dee4:	be 19 00 00 00       	mov    $0x19,%esi
   1dee9:	4c 89 ef             	mov    %r13,%rdi
   1deec:	e8 e8 81 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1def1:	85 c0                	test   %eax,%eax
   1def3:	0f 85 aa 03 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1def9:	31 d2                	xor    %edx,%edx
   1defb:	41 8b 45 10          	mov    0x10(%r13),%eax
   1deff:	83 f8 0b             	cmp    $0xb,%eax
   1df02:	74 05                	je     1df09 <e1000_copper_link_igp_setup+0x119>
   1df04:	83 f8 0d             	cmp    $0xd,%eax
   1df07:	75 14                	jne    1df1d <e1000_copper_link_igp_setup+0x12d>
   1df09:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1df0c:	be 14 00 00 00       	mov    $0x14,%esi
   1df11:	83 e2 ef             	and    $0xffffffffffffffef,%edx
   1df14:	66 89 55 e4          	mov    %dx,0xffffffffffffffe4(%rbp)
   1df18:	0f b7 d2             	movzwl %dx,%edx
   1df1b:	eb 3a                	jmp    1df57 <e1000_copper_link_igp_setup+0x167>
   1df1d:	83 f8 12             	cmp    $0x12,%eax
   1df20:	75 23                	jne    1df45 <e1000_copper_link_igp_setup+0x155>
   1df22:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1df26:	41 89 d4             	mov    %edx,%r12d
   1df29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1df2c: R_X86_64_32S	.rodata.str1.1+0xb4
   1df30:	41 83 e4 fb          	and    $0xfffffffffffffffb,%r12d
   1df34:	e8 00 00 00 00       	callq  1df39 <e1000_copper_link_igp_setup+0x149>
			1df35: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1df39:	48 81 c3 10 0f 00 00 	add    $0xf10,%rbx
   1df40:	44 89 23             	mov    %r12d,(%rbx)
   1df43:	eb 22                	jmp    1df67 <e1000_copper_link_igp_setup+0x177>
   1df45:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1df48:	be 19 00 00 00       	mov    $0x19,%esi
   1df4d:	83 e2 fb             	and    $0xfffffffffffffffb,%edx
   1df50:	66 89 55 e4          	mov    %dx,0xffffffffffffffe4(%rbp)
   1df54:	0f b7 d2             	movzwl %dx,%edx
   1df57:	4c 89 ef             	mov    %r13,%rdi
   1df5a:	e8 28 7f fe ff       	callq  5e87 <e1000_write_phy_reg>
   1df5f:	85 c0                	test   %eax,%eax
   1df61:	0f 85 3c 03 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1df67:	41 8b 85 04 01 00 00 	mov    0x104(%r13),%eax
   1df6e:	83 f8 01             	cmp    $0x1,%eax
   1df71:	75 21                	jne    1df94 <e1000_copper_link_igp_setup+0x1a4>
   1df73:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1df77:	be 10 00 00 00       	mov    $0x10,%esi
   1df7c:	4c 89 ef             	mov    %r13,%rdi
   1df7f:	e8 55 81 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1df84:	85 c0                	test   %eax,%eax
   1df86:	0f 85 17 03 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1df8c:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1df8f:	80 ca 80             	or     $0x80,%dl
   1df92:	eb 24                	jmp    1dfb8 <e1000_copper_link_igp_setup+0x1c8>
   1df94:	83 f8 02             	cmp    $0x2,%eax
   1df97:	75 3b                	jne    1dfd4 <e1000_copper_link_igp_setup+0x1e4>
   1df99:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1df9d:	be 10 00 00 00       	mov    $0x10,%esi
   1dfa2:	4c 89 ef             	mov    %r13,%rdi
   1dfa5:	e8 2f 81 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1dfaa:	85 c0                	test   %eax,%eax
   1dfac:	0f 85 f1 02 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1dfb2:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1dfb5:	80 e2 7f             	and    $0x7f,%dl
   1dfb8:	66 89 55 e4          	mov    %dx,0xffffffffffffffe4(%rbp)
   1dfbc:	be 10 00 00 00       	mov    $0x10,%esi
   1dfc1:	0f b7 d2             	movzwl %dx,%edx
   1dfc4:	4c 89 ef             	mov    %r13,%rdi
   1dfc7:	e8 bb 7e fe ff       	callq  5e87 <e1000_write_phy_reg>
   1dfcc:	85 c0                	test   %eax,%eax
   1dfce:	0f 85 cf 02 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1dfd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dfd7: R_X86_64_32S	.rodata.str1.1+0x252d
   1dfdb:	e8 00 00 00 00       	callq  1dfe0 <e1000_copper_link_igp_setup+0x1f0>
			1dfdc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1dfe0:	41 8b 45 10          	mov    0x10(%r13),%eax
   1dfe4:	83 f8 0d             	cmp    $0xd,%eax
   1dfe7:	0f 86 ef 00 00 00    	jbe    1e0dc <e1000_copper_link_igp_setup+0x2ec>
   1dfed:	83 f8 12             	cmp    $0x12,%eax
   1dff0:	75 18                	jne    1e00a <e1000_copper_link_igp_setup+0x21a>
   1dff2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1dff5: R_X86_64_32S	.rodata.str1.1+0xae
   1dff9:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1dffd:	e8 00 00 00 00       	callq  1e002 <e1000_copper_link_igp_setup+0x212>
			1dffe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e002:	8b 83 10 0f 00 00    	mov    0xf10(%rbx),%eax
   1e008:	eb 19                	jmp    1e023 <e1000_copper_link_igp_setup+0x233>
   1e00a:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1e00e:	be 19 00 00 00       	mov    $0x19,%esi
   1e013:	4c 89 ef             	mov    %r13,%rdi
   1e016:	e8 be 80 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e01b:	85 c0                	test   %eax,%eax
   1e01d:	0f 85 80 02 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e023:	41 83 7d 10 12       	cmpl   $0x12,0x10(%r13)
   1e028:	75 23                	jne    1e04d <e1000_copper_link_igp_setup+0x25d>
   1e02a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e02e:	41 89 c4             	mov    %eax,%r12d
   1e031:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e034: R_X86_64_32S	.rodata.str1.1+0xb4
   1e038:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
   1e03c:	e8 00 00 00 00       	callq  1e041 <e1000_copper_link_igp_setup+0x251>
			1e03d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e041:	48 81 c3 10 0f 00 00 	add    $0xf10,%rbx
   1e048:	44 89 23             	mov    %r12d,(%rbx)
   1e04b:	eb 22                	jmp    1e06f <e1000_copper_link_igp_setup+0x27f>
   1e04d:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1e050:	be 19 00 00 00       	mov    $0x19,%esi
   1e055:	4c 89 ef             	mov    %r13,%rdi
   1e058:	83 e2 fd             	and    $0xfffffffffffffffd,%edx
   1e05b:	66 89 55 e4          	mov    %dx,0xffffffffffffffe4(%rbp)
   1e05f:	0f b7 d2             	movzwl %dx,%edx
   1e062:	e8 20 7e fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e067:	85 c0                	test   %eax,%eax
   1e069:	0f 85 34 02 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e06f:	41 8b 85 04 01 00 00 	mov    0x104(%r13),%eax
   1e076:	83 f8 01             	cmp    $0x1,%eax
   1e079:	75 21                	jne    1e09c <e1000_copper_link_igp_setup+0x2ac>
   1e07b:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1e07f:	be 10 00 00 00       	mov    $0x10,%esi
   1e084:	4c 89 ef             	mov    %r13,%rdi
   1e087:	e8 4d 80 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e08c:	85 c0                	test   %eax,%eax
   1e08e:	0f 85 0f 02 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e094:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1e097:	80 ca 80             	or     $0x80,%dl
   1e09a:	eb 24                	jmp    1e0c0 <e1000_copper_link_igp_setup+0x2d0>
   1e09c:	83 f8 02             	cmp    $0x2,%eax
   1e09f:	75 3b                	jne    1e0dc <e1000_copper_link_igp_setup+0x2ec>
   1e0a1:	48 8d 55 e4          	lea    0xffffffffffffffe4(%rbp),%rdx
   1e0a5:	be 10 00 00 00       	mov    $0x10,%esi
   1e0aa:	4c 89 ef             	mov    %r13,%rdi
   1e0ad:	e8 27 80 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e0b2:	85 c0                	test   %eax,%eax
   1e0b4:	0f 85 e9 01 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e0ba:	8b 55 e4             	mov    0xffffffffffffffe4(%rbp),%edx
   1e0bd:	80 e2 7f             	and    $0x7f,%dl
   1e0c0:	66 89 55 e4          	mov    %dx,0xffffffffffffffe4(%rbp)
   1e0c4:	be 10 00 00 00       	mov    $0x10,%esi
   1e0c9:	0f b7 d2             	movzwl %dx,%edx
   1e0cc:	4c 89 ef             	mov    %r13,%rdi
   1e0cf:	e8 b3 7d fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e0d4:	85 c0                	test   %eax,%eax
   1e0d6:	0f 85 c7 01 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e0dc:	48 8d 55 e6          	lea    0xffffffffffffffe6(%rbp),%rdx
   1e0e0:	be 12 00 00 00       	mov    $0x12,%esi
   1e0e5:	4c 89 ef             	mov    %r13,%rdi
   1e0e8:	e8 ec 7f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e0ed:	85 c0                	test   %eax,%eax
   1e0ef:	0f 85 ae 01 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e0f5:	41 8b 45 10          	mov    0x10(%r13),%eax
   1e0f9:	83 f8 0a             	cmp    $0xa,%eax
   1e0fc:	74 05                	je     1e103 <e1000_copper_link_igp_setup+0x313>
   1e0fe:	83 f8 0c             	cmp    $0xc,%eax
   1e101:	75 1b                	jne    1e11e <e1000_copper_link_igp_setup+0x32e>
   1e103:	66 81 65 e6 ff cf    	andw   $0xcfff,0xffffffffffffffe6(%rbp)
   1e109:	41 c7 85 08 01 00 00 	movl   $0x0,0x108(%r13)
   1e110:	00 00 00 00 
   1e114:	41 c6 85 f0 00 00 00 	movb   $0x1,0xf0(%r13)
   1e11b:	01 
   1e11c:	eb 3a                	jmp    1e158 <e1000_copper_link_igp_setup+0x368>
   1e11e:	66 8b 45 e6          	mov    0xffffffffffffffe6(%rbp),%ax
   1e122:	41 8a 95 f0 00 00 00 	mov    0xf0(%r13),%dl
   1e129:	41 c7 85 08 01 00 00 	movl   $0x1,0x108(%r13)
   1e130:	01 00 00 00 
   1e134:	80 e4 ef             	and    $0xef,%ah
   1e137:	80 fa 01             	cmp    $0x1,%dl
   1e13a:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   1e13e:	74 07                	je     1e147 <e1000_copper_link_igp_setup+0x357>
   1e140:	80 fa 02             	cmp    $0x2,%dl
   1e143:	75 0c                	jne    1e151 <e1000_copper_link_igp_setup+0x361>
   1e145:	eb 05                	jmp    1e14c <e1000_copper_link_igp_setup+0x35c>
   1e147:	80 e4 df             	and    $0xdf,%ah
   1e14a:	eb 08                	jmp    1e154 <e1000_copper_link_igp_setup+0x364>
   1e14c:	80 cc 20             	or     $0x20,%ah
   1e14f:	eb 03                	jmp    1e154 <e1000_copper_link_igp_setup+0x364>
   1e151:	80 cc 10             	or     $0x10,%ah
   1e154:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   1e158:	0f b7 55 e6          	movzwl 0xffffffffffffffe6(%rbp),%edx
   1e15c:	be 12 00 00 00       	mov    $0x12,%esi
   1e161:	4c 89 ef             	mov    %r13,%rdi
   1e164:	e8 1e 7d fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e169:	85 c0                	test   %eax,%eax
   1e16b:	0f 85 32 01 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e171:	41 80 bd ef 00 00 00 	cmpb   $0x0,0xef(%r13)
   1e178:	00 
   1e179:	0f 84 24 01 00 00    	je     1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e17f:	41 83 7d 60 01       	cmpl   $0x1,0x60(%r13)
   1e184:	41 8b 5d 58          	mov    0x58(%r13),%ebx
   1e188:	75 08                	jne    1e192 <e1000_copper_link_igp_setup+0x3a2>
   1e18a:	41 c7 45 60 00 00 00 	movl   $0x0,0x60(%r13)
   1e191:	00 
   1e192:	41 83 bd 08 01 00 00 	cmpl   $0x2,0x108(%r13)
   1e199:	02 
   1e19a:	75 0b                	jne    1e1a7 <e1000_copper_link_igp_setup+0x3b7>
   1e19c:	41 c7 85 08 01 00 00 	movl   $0x1,0x108(%r13)
   1e1a3:	01 00 00 00 
   1e1a7:	66 41 83 bd d2 00 00 	cmpw   $0x20,0xd2(%r13)
   1e1ae:	00 20 
   1e1b0:	75 76                	jne    1e228 <e1000_copper_link_igp_setup+0x438>
   1e1b2:	4c 8d 65 e6          	lea    0xffffffffffffffe6(%rbp),%r12
   1e1b6:	be 10 00 00 00       	mov    $0x10,%esi
   1e1bb:	4c 89 ef             	mov    %r13,%rdi
   1e1be:	4c 89 e2             	mov    %r12,%rdx
   1e1c1:	e8 13 7f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e1c6:	85 c0                	test   %eax,%eax
   1e1c8:	0f 85 d5 00 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e1ce:	66 8b 55 e6          	mov    0xffffffffffffffe6(%rbp),%dx
   1e1d2:	be 10 00 00 00       	mov    $0x10,%esi
   1e1d7:	4c 89 ef             	mov    %r13,%rdi
   1e1da:	80 e2 7f             	and    $0x7f,%dl
   1e1dd:	66 89 55 e6          	mov    %dx,0xffffffffffffffe6(%rbp)
   1e1e1:	0f b7 d2             	movzwl %dx,%edx
   1e1e4:	e8 9e 7c fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e1e9:	85 c0                	test   %eax,%eax
   1e1eb:	0f 85 b2 00 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e1f1:	4c 89 e2             	mov    %r12,%rdx
   1e1f4:	be 09 00 00 00       	mov    $0x9,%esi
   1e1f9:	4c 89 ef             	mov    %r13,%rdi
   1e1fc:	e8 d8 7e fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e201:	85 c0                	test   %eax,%eax
   1e203:	0f 85 9a 00 00 00    	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e209:	66 8b 55 e6          	mov    0xffffffffffffffe6(%rbp),%dx
   1e20d:	be 09 00 00 00       	mov    $0x9,%esi
   1e212:	4c 89 ef             	mov    %r13,%rdi
   1e215:	80 e6 ef             	and    $0xef,%dh
   1e218:	66 89 55 e6          	mov    %dx,0xffffffffffffffe6(%rbp)
   1e21c:	0f b7 d2             	movzwl %dx,%edx
   1e21f:	e8 63 7c fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e224:	85 c0                	test   %eax,%eax
   1e226:	75 7b                	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e228:	48 8d 55 e6          	lea    0xffffffffffffffe6(%rbp),%rdx
   1e22c:	be 09 00 00 00       	mov    $0x9,%esi
   1e231:	4c 89 ef             	mov    %r13,%rdi
   1e234:	e8 a0 7e fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e239:	85 c0                	test   %eax,%eax
   1e23b:	75 66                	jne    1e2a3 <e1000_copper_link_igp_setup+0x4b3>
   1e23d:	0f b7 45 e6          	movzwl 0xffffffffffffffe6(%rbp),%eax
   1e241:	f6 c4 10             	test   $0x10,%ah
   1e244:	74 15                	je     1e25b <e1000_copper_link_igp_setup+0x46b>
   1e246:	25 00 08 00 00       	and    $0x800,%eax
   1e24b:	83 f8 01             	cmp    $0x1,%eax
   1e24e:	19 c0                	sbb    %eax,%eax
   1e250:	f7 d0                	not    %eax
   1e252:	83 c0 02             	add    $0x2,%eax
   1e255:	41 89 45 5c          	mov    %eax,0x5c(%r13)
   1e259:	eb 08                	jmp    1e263 <e1000_copper_link_igp_setup+0x473>
   1e25b:	41 c7 45 5c 03 00 00 	movl   $0x3,0x5c(%r13)
   1e262:	00 
   1e263:	83 fb 01             	cmp    $0x1,%ebx
   1e266:	74 0c                	je     1e274 <e1000_copper_link_igp_setup+0x484>
   1e268:	83 fb 02             	cmp    $0x2,%ebx
   1e26b:	74 0f                	je     1e27c <e1000_copper_link_igp_setup+0x48c>
   1e26d:	83 fb 03             	cmp    $0x3,%ebx
   1e270:	75 20                	jne    1e292 <e1000_copper_link_igp_setup+0x4a2>
   1e272:	eb 18                	jmp    1e28c <e1000_copper_link_igp_setup+0x49c>
   1e274:	66 81 4d e6 00 18    	orw    $0x1800,0xffffffffffffffe6(%rbp)
   1e27a:	eb 16                	jmp    1e292 <e1000_copper_link_igp_setup+0x4a2>
   1e27c:	66 8b 45 e6          	mov    0xffffffffffffffe6(%rbp),%ax
   1e280:	80 cc 10             	or     $0x10,%ah
   1e283:	80 e4 f7             	and    $0xf7,%ah
   1e286:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   1e28a:	eb 06                	jmp    1e292 <e1000_copper_link_igp_setup+0x4a2>
   1e28c:	66 81 65 e6 ff ef    	andw   $0xefff,0xffffffffffffffe6(%rbp)
   1e292:	0f b7 55 e6          	movzwl 0xffffffffffffffe6(%rbp),%edx
   1e296:	be 09 00 00 00       	mov    $0x9,%esi
   1e29b:	4c 89 ef             	mov    %r13,%rdi
   1e29e:	e8 e4 7b fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e2a3:	48 83 c4 18          	add    $0x18,%rsp
   1e2a7:	5b                   	pop    %rbx
   1e2a8:	41 5c                	pop    %r12
   1e2aa:	41 5d                	pop    %r13
   1e2ac:	c9                   	leaveq 
   1e2ad:	c3                   	retq   

000000000001e2ae <e1000_set_phy_loopback>:
   1e2ae:	55                   	push   %rbp
   1e2af:	48 89 e5             	mov    %rsp,%rbp
   1e2b2:	41 57                	push   %r15
   1e2b4:	41 56                	push   %r14
   1e2b6:	49 89 fe             	mov    %rdi,%r14
   1e2b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e2bc: R_X86_64_32S	.rodata.str1.1+0x2545
   1e2c0:	41 55                	push   %r13
   1e2c2:	41 54                	push   %r12
   1e2c4:	53                   	push   %rbx
   1e2c5:	49 8d 9e b8 03 00 00 	lea    0x3b8(%r14),%rbx
   1e2cc:	48 83 ec 18          	sub    $0x18,%rsp
   1e2d0:	e8 00 00 00 00       	callq  1e2d5 <e1000_set_phy_loopback+0x27>
			1e2d1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e2d5:	66 c7 45 d6 00 00    	movw   $0x0,0xffffffffffffffd6(%rbp)
   1e2db:	8b 43 10             	mov    0x10(%rbx),%eax
   1e2de:	83 f8 03             	cmp    $0x3,%eax
   1e2e1:	0f 84 8c 00 00 00    	je     1e373 <e1000_set_phy_loopback+0xc5>
   1e2e7:	83 f8 04             	cmp    $0x4,%eax
   1e2ea:	0f 84 d0 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e2f0:	83 f8 05             	cmp    $0x5,%eax
   1e2f3:	0f 84 c7 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e2f9:	83 f8 06             	cmp    $0x6,%eax
   1e2fc:	0f 84 be 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e302:	83 f8 07             	cmp    $0x7,%eax
   1e305:	0f 84 b5 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e30b:	83 f8 08             	cmp    $0x8,%eax
   1e30e:	0f 84 ac 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e314:	83 f8 09             	cmp    $0x9,%eax
   1e317:	0f 84 a3 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e31d:	83 f8 0a             	cmp    $0xa,%eax
   1e320:	0f 84 9a 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e326:	83 f8 0b             	cmp    $0xb,%eax
   1e329:	0f 84 91 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e32f:	83 f8 0c             	cmp    $0xc,%eax
   1e332:	0f 84 88 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e338:	83 f8 0d             	cmp    $0xd,%eax
   1e33b:	0f 84 7f 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e341:	83 f8 0e             	cmp    $0xe,%eax
   1e344:	0f 84 76 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e34a:	83 f8 0f             	cmp    $0xf,%eax
   1e34d:	0f 84 6d 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e353:	83 f8 10             	cmp    $0x10,%eax
   1e356:	0f 84 64 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e35c:	83 f8 11             	cmp    $0x11,%eax
   1e35f:	0f 84 5b 01 00 00    	je     1e4c0 <e1000_set_phy_loopback+0x212>
   1e365:	83 f8 12             	cmp    $0x12,%eax
   1e368:	0f 85 82 02 00 00    	jne    1e5f0 <e1000_set_phy_loopback+0x342>
   1e36e:	e9 4d 01 00 00       	jmpq   1e4c0 <e1000_set_phy_loopback+0x212>
   1e373:	83 7b 1c 00          	cmpl   $0x0,0x1c(%rbx)
   1e377:	0f 85 9d 02 00 00    	jne    1e61a <e1000_set_phy_loopback+0x36c>
   1e37d:	45 31 ff             	xor    %r15d,%r15d
   1e380:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e383: R_X86_64_32S	.rodata.str1.1+0x255c
   1e387:	4d 8d ae b8 03 00 00 	lea    0x3b8(%r14),%r13
   1e38e:	e8 00 00 00 00       	callq  1e393 <e1000_set_phy_loopback+0xe5>
			1e38f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e393:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e396: R_X86_64_32S	.rodata.str1.1+0xae
   1e39a:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
   1e3a1:	e8 00 00 00 00       	callq  1e3a6 <e1000_set_phy_loopback+0xf8>
			1e3a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e3a6:	8b 1b                	mov    (%rbx),%ebx
   1e3a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e3ab: R_X86_64_32S	.rodata.str1.1+0xb4
   1e3af:	4d 8b a6 b8 03 00 00 	mov    0x3b8(%r14),%r12
   1e3b6:	81 cb 81 1a 00 00    	or     $0x1a81,%ebx
   1e3bc:	e8 00 00 00 00       	callq  1e3c1 <e1000_set_phy_loopback+0x113>
			1e3bd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e3c1:	41 89 1c 24          	mov    %ebx,(%r12)
   1e3c5:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   1e3c9:	be 10 00 00 00       	mov    $0x10,%esi
   1e3ce:	4c 89 ef             	mov    %r13,%rdi
   1e3d1:	48 89 da             	mov    %rbx,%rdx
   1e3d4:	e8 00 7d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e3d9:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   1e3dc:	be 10 00 00 00       	mov    $0x10,%esi
   1e3e1:	4c 89 ef             	mov    %r13,%rdi
   1e3e4:	83 e2 9f             	and    $0xffffffffffffff9f,%edx
   1e3e7:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   1e3eb:	0f b7 d2             	movzwl %dx,%edx
   1e3ee:	e8 94 7a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e3f3:	4c 89 ef             	mov    %r13,%rdi
   1e3f6:	e8 43 f9 ff ff       	callq  1dd3e <e1000_phy_reset>
   1e3fb:	4c 89 f7             	mov    %r14,%rdi
   1e3fe:	e8 35 8c fe ff       	callq  7038 <e1000_phy_reset_clk_and_crs>
   1e403:	31 f6                	xor    %esi,%esi
   1e405:	ba 00 81 00 00       	mov    $0x8100,%edx
   1e40a:	4c 89 ef             	mov    %r13,%rdi
   1e40d:	e8 75 7a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e412:	bf ac c4 20 00       	mov    $0x20c4ac,%edi
   1e417:	e8 40 65 fe ff       	callq  495c <__const_udelay>
   1e41c:	4c 89 f7             	mov    %r14,%rdi
   1e41f:	e8 14 8c fe ff       	callq  7038 <e1000_phy_reset_clk_and_crs>
   1e424:	4c 89 f7             	mov    %r14,%rdi
   1e427:	e8 42 7c fe ff       	callq  606e <e1000_phy_disable_receiver>
   1e42c:	31 f6                	xor    %esi,%esi
   1e42e:	48 89 da             	mov    %rbx,%rdx
   1e431:	4c 89 ef             	mov    %r13,%rdi
   1e434:	e8 a0 7c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e439:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   1e43c:	31 f6                	xor    %esi,%esi
   1e43e:	4c 89 ef             	mov    %r13,%rdi
   1e441:	80 ce 40             	or     $0x40,%dh
   1e444:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   1e448:	0f b7 d2             	movzwl %dx,%edx
   1e44b:	e8 37 7a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e450:	4c 89 f7             	mov    %r14,%rdi
   1e453:	e8 e0 8b fe ff       	callq  7038 <e1000_phy_reset_clk_and_crs>
   1e458:	31 f6                	xor    %esi,%esi
   1e45a:	48 89 da             	mov    %rbx,%rdx
   1e45d:	4c 89 ef             	mov    %r13,%rdi
   1e460:	e8 74 7c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e465:	66 81 7d d4 00 41    	cmpw   $0x4100,0xffffffffffffffd4(%rbp)
   1e46b:	75 2e                	jne    1e49b <e1000_set_phy_loopback+0x1ed>
   1e46d:	48 89 da             	mov    %rbx,%rdx
   1e470:	be 14 00 00 00       	mov    $0x14,%esi
   1e475:	4c 89 ef             	mov    %r13,%rdi
   1e478:	e8 5c 7c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e47d:	66 83 7d d4 70       	cmpw   $0x70,0xffffffffffffffd4(%rbp)
   1e482:	75 17                	jne    1e49b <e1000_set_phy_loopback+0x1ed>
   1e484:	48 89 da             	mov    %rbx,%rdx
   1e487:	be 1d 00 00 00       	mov    $0x1d,%esi
   1e48c:	4c 89 ef             	mov    %r13,%rdi
   1e48f:	e8 45 7c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e494:	66 83 7d d4 1a       	cmpw   $0x1a,0xffffffffffffffd4(%rbp)
   1e499:	74 13                	je     1e4ae <e1000_set_phy_loopback+0x200>
   1e49b:	41 ff c7             	inc    %r15d
   1e49e:	66 41 83 ff 0b       	cmp    $0xb,%r15w
   1e4a3:	0f 84 71 01 00 00    	je     1e61a <e1000_set_phy_loopback+0x36c>
   1e4a9:	e9 d2 fe ff ff       	jmpq   1e380 <e1000_set_phy_loopback+0xd2>
   1e4ae:	31 c0                	xor    %eax,%eax
   1e4b0:	66 41 83 ff 0a       	cmp    $0xa,%r15w
   1e4b5:	0f 86 64 01 00 00    	jbe    1e61f <e1000_set_phy_loopback+0x371>
   1e4bb:	e9 5a 01 00 00       	jmpq   1e61a <e1000_set_phy_loopback+0x36c>
   1e4c0:	4d 8d ae b8 03 00 00 	lea    0x3b8(%r14),%r13
   1e4c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e4ca: R_X86_64_32S	.rodata.str1.1+0x257d
   1e4ce:	e8 00 00 00 00       	callq  1e4d3 <e1000_set_phy_loopback+0x225>
			1e4cf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e4d3:	41 8b 45 14          	mov    0x14(%r13),%eax
   1e4d7:	41 c6 85 ef 00 00 00 	movb   $0x0,0xef(%r13)
   1e4de:	00 
   1e4df:	85 c0                	test   %eax,%eax
   1e4e1:	75 2a                	jne    1e50d <e1000_set_phy_loopback+0x25f>
   1e4e3:	ba 08 08 00 00       	mov    $0x808,%edx
   1e4e8:	be 10 00 00 00       	mov    $0x10,%esi
   1e4ed:	4c 89 ef             	mov    %r13,%rdi
   1e4f0:	e8 92 79 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e4f5:	ba 40 91 00 00       	mov    $0x9140,%edx
   1e4fa:	31 f6                	xor    %esi,%esi
   1e4fc:	4c 89 ef             	mov    %r13,%rdi
   1e4ff:	e8 83 79 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e504:	ba 40 81 00 00       	mov    $0x8140,%edx
   1e509:	31 f6                	xor    %esi,%esi
   1e50b:	eb 0f                	jmp    1e51c <e1000_set_phy_loopback+0x26e>
   1e50d:	83 f8 03             	cmp    $0x3,%eax
   1e510:	75 12                	jne    1e524 <e1000_set_phy_loopback+0x276>
   1e512:	ba cc 01 00 00       	mov    $0x1cc,%edx
   1e517:	be 30 18 00 00       	mov    $0x1830,%esi
   1e51c:	4c 89 ef             	mov    %r13,%rdi
   1e51f:	e8 63 79 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e524:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e527: R_X86_64_32S	.rodata.str1.1+0xae
   1e52b:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e52f:	e8 00 00 00 00       	callq  1e534 <e1000_set_phy_loopback+0x286>
			1e530: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e534:	8b 1b                	mov    (%rbx),%ebx
   1e536:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
   1e53b:	75 22                	jne    1e55f <e1000_set_phy_loopback+0x2b1>
   1e53d:	41 89 dc             	mov    %ebx,%r12d
   1e540:	ba 00 61 00 00       	mov    $0x6100,%edx
   1e545:	31 f6                	xor    %esi,%esi
   1e547:	41 81 e4 ff fc ff ff 	and    $0xfffffcff,%r12d
   1e54e:	4c 89 ef             	mov    %r13,%rdi
   1e551:	41 81 cc 01 19 00 00 	or     $0x1901,%r12d
   1e558:	e8 2a 79 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e55d:	eb 30                	jmp    1e58f <e1000_set_phy_loopback+0x2e1>
   1e55f:	ba 40 41 00 00       	mov    $0x4140,%edx
   1e564:	31 f6                	xor    %esi,%esi
   1e566:	4c 89 ef             	mov    %r13,%rdi
   1e569:	e8 19 79 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e56e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e571: R_X86_64_32S	.rodata.str1.1+0xae
   1e575:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e579:	e8 00 00 00 00       	callq  1e57e <e1000_set_phy_loopback+0x2d0>
			1e57a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e57e:	44 8b 23             	mov    (%rbx),%r12d
   1e581:	41 81 e4 ff fc ff ff 	and    $0xfffffcff,%r12d
   1e588:	41 81 cc 01 1a 00 00 	or     $0x1a01,%r12d
   1e58f:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   1e594:	75 0d                	jne    1e5a3 <e1000_set_phy_loopback+0x2f5>
   1e596:	41 83 7d 14 00       	cmpl   $0x0,0x14(%r13)
   1e59b:	75 06                	jne    1e5a3 <e1000_set_phy_loopback+0x2f5>
   1e59d:	41 80 cc 80          	or     $0x80,%r12b
   1e5a1:	eb 1f                	jmp    1e5c2 <e1000_set_phy_loopback+0x314>
   1e5a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e5a6: R_X86_64_32S	.rodata.str1.1+0xae
   1e5aa:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e5ae:	e8 00 00 00 00       	callq  1e5b3 <e1000_set_phy_loopback+0x305>
			1e5af: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e5b3:	8b 43 08             	mov    0x8(%rbx),%eax
   1e5b6:	44 89 e2             	mov    %r12d,%edx
   1e5b9:	80 ca c0             	or     $0xc0,%dl
   1e5bc:	a8 01                	test   $0x1,%al
   1e5be:	44 0f 44 e2          	cmove  %edx,%r12d
   1e5c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e5c5: R_X86_64_32S	.rodata.str1.1+0xb4
   1e5c9:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e5cd:	e8 00 00 00 00       	callq  1e5d2 <e1000_set_phy_loopback+0x324>
			1e5ce: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e5d2:	44 89 23             	mov    %r12d,(%rbx)
   1e5d5:	41 83 7d 14 00       	cmpl   $0x0,0x14(%r13)
   1e5da:	75 08                	jne    1e5e4 <e1000_set_phy_loopback+0x336>
   1e5dc:	4c 89 f7             	mov    %r14,%rdi
   1e5df:	e8 8a 7a fe ff       	callq  606e <e1000_phy_disable_receiver>
   1e5e4:	bf ac c4 20 00       	mov    $0x20c4ac,%edi
   1e5e9:	e8 6e 63 fe ff       	callq  495c <__const_udelay>
   1e5ee:	eb 26                	jmp    1e616 <e1000_set_phy_loopback+0x368>
   1e5f0:	48 8d 55 d6          	lea    0xffffffffffffffd6(%rbp),%rdx
   1e5f4:	31 f6                	xor    %esi,%esi
   1e5f6:	48 89 df             	mov    %rbx,%rdi
   1e5f9:	e8 db 7a fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e5fe:	66 8b 55 d6          	mov    0xffffffffffffffd6(%rbp),%dx
   1e602:	31 f6                	xor    %esi,%esi
   1e604:	48 89 df             	mov    %rbx,%rdi
   1e607:	80 ce 40             	or     $0x40,%dh
   1e60a:	66 89 55 d6          	mov    %dx,0xffffffffffffffd6(%rbp)
   1e60e:	0f b7 d2             	movzwl %dx,%edx
   1e611:	e8 71 78 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1e616:	31 c0                	xor    %eax,%eax
   1e618:	eb 05                	jmp    1e61f <e1000_set_phy_loopback+0x371>
   1e61a:	b8 08 00 00 00       	mov    $0x8,%eax
   1e61f:	48 83 c4 18          	add    $0x18,%rsp
   1e623:	5b                   	pop    %rbx
   1e624:	41 5c                	pop    %r12
   1e626:	41 5d                	pop    %r13
   1e628:	41 5e                	pop    %r14
   1e62a:	41 5f                	pop    %r15
   1e62c:	c9                   	leaveq 
   1e62d:	c3                   	retq   

000000000001e62e <e1000_setup_copper_link>:
   1e62e:	55                   	push   %rbp
   1e62f:	48 89 e5             	mov    %rsp,%rbp
   1e632:	41 56                	push   %r14
   1e634:	41 55                	push   %r13
   1e636:	49 89 fd             	mov    %rdi,%r13
   1e639:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e63c: R_X86_64_32S	.rodata.str1.1+0x259b
   1e640:	41 54                	push   %r12
   1e642:	53                   	push   %rbx
   1e643:	48 83 ec 10          	sub    $0x10,%rsp
   1e647:	e8 00 00 00 00       	callq  1e64c <e1000_setup_copper_link+0x1e>
			1e648: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e64c:	41 8b 45 10          	mov    0x10(%r13),%eax
   1e650:	83 f8 11             	cmp    $0x11,%eax
   1e653:	74 09                	je     1e65e <e1000_setup_copper_link+0x30>
   1e655:	83 f8 12             	cmp    $0x12,%eax
   1e658:	0f 85 ce 00 00 00    	jne    1e72c <e1000_setup_copper_link+0xfe>
   1e65e:	ba ff ff 00 00       	mov    $0xffff,%edx
   1e663:	be 84 06 00 00       	mov    $0x684,%esi
   1e668:	4c 89 ef             	mov    %r13,%rdi
   1e66b:	e8 f9 74 fe ff       	callq  5b69 <e1000_write_kmrn_reg>
   1e670:	85 c0                	test   %eax,%eax
   1e672:	89 c3                	mov    %eax,%ebx
   1e674:	0f 85 4b 0e 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e67a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e67d: R_X86_64_32S	.rodata.str1.1+0x25b3
   1e681:	e8 00 00 00 00       	callq  1e686 <e1000_setup_copper_link+0x58>
			1e682: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e686:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
   1e68b:	75 1c                	jne    1e6a9 <e1000_setup_copper_link+0x7b>
   1e68d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e690: R_X86_64_32S	.rodata.str1.1+0xae
   1e694:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e698:	e8 00 00 00 00       	callq  1e69d <e1000_setup_copper_link+0x6f>
			1e699: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e69d:	8b 43 08             	mov    0x8(%rbx),%eax
   1e6a0:	a8 04                	test   $0x4,%al
   1e6a2:	ba 04 00 00 00       	mov    $0x4,%edx
   1e6a7:	75 05                	jne    1e6ae <e1000_setup_copper_link+0x80>
   1e6a9:	ba 02 00 00 00       	mov    $0x2,%edx
   1e6ae:	44 0f b7 e2          	movzwl %dx,%r12d
   1e6b2:	4c 89 ef             	mov    %r13,%rdi
   1e6b5:	bb f3 ff ff ff       	mov    $0xfffffff3,%ebx
   1e6ba:	44 89 e6             	mov    %r12d,%esi
   1e6bd:	e8 20 72 fe ff       	callq  58e2 <e1000_swfw_sync_acquire>
   1e6c2:	85 c0                	test   %eax,%eax
   1e6c4:	0f 85 fb 0d 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e6ca:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e6ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e6d1: R_X86_64_32S	.rodata.str1.1+0xb4
   1e6d5:	e8 00 00 00 00       	callq  1e6da <e1000_setup_copper_link+0xac>
			1e6d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e6da:	b8 00 00 29 00       	mov    $0x290000,%eax
   1e6df:	48 83 c3 34          	add    $0x34,%rbx
   1e6e3:	89 03                	mov    %eax,(%rbx)
   1e6e5:	bf 8e 21 00 00       	mov    $0x218e,%edi
   1e6ea:	e8 6d 62 fe ff       	callq  495c <__const_udelay>
   1e6ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e6f2: R_X86_64_32S	.rodata.str1.1+0xae
   1e6f6:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e6fa:	e8 00 00 00 00       	callq  1e6ff <e1000_setup_copper_link+0xd1>
			1e6fb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e6ff:	8b 43 34             	mov    0x34(%rbx),%eax
   1e702:	89 c3                	mov    %eax,%ebx
   1e704:	44 89 e6             	mov    %r12d,%esi
   1e707:	4c 89 ef             	mov    %r13,%rdi
   1e70a:	83 cb 3f             	or     $0x3f,%ebx
   1e70d:	e8 7e 6b fe ff       	callq  5290 <e1000_swfw_sync_release>
   1e712:	0f b7 d3             	movzwl %bx,%edx
   1e715:	be 89 06 00 00       	mov    $0x689,%esi
   1e71a:	4c 89 ef             	mov    %r13,%rdi
   1e71d:	e8 47 74 fe ff       	callq  5b69 <e1000_write_kmrn_reg>
   1e722:	85 c0                	test   %eax,%eax
   1e724:	89 c3                	mov    %eax,%ebx
   1e726:	0f 85 99 0d 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e72c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e72f: R_X86_64_32S	.rodata.str1.1+0x25c7
   1e733:	e8 00 00 00 00       	callq  1e738 <e1000_setup_copper_link+0x10a>
			1e734: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e738:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e73b: R_X86_64_32S	.rodata.str1.1+0xae
   1e73f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1e743:	e8 00 00 00 00       	callq  1e748 <e1000_setup_copper_link+0x11a>
			1e744: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e748:	8b 03                	mov    (%rbx),%eax
   1e74a:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
   1e74f:	4d 8b 65 00          	mov    0x0(%r13),%r12
   1e753:	76 1a                	jbe    1e76f <e1000_setup_copper_link+0x141>
   1e755:	89 c3                	mov    %eax,%ebx
   1e757:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e75a: R_X86_64_32S	.rodata.str1.1+0xb4
   1e75e:	83 cb 40             	or     $0x40,%ebx
   1e761:	80 e7 e7             	and    $0xe7,%bh
   1e764:	e8 00 00 00 00       	callq  1e769 <e1000_setup_copper_link+0x13b>
			1e765: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e769:	41 89 1c 24          	mov    %ebx,(%r12)
   1e76d:	eb 2a                	jmp    1e799 <e1000_setup_copper_link+0x16b>
   1e76f:	89 c3                	mov    %eax,%ebx
   1e771:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e774: R_X86_64_32S	.rodata.str1.1+0xb4
   1e778:	81 cb 40 18 00 00    	or     $0x1840,%ebx
   1e77e:	e8 00 00 00 00       	callq  1e783 <e1000_setup_copper_link+0x155>
			1e77f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e783:	41 89 1c 24          	mov    %ebx,(%r12)
   1e787:	4c 89 ef             	mov    %r13,%rdi
   1e78a:	e8 9d e2 ff ff       	callq  1ca2c <e1000_phy_hw_reset>
   1e78f:	85 c0                	test   %eax,%eax
   1e791:	89 c3                	mov    %eax,%ebx
   1e793:	0f 85 2c 0d 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e799:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e79c: R_X86_64_32S	.rodata.str1.1+0x25e3
   1e7a0:	e8 00 00 00 00       	callq  1e7a5 <e1000_setup_copper_link+0x177>
			1e7a1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e7a5:	41 83 bd 80 00 00 00 	cmpl   $0x0,0x80(%r13)
   1e7ac:	00 
   1e7ad:	0f 85 39 02 00 00    	jne    1e9ec <e1000_setup_copper_link+0x3be>
   1e7b3:	41 8b 45 10          	mov    0x10(%r13),%eax
   1e7b7:	83 f8 0e             	cmp    $0xe,%eax
   1e7ba:	74 05                	je     1e7c1 <e1000_setup_copper_link+0x193>
   1e7bc:	83 f8 0f             	cmp    $0xf,%eax
   1e7bf:	75 18                	jne    1e7d9 <e1000_setup_copper_link+0x1ab>
   1e7c1:	41 c7 85 80 00 00 00 	movl   $0x2a80380,0x80(%r13)
   1e7c8:	80 03 a8 02 
   1e7cc:	41 c7 45 14 02 00 00 	movl   $0x2,0x14(%r13)
   1e7d3:	00 
   1e7d4:	e9 13 02 00 00       	jmpq   1e9ec <e1000_setup_copper_link+0x3be>
   1e7d9:	83 f8 11             	cmp    $0x11,%eax
   1e7dc:	75 08                	jne    1e7e6 <e1000_setup_copper_link+0x1b8>
   1e7de:	41 c7 45 14 03 00 00 	movl   $0x3,0x14(%r13)
   1e7e5:	00 
   1e7e6:	48 8d 55 dc          	lea    0xffffffffffffffdc(%rbp),%rdx
   1e7ea:	be 02 00 00 00       	mov    $0x2,%esi
   1e7ef:	4c 89 ef             	mov    %r13,%rdi
   1e7f2:	e8 e2 78 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e7f7:	85 c0                	test   %eax,%eax
   1e7f9:	89 c3                	mov    %eax,%ebx
   1e7fb:	0f 85 c4 0c 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e801:	0f b7 45 dc          	movzwl 0xffffffffffffffdc(%rbp),%eax
   1e805:	bf 8c 4f 01 00       	mov    $0x14f8c,%edi
   1e80a:	c1 e0 10             	shl    $0x10,%eax
   1e80d:	41 89 85 80 00 00 00 	mov    %eax,0x80(%r13)
   1e814:	e8 43 61 fe ff       	callq  495c <__const_udelay>
   1e819:	48 8d 55 da          	lea    0xffffffffffffffda(%rbp),%rdx
   1e81d:	be 03 00 00 00       	mov    $0x3,%esi
   1e822:	4c 89 ef             	mov    %r13,%rdi
   1e825:	e8 af 78 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1e82a:	85 c0                	test   %eax,%eax
   1e82c:	89 c3                	mov    %eax,%ebx
   1e82e:	0f 85 91 0c 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e834:	0f b7 45 da          	movzwl 0xffffffffffffffda(%rbp),%eax
   1e838:	89 c2                	mov    %eax,%edx
   1e83a:	83 e0 0f             	and    $0xf,%eax
   1e83d:	83 e2 f0             	and    $0xfffffffffffffff0,%edx
   1e840:	41 89 85 84 00 00 00 	mov    %eax,0x84(%r13)
   1e847:	41 0b 95 80 00 00 00 	or     0x80(%r13),%edx
   1e84e:	41 8b 45 10          	mov    0x10(%r13),%eax
   1e852:	83 f8 03             	cmp    $0x3,%eax
   1e855:	41 89 95 80 00 00 00 	mov    %edx,0x80(%r13)
   1e85c:	74 4c                	je     1e8aa <e1000_setup_copper_link+0x27c>
   1e85e:	83 f8 04             	cmp    $0x4,%eax
   1e861:	74 4f                	je     1e8b2 <e1000_setup_copper_link+0x284>
   1e863:	83 f8 05             	cmp    $0x5,%eax
   1e866:	74 55                	je     1e8bd <e1000_setup_copper_link+0x28f>
   1e868:	83 f8 06             	cmp    $0x6,%eax
   1e86b:	74 50                	je     1e8bd <e1000_setup_copper_link+0x28f>
   1e86d:	83 f8 07             	cmp    $0x7,%eax
   1e870:	74 4b                	je     1e8bd <e1000_setup_copper_link+0x28f>
   1e872:	83 f8 08             	cmp    $0x8,%eax
   1e875:	74 46                	je     1e8bd <e1000_setup_copper_link+0x28f>
   1e877:	83 f8 09             	cmp    $0x9,%eax
   1e87a:	74 41                	je     1e8bd <e1000_setup_copper_link+0x28f>
   1e87c:	83 f8 0a             	cmp    $0xa,%eax
   1e87f:	74 49                	je     1e8ca <e1000_setup_copper_link+0x29c>
   1e881:	83 f8 0b             	cmp    $0xb,%eax
   1e884:	74 44                	je     1e8ca <e1000_setup_copper_link+0x29c>
   1e886:	83 f8 0c             	cmp    $0xc,%eax
   1e889:	74 3f                	je     1e8ca <e1000_setup_copper_link+0x29c>
   1e88b:	83 f8 0d             	cmp    $0xd,%eax
   1e88e:	74 3a                	je     1e8ca <e1000_setup_copper_link+0x29c>
   1e890:	83 f8 10             	cmp    $0x10,%eax
   1e893:	74 42                	je     1e8d7 <e1000_setup_copper_link+0x2a9>
   1e895:	83 f8 11             	cmp    $0x11,%eax
   1e898:	74 45                	je     1e8df <e1000_setup_copper_link+0x2b1>
   1e89a:	83 f8 12             	cmp    $0x12,%eax
   1e89d:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
   1e8a2:	0f 85 1d 0c 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1e8a8:	eb 3d                	jmp    1e8e7 <e1000_setup_copper_link+0x2b9>
   1e8aa:	81 fa 50 0c 41 01    	cmp    $0x1410c50,%edx
   1e8b0:	eb 06                	jmp    1e8b8 <e1000_setup_copper_link+0x28a>
   1e8b2:	81 fa 30 0c 41 01    	cmp    $0x1410c30,%edx
   1e8b8:	0f 94 c3             	sete   %bl
   1e8bb:	eb 59                	jmp    1e916 <e1000_setup_copper_link+0x2e8>
   1e8bd:	41 81 bd 80 00 00 00 	cmpl   $0x1410c20,0x80(%r13)
   1e8c4:	20 0c 41 01 
   1e8c8:	eb ee                	jmp    1e8b8 <e1000_setup_copper_link+0x28a>
   1e8ca:	41 81 bd 80 00 00 00 	cmpl   $0x2a80380,0x80(%r13)
   1e8d1:	80 03 a8 02 
   1e8d5:	eb e1                	jmp    1e8b8 <e1000_setup_copper_link+0x28a>
   1e8d7:	81 fa c0 0c 41 01    	cmp    $0x1410cc0,%edx
   1e8dd:	eb d9                	jmp    1e8b8 <e1000_setup_copper_link+0x28a>
   1e8df:	81 fa a0 0c 41 01    	cmp    $0x1410ca0,%edx
   1e8e5:	eb d1                	jmp    1e8b8 <e1000_setup_copper_link+0x28a>
   1e8e7:	81 fa 30 03 a8 02    	cmp    $0x2a80330,%edx
   1e8ed:	b3 01                	mov    $0x1,%bl
   1e8ef:	74 09                	je     1e8fa <e1000_setup_copper_link+0x2cc>
   1e8f1:	81 fa 90 03 a8 02    	cmp    $0x2a80390,%edx
   1e8f7:	0f 94 c3             	sete   %bl
   1e8fa:	41 8b 85 80 00 00 00 	mov    0x80(%r13),%eax
   1e901:	3d 20 03 a8 02       	cmp    $0x2a80320,%eax
   1e906:	75 04                	jne    1e90c <e1000_setup_copper_link+0x2de>
   1e908:	b3 01                	mov    $0x1,%bl
   1e90a:	eb 0a                	jmp    1e916 <e1000_setup_copper_link+0x2e8>
   1e90c:	3d 10 03 a8 02       	cmp    $0x2a80310,%eax
   1e911:	b0 01                	mov    $0x1,%al
   1e913:	0f 44 d8             	cmove  %eax,%ebx
   1e916:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e919: R_X86_64_32S	.rodata.str1.1+0x25f8
   1e91d:	e8 00 00 00 00       	callq  1e922 <e1000_setup_copper_link+0x2f4>
			1e91e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e922:	41 8b 55 10          	mov    0x10(%r13),%edx
   1e926:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1e92b:	85 d2                	test   %edx,%edx
   1e92d:	0f 84 a9 00 00 00    	je     1e9dc <e1000_setup_copper_link+0x3ae>
   1e933:	41 8b 85 80 00 00 00 	mov    0x80(%r13),%eax
   1e93a:	3d 50 0c 41 01       	cmp    $0x1410c50,%eax
   1e93f:	74 41                	je     1e982 <e1000_setup_copper_link+0x354>
   1e941:	3d 30 0c 41 01       	cmp    $0x1410c30,%eax
   1e946:	74 3a                	je     1e982 <e1000_setup_copper_link+0x354>
   1e948:	3d 20 0c 41 01       	cmp    $0x1410c20,%eax
   1e94d:	74 33                	je     1e982 <e1000_setup_copper_link+0x354>
   1e94f:	3d c0 0c 41 01       	cmp    $0x1410cc0,%eax
   1e954:	74 2c                	je     1e982 <e1000_setup_copper_link+0x354>
   1e956:	3d 80 03 a8 02       	cmp    $0x2a80380,%eax
   1e95b:	74 2f                	je     1e98c <e1000_setup_copper_link+0x35e>
   1e95d:	3d 90 03 a8 02       	cmp    $0x2a80390,%eax
   1e962:	74 48                	je     1e9ac <e1000_setup_copper_link+0x37e>
   1e964:	3d 30 03 a8 02       	cmp    $0x2a80330,%eax
   1e969:	74 4b                	je     1e9b6 <e1000_setup_copper_link+0x388>
   1e96b:	3d 20 03 a8 02       	cmp    $0x2a80320,%eax
   1e970:	74 44                	je     1e9b6 <e1000_setup_copper_link+0x388>
   1e972:	3d 10 03 a8 02       	cmp    $0x2a80310,%eax
   1e977:	74 3d                	je     1e9b6 <e1000_setup_copper_link+0x388>
   1e979:	3d a0 0c 41 01       	cmp    $0x1410ca0,%eax
   1e97e:	75 4f                	jne    1e9cf <e1000_setup_copper_link+0x3a1>
   1e980:	eb 3e                	jmp    1e9c0 <e1000_setup_copper_link+0x392>
   1e982:	41 c7 45 14 00 00 00 	movl   $0x0,0x14(%r13)
   1e989:	00 
   1e98a:	eb 0d                	jmp    1e999 <e1000_setup_copper_link+0x36b>
   1e98c:	83 fa 0a             	cmp    $0xa,%edx
   1e98f:	75 0c                	jne    1e99d <e1000_setup_copper_link+0x36f>
   1e991:	41 c7 45 14 01 00 00 	movl   $0x1,0x14(%r13)
   1e998:	00 
   1e999:	31 c0                	xor    %eax,%eax
   1e99b:	eb 3f                	jmp    1e9dc <e1000_setup_copper_link+0x3ae>
   1e99d:	83 fa 0b             	cmp    $0xb,%edx
   1e9a0:	74 ef                	je     1e991 <e1000_setup_copper_link+0x363>
   1e9a2:	83 fa 0c             	cmp    $0xc,%edx
   1e9a5:	74 ea                	je     1e991 <e1000_setup_copper_link+0x363>
   1e9a7:	83 fa 0d             	cmp    $0xd,%edx
   1e9aa:	74 e5                	je     1e991 <e1000_setup_copper_link+0x363>
   1e9ac:	41 c7 45 14 04 00 00 	movl   $0x4,0x14(%r13)
   1e9b3:	00 
   1e9b4:	eb e3                	jmp    1e999 <e1000_setup_copper_link+0x36b>
   1e9b6:	41 c7 45 14 05 00 00 	movl   $0x5,0x14(%r13)
   1e9bd:	00 
   1e9be:	eb d9                	jmp    1e999 <e1000_setup_copper_link+0x36b>
   1e9c0:	83 fa 11             	cmp    $0x11,%edx
   1e9c3:	75 0a                	jne    1e9cf <e1000_setup_copper_link+0x3a1>
   1e9c5:	41 c7 45 14 03 00 00 	movl   $0x3,0x14(%r13)
   1e9cc:	00 
   1e9cd:	eb ca                	jmp    1e999 <e1000_setup_copper_link+0x36b>
   1e9cf:	41 c7 45 14 ff 00 00 	movl   $0xff,0x14(%r13)
   1e9d6:	00 
   1e9d7:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1e9dc:	84 db                	test   %bl,%bl
   1e9de:	0f 84 b8 0a 00 00    	je     1f49c <e1000_setup_copper_link+0xe6e>
   1e9e4:	85 c0                	test   %eax,%eax
   1e9e6:	0f 85 b0 0a 00 00    	jne    1f49c <e1000_setup_copper_link+0xe6e>
   1e9ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e9ef: R_X86_64_32S	.rodata.str1.1+0x260b
   1e9f3:	e8 00 00 00 00       	callq  1e9f8 <e1000_setup_copper_link+0x3ca>
			1e9f4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1e9f8:	41 83 7d 10 07       	cmpl   $0x7,0x10(%r13)
   1e9fd:	0f 85 a0 0a 00 00    	jne    1f4a3 <e1000_setup_copper_link+0xe75>
   1ea03:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   1ea08:	0f 85 95 0a 00 00    	jne    1f4a3 <e1000_setup_copper_link+0xe75>
   1ea0e:	48 8d 4d da          	lea    0xffffffffffffffda(%rbp),%rcx
   1ea12:	ba 01 00 00 00       	mov    $0x1,%edx
   1ea17:	be 07 00 00 00       	mov    $0x7,%esi
   1ea1c:	4c 89 ef             	mov    %r13,%rdi
   1ea1f:	e8 eb dc ff ff       	callq  1c70f <e1000_read_eeprom>
   1ea24:	85 c0                	test   %eax,%eax
   1ea26:	89 c3                	mov    %eax,%ebx
   1ea28:	0f 85 97 0a 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ea2e:	66 8b 45 da          	mov    0xffffffffffffffda(%rbp),%ax
   1ea32:	66 83 f8 ff          	cmp    $0xffffffffffffffff,%ax
   1ea36:	0f 84 67 0a 00 00    	je     1f4a3 <e1000_setup_copper_link+0xe75>
   1ea3c:	66 85 c0             	test   %ax,%ax
   1ea3f:	0f 89 5e 0a 00 00    	jns    1f4a3 <e1000_setup_copper_link+0xe75>
   1ea45:	ba 0b 00 00 00       	mov    $0xb,%edx
   1ea4a:	be 1d 00 00 00       	mov    $0x1d,%esi
   1ea4f:	4c 89 ef             	mov    %r13,%rdi
   1ea52:	e8 30 74 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ea57:	85 c0                	test   %eax,%eax
   1ea59:	89 c3                	mov    %eax,%ebx
   1ea5b:	0f 85 64 0a 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ea61:	ba 04 81 00 00       	mov    $0x8104,%edx
   1ea66:	be 1e 00 00 00       	mov    $0x1e,%esi
   1ea6b:	4c 89 ef             	mov    %r13,%rdi
   1ea6e:	e8 14 74 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ea73:	85 c0                	test   %eax,%eax
   1ea75:	89 c3                	mov    %eax,%ebx
   1ea77:	0f 85 48 0a 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ea7d:	41 c6 85 11 01 00 00 	movb   $0x0,0x111(%r13)
   1ea84:	00 
   1ea85:	e9 19 0a 00 00       	jmpq   1f4a3 <e1000_setup_copper_link+0xe75>
   1ea8a:	83 f8 09             	cmp    $0x9,%eax
   1ea8d:	75 2b                	jne    1eaba <e1000_setup_copper_link+0x48c>
   1ea8f:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1ea93:	be 10 00 00 00       	mov    $0x10,%esi
   1ea98:	4c 89 ef             	mov    %r13,%rdi
   1ea9b:	e8 39 76 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1eaa0:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1eaa3:	be 10 00 00 00       	mov    $0x10,%esi
   1eaa8:	4c 89 ef             	mov    %r13,%rdi
   1eaab:	83 ca 08             	or     $0x8,%edx
   1eaae:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1eab2:	0f b7 d2             	movzwl %dx,%edx
   1eab5:	e8 cd 73 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1eaba:	41 8b 45 10          	mov    0x10(%r13),%eax
   1eabe:	83 f8 03             	cmp    $0x3,%eax
   1eac1:	76 18                	jbe    1eadb <e1000_setup_copper_link+0x4ad>
   1eac3:	83 f8 0a             	cmp    $0xa,%eax
   1eac6:	74 13                	je     1eadb <e1000_setup_copper_link+0x4ad>
   1eac8:	83 f8 0c             	cmp    $0xc,%eax
   1eacb:	74 0e                	je     1eadb <e1000_setup_copper_link+0x4ad>
   1eacd:	83 f8 0b             	cmp    $0xb,%eax
   1ead0:	74 09                	je     1eadb <e1000_setup_copper_link+0x4ad>
   1ead2:	83 f8 0d             	cmp    $0xd,%eax
   1ead5:	0f 85 da 09 00 00    	jne    1f4b5 <e1000_setup_copper_link+0xe87>
   1eadb:	41 c6 85 11 01 00 00 	movb   $0x0,0x111(%r13)
   1eae2:	00 
   1eae3:	e9 cd 09 00 00       	jmpq   1f4b5 <e1000_setup_copper_link+0xe87>
   1eae8:	ba 10 05 00 00       	mov    $0x510,%edx
   1eaed:	be 02 00 00 00       	mov    $0x2,%esi
   1eaf2:	4c 89 ef             	mov    %r13,%rdi
   1eaf5:	e8 6f 70 fe ff       	callq  5b69 <e1000_write_kmrn_reg>
   1eafa:	85 c0                	test   %eax,%eax
   1eafc:	89 c3                	mov    %eax,%ebx
   1eafe:	0f 85 c1 09 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1eb04:	41 8b 45 14          	mov    0x14(%r13),%eax
   1eb08:	83 f8 01             	cmp    $0x1,%eax
   1eb0b:	74 0a                	je     1eb17 <e1000_setup_copper_link+0x4e9>
   1eb0d:	83 f8 04             	cmp    $0x4,%eax
   1eb10:	74 05                	je     1eb17 <e1000_setup_copper_link+0x4e9>
   1eb12:	83 f8 02             	cmp    $0x2,%eax
   1eb15:	75 0d                	jne    1eb24 <e1000_setup_copper_link+0x4f6>
   1eb17:	4c 89 ef             	mov    %r13,%rdi
   1eb1a:	e8 d1 f2 ff ff       	callq  1ddf0 <e1000_copper_link_igp_setup>
   1eb1f:	e9 78 03 00 00       	jmpq   1ee9c <e1000_setup_copper_link+0x86e>
   1eb24:	85 c0                	test   %eax,%eax
   1eb26:	0f 85 27 01 00 00    	jne    1ec53 <e1000_setup_copper_link+0x625>
   1eb2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1eb2f: R_X86_64_32S	.rodata.str1.1+0x261e
   1eb33:	e8 00 00 00 00       	callq  1eb38 <e1000_setup_copper_link+0x50a>
			1eb34: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1eb38:	41 80 bd 11 01 00 00 	cmpb   $0x0,0x111(%r13)
   1eb3f:	00 
   1eb40:	0f 85 60 03 00 00    	jne    1eea6 <e1000_setup_copper_link+0x878>
   1eb46:	48 8d 55 da          	lea    0xffffffffffffffda(%rbp),%rdx
   1eb4a:	be 10 00 00 00       	mov    $0x10,%esi
   1eb4f:	4c 89 ef             	mov    %r13,%rdi
   1eb52:	e8 82 75 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1eb57:	85 c0                	test   %eax,%eax
   1eb59:	89 c3                	mov    %eax,%ebx
   1eb5b:	0f 85 64 09 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1eb61:	66 8b 45 da          	mov    0xffffffffffffffda(%rbp),%ax
   1eb65:	80 cc 08             	or     $0x8,%ah
   1eb68:	83 e0 9f             	and    $0xffffffffffffff9f,%eax
   1eb6b:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1eb6f:	41 8a 95 f0 00 00 00 	mov    0xf0(%r13),%dl
   1eb76:	80 fa 01             	cmp    $0x1,%dl
   1eb79:	74 19                	je     1eb94 <e1000_setup_copper_link+0x566>
   1eb7b:	80 fa 02             	cmp    $0x2,%dl
   1eb7e:	74 07                	je     1eb87 <e1000_setup_copper_link+0x559>
   1eb80:	80 fa 03             	cmp    $0x3,%dl
   1eb83:	75 0c                	jne    1eb91 <e1000_setup_copper_link+0x563>
   1eb85:	eb 05                	jmp    1eb8c <e1000_setup_copper_link+0x55e>
   1eb87:	83 c8 20             	or     $0x20,%eax
   1eb8a:	eb 08                	jmp    1eb94 <e1000_setup_copper_link+0x566>
   1eb8c:	83 c8 40             	or     $0x40,%eax
   1eb8f:	eb 03                	jmp    1eb94 <e1000_setup_copper_link+0x566>
   1eb91:	83 c8 60             	or     $0x60,%eax
   1eb94:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1eb98:	66 8b 45 da          	mov    0xffffffffffffffda(%rbp),%ax
   1eb9c:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   1eb9f:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1eba3:	41 80 bd 00 01 00 00 	cmpb   $0x0,0x100(%r13)
   1ebaa:	00 
   1ebab:	74 07                	je     1ebb4 <e1000_setup_copper_link+0x586>
   1ebad:	83 c8 02             	or     $0x2,%eax
   1ebb0:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1ebb4:	0f b7 55 da          	movzwl 0xffffffffffffffda(%rbp),%edx
   1ebb8:	be 10 00 00 00       	mov    $0x10,%esi
   1ebbd:	4c 89 ef             	mov    %r13,%rdi
   1ebc0:	e8 c2 72 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ebc5:	85 c0                	test   %eax,%eax
   1ebc7:	89 c3                	mov    %eax,%ebx
   1ebc9:	0f 85 f6 08 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ebcf:	41 83 bd 84 00 00 00 	cmpl   $0x3,0x84(%r13)
   1ebd6:	03 
   1ebd7:	77 6d                	ja     1ec46 <e1000_setup_copper_link+0x618>
   1ebd9:	48 8d 55 da          	lea    0xffffffffffffffda(%rbp),%rdx
   1ebdd:	be 14 00 00 00       	mov    $0x14,%esi
   1ebe2:	4c 89 ef             	mov    %r13,%rdi
   1ebe5:	e8 ef 74 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ebea:	85 c0                	test   %eax,%eax
   1ebec:	89 c3                	mov    %eax,%ebx
   1ebee:	0f 85 d1 08 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ebf4:	66 8b 45 da          	mov    0xffffffffffffffda(%rbp),%ax
   1ebf8:	83 c8 70             	or     $0x70,%eax
   1ebfb:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1ebff:	41 83 bd 84 00 00 00 	cmpl   $0x2,0x84(%r13)
   1ec06:	02 
   1ec07:	75 17                	jne    1ec20 <e1000_setup_copper_link+0x5f2>
   1ec09:	41 81 bd 80 00 00 00 	cmpl   $0x1410cc0,0x80(%r13)
   1ec10:	c0 0c 41 01 
   1ec14:	75 0a                	jne    1ec20 <e1000_setup_copper_link+0x5f2>
   1ec16:	89 c2                	mov    %eax,%edx
   1ec18:	80 e6 f1             	and    $0xf1,%dh
   1ec1b:	80 ce 08             	or     $0x8,%dh
   1ec1e:	eb 08                	jmp    1ec28 <e1000_setup_copper_link+0x5fa>
   1ec20:	89 c2                	mov    %eax,%edx
   1ec22:	80 e6 f0             	and    $0xf0,%dh
   1ec25:	80 ce 01             	or     $0x1,%dh
   1ec28:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1ec2c:	be 14 00 00 00       	mov    $0x14,%esi
   1ec31:	0f b7 d2             	movzwl %dx,%edx
   1ec34:	4c 89 ef             	mov    %r13,%rdi
   1ec37:	e8 4b 72 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ec3c:	85 c0                	test   %eax,%eax
   1ec3e:	89 c3                	mov    %eax,%ebx
   1ec40:	0f 85 7f 08 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ec46:	4c 89 ef             	mov    %r13,%rdi
   1ec49:	e8 f0 f0 ff ff       	callq  1dd3e <e1000_phy_reset>
   1ec4e:	e9 49 02 00 00       	jmpq   1ee9c <e1000_setup_copper_link+0x86e>
   1ec53:	83 f8 03             	cmp    $0x3,%eax
   1ec56:	0f 85 4a 02 00 00    	jne    1eea6 <e1000_setup_copper_link+0x878>
   1ec5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ec5f: R_X86_64_32S	.rodata.str1.1+0x263a
   1ec63:	e8 00 00 00 00       	callq  1ec68 <e1000_setup_copper_link+0x63a>
			1ec64: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ec68:	41 80 bd 11 01 00 00 	cmpb   $0x0,0x111(%r13)
   1ec6f:	00 
   1ec70:	0f 85 ce 00 00 00    	jne    1ed44 <e1000_setup_copper_link+0x716>
   1ec76:	4c 8d 65 da          	lea    0xffffffffffffffda(%rbp),%r12
   1ec7a:	be 55 00 00 00       	mov    $0x55,%esi
   1ec7f:	4c 89 ef             	mov    %r13,%rdi
   1ec82:	4c 89 e2             	mov    %r12,%rdx
   1ec85:	e8 4f 74 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ec8a:	85 c0                	test   %eax,%eax
   1ec8c:	89 c3                	mov    %eax,%ebx
   1ec8e:	0f 85 31 08 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ec94:	66 8b 55 da          	mov    0xffffffffffffffda(%rbp),%dx
   1ec98:	be 55 00 00 00       	mov    $0x55,%esi
   1ec9d:	4c 89 ef             	mov    %r13,%rdi
   1eca0:	83 ca 17             	or     $0x17,%edx
   1eca3:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1eca7:	0f b7 d2             	movzwl %dx,%edx
   1ecaa:	e8 d8 71 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ecaf:	85 c0                	test   %eax,%eax
   1ecb1:	89 c3                	mov    %eax,%ebx
   1ecb3:	0f 85 0c 08 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ecb9:	4c 89 e2             	mov    %r12,%rdx
   1ecbc:	be 10 00 00 00       	mov    $0x10,%esi
   1ecc1:	4c 89 ef             	mov    %r13,%rdi
   1ecc4:	e8 10 74 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ecc9:	85 c0                	test   %eax,%eax
   1eccb:	89 c3                	mov    %eax,%ebx
   1eccd:	0f 85 f2 07 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ecd3:	66 8b 45 da          	mov    0xffffffffffffffda(%rbp),%ax
   1ecd7:	83 e0 9f             	and    $0xffffffffffffff9f,%eax
   1ecda:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1ecde:	41 8a 95 f0 00 00 00 	mov    0xf0(%r13),%dl
   1ece5:	80 fa 01             	cmp    $0x1,%dl
   1ece8:	74 0d                	je     1ecf7 <e1000_setup_copper_link+0x6c9>
   1ecea:	80 fa 02             	cmp    $0x2,%dl
   1eced:	75 05                	jne    1ecf4 <e1000_setup_copper_link+0x6c6>
   1ecef:	83 c8 20             	or     $0x20,%eax
   1ecf2:	eb 03                	jmp    1ecf7 <e1000_setup_copper_link+0x6c9>
   1ecf4:	83 c8 60             	or     $0x60,%eax
   1ecf7:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1ecfb:	66 8b 45 da          	mov    0xffffffffffffffda(%rbp),%ax
   1ecff:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   1ed02:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1ed06:	41 80 bd 00 01 00 00 	cmpb   $0x0,0x100(%r13)
   1ed0d:	00 
   1ed0e:	74 07                	je     1ed17 <e1000_setup_copper_link+0x6e9>
   1ed10:	83 c8 02             	or     $0x2,%eax
   1ed13:	66 89 45 da          	mov    %ax,0xffffffffffffffda(%rbp)
   1ed17:	0f b7 55 da          	movzwl 0xffffffffffffffda(%rbp),%edx
   1ed1b:	be 10 00 00 00       	mov    $0x10,%esi
   1ed20:	4c 89 ef             	mov    %r13,%rdi
   1ed23:	e8 5f 71 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ed28:	85 c0                	test   %eax,%eax
   1ed2a:	89 c3                	mov    %eax,%ebx
   1ed2c:	0f 85 93 07 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ed32:	4c 89 ef             	mov    %r13,%rdi
   1ed35:	e8 04 f0 ff ff       	callq  1dd3e <e1000_phy_reset>
   1ed3a:	85 c0                	test   %eax,%eax
   1ed3c:	89 c3                	mov    %eax,%ebx
   1ed3e:	0f 85 81 07 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ed44:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
   1ed49:	0f 85 57 01 00 00    	jne    1eea6 <e1000_setup_copper_link+0x878>
   1ed4f:	31 f6                	xor    %esi,%esi
   1ed51:	ba 08 08 00 00       	mov    $0x808,%edx
   1ed56:	4c 89 ef             	mov    %r13,%rdi
   1ed59:	e8 0b 6e fe ff       	callq  5b69 <e1000_write_kmrn_reg>
   1ed5e:	85 c0                	test   %eax,%eax
   1ed60:	89 c3                	mov    %eax,%ebx
   1ed62:	0f 85 5d 07 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ed68:	4c 8d 75 da          	lea    0xffffffffffffffda(%rbp),%r14
   1ed6c:	be 1a 00 00 00       	mov    $0x1a,%esi
   1ed71:	4c 89 ef             	mov    %r13,%rdi
   1ed74:	4c 89 f2             	mov    %r14,%rdx
   1ed77:	e8 5d 73 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ed7c:	85 c0                	test   %eax,%eax
   1ed7e:	89 c3                	mov    %eax,%ebx
   1ed80:	0f 85 3f 07 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ed86:	66 8b 55 da          	mov    0xffffffffffffffda(%rbp),%dx
   1ed8a:	be 1a 00 00 00       	mov    $0x1a,%esi
   1ed8f:	4c 89 ef             	mov    %r13,%rdi
   1ed92:	80 e6 df             	and    $0xdf,%dh
   1ed95:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1ed99:	0f b7 d2             	movzwl %dx,%edx
   1ed9c:	e8 e6 70 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1eda1:	85 c0                	test   %eax,%eax
   1eda3:	89 c3                	mov    %eax,%ebx
   1eda5:	0f 85 1a 07 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1edab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1edae: R_X86_64_32S	.rodata.str1.1+0xae
   1edb2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1edb6:	e8 00 00 00 00       	callq  1edbb <e1000_setup_copper_link+0x78d>
			1edb7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1edbb:	44 8b 63 18          	mov    0x18(%rbx),%r12d
   1edbf:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1edc3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1edc6: R_X86_64_32S	.rodata.str1.1+0xb4
   1edca:	41 81 e4 ff ff 3f ff 	and    $0xff3fffff,%r12d
   1edd1:	e8 00 00 00 00       	callq  1edd6 <e1000_setup_copper_link+0x7a8>
			1edd2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1edd6:	48 83 c3 18          	add    $0x18,%rbx
   1edda:	44 89 23             	mov    %r12d,(%rbx)
   1eddd:	be 34 18 00 00       	mov    $0x1834,%esi
   1ede2:	4c 89 f2             	mov    %r14,%rdx
   1ede5:	4c 89 ef             	mov    %r13,%rdi
   1ede8:	e8 ec 72 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1eded:	85 c0                	test   %eax,%eax
   1edef:	89 c3                	mov    %eax,%ebx
   1edf1:	0f 85 ce 06 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1edf7:	4c 89 ef             	mov    %r13,%rdi
   1edfa:	e8 f0 13 fe ff       	callq  1ef <e1000_check_mng_mode>
   1edff:	84 c0                	test   %al,%al
   1ee01:	75 64                	jne    1ee67 <e1000_setup_copper_link+0x839>
   1ee03:	66 8b 55 da          	mov    0xffffffffffffffda(%rbp),%dx
   1ee07:	be 34 18 00 00       	mov    $0x1834,%esi
   1ee0c:	4c 89 ef             	mov    %r13,%rdi
   1ee0f:	83 ca 01             	or     $0x1,%edx
   1ee12:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1ee16:	0f b7 d2             	movzwl %dx,%edx
   1ee19:	e8 69 70 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ee1e:	85 c0                	test   %eax,%eax
   1ee20:	89 c3                	mov    %eax,%ebx
   1ee22:	0f 85 9d 06 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ee28:	4c 89 f2             	mov    %r14,%rdx
   1ee2b:	be 30 18 00 00       	mov    $0x1830,%esi
   1ee30:	4c 89 ef             	mov    %r13,%rdi
   1ee33:	e8 a1 72 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ee38:	85 c0                	test   %eax,%eax
   1ee3a:	89 c3                	mov    %eax,%ebx
   1ee3c:	0f 85 83 06 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ee42:	66 8b 55 da          	mov    0xffffffffffffffda(%rbp),%dx
   1ee46:	be 30 18 00 00       	mov    $0x1830,%esi
   1ee4b:	4c 89 ef             	mov    %r13,%rdi
   1ee4e:	80 e6 f7             	and    $0xf7,%dh
   1ee51:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1ee55:	0f b7 d2             	movzwl %dx,%edx
   1ee58:	e8 2a 70 fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ee5d:	85 c0                	test   %eax,%eax
   1ee5f:	89 c3                	mov    %eax,%ebx
   1ee61:	0f 85 5e 06 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ee67:	4c 89 f2             	mov    %r14,%rdx
   1ee6a:	be 52 18 00 00       	mov    $0x1852,%esi
   1ee6f:	4c 89 ef             	mov    %r13,%rdi
   1ee72:	e8 62 72 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ee77:	85 c0                	test   %eax,%eax
   1ee79:	89 c3                	mov    %eax,%ebx
   1ee7b:	0f 85 44 06 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ee81:	66 8b 55 da          	mov    0xffffffffffffffda(%rbp),%dx
   1ee85:	be 52 18 00 00       	mov    $0x1852,%esi
   1ee8a:	4c 89 ef             	mov    %r13,%rdi
   1ee8d:	83 ca 10             	or     $0x10,%edx
   1ee90:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1ee94:	0f b7 d2             	movzwl %dx,%edx
   1ee97:	e8 eb 6f fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ee9c:	85 c0                	test   %eax,%eax
   1ee9e:	89 c3                	mov    %eax,%ebx
   1eea0:	0f 85 1f 06 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1eea6:	41 80 bd ef 00 00 00 	cmpb   $0x0,0xef(%r13)
   1eead:	00 
   1eeae:	0f 84 03 01 00 00    	je     1efb7 <e1000_setup_copper_link+0x989>
   1eeb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1eeb7: R_X86_64_32S	.rodata.str1.1+0x2656
   1eebb:	e8 00 00 00 00       	callq  1eec0 <e1000_setup_copper_link+0x892>
			1eebc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1eec0:	66 41 8b 85 d2 00 00 	mov    0xd2(%r13),%ax
   1eec7:	00 
   1eec8:	ba 2f 00 00 00       	mov    $0x2f,%edx
   1eecd:	66 83 e0 2f          	and    $0x2f,%ax
   1eed1:	0f 45 d0             	cmovne %eax,%edx
   1eed4:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
   1eed9:	66 41 89 95 d2 00 00 	mov    %dx,0xd2(%r13)
   1eee0:	00 
   1eee1:	75 0b                	jne    1eeee <e1000_setup_copper_link+0x8c0>
   1eee3:	83 e2 0f             	and    $0xf,%edx
   1eee6:	66 41 89 95 d2 00 00 	mov    %dx,0xd2(%r13)
   1eeed:	00 
   1eeee:	4c 89 ef             	mov    %r13,%rdi
   1eef1:	e8 d0 7f fe ff       	callq  6ec6 <e1000_phy_setup_autoneg>
   1eef6:	85 c0                	test   %eax,%eax
   1eef8:	89 c3                	mov    %eax,%ebx
   1eefa:	0f 85 c5 05 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ef00:	48 8d 55 da          	lea    0xffffffffffffffda(%rbp),%rdx
   1ef04:	31 f6                	xor    %esi,%esi
   1ef06:	4c 89 ef             	mov    %r13,%rdi
   1ef09:	e8 cb 71 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ef0e:	85 c0                	test   %eax,%eax
   1ef10:	89 c3                	mov    %eax,%ebx
   1ef12:	0f 85 ad 05 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ef18:	66 8b 55 da          	mov    0xffffffffffffffda(%rbp),%dx
   1ef1c:	31 f6                	xor    %esi,%esi
   1ef1e:	4c 89 ef             	mov    %r13,%rdi
   1ef21:	80 ce 12             	or     $0x12,%dh
   1ef24:	66 89 55 da          	mov    %dx,0xffffffffffffffda(%rbp)
   1ef28:	0f b7 d2             	movzwl %dx,%edx
   1ef2b:	e8 57 6f fe ff       	callq  5e87 <e1000_write_phy_reg>
   1ef30:	85 c0                	test   %eax,%eax
   1ef32:	89 c3                	mov    %eax,%ebx
   1ef34:	0f 85 8b 05 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ef3a:	41 80 bd f2 00 00 00 	cmpb   $0x0,0xf2(%r13)
   1ef41:	00 
   1ef42:	74 66                	je     1efaa <e1000_setup_copper_link+0x97c>
   1ef44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ef47: R_X86_64_32S	.rodata.str1.1+0x2670
   1ef4b:	41 be 2d 00 00 00    	mov    $0x2d,%r14d
   1ef51:	e8 00 00 00 00       	callq  1ef56 <e1000_setup_copper_link+0x928>
			1ef52: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ef56:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
   1ef5a:	be 01 00 00 00       	mov    $0x1,%esi
   1ef5f:	4c 89 ef             	mov    %r13,%rdi
   1ef62:	4c 89 e2             	mov    %r12,%rdx
   1ef65:	e8 6f 71 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ef6a:	85 c0                	test   %eax,%eax
   1ef6c:	89 c3                	mov    %eax,%ebx
   1ef6e:	0f 85 51 05 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ef74:	4c 89 e2             	mov    %r12,%rdx
   1ef77:	be 01 00 00 00       	mov    $0x1,%esi
   1ef7c:	4c 89 ef             	mov    %r13,%rdi
   1ef7f:	e8 55 71 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1ef84:	85 c0                	test   %eax,%eax
   1ef86:	89 c3                	mov    %eax,%ebx
   1ef88:	0f 85 37 05 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1ef8e:	f6 45 dc 20          	testb  $0x20,0xffffffffffffffdc(%rbp)
   1ef92:	75 16                	jne    1efaa <e1000_setup_copper_link+0x97c>
   1ef94:	bf 64 00 00 00       	mov    $0x64,%edi
   1ef99:	e8 b2 8b fe ff       	callq  7b50 <msleep>
   1ef9e:	66 41 83 fe 01       	cmp    $0x1,%r14w
   1efa3:	74 05                	je     1efaa <e1000_setup_copper_link+0x97c>
   1efa5:	41 ff ce             	dec    %r14d
   1efa8:	eb ac                	jmp    1ef56 <e1000_setup_copper_link+0x928>
   1efaa:	41 c6 85 0c 01 00 00 	movb   $0x1,0x10c(%r13)
   1efb1:	01 
   1efb2:	e9 3a 04 00 00       	jmpq   1f3f1 <e1000_setup_copper_link+0xdc3>
   1efb7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1efba: R_X86_64_32S	.rodata.str1.1+0x2683
   1efbe:	e8 00 00 00 00       	callq  1efc3 <e1000_setup_copper_link+0x995>
			1efbf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1efc3:	41 c7 45 38 00 00 00 	movl   $0x0,0x38(%r13)
   1efca:	00 
   1efcb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1efce: R_X86_64_32S	.rodata.str1.1+0xae
   1efd2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1efd6:	e8 00 00 00 00       	callq  1efdb <e1000_setup_copper_link+0x9ad>
			1efd7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1efdb:	44 8b 23             	mov    (%rbx),%r12d
   1efde:	48 8d 55 dc          	lea    0xffffffffffffffdc(%rbp),%rdx
   1efe2:	31 f6                	xor    %esi,%esi
   1efe4:	4c 89 ef             	mov    %r13,%rdi
   1efe7:	e8 ed 70 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1efec:	85 c0                	test   %eax,%eax
   1efee:	89 c3                	mov    %eax,%ebx
   1eff0:	0f 85 cf 04 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1eff6:	8b 55 dc             	mov    0xffffffffffffffdc(%rbp),%edx
   1eff9:	44 89 e7             	mov    %r12d,%edi
   1effc:	81 cf 00 18 00 00    	or     $0x1800,%edi
   1f002:	89 fe                	mov    %edi,%esi
   1f004:	89 d0                	mov    %edx,%eax
   1f006:	81 e6 df fc ff ff    	and    $0xfffffcdf,%esi
   1f00c:	80 e4 ef             	and    $0xef,%ah
   1f00f:	66 89 45 dc          	mov    %ax,0xffffffffffffffdc(%rbp)
   1f013:	41 8a 8d f1 00 00 00 	mov    0xf1(%r13),%cl
   1f01a:	80 f9 03             	cmp    $0x3,%cl
   1f01d:	74 04                	je     1f023 <e1000_setup_copper_link+0x9f5>
   1f01f:	fe c9                	dec    %cl
   1f021:	75 0e                	jne    1f031 <e1000_setup_copper_link+0xa03>
   1f023:	89 f1                	mov    %esi,%ecx
   1f025:	80 cc 01             	or     $0x1,%ah
   1f028:	83 c9 01             	or     $0x1,%ecx
   1f02b:	66 89 45 dc          	mov    %ax,0xffffffffffffffdc(%rbp)
   1f02f:	eb 0f                	jmp    1f040 <e1000_setup_copper_link+0xa12>
   1f031:	89 f9                	mov    %edi,%ecx
   1f033:	80 e6 ee             	and    $0xee,%dh
   1f036:	81 e1 de fc ff ff    	and    $0xfffffcde,%ecx
   1f03c:	66 89 55 dc          	mov    %dx,0xffffffffffffffdc(%rbp)
   1f040:	41 8a 85 f1 00 00 00 	mov    0xf1(%r13),%al
   1f047:	3c 03                	cmp    $0x3,%al
   1f049:	75 0f                	jne    1f05a <e1000_setup_copper_link+0xa2c>
   1f04b:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
   1f04e:	41 89 cc             	mov    %ecx,%r12d
   1f051:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   1f058:	eb 11                	jmp    1f06b <e1000_setup_copper_link+0xa3d>
   1f05a:	3c 02                	cmp    $0x2,%al
   1f05c:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
   1f05f:	75 12                	jne    1f073 <e1000_setup_copper_link+0xa45>
   1f061:	41 89 cc             	mov    %ecx,%r12d
   1f064:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   1f06b:	80 cc 20             	or     $0x20,%ah
   1f06e:	83 e0 bf             	and    $0xffffffffffffffbf,%eax
   1f071:	eb 0e                	jmp    1f081 <e1000_setup_copper_link+0xa53>
   1f073:	41 89 cc             	mov    %ecx,%r12d
   1f076:	66 25 bf df          	and    $0xdfbf,%ax
   1f07a:	41 81 e4 ff fc ff ff 	and    $0xfffffcff,%r12d
   1f081:	4c 89 ef             	mov    %r13,%rdi
   1f084:	66 89 45 dc          	mov    %ax,0xffffffffffffffdc(%rbp)
   1f088:	e8 3b 15 fe ff       	callq  5c8 <e1000_config_collision_dist>
   1f08d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f090: R_X86_64_32S	.rodata.str1.1+0xb4
   1f094:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   1f098:	e8 00 00 00 00       	callq  1f09d <e1000_setup_copper_link+0xa6f>
			1f099: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f09d:	44 89 23             	mov    %r12d,(%rbx)
   1f0a0:	41 8b 45 14          	mov    0x14(%r13),%eax
   1f0a4:	85 c0                	test   %eax,%eax
   1f0a6:	74 05                	je     1f0ad <e1000_setup_copper_link+0xa7f>
   1f0a8:	83 f8 03             	cmp    $0x3,%eax
   1f0ab:	75 47                	jne    1f0f4 <e1000_setup_copper_link+0xac6>
   1f0ad:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1f0b1:	be 10 00 00 00       	mov    $0x10,%esi
   1f0b6:	4c 89 ef             	mov    %r13,%rdi
   1f0b9:	e8 1b 70 fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f0be:	85 c0                	test   %eax,%eax
   1f0c0:	89 c3                	mov    %eax,%ebx
   1f0c2:	0f 85 fd 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f0c8:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1f0cb:	be 10 00 00 00       	mov    $0x10,%esi
   1f0d0:	4c 89 ef             	mov    %r13,%rdi
   1f0d3:	83 e2 9f             	and    $0xffffffffffffff9f,%edx
   1f0d6:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1f0da:	0f b7 d2             	movzwl %dx,%edx
   1f0dd:	e8 a5 6d fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f0e2:	85 c0                	test   %eax,%eax
   1f0e4:	89 c3                	mov    %eax,%ebx
   1f0e6:	0f 85 d9 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f0ec:	66 81 4d dc 00 80    	orw    $0x8000,0xffffffffffffffdc(%rbp)
   1f0f2:	eb 6f                	jmp    1f163 <e1000_setup_copper_link+0xb35>
   1f0f4:	83 f8 05             	cmp    $0x5,%eax
   1f0f7:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1f0fb:	75 2b                	jne    1f128 <e1000_setup_copper_link+0xafa>
   1f0fd:	be 1c 00 00 00       	mov    $0x1c,%esi
   1f102:	4c 89 ef             	mov    %r13,%rdi
   1f105:	e8 cf 6f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f10a:	85 c0                	test   %eax,%eax
   1f10c:	89 c3                	mov    %eax,%ebx
   1f10e:	0f 85 b1 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f114:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1f117:	be 1c 00 00 00       	mov    $0x1c,%esi
   1f11c:	80 e2 3f             	and    $0x3f,%dl
   1f11f:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1f123:	0f b7 d2             	movzwl %dx,%edx
   1f126:	eb 29                	jmp    1f151 <e1000_setup_copper_link+0xb23>
   1f128:	be 12 00 00 00       	mov    $0x12,%esi
   1f12d:	4c 89 ef             	mov    %r13,%rdi
   1f130:	e8 a4 6f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f135:	85 c0                	test   %eax,%eax
   1f137:	89 c3                	mov    %eax,%ebx
   1f139:	0f 85 86 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f13f:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1f142:	be 12 00 00 00       	mov    $0x12,%esi
   1f147:	80 e6 cf             	and    $0xcf,%dh
   1f14a:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1f14e:	0f b7 d2             	movzwl %dx,%edx
   1f151:	4c 89 ef             	mov    %r13,%rdi
   1f154:	e8 2e 6d fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f159:	85 c0                	test   %eax,%eax
   1f15b:	89 c3                	mov    %eax,%ebx
   1f15d:	0f 85 62 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f163:	0f b7 55 dc          	movzwl 0xffffffffffffffdc(%rbp),%edx
   1f167:	31 f6                	xor    %esi,%esi
   1f169:	4c 89 ef             	mov    %r13,%rdi
   1f16c:	e8 16 6d fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f171:	85 c0                	test   %eax,%eax
   1f173:	89 c3                	mov    %eax,%ebx
   1f175:	0f 85 4a 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f17b:	bf c7 10 00 00       	mov    $0x10c7,%edi
   1f180:	e8 d7 57 fe ff       	callq  495c <__const_udelay>
   1f185:	41 80 bd f2 00 00 00 	cmpb   $0x0,0xf2(%r13)
   1f18c:	00 
   1f18d:	0f 84 2f 01 00 00    	je     1f2c2 <e1000_setup_copper_link+0xc94>
   1f193:	66 c7 45 da 00 00    	movw   $0x0,0xffffffffffffffda(%rbp)
   1f199:	41 be 14 00 00 00    	mov    $0x14,%r14d
   1f19f:	4c 8d 65 da          	lea    0xffffffffffffffda(%rbp),%r12
   1f1a3:	be 01 00 00 00       	mov    $0x1,%esi
   1f1a8:	4c 89 ef             	mov    %r13,%rdi
   1f1ab:	4c 89 e2             	mov    %r12,%rdx
   1f1ae:	e8 26 6f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f1b3:	85 c0                	test   %eax,%eax
   1f1b5:	89 c3                	mov    %eax,%ebx
   1f1b7:	0f 85 08 03 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f1bd:	4c 89 e2             	mov    %r12,%rdx
   1f1c0:	be 01 00 00 00       	mov    $0x1,%esi
   1f1c5:	4c 89 ef             	mov    %r13,%rdi
   1f1c8:	e8 0c 6f fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f1cd:	85 c0                	test   %eax,%eax
   1f1cf:	89 c3                	mov    %eax,%ebx
   1f1d1:	0f 85 ee 02 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f1d7:	f6 45 da 04          	testb  $0x4,0xffffffffffffffda(%rbp)
   1f1db:	0f 85 87 00 00 00    	jne    1f268 <e1000_setup_copper_link+0xc3a>
   1f1e1:	bf 64 00 00 00       	mov    $0x64,%edi
   1f1e6:	e8 65 89 fe ff       	callq  7b50 <msleep>
   1f1eb:	66 41 83 fe 01       	cmp    $0x1,%r14w
   1f1f0:	74 05                	je     1f1f7 <e1000_setup_copper_link+0xbc9>
   1f1f2:	41 ff ce             	dec    %r14d
   1f1f5:	eb a8                	jmp    1f19f <e1000_setup_copper_link+0xb71>
   1f1f7:	41 8b 45 14          	mov    0x14(%r13),%eax
   1f1fb:	85 c0                	test   %eax,%eax
   1f1fd:	74 05                	je     1f204 <e1000_setup_copper_link+0xbd6>
   1f1ff:	83 f8 03             	cmp    $0x3,%eax
   1f202:	75 64                	jne    1f268 <e1000_setup_copper_link+0xc3a>
   1f204:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f207: R_X86_64_32S	.rodata.str1.1+0x26a0
   1f20b:	e8 00 00 00 00       	callq  1f210 <e1000_setup_copper_link+0xbe2>
			1f20c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f210:	41 83 7d 14 03       	cmpl   $0x3,0x14(%r13)
   1f215:	74 1c                	je     1f233 <e1000_setup_copper_link+0xc05>
   1f217:	ba 1d 00 00 00       	mov    $0x1d,%edx
   1f21c:	be 1d 00 00 00       	mov    $0x1d,%esi
   1f221:	4c 89 ef             	mov    %r13,%rdi
   1f224:	e8 5e 6c fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f229:	85 c0                	test   %eax,%eax
   1f22b:	89 c3                	mov    %eax,%ebx
   1f22d:	0f 85 92 02 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f233:	ba c1 00 00 00       	mov    $0xc1,%edx
   1f238:	be 1e 00 00 00       	mov    $0x1e,%esi
   1f23d:	4c 89 ef             	mov    %r13,%rdi
   1f240:	e8 42 6c fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f245:	85 c0                	test   %eax,%eax
   1f247:	89 c3                	mov    %eax,%ebx
   1f249:	0f 85 76 02 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f24f:	31 d2                	xor    %edx,%edx
   1f251:	be 1e 00 00 00       	mov    $0x1e,%esi
   1f256:	4c 89 ef             	mov    %r13,%rdi
   1f259:	e8 29 6c fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f25e:	85 c0                	test   %eax,%eax
   1f260:	89 c3                	mov    %eax,%ebx
   1f262:	0f 85 5d 02 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f268:	41 be 14 00 00 00    	mov    $0x14,%r14d
   1f26e:	f6 45 da 04          	testb  $0x4,0xffffffffffffffda(%rbp)
   1f272:	75 4e                	jne    1f2c2 <e1000_setup_copper_link+0xc94>
   1f274:	4c 8d 65 da          	lea    0xffffffffffffffda(%rbp),%r12
   1f278:	bf 64 00 00 00       	mov    $0x64,%edi
   1f27d:	e8 ce 88 fe ff       	callq  7b50 <msleep>
   1f282:	4c 89 e2             	mov    %r12,%rdx
   1f285:	be 01 00 00 00       	mov    $0x1,%esi
   1f28a:	4c 89 ef             	mov    %r13,%rdi
   1f28d:	e8 47 6e fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f292:	85 c0                	test   %eax,%eax
   1f294:	89 c3                	mov    %eax,%ebx
   1f296:	0f 85 29 02 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f29c:	4c 89 e2             	mov    %r12,%rdx
   1f29f:	be 01 00 00 00       	mov    $0x1,%esi
   1f2a4:	4c 89 ef             	mov    %r13,%rdi
   1f2a7:	e8 2d 6e fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f2ac:	85 c0                	test   %eax,%eax
   1f2ae:	89 c3                	mov    %eax,%ebx
   1f2b0:	0f 85 0f 02 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f2b6:	66 41 83 fe 01       	cmp    $0x1,%r14w
   1f2bb:	74 05                	je     1f2c2 <e1000_setup_copper_link+0xc94>
   1f2bd:	41 ff ce             	dec    %r14d
   1f2c0:	eb ac                	jmp    1f26e <e1000_setup_copper_link+0xc40>
   1f2c2:	41 8b 45 14          	mov    0x14(%r13),%eax
   1f2c6:	85 c0                	test   %eax,%eax
   1f2c8:	0f 85 b9 00 00 00    	jne    1f387 <e1000_setup_copper_link+0xd59>
   1f2ce:	4c 8d 65 d8          	lea    0xffffffffffffffd8(%rbp),%r12
   1f2d2:	be 14 00 00 00       	mov    $0x14,%esi
   1f2d7:	4c 89 ef             	mov    %r13,%rdi
   1f2da:	4c 89 e2             	mov    %r12,%rdx
   1f2dd:	e8 f7 6d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f2e2:	85 c0                	test   %eax,%eax
   1f2e4:	89 c3                	mov    %eax,%ebx
   1f2e6:	0f 85 d9 01 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f2ec:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1f2ef:	be 14 00 00 00       	mov    $0x14,%esi
   1f2f4:	4c 89 ef             	mov    %r13,%rdi
   1f2f7:	83 ca 70             	or     $0x70,%edx
   1f2fa:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1f2fe:	0f b7 d2             	movzwl %dx,%edx
   1f301:	e8 81 6b fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f306:	85 c0                	test   %eax,%eax
   1f308:	89 c3                	mov    %eax,%ebx
   1f30a:	0f 85 b5 01 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f310:	4c 89 e2             	mov    %r12,%rdx
   1f313:	be 10 00 00 00       	mov    $0x10,%esi
   1f318:	4c 89 ef             	mov    %r13,%rdi
   1f31b:	e8 b9 6d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f320:	85 c0                	test   %eax,%eax
   1f322:	89 c3                	mov    %eax,%ebx
   1f324:	0f 85 9b 01 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f32a:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1f32d:	be 10 00 00 00       	mov    $0x10,%esi
   1f332:	4c 89 ef             	mov    %r13,%rdi
   1f335:	80 ce 08             	or     $0x8,%dh
   1f338:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1f33c:	0f b7 d2             	movzwl %dx,%edx
   1f33f:	e8 43 6b fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f344:	85 c0                	test   %eax,%eax
   1f346:	89 c3                	mov    %eax,%ebx
   1f348:	0f 85 77 01 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f34e:	41 8b 45 10          	mov    0x10(%r13),%eax
   1f352:	83 f8 04             	cmp    $0x4,%eax
   1f355:	74 09                	je     1f360 <e1000_setup_copper_link+0xd32>
   1f357:	83 f8 03             	cmp    $0x3,%eax
   1f35a:	0f 85 91 00 00 00    	jne    1f3f1 <e1000_setup_copper_link+0xdc3>
   1f360:	41 80 bd ef 00 00 00 	cmpb   $0x0,0xef(%r13)
   1f367:	00 
   1f368:	0f 85 83 00 00 00    	jne    1f3f1 <e1000_setup_copper_link+0xdc3>
   1f36e:	41 8a 85 f1 00 00 00 	mov    0xf1(%r13),%al
   1f375:	3c 01                	cmp    $0x1,%al
   1f377:	74 04                	je     1f37d <e1000_setup_copper_link+0xd4f>
   1f379:	84 c0                	test   %al,%al
   1f37b:	75 74                	jne    1f3f1 <e1000_setup_copper_link+0xdc3>
   1f37d:	4c 89 ef             	mov    %r13,%rdi
   1f380:	e8 16 70 fe ff       	callq  639b <e1000_polarity_reversal_workaround>
   1f385:	eb 60                	jmp    1f3e7 <e1000_setup_copper_link+0xdb9>
   1f387:	83 f8 03             	cmp    $0x3,%eax
   1f38a:	75 65                	jne    1f3f1 <e1000_setup_copper_link+0xdc3>
   1f38c:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   1f390:	be 55 00 00 00       	mov    $0x55,%esi
   1f395:	4c 89 ef             	mov    %r13,%rdi
   1f398:	e8 3c 6d fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f39d:	85 c0                	test   %eax,%eax
   1f39f:	89 c3                	mov    %eax,%ebx
   1f3a1:	0f 85 1e 01 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f3a7:	8b 45 d8             	mov    0xffffffffffffffd8(%rbp),%eax
   1f3aa:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   1f3ad:	66 89 45 d8          	mov    %ax,0xffffffffffffffd8(%rbp)
   1f3b1:	41 8a 95 f1 00 00 00 	mov    0xf1(%r13),%dl
   1f3b8:	80 fa 01             	cmp    $0x1,%dl
   1f3bb:	74 04                	je     1f3c1 <e1000_setup_copper_link+0xd93>
   1f3bd:	84 d2                	test   %dl,%dl
   1f3bf:	75 05                	jne    1f3c6 <e1000_setup_copper_link+0xd98>
   1f3c1:	83 c8 04             	or     $0x4,%eax
   1f3c4:	eb 03                	jmp    1f3c9 <e1000_setup_copper_link+0xd9b>
   1f3c6:	83 c8 05             	or     $0x5,%eax
   1f3c9:	66 89 45 d8          	mov    %ax,0xffffffffffffffd8(%rbp)
   1f3cd:	8b 55 d8             	mov    0xffffffffffffffd8(%rbp),%edx
   1f3d0:	be 55 00 00 00       	mov    $0x55,%esi
   1f3d5:	4c 89 ef             	mov    %r13,%rdi
   1f3d8:	83 ca 10             	or     $0x10,%edx
   1f3db:	66 89 55 d8          	mov    %dx,0xffffffffffffffd8(%rbp)
   1f3df:	0f b7 d2             	movzwl %dx,%edx
   1f3e2:	e8 a0 6a fe ff       	callq  5e87 <e1000_write_phy_reg>
   1f3e7:	85 c0                	test   %eax,%eax
   1f3e9:	89 c3                	mov    %eax,%ebx
   1f3eb:	0f 85 d4 00 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f3f1:	45 31 f6             	xor    %r14d,%r14d
   1f3f4:	4c 8d 65 de          	lea    0xffffffffffffffde(%rbp),%r12
   1f3f8:	be 01 00 00 00       	mov    $0x1,%esi
   1f3fd:	4c 89 ef             	mov    %r13,%rdi
   1f400:	4c 89 e2             	mov    %r12,%rdx
   1f403:	e8 d1 6c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f408:	85 c0                	test   %eax,%eax
   1f40a:	89 c3                	mov    %eax,%ebx
   1f40c:	0f 85 b3 00 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f412:	4c 89 e2             	mov    %r12,%rdx
   1f415:	be 01 00 00 00       	mov    $0x1,%esi
   1f41a:	4c 89 ef             	mov    %r13,%rdi
   1f41d:	e8 b7 6c fe ff       	callq  60d9 <e1000_read_phy_reg>
   1f422:	85 c0                	test   %eax,%eax
   1f424:	89 c3                	mov    %eax,%ebx
   1f426:	0f 85 99 00 00 00    	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f42c:	f6 45 de 04          	testb  $0x4,0xffffffffffffffde(%rbp)
   1f430:	74 51                	je     1f483 <e1000_setup_copper_link+0xe55>
   1f432:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f435: R_X86_64_32S	.rodata.str1.1+0x26b4
   1f439:	e8 00 00 00 00       	callq  1f43e <e1000_setup_copper_link+0xe10>
			1f43a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f43e:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
   1f443:	76 0a                	jbe    1f44f <e1000_setup_copper_link+0xe21>
   1f445:	4c 89 ef             	mov    %r13,%rdi
   1f448:	e8 7b 11 fe ff       	callq  5c8 <e1000_config_collision_dist>
   1f44d:	eb 0e                	jmp    1f45d <e1000_setup_copper_link+0xe2f>
   1f44f:	4c 89 ef             	mov    %r13,%rdi
   1f452:	e8 9d 79 fe ff       	callq  6df4 <e1000_config_mac_to_phy>
   1f457:	85 c0                	test   %eax,%eax
   1f459:	89 c3                	mov    %eax,%ebx
   1f45b:	75 68                	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f45d:	4c 89 ef             	mov    %r13,%rdi
   1f460:	e8 82 e1 ff ff       	callq  1d5e7 <e1000_config_fc_after_link_up>
   1f465:	85 c0                	test   %eax,%eax
   1f467:	89 c3                	mov    %eax,%ebx
   1f469:	75 5a                	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f46b:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1f470:	75 53                	jne    1f4c5 <e1000_setup_copper_link+0xe97>
   1f472:	be 01 00 00 00       	mov    $0x1,%esi
   1f477:	4c 89 ef             	mov    %r13,%rdi
   1f47a:	e8 af dd ff ff       	callq  1d22e <e1000_config_dsp_after_link_change>
   1f47f:	89 c3                	mov    %eax,%ebx
   1f481:	eb 42                	jmp    1f4c5 <e1000_setup_copper_link+0xe97>
   1f483:	bf c6 a7 00 00       	mov    $0xa7c6,%edi
   1f488:	41 ff c6             	inc    %r14d
   1f48b:	e8 cc 54 fe ff       	callq  495c <__const_udelay>
   1f490:	66 41 83 fe 0a       	cmp    $0xa,%r14w
   1f495:	74 2e                	je     1f4c5 <e1000_setup_copper_link+0xe97>
   1f497:	e9 58 ff ff ff       	jmpq   1f3f4 <e1000_setup_copper_link+0xdc6>
   1f49c:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
   1f4a1:	eb 22                	jmp    1f4c5 <e1000_setup_copper_link+0xe97>
   1f4a3:	41 8b 45 10          	mov    0x10(%r13),%eax
   1f4a7:	83 f8 07             	cmp    $0x7,%eax
   1f4aa:	0f 85 da f5 ff ff    	jne    1ea8a <e1000_setup_copper_link+0x45c>
   1f4b0:	e9 da f5 ff ff       	jmpq   1ea8f <e1000_setup_copper_link+0x461>
   1f4b5:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
   1f4ba:	0f 85 44 f6 ff ff    	jne    1eb04 <e1000_setup_copper_link+0x4d6>
   1f4c0:	e9 23 f6 ff ff       	jmpq   1eae8 <e1000_setup_copper_link+0x4ba>
   1f4c5:	41 5d                	pop    %r13
   1f4c7:	41 5e                	pop    %r14
   1f4c9:	89 d8                	mov    %ebx,%eax
   1f4cb:	5b                   	pop    %rbx
   1f4cc:	41 5c                	pop    %r12
   1f4ce:	41 5d                	pop    %r13
   1f4d0:	41 5e                	pop    %r14
   1f4d2:	c9                   	leaveq 
   1f4d3:	c3                   	retq   

000000000001f4d4 <e1000_id_led_init>:
   1f4d4:	55                   	push   %rbp
   1f4d5:	48 89 e5             	mov    %rsp,%rbp
   1f4d8:	41 55                	push   %r13
   1f4da:	41 54                	push   %r12
   1f4dc:	49 89 fc             	mov    %rdi,%r12
   1f4df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f4e2: R_X86_64_32S	.rodata.str1.1+0x26d1
   1f4e6:	53                   	push   %rbx
   1f4e7:	48 83 ec 18          	sub    $0x18,%rsp
   1f4eb:	e8 00 00 00 00       	callq  1f4f0 <e1000_id_led_init+0x1c>
			1f4ec: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f4f0:	41 83 7c 24 10 04    	cmpl   $0x4,0x10(%r12)
   1f4f6:	0f 86 a6 01 00 00    	jbe    1f6a2 <e1000_id_led_init+0x1ce>
   1f4fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f4ff: R_X86_64_32S	.rodata.str1.1+0xae
   1f503:	49 8b 1c 24          	mov    (%r12),%rbx
   1f507:	e8 00 00 00 00       	callq  1f50c <e1000_id_led_init+0x38>
			1f508: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f50c:	8b 83 00 0e 00 00    	mov    0xe00(%rbx),%eax
   1f512:	48 8d 4d e6          	lea    0xffffffffffffffe6(%rbp),%rcx
   1f516:	ba 01 00 00 00       	mov    $0x1,%edx
   1f51b:	41 89 84 24 b0 00 00 	mov    %eax,0xb0(%r12)
   1f522:	00 
   1f523:	41 89 84 24 b4 00 00 	mov    %eax,0xb4(%r12)
   1f52a:	00 
   1f52b:	41 89 84 24 b8 00 00 	mov    %eax,0xb8(%r12)
   1f532:	00 
   1f533:	be 04 00 00 00       	mov    $0x4,%esi
   1f538:	4c 89 e7             	mov    %r12,%rdi
   1f53b:	e8 cf d1 ff ff       	callq  1c70f <e1000_read_eeprom>
   1f540:	83 ca ff             	or     $0xffffffffffffffff,%edx
   1f543:	85 c0                	test   %eax,%eax
   1f545:	0f 88 59 01 00 00    	js     1f6a4 <e1000_id_led_init+0x1d0>
   1f54b:	41 83 7c 24 10 10    	cmpl   $0x10,0x10(%r12)
   1f551:	75 10                	jne    1f563 <e1000_id_led_init+0x8f>
   1f553:	66 81 7d e6 46 f7    	cmpw   $0xf746,0xffffffffffffffe6(%rbp)
   1f559:	75 08                	jne    1f563 <e1000_id_led_init+0x8f>
   1f55b:	66 c7 45 e6 11 18    	movw   $0x1811,0xffffffffffffffe6(%rbp)
   1f561:	eb 25                	jmp    1f588 <e1000_id_led_init+0xb4>
   1f563:	66 8b 45 e6          	mov    0xffffffffffffffe6(%rbp),%ax
   1f567:	66 85 c0             	test   %ax,%ax
   1f56a:	74 05                	je     1f571 <e1000_id_led_init+0x9d>
   1f56c:	66 ff c0             	inc    %ax
   1f56f:	75 17                	jne    1f588 <e1000_id_led_init+0xb4>
   1f571:	41 83 7c 24 10 12    	cmpl   $0x12,0x10(%r12)
   1f577:	b8 21 13 00 00       	mov    $0x1321,%eax
   1f57c:	ba 11 89 ff ff       	mov    $0xffff8911,%edx
   1f581:	0f 45 c2             	cmovne %edx,%eax
   1f584:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   1f588:	66 8b 5d e6          	mov    0xffffffffffffffe6(%rbp),%bx
   1f58c:	45 31 db             	xor    %r11d,%r11d
   1f58f:	45 31 c9             	xor    %r9d,%r9d
   1f592:	45 31 c0             	xor    %r8d,%r8d
   1f595:	31 ff                	xor    %edi,%edi
   1f597:	31 f6                	xor    %esi,%esi
   1f599:	45 31 d2             	xor    %r10d,%r10d
   1f59c:	0f b7 c3             	movzwl %bx,%eax
   1f59f:	44 88 d1             	mov    %r10b,%cl
   1f5a2:	d3 f8                	sar    %cl,%eax
   1f5a4:	41 89 c5             	mov    %eax,%r13d
   1f5a7:	41 83 e5 0f          	and    $0xf,%r13d
   1f5ab:	66 41 83 fd 04       	cmp    $0x4,%r13w
   1f5b0:	74 25                	je     1f5d7 <e1000_id_led_init+0x103>
   1f5b2:	66 41 83 fd 05       	cmp    $0x5,%r13w
   1f5b7:	74 1e                	je     1f5d7 <e1000_id_led_init+0x103>
   1f5b9:	66 41 83 fd 06       	cmp    $0x6,%r13w
   1f5be:	74 17                	je     1f5d7 <e1000_id_led_init+0x103>
   1f5c0:	66 41 83 fd 07       	cmp    $0x7,%r13w
   1f5c5:	74 2b                	je     1f5f2 <e1000_id_led_init+0x11e>
   1f5c7:	66 41 83 fd 08       	cmp    $0x8,%r13w
   1f5cc:	74 24                	je     1f5f2 <e1000_id_led_init+0x11e>
   1f5ce:	66 41 83 fd 09       	cmp    $0x9,%r13w
   1f5d3:	75 42                	jne    1f617 <e1000_id_led_init+0x143>
   1f5d5:	eb 1b                	jmp    1f5f2 <e1000_id_led_init+0x11e>
   1f5d7:	b8 ff 00 00 00       	mov    $0xff,%eax
   1f5dc:	40 88 f1             	mov    %sil,%cl
   1f5df:	ba 0e 00 00 00       	mov    $0xe,%edx
   1f5e4:	d3 e0                	shl    %cl,%eax
   1f5e6:	f7 d0                	not    %eax
   1f5e8:	41 23 84 24 b4 00 00 	and    0xb4(%r12),%eax
   1f5ef:	00 
   1f5f0:	eb 19                	jmp    1f60b <e1000_id_led_init+0x137>
   1f5f2:	b8 ff 00 00 00       	mov    $0xff,%eax
   1f5f7:	40 88 f9             	mov    %dil,%cl
   1f5fa:	ba 0f 00 00 00       	mov    $0xf,%edx
   1f5ff:	d3 e0                	shl    %cl,%eax
   1f601:	f7 d0                	not    %eax
   1f603:	41 23 84 24 b4 00 00 	and    0xb4(%r12),%eax
   1f60a:	00 
   1f60b:	d3 e2                	shl    %cl,%edx
   1f60d:	09 c2                	or     %eax,%edx
   1f60f:	41 89 94 24 b4 00 00 	mov    %edx,0xb4(%r12)
   1f616:	00 
   1f617:	66 41 83 fd 02       	cmp    $0x2,%r13w
   1f61c:	74 25                	je     1f643 <e1000_id_led_init+0x16f>
   1f61e:	66 41 83 fd 05       	cmp    $0x5,%r13w
   1f623:	74 1e                	je     1f643 <e1000_id_led_init+0x16f>
   1f625:	66 41 83 fd 08       	cmp    $0x8,%r13w
   1f62a:	74 17                	je     1f643 <e1000_id_led_init+0x16f>
   1f62c:	66 41 83 fd 03       	cmp    $0x3,%r13w
   1f631:	74 2b                	je     1f65e <e1000_id_led_init+0x18a>
   1f633:	66 41 83 fd 06       	cmp    $0x6,%r13w
   1f638:	74 24                	je     1f65e <e1000_id_led_init+0x18a>
   1f63a:	66 41 83 fd 09       	cmp    $0x9,%r13w
   1f63f:	75 42                	jne    1f683 <e1000_id_led_init+0x1af>
   1f641:	eb 1b                	jmp    1f65e <e1000_id_led_init+0x18a>
   1f643:	b8 ff 00 00 00       	mov    $0xff,%eax
   1f648:	44 88 c1             	mov    %r8b,%cl
   1f64b:	ba 0e 00 00 00       	mov    $0xe,%edx
   1f650:	d3 e0                	shl    %cl,%eax
   1f652:	f7 d0                	not    %eax
   1f654:	41 23 84 24 b8 00 00 	and    0xb8(%r12),%eax
   1f65b:	00 
   1f65c:	eb 19                	jmp    1f677 <e1000_id_led_init+0x1a3>
   1f65e:	b8 ff 00 00 00       	mov    $0xff,%eax
   1f663:	44 88 c9             	mov    %r9b,%cl
   1f666:	ba 0f 00 00 00       	mov    $0xf,%edx
   1f66b:	d3 e0                	shl    %cl,%eax
   1f66d:	f7 d0                	not    %eax
   1f66f:	41 23 84 24 b8 00 00 	and    0xb8(%r12),%eax
   1f676:	00 
   1f677:	d3 e2                	shl    %cl,%edx
   1f679:	09 c2                	or     %eax,%edx
   1f67b:	41 89 94 24 b8 00 00 	mov    %edx,0xb8(%r12)
   1f682:	00 
   1f683:	41 ff c3             	inc    %r11d
   1f686:	41 83 c2 04          	add    $0x4,%r10d
   1f68a:	83 c6 08             	add    $0x8,%esi
   1f68d:	83 c7 08             	add    $0x8,%edi
   1f690:	41 83 c0 08          	add    $0x8,%r8d
   1f694:	41 83 c1 08          	add    $0x8,%r9d
   1f698:	41 83 fb 04          	cmp    $0x4,%r11d
   1f69c:	0f 85 fa fe ff ff    	jne    1f59c <e1000_id_led_init+0xc8>
   1f6a2:	31 d2                	xor    %edx,%edx
   1f6a4:	48 83 c4 18          	add    $0x18,%rsp
   1f6a8:	89 d0                	mov    %edx,%eax
   1f6aa:	5b                   	pop    %rbx
   1f6ab:	41 5c                	pop    %r12
   1f6ad:	41 5d                	pop    %r13
   1f6af:	c9                   	leaveq 
   1f6b0:	c3                   	retq   

000000000001f6b1 <e1000_read_mac_addr>:
   1f6b1:	55                   	push   %rbp
   1f6b2:	48 89 e5             	mov    %rsp,%rbp
   1f6b5:	41 55                	push   %r13
   1f6b7:	45 31 ed             	xor    %r13d,%r13d
   1f6ba:	41 54                	push   %r12
   1f6bc:	49 89 fc             	mov    %rdi,%r12
   1f6bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f6c2: R_X86_64_32S	.rodata.str1.1+0x26e3
   1f6c6:	53                   	push   %rbx
   1f6c7:	49 8d 9c 24 fa 00 00 	lea    0xfa(%r12),%rbx
   1f6ce:	00 
   1f6cf:	48 83 ec 18          	sub    $0x18,%rsp
   1f6d3:	e8 00 00 00 00       	callq  1f6d8 <e1000_read_mac_addr+0x27>
			1f6d4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f6d8:	44 89 ee             	mov    %r13d,%esi
   1f6db:	48 8d 4d e6          	lea    0xffffffffffffffe6(%rbp),%rcx
   1f6df:	ba 01 00 00 00       	mov    $0x1,%edx
   1f6e4:	66 d1 ee             	shr    %si
   1f6e7:	4c 89 e7             	mov    %r12,%rdi
   1f6ea:	0f b7 f6             	movzwl %si,%esi
   1f6ed:	e8 1d d0 ff ff       	callq  1c70f <e1000_read_eeprom>
   1f6f2:	85 c0                	test   %eax,%eax
   1f6f4:	79 08                	jns    1f6fe <e1000_read_mac_addr+0x4d>
   1f6f6:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   1f6f9:	e9 c1 00 00 00       	jmpq   1f7bf <e1000_read_mac_addr+0x10e>
   1f6fe:	66 8b 55 e6          	mov    0xffffffffffffffe6(%rbp),%dx
   1f702:	41 8d 45 01          	lea    0x1(%r13),%eax
   1f706:	41 83 c5 02          	add    $0x2,%r13d
   1f70a:	48 98                	cltq   
   1f70c:	88 13                	mov    %dl,(%rbx)
   1f70e:	66 c1 ea 08          	shr    $0x8,%dx
   1f712:	48 83 c3 02          	add    $0x2,%rbx
   1f716:	41 83 fd 06          	cmp    $0x6,%r13d
   1f71a:	42 88 94 20 fa 00 00 	mov    %dl,0xfa(%rax,%r12,1)
   1f721:	00 
   1f722:	75 b4                	jne    1f6d8 <e1000_read_mac_addr+0x27>
   1f724:	41 8b 44 24 10       	mov    0x10(%r12),%eax
   1f729:	83 f8 08             	cmp    $0x8,%eax
   1f72c:	74 0f                	je     1f73d <e1000_read_mac_addr+0x8c>
   1f72e:	83 f8 09             	cmp    $0x9,%eax
   1f731:	74 0a                	je     1f73d <e1000_read_mac_addr+0x8c>
   1f733:	83 f8 0e             	cmp    $0xe,%eax
   1f736:	74 05                	je     1f73d <e1000_read_mac_addr+0x8c>
   1f738:	83 f8 11             	cmp    $0x11,%eax
   1f73b:	75 20                	jne    1f75d <e1000_read_mac_addr+0xac>
   1f73d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f740: R_X86_64_32S	.rodata.str1.1+0xae
   1f744:	49 8b 1c 24          	mov    (%r12),%rbx
   1f748:	e8 00 00 00 00       	callq  1f74d <e1000_read_mac_addr+0x9c>
			1f749: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f74d:	8b 43 08             	mov    0x8(%rbx),%eax
   1f750:	a8 04                	test   $0x4,%al
   1f752:	74 09                	je     1f75d <e1000_read_mac_addr+0xac>
   1f754:	41 80 b4 24 ff 00 00 	xorb   $0x1,0xff(%r12)
   1f75b:	00 01 
   1f75d:	41 8a 84 24 fa 00 00 	mov    0xfa(%r12),%al
   1f764:	00 
   1f765:	41 88 84 24 f4 00 00 	mov    %al,0xf4(%r12)
   1f76c:	00 
   1f76d:	41 8a 84 24 fb 00 00 	mov    0xfb(%r12),%al
   1f774:	00 
   1f775:	41 88 84 24 f5 00 00 	mov    %al,0xf5(%r12)
   1f77c:	00 
   1f77d:	41 8a 84 24 fc 00 00 	mov    0xfc(%r12),%al
   1f784:	00 
   1f785:	41 88 84 24 f6 00 00 	mov    %al,0xf6(%r12)
   1f78c:	00 
   1f78d:	41 8a 84 24 fd 00 00 	mov    0xfd(%r12),%al
   1f794:	00 
   1f795:	41 88 84 24 f7 00 00 	mov    %al,0xf7(%r12)
   1f79c:	00 
   1f79d:	41 8a 84 24 fe 00 00 	mov    0xfe(%r12),%al
   1f7a4:	00 
   1f7a5:	41 88 84 24 f8 00 00 	mov    %al,0xf8(%r12)
   1f7ac:	00 
   1f7ad:	41 8a 84 24 ff 00 00 	mov    0xff(%r12),%al
   1f7b4:	00 
   1f7b5:	41 88 84 24 f9 00 00 	mov    %al,0xf9(%r12)
   1f7bc:	00 
   1f7bd:	31 c0                	xor    %eax,%eax
   1f7bf:	48 83 c4 18          	add    $0x18,%rsp
   1f7c3:	5b                   	pop    %rbx
   1f7c4:	41 5c                	pop    %r12
   1f7c6:	41 5d                	pop    %r13
   1f7c8:	c9                   	leaveq 
   1f7c9:	c3                   	retq   

000000000001f7ca <e1000_init_eeprom_params>:
   1f7ca:	55                   	push   %rbp
   1f7cb:	48 89 e5             	mov    %rsp,%rbp
   1f7ce:	41 56                	push   %r14
   1f7d0:	49 89 fe             	mov    %rdi,%r14
   1f7d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f7d6: R_X86_64_32S	.rodata.str1.1+0x26f7
   1f7da:	41 55                	push   %r13
   1f7dc:	41 54                	push   %r12
   1f7de:	4d 8d 66 48          	lea    0x48(%r14),%r12
   1f7e2:	53                   	push   %rbx
   1f7e3:	48 83 ec 10          	sub    $0x10,%rsp
   1f7e7:	e8 00 00 00 00       	callq  1f7ec <e1000_init_eeprom_params+0x22>
			1f7e8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f7ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f7ef: R_X86_64_32S	.rodata.str1.1+0xae
   1f7f3:	49 8b 1e             	mov    (%r14),%rbx
   1f7f6:	e8 00 00 00 00       	callq  1f7fb <e1000_init_eeprom_params+0x31>
			1f7f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1f7fb:	44 8b 6b 10          	mov    0x10(%rbx),%r13d
   1f7ff:	41 8b 46 10          	mov    0x10(%r14),%eax
   1f803:	83 f8 01             	cmp    $0x1,%eax
   1f806:	0f 84 9e 00 00 00    	je     1f8aa <e1000_init_eeprom_params+0xe0>
   1f80c:	83 f8 02             	cmp    $0x2,%eax
   1f80f:	0f 84 95 00 00 00    	je     1f8aa <e1000_init_eeprom_params+0xe0>
   1f815:	83 f8 03             	cmp    $0x3,%eax
   1f818:	0f 84 8c 00 00 00    	je     1f8aa <e1000_init_eeprom_params+0xe0>
   1f81e:	83 f8 04             	cmp    $0x4,%eax
   1f821:	0f 84 83 00 00 00    	je     1f8aa <e1000_init_eeprom_params+0xe0>
   1f827:	83 f8 05             	cmp    $0x5,%eax
   1f82a:	0f 84 a7 00 00 00    	je     1f8d7 <e1000_init_eeprom_params+0x10d>
   1f830:	83 f8 06             	cmp    $0x6,%eax
   1f833:	0f 84 9e 00 00 00    	je     1f8d7 <e1000_init_eeprom_params+0x10d>
   1f839:	83 f8 07             	cmp    $0x7,%eax
   1f83c:	0f 84 95 00 00 00    	je     1f8d7 <e1000_init_eeprom_params+0x10d>
   1f842:	83 f8 08             	cmp    $0x8,%eax
   1f845:	0f 84 8c 00 00 00    	je     1f8d7 <e1000_init_eeprom_params+0x10d>
   1f84b:	83 f8 09             	cmp    $0x9,%eax
   1f84e:	0f 84 83 00 00 00    	je     1f8d7 <e1000_init_eeprom_params+0x10d>
   1f854:	83 f8 0a             	cmp    $0xa,%eax
   1f857:	0f 84 9b 00 00 00    	je     1f8f8 <e1000_init_eeprom_params+0x12e>
   1f85d:	83 f8 0b             	cmp    $0xb,%eax
   1f860:	0f 84 92 00 00 00    	je     1f8f8 <e1000_init_eeprom_params+0x12e>
   1f866:	83 f8 0c             	cmp    $0xc,%eax
   1f869:	0f 84 89 00 00 00    	je     1f8f8 <e1000_init_eeprom_params+0x12e>
   1f86f:	83 f8 0d             	cmp    $0xd,%eax
   1f872:	0f 84 80 00 00 00    	je     1f8f8 <e1000_init_eeprom_params+0x12e>
   1f878:	83 f8 0e             	cmp    $0xe,%eax
   1f87b:	0f 84 bd 00 00 00    	je     1f93e <e1000_init_eeprom_params+0x174>
   1f881:	83 f8 0f             	cmp    $0xf,%eax
   1f884:	0f 84 b4 00 00 00    	je     1f93e <e1000_init_eeprom_params+0x174>
   1f88a:	83 f8 10             	cmp    $0x10,%eax
   1f88d:	0f 84 f9 00 00 00    	je     1f98c <e1000_init_eeprom_params+0x1c2>
   1f893:	83 f8 11             	cmp    $0x11,%eax
   1f896:	0f 84 81 01 00 00    	je     1fa1d <e1000_init_eeprom_params+0x253>
   1f89c:	83 f8 12             	cmp    $0x12,%eax
   1f89f:	0f 85 50 02 00 00    	jne    1faf5 <e1000_init_eeprom_params+0x32b>
   1f8a5:	e9 c7 01 00 00       	jmpq   1fa71 <e1000_init_eeprom_params+0x2a7>
   1f8aa:	41 c7 04 24 02 00 00 	movl   $0x2,(%r12)
   1f8b1:	00 
   1f8b2:	66 41 c7 44 24 04 40 	movw   $0x40,0x4(%r12)
   1f8b9:	00 
   1f8ba:	66 41 c7 44 24 06 03 	movw   $0x3,0x6(%r12)
   1f8c1:	00 
   1f8c2:	66 41 c7 44 24 08 06 	movw   $0x6,0x8(%r12)
   1f8c9:	00 
   1f8ca:	66 41 c7 44 24 0a 32 	movw   $0x32,0xa(%r12)
   1f8d1:	00 
   1f8d2:	e9 aa 00 00 00       	jmpq   1f981 <e1000_init_eeprom_params+0x1b7>
   1f8d7:	41 f7 c5 00 02 00 00 	test   $0x200,%r13d
   1f8de:	41 c7 04 24 02 00 00 	movl   $0x2,(%r12)
   1f8e5:	00 
   1f8e6:	66 41 c7 44 24 06 03 	movw   $0x3,0x6(%r12)
   1f8ed:	00 
   1f8ee:	66 41 c7 44 24 0a 32 	movw   $0x32,0xa(%r12)
   1f8f5:	00 
   1f8f6:	eb 28                	jmp    1f920 <e1000_init_eeprom_params+0x156>
   1f8f8:	41 f7 c5 00 20 00 00 	test   $0x2000,%r13d
   1f8ff:	75 3d                	jne    1f93e <e1000_init_eeprom_params+0x174>
   1f901:	41 c7 04 24 02 00 00 	movl   $0x2,(%r12)
   1f908:	00 
   1f909:	66 41 c7 44 24 06 03 	movw   $0x3,0x6(%r12)
   1f910:	00 
   1f911:	41 f7 c5 00 04 00 00 	test   $0x400,%r13d
   1f918:	66 41 c7 44 24 0a 32 	movw   $0x32,0xa(%r12)
   1f91f:	00 
   1f920:	74 0a                	je     1f92c <e1000_init_eeprom_params+0x162>
   1f922:	66 41 c7 44 24 04 00 	movw   $0x100,0x4(%r12)
   1f929:	01 
   1f92a:	eb 4d                	jmp    1f979 <e1000_init_eeprom_params+0x1af>
   1f92c:	66 41 c7 44 24 04 40 	movw   $0x40,0x4(%r12)
   1f933:	00 
   1f934:	66 41 c7 44 24 08 06 	movw   $0x6,0x8(%r12)
   1f93b:	00 
   1f93c:	eb 43                	jmp    1f981 <e1000_init_eeprom_params+0x1b7>
   1f93e:	41 f7 c5 00 04 00 00 	test   $0x400,%r13d
   1f945:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1f94c:	00 
   1f94d:	66 41 c7 44 24 06 08 	movw   $0x8,0x6(%r12)
   1f954:	00 
   1f955:	66 41 c7 44 24 0a 01 	movw   $0x1,0xa(%r12)
   1f95c:	00 
   1f95d:	74 12                	je     1f971 <e1000_init_eeprom_params+0x1a7>
   1f95f:	66 41 c7 44 24 0c 20 	movw   $0x20,0xc(%r12)
   1f966:	00 
   1f967:	66 41 c7 44 24 08 10 	movw   $0x10,0x8(%r12)
   1f96e:	00 
   1f96f:	eb 10                	jmp    1f981 <e1000_init_eeprom_params+0x1b7>
   1f971:	66 41 c7 44 24 0c 08 	movw   $0x8,0xc(%r12)
   1f978:	00 
   1f979:	66 41 c7 44 24 08 08 	movw   $0x8,0x8(%r12)
   1f980:	00 
   1f981:	41 c6 44 24 0e 00    	movb   $0x0,0xe(%r12)
   1f987:	e9 da 00 00 00       	jmpq   1fa66 <e1000_init_eeprom_params+0x29c>
   1f98c:	41 f7 c5 00 04 00 00 	test   $0x400,%r13d
   1f993:	41 c7 46 48 01 00 00 	movl   $0x1,0x48(%r14)
   1f99a:	00 
   1f99b:	66 41 c7 44 24 06 08 	movw   $0x8,0x6(%r12)
   1f9a2:	00 
   1f9a3:	66 41 c7 44 24 0a 01 	movw   $0x1,0xa(%r12)
   1f9aa:	00 
   1f9ab:	74 12                	je     1f9bf <e1000_init_eeprom_params+0x1f5>
   1f9ad:	66 41 c7 44 24 0c 20 	movw   $0x20,0xc(%r12)
   1f9b4:	00 
   1f9b5:	66 41 c7 44 24 08 10 	movw   $0x10,0x8(%r12)
   1f9bc:	00 
   1f9bd:	eb 10                	jmp    1f9cf <e1000_init_eeprom_params+0x205>
   1f9bf:	66 41 c7 44 24 0c 08 	movw   $0x8,0xc(%r12)
   1f9c6:	00 
   1f9c7:	66 41 c7 44 24 08 08 	movw   $0x8,0x8(%r12)
   1f9ce:	00 
   1f9cf:	41 c6 44 24 0e 01    	movb   $0x1,0xe(%r12)
   1f9d5:	41 c6 44 24 0f 01    	movb   $0x1,0xf(%r12)
   1f9db:	4c 89 f7             	mov    %r14,%rdi
   1f9de:	e8 df 0a fe ff       	callq  4c2 <e1000_is_onboard_nvm_eeprom>
   1f9e3:	84 c0                	test   %al,%al
   1f9e5:	0f 85 0a 01 00 00    	jne    1faf5 <e1000_init_eeprom_params+0x32b>
   1f9eb:	41 c7 04 24 03 00 00 	movl   $0x3,(%r12)
   1f9f2:	00 
   1f9f3:	66 41 c7 44 24 04 00 	movw   $0x800,0x4(%r12)
   1f9fa:	08 
   1f9fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f9fe: R_X86_64_32S	.rodata.str1.1+0xb4
   1fa02:	49 8b 1e             	mov    (%r14),%rbx
   1fa05:	41 81 e5 ff ff ef ff 	and    $0xffefffff,%r13d
   1fa0c:	e8 00 00 00 00       	callq  1fa11 <e1000_init_eeprom_params+0x247>
			1fa0d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fa11:	48 83 c3 10          	add    $0x10,%rbx
   1fa15:	44 89 2b             	mov    %r13d,(%rbx)
   1fa18:	e9 d8 00 00 00       	jmpq   1faf5 <e1000_init_eeprom_params+0x32b>
   1fa1d:	41 f7 c5 00 04 00 00 	test   $0x400,%r13d
   1fa24:	41 c7 46 48 01 00 00 	movl   $0x1,0x48(%r14)
   1fa2b:	00 
   1fa2c:	66 41 c7 44 24 06 08 	movw   $0x8,0x6(%r12)
   1fa33:	00 
   1fa34:	66 41 c7 44 24 0a 01 	movw   $0x1,0xa(%r12)
   1fa3b:	00 
   1fa3c:	74 12                	je     1fa50 <e1000_init_eeprom_params+0x286>
   1fa3e:	66 41 c7 44 24 0c 20 	movw   $0x20,0xc(%r12)
   1fa45:	00 
   1fa46:	66 41 c7 44 24 08 10 	movw   $0x10,0x8(%r12)
   1fa4d:	00 
   1fa4e:	eb 10                	jmp    1fa60 <e1000_init_eeprom_params+0x296>
   1fa50:	66 41 c7 44 24 0c 08 	movw   $0x8,0xc(%r12)
   1fa57:	00 
   1fa58:	66 41 c7 44 24 08 08 	movw   $0x8,0x8(%r12)
   1fa5f:	00 
   1fa60:	41 c6 44 24 0e 01    	movb   $0x1,0xe(%r12)
   1fa66:	41 c6 44 24 0f 00    	movb   $0x0,0xf(%r12)
   1fa6c:	e9 84 00 00 00       	jmpq   1faf5 <e1000_init_eeprom_params+0x32b>
   1fa71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fa74: R_X86_64_32S	.rodata.str1.1+0xae
   1fa78:	49 8b 5e 08          	mov    0x8(%r14),%rbx
   1fa7c:	e8 00 00 00 00       	callq  1fa81 <e1000_init_eeprom_params+0x2b7>
			1fa7d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fa81:	8b 0b                	mov    (%rbx),%ecx
   1fa83:	41 c6 44 24 0e 00    	movb   $0x0,0xe(%r12)
   1fa89:	41 c6 44 24 0f 00    	movb   $0x0,0xf(%r12)
   1fa8f:	66 41 c7 44 24 04 00 	movw   $0x800,0x4(%r12)
   1fa96:	08 
   1fa97:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
   1fa9c:	41 c7 46 48 04 00 00 	movl   $0x4,0x48(%r14)
   1faa3:	00 
   1faa4:	74 26                	je     1facc <e1000_init_eeprom_params+0x302>
   1faa6:	31 d2                	xor    %edx,%edx
   1faa8:	49 8b 46 28          	mov    0x28(%r14),%rax
   1faac:	48 01 d0             	add    %rdx,%rax
   1faaf:	c6 40 02 00          	movb   $0x0,0x2(%rax)
   1fab3:	49 8b 46 28          	mov    0x28(%r14),%rax
   1fab7:	48 01 d0             	add    %rdx,%rax
   1faba:	48 83 c2 04          	add    $0x4,%rdx
   1fabe:	48 81 fa 00 20 00 00 	cmp    $0x2000,%rdx
   1fac5:	66 c7 00 ff ff       	movw   $0xffff,(%rax)
   1faca:	75 dc                	jne    1faa8 <e1000_init_eeprom_params+0x2de>
   1facc:	89 ca                	mov    %ecx,%edx
   1face:	c1 e9 10             	shr    $0x10,%ecx
   1fad1:	81 e2 ff 1f 00 00    	and    $0x1fff,%edx
   1fad7:	81 e1 ff 1f 00 00    	and    $0x1fff,%ecx
   1fadd:	89 d0                	mov    %edx,%eax
   1fadf:	c1 e0 0c             	shl    $0xc,%eax
   1fae2:	41 89 46 34          	mov    %eax,0x34(%r14)
   1fae6:	8d 41 01             	lea    0x1(%rcx),%eax
   1fae9:	29 d0                	sub    %edx,%eax
   1faeb:	c1 e0 0c             	shl    $0xc,%eax
   1faee:	c1 e8 02             	shr    $0x2,%eax
   1faf1:	41 89 46 30          	mov    %eax,0x30(%r14)
   1faf5:	31 c0                	xor    %eax,%eax
   1faf7:	41 83 3c 24 01       	cmpl   $0x1,(%r12)
   1fafc:	75 6f                	jne    1fb6d <e1000_init_eeprom_params+0x3a3>
   1fafe:	41 83 7e 10 0d       	cmpl   $0xd,0x10(%r14)
   1fb03:	77 42                	ja     1fb47 <e1000_init_eeprom_params+0x37d>
   1fb05:	48 8d 4d de          	lea    0xffffffffffffffde(%rbp),%rcx
   1fb09:	66 41 c7 44 24 04 40 	movw   $0x40,0x4(%r12)
   1fb10:	00 
   1fb11:	ba 01 00 00 00       	mov    $0x1,%edx
   1fb16:	be 12 00 00 00       	mov    $0x12,%esi
   1fb1b:	4c 89 f7             	mov    %r14,%rdi
   1fb1e:	e8 ec cb ff ff       	callq  1c70f <e1000_read_eeprom>
   1fb23:	85 c0                	test   %eax,%eax
   1fb25:	75 46                	jne    1fb6d <e1000_init_eeprom_params+0x3a3>
   1fb27:	0f b7 45 de          	movzwl 0xffffffffffffffde(%rbp),%eax
   1fb2b:	25 00 1c 00 00       	and    $0x1c00,%eax
   1fb30:	c1 f8 0a             	sar    $0xa,%eax
   1fb33:	66 85 c0             	test   %ax,%ax
   1fb36:	89 c2                	mov    %eax,%edx
   1fb38:	66 89 45 de          	mov    %ax,0xffffffffffffffde(%rbp)
   1fb3c:	74 19                	je     1fb57 <e1000_init_eeprom_params+0x38d>
   1fb3e:	8d 42 01             	lea    0x1(%rdx),%eax
   1fb41:	66 89 45 de          	mov    %ax,0xffffffffffffffde(%rbp)
   1fb45:	eb 10                	jmp    1fb57 <e1000_init_eeprom_params+0x38d>
   1fb47:	41 81 e5 00 78 00 00 	and    $0x7800,%r13d
   1fb4e:	41 c1 ed 0b          	shr    $0xb,%r13d
   1fb52:	66 44 89 6d de       	mov    %r13w,0xffffffffffffffde(%rbp)
   1fb57:	0f b7 4d de          	movzwl 0xffffffffffffffde(%rbp),%ecx
   1fb5b:	b8 01 00 00 00       	mov    $0x1,%eax
   1fb60:	83 c1 06             	add    $0x6,%ecx
   1fb63:	d3 e0                	shl    %cl,%eax
   1fb65:	66 41 89 44 24 04    	mov    %ax,0x4(%r12)
   1fb6b:	31 c0                	xor    %eax,%eax
   1fb6d:	5a                   	pop    %rdx
   1fb6e:	59                   	pop    %rcx
   1fb6f:	5b                   	pop    %rbx
   1fb70:	41 5c                	pop    %r12
   1fb72:	41 5d                	pop    %r13
   1fb74:	41 5e                	pop    %r14
   1fb76:	c9                   	leaveq 
   1fb77:	c3                   	retq   

000000000001fb78 <e1000_write_eeprom>:
   1fb78:	55                   	push   %rbp
   1fb79:	48 89 e5             	mov    %rsp,%rbp
   1fb7c:	41 57                	push   %r15
   1fb7e:	41 56                	push   %r14
   1fb80:	41 55                	push   %r13
   1fb82:	41 54                	push   %r12
   1fb84:	49 89 fc             	mov    %rdi,%r12
   1fb87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fb8a: R_X86_64_32S	.rodata.str1.1+0x2710
   1fb8e:	4d 8d 74 24 48       	lea    0x48(%r12),%r14
   1fb93:	53                   	push   %rbx
   1fb94:	48 83 ec 28          	sub    $0x28,%rsp
   1fb98:	48 89 4d b8          	mov    %rcx,0xffffffffffffffb8(%rbp)
   1fb9c:	66 89 75 c8          	mov    %si,0xffffffffffffffc8(%rbp)
   1fba0:	66 89 55 c6          	mov    %dx,0xffffffffffffffc6(%rbp)
   1fba4:	e8 00 00 00 00       	callq  1fba9 <e1000_write_eeprom+0x31>
			1fba5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fba9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fbac: R_X86_64_32S	.data+0x3ec20
   1fbb0:	e8 00 00 00 00       	callq  1fbb5 <e1000_write_eeprom+0x3d>
			1fbb1: R_X86_64_PC32	.spinlock.text+0xde
   1fbb5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fbb8: R_X86_64_32S	.rodata.str1.1+0x2723
   1fbbc:	44 0f b7 6d c8       	movzwl 0xffffffffffffffc8(%rbp),%r13d
   1fbc1:	e8 00 00 00 00       	callq  1fbc6 <e1000_write_eeprom+0x4e>
			1fbc2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fbc6:	66 41 83 7e 04 00    	cmpw   $0x0,0x4(%r14)
   1fbcc:	44 89 eb             	mov    %r13d,%ebx
   1fbcf:	75 08                	jne    1fbd9 <e1000_write_eeprom+0x61>
   1fbd1:	4c 89 e7             	mov    %r12,%rdi
   1fbd4:	e8 f1 fb ff ff       	callq  1f7ca <e1000_init_eeprom_params>
   1fbd9:	41 8b 46 04          	mov    0x4(%r14),%eax
   1fbdd:	66 39 c3             	cmp    %ax,%bx
   1fbe0:	0f 83 b7 03 00 00    	jae    1ff9d <e1000_write_eeprom+0x425>
   1fbe6:	66 8b 55 c6          	mov    0xffffffffffffffc6(%rbp),%dx
   1fbea:	0f b7 db             	movzwl %bx,%ebx
   1fbed:	0f b7 c0             	movzwl %ax,%eax
   1fbf0:	29 d8                	sub    %ebx,%eax
   1fbf2:	44 0f b7 fa          	movzwl %dx,%r15d
   1fbf6:	41 39 c7             	cmp    %eax,%r15d
   1fbf9:	0f 8f 9e 03 00 00    	jg     1ff9d <e1000_write_eeprom+0x425>
   1fbff:	66 85 d2             	test   %dx,%dx
   1fc02:	0f 84 95 03 00 00    	je     1ff9d <e1000_write_eeprom+0x425>
   1fc08:	41 80 7e 0f 00       	cmpb   $0x0,0xf(%r14)
   1fc0d:	0f 84 b5 00 00 00    	je     1fcc8 <e1000_write_eeprom+0x150>
   1fc13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fc16: R_X86_64_32S	.rodata.str1.1+0x2739
   1fc1a:	bb f3 ff ff ff       	mov    $0xfffffff3,%ebx
   1fc1f:	e8 00 00 00 00       	callq  1fc24 <e1000_write_eeprom+0xac>
			1fc20: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fc24:	be 01 00 00 00       	mov    $0x1,%esi
   1fc29:	4c 89 e7             	mov    %r12,%rdi
   1fc2c:	e8 b1 5c fe ff       	callq  58e2 <e1000_swfw_sync_acquire>
   1fc31:	85 c0                	test   %eax,%eax
   1fc33:	0f 85 67 03 00 00    	jne    1ffa0 <e1000_write_eeprom+0x428>
   1fc39:	eb 04                	jmp    1fc3f <e1000_write_eeprom+0xc7>
   1fc3b:	31 db                	xor    %ebx,%ebx
   1fc3d:	eb 77                	jmp    1fcb6 <e1000_write_eeprom+0x13e>
   1fc3f:	4c 8b 75 b8          	mov    0xffffffffffffffb8(%rbp),%r14
   1fc43:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
   1fc4a:	00 
   1fc4b:	41 c1 e5 02          	shl    $0x2,%r13d
   1fc4f:	0f b7 45 c6          	movzwl 0xffffffffffffffc6(%rbp),%eax
   1fc53:	48 39 45 d0          	cmp    %rax,0xffffffffffffffd0(%rbp)
   1fc57:	74 e2                	je     1fc3b <e1000_write_eeprom+0xc3>
   1fc59:	be 01 00 00 00       	mov    $0x1,%esi
   1fc5e:	4c 89 e7             	mov    %r12,%rdi
   1fc61:	66 45 8b 3e          	mov    (%r14),%r15w
   1fc65:	e8 01 5c fe ff       	callq  586b <e1000_poll_eerd_eewr_done>
   1fc6a:	85 c0                	test   %eax,%eax
   1fc6c:	89 c3                	mov    %eax,%ebx
   1fc6e:	75 46                	jne    1fcb6 <e1000_write_eeprom+0x13e>
   1fc70:	49 8b 1c 24          	mov    (%r12),%rbx
   1fc74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fc77: R_X86_64_32S	.rodata.str1.1+0xb4
   1fc7b:	e8 00 00 00 00       	callq  1fc80 <e1000_write_eeprom+0x108>
			1fc7c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fc80:	44 89 e8             	mov    %r13d,%eax
   1fc83:	44 89 fa             	mov    %r15d,%edx
   1fc86:	83 c8 01             	or     $0x1,%eax
   1fc89:	c1 e2 10             	shl    $0x10,%edx
   1fc8c:	48 81 c3 2c 10 00 00 	add    $0x102c,%rbx
   1fc93:	09 d0                	or     %edx,%eax
   1fc95:	89 03                	mov    %eax,(%rbx)
   1fc97:	be 01 00 00 00       	mov    $0x1,%esi
   1fc9c:	4c 89 e7             	mov    %r12,%rdi
   1fc9f:	41 83 c5 04          	add    $0x4,%r13d
   1fca3:	e8 c3 5b fe ff       	callq  586b <e1000_poll_eerd_eewr_done>
   1fca8:	49 83 c6 02          	add    $0x2,%r14
   1fcac:	48 ff 45 d0          	incq   0xffffffffffffffd0(%rbp)
   1fcb0:	85 c0                	test   %eax,%eax
   1fcb2:	89 c3                	mov    %eax,%ebx
   1fcb4:	74 99                	je     1fc4f <e1000_write_eeprom+0xd7>
   1fcb6:	be 01 00 00 00       	mov    $0x1,%esi
   1fcbb:	4c 89 e7             	mov    %r12,%rdi
   1fcbe:	e8 cd 55 fe ff       	callq  5290 <e1000_swfw_sync_release>
   1fcc3:	e9 d8 02 00 00       	jmpq   1ffa0 <e1000_write_eeprom+0x428>
   1fcc8:	41 83 7c 24 48 04    	cmpl   $0x4,0x48(%r12)
   1fcce:	75 78                	jne    1fd48 <e1000_write_eeprom+0x1d0>
   1fcd0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fcd3: R_X86_64_32S	.rodata.str1.1+0x2751
   1fcd7:	e8 00 00 00 00       	callq  1fcdc <e1000_write_eeprom+0x164>
			1fcd8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fcdc:	4c 89 e7             	mov    %r12,%rdi
   1fcdf:	e8 d9 53 fe ff       	callq  50bd <e1000_get_software_flag>
   1fce4:	85 c0                	test   %eax,%eax
   1fce6:	89 c3                	mov    %eax,%ebx
   1fce8:	0f 85 b2 02 00 00    	jne    1ffa0 <e1000_write_eeprom+0x428>
   1fcee:	49 83 7c 24 28 00    	cmpq   $0x0,0x28(%r12)
   1fcf4:	74 42                	je     1fd38 <e1000_write_eeprom+0x1c0>
   1fcf6:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   1fcfa:	44 89 ee             	mov    %r13d,%esi
   1fcfd:	31 ff                	xor    %edi,%edi
   1fcff:	0f b7 45 c6          	movzwl 0xffffffffffffffc6(%rbp),%eax
   1fd03:	48 39 c7             	cmp    %rax,%rdi
   1fd06:	74 33                	je     1fd3b <e1000_write_eeprom+0x1c3>
   1fd08:	81 fe ff 07 00 00    	cmp    $0x7ff,%esi
   1fd0e:	77 28                	ja     1fd38 <e1000_write_eeprom+0x1c0>
   1fd10:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
   1fd15:	89 f0                	mov    %esi,%eax
   1fd17:	48 ff c7             	inc    %rdi
   1fd1a:	48 c1 e0 02          	shl    $0x2,%rax
   1fd1e:	ff c6                	inc    %esi
   1fd20:	48 01 c2             	add    %rax,%rdx
   1fd23:	c6 42 02 01          	movb   $0x1,0x2(%rdx)
   1fd27:	49 03 44 24 28       	add    0x28(%r12),%rax
   1fd2c:	66 8b 11             	mov    (%rcx),%dx
   1fd2f:	48 83 c1 02          	add    $0x2,%rcx
   1fd33:	66 89 10             	mov    %dx,(%rax)
   1fd36:	eb c7                	jmp    1fcff <e1000_write_eeprom+0x187>
   1fd38:	83 cb ff             	or     $0xffffffffffffffff,%ebx
   1fd3b:	4c 89 e7             	mov    %r12,%rdi
   1fd3e:	e8 71 03 fe ff       	callq  b4 <e1000_release_software_flag>
   1fd43:	e9 58 02 00 00       	jmpq   1ffa0 <e1000_write_eeprom+0x428>
   1fd48:	4c 89 e7             	mov    %r12,%rdi
   1fd4b:	e8 7d 5c fe ff       	callq  59cd <e1000_acquire_eeprom>
   1fd50:	85 c0                	test   %eax,%eax
   1fd52:	0f 85 45 02 00 00    	jne    1ff9d <e1000_write_eeprom+0x425>
   1fd58:	41 83 7c 24 48 02    	cmpl   $0x2,0x48(%r12)
   1fd5e:	0f 85 38 01 00 00    	jne    1fe9c <e1000_write_eeprom+0x324>
   1fd64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fd67: R_X86_64_32S	.rodata.str1.1+0x2769
   1fd6b:	e8 00 00 00 00       	callq  1fd70 <e1000_write_eeprom+0x1f8>
			1fd6c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fd70:	66 41 8b 56 06       	mov    0x6(%r14),%dx
   1fd75:	be 13 00 00 00       	mov    $0x13,%esi
   1fd7a:	4c 89 e7             	mov    %r12,%rdi
   1fd7d:	83 c2 02             	add    $0x2,%edx
   1fd80:	0f b7 d2             	movzwl %dx,%edx
   1fd83:	e8 11 c8 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fd88:	41 8b 56 08          	mov    0x8(%r14),%edx
   1fd8c:	31 f6                	xor    %esi,%esi
   1fd8e:	4c 89 e7             	mov    %r12,%rdi
   1fd91:	83 ea 02             	sub    $0x2,%edx
   1fd94:	0f b7 d2             	movzwl %dx,%edx
   1fd97:	e8 fd c7 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fd9c:	4c 89 e7             	mov    %r12,%rdi
   1fd9f:	e8 12 c5 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1fda4:	4c 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%r15
   1fda8:	66 c7 45 ca 00 00    	movw   $0x0,0xffffffffffffffca(%rbp)
   1fdae:	66 8b 45 c6          	mov    0xffffffffffffffc6(%rbp),%ax
   1fdb2:	66 39 45 ca          	cmp    %ax,0xffffffffffffffca(%rbp)
   1fdb6:	66 41 8b 46 06       	mov    0x6(%r14),%ax
   1fdbb:	0f 84 9e 00 00 00    	je     1fe5f <e1000_write_eeprom+0x2e7>
   1fdc1:	0f b7 d0             	movzwl %ax,%edx
   1fdc4:	be 05 00 00 00       	mov    $0x5,%esi
   1fdc9:	4c 89 e7             	mov    %r12,%rdi
   1fdcc:	e8 c8 c7 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fdd1:	66 8b 75 ca          	mov    0xffffffffffffffca(%rbp),%si
   1fdd5:	03 75 c8             	add    0xffffffffffffffc8(%rbp),%esi
   1fdd8:	4c 89 e7             	mov    %r12,%rdi
   1fddb:	41 0f b7 56 08       	movzwl 0x8(%r14),%edx
   1fde0:	45 31 ed             	xor    %r13d,%r13d
   1fde3:	0f b7 f6             	movzwl %si,%esi
   1fde6:	e8 ae c7 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fdeb:	41 0f b7 37          	movzwl (%r15),%esi
   1fdef:	ba 10 00 00 00       	mov    $0x10,%edx
   1fdf4:	4c 89 e7             	mov    %r12,%rdi
   1fdf7:	e8 9d c7 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fdfc:	4c 89 e7             	mov    %r12,%rdi
   1fdff:	e8 b2 c4 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1fe04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fe07: R_X86_64_32S	.rodata.str1.1+0xae
   1fe0b:	49 8b 1c 24          	mov    (%r12),%rbx
   1fe0f:	e8 00 00 00 00       	callq  1fe14 <e1000_write_eeprom+0x29c>
			1fe10: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1fe14:	8b 43 10             	mov    0x10(%rbx),%eax
   1fe17:	a8 08                	test   $0x8,%al
   1fe19:	75 2f                	jne    1fe4a <e1000_write_eeprom+0x2d2>
   1fe1b:	bf de 46 03 00       	mov    $0x346de,%edi
   1fe20:	41 8d 5d 01          	lea    0x1(%r13),%ebx
   1fe24:	41 ff c5             	inc    %r13d
   1fe27:	e8 30 4b fe ff       	callq  495c <__const_udelay>
   1fe2c:	41 81 fd c8 00 00 00 	cmp    $0xc8,%r13d
   1fe33:	75 cf                	jne    1fe04 <e1000_write_eeprom+0x28c>
   1fe35:	31 c0                	xor    %eax,%eax
   1fe37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fe3a: R_X86_64_32S	str_130659134
   1fe3e:	e8 00 00 00 00       	callq  1fe43 <e1000_write_eeprom+0x2cb>
			1fe3f: R_X86_64_PC32	printk+0xfffffffffffffffc
   1fe43:	66 81 fb c8 00       	cmp    $0xc8,%bx
   1fe48:	74 43                	je     1fe8d <e1000_write_eeprom+0x315>
   1fe4a:	4c 89 e7             	mov    %r12,%rdi
   1fe4d:	49 83 c7 02          	add    $0x2,%r15
   1fe51:	e8 60 c4 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1fe56:	66 ff 45 ca          	incw   0xffffffffffffffca(%rbp)
   1fe5a:	e9 4f ff ff ff       	jmpq   1fdae <e1000_write_eeprom+0x236>
   1fe5f:	8d 50 02             	lea    0x2(%rax),%edx
   1fe62:	be 10 00 00 00       	mov    $0x10,%esi
   1fe67:	4c 89 e7             	mov    %r12,%rdi
   1fe6a:	31 db                	xor    %ebx,%ebx
   1fe6c:	0f b7 d2             	movzwl %dx,%edx
   1fe6f:	e8 25 c7 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fe74:	41 8b 56 08          	mov    0x8(%r14),%edx
   1fe78:	31 f6                	xor    %esi,%esi
   1fe7a:	4c 89 e7             	mov    %r12,%rdi
   1fe7d:	83 ea 02             	sub    $0x2,%edx
   1fe80:	0f b7 d2             	movzwl %dx,%edx
   1fe83:	e8 11 c7 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1fe88:	e9 06 01 00 00       	jmpq   1ff93 <e1000_write_eeprom+0x41b>
   1fe8d:	83 cb ff             	or     $0xffffffffffffffff,%ebx
   1fe90:	e9 fe 00 00 00       	jmpq   1ff93 <e1000_write_eeprom+0x41b>
   1fe95:	31 db                	xor    %ebx,%ebx
   1fe97:	e9 ed 00 00 00       	jmpq   1ff89 <e1000_write_eeprom+0x411>
   1fe9c:	66 44 89 7d cc       	mov    %r15w,0xffffffffffffffcc(%rbp)
   1fea1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fea4: R_X86_64_32S	.rodata.str1.1+0x2786
   1fea8:	45 31 ff             	xor    %r15d,%r15d
   1feab:	66 89 5d ce          	mov    %bx,0xffffffffffffffce(%rbp)
   1feaf:	e8 00 00 00 00       	callq  1feb4 <e1000_write_eeprom+0x33c>
			1feb0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1feb4:	eb 03                	jmp    1feb9 <e1000_write_eeprom+0x341>
   1feb6:	41 89 df             	mov    %ebx,%r15d
   1feb9:	66 44 3b 7d cc       	cmp    0xffffffffffffffcc(%rbp),%r15w
   1febe:	73 d5                	jae    1fe95 <e1000_write_eeprom+0x31d>
   1fec0:	4c 89 e7             	mov    %r12,%rdi
   1fec3:	e8 da c7 ff ff       	callq  1c6a2 <e1000_spi_eeprom_ready>
   1fec8:	85 c0                	test   %eax,%eax
   1feca:	0f 85 b6 00 00 00    	jne    1ff86 <e1000_write_eeprom+0x40e>
   1fed0:	4c 89 e7             	mov    %r12,%rdi
   1fed3:	e8 de c3 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1fed8:	41 0f b7 56 06       	movzwl 0x6(%r14),%edx
   1fedd:	be 06 00 00 00       	mov    $0x6,%esi
   1fee2:	4c 89 e7             	mov    %r12,%rdi
   1fee5:	e8 af c6 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1feea:	4c 89 e7             	mov    %r12,%rdi
   1feed:	e8 c4 c3 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1fef2:	66 41 83 7e 08 08    	cmpw   $0x8,0x8(%r14)
   1fef8:	75 09                	jne    1ff03 <e1000_write_eeprom+0x38b>
   1fefa:	66 83 7d ce 7f       	cmpw   $0x7f,0xffffffffffffffce(%rbp)
   1feff:	b0 0a                	mov    $0xa,%al
   1ff01:	77 02                	ja     1ff05 <e1000_write_eeprom+0x38d>
   1ff03:	b0 02                	mov    $0x2,%al
   1ff05:	41 0f b7 56 06       	movzwl 0x6(%r14),%edx
   1ff0a:	0f b6 f0             	movzbl %al,%esi
   1ff0d:	4c 89 e7             	mov    %r12,%rdi
   1ff10:	44 89 fb             	mov    %r15d,%ebx
   1ff13:	e8 81 c6 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1ff18:	44 0f b7 6d ce       	movzwl 0xffffffffffffffce(%rbp),%r13d
   1ff1d:	41 0f b7 56 08       	movzwl 0x8(%r14),%edx
   1ff22:	41 0f b7 f7          	movzwl %r15w,%esi
   1ff26:	4c 89 e7             	mov    %r12,%rdi
   1ff29:	44 01 ee             	add    %r13d,%esi
   1ff2c:	01 f6                	add    %esi,%esi
   1ff2e:	0f b7 f6             	movzwl %si,%esi
   1ff31:	e8 63 c6 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1ff36:	eb 0a                	jmp    1ff42 <e1000_write_eeprom+0x3ca>
   1ff38:	66 3b 5d c6          	cmp    0xffffffffffffffc6(%rbp),%bx
   1ff3c:	0f 84 74 ff ff ff    	je     1feb6 <e1000_write_eeprom+0x33e>
   1ff42:	48 8b 55 b8          	mov    0xffffffffffffffb8(%rbp),%rdx
   1ff46:	0f b7 c3             	movzwl %bx,%eax
   1ff49:	4c 89 e7             	mov    %r12,%rdi
   1ff4c:	ff c3                	inc    %ebx
   1ff4e:	66 8b 34 42          	mov    (%rdx,%rax,2),%si
   1ff52:	ba 10 00 00 00       	mov    $0x10,%edx
   1ff57:	66 c1 c6 08          	rol    $0x8,%si
   1ff5b:	0f b7 f6             	movzwl %si,%esi
   1ff5e:	e8 36 c6 ff ff       	callq  1c599 <e1000_shift_out_ee_bits>
   1ff63:	41 0f b7 56 0c       	movzwl 0xc(%r14),%edx
   1ff68:	0f b7 c3             	movzwl %bx,%eax
   1ff6b:	44 01 e8             	add    %r13d,%eax
   1ff6e:	01 c0                	add    %eax,%eax
   1ff70:	89 d1                	mov    %edx,%ecx
   1ff72:	99                   	cltd   
   1ff73:	f7 f9                	idiv   %ecx
   1ff75:	85 d2                	test   %edx,%edx
   1ff77:	75 bf                	jne    1ff38 <e1000_write_eeprom+0x3c0>
   1ff79:	4c 89 e7             	mov    %r12,%rdi
   1ff7c:	e8 35 c3 ff ff       	callq  1c2b6 <e1000_standby_eeprom>
   1ff81:	e9 30 ff ff ff       	jmpq   1feb6 <e1000_write_eeprom+0x33e>
   1ff86:	83 cb ff             	or     $0xffffffffffffffff,%ebx
   1ff89:	bf 0a 00 00 00       	mov    $0xa,%edi
   1ff8e:	e8 bd 7b fe ff       	callq  7b50 <msleep>
   1ff93:	4c 89 e7             	mov    %r12,%rdi
   1ff96:	e8 f3 c1 ff ff       	callq  1c18e <e1000_release_eeprom>
   1ff9b:	eb 03                	jmp    1ffa0 <e1000_write_eeprom+0x428>
   1ff9d:	83 cb ff             	or     $0xffffffffffffffff,%ebx
   1ffa0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ffa3: R_X86_64_32S	.data+0x3ec20
   1ffa7:	e8 00 00 00 00       	callq  1ffac <e1000_write_eeprom+0x434>
			1ffa8: R_X86_64_PC32	.spinlock.text+0xfffffffffffffffc
   1ffac:	48 83 c4 28          	add    $0x28,%rsp
   1ffb0:	89 d8                	mov    %ebx,%eax
   1ffb2:	5b                   	pop    %rbx
   1ffb3:	41 5c                	pop    %r12
   1ffb5:	41 5d                	pop    %r13
   1ffb7:	41 5e                	pop    %r14
   1ffb9:	41 5f                	pop    %r15
   1ffbb:	c9                   	leaveq 
   1ffbc:	c3                   	retq   

000000000001ffbd <e1000_update_eeprom_checksum>:
   1ffbd:	55                   	push   %rbp
   1ffbe:	48 89 e5             	mov    %rsp,%rbp
   1ffc1:	41 55                	push   %r13
   1ffc3:	49 89 fd             	mov    %rdi,%r13
   1ffc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ffc9: R_X86_64_32S	.rodata.str1.1+0x279d
   1ffcd:	41 54                	push   %r12
   1ffcf:	53                   	push   %rbx
   1ffd0:	31 db                	xor    %ebx,%ebx
   1ffd2:	48 83 ec 18          	sub    $0x18,%rsp
   1ffd6:	e8 00 00 00 00       	callq  1ffdb <e1000_update_eeprom_checksum+0x1e>
			1ffd7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   1ffdb:	66 c7 45 e6 00 00    	movw   $0x0,0xffffffffffffffe6(%rbp)
   1ffe1:	48 8d 4d e4          	lea    0xffffffffffffffe4(%rbp),%rcx
   1ffe5:	ba 01 00 00 00       	mov    $0x1,%edx
   1ffea:	89 de                	mov    %ebx,%esi
   1ffec:	4c 89 ef             	mov    %r13,%rdi
   1ffef:	e8 1b c7 ff ff       	callq  1c70f <e1000_read_eeprom>
   1fff4:	85 c0                	test   %eax,%eax
   1fff6:	0f 88 9a 00 00 00    	js     20096 <e1000_update_eeprom_checksum+0xd9>
   1fffc:	66 8b 55 e6          	mov    0xffffffffffffffe6(%rbp),%dx
   20000:	03 55 e4             	add    0xffffffffffffffe4(%rbp),%edx
   20003:	ff c3                	inc    %ebx
   20005:	83 fb 3f             	cmp    $0x3f,%ebx
   20008:	66 89 55 e6          	mov    %dx,0xffffffffffffffe6(%rbp)
   2000c:	75 d3                	jne    1ffe1 <e1000_update_eeprom_checksum+0x24>
   2000e:	b8 ba ba ff ff       	mov    $0xffffbaba,%eax
   20013:	48 8d 4d e6          	lea    0xffffffffffffffe6(%rbp),%rcx
   20017:	be 3f 00 00 00       	mov    $0x3f,%esi
   2001c:	66 29 d0             	sub    %dx,%ax
   2001f:	4c 89 ef             	mov    %r13,%rdi
   20022:	ba 01 00 00 00       	mov    $0x1,%edx
   20027:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   2002b:	e8 48 fb ff ff       	callq  1fb78 <e1000_write_eeprom>
   20030:	85 c0                	test   %eax,%eax
   20032:	78 62                	js     20096 <e1000_update_eeprom_checksum+0xd9>
   20034:	41 8b 55 48          	mov    0x48(%r13),%edx
   20038:	83 fa 03             	cmp    $0x3,%edx
   2003b:	75 0a                	jne    20047 <e1000_update_eeprom_checksum+0x8a>
   2003d:	4c 89 ef             	mov    %r13,%rdi
   20040:	e8 0a 55 fe ff       	callq  554f <e1000_commit_shadow_ram>
   20045:	eb 4b                	jmp    20092 <e1000_update_eeprom_checksum+0xd5>
   20047:	31 c0                	xor    %eax,%eax
   20049:	83 fa 04             	cmp    $0x4,%edx
   2004c:	75 4b                	jne    20099 <e1000_update_eeprom_checksum+0xdc>
   2004e:	4c 89 ef             	mov    %r13,%rdi
   20051:	e8 f9 54 fe ff       	callq  554f <e1000_commit_shadow_ram>
   20056:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20059: R_X86_64_32S	.rodata.str1.1+0xae
   2005d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   20061:	e8 00 00 00 00       	callq  20066 <e1000_update_eeprom_checksum+0xa9>
			20062: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20066:	44 8b 63 18          	mov    0x18(%rbx),%r12d
   2006a:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   2006e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20071: R_X86_64_32S	.rodata.str1.1+0xb4
   20075:	41 81 cc 00 20 00 00 	or     $0x2000,%r12d
   2007c:	e8 00 00 00 00       	callq  20081 <e1000_update_eeprom_checksum+0xc4>
			2007d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20081:	48 83 c3 18          	add    $0x18,%rbx
   20085:	44 89 23             	mov    %r12d,(%rbx)
   20088:	bf 0a 00 00 00       	mov    $0xa,%edi
   2008d:	e8 be 7a fe ff       	callq  7b50 <msleep>
   20092:	31 c0                	xor    %eax,%eax
   20094:	eb 03                	jmp    20099 <e1000_update_eeprom_checksum+0xdc>
   20096:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   20099:	48 83 c4 18          	add    $0x18,%rsp
   2009d:	5b                   	pop    %rbx
   2009e:	41 5c                	pop    %r12
   200a0:	41 5d                	pop    %r13
   200a2:	c9                   	leaveq 
   200a3:	c3                   	retq   

00000000000200a4 <e1000_validate_eeprom_checksum>:
   200a4:	55                   	push   %rbp
   200a5:	48 89 e5             	mov    %rsp,%rbp
   200a8:	41 55                	push   %r13
   200aa:	41 54                	push   %r12
   200ac:	53                   	push   %rbx
   200ad:	48 89 fb             	mov    %rdi,%rbx
   200b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			200b3: R_X86_64_32S	.rodata.str1.1+0x27ba
   200b7:	48 83 ec 18          	sub    $0x18,%rsp
   200bb:	e8 00 00 00 00       	callq  200c0 <e1000_validate_eeprom_checksum+0x1c>
			200bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   200c0:	83 7b 10 10          	cmpl   $0x10,0x10(%rbx)
   200c4:	75 6e                	jne    20134 <e1000_validate_eeprom_checksum+0x90>
   200c6:	48 89 df             	mov    %rbx,%rdi
   200c9:	e8 f4 03 fe ff       	callq  4c2 <e1000_is_onboard_nvm_eeprom>
   200ce:	84 c0                	test   %al,%al
   200d0:	75 62                	jne    20134 <e1000_validate_eeprom_checksum+0x90>
   200d2:	4c 8d 65 e6          	lea    0xffffffffffffffe6(%rbp),%r12
   200d6:	ba 01 00 00 00       	mov    $0x1,%edx
   200db:	be 10 00 00 00       	mov    $0x10,%esi
   200e0:	48 89 df             	mov    %rbx,%rdi
   200e3:	4c 89 e1             	mov    %r12,%rcx
   200e6:	e8 24 c6 ff ff       	callq  1c70f <e1000_read_eeprom>
   200eb:	f6 45 e6 10          	testb  $0x10,0xffffffffffffffe6(%rbp)
   200ef:	75 43                	jne    20134 <e1000_validate_eeprom_checksum+0x90>
   200f1:	4c 89 e1             	mov    %r12,%rcx
   200f4:	ba 01 00 00 00       	mov    $0x1,%edx
   200f9:	be 23 00 00 00       	mov    $0x23,%esi
   200fe:	48 89 df             	mov    %rbx,%rdi
   20101:	e8 09 c6 ff ff       	callq  1c70f <e1000_read_eeprom>
   20106:	66 8b 45 e6          	mov    0xffffffffffffffe6(%rbp),%ax
   2010a:	66 85 c0             	test   %ax,%ax
   2010d:	78 25                	js     20134 <e1000_validate_eeprom_checksum+0x90>
   2010f:	66 0d 00 80          	or     $0x8000,%ax
   20113:	48 89 df             	mov    %rbx,%rdi
   20116:	4c 89 e1             	mov    %r12,%rcx
   20119:	ba 01 00 00 00       	mov    $0x1,%edx
   2011e:	be 23 00 00 00       	mov    $0x23,%esi
   20123:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   20127:	e8 4c fa ff ff       	callq  1fb78 <e1000_write_eeprom>
   2012c:	48 89 df             	mov    %rbx,%rdi
   2012f:	e8 89 fe ff ff       	callq  1ffbd <e1000_update_eeprom_checksum>
   20134:	83 7b 10 12          	cmpl   $0x12,0x10(%rbx)
   20138:	75 45                	jne    2017f <e1000_validate_eeprom_checksum+0xdb>
   2013a:	4c 8d 65 e6          	lea    0xffffffffffffffe6(%rbp),%r12
   2013e:	ba 01 00 00 00       	mov    $0x1,%edx
   20143:	be 19 00 00 00       	mov    $0x19,%esi
   20148:	48 89 df             	mov    %rbx,%rdi
   2014b:	4c 89 e1             	mov    %r12,%rcx
   2014e:	e8 bc c5 ff ff       	callq  1c70f <e1000_read_eeprom>
   20153:	66 8b 45 e6          	mov    0xffffffffffffffe6(%rbp),%ax
   20157:	a8 40                	test   $0x40,%al
   20159:	75 24                	jne    2017f <e1000_validate_eeprom_checksum+0xdb>
   2015b:	83 c8 40             	or     $0x40,%eax
   2015e:	48 89 df             	mov    %rbx,%rdi
   20161:	4c 89 e1             	mov    %r12,%rcx
   20164:	ba 01 00 00 00       	mov    $0x1,%edx
   20169:	be 19 00 00 00       	mov    $0x19,%esi
   2016e:	66 89 45 e6          	mov    %ax,0xffffffffffffffe6(%rbp)
   20172:	e8 01 fa ff ff       	callq  1fb78 <e1000_write_eeprom>
   20177:	48 89 df             	mov    %rbx,%rdi
   2017a:	e8 3e fe ff ff       	callq  1ffbd <e1000_update_eeprom_checksum>
   2017f:	45 31 ed             	xor    %r13d,%r13d
   20182:	45 31 e4             	xor    %r12d,%r12d
   20185:	48 8d 4d e6          	lea    0xffffffffffffffe6(%rbp),%rcx
   20189:	ba 01 00 00 00       	mov    $0x1,%edx
   2018e:	44 89 e6             	mov    %r12d,%esi
   20191:	48 89 df             	mov    %rbx,%rdi
   20194:	e8 76 c5 ff ff       	callq  1c70f <e1000_read_eeprom>
   20199:	85 c0                	test   %eax,%eax
   2019b:	78 18                	js     201b5 <e1000_validate_eeprom_checksum+0x111>
   2019d:	41 ff c4             	inc    %r12d
   201a0:	66 44 03 6d e6       	add    0xffffffffffffffe6(%rbp),%r13w
   201a5:	41 83 fc 40          	cmp    $0x40,%r12d
   201a9:	75 da                	jne    20185 <e1000_validate_eeprom_checksum+0xe1>
   201ab:	31 c0                	xor    %eax,%eax
   201ad:	66 41 81 fd ba ba    	cmp    $0xbaba,%r13w
   201b3:	74 03                	je     201b8 <e1000_validate_eeprom_checksum+0x114>
   201b5:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   201b8:	48 83 c4 18          	add    $0x18,%rsp
   201bc:	5b                   	pop    %rbx
   201bd:	41 5c                	pop    %r12
   201bf:	41 5d                	pop    %r13
   201c1:	c9                   	leaveq 
   201c2:	c3                   	retq   

00000000000201c3 <e1000_setup_link>:
   201c3:	55                   	push   %rbp
   201c4:	48 89 e5             	mov    %rsp,%rbp
   201c7:	41 57                	push   %r15
   201c9:	45 31 ff             	xor    %r15d,%r15d
   201cc:	41 56                	push   %r14
   201ce:	49 89 fe             	mov    %rdi,%r14
   201d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			201d4: R_X86_64_32S	.rodata.str1.1+0x27d9
   201d8:	41 55                	push   %r13
   201da:	41 54                	push   %r12
   201dc:	53                   	push   %rbx
   201dd:	48 83 ec 18          	sub    $0x18,%rsp
   201e1:	e8 00 00 00 00       	callq  201e6 <e1000_setup_link+0x23>
			201e2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   201e6:	4c 89 f7             	mov    %r14,%rdi
   201e9:	e8 26 ff fd ff       	callq  114 <e1000_check_phy_reset_block>
   201ee:	85 c0                	test   %eax,%eax
   201f0:	0f 85 78 05 00 00    	jne    2076e <e1000_setup_link+0x5ab>
   201f6:	41 81 7e 38 ff 00 00 	cmpl   $0xff,0x38(%r14)
   201fd:	00 
   201fe:	75 5d                	jne    2025d <e1000_setup_link+0x9a>
   20200:	41 8b 46 10          	mov    0x10(%r14),%eax
   20204:	83 f8 12             	cmp    $0x12,%eax
   20207:	74 05                	je     2020e <e1000_setup_link+0x4b>
   20209:	83 f8 10             	cmp    $0x10,%eax
   2020c:	75 0a                	jne    20218 <e1000_setup_link+0x55>
   2020e:	41 c7 46 38 03 00 00 	movl   $0x3,0x38(%r14)
   20215:	00 
   20216:	eb 45                	jmp    2025d <e1000_setup_link+0x9a>
   20218:	48 8d 4d d6          	lea    0xffffffffffffffd6(%rbp),%rcx
   2021c:	ba 01 00 00 00       	mov    $0x1,%edx
   20221:	be 0f 00 00 00       	mov    $0xf,%esi
   20226:	4c 89 f7             	mov    %r14,%rdi
   20229:	e8 e1 c4 ff ff       	callq  1c70f <e1000_read_eeprom>
   2022e:	85 c0                	test   %eax,%eax
   20230:	0f 85 2a 05 00 00    	jne    20760 <e1000_setup_link+0x59d>
   20236:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   2023a:	25 00 30 00 00       	and    $0x3000,%eax
   2023f:	75 0a                	jne    2024b <e1000_setup_link+0x88>
   20241:	41 c7 46 38 00 00 00 	movl   $0x0,0x38(%r14)
   20248:	00 
   20249:	eb 12                	jmp    2025d <e1000_setup_link+0x9a>
   2024b:	3d 00 20 00 00       	cmp    $0x2000,%eax
   20250:	0f 95 c0             	setne  %al
   20253:	0f b6 c0             	movzbl %al,%eax
   20256:	83 c0 02             	add    $0x2,%eax
   20259:	41 89 46 38          	mov    %eax,0x38(%r14)
   2025d:	41 83 7e 10 01       	cmpl   $0x1,0x10(%r14)
   20262:	75 05                	jne    20269 <e1000_setup_link+0xa6>
   20264:	41 83 66 38 fd       	andl   $0xfffffffffffffffd,0x38(%r14)
   20269:	41 83 7e 10 02       	cmpl   $0x2,0x10(%r14)
   2026e:	77 0f                	ja     2027f <e1000_setup_link+0xbc>
   20270:	41 80 be 15 01 00 00 	cmpb   $0x0,0x115(%r14)
   20277:	00 
   20278:	74 05                	je     2027f <e1000_setup_link+0xbc>
   2027a:	41 83 66 38 fe       	andl   $0xfffffffffffffffe,0x38(%r14)
   2027f:	41 83 7e 10 03       	cmpl   $0x3,0x10(%r14)
   20284:	41 8b 46 38          	mov    0x38(%r14),%eax
   20288:	41 89 86 8c 00 00 00 	mov    %eax,0x8c(%r14)
   2028f:	75 44                	jne    202d5 <e1000_setup_link+0x112>
   20291:	48 8d 4d d6          	lea    0xffffffffffffffd6(%rbp),%rcx
   20295:	ba 01 00 00 00       	mov    $0x1,%edx
   2029a:	be 0f 00 00 00       	mov    $0xf,%esi
   2029f:	4c 89 f7             	mov    %r14,%rdi
   202a2:	e8 68 c4 ff ff       	callq  1c70f <e1000_read_eeprom>
   202a7:	85 c0                	test   %eax,%eax
   202a9:	0f 85 b1 04 00 00    	jne    20760 <e1000_setup_link+0x59d>
   202af:	44 0f b7 65 d6       	movzwl 0xffffffffffffffd6(%rbp),%r12d
   202b4:	49 8b 1e             	mov    (%r14),%rbx
   202b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			202ba: R_X86_64_32S	.rodata.str1.1+0xb4
   202be:	e8 00 00 00 00       	callq  202c3 <e1000_setup_link+0x100>
			202bf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   202c3:	48 83 c3 18          	add    $0x18,%rbx
   202c7:	41 81 e4 f0 00 00 00 	and    $0xf0,%r12d
   202ce:	41 c1 e4 04          	shl    $0x4,%r12d
   202d2:	44 89 23             	mov    %r12d,(%rbx)
   202d5:	41 83 7e 1c 00       	cmpl   $0x0,0x1c(%r14)
   202da:	75 0d                	jne    202e9 <e1000_setup_link+0x126>
   202dc:	4c 89 f7             	mov    %r14,%rdi
   202df:	e8 4a e3 ff ff       	callq  1e62e <e1000_setup_copper_link>
   202e4:	e9 7d 04 00 00       	jmpq   20766 <e1000_setup_link+0x5a3>
   202e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			202ec: R_X86_64_32S	.rodata.str1.1+0x27ea
   202f0:	e8 00 00 00 00       	callq  202f5 <e1000_setup_link+0x132>
			202f1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   202f5:	41 8b 46 10          	mov    0x10(%r14),%eax
   202f9:	83 f8 0e             	cmp    $0xe,%eax
   202fc:	74 05                	je     20303 <e1000_setup_link+0x140>
   202fe:	83 f8 0f             	cmp    $0xf,%eax
   20301:	75 1a                	jne    2031d <e1000_setup_link+0x15a>
   20303:	49 8b 1e             	mov    (%r14),%rbx
   20306:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20309: R_X86_64_32S	.rodata.str1.1+0xb4
   2030d:	e8 00 00 00 00       	callq  20312 <e1000_setup_link+0x14f>
			2030e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20312:	b8 00 04 00 00       	mov    $0x400,%eax
   20317:	48 83 c3 24          	add    $0x24,%rbx
   2031b:	89 03                	mov    %eax,(%rbx)
   2031d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20320: R_X86_64_32S	.rodata.str1.1+0xae
   20324:	49 8b 1e             	mov    (%r14),%rbx
   20327:	e8 00 00 00 00       	callq  2032c <e1000_setup_link+0x169>
			20328: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2032c:	44 8b 2b             	mov    (%rbx),%r13d
   2032f:	41 83 7e 1c 01       	cmpl   $0x1,0x1c(%r14)
   20334:	75 0e                	jne    20344 <e1000_setup_link+0x181>
   20336:	41 83 7e 10 04       	cmpl   $0x4,0x10(%r14)
   2033b:	c7 45 c4 00 00 08 00 	movl   $0x80000,0xffffffffffffffc4(%rbp)
   20342:	77 07                	ja     2034b <e1000_setup_link+0x188>
   20344:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   2034b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2034e: R_X86_64_32S	.rodata.str1.1+0x2808
   20352:	e8 00 00 00 00       	callq  20357 <e1000_setup_link+0x194>
			20353: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20357:	41 83 7e 1c 02       	cmpl   $0x2,0x1c(%r14)
   2035c:	75 56                	jne    203b4 <e1000_setup_link+0x1f1>
   2035e:	41 8b 46 10          	mov    0x10(%r14),%eax
   20362:	83 f8 07             	cmp    $0x7,%eax
   20365:	74 05                	je     2036c <e1000_setup_link+0x1a9>
   20367:	83 f8 09             	cmp    $0x9,%eax
   2036a:	75 48                	jne    203b4 <e1000_setup_link+0x1f1>
   2036c:	48 8d 4d d4          	lea    0xffffffffffffffd4(%rbp),%rcx
   20370:	ba 01 00 00 00       	mov    $0x1,%edx
   20375:	be 06 00 00 00       	mov    $0x6,%esi
   2037a:	4c 89 f7             	mov    %r14,%rdi
   2037d:	e8 8d c3 ff ff       	callq  1c70f <e1000_read_eeprom>
   20382:	85 c0                	test   %eax,%eax
   20384:	0f 85 dc 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   2038a:	8b 45 d4             	mov    0xffffffffffffffd4(%rbp),%eax
   2038d:	66 83 f8 ff          	cmp    $0xffffffffffffffff,%ax
   20391:	74 21                	je     203b4 <e1000_setup_link+0x1f1>
   20393:	89 c2                	mov    %eax,%edx
   20395:	be 1a 00 00 00       	mov    $0x1a,%esi
   2039a:	4c 89 f7             	mov    %r14,%rdi
   2039d:	83 e2 0f             	and    $0xf,%edx
   203a0:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   203a4:	0f b7 d2             	movzwl %dx,%edx
   203a7:	e8 db 5a fe ff       	callq  5e87 <e1000_write_phy_reg>
   203ac:	85 c0                	test   %eax,%eax
   203ae:	0f 85 b2 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   203b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			203b7: R_X86_64_32S	.rodata.str1.1+0x2826
   203bb:	e8 00 00 00 00       	callq  203c0 <e1000_setup_link+0x1fd>
			203bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   203c0:	41 8b 46 10          	mov    0x10(%r14),%eax
   203c4:	66 c7 45 d4 00 00    	movw   $0x0,0xffffffffffffffd4(%rbp)
   203ca:	83 f8 07             	cmp    $0x7,%eax
   203cd:	74 09                	je     203d8 <e1000_setup_link+0x215>
   203cf:	83 f8 09             	cmp    $0x9,%eax
   203d2:	0f 85 e0 00 00 00    	jne    204b8 <e1000_setup_link+0x2f5>
   203d8:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   203dc:	be 1d 00 00 00       	mov    $0x1d,%esi
   203e1:	4c 89 f7             	mov    %r14,%rdi
   203e4:	e8 f0 5c fe ff       	callq  60d9 <e1000_read_phy_reg>
   203e9:	85 c0                	test   %eax,%eax
   203eb:	0f 85 75 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   203f1:	ba 05 00 00 00       	mov    $0x5,%edx
   203f6:	be 1d 00 00 00       	mov    $0x1d,%esi
   203fb:	4c 89 f7             	mov    %r14,%rdi
   203fe:	e8 84 5a fe ff       	callq  5e87 <e1000_write_phy_reg>
   20403:	85 c0                	test   %eax,%eax
   20405:	0f 85 5b 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   2040b:	48 8d 5d d2          	lea    0xffffffffffffffd2(%rbp),%rbx
   2040f:	be 1e 00 00 00       	mov    $0x1e,%esi
   20414:	4c 89 f7             	mov    %r14,%rdi
   20417:	48 89 da             	mov    %rbx,%rdx
   2041a:	e8 ba 5c fe ff       	callq  60d9 <e1000_read_phy_reg>
   2041f:	85 c0                	test   %eax,%eax
   20421:	0f 85 3f 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   20427:	66 8b 55 d2          	mov    0xffffffffffffffd2(%rbp),%dx
   2042b:	be 1e 00 00 00       	mov    $0x1e,%esi
   20430:	4c 89 f7             	mov    %r14,%rdi
   20433:	80 e6 fe             	and    $0xfe,%dh
   20436:	66 89 55 d2          	mov    %dx,0xffffffffffffffd2(%rbp)
   2043a:	0f b7 d2             	movzwl %dx,%edx
   2043d:	e8 45 5a fe ff       	callq  5e87 <e1000_write_phy_reg>
   20442:	85 c0                	test   %eax,%eax
   20444:	0f 85 1c 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   2044a:	ba 04 00 00 00       	mov    $0x4,%edx
   2044f:	be 1d 00 00 00       	mov    $0x1d,%esi
   20454:	4c 89 f7             	mov    %r14,%rdi
   20457:	e8 2b 5a fe ff       	callq  5e87 <e1000_write_phy_reg>
   2045c:	85 c0                	test   %eax,%eax
   2045e:	0f 85 02 03 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   20464:	48 89 da             	mov    %rbx,%rdx
   20467:	be 1e 00 00 00       	mov    $0x1e,%esi
   2046c:	4c 89 f7             	mov    %r14,%rdi
   2046f:	e8 65 5c fe ff       	callq  60d9 <e1000_read_phy_reg>
   20474:	85 c0                	test   %eax,%eax
   20476:	0f 85 ea 02 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   2047c:	66 8b 55 d2          	mov    0xffffffffffffffd2(%rbp),%dx
   20480:	be 1e 00 00 00       	mov    $0x1e,%esi
   20485:	4c 89 f7             	mov    %r14,%rdi
   20488:	80 ce 08             	or     $0x8,%dh
   2048b:	66 89 55 d2          	mov    %dx,0xffffffffffffffd2(%rbp)
   2048f:	0f b7 d2             	movzwl %dx,%edx
   20492:	e8 f0 59 fe ff       	callq  5e87 <e1000_write_phy_reg>
   20497:	85 c0                	test   %eax,%eax
   20499:	0f 85 c7 02 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   2049f:	0f b7 55 d4          	movzwl 0xffffffffffffffd4(%rbp),%edx
   204a3:	be 1d 00 00 00       	mov    $0x1d,%esi
   204a8:	4c 89 f7             	mov    %r14,%rdi
   204ab:	e8 d7 59 fe ff       	callq  5e87 <e1000_write_phy_reg>
   204b0:	85 c0                	test   %eax,%eax
   204b2:	0f 85 ae 02 00 00    	jne    20766 <e1000_setup_link+0x5a3>
   204b8:	4c 89 f7             	mov    %r14,%rdi
   204bb:	41 bc 20 00 00 80    	mov    $0x80000020,%r12d
   204c1:	e8 02 01 fe ff       	callq  5c8 <e1000_config_collision_dist>
   204c6:	41 8b 46 38          	mov    0x38(%r14),%eax
   204ca:	85 c0                	test   %eax,%eax
   204cc:	74 25                	je     204f3 <e1000_setup_link+0x330>
   204ce:	83 f8 01             	cmp    $0x1,%eax
   204d1:	74 1a                	je     204ed <e1000_setup_link+0x32a>
   204d3:	83 f8 02             	cmp    $0x2,%eax
   204d6:	41 bc 20 01 00 80    	mov    $0x80000120,%r12d
   204dc:	74 15                	je     204f3 <e1000_setup_link+0x330>
   204de:	83 f8 03             	cmp    $0x3,%eax
   204e1:	41 bf fd ff ff ff    	mov    $0xfffffffd,%r15d
   204e7:	0f 85 de 00 00 00    	jne    205cb <e1000_setup_link+0x408>
   204ed:	41 bc a0 01 00 80    	mov    $0x800001a0,%r12d
   204f3:	49 8b 1e             	mov    (%r14),%rbx
   204f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			204f9: R_X86_64_32S	.rodata.str1.1+0xb4
   204fd:	e8 00 00 00 00       	callq  20502 <e1000_setup_link+0x33f>
			204fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20502:	48 81 c3 78 01 00 00 	add    $0x178,%rbx
   20509:	44 89 23             	mov    %r12d,(%rbx)
   2050c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2050f: R_X86_64_32S	.rodata.str1.1+0xb4
   20513:	49 8b 1e             	mov    (%r14),%rbx
   20516:	41 83 e5 f7          	and    $0xfffffffffffffff7,%r13d
   2051a:	e8 00 00 00 00       	callq  2051f <e1000_setup_link+0x35c>
			2051b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2051f:	44 89 2b             	mov    %r13d,(%rbx)
   20522:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20525: R_X86_64_32S	.rodata.str1.1+0xae
   20529:	49 8b 1e             	mov    (%r14),%rbx
   2052c:	e8 00 00 00 00       	callq  20531 <e1000_setup_link+0x36e>
			2052d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20531:	8b 43 08             	mov    0x8(%rbx),%eax
   20534:	bf 01 00 00 00       	mov    $0x1,%edi
   20539:	45 89 a6 90 00 00 00 	mov    %r12d,0x90(%r14)
   20540:	e8 0b 76 fe ff       	callq  7b50 <msleep>
   20545:	41 83 7e 1c 02       	cmpl   $0x2,0x1c(%r14)
   2054a:	74 1e                	je     2056a <e1000_setup_link+0x3a7>
   2054c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2054f: R_X86_64_32S	.rodata.str1.1+0xae
   20553:	49 8b 1e             	mov    (%r14),%rbx
   20556:	e8 00 00 00 00       	callq  2055b <e1000_setup_link+0x398>
			20557: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2055b:	8b 03                	mov    (%rbx),%eax
   2055d:	45 31 ff             	xor    %r15d,%r15d
   20560:	25 00 00 08 00       	and    $0x80000,%eax
   20565:	3b 45 c4             	cmp    0xffffffffffffffc4(%rbp),%eax
   20568:	75 61                	jne    205cb <e1000_setup_link+0x408>
   2056a:	45 31 e4             	xor    %r12d,%r12d
   2056d:	bf 0a 00 00 00       	mov    $0xa,%edi
   20572:	e8 d9 75 fe ff       	callq  7b50 <msleep>
   20577:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2057a: R_X86_64_32S	.rodata.str1.1+0xae
   2057e:	49 8b 1e             	mov    (%r14),%rbx
   20581:	e8 00 00 00 00       	callq  20586 <e1000_setup_link+0x3c3>
			20582: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20586:	8b 43 08             	mov    0x8(%rbx),%eax
   20589:	a8 02                	test   $0x2,%al
   2058b:	75 30                	jne    205bd <e1000_setup_link+0x3fa>
   2058d:	41 ff c4             	inc    %r12d
   20590:	41 83 fc 32          	cmp    $0x32,%r12d
   20594:	75 d7                	jne    2056d <e1000_setup_link+0x3aa>
   20596:	41 c7 86 94 00 00 00 	movl   $0x1,0x94(%r14)
   2059d:	01 00 00 00 
   205a1:	4c 89 f7             	mov    %r14,%rdi
   205a4:	e8 cc d1 ff ff       	callq  1d775 <e1000_check_for_link>
   205a9:	85 c0                	test   %eax,%eax
   205ab:	41 89 c7             	mov    %eax,%r15d
   205ae:	75 1b                	jne    205cb <e1000_setup_link+0x408>
   205b0:	41 c7 86 94 00 00 00 	movl   $0x0,0x94(%r14)
   205b7:	00 00 00 00 
   205bb:	eb 0e                	jmp    205cb <e1000_setup_link+0x408>
   205bd:	41 c7 86 94 00 00 00 	movl   $0x0,0x94(%r14)
   205c4:	00 00 00 00 
   205c8:	45 31 ff             	xor    %r15d,%r15d
   205cb:	41 83 7e 10 12       	cmpl   $0x12,0x10(%r14)
   205d0:	74 4e                	je     20620 <e1000_setup_link+0x45d>
   205d2:	49 8b 1e             	mov    (%r14),%rbx
   205d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			205d8: R_X86_64_32S	.rodata.str1.1+0xb4
   205dc:	e8 00 00 00 00       	callq  205e1 <e1000_setup_link+0x41e>
			205dd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   205e1:	b8 08 88 00 00       	mov    $0x8808,%eax
   205e6:	48 83 c3 30          	add    $0x30,%rbx
   205ea:	89 03                	mov    %eax,(%rbx)
   205ec:	49 8b 1e             	mov    (%r14),%rbx
   205ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			205f2: R_X86_64_32S	.rodata.str1.1+0xb4
   205f6:	e8 00 00 00 00       	callq  205fb <e1000_setup_link+0x438>
			205f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   205fb:	b8 00 01 00 00       	mov    $0x100,%eax
   20600:	48 83 c3 2c          	add    $0x2c,%rbx
   20604:	89 03                	mov    %eax,(%rbx)
   20606:	49 8b 1e             	mov    (%r14),%rbx
   20609:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2060c: R_X86_64_32S	.rodata.str1.1+0xb4
   20610:	e8 00 00 00 00       	callq  20615 <e1000_setup_link+0x452>
			20611: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20615:	b8 01 80 c2 00       	mov    $0xc28001,%eax
   2061a:	48 83 c3 28          	add    $0x28,%rbx
   2061e:	89 03                	mov    %eax,(%rbx)
   20620:	49 8b 1e             	mov    (%r14),%rbx
   20623:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20626: R_X86_64_32S	.rodata.str1.1+0xb4
   2062a:	45 0f b7 a6 da 00 00 	movzwl 0xda(%r14),%r12d
   20631:	00 
   20632:	e8 00 00 00 00       	callq  20637 <e1000_setup_link+0x474>
			20633: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20637:	48 81 c3 70 01 00 00 	add    $0x170,%rbx
   2063e:	44 89 23             	mov    %r12d,(%rbx)
   20641:	41 f6 46 38 02       	testb  $0x2,0x38(%r14)
   20646:	75 65                	jne    206ad <e1000_setup_link+0x4ea>
   20648:	41 8b 46 10          	mov    0x10(%r14),%eax
   2064c:	4d 8b 26             	mov    (%r14),%r12
   2064f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20652: R_X86_64_32S	.rodata.str1.1+0xb4
   20656:	83 f8 03             	cmp    $0x3,%eax
   20659:	19 db                	sbb    %ebx,%ebx
   2065b:	81 e3 08 e0 ff ff    	and    $0xffffe008,%ebx
   20661:	81 c3 60 21 00 00    	add    $0x2160,%ebx
   20667:	48 63 db             	movslq %ebx,%rbx
   2066a:	e8 00 00 00 00       	callq  2066f <e1000_setup_link+0x4ac>
			2066b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2066f:	49 01 dc             	add    %rbx,%r12
   20672:	31 c0                	xor    %eax,%eax
   20674:	41 89 04 24          	mov    %eax,(%r12)
   20678:	41 8b 46 10          	mov    0x10(%r14),%eax
   2067c:	4d 8b 26             	mov    (%r14),%r12
   2067f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20682: R_X86_64_32S	.rodata.str1.1+0xb4
   20686:	83 f8 03             	cmp    $0x3,%eax
   20689:	19 db                	sbb    %ebx,%ebx
   2068b:	81 e3 f8 df ff ff    	and    $0xffffdff8,%ebx
   20691:	81 c3 68 21 00 00    	add    $0x2168,%ebx
   20697:	48 63 db             	movslq %ebx,%rbx
   2069a:	e8 00 00 00 00       	callq  2069f <e1000_setup_link+0x4dc>
			2069b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2069f:	49 01 dc             	add    %rbx,%r12
   206a2:	31 c0                	xor    %eax,%eax
   206a4:	41 89 04 24          	mov    %eax,(%r12)
   206a8:	e9 c1 00 00 00       	jmpq   2076e <e1000_setup_link+0x5ab>
   206ad:	41 80 be 13 01 00 00 	cmpb   $0x0,0x113(%r14)
   206b4:	00 
   206b5:	41 8b 46 10          	mov    0x10(%r14),%eax
   206b9:	74 3b                	je     206f6 <e1000_setup_link+0x533>
   206bb:	83 f8 03             	cmp    $0x3,%eax
   206be:	45 0f b7 a6 d8 00 00 	movzwl 0xd8(%r14),%r12d
   206c5:	00 
   206c6:	4d 8b 2e             	mov    (%r14),%r13
   206c9:	19 db                	sbb    %ebx,%ebx
   206cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			206ce: R_X86_64_32S	.rodata.str1.1+0xb4
   206d2:	81 e3 08 e0 ff ff    	and    $0xffffe008,%ebx
   206d8:	81 c3 60 21 00 00    	add    $0x2160,%ebx
   206de:	48 63 db             	movslq %ebx,%rbx
   206e1:	41 81 cc 00 00 00 80 	or     $0x80000000,%r12d
   206e8:	e8 00 00 00 00       	callq  206ed <e1000_setup_link+0x52a>
			206e9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   206ed:	49 01 dd             	add    %rbx,%r13
   206f0:	45 89 65 00          	mov    %r12d,0x0(%r13)
   206f4:	eb 32                	jmp    20728 <e1000_setup_link+0x565>
   206f6:	83 f8 03             	cmp    $0x3,%eax
   206f9:	4d 8b 26             	mov    (%r14),%r12
   206fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			206ff: R_X86_64_32S	.rodata.str1.1+0xb4
   20703:	19 db                	sbb    %ebx,%ebx
   20705:	45 0f b7 ae d8 00 00 	movzwl 0xd8(%r14),%r13d
   2070c:	00 
   2070d:	81 e3 08 e0 ff ff    	and    $0xffffe008,%ebx
   20713:	81 c3 60 21 00 00    	add    $0x2160,%ebx
   20719:	48 63 db             	movslq %ebx,%rbx
   2071c:	e8 00 00 00 00       	callq  20721 <e1000_setup_link+0x55e>
			2071d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20721:	49 01 dc             	add    %rbx,%r12
   20724:	45 89 2c 24          	mov    %r13d,(%r12)
   20728:	41 8b 46 10          	mov    0x10(%r14),%eax
   2072c:	4d 8b 26             	mov    (%r14),%r12
   2072f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20732: R_X86_64_32S	.rodata.str1.1+0xb4
   20736:	45 0f b7 ae d6 00 00 	movzwl 0xd6(%r14),%r13d
   2073d:	00 
   2073e:	83 f8 03             	cmp    $0x3,%eax
   20741:	19 db                	sbb    %ebx,%ebx
   20743:	81 e3 f8 df ff ff    	and    $0xffffdff8,%ebx
   20749:	81 c3 68 21 00 00    	add    $0x2168,%ebx
   2074f:	48 63 db             	movslq %ebx,%rbx
   20752:	e8 00 00 00 00       	callq  20757 <e1000_setup_link+0x594>
			20753: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20757:	49 01 dc             	add    %rbx,%r12
   2075a:	45 89 2c 24          	mov    %r13d,(%r12)
   2075e:	eb 0e                	jmp    2076e <e1000_setup_link+0x5ab>
   20760:	41 83 cf ff          	or     $0xffffffffffffffff,%r15d
   20764:	eb 08                	jmp    2076e <e1000_setup_link+0x5ab>
   20766:	41 89 c7             	mov    %eax,%r15d
   20769:	e9 5d fe ff ff       	jmpq   205cb <e1000_setup_link+0x408>
   2076e:	48 83 c4 18          	add    $0x18,%rsp
   20772:	44 89 f8             	mov    %r15d,%eax
   20775:	5b                   	pop    %rbx
   20776:	41 5c                	pop    %r12
   20778:	41 5d                	pop    %r13
   2077a:	41 5e                	pop    %r14
   2077c:	41 5f                	pop    %r15
   2077e:	c9                   	leaveq 
   2077f:	c3                   	retq   

0000000000020780 <e1000_init_hw>:
   20780:	55                   	push   %rbp
   20781:	48 89 e5             	mov    %rsp,%rbp
   20784:	41 57                	push   %r15
   20786:	49 89 ff             	mov    %rdi,%r15
   20789:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2078c: R_X86_64_32S	.rodata.str1.1+0x283a
   20790:	41 56                	push   %r14
   20792:	41 55                	push   %r13
   20794:	41 54                	push   %r12
   20796:	53                   	push   %rbx
   20797:	48 83 ec 38          	sub    $0x38,%rsp
   2079b:	e8 00 00 00 00       	callq  207a0 <e1000_init_hw+0x20>
			2079c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   207a0:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   207a5:	75 4e                	jne    207f5 <e1000_init_hw+0x75>
   207a7:	41 80 bf ee 00 00 00 	cmpb   $0x2,0xee(%r15)
   207ae:	02 
   207af:	76 14                	jbe    207c5 <e1000_init_hw+0x45>
   207b1:	66 41 8b 87 e6 00 00 	mov    0xe6(%r15),%ax
   207b8:	00 
   207b9:	66 3d 49 10          	cmp    $0x1049,%ax
   207bd:	74 36                	je     207f5 <e1000_init_hw+0x75>
   207bf:	66 3d 4d 10          	cmp    $0x104d,%ax
   207c3:	74 30                	je     207f5 <e1000_init_hw+0x75>
   207c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			207c8: R_X86_64_32S	.rodata.str1.1+0xae
   207cc:	49 8b 1f             	mov    (%r15),%rbx
   207cf:	e8 00 00 00 00       	callq  207d4 <e1000_init_hw+0x54>
			207d0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   207d4:	44 8b 63 08          	mov    0x8(%rbx),%r12d
   207d8:	49 8b 1f             	mov    (%r15),%rbx
   207db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			207de: R_X86_64_32S	.rodata.str1.1+0xb4
   207e2:	41 81 e4 ff ff ff 7f 	and    $0x7fffffff,%r12d
   207e9:	e8 00 00 00 00       	callq  207ee <e1000_init_hw+0x6e>
			207ea: R_X86_64_PC32	record_function+0xfffffffffffffffc
   207ee:	48 83 c3 08          	add    $0x8,%rbx
   207f2:	44 89 23             	mov    %r12d,(%rbx)
   207f5:	4c 89 ff             	mov    %r15,%rdi
   207f8:	e8 d7 ec ff ff       	callq  1f4d4 <e1000_id_led_init>
   207fd:	85 c0                	test   %eax,%eax
   207ff:	41 89 c5             	mov    %eax,%r13d
   20802:	0f 85 5c 0c 00 00    	jne    21464 <e1000_init_hw+0xce4>
   20808:	4c 89 ff             	mov    %r15,%rdi
   2080b:	e8 5d 01 fe ff       	callq  96d <e1000_set_media_type>
   20810:	4c 89 ff             	mov    %r15,%rdi
   20813:	e8 35 fe fd ff       	callq  64d <e1000_initialize_hardware_bits>
   20818:	41 8b 47 10          	mov    0x10(%r15),%eax
   2081c:	83 f8 12             	cmp    $0x12,%eax
   2081f:	0f 84 e4 00 00 00    	je     20909 <e1000_init_hw+0x189>
   20825:	83 f8 06             	cmp    $0x6,%eax
   20828:	77 17                	ja     20841 <e1000_init_hw+0xc1>
   2082a:	49 8b 1f             	mov    (%r15),%rbx
   2082d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20830: R_X86_64_32S	.rodata.str1.1+0xb4
   20834:	e8 00 00 00 00       	callq  20839 <e1000_init_hw+0xb9>
			20835: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20839:	31 c0                	xor    %eax,%eax
   2083b:	48 83 c3 38          	add    $0x38,%rbx
   2083f:	89 03                	mov    %eax,(%rbx)
   20841:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20844: R_X86_64_32S	.rodata.str1.1+0x2848
   20848:	e8 00 00 00 00       	callq  2084d <e1000_init_hw+0xcd>
			20849: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2084d:	41 8b 47 10          	mov    0x10(%r15),%eax
   20851:	83 f8 12             	cmp    $0x12,%eax
   20854:	0f 84 af 00 00 00    	je     20909 <e1000_init_hw+0x189>
   2085a:	83 f8 10             	cmp    $0x10,%eax
   2085d:	75 2c                	jne    2088b <e1000_init_hw+0x10b>
   2085f:	66 41 8b 97 c6 00 00 	mov    0xc6(%r15),%dx
   20866:	00 
   20867:	66 85 d2             	test   %dx,%dx
   2086a:	74 1f                	je     2088b <e1000_init_hw+0x10b>
   2086c:	89 d0                	mov    %edx,%eax
   2086e:	c7 45 c4 01 00 00 00 	movl   $0x1,0xffffffffffffffc4(%rbp)
   20875:	66 c1 e8 05          	shr    $0x5,%ax
   20879:	89 c1                	mov    %eax,%ecx
   2087b:	83 e1 7f             	and    $0x7f,%ecx
   2087e:	89 4d b0             	mov    %ecx,0xffffffffffffffb0(%rbp)
   20881:	89 d1                	mov    %edx,%ecx
   20883:	83 e1 1f             	and    $0x1f,%ecx
   20886:	d3 65 c4             	shll   %cl,0xffffffffffffffc4(%rbp)
   20889:	eb 0e                	jmp    20899 <e1000_init_hw+0x119>
   2088b:	c7 45 b0 00 00 00 00 	movl   $0x0,0xffffffffffffffb0(%rbp)
   20892:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   20899:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   208a0:	00 
   208a1:	41 8b 47 10          	mov    0x10(%r15),%eax
   208a5:	44 8b 6d b8          	mov    0xffffffffffffffb8(%rbp),%r13d
   208a9:	45 31 f6             	xor    %r14d,%r14d
   208ac:	44 3b 6d b0          	cmp    0xffffffffffffffb0(%rbp),%r13d
   208b0:	4d 8b 27             	mov    (%r15),%r12
   208b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			208b6: R_X86_64_32S	.rodata.str1.1+0xb4
   208ba:	44 0f 44 75 c4       	cmove  0xffffffffffffffc4(%rbp),%r14d
   208bf:	83 f8 03             	cmp    $0x3,%eax
   208c2:	19 db                	sbb    %ebx,%ebx
   208c4:	41 c1 e5 02          	shl    $0x2,%r13d
   208c8:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
   208ce:	45 89 ed             	mov    %r13d,%r13d
   208d1:	81 c3 00 56 00 00    	add    $0x5600,%ebx
   208d7:	48 63 db             	movslq %ebx,%rbx
   208da:	49 01 dc             	add    %rbx,%r12
   208dd:	e8 00 00 00 00       	callq  208e2 <e1000_init_hw+0x162>
			208de: R_X86_64_PC32	record_function+0xfffffffffffffffc
   208e2:	4d 01 ec             	add    %r13,%r12
   208e5:	45 89 34 24          	mov    %r14d,(%r12)
   208e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			208ec: R_X86_64_32S	.rodata.str1.1+0xae
   208f0:	49 8b 1f             	mov    (%r15),%rbx
   208f3:	e8 00 00 00 00       	callq  208f8 <e1000_init_hw+0x178>
			208f4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   208f8:	8b 43 08             	mov    0x8(%rbx),%eax
   208fb:	48 ff 45 b8          	incq   0xffffffffffffffb8(%rbp)
   208ff:	48 81 7d b8 80 00 00 	cmpq   $0x80,0xffffffffffffffb8(%rbp)
   20906:	00 
   20907:	75 98                	jne    208a1 <e1000_init_hw+0x121>
   20909:	41 83 7f 10 01       	cmpl   $0x1,0x10(%r15)
   2090e:	75 41                	jne    20951 <e1000_init_hw+0x1d1>
   20910:	4c 89 ff             	mov    %r15,%rdi
   20913:	e8 83 2e fe ff       	callq  379b <e1000_pci_clear_mwi>
   20918:	49 8b 1f             	mov    (%r15),%rbx
   2091b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2091e: R_X86_64_32S	.rodata.str1.1+0xb4
   20922:	e8 00 00 00 00       	callq  20927 <e1000_init_hw+0x1a7>
			20923: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20927:	b8 01 00 00 00       	mov    $0x1,%eax
   2092c:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   20933:	89 03                	mov    %eax,(%rbx)
   20935:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20938: R_X86_64_32S	.rodata.str1.1+0xae
   2093c:	49 8b 1f             	mov    (%r15),%rbx
   2093f:	e8 00 00 00 00       	callq  20944 <e1000_init_hw+0x1c4>
			20940: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20944:	8b 43 08             	mov    0x8(%rbx),%eax
   20947:	bf 05 00 00 00       	mov    $0x5,%edi
   2094c:	e8 ff 71 fe ff       	callq  7b50 <msleep>
   20951:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20954: R_X86_64_32S	.rodata.str1.1+0x2859
   20958:	e8 00 00 00 00       	callq  2095d <e1000_init_hw+0x1dd>
			20959: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2095d:	49 8d b7 f4 00 00 00 	lea    0xf4(%r15),%rsi
   20964:	31 d2                	xor    %edx,%edx
   20966:	4c 89 ff             	mov    %r15,%rdi
   20969:	e8 20 fa fd ff       	callq  38e <e1000_rar_set>
   2096e:	41 83 7f 10 0e       	cmpl   $0xe,0x10(%r15)
   20973:	75 10                	jne    20985 <e1000_init_hw+0x205>
   20975:	41 80 bf 10 01 00 00 	cmpb   $0x0,0x110(%r15)
   2097c:	00 
   2097d:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
   20983:	75 06                	jne    2098b <e1000_init_hw+0x20b>
   20985:	41 bd 0f 00 00 00    	mov    $0xf,%r13d
   2098b:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   20990:	b8 06 00 00 00       	mov    $0x6,%eax
   20995:	c7 45 b4 01 00 00 00 	movl   $0x1,0xffffffffffffffb4(%rbp)
   2099c:	c7 45 a8 0c 00 00 00 	movl   $0xc,0xffffffffffffffa8(%rbp)
   209a3:	41 be 08 00 00 00    	mov    $0x8,%r14d
   209a9:	44 0f 44 e8          	cmove  %eax,%r13d
   209ad:	44 39 6d b4          	cmp    %r13d,0xffffffffffffffb4(%rbp)
   209b1:	41 8b 47 10          	mov    0x10(%r15),%eax
   209b5:	0f 83 9c 00 00 00    	jae    20a57 <e1000_init_hw+0x2d7>
   209bb:	83 f8 03             	cmp    $0x3,%eax
   209be:	4d 8b 27             	mov    (%r15),%r12
   209c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			209c4: R_X86_64_32S	.rodata.str1.1+0xb4
   209c8:	19 db                	sbb    %ebx,%ebx
   209ca:	81 e3 40 ac ff ff    	and    $0xffffac40,%ebx
   209d0:	81 c3 00 54 00 00    	add    $0x5400,%ebx
   209d6:	48 63 db             	movslq %ebx,%rbx
   209d9:	e8 00 00 00 00       	callq  209de <e1000_init_hw+0x25e>
			209da: R_X86_64_PC32	record_function+0xfffffffffffffffc
   209de:	49 01 dc             	add    %rbx,%r12
   209e1:	44 89 f0             	mov    %r14d,%eax
   209e4:	49 01 c4             	add    %rax,%r12
   209e7:	31 c0                	xor    %eax,%eax
   209e9:	41 89 04 24          	mov    %eax,(%r12)
   209ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			209f0: R_X86_64_32S	.rodata.str1.1+0xae
   209f4:	49 8b 1f             	mov    (%r15),%rbx
   209f7:	e8 00 00 00 00       	callq  209fc <e1000_init_hw+0x27c>
			209f8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   209fc:	8b 43 08             	mov    0x8(%rbx),%eax
   209ff:	41 8b 47 10          	mov    0x10(%r15),%eax
   20a03:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20a06: R_X86_64_32S	.rodata.str1.1+0xb4
   20a0a:	4d 8b 27             	mov    (%r15),%r12
   20a0d:	83 f8 03             	cmp    $0x3,%eax
   20a10:	19 db                	sbb    %ebx,%ebx
   20a12:	81 e3 40 ac ff ff    	and    $0xffffac40,%ebx
   20a18:	e8 00 00 00 00       	callq  20a1d <e1000_init_hw+0x29d>
			20a19: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20a1d:	8b 45 a8             	mov    0xffffffffffffffa8(%rbp),%eax
   20a20:	81 c3 00 54 00 00    	add    $0x5400,%ebx
   20a26:	48 63 db             	movslq %ebx,%rbx
   20a29:	49 01 dc             	add    %rbx,%r12
   20a2c:	49 01 c4             	add    %rax,%r12
   20a2f:	31 c0                	xor    %eax,%eax
   20a31:	41 89 04 24          	mov    %eax,(%r12)
   20a35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20a38: R_X86_64_32S	.rodata.str1.1+0xae
   20a3c:	49 8b 1f             	mov    (%r15),%rbx
   20a3f:	e8 00 00 00 00       	callq  20a44 <e1000_init_hw+0x2c4>
			20a40: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20a44:	8b 43 08             	mov    0x8(%rbx),%eax
   20a47:	ff 45 b4             	incl   0xffffffffffffffb4(%rbp)
   20a4a:	83 45 a8 08          	addl   $0x8,0xffffffffffffffa8(%rbp)
   20a4e:	41 83 c6 08          	add    $0x8,%r14d
   20a52:	e9 56 ff ff ff       	jmpq   209ad <e1000_init_hw+0x22d>
   20a57:	ff c8                	dec    %eax
   20a59:	75 48                	jne    20aa3 <e1000_init_hw+0x323>
   20a5b:	49 8b 1f             	mov    (%r15),%rbx
   20a5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20a61: R_X86_64_32S	.rodata.str1.1+0xb4
   20a65:	e8 00 00 00 00       	callq  20a6a <e1000_init_hw+0x2ea>
			20a66: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20a6a:	31 c0                	xor    %eax,%eax
   20a6c:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   20a73:	89 03                	mov    %eax,(%rbx)
   20a75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20a78: R_X86_64_32S	.rodata.str1.1+0xae
   20a7c:	49 8b 1f             	mov    (%r15),%rbx
   20a7f:	e8 00 00 00 00       	callq  20a84 <e1000_init_hw+0x304>
			20a80: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20a84:	8b 43 08             	mov    0x8(%rbx),%eax
   20a87:	bf 01 00 00 00       	mov    $0x1,%edi
   20a8c:	e8 bf 70 fe ff       	callq  7b50 <msleep>
   20a91:	41 f6 87 d4 00 00 00 	testb  $0x10,0xd4(%r15)
   20a98:	10 
   20a99:	74 08                	je     20aa3 <e1000_init_hw+0x323>
   20a9b:	4c 89 ff             	mov    %r15,%rdi
   20a9e:	e8 b0 30 fe ff       	callq  3b53 <e1000_pci_set_mwi>
   20aa3:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   20aa8:	c7 45 ac 20 00 00 00 	movl   $0x20,0xffffffffffffffac(%rbp)
   20aaf:	b8 80 00 00 00       	mov    $0x80,%eax
   20ab4:	0f 44 45 ac          	cmove  0xffffffffffffffac(%rbp),%eax
   20ab8:	45 31 f6             	xor    %r14d,%r14d
   20abb:	45 31 ed             	xor    %r13d,%r13d
   20abe:	89 45 ac             	mov    %eax,0xffffffffffffffac(%rbp)
   20ac1:	44 3b 75 ac          	cmp    0xffffffffffffffac(%rbp),%r14d
   20ac5:	74 51                	je     20b18 <e1000_init_hw+0x398>
   20ac7:	41 8b 47 10          	mov    0x10(%r15),%eax
   20acb:	4d 8b 27             	mov    (%r15),%r12
   20ace:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20ad1: R_X86_64_32S	.rodata.str1.1+0xb4
   20ad5:	83 f8 03             	cmp    $0x3,%eax
   20ad8:	19 db                	sbb    %ebx,%ebx
   20ada:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
   20ae0:	81 c3 00 52 00 00    	add    $0x5200,%ebx
   20ae6:	48 63 db             	movslq %ebx,%rbx
   20ae9:	e8 00 00 00 00       	callq  20aee <e1000_init_hw+0x36e>
			20aea: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20aee:	49 01 dc             	add    %rbx,%r12
   20af1:	44 89 e8             	mov    %r13d,%eax
   20af4:	49 01 c4             	add    %rax,%r12
   20af7:	31 c0                	xor    %eax,%eax
   20af9:	41 89 04 24          	mov    %eax,(%r12)
   20afd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20b00: R_X86_64_32S	.rodata.str1.1+0xae
   20b04:	49 8b 1f             	mov    (%r15),%rbx
   20b07:	e8 00 00 00 00       	callq  20b0c <e1000_init_hw+0x38c>
			20b08: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20b0c:	8b 43 08             	mov    0x8(%rbx),%eax
   20b0f:	41 ff c6             	inc    %r14d
   20b12:	41 83 c5 04          	add    $0x4,%r13d
   20b16:	eb a9                	jmp    20ac1 <e1000_init_hw+0x341>
   20b18:	41 80 bf f3 00 00 00 	cmpb   $0x0,0xf3(%r15)
   20b1f:	00 
   20b20:	74 2e                	je     20b50 <e1000_init_hw+0x3d0>
   20b22:	41 83 7f 10 03       	cmpl   $0x3,0x10(%r15)
   20b27:	77 27                	ja     20b50 <e1000_init_hw+0x3d0>
   20b29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20b2c: R_X86_64_32S	.rodata.str1.1+0xae
   20b30:	49 8b 1f             	mov    (%r15),%rbx
   20b33:	e8 00 00 00 00       	callq  20b38 <e1000_init_hw+0x3b8>
			20b34: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20b38:	8b 1b                	mov    (%rbx),%ebx
   20b3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20b3d: R_X86_64_32S	.rodata.str1.1+0xb4
   20b41:	4d 8b 27             	mov    (%r15),%r12
   20b44:	83 cb 04             	or     $0x4,%ebx
   20b47:	e8 00 00 00 00       	callq  20b4c <e1000_init_hw+0x3cc>
			20b48: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20b4c:	41 89 1c 24          	mov    %ebx,(%r12)
   20b50:	41 8b 47 10          	mov    0x10(%r15),%eax
   20b54:	83 f8 07             	cmp    $0x7,%eax
   20b57:	74 28                	je     20b81 <e1000_init_hw+0x401>
   20b59:	83 f8 09             	cmp    $0x9,%eax
   20b5c:	74 23                	je     20b81 <e1000_init_hw+0x401>
   20b5e:	41 83 7f 44 02       	cmpl   $0x2,0x44(%r15)
   20b63:	75 1c                	jne    20b81 <e1000_init_hw+0x401>
   20b65:	4c 89 ff             	mov    %r15,%rdi
   20b68:	e8 1e 69 ff ff       	callq  1748b <e1000_pcix_get_mmrbc>
   20b6d:	3d 00 08 00 00       	cmp    $0x800,%eax
   20b72:	7e 0d                	jle    20b81 <e1000_init_hw+0x401>
   20b74:	be 00 08 00 00       	mov    $0x800,%esi
   20b79:	4c 89 ff             	mov    %r15,%rdi
   20b7c:	e8 42 33 ff ff       	callq  13ec3 <e1000_pcix_set_mmrbc>
   20b81:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   20b86:	75 0a                	jne    20b92 <e1000_init_hw+0x412>
   20b88:	bf 0f 00 00 00       	mov    $0xf,%edi
   20b8d:	e8 be 6f fe ff       	callq  7b50 <msleep>
   20b92:	4c 89 ff             	mov    %r15,%rdi
   20b95:	e8 29 f6 ff ff       	callq  201c3 <e1000_setup_link>
   20b9a:	41 83 7f 10 04       	cmpl   $0x4,0x10(%r15)
   20b9f:	41 89 c5             	mov    %eax,%r13d
   20ba2:	76 3d                	jbe    20be1 <e1000_init_hw+0x461>
   20ba4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20ba7: R_X86_64_32S	.rodata.str1.1+0xae
   20bab:	49 8b 1f             	mov    (%r15),%rbx
   20bae:	e8 00 00 00 00       	callq  20bb3 <e1000_init_hw+0x433>
			20baf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20bb3:	44 8b a3 28 38 00 00 	mov    0x3828(%rbx),%r12d
   20bba:	49 8b 1f             	mov    (%r15),%rbx
   20bbd:	41 81 e4 ff ff c0 fe 	and    $0xfec0ffff,%r12d
   20bc4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20bc7: R_X86_64_32S	.rodata.str1.1+0xb4
   20bcb:	41 81 cc 00 00 01 01 	or     $0x1010000,%r12d
   20bd2:	e8 00 00 00 00       	callq  20bd7 <e1000_init_hw+0x457>
			20bd3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20bd7:	48 81 c3 28 38 00 00 	add    $0x3828,%rbx
   20bde:	44 89 23             	mov    %r12d,(%rbx)
   20be1:	41 83 7f 10 10       	cmpl   $0x10,0x10(%r15)
   20be6:	75 08                	jne    20bf0 <e1000_init_hw+0x470>
   20be8:	4c 89 ff             	mov    %r15,%rdi
   20beb:	e8 6f 48 fe ff       	callq  545f <e1000_enable_tx_pkt_filtering>
   20bf0:	41 8b 47 10          	mov    0x10(%r15),%eax
   20bf4:	83 f8 11             	cmp    $0x11,%eax
   20bf7:	74 20                	je     20c19 <e1000_init_hw+0x499>
   20bf9:	83 f8 0e             	cmp    $0xe,%eax
   20bfc:	0f 84 fa 00 00 00    	je     20cfc <e1000_init_hw+0x57c>
   20c02:	83 f8 0f             	cmp    $0xf,%eax
   20c05:	0f 84 f1 00 00 00    	je     20cfc <e1000_init_hw+0x57c>
   20c0b:	83 f8 12             	cmp    $0x12,%eax
   20c0e:	0f 85 25 01 00 00    	jne    20d39 <e1000_init_hw+0x5b9>
   20c14:	e9 e3 00 00 00       	jmpq   20cfc <e1000_init_hw+0x57c>
   20c19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20c1c: R_X86_64_32S	.rodata.str1.1+0xae
   20c20:	49 8b 1f             	mov    (%r15),%rbx
   20c23:	e8 00 00 00 00       	callq  20c28 <e1000_init_hw+0x4a8>
			20c24: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20c28:	44 8b a3 00 04 00 00 	mov    0x400(%rbx),%r12d
   20c2f:	49 8b 1f             	mov    (%r15),%rbx
   20c32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20c35: R_X86_64_32S	.rodata.str1.1+0xb4
   20c39:	41 81 cc 00 00 00 01 	or     $0x1000000,%r12d
   20c40:	e8 00 00 00 00       	callq  20c45 <e1000_init_hw+0x4c5>
			20c41: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20c45:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   20c4c:	44 89 23             	mov    %r12d,(%rbx)
   20c4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20c52: R_X86_64_32S	.rodata.str1.1+0xae
   20c56:	49 8b 1f             	mov    (%r15),%rbx
   20c59:	e8 00 00 00 00       	callq  20c5e <e1000_init_hw+0x4de>
			20c5a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20c5e:	44 8b a3 04 04 00 00 	mov    0x404(%rbx),%r12d
   20c65:	49 8b 1f             	mov    (%r15),%rbx
   20c68:	41 81 e4 ff 03 f0 ff 	and    $0xfff003ff,%r12d
   20c6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20c72: R_X86_64_32S	.rodata.str1.1+0xb4
   20c76:	41 81 cc 00 00 01 00 	or     $0x10000,%r12d
   20c7d:	e8 00 00 00 00       	callq  20c82 <e1000_init_hw+0x502>
			20c7e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20c82:	48 81 c3 04 04 00 00 	add    $0x404,%rbx
   20c89:	44 89 23             	mov    %r12d,(%rbx)
   20c8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20c8f: R_X86_64_32S	.rodata.str1.1+0xae
   20c93:	49 8b 1f             	mov    (%r15),%rbx
   20c96:	e8 00 00 00 00       	callq  20c9b <e1000_init_hw+0x51b>
			20c97: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20c9b:	44 8b a3 10 04 00 00 	mov    0x410(%rbx),%r12d
   20ca2:	49 8b 1f             	mov    (%r15),%rbx
   20ca5:	41 81 e4 00 fc ff ff 	and    $0xfffffc00,%r12d
   20cac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20caf: R_X86_64_32S	.rodata.str1.1+0xb4
   20cb3:	41 83 cc 08          	or     $0x8,%r12d
   20cb7:	e8 00 00 00 00       	callq  20cbc <e1000_init_hw+0x53c>
			20cb8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20cbc:	48 81 c3 10 04 00 00 	add    $0x410,%rbx
   20cc3:	44 89 23             	mov    %r12d,(%rbx)
   20cc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20cc9: R_X86_64_32S	.rodata.str1.1+0xae
   20ccd:	49 8b 1f             	mov    (%r15),%rbx
   20cd0:	e8 00 00 00 00       	callq  20cd5 <e1000_init_hw+0x555>
			20cd1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20cd5:	44 8b a3 04 5f 00 00 	mov    0x5f04(%rbx),%r12d
   20cdc:	49 8b 1f             	mov    (%r15),%rbx
   20cdf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20ce2: R_X86_64_32S	.rodata.str1.1+0xb4
   20ce6:	41 81 e4 ff ff ef ff 	and    $0xffefffff,%r12d
   20ced:	e8 00 00 00 00       	callq  20cf2 <e1000_init_hw+0x572>
			20cee: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20cf2:	48 81 c3 04 5f 00 00 	add    $0x5f04,%rbx
   20cf9:	44 89 23             	mov    %r12d,(%rbx)
   20cfc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20cff: R_X86_64_32S	.rodata.str1.1+0xae
   20d03:	49 8b 1f             	mov    (%r15),%rbx
   20d06:	e8 00 00 00 00       	callq  20d0b <e1000_init_hw+0x58b>
			20d07: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20d0b:	44 8b a3 28 39 00 00 	mov    0x3928(%rbx),%r12d
   20d12:	49 8b 1f             	mov    (%r15),%rbx
   20d15:	41 81 e4 ff ff c0 fe 	and    $0xfec0ffff,%r12d
   20d1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d1f: R_X86_64_32S	.rodata.str1.1+0xb4
   20d23:	41 81 cc 00 00 01 01 	or     $0x1010000,%r12d
   20d2a:	e8 00 00 00 00       	callq  20d2f <e1000_init_hw+0x5af>
			20d2b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20d2f:	48 81 c3 28 39 00 00 	add    $0x3928,%rbx
   20d36:	44 89 23             	mov    %r12d,(%rbx)
   20d39:	41 83 7f 10 10       	cmpl   $0x10,0x10(%r15)
   20d3e:	75 36                	jne    20d76 <e1000_init_hw+0x5f6>
   20d40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d43: R_X86_64_32S	.rodata.str1.1+0xae
   20d47:	49 8b 1f             	mov    (%r15),%rbx
   20d4a:	e8 00 00 00 00       	callq  20d4f <e1000_init_hw+0x5cf>
			20d4b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20d4f:	44 8b a3 00 5b 00 00 	mov    0x5b00(%rbx),%r12d
   20d56:	49 8b 1f             	mov    (%r15),%rbx
   20d59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d5c: R_X86_64_32S	.rodata.str1.1+0xb4
   20d60:	41 81 cc 00 00 00 08 	or     $0x8000000,%r12d
   20d67:	e8 00 00 00 00       	callq  20d6c <e1000_init_hw+0x5ec>
			20d68: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20d6c:	48 81 c3 00 5b 00 00 	add    $0x5b00,%rbx
   20d73:	44 89 23             	mov    %r12d,(%rbx)
   20d76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d79: R_X86_64_32S	.rodata.str1.1+0x286d
   20d7d:	e8 00 00 00 00       	callq  20d82 <e1000_init_hw+0x602>
			20d7e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20d82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d85: R_X86_64_32S	.rodata.str1.1+0xae
   20d89:	49 8b 1f             	mov    (%r15),%rbx
   20d8c:	e8 00 00 00 00       	callq  20d91 <e1000_init_hw+0x611>
			20d8d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20d91:	8b 83 00 40 00 00    	mov    0x4000(%rbx),%eax
   20d97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20d9a: R_X86_64_32S	.rodata.str1.1+0xae
   20d9e:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20da1:	49 8b 1f             	mov    (%r15),%rbx
   20da4:	e8 00 00 00 00       	callq  20da9 <e1000_init_hw+0x629>
			20da5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20da9:	8b 83 08 40 00 00    	mov    0x4008(%rbx),%eax
   20daf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20db2: R_X86_64_32S	.rodata.str1.1+0xae
   20db6:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20db9:	49 8b 1f             	mov    (%r15),%rbx
   20dbc:	e8 00 00 00 00       	callq  20dc1 <e1000_init_hw+0x641>
			20dbd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20dc1:	8b 83 10 40 00 00    	mov    0x4010(%rbx),%eax
   20dc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20dca: R_X86_64_32S	.rodata.str1.1+0xae
   20dce:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20dd1:	49 8b 1f             	mov    (%r15),%rbx
   20dd4:	e8 00 00 00 00       	callq  20dd9 <e1000_init_hw+0x659>
			20dd5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20dd9:	8b 83 14 40 00 00    	mov    0x4014(%rbx),%eax
   20ddf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20de2: R_X86_64_32S	.rodata.str1.1+0xae
   20de6:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20de9:	49 8b 1f             	mov    (%r15),%rbx
   20dec:	e8 00 00 00 00       	callq  20df1 <e1000_init_hw+0x671>
			20ded: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20df1:	8b 83 18 40 00 00    	mov    0x4018(%rbx),%eax
   20df7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20dfa: R_X86_64_32S	.rodata.str1.1+0xae
   20dfe:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e01:	49 8b 1f             	mov    (%r15),%rbx
   20e04:	e8 00 00 00 00       	callq  20e09 <e1000_init_hw+0x689>
			20e05: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e09:	8b 83 1c 40 00 00    	mov    0x401c(%rbx),%eax
   20e0f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e12: R_X86_64_32S	.rodata.str1.1+0xae
   20e16:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e19:	49 8b 1f             	mov    (%r15),%rbx
   20e1c:	e8 00 00 00 00       	callq  20e21 <e1000_init_hw+0x6a1>
			20e1d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e21:	8b 83 20 40 00 00    	mov    0x4020(%rbx),%eax
   20e27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e2a: R_X86_64_32S	.rodata.str1.1+0xae
   20e2e:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e31:	49 8b 1f             	mov    (%r15),%rbx
   20e34:	e8 00 00 00 00       	callq  20e39 <e1000_init_hw+0x6b9>
			20e35: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e39:	8b 83 28 40 00 00    	mov    0x4028(%rbx),%eax
   20e3f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e42: R_X86_64_32S	.rodata.str1.1+0xae
   20e46:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e49:	49 8b 1f             	mov    (%r15),%rbx
   20e4c:	e8 00 00 00 00       	callq  20e51 <e1000_init_hw+0x6d1>
			20e4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e51:	8b 83 30 40 00 00    	mov    0x4030(%rbx),%eax
   20e57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e5a: R_X86_64_32S	.rodata.str1.1+0xae
   20e5e:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e61:	49 8b 1f             	mov    (%r15),%rbx
   20e64:	e8 00 00 00 00       	callq  20e69 <e1000_init_hw+0x6e9>
			20e65: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e69:	8b 83 38 40 00 00    	mov    0x4038(%rbx),%eax
   20e6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e72: R_X86_64_32S	.rodata.str1.1+0xae
   20e76:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e79:	49 8b 1f             	mov    (%r15),%rbx
   20e7c:	e8 00 00 00 00       	callq  20e81 <e1000_init_hw+0x701>
			20e7d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e81:	8b 83 40 40 00 00    	mov    0x4040(%rbx),%eax
   20e87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20e8a: R_X86_64_32S	.rodata.str1.1+0xae
   20e8e:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20e91:	49 8b 1f             	mov    (%r15),%rbx
   20e94:	e8 00 00 00 00       	callq  20e99 <e1000_init_hw+0x719>
			20e95: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20e99:	8b 83 48 40 00 00    	mov    0x4048(%rbx),%eax
   20e9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20ea2: R_X86_64_32S	.rodata.str1.1+0xae
   20ea6:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20ea9:	49 8b 1f             	mov    (%r15),%rbx
   20eac:	e8 00 00 00 00       	callq  20eb1 <e1000_init_hw+0x731>
			20ead: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20eb1:	8b 83 4c 40 00 00    	mov    0x404c(%rbx),%eax
   20eb7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20eba: R_X86_64_32S	.rodata.str1.1+0xae
   20ebe:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20ec1:	49 8b 1f             	mov    (%r15),%rbx
   20ec4:	e8 00 00 00 00       	callq  20ec9 <e1000_init_hw+0x749>
			20ec5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20ec9:	8b 83 50 40 00 00    	mov    0x4050(%rbx),%eax
   20ecf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20ed2: R_X86_64_32S	.rodata.str1.1+0xae
   20ed6:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20ed9:	49 8b 1f             	mov    (%r15),%rbx
   20edc:	e8 00 00 00 00       	callq  20ee1 <e1000_init_hw+0x761>
			20edd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20ee1:	8b 83 54 40 00 00    	mov    0x4054(%rbx),%eax
   20ee7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20eea: R_X86_64_32S	.rodata.str1.1+0xae
   20eee:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20ef1:	49 8b 1f             	mov    (%r15),%rbx
   20ef4:	e8 00 00 00 00       	callq  20ef9 <e1000_init_hw+0x779>
			20ef5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20ef9:	8b 83 58 40 00 00    	mov    0x4058(%rbx),%eax
   20eff:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   20f04:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f07:	0f 84 90 00 00 00    	je     20f9d <e1000_init_hw+0x81d>
   20f0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f10: R_X86_64_32S	.rodata.str1.1+0xae
   20f14:	49 8b 1f             	mov    (%r15),%rbx
   20f17:	e8 00 00 00 00       	callq  20f1c <e1000_init_hw+0x79c>
			20f18: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20f1c:	8b 83 5c 40 00 00    	mov    0x405c(%rbx),%eax
   20f22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f25: R_X86_64_32S	.rodata.str1.1+0xae
   20f29:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f2c:	49 8b 1f             	mov    (%r15),%rbx
   20f2f:	e8 00 00 00 00       	callq  20f34 <e1000_init_hw+0x7b4>
			20f30: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20f34:	8b 83 60 40 00 00    	mov    0x4060(%rbx),%eax
   20f3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f3d: R_X86_64_32S	.rodata.str1.1+0xae
   20f41:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f44:	49 8b 1f             	mov    (%r15),%rbx
   20f47:	e8 00 00 00 00       	callq  20f4c <e1000_init_hw+0x7cc>
			20f48: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20f4c:	8b 83 64 40 00 00    	mov    0x4064(%rbx),%eax
   20f52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f55: R_X86_64_32S	.rodata.str1.1+0xae
   20f59:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f5c:	49 8b 1f             	mov    (%r15),%rbx
   20f5f:	e8 00 00 00 00       	callq  20f64 <e1000_init_hw+0x7e4>
			20f60: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20f64:	8b 83 68 40 00 00    	mov    0x4068(%rbx),%eax
   20f6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f6d: R_X86_64_32S	.rodata.str1.1+0xae
   20f71:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f74:	49 8b 1f             	mov    (%r15),%rbx
   20f77:	e8 00 00 00 00       	callq  20f7c <e1000_init_hw+0x7fc>
			20f78: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20f7c:	8b 83 6c 40 00 00    	mov    0x406c(%rbx),%eax
   20f82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20f85: R_X86_64_32S	.rodata.str1.1+0xae
   20f89:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f8c:	49 8b 1f             	mov    (%r15),%rbx
   20f8f:	e8 00 00 00 00       	callq  20f94 <e1000_init_hw+0x814>
			20f90: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20f94:	8b 83 70 40 00 00    	mov    0x4070(%rbx),%eax
   20f9a:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20f9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20fa0: R_X86_64_32S	.rodata.str1.1+0xae
   20fa4:	49 8b 1f             	mov    (%r15),%rbx
   20fa7:	e8 00 00 00 00       	callq  20fac <e1000_init_hw+0x82c>
			20fa8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20fac:	8b 83 74 40 00 00    	mov    0x4074(%rbx),%eax
   20fb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20fb5: R_X86_64_32S	.rodata.str1.1+0xae
   20fb9:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20fbc:	49 8b 1f             	mov    (%r15),%rbx
   20fbf:	e8 00 00 00 00       	callq  20fc4 <e1000_init_hw+0x844>
			20fc0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20fc4:	8b 83 78 40 00 00    	mov    0x4078(%rbx),%eax
   20fca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20fcd: R_X86_64_32S	.rodata.str1.1+0xae
   20fd1:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20fd4:	49 8b 1f             	mov    (%r15),%rbx
   20fd7:	e8 00 00 00 00       	callq  20fdc <e1000_init_hw+0x85c>
			20fd8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20fdc:	8b 83 7c 40 00 00    	mov    0x407c(%rbx),%eax
   20fe2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20fe5: R_X86_64_32S	.rodata.str1.1+0xae
   20fe9:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   20fec:	49 8b 1f             	mov    (%r15),%rbx
   20fef:	e8 00 00 00 00       	callq  20ff4 <e1000_init_hw+0x874>
			20ff0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   20ff4:	8b 83 80 40 00 00    	mov    0x4080(%rbx),%eax
   20ffa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			20ffd: R_X86_64_32S	.rodata.str1.1+0xae
   21001:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21004:	49 8b 1f             	mov    (%r15),%rbx
   21007:	e8 00 00 00 00       	callq  2100c <e1000_init_hw+0x88c>
			21008: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2100c:	8b 83 88 40 00 00    	mov    0x4088(%rbx),%eax
   21012:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21015: R_X86_64_32S	.rodata.str1.1+0xae
   21019:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2101c:	49 8b 1f             	mov    (%r15),%rbx
   2101f:	e8 00 00 00 00       	callq  21024 <e1000_init_hw+0x8a4>
			21020: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21024:	8b 83 8c 40 00 00    	mov    0x408c(%rbx),%eax
   2102a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2102d: R_X86_64_32S	.rodata.str1.1+0xae
   21031:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21034:	49 8b 1f             	mov    (%r15),%rbx
   21037:	e8 00 00 00 00       	callq  2103c <e1000_init_hw+0x8bc>
			21038: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2103c:	8b 83 90 40 00 00    	mov    0x4090(%rbx),%eax
   21042:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21045: R_X86_64_32S	.rodata.str1.1+0xae
   21049:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2104c:	49 8b 1f             	mov    (%r15),%rbx
   2104f:	e8 00 00 00 00       	callq  21054 <e1000_init_hw+0x8d4>
			21050: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21054:	8b 83 94 40 00 00    	mov    0x4094(%rbx),%eax
   2105a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2105d: R_X86_64_32S	.rodata.str1.1+0xae
   21061:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21064:	49 8b 1f             	mov    (%r15),%rbx
   21067:	e8 00 00 00 00       	callq  2106c <e1000_init_hw+0x8ec>
			21068: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2106c:	8b 83 a0 40 00 00    	mov    0x40a0(%rbx),%eax
   21072:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21075: R_X86_64_32S	.rodata.str1.1+0xae
   21079:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2107c:	49 8b 1f             	mov    (%r15),%rbx
   2107f:	e8 00 00 00 00       	callq  21084 <e1000_init_hw+0x904>
			21080: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21084:	8b 83 a4 40 00 00    	mov    0x40a4(%rbx),%eax
   2108a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2108d: R_X86_64_32S	.rodata.str1.1+0xae
   21091:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21094:	49 8b 1f             	mov    (%r15),%rbx
   21097:	e8 00 00 00 00       	callq  2109c <e1000_init_hw+0x91c>
			21098: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2109c:	8b 83 a8 40 00 00    	mov    0x40a8(%rbx),%eax
   210a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			210a5: R_X86_64_32S	.rodata.str1.1+0xae
   210a9:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   210ac:	49 8b 1f             	mov    (%r15),%rbx
   210af:	e8 00 00 00 00       	callq  210b4 <e1000_init_hw+0x934>
			210b0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   210b4:	8b 83 ac 40 00 00    	mov    0x40ac(%rbx),%eax
   210ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			210bd: R_X86_64_32S	.rodata.str1.1+0xae
   210c1:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   210c4:	49 8b 1f             	mov    (%r15),%rbx
   210c7:	e8 00 00 00 00       	callq  210cc <e1000_init_hw+0x94c>
			210c8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   210cc:	8b 83 b0 40 00 00    	mov    0x40b0(%rbx),%eax
   210d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			210d5: R_X86_64_32S	.rodata.str1.1+0xae
   210d9:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   210dc:	49 8b 1f             	mov    (%r15),%rbx
   210df:	e8 00 00 00 00       	callq  210e4 <e1000_init_hw+0x964>
			210e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   210e4:	8b 83 c0 40 00 00    	mov    0x40c0(%rbx),%eax
   210ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			210ed: R_X86_64_32S	.rodata.str1.1+0xae
   210f1:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   210f4:	49 8b 1f             	mov    (%r15),%rbx
   210f7:	e8 00 00 00 00       	callq  210fc <e1000_init_hw+0x97c>
			210f8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   210fc:	8b 83 c4 40 00 00    	mov    0x40c4(%rbx),%eax
   21102:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21105: R_X86_64_32S	.rodata.str1.1+0xae
   21109:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2110c:	49 8b 1f             	mov    (%r15),%rbx
   2110f:	e8 00 00 00 00       	callq  21114 <e1000_init_hw+0x994>
			21110: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21114:	8b 83 c8 40 00 00    	mov    0x40c8(%rbx),%eax
   2111a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2111d: R_X86_64_32S	.rodata.str1.1+0xae
   21121:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21124:	49 8b 1f             	mov    (%r15),%rbx
   21127:	e8 00 00 00 00       	callq  2112c <e1000_init_hw+0x9ac>
			21128: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2112c:	8b 83 cc 40 00 00    	mov    0x40cc(%rbx),%eax
   21132:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21135: R_X86_64_32S	.rodata.str1.1+0xae
   21139:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2113c:	49 8b 1f             	mov    (%r15),%rbx
   2113f:	e8 00 00 00 00       	callq  21144 <e1000_init_hw+0x9c4>
			21140: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21144:	8b 83 d0 40 00 00    	mov    0x40d0(%rbx),%eax
   2114a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2114d: R_X86_64_32S	.rodata.str1.1+0xae
   21151:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21154:	49 8b 1f             	mov    (%r15),%rbx
   21157:	e8 00 00 00 00       	callq  2115c <e1000_init_hw+0x9dc>
			21158: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2115c:	8b 83 d4 40 00 00    	mov    0x40d4(%rbx),%eax
   21162:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   21167:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2116a:	0f 84 90 00 00 00    	je     21200 <e1000_init_hw+0xa80>
   21170:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21173: R_X86_64_32S	.rodata.str1.1+0xae
   21177:	49 8b 1f             	mov    (%r15),%rbx
   2117a:	e8 00 00 00 00       	callq  2117f <e1000_init_hw+0x9ff>
			2117b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2117f:	8b 83 d8 40 00 00    	mov    0x40d8(%rbx),%eax
   21185:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21188: R_X86_64_32S	.rodata.str1.1+0xae
   2118c:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2118f:	49 8b 1f             	mov    (%r15),%rbx
   21192:	e8 00 00 00 00       	callq  21197 <e1000_init_hw+0xa17>
			21193: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21197:	8b 83 dc 40 00 00    	mov    0x40dc(%rbx),%eax
   2119d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			211a0: R_X86_64_32S	.rodata.str1.1+0xae
   211a4:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   211a7:	49 8b 1f             	mov    (%r15),%rbx
   211aa:	e8 00 00 00 00       	callq  211af <e1000_init_hw+0xa2f>
			211ab: R_X86_64_PC32	record_function+0xfffffffffffffffc
   211af:	8b 83 e0 40 00 00    	mov    0x40e0(%rbx),%eax
   211b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			211b8: R_X86_64_32S	.rodata.str1.1+0xae
   211bc:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   211bf:	49 8b 1f             	mov    (%r15),%rbx
   211c2:	e8 00 00 00 00       	callq  211c7 <e1000_init_hw+0xa47>
			211c3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   211c7:	8b 83 e4 40 00 00    	mov    0x40e4(%rbx),%eax
   211cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			211d0: R_X86_64_32S	.rodata.str1.1+0xae
   211d4:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   211d7:	49 8b 1f             	mov    (%r15),%rbx
   211da:	e8 00 00 00 00       	callq  211df <e1000_init_hw+0xa5f>
			211db: R_X86_64_PC32	record_function+0xfffffffffffffffc
   211df:	8b 83 e8 40 00 00    	mov    0x40e8(%rbx),%eax
   211e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			211e8: R_X86_64_32S	.rodata.str1.1+0xae
   211ec:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   211ef:	49 8b 1f             	mov    (%r15),%rbx
   211f2:	e8 00 00 00 00       	callq  211f7 <e1000_init_hw+0xa77>
			211f3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   211f7:	8b 83 ec 40 00 00    	mov    0x40ec(%rbx),%eax
   211fd:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21200:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21203: R_X86_64_32S	.rodata.str1.1+0xae
   21207:	49 8b 1f             	mov    (%r15),%rbx
   2120a:	e8 00 00 00 00       	callq  2120f <e1000_init_hw+0xa8f>
			2120b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2120f:	8b 83 f0 40 00 00    	mov    0x40f0(%rbx),%eax
   21215:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21218: R_X86_64_32S	.rodata.str1.1+0xae
   2121c:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2121f:	49 8b 1f             	mov    (%r15),%rbx
   21222:	e8 00 00 00 00       	callq  21227 <e1000_init_hw+0xaa7>
			21223: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21227:	8b 83 f4 40 00 00    	mov    0x40f4(%rbx),%eax
   2122d:	41 83 7f 10 02       	cmpl   $0x2,0x10(%r15)
   21232:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21235:	0f 86 d1 01 00 00    	jbe    2140c <e1000_init_hw+0xc8c>
   2123b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2123e: R_X86_64_32S	.rodata.str1.1+0xae
   21242:	49 8b 1f             	mov    (%r15),%rbx
   21245:	e8 00 00 00 00       	callq  2124a <e1000_init_hw+0xaca>
			21246: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2124a:	8b 83 04 40 00 00    	mov    0x4004(%rbx),%eax
   21250:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21253: R_X86_64_32S	.rodata.str1.1+0xae
   21257:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2125a:	49 8b 1f             	mov    (%r15),%rbx
   2125d:	e8 00 00 00 00       	callq  21262 <e1000_init_hw+0xae2>
			2125e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21262:	8b 83 0c 40 00 00    	mov    0x400c(%rbx),%eax
   21268:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2126b: R_X86_64_32S	.rodata.str1.1+0xae
   2126f:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21272:	49 8b 1f             	mov    (%r15),%rbx
   21275:	e8 00 00 00 00       	callq  2127a <e1000_init_hw+0xafa>
			21276: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2127a:	8b 83 34 40 00 00    	mov    0x4034(%rbx),%eax
   21280:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21283: R_X86_64_32S	.rodata.str1.1+0xae
   21287:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2128a:	49 8b 1f             	mov    (%r15),%rbx
   2128d:	e8 00 00 00 00       	callq  21292 <e1000_init_hw+0xb12>
			2128e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21292:	8b 83 3c 40 00 00    	mov    0x403c(%rbx),%eax
   21298:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2129b: R_X86_64_32S	.rodata.str1.1+0xae
   2129f:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   212a2:	49 8b 1f             	mov    (%r15),%rbx
   212a5:	e8 00 00 00 00       	callq  212aa <e1000_init_hw+0xb2a>
			212a6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   212aa:	8b 83 f8 40 00 00    	mov    0x40f8(%rbx),%eax
   212b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			212b3: R_X86_64_32S	.rodata.str1.1+0xae
   212b7:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   212ba:	49 8b 1f             	mov    (%r15),%rbx
   212bd:	e8 00 00 00 00       	callq  212c2 <e1000_init_hw+0xb42>
			212be: R_X86_64_PC32	record_function+0xfffffffffffffffc
   212c2:	8b 83 fc 40 00 00    	mov    0x40fc(%rbx),%eax
   212c8:	41 83 7f 10 04       	cmpl   $0x4,0x10(%r15)
   212cd:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   212d0:	0f 86 36 01 00 00    	jbe    2140c <e1000_init_hw+0xc8c>
   212d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			212d9: R_X86_64_32S	.rodata.str1.1+0xae
   212dd:	49 8b 1f             	mov    (%r15),%rbx
   212e0:	e8 00 00 00 00       	callq  212e5 <e1000_init_hw+0xb65>
			212e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   212e5:	8b 83 b4 40 00 00    	mov    0x40b4(%rbx),%eax
   212eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			212ee: R_X86_64_32S	.rodata.str1.1+0xae
   212f2:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   212f5:	49 8b 1f             	mov    (%r15),%rbx
   212f8:	e8 00 00 00 00       	callq  212fd <e1000_init_hw+0xb7d>
			212f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   212fd:	8b 83 b8 40 00 00    	mov    0x40b8(%rbx),%eax
   21303:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21306: R_X86_64_32S	.rodata.str1.1+0xae
   2130a:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2130d:	49 8b 1f             	mov    (%r15),%rbx
   21310:	e8 00 00 00 00       	callq  21315 <e1000_init_hw+0xb95>
			21311: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21315:	8b 83 bc 40 00 00    	mov    0x40bc(%rbx),%eax
   2131b:	41 83 7f 10 0d       	cmpl   $0xd,0x10(%r15)
   21320:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21323:	0f 86 e3 00 00 00    	jbe    2140c <e1000_init_hw+0xc8c>
   21329:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2132c: R_X86_64_32S	.rodata.str1.1+0xae
   21330:	49 8b 1f             	mov    (%r15),%rbx
   21333:	e8 00 00 00 00       	callq  21338 <e1000_init_hw+0xbb8>
			21334: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21338:	8b 83 00 41 00 00    	mov    0x4100(%rbx),%eax
   2133e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21341: R_X86_64_32S	.rodata.str1.1+0xae
   21345:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21348:	49 8b 1f             	mov    (%r15),%rbx
   2134b:	e8 00 00 00 00       	callq  21350 <e1000_init_hw+0xbd0>
			2134c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21350:	8b 83 24 41 00 00    	mov    0x4124(%rbx),%eax
   21356:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   2135b:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2135e:	0f 84 a8 00 00 00    	je     2140c <e1000_init_hw+0xc8c>
   21364:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21367: R_X86_64_32S	.rodata.str1.1+0xae
   2136b:	49 8b 1f             	mov    (%r15),%rbx
   2136e:	e8 00 00 00 00       	callq  21373 <e1000_init_hw+0xbf3>
			2136f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21373:	8b 83 04 41 00 00    	mov    0x4104(%rbx),%eax
   21379:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2137c: R_X86_64_32S	.rodata.str1.1+0xae
   21380:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   21383:	49 8b 1f             	mov    (%r15),%rbx
   21386:	e8 00 00 00 00       	callq  2138b <e1000_init_hw+0xc0b>
			21387: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2138b:	8b 83 08 41 00 00    	mov    0x4108(%rbx),%eax
   21391:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21394: R_X86_64_32S	.rodata.str1.1+0xae
   21398:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2139b:	49 8b 1f             	mov    (%r15),%rbx
   2139e:	e8 00 00 00 00       	callq  213a3 <e1000_init_hw+0xc23>
			2139f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   213a3:	8b 83 0c 41 00 00    	mov    0x410c(%rbx),%eax
   213a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			213ac: R_X86_64_32S	.rodata.str1.1+0xae
   213b0:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   213b3:	49 8b 1f             	mov    (%r15),%rbx
   213b6:	e8 00 00 00 00       	callq  213bb <e1000_init_hw+0xc3b>
			213b7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   213bb:	8b 83 10 41 00 00    	mov    0x4110(%rbx),%eax
   213c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			213c4: R_X86_64_32S	.rodata.str1.1+0xae
   213c8:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   213cb:	49 8b 1f             	mov    (%r15),%rbx
   213ce:	e8 00 00 00 00       	callq  213d3 <e1000_init_hw+0xc53>
			213cf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   213d3:	8b 83 18 41 00 00    	mov    0x4118(%rbx),%eax
   213d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			213dc: R_X86_64_32S	.rodata.str1.1+0xae
   213e0:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   213e3:	49 8b 1f             	mov    (%r15),%rbx
   213e6:	e8 00 00 00 00       	callq  213eb <e1000_init_hw+0xc6b>
			213e7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   213eb:	8b 83 1c 41 00 00    	mov    0x411c(%rbx),%eax
   213f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			213f4: R_X86_64_32S	.rodata.str1.1+0xae
   213f8:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   213fb:	49 8b 1f             	mov    (%r15),%rbx
   213fe:	e8 00 00 00 00       	callq  21403 <e1000_init_hw+0xc83>
			213ff: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21403:	8b 83 20 41 00 00    	mov    0x4120(%rbx),%eax
   21409:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   2140c:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   21411:	75 0d                	jne    21420 <e1000_init_hw+0xca0>
   21413:	be 3f 00 00 00       	mov    $0x3f,%esi
   21418:	4c 89 ff             	mov    %r15,%rdi
   2141b:	e8 e4 b5 fe ff       	callq  ca04 <e1000_set_pci_ex_no_snoop>
   21420:	66 41 8b 87 e6 00 00 	mov    0xe6(%r15),%ax
   21427:	00 
   21428:	66 3d 99 10          	cmp    $0x1099,%ax
   2142c:	74 06                	je     21434 <e1000_init_hw+0xcb4>
   2142e:	66 3d b5 10          	cmp    $0x10b5,%ax
   21432:	75 30                	jne    21464 <e1000_init_hw+0xce4>
   21434:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21437: R_X86_64_32S	.rodata.str1.1+0xae
   2143b:	49 8b 1f             	mov    (%r15),%rbx
   2143e:	e8 00 00 00 00       	callq  21443 <e1000_init_hw+0xcc3>
			2143f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21443:	44 8b 63 18          	mov    0x18(%rbx),%r12d
   21447:	49 8b 1f             	mov    (%r15),%rbx
   2144a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2144d: R_X86_64_32S	.rodata.str1.1+0xb4
   21451:	41 81 cc 00 00 02 00 	or     $0x20000,%r12d
   21458:	e8 00 00 00 00       	callq  2145d <e1000_init_hw+0xcdd>
			21459: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2145d:	48 83 c3 18          	add    $0x18,%rbx
   21461:	44 89 23             	mov    %r12d,(%rbx)
   21464:	48 83 c4 38          	add    $0x38,%rsp
   21468:	44 89 e8             	mov    %r13d,%eax
   2146b:	5b                   	pop    %rbx
   2146c:	41 5c                	pop    %r12
   2146e:	41 5d                	pop    %r13
   21470:	41 5e                	pop    %r14
   21472:	41 5f                	pop    %r15
   21474:	c9                   	leaveq 
   21475:	c3                   	retq   

0000000000021476 <e1000_reset>:
   21476:	55                   	push   %rbp
   21477:	48 89 e5             	mov    %rsp,%rbp
   2147a:	41 56                	push   %r14
   2147c:	49 89 fe             	mov    %rdi,%r14
   2147f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21482: R_X86_64_32S	.rodata.str1.1+0x2882
   21486:	41 55                	push   %r13
   21488:	4d 8d ae b8 03 00 00 	lea    0x3b8(%r14),%r13
   2148f:	41 54                	push   %r12
   21491:	53                   	push   %rbx
   21492:	48 83 ec 10          	sub    $0x10,%rsp
   21496:	e8 00 00 00 00       	callq  2149b <e1000_reset+0x25>
			21497: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2149b:	41 8b 45 10          	mov    0x10(%r13),%eax
   2149f:	83 f8 01             	cmp    $0x1,%eax
   214a2:	0f 84 a2 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214a8:	83 f8 02             	cmp    $0x2,%eax
   214ab:	0f 84 99 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214b1:	83 f8 03             	cmp    $0x3,%eax
   214b4:	0f 84 90 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214ba:	83 f8 04             	cmp    $0x4,%eax
   214bd:	0f 84 87 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214c3:	83 f8 05             	cmp    $0x5,%eax
   214c6:	0f 84 7e 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214cc:	83 f8 0a             	cmp    $0xa,%eax
   214cf:	0f 84 75 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214d5:	83 f8 0b             	cmp    $0xb,%eax
   214d8:	0f 84 6c 03 00 00    	je     2184a <e1000_reset+0x3d4>
   214de:	83 f8 06             	cmp    $0x6,%eax
   214e1:	74 4b                	je     2152e <e1000_reset+0xb8>
   214e3:	83 f8 07             	cmp    $0x7,%eax
   214e6:	74 46                	je     2152e <e1000_reset+0xb8>
   214e8:	83 f8 08             	cmp    $0x8,%eax
   214eb:	74 41                	je     2152e <e1000_reset+0xb8>
   214ed:	83 f8 09             	cmp    $0x9,%eax
   214f0:	74 3c                	je     2152e <e1000_reset+0xb8>
   214f2:	83 f8 0c             	cmp    $0xc,%eax
   214f5:	0f 84 57 03 00 00    	je     21852 <e1000_reset+0x3dc>
   214fb:	83 f8 0d             	cmp    $0xd,%eax
   214fe:	0f 84 4e 03 00 00    	je     21852 <e1000_reset+0x3dc>
   21504:	83 f8 0e             	cmp    $0xe,%eax
   21507:	74 2d                	je     21536 <e1000_reset+0xc0>
   21509:	83 f8 0f             	cmp    $0xf,%eax
   2150c:	74 28                	je     21536 <e1000_reset+0xc0>
   2150e:	83 f8 11             	cmp    $0x11,%eax
   21511:	74 23                	je     21536 <e1000_reset+0xc0>
   21513:	83 f8 10             	cmp    $0x10,%eax
   21516:	41 bc 14 00 00 00    	mov    $0x14,%r12d
   2151c:	74 1e                	je     2153c <e1000_reset+0xc6>
   2151e:	45 31 e4             	xor    %r12d,%r12d
   21521:	83 f8 12             	cmp    $0x12,%eax
   21524:	41 0f 94 c4          	sete   %r12b
   21528:	41 c1 e4 03          	shl    $0x3,%r12d
   2152c:	eb 0e                	jmp    2153c <e1000_reset+0xc6>
   2152e:	41 bc 30 00 00 00    	mov    $0x30,%r12d
   21534:	eb 06                	jmp    2153c <e1000_reset+0xc6>
   21536:	41 bc 26 00 00 00    	mov    $0x26,%r12d
   2153c:	41 81 bd 98 00 00 00 	cmpl   $0x5ee,0x98(%r13)
   21543:	ee 05 00 00 
   21547:	0f 86 e5 00 00 00    	jbe    21632 <e1000_reset+0x1bc>
   2154d:	eb 49                	jmp    21598 <e1000_reset+0x122>
   2154f:	41 83 ec 08          	sub    $0x8,%r12d
   21553:	41 83 7d 10 0c       	cmpl   $0xc,0x10(%r13)
   21558:	0f 85 d4 00 00 00    	jne    21632 <e1000_reset+0x1bc>
   2155e:	44 89 e0             	mov    %r12d,%eax
   21561:	41 c7 86 f4 01 00 00 	movl   $0x0,0x1f4(%r14)
   21568:	00 00 00 00 
   2156c:	41 c7 86 04 02 00 00 	movl   $0x0,0x204(%r14)
   21573:	00 00 00 00 
   21577:	c1 e0 07             	shl    $0x7,%eax
   2157a:	41 89 86 f8 01 00 00 	mov    %eax,0x1f8(%r14)
   21581:	b8 28 00 00 00       	mov    $0x28,%eax
   21586:	44 29 e0             	sub    %r12d,%eax
   21589:	c1 e0 0a             	shl    $0xa,%eax
   2158c:	41 89 86 fc 01 00 00 	mov    %eax,0x1fc(%r14)
   21593:	e9 9a 00 00 00       	jmpq   21632 <e1000_reset+0x1bc>
   21598:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   2159c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2159f: R_X86_64_32S	.rodata.str1.1+0xb4
   215a3:	e8 00 00 00 00       	callq  215a8 <e1000_reset+0x132>
			215a4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   215a8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
   215af:	44 89 23             	mov    %r12d,(%rbx)
   215b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			215b5: R_X86_64_32S	.rodata.str1.1+0xae
   215b9:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   215bd:	e8 00 00 00 00       	callq  215c2 <e1000_reset+0x14c>
			215be: R_X86_64_PC32	record_function+0xfffffffffffffffc
   215c2:	8b 83 00 10 00 00    	mov    0x1000(%rbx),%eax
   215c8:	89 c1                	mov    %eax,%ecx
   215ca:	44 0f b7 e0          	movzwl %ax,%r12d
   215ce:	49 8b 86 f0 02 00 00 	mov    0x2f0(%r14),%rax
   215d5:	c1 e9 10             	shr    $0x10,%ecx
   215d8:	8b b0 6c 01 00 00    	mov    0x16c(%rax),%esi
   215de:	83 c6 12             	add    $0x12,%esi
   215e1:	8d 94 36 ff 03 00 00 	lea    0x3ff(%rsi,%rsi,1),%edx
   215e8:	c1 ea 0a             	shr    $0xa,%edx
   215eb:	39 d1                	cmp    %edx,%ecx
   215ed:	73 43                	jae    21632 <e1000_reset+0x1bc>
   215ef:	89 d0                	mov    %edx,%eax
   215f1:	29 c8                	sub    %ecx,%eax
   215f3:	44 39 e0             	cmp    %r12d,%eax
   215f6:	73 3a                	jae    21632 <e1000_reset+0x1bc>
   215f8:	41 8b 45 10          	mov    0x10(%r13),%eax
   215fc:	46 8d 24 21          	lea    (%rcx,%r12,1),%r12d
   21600:	41 29 d4             	sub    %edx,%r12d
   21603:	83 f8 06             	cmp    $0x6,%eax
   21606:	74 0f                	je     21617 <e1000_reset+0x1a1>
   21608:	83 f8 07             	cmp    $0x7,%eax
   2160b:	74 0a                	je     21617 <e1000_reset+0x1a1>
   2160d:	83 f8 08             	cmp    $0x8,%eax
   21610:	74 05                	je     21617 <e1000_reset+0x1a1>
   21612:	83 f8 09             	cmp    $0x9,%eax
   21615:	75 04                	jne    2161b <e1000_reset+0x1a5>
   21617:	41 83 e4 f8          	and    $0xfffffffffffffff8,%r12d
   2161b:	8d 86 ff 03 00 00    	lea    0x3ff(%rsi),%eax
   21621:	c1 e8 0a             	shr    $0xa,%eax
   21624:	41 39 c4             	cmp    %eax,%r12d
   21627:	73 09                	jae    21632 <e1000_reset+0x1bc>
   21629:	41 83 7d 10 10       	cmpl   $0x10,0x10(%r13)
   2162e:	44 0f 45 e0          	cmovne %eax,%r12d
   21632:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   21636:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21639: R_X86_64_32S	.rodata.str1.1+0xb4
   2163d:	e8 00 00 00 00       	callq  21642 <e1000_reset+0x1cc>
			2163e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21642:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
   21649:	44 89 23             	mov    %r12d,(%rbx)
   2164c:	41 83 fc 0f          	cmp    $0xf,%r12d
   21650:	76 17                	jbe    21669 <e1000_reset+0x1f3>
   21652:	41 69 c4 00 24 00 00 	imul   $0x2400,%r12d,%eax
   21659:	ba 0a 00 00 00       	mov    $0xa,%edx
   2165e:	89 d1                	mov    %edx,%ecx
   21660:	31 d2                	xor    %edx,%edx
   21662:	f7 f1                	div    %ecx
   21664:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   21667:	eb 0c                	jmp    21675 <e1000_reset+0x1ff>
   21669:	41 c1 e4 0a          	shl    $0xa,%r12d
   2166d:	41 8d 84 24 c0 f9 ff 	lea    0xfffffffffffff9c0(%r12),%eax
   21674:	ff 
   21675:	66 41 89 85 d6 00 00 	mov    %ax,0xd6(%r13)
   2167c:	00 
   2167d:	83 e8 08             	sub    $0x8,%eax
   21680:	ba 80 06 00 00       	mov    $0x680,%edx
   21685:	66 41 89 85 d8 00 00 	mov    %ax,0xd8(%r13)
   2168c:	00 
   2168d:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   21690:	41 83 7d 10 11       	cmpl   $0x11,0x10(%r13)
   21695:	41 c6 85 13 01 00 00 	movb   $0x1,0x113(%r13)
   2169c:	01 
   2169d:	4c 89 ef             	mov    %r13,%rdi
   216a0:	0f 45 c2             	cmovne %edx,%eax
   216a3:	66 41 89 85 da 00 00 	mov    %ax,0xda(%r13)
   216aa:	00 
   216ab:	41 8b 85 8c 00 00 00 	mov    0x8c(%r13),%eax
   216b2:	41 89 45 38          	mov    %eax,0x38(%r13)
   216b6:	e8 8a 67 fe ff       	callq  7e45 <e1000_reset_hw>
   216bb:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
   216c0:	76 1b                	jbe    216dd <e1000_reset+0x267>
   216c2:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   216c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			216c9: R_X86_64_32S	.rodata.str1.1+0xb4
   216cd:	e8 00 00 00 00       	callq  216d2 <e1000_reset+0x25c>
			216ce: R_X86_64_PC32	record_function+0xfffffffffffffffc
   216d2:	31 c0                	xor    %eax,%eax
   216d4:	48 81 c3 00 58 00 00 	add    $0x5800,%rbx
   216db:	89 03                	mov    %eax,(%rbx)
   216dd:	4c 89 ef             	mov    %r13,%rdi
   216e0:	e8 9b f0 ff ff       	callq  20780 <e1000_init_hw>
   216e5:	85 c0                	test   %eax,%eax
   216e7:	74 0e                	je     216f7 <e1000_reset+0x281>
   216e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			216ec: R_X86_64_32S	str_190419730
   216f0:	31 c0                	xor    %eax,%eax
   216f2:	e8 00 00 00 00       	callq  216f7 <e1000_reset+0x281>
			216f3: R_X86_64_PC32	printk+0xfffffffffffffffc
   216f7:	4c 89 f7             	mov    %r14,%rdi
   216fa:	e8 43 75 fe ff       	callq  8c42 <e1000_update_mng_vlan>
   216ff:	41 8b 45 10          	mov    0x10(%r13),%eax
   21703:	83 f8 03             	cmp    $0x3,%eax
   21706:	76 46                	jbe    2174e <e1000_reset+0x2d8>
   21708:	83 f8 0d             	cmp    $0xd,%eax
   2170b:	77 41                	ja     2174e <e1000_reset+0x2d8>
   2170d:	41 80 bd ef 00 00 00 	cmpb   $0x1,0xef(%r13)
   21714:	01 
   21715:	75 37                	jne    2174e <e1000_reset+0x2d8>
   21717:	66 41 83 bd d2 00 00 	cmpw   $0x20,0xd2(%r13)
   2171e:	00 20 
   21720:	75 2c                	jne    2174e <e1000_reset+0x2d8>
   21722:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21725: R_X86_64_32S	.rodata.str1.1+0xae
   21729:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   2172d:	e8 00 00 00 00       	callq  21732 <e1000_reset+0x2bc>
			2172e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21732:	8b 1b                	mov    (%rbx),%ebx
   21734:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21737: R_X86_64_32S	.rodata.str1.1+0xb4
   2173b:	4d 8b 65 00          	mov    0x0(%r13),%r12
   2173f:	81 e3 ff ff df ff    	and    $0xffdfffff,%ebx
   21745:	e8 00 00 00 00       	callq  2174a <e1000_reset+0x2d4>
			21746: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2174a:	41 89 1c 24          	mov    %ebx,(%r12)
   2174e:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   21752:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21755: R_X86_64_32S	.rodata.str1.1+0xb4
   21759:	e8 00 00 00 00       	callq  2175e <e1000_reset+0x2e8>
			2175a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2175e:	b8 00 81 00 00       	mov    $0x8100,%eax
   21763:	48 83 c3 38          	add    $0x38,%rbx
   21767:	89 03                	mov    %eax,(%rbx)
   21769:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2176c: R_X86_64_32S	.rodata.str1.1+0x288e
   21770:	e8 00 00 00 00       	callq  21775 <e1000_reset+0x2ff>
			21771: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21775:	41 80 bd 16 01 00 00 	cmpb   $0x0,0x116(%r13)
   2177c:	00 
   2177d:	74 5f                	je     217de <e1000_reset+0x368>
   2177f:	41 80 bd 17 01 00 00 	cmpb   $0x0,0x117(%r13)
   21786:	00 
   21787:	75 32                	jne    217bb <e1000_reset+0x345>
   21789:	66 41 c7 85 dc 00 00 	movw   $0x0,0xdc(%r13)
   21790:	00 00 00 
   21793:	66 41 c7 85 de 00 00 	movw   $0x28,0xde(%r13)
   2179a:	00 28 00 
   2179d:	66 41 c7 85 e0 00 00 	movw   $0x50,0xe0(%r13)
   217a4:	00 50 00 
   217a7:	66 41 c7 85 e2 00 00 	movw   $0xa,0xe2(%r13)
   217ae:	00 0a 00 
   217b1:	66 41 c7 85 e4 00 00 	movw   $0x4,0xe4(%r13)
   217b8:	00 04 00 
   217bb:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   217bf:	41 c6 85 18 01 00 00 	movb   $0x0,0x118(%r13)
   217c6:	00 
   217c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			217ca: R_X86_64_32S	.rodata.str1.1+0xb4
   217ce:	e8 00 00 00 00       	callq  217d3 <e1000_reset+0x35d>
			217cf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   217d3:	31 c0                	xor    %eax,%eax
   217d5:	48 81 c3 58 04 00 00 	add    $0x458,%rbx
   217dc:	89 03                	mov    %eax,(%rbx)
   217de:	49 8d b6 00 07 00 00 	lea    0x700(%r14),%rsi
   217e5:	4c 89 ef             	mov    %r13,%rdi
   217e8:	e8 41 53 fe ff       	callq  6b2e <e1000_phy_get_info>
   217ed:	41 80 be c6 07 00 00 	cmpb   $0x0,0x7c6(%r14)
   217f4:	00 
   217f5:	75 40                	jne    21837 <e1000_reset+0x3c1>
   217f7:	41 8b 45 10          	mov    0x10(%r13),%eax
   217fb:	83 f8 0e             	cmp    $0xe,%eax
   217fe:	74 05                	je     21805 <e1000_reset+0x38f>
   21800:	83 f8 0f             	cmp    $0xf,%eax
   21803:	75 32                	jne    21837 <e1000_reset+0x3c1>
   21805:	48 8d 55 de          	lea    0xffffffffffffffde(%rbp),%rdx
   21809:	be 19 00 00 00       	mov    $0x19,%esi
   2180e:	4c 89 ef             	mov    %r13,%rdi
   21811:	66 c7 45 de 00 00    	movw   $0x0,0xffffffffffffffde(%rbp)
   21817:	e8 bd 48 fe ff       	callq  60d9 <e1000_read_phy_reg>
   2181c:	66 8b 55 de          	mov    0xffffffffffffffde(%rbp),%dx
   21820:	be 19 00 00 00       	mov    $0x19,%esi
   21825:	4c 89 ef             	mov    %r13,%rdi
   21828:	83 e2 fe             	and    $0xfffffffffffffffe,%edx
   2182b:	66 89 55 de          	mov    %dx,0xffffffffffffffde(%rbp)
   2182f:	0f b7 d2             	movzwl %dx,%edx
   21832:	e8 50 46 fe ff       	callq  5e87 <e1000_write_phy_reg>
   21837:	4c 89 f7             	mov    %r14,%rdi
   2183a:	e8 ab f7 fd ff       	callq  fea <e1000_release_manageability>
   2183f:	5e                   	pop    %rsi
   21840:	5f                   	pop    %rdi
   21841:	5b                   	pop    %rbx
   21842:	41 5c                	pop    %r12
   21844:	41 5d                	pop    %r13
   21846:	41 5e                	pop    %r14
   21848:	c9                   	leaveq 
   21849:	c3                   	retq   
   2184a:	41 bc 30 00 00 00    	mov    $0x30,%r12d
   21850:	eb 06                	jmp    21858 <e1000_reset+0x3e2>
   21852:	41 bc 1e 00 00 00    	mov    $0x1e,%r12d
   21858:	49 8b 86 f0 02 00 00 	mov    0x2f0(%r14),%rax
   2185f:	81 b8 6c 01 00 00 00 	cmpl   $0x2000,0x16c(%rax)
   21866:	20 00 00 
   21869:	0f 87 e0 fc ff ff    	ja     2154f <e1000_reset+0xd9>
   2186f:	e9 df fc ff ff       	jmpq   21553 <e1000_reset+0xdd>

0000000000021874 <e1000_tso>:
   21874:	55                   	push   %rbp
   21875:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21878: R_X86_64_32S	.rodata.str1.1+0x28a3
   2187c:	48 89 e5             	mov    %rsp,%rbp
   2187f:	41 57                	push   %r15
   21881:	49 89 d7             	mov    %rdx,%r15
   21884:	41 56                	push   %r14
   21886:	41 55                	push   %r13
   21888:	41 54                	push   %r12
   2188a:	53                   	push   %rbx
   2188b:	31 db                	xor    %ebx,%ebx
   2188d:	48 83 ec 78          	sub    $0x78,%rsp
   21891:	48 89 b5 60 ff ff ff 	mov    %rsi,0xffffffffffffff60(%rbp)
   21898:	e8 00 00 00 00       	callq  2189d <e1000_tso+0x29>
			21899: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2189d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			218a0: R_X86_64_32S	.rodata.str1.1+0x28ad
   218a4:	e8 00 00 00 00       	callq  218a9 <e1000_tso+0x35>
			218a5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   218a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			218ac: R_X86_64_32S	.rodata.str1.1+0x28b8
   218b0:	e8 00 00 00 00       	callq  218b5 <e1000_tso+0x41>
			218b1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   218b5:	41 8b 97 b8 00 00 00 	mov    0xb8(%r15),%edx
   218bc:	49 8b 87 c0 00 00 00 	mov    0xc0(%r15),%rax
   218c3:	66 83 7c 10 06 00    	cmpw   $0x0,0x6(%rax,%rdx,1)
   218c9:	0f 84 37 0d 00 00    	je     22606 <e1000_tso+0xd92>
   218cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			218d2: R_X86_64_32S	.rodata.str1.1+0x28c8
   218d6:	e8 00 00 00 00       	callq  218db <e1000_tso+0x67>
			218d7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   218db:	41 f6 47 7c 02       	testb  $0x2,0x7c(%r15)
   218e0:	0f 84 55 07 00 00    	je     2203b <e1000_tso+0x7c7>
   218e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			218e9: R_X86_64_32S	.rodata.str1.1+0x28b8
   218ed:	e8 00 00 00 00       	callq  218f2 <e1000_tso+0x7e>
			218ee: R_X86_64_PC32	record_function+0xfffffffffffffffc
   218f2:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   218f9:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   21900:	8b 00                	mov    (%rax),%eax
   21902:	0f b7 d0             	movzwl %ax,%edx
   21905:	c1 f8 10             	sar    $0x10,%eax
   21908:	29 c2                	sub    %eax,%edx
   2190a:	ff ca                	dec    %edx
   2190c:	0f 84 29 07 00 00    	je     2203b <e1000_tso+0x7c7>
   21912:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21915: R_X86_64_32S	.rodata.str1.1+0x28da
   21919:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   2191d:	4c 8d 6d a0          	lea    0xffffffffffffffa0(%rbp),%r13
   21921:	e8 00 00 00 00       	callq  21926 <e1000_tso+0xb2>
			21922: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21926:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21929: R_X86_64_32S	.rodata.str1.1+0x28eb
   2192d:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
   21934:	00 
   21935:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   2193c:	00 
   2193d:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
   21944:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
   21948:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   2194f:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   21956:	c7 45 c4 20 00 00 00 	movl   $0x20,0xffffffffffffffc4(%rbp)
   2195d:	e8 00 00 00 00       	callq  21962 <e1000_tso+0xee>
			2195e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21962:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   21966:	4c 89 e2             	mov    %r12,%rdx
   21969:	4c 89 ee             	mov    %r13,%rsi
   2196c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2196f: R_X86_64_32S	.rodata.str1.1+0x28da
   21973:	c7 45 b0 00 00 00 00 	movl   $0x0,0xffffffffffffffb0(%rbp)
   2197a:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   21981:	00 
   21982:	e8 00 00 00 00       	callq  21987 <e1000_tso+0x113>
			21983: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   21987:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2198b:	48 85 c0             	test   %rax,%rax
   2198e:	0f 84 c7 02 00 00    	je     21c5b <e1000_tso+0x3e7>
   21994:	8a 40 7d             	mov    0x7d(%rax),%al
   21997:	48 8d 5d a8          	lea    0xffffffffffffffa8(%rbp),%rbx
   2199b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   219a1:	4c 89 e2             	mov    %r12,%rdx
   219a4:	4c 89 ee             	mov    %r13,%rsi
   219a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			219aa: R_X86_64_32S	.rodata.str1.1+0x28da
   219ae:	48 89 d9             	mov    %rbx,%rcx
   219b1:	83 e0 07             	and    $0x7,%eax
   219b4:	0f b6 c0             	movzbl %al,%eax
   219b7:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   219ba:	e8 00 00 00 00       	callq  219bf <e1000_tso+0x14b>
			219bb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   219bf:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   219c3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   219c9:	4c 89 e2             	mov    %r12,%rdx
   219cc:	4c 89 ee             	mov    %r13,%rsi
   219cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			219d2: R_X86_64_32S	.rodata.str1.1+0x28da
   219d6:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   219dd:	e8 00 00 00 00       	callq  219e2 <e1000_tso+0x16e>
			219de: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   219e2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   219e6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   219ec:	4c 89 e2             	mov    %r12,%rdx
   219ef:	4c 89 ee             	mov    %r13,%rsi
   219f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			219f5: R_X86_64_32S	.rodata.str1.1+0x28da
   219f9:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   21a00:	e8 00 00 00 00       	callq  21a05 <e1000_tso+0x191>
			21a01: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21a05:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   21a09:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   21a0f:	48 89 d9             	mov    %rbx,%rcx
   21a12:	4c 89 e2             	mov    %r12,%rdx
   21a15:	4c 89 ee             	mov    %r13,%rsi
   21a18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21a1b: R_X86_64_32S	.rodata.str1.1+0x28da
   21a1f:	8a 40 7c             	mov    0x7c(%rax),%al
   21a22:	c0 e8 02             	shr    $0x2,%al
   21a25:	83 e0 03             	and    $0x3,%eax
   21a28:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   21a2b:	e8 00 00 00 00       	callq  21a30 <e1000_tso+0x1bc>
			21a2c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21a30:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21a34:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21a3a:	4c 89 e2             	mov    %r12,%rdx
   21a3d:	4c 89 ee             	mov    %r13,%rsi
   21a40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21a43: R_X86_64_32S	.rodata.str1.1+0x28da
   21a47:	48 83 c1 6c          	add    $0x6c,%rcx
   21a4b:	e8 00 00 00 00       	callq  21a50 <e1000_tso+0x1dc>
			21a4c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21a50:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21a54:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   21a5a:	4c 89 e2             	mov    %r12,%rdx
   21a5d:	4c 89 ee             	mov    %r13,%rsi
   21a60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21a63: R_X86_64_32S	.rodata.str1.1+0x28da
   21a67:	48 81 c1 a4 00 00 00 	add    $0xa4,%rcx
   21a6e:	e8 00 00 00 00       	callq  21a73 <e1000_tso+0x1ff>
			21a6f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21a73:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   21a77:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   21a7d:	48 89 d9             	mov    %rbx,%rcx
   21a80:	4c 89 e2             	mov    %r12,%rdx
   21a83:	4c 89 ee             	mov    %r13,%rsi
   21a86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21a89: R_X86_64_32S	.rodata.str1.1+0x28da
   21a8d:	8a 40 7c             	mov    0x7c(%rax),%al
   21a90:	d0 e8                	shr    %al
   21a92:	83 e0 01             	and    $0x1,%eax
   21a95:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   21a98:	e8 00 00 00 00       	callq  21a9d <e1000_tso+0x229>
			21a99: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21a9d:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21aa1:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   21aa7:	4c 89 e2             	mov    %r12,%rdx
   21aaa:	4c 89 ee             	mov    %r13,%rsi
   21aad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21ab0: R_X86_64_32S	.rodata.str1.1+0x28da
   21ab4:	48 83 c1 76          	add    $0x76,%rcx
   21ab8:	e8 00 00 00 00       	callq  21abd <e1000_tso+0x249>
			21ab9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21abd:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21ac1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21ac7:	4c 89 e2             	mov    %r12,%rdx
   21aca:	4c 89 ee             	mov    %r13,%rsi
   21acd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21ad0: R_X86_64_32S	.rodata.str1.1+0x28da
   21ad4:	48 83 c1 74          	add    $0x74,%rcx
   21ad8:	e8 00 00 00 00       	callq  21add <e1000_tso+0x269>
			21ad9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21add:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21ae1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21ae7:	4c 89 e2             	mov    %r12,%rdx
   21aea:	4c 89 ee             	mov    %r13,%rsi
   21aed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21af0: R_X86_64_32S	.rodata.str1.1+0x28da
   21af4:	48 83 c1 68          	add    $0x68,%rcx
   21af8:	e8 00 00 00 00       	callq  21afd <e1000_tso+0x289>
			21af9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21afd:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21b01:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21b07:	4c 89 e2             	mov    %r12,%rdx
   21b0a:	4c 89 ee             	mov    %r13,%rsi
   21b0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21b10: R_X86_64_32S	.rodata.str1.1+0x28da
   21b14:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   21b1b:	e8 00 00 00 00       	callq  21b20 <e1000_tso+0x2ac>
			21b1c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21b20:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21b24:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21b2a:	4c 89 e2             	mov    %r12,%rdx
   21b2d:	4c 89 ee             	mov    %r13,%rsi
   21b30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21b33: R_X86_64_32S	.rodata.str1.1+0x28da
   21b37:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   21b3e:	e8 00 00 00 00       	callq  21b43 <e1000_tso+0x2cf>
			21b3f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21b43:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21b47:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   21b4d:	4c 89 e2             	mov    %r12,%rdx
   21b50:	4c 89 ee             	mov    %r13,%rsi
   21b53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21b56: R_X86_64_32S	.rodata.str1.1+0x28da
   21b5a:	48 83 c1 7e          	add    $0x7e,%rcx
   21b5e:	e8 00 00 00 00       	callq  21b63 <e1000_tso+0x2ef>
			21b5f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21b63:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21b67:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21b6d:	4c 89 e2             	mov    %r12,%rdx
   21b70:	4c 89 ee             	mov    %r13,%rsi
   21b73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21b76: R_X86_64_32S	.rodata.str1.1+0x28da
   21b7a:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   21b81:	e8 00 00 00 00       	callq  21b86 <e1000_tso+0x312>
			21b82: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21b86:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21b8a:	4c 89 e2             	mov    %r12,%rdx
   21b8d:	4c 89 ee             	mov    %r13,%rsi
   21b90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21b93: R_X86_64_32S	.rodata.str1.1+0x28da
   21b97:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   21b9e:	e8 00 00 00 00       	callq  21ba3 <e1000_tso+0x32f>
			21b9f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   21ba3:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   21ba7:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   21bae:	00 
   21baf:	74 5d                	je     21c0e <e1000_tso+0x39a>
   21bb1:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   21bb7:	31 db                	xor    %ebx,%ebx
   21bb9:	e8 00 00 00 00       	callq  21bbe <e1000_tso+0x34a>
			21bba: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   21bbe:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   21bc2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21bc8:	4c 89 e2             	mov    %r12,%rdx
   21bcb:	4c 89 ee             	mov    %r13,%rsi
   21bce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21bd1: R_X86_64_32S	.rodata.str1.1+0x28da
   21bd5:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   21bd8:	e8 00 00 00 00       	callq  21bdd <e1000_tso+0x369>
			21bd9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21bdd:	eb 2a                	jmp    21c09 <e1000_tso+0x395>
   21bdf:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   21be3:	48 63 cb             	movslq %ebx,%rcx
   21be6:	48 8d 55 b0          	lea    0xffffffffffffffb0(%rbp),%rdx
   21bea:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   21bee:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   21bf4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21bf7: R_X86_64_32S	.rodata.str1.1+0x28da
   21bfb:	ff c3                	inc    %ebx
   21bfd:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   21c04:	e8 00 00 00 00       	callq  21c09 <e1000_tso+0x395>
			21c05: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21c09:	3b 5d cc             	cmp    0xffffffffffffffcc(%rbp),%ebx
   21c0c:	7c d1                	jl     21bdf <e1000_tso+0x36b>
   21c0e:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   21c12:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   21c16:	4c 8d 65 a0          	lea    0xffffffffffffffa0(%rbp),%r12
   21c1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21c1d: R_X86_64_32S	.rodata.str1.1+0x28da
   21c21:	48 89 da             	mov    %rbx,%rdx
   21c24:	4c 89 e6             	mov    %r12,%rsi
   21c27:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   21c2e:	e8 00 00 00 00       	callq  21c33 <e1000_tso+0x3bf>
			21c2f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   21c33:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   21c37:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   21c3e:	48 85 c9             	test   %rcx,%rcx
   21c41:	74 18                	je     21c5b <e1000_tso+0x3e7>
   21c43:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   21c49:	48 89 da             	mov    %rbx,%rdx
   21c4c:	4c 89 e6             	mov    %r12,%rsi
   21c4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21c52: R_X86_64_32S	.rodata.str1.1+0x28da
   21c56:	e8 00 00 00 00       	callq  21c5b <e1000_tso+0x3e7>
			21c57: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21c5b:	4c 8d 65 a0          	lea    0xffffffffffffffa0(%rbp),%r12
   21c5f:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   21c63:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   21c67:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   21c6b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21c71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21c74: R_X86_64_32S	.rodata.str1.1+0x28da
   21c78:	48 89 da             	mov    %rbx,%rdx
   21c7b:	4c 89 e6             	mov    %r12,%rsi
   21c7e:	e8 00 00 00 00       	callq  21c83 <e1000_tso+0x40f>
			21c7f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21c83:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21c89:	4c 89 f1             	mov    %r14,%rcx
   21c8c:	48 89 da             	mov    %rbx,%rdx
   21c8f:	4c 89 e6             	mov    %r12,%rsi
   21c92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21c95: R_X86_64_32S	.rodata.str1.1+0x28da
   21c99:	e8 00 00 00 00       	callq  21c9e <e1000_tso+0x42a>
			21c9a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21c9e:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   21ca2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   21ca8:	48 89 da             	mov    %rbx,%rdx
   21cab:	4c 89 e6             	mov    %r12,%rsi
   21cae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21cb1: R_X86_64_32S	.rodata.str1.1+0x28da
   21cb5:	e8 00 00 00 00       	callq  21cba <e1000_tso+0x446>
			21cb6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   21cba:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   21cbe:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
   21cc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21cc5: R_X86_64_32S	.rodata.str1.1+0x28da
   21cc9:	48 c7 45 80 2f 06 00 	movq   $0x62f,0xffffffffffffff80(%rbp)
   21cd0:	00 
   21cd1:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   21cd5:	8b 45 b0             	mov    0xffffffffffffffb0(%rbp),%eax
   21cd8:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   21cdb:	e8 00 00 00 00       	callq  21ce0 <e1000_tso+0x46c>
			21cdc: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   21ce0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21ce3: R_X86_64_32S	.rodata.str1.1+0x290a
   21ce7:	4c 89 7d a0          	mov    %r15,0xffffffffffffffa0(%rbp)
   21ceb:	c7 45 b0 00 00 00 00 	movl   $0x0,0xffffffffffffffb0(%rbp)
   21cf2:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   21cf9:	c7 45 cc 20 00 00 00 	movl   $0x20,0xffffffffffffffcc(%rbp)
   21d00:	e8 00 00 00 00       	callq  21d05 <e1000_tso+0x491>
			21d01: R_X86_64_PC32	record_function+0xfffffffffffffffc
   21d05:	4c 8b 6d 90          	mov    0xffffffffffffff90(%rbp),%r13
   21d09:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   21d0f:	4c 89 e1             	mov    %r12,%rcx
   21d12:	4c 89 f2             	mov    %r14,%rdx
   21d15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21d18: R_X86_64_32S	.rodata.str1.1+0x28da
   21d1c:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   21d23:	4c 89 ee             	mov    %r13,%rsi
   21d26:	e8 00 00 00 00       	callq  21d2b <e1000_tso+0x4b7>
			21d27: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   21d2b:	48 83 7d a0 00       	cmpq   $0x0,0xffffffffffffffa0(%rbp)
   21d30:	0f 84 74 02 00 00    	je     21faa <e1000_tso+0x736>
   21d36:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   21d3a:	b9 01 00 00 00       	mov    $0x1,%ecx
   21d3f:	4c 89 f2             	mov    %r14,%rdx
   21d42:	4c 89 ee             	mov    %r13,%rsi
   21d45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21d48: R_X86_64_32S	.rodata.str1.1+0x28da
   21d4c:	e8 00 00 00 00       	callq  21d51 <e1000_tso+0x4dd>
			21d4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21d51:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   21d55:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   21d58:	4c 89 ee             	mov    %r13,%rsi
   21d5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21d5e: R_X86_64_32S	.rodata.str1.1+0x28da
   21d62:	8a 41 7d             	mov    0x7d(%rcx),%al
   21d65:	83 e2 07             	and    $0x7,%edx
   21d68:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   21d6b:	09 d0                	or     %edx,%eax
   21d6d:	4c 89 f2             	mov    %r14,%rdx
   21d70:	88 41 7d             	mov    %al,0x7d(%rcx)
   21d73:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21d77:	b9 04 00 00 00       	mov    $0x4,%ecx
   21d7c:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   21d83:	e8 00 00 00 00       	callq  21d88 <e1000_tso+0x514>
			21d84: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21d88:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21d8c:	b9 04 00 00 00       	mov    $0x4,%ecx
   21d91:	4c 89 f2             	mov    %r14,%rdx
   21d94:	4c 89 ee             	mov    %r13,%rsi
   21d97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21d9a: R_X86_64_32S	.rodata.str1.1+0x28da
   21d9e:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   21da5:	e8 00 00 00 00       	callq  21daa <e1000_tso+0x536>
			21da6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21daa:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   21dae:	b9 01 00 00 00       	mov    $0x1,%ecx
   21db3:	4c 89 f2             	mov    %r14,%rdx
   21db6:	4c 89 ee             	mov    %r13,%rsi
   21db9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21dbc: R_X86_64_32S	.rodata.str1.1+0x28da
   21dc0:	e8 00 00 00 00       	callq  21dc5 <e1000_tso+0x551>
			21dc1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21dc5:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   21dc9:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   21dcc:	4c 89 ee             	mov    %r13,%rsi
   21dcf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21dd2: R_X86_64_32S	.rodata.str1.1+0x28da
   21dd6:	8a 41 7c             	mov    0x7c(%rcx),%al
   21dd9:	83 e2 03             	and    $0x3,%edx
   21ddc:	c1 e2 02             	shl    $0x2,%edx
   21ddf:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   21de2:	09 d0                	or     %edx,%eax
   21de4:	4c 89 f2             	mov    %r14,%rdx
   21de7:	88 41 7c             	mov    %al,0x7c(%rcx)
   21dea:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21dee:	b9 04 00 00 00       	mov    $0x4,%ecx
   21df3:	49 83 c0 6c          	add    $0x6c,%r8
   21df7:	e8 00 00 00 00       	callq  21dfc <e1000_tso+0x588>
			21df8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21dfc:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21e00:	b9 04 00 00 00       	mov    $0x4,%ecx
   21e05:	4c 89 f2             	mov    %r14,%rdx
   21e08:	4c 89 ee             	mov    %r13,%rsi
   21e0b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21e0e: R_X86_64_32S	.rodata.str1.1+0x28da
   21e12:	49 83 c0 74          	add    $0x74,%r8
   21e16:	e8 00 00 00 00       	callq  21e1b <e1000_tso+0x5a7>
			21e17: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21e1b:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21e1f:	b9 04 00 00 00       	mov    $0x4,%ecx
   21e24:	4c 89 f2             	mov    %r14,%rdx
   21e27:	4c 89 ee             	mov    %r13,%rsi
   21e2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21e2d: R_X86_64_32S	.rodata.str1.1+0x28da
   21e31:	49 83 c0 68          	add    $0x68,%r8
   21e35:	e8 00 00 00 00       	callq  21e3a <e1000_tso+0x5c6>
			21e36: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21e3a:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21e3e:	b9 04 00 00 00       	mov    $0x4,%ecx
   21e43:	4c 89 f2             	mov    %r14,%rdx
   21e46:	4c 89 ee             	mov    %r13,%rsi
   21e49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21e4c: R_X86_64_32S	.rodata.str1.1+0x28da
   21e50:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   21e57:	e8 00 00 00 00       	callq  21e5c <e1000_tso+0x5e8>
			21e58: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21e5c:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21e60:	b9 04 00 00 00       	mov    $0x4,%ecx
   21e65:	4c 89 f2             	mov    %r14,%rdx
   21e68:	4c 89 ee             	mov    %r13,%rsi
   21e6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21e6e: R_X86_64_32S	.rodata.str1.1+0x28da
   21e72:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   21e79:	e8 00 00 00 00       	callq  21e7e <e1000_tso+0x60a>
			21e7a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21e7e:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21e82:	b9 02 00 00 00       	mov    $0x2,%ecx
   21e87:	4c 89 f2             	mov    %r14,%rdx
   21e8a:	4c 89 ee             	mov    %r13,%rsi
   21e8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21e90: R_X86_64_32S	.rodata.str1.1+0x28da
   21e94:	49 83 c0 7e          	add    $0x7e,%r8
   21e98:	e8 00 00 00 00       	callq  21e9d <e1000_tso+0x629>
			21e99: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21e9d:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   21ea1:	b9 04 00 00 00       	mov    $0x4,%ecx
   21ea6:	4c 89 f2             	mov    %r14,%rdx
   21ea9:	4c 89 ee             	mov    %r13,%rsi
   21eac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21eaf: R_X86_64_32S	.rodata.str1.1+0x28da
   21eb3:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   21eba:	e8 00 00 00 00       	callq  21ebf <e1000_tso+0x64b>
			21ebb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21ebf:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   21ec3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   21ec9:	4c 89 f2             	mov    %r14,%rdx
   21ecc:	4c 89 ee             	mov    %r13,%rsi
   21ecf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21ed2: R_X86_64_32S	.rodata.str1.1+0x28da
   21ed6:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   21edd:	e8 00 00 00 00       	callq  21ee2 <e1000_tso+0x66e>
			21ede: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   21ee2:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   21ee6:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   21eed:	00 
   21eee:	74 69                	je     21f59 <e1000_tso+0x6e5>
   21ef0:	4c 8d 45 b8          	lea    0xffffffffffffffb8(%rbp),%r8
   21ef4:	b9 04 00 00 00       	mov    $0x4,%ecx
   21ef9:	4c 89 f2             	mov    %r14,%rdx
   21efc:	4c 89 ee             	mov    %r13,%rsi
   21eff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21f02: R_X86_64_32S	.rodata.str1.1+0x28da
   21f06:	31 db                	xor    %ebx,%ebx
   21f08:	e8 00 00 00 00       	callq  21f0d <e1000_tso+0x699>
			21f09: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21f0d:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   21f11:	8b 75 b8             	mov    0xffffffffffffffb8(%rbp),%esi
   21f14:	b9 01 00 00 00       	mov    $0x1,%ecx
   21f19:	ba 01 00 00 00       	mov    $0x1,%edx
   21f1e:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   21f25:	e8 00 00 00 00       	callq  21f2a <e1000_tso+0x6b6>
			21f26: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   21f2a:	eb 28                	jmp    21f54 <e1000_tso+0x6e0>
   21f2c:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   21f30:	4c 63 c3             	movslq %ebx,%r8
   21f33:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   21f37:	b9 01 00 00 00       	mov    $0x1,%ecx
   21f3c:	4c 89 ee             	mov    %r13,%rsi
   21f3f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21f42: R_X86_64_32S	.rodata.str1.1+0x28da
   21f46:	ff c3                	inc    %ebx
   21f48:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   21f4f:	e8 00 00 00 00       	callq  21f54 <e1000_tso+0x6e0>
			21f50: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21f54:	3b 5d b8             	cmp    0xffffffffffffffb8(%rbp),%ebx
   21f57:	7c d3                	jl     21f2c <e1000_tso+0x6b8>
   21f59:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   21f5d:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   21f61:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   21f67:	4c 89 ee             	mov    %r13,%rsi
   21f6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21f6d: R_X86_64_32S	.rodata.str1.1+0x28da
   21f71:	48 89 da             	mov    %rbx,%rdx
   21f74:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   21f7b:	e8 00 00 00 00       	callq  21f80 <e1000_tso+0x70c>
			21f7c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   21f80:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   21f84:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   21f8b:	48 85 c0             	test   %rax,%rax
   21f8e:	74 1a                	je     21faa <e1000_tso+0x736>
   21f90:	49 89 c0             	mov    %rax,%r8
   21f93:	b9 01 00 00 00       	mov    $0x1,%ecx
   21f98:	48 89 da             	mov    %rbx,%rdx
   21f9b:	4c 89 ee             	mov    %r13,%rsi
   21f9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21fa1: R_X86_64_32S	.rodata.str1.1+0x28da
   21fa5:	e8 00 00 00 00       	callq  21faa <e1000_tso+0x736>
			21fa6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21faa:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   21fae:	4c 8d 45 b0          	lea    0xffffffffffffffb0(%rbp),%r8
   21fb2:	b9 04 00 00 00       	mov    $0x4,%ecx
   21fb7:	4c 89 ee             	mov    %r13,%rsi
   21fba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21fbd: R_X86_64_32S	.rodata.str1.1+0x28da
   21fc1:	48 89 da             	mov    %rbx,%rdx
   21fc4:	e8 00 00 00 00       	callq  21fc9 <e1000_tso+0x755>
			21fc5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21fc9:	4c 8d 45 a8          	lea    0xffffffffffffffa8(%rbp),%r8
   21fcd:	48 89 da             	mov    %rbx,%rdx
   21fd0:	b9 04 00 00 00       	mov    $0x4,%ecx
   21fd5:	4c 89 ee             	mov    %r13,%rsi
   21fd8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21fdb: R_X86_64_32S	.rodata.str1.1+0x28da
   21fdf:	e8 00 00 00 00       	callq  21fe4 <e1000_tso+0x770>
			21fe0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21fe4:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   21fe8:	48 89 da             	mov    %rbx,%rdx
   21feb:	b9 04 00 00 00       	mov    $0x4,%ecx
   21ff0:	4c 89 ee             	mov    %r13,%rsi
   21ff3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21ff6: R_X86_64_32S	.rodata.str1.1+0x28da
   21ffa:	e8 00 00 00 00       	callq  21fff <e1000_tso+0x78b>
			21ffb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   21fff:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   22003:	48 89 da             	mov    %rbx,%rdx
   22006:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22009: R_X86_64_32S	.rodata.str1.1+0x28da
   2200d:	b9 04 00 00 00       	mov    $0x4,%ecx
   22012:	4c 89 ee             	mov    %r13,%rsi
   22015:	e8 00 00 00 00       	callq  2201a <e1000_tso+0x7a6>
			22016: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2201a:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   2201e:	8b 5d c0             	mov    0xffffffffffffffc0(%rbp),%ebx
   22021:	48 85 ff             	test   %rdi,%rdi
   22024:	74 0d                	je     22033 <e1000_tso+0x7bf>
   22026:	e8 00 00 00 00       	callq  2202b <e1000_tso+0x7b7>
			22027: R_X86_64_PC32	kfree+0xfffffffffffffffc
   2202b:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   22032:	00 
   22033:	85 db                	test   %ebx,%ebx
   22035:	0f 85 cb 05 00 00    	jne    22606 <e1000_tso+0xd92>
   2203b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2203e: R_X86_64_32S	.rodata.str1.1+0x2929
   22042:	e8 00 00 00 00       	callq  22047 <e1000_tso+0x7d3>
			22043: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22047:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2204a: R_X86_64_32S	.rodata.str1.1+0x293e
   2204e:	e8 00 00 00 00       	callq  22053 <e1000_tso+0x7df>
			2204f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22053:	41 8b 9f a8 00 00 00 	mov    0xa8(%r15),%ebx
   2205a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2205d: R_X86_64_32S	.rodata.str1.1+0x2953
   22061:	49 03 9f c0 00 00 00 	add    0xc0(%r15),%rbx
   22068:	41 2b 9f c8 00 00 00 	sub    0xc8(%r15),%ebx
   2206f:	e8 00 00 00 00       	callq  22074 <e1000_tso+0x800>
			22070: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22074:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22077: R_X86_64_32S	.rodata.str1.1+0x295e
   2207b:	e8 00 00 00 00       	callq  22080 <e1000_tso+0x80c>
			2207c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22080:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22083: R_X86_64_32S	.rodata.str1.1+0x293e
   22087:	e8 00 00 00 00       	callq  2208c <e1000_tso+0x818>
			22088: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2208c:	41 8b 97 a8 00 00 00 	mov    0xa8(%r15),%edx
   22093:	49 8b 87 c0 00 00 00 	mov    0xc0(%r15),%rax
   2209a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2209d: R_X86_64_32S	.rodata.str1.1+0x28b8
   220a1:	8a 44 10 0c          	mov    0xc(%rax,%rdx,1),%al
   220a5:	c0 e8 04             	shr    $0x4,%al
   220a8:	8d 04 83             	lea    (%rbx,%rax,4),%eax
   220ab:	88 85 6f ff ff ff    	mov    %al,0xffffffffffffff6f(%rbp)
   220b1:	e8 00 00 00 00       	callq  220b6 <e1000_tso+0x842>
			220b2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   220b6:	41 8b 97 b8 00 00 00 	mov    0xb8(%r15),%edx
   220bd:	49 8b 87 c0 00 00 00 	mov    0xc0(%r15),%rax
   220c4:	66 8b 44 10 06       	mov    0x6(%rax,%rdx,1),%ax
   220c9:	66 89 85 6c ff ff ff 	mov    %ax,0xffffffffffffff6c(%rbp)
   220d0:	66 41 8b 47 7e       	mov    0x7e(%r15),%ax
   220d5:	66 83 f8 08          	cmp    $0x8,%ax
   220d9:	0f 85 f1 00 00 00    	jne    221d0 <e1000_tso+0x95c>
   220df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			220e2: R_X86_64_32S	.rodata.str1.1+0x2966
   220e6:	e8 00 00 00 00       	callq  220eb <e1000_tso+0x877>
			220e7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   220eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			220ee: R_X86_64_32S	.rodata.str1.1+0x296d
   220f2:	e8 00 00 00 00       	callq  220f7 <e1000_tso+0x883>
			220f3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   220f7:	41 8b 9f ac 00 00 00 	mov    0xac(%r15),%ebx
   220fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22101: R_X86_64_32S	.rodata.str1.1+0x295e
   22105:	49 03 9f c0 00 00 00 	add    0xc0(%r15),%rbx
   2210c:	66 c7 43 02 00 00    	movw   $0x0,0x2(%rbx)
   22112:	66 c7 43 0a 00 00    	movw   $0x0,0xa(%rbx)
   22118:	e8 00 00 00 00       	callq  2211d <e1000_tso+0x8a9>
			22119: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2211d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22120: R_X86_64_32S	.rodata.str1.1+0x293e
   22124:	e8 00 00 00 00       	callq  22129 <e1000_tso+0x8b5>
			22125: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22129:	45 8b af a8 00 00 00 	mov    0xa8(%r15),%r13d
   22130:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22133: R_X86_64_32S	.rodata.str1.1+0x2980
   22137:	44 8b 73 10          	mov    0x10(%rbx),%r14d
   2213b:	44 8b 63 0c          	mov    0xc(%rbx),%r12d
   2213f:	4d 03 af c0 00 00 00 	add    0xc0(%r15),%r13
   22146:	31 db                	xor    %ebx,%ebx
   22148:	e8 00 00 00 00       	callq  2214d <e1000_tso+0x8d9>
			22149: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2214d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22150: R_X86_64_32S	.rodata.str1.1+0x2992
   22154:	e8 00 00 00 00       	callq  22159 <e1000_tso+0x8e5>
			22155: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22159:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2215c: R_X86_64_32S	.rodata.str1.1+0x29a5
   22160:	e8 00 00 00 00       	callq  22165 <e1000_tso+0x8f1>
			22161: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22165:	44 01 f3             	add    %r14d,%ebx
   22168:	44 11 e3             	adc    %r12d,%ebx
   2216b:	81 d3 00 06 00 00    	adc    $0x600,%ebx
   22171:	83 d3 00             	adc    $0x0,%ebx
   22174:	89 d8                	mov    %ebx,%eax
   22176:	66 31 db             	xor    %bx,%bx
   22179:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2217c: R_X86_64_32S	.rodata.str1.1+0x2929
   22180:	c1 e0 10             	shl    $0x10,%eax
   22183:	01 c3                	add    %eax,%ebx
   22185:	81 d3 ff ff 00 00    	adc    $0xffff,%ebx
   2218b:	f7 d3                	not    %ebx
   2218d:	c1 eb 10             	shr    $0x10,%ebx
   22190:	f7 d3                	not    %ebx
   22192:	66 41 89 5d 10       	mov    %bx,0x10(%r13)
   22197:	e8 00 00 00 00       	callq  2219c <e1000_tso+0x928>
			22198: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2219c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2219f: R_X86_64_32S	.rodata.str1.1+0x293e
   221a3:	e8 00 00 00 00       	callq  221a8 <e1000_tso+0x934>
			221a4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   221a8:	41 8b 87 a8 00 00 00 	mov    0xa8(%r15),%eax
   221af:	c7 85 68 ff ff ff 00 	movl   $0x2000000,0xffffffffffffff68(%rbp)
   221b6:	00 00 02 
   221b9:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   221c0:	41 2b 87 c8 00 00 00 	sub    0xc8(%r15),%eax
   221c7:	44 8d 70 ff          	lea    0xffffffffffffffff(%rax),%r14d
   221cb:	e9 e8 02 00 00       	jmpq   224b8 <e1000_tso+0xc44>
   221d0:	45 31 f6             	xor    %r14d,%r14d
   221d3:	66 3d 86 dd          	cmp    $0xdd86,%ax
   221d7:	c7 85 68 ff ff ff 00 	movl   $0x0,0xffffffffffffff68(%rbp)
   221de:	00 00 00 
   221e1:	0f 85 d1 02 00 00    	jne    224b8 <e1000_tso+0xc44>
   221e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			221ea: R_X86_64_32S	.rodata.str1.1+0x29af
   221ee:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   221f2:	4c 8d 6d a8          	lea    0xffffffffffffffa8(%rbp),%r13
   221f6:	e8 00 00 00 00       	callq  221fb <e1000_tso+0x987>
			221f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   221fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			221fe: R_X86_64_32S	.rodata.str1.1+0x296d
   22202:	e8 00 00 00 00       	callq  22207 <e1000_tso+0x993>
			22203: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22207:	41 8b 97 ac 00 00 00 	mov    0xac(%r15),%edx
   2220e:	49 8b 87 c0 00 00 00 	mov    0xc0(%r15),%rax
   22215:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22218: R_X86_64_32S	.rodata.str1.1+0x295e
   2221c:	66 c7 44 10 04 00 00 	movw   $0x0,0x4(%rax,%rdx,1)
   22223:	e8 00 00 00 00       	callq  22228 <e1000_tso+0x9b4>
			22224: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22228:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2222b: R_X86_64_32S	.rodata.str1.1+0x293e
   2222f:	e8 00 00 00 00       	callq  22234 <e1000_tso+0x9c0>
			22230: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22234:	49 8b 87 c0 00 00 00 	mov    0xc0(%r15),%rax
   2223b:	41 8b 97 a8 00 00 00 	mov    0xa8(%r15),%edx
   22242:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22245: R_X86_64_32S	.rodata.str1.1+0x29af
   22249:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   22250:	89 95 7c ff ff ff    	mov    %edx,0xffffffffffffff7c(%rbp)
   22256:	e8 00 00 00 00       	callq  2225b <e1000_tso+0x9e7>
			22257: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2225b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2225e: R_X86_64_32S	.rodata.str1.1+0x296d
   22262:	e8 00 00 00 00       	callq  22267 <e1000_tso+0x9f3>
			22263: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22267:	45 8b b7 ac 00 00 00 	mov    0xac(%r15),%r14d
   2226e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22271: R_X86_64_32S	.rodata.str1.1+0x29af
   22275:	4d 03 b7 c0 00 00 00 	add    0xc0(%r15),%r14
   2227c:	e8 00 00 00 00       	callq  22281 <e1000_tso+0xa0d>
			2227d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22281:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22284: R_X86_64_32S	.rodata.str1.1+0x296d
   22288:	e8 00 00 00 00       	callq  2228d <e1000_tso+0xa19>
			22289: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2228d:	41 8b 9f ac 00 00 00 	mov    0xac(%r15),%ebx
   22294:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22297: R_X86_64_32S	.rodata.str1.1+0x29b8
   2229b:	49 83 c6 18          	add    $0x18,%r14
   2229f:	49 03 9f c0 00 00 00 	add    0xc0(%r15),%rbx
   222a6:	e8 00 00 00 00       	callq  222ab <e1000_tso+0xa37>
			222a7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   222ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			222ae: R_X86_64_32S	.rodata.str1.1+0x29c8
   222b2:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
   222b9:	00 
   222ba:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   222c1:	00 
   222c2:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
   222c9:	4c 89 75 a0          	mov    %r14,0xffffffffffffffa0(%rbp)
   222cd:	48 83 c3 08          	add    $0x8,%rbx
   222d1:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   222d8:	66 c7 45 c8 06 00    	movw   $0x6,0xffffffffffffffc8(%rbp)
   222de:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
   222e2:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   222e9:	e8 00 00 00 00       	callq  222ee <e1000_tso+0xa7a>
			222ea: R_X86_64_PC32	record_function+0xfffffffffffffffc
   222ee:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   222f2:	4c 89 e1             	mov    %r12,%rcx
   222f5:	4c 89 ee             	mov    %r13,%rsi
   222f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			222fb: R_X86_64_32S	.rodata.str1.1+0x29b8
   222ff:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   22306:	48 c7 45 a8 00 00 00 	movq   $0x0,0xffffffffffffffa8(%rbp)
   2230d:	00 
   2230e:	e8 00 00 00 00       	callq  22313 <e1000_tso+0xa9f>
			2230f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   22313:	48 8d 4d a0          	lea    0xffffffffffffffa0(%rbp),%rcx
   22317:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   2231b:	4c 89 ee             	mov    %r13,%rsi
   2231e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22321: R_X86_64_32S	.rodata.str1.1+0x29b8
   22325:	e8 00 00 00 00       	callq  2232a <e1000_tso+0xab6>
			22326: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2232a:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   2232e:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   22332:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22338:	4c 89 ee             	mov    %r13,%rsi
   2233b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2233e: R_X86_64_32S	.rodata.str1.1+0x29b8
   22342:	e8 00 00 00 00       	callq  22347 <e1000_tso+0xad3>
			22343: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22347:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   2234b:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   2234f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   22355:	4c 89 ee             	mov    %r13,%rsi
   22358:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2235b: R_X86_64_32S	.rodata.str1.1+0x29b8
   2235f:	e8 00 00 00 00       	callq  22364 <e1000_tso+0xaf0>
			22360: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22364:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   22368:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   2236c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22372:	4c 89 ee             	mov    %r13,%rsi
   22375:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22378: R_X86_64_32S	.rodata.str1.1+0x29b8
   2237c:	e8 00 00 00 00       	callq  22381 <e1000_tso+0xb0d>
			2237d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22381:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   22385:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
   22389:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2238c: R_X86_64_32S	.rodata.str1.1+0x29b8
   22390:	48 c7 45 80 73 04 00 	movq   $0x473,0xffffffffffffff80(%rbp)
   22397:	00 
   22398:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   2239c:	8b 45 c0             	mov    0xffffffffffffffc0(%rbp),%eax
   2239f:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   223a2:	e8 00 00 00 00       	callq  223a7 <e1000_tso+0xb33>
			223a3: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   223a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			223aa: R_X86_64_32S	.rodata.str1.1+0x29e6
   223ae:	48 89 5d a0          	mov    %rbx,0xffffffffffffffa0(%rbp)
   223b2:	4c 89 75 a8          	mov    %r14,0xffffffffffffffa8(%rbp)
   223b6:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   223bd:	66 c7 45 c8 06 00    	movw   $0x6,0xffffffffffffffc8(%rbp)
   223c3:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   223ca:	e8 00 00 00 00       	callq  223cf <e1000_tso+0xb5b>
			223cb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   223cf:	48 8b 5d 90          	mov    0xffffffffffffff90(%rbp),%rbx
   223d3:	48 8d 4d a0          	lea    0xffffffffffffffa0(%rbp),%rcx
   223d7:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   223dd:	4c 89 e2             	mov    %r12,%rdx
   223e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			223e3: R_X86_64_32S	.rodata.str1.1+0x29b8
   223e7:	c7 45 b0 00 00 00 00 	movl   $0x0,0xffffffffffffffb0(%rbp)
   223ee:	48 89 de             	mov    %rbx,%rsi
   223f1:	e8 00 00 00 00       	callq  223f6 <e1000_tso+0xb82>
			223f2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   223f6:	48 89 de             	mov    %rbx,%rsi
   223f9:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   223ff:	4c 89 e9             	mov    %r13,%rcx
   22402:	4c 89 e2             	mov    %r12,%rdx
   22405:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22408: R_X86_64_32S	.rodata.str1.1+0x29b8
   2240c:	e8 00 00 00 00       	callq  22411 <e1000_tso+0xb9d>
			2240d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22411:	4c 8d 45 b8          	lea    0xffffffffffffffb8(%rbp),%r8
   22415:	48 89 de             	mov    %rbx,%rsi
   22418:	b9 04 00 00 00       	mov    $0x4,%ecx
   2241d:	4c 89 e2             	mov    %r12,%rdx
   22420:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22423: R_X86_64_32S	.rodata.str1.1+0x29b8
   22427:	e8 00 00 00 00       	callq  2242c <e1000_tso+0xbb8>
			22428: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2242c:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   22430:	48 89 de             	mov    %rbx,%rsi
   22433:	b9 02 00 00 00       	mov    $0x2,%ecx
   22438:	4c 89 e2             	mov    %r12,%rdx
   2243b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2243e: R_X86_64_32S	.rodata.str1.1+0x29b8
   22442:	e8 00 00 00 00       	callq  22447 <e1000_tso+0xbd3>
			22443: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22447:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   2244b:	48 89 de             	mov    %rbx,%rsi
   2244e:	b9 04 00 00 00       	mov    $0x4,%ecx
   22453:	4c 89 e2             	mov    %r12,%rdx
   22456:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22459: R_X86_64_32S	.rodata.str1.1+0x29b8
   2245d:	e8 00 00 00 00       	callq  22462 <e1000_tso+0xbee>
			2245e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22462:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   22466:	48 89 de             	mov    %rbx,%rsi
   22469:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2246c: R_X86_64_32S	.rodata.str1.1+0x29b8
   22470:	b9 02 00 00 00       	mov    $0x2,%ecx
   22475:	4c 89 e2             	mov    %r12,%rdx
   22478:	e8 00 00 00 00       	callq  2247d <e1000_tso+0xc09>
			22479: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2247d:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   22481:	8b 5d c4             	mov    0xffffffffffffffc4(%rbp),%ebx
   22484:	48 85 ff             	test   %rdi,%rdi
   22487:	74 0d                	je     22496 <e1000_tso+0xc22>
   22489:	e8 00 00 00 00       	callq  2248e <e1000_tso+0xc1a>
			2248a: R_X86_64_PC32	kfree+0xfffffffffffffffc
   2248e:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   22495:	00 
   22496:	8b 85 7c ff ff ff    	mov    0xffffffffffffff7c(%rbp),%eax
   2249c:	4c 8b 85 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%r8
   224a3:	f7 d3                	not    %ebx
   224a5:	45 31 f6             	xor    %r14d,%r14d
   224a8:	66 41 89 5c 00 10    	mov    %bx,0x10(%r8,%rax,1)
   224ae:	c7 85 68 ff ff ff 00 	movl   $0x0,0xffffffffffffff68(%rbp)
   224b5:	00 00 00 
   224b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			224bb: R_X86_64_32S	.rodata.str1.1+0x2a04
   224bf:	e8 00 00 00 00       	callq  224c4 <e1000_tso+0xc50>
			224c0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   224c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			224c7: R_X86_64_32S	.rodata.str1.1+0x296d
   224cb:	e8 00 00 00 00       	callq  224d0 <e1000_tso+0xc5c>
			224cc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   224d0:	45 8b af ac 00 00 00 	mov    0xac(%r15),%r13d
   224d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			224da: R_X86_64_32S	.rodata.str1.1+0x2966
   224de:	4d 03 af c0 00 00 00 	add    0xc0(%r15),%r13
   224e5:	45 2b af c8 00 00 00 	sub    0xc8(%r15),%r13d
   224ec:	e8 00 00 00 00       	callq  224f1 <e1000_tso+0xc7d>
			224ed: R_X86_64_PC32	record_function+0xfffffffffffffffc
   224f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			224f4: R_X86_64_32S	.rodata.str1.1+0x296d
   224f8:	e8 00 00 00 00       	callq  224fd <e1000_tso+0xc89>
			224f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   224fd:	41 8b 9f ac 00 00 00 	mov    0xac(%r15),%ebx
   22504:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22507: R_X86_64_32S	.rodata.str1.1+0x2929
   2250b:	49 03 9f c0 00 00 00 	add    0xc0(%r15),%rbx
   22512:	48 83 c3 0a          	add    $0xa,%rbx
   22516:	41 2a 9f c8 00 00 00 	sub    0xc8(%r15),%bl
   2251d:	e8 00 00 00 00       	callq  22522 <e1000_tso+0xcae>
			2251e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22522:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22525: R_X86_64_32S	.rodata.str1.1+0x293e
   22529:	e8 00 00 00 00       	callq  2252e <e1000_tso+0xcba>
			2252a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2252e:	45 8b a7 a8 00 00 00 	mov    0xa8(%r15),%r12d
   22535:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22538: R_X86_64_32S	.rodata.str1.1+0x295e
   2253c:	4d 03 a7 c0 00 00 00 	add    0xc0(%r15),%r12
   22543:	45 2b a7 c8 00 00 00 	sub    0xc8(%r15),%r12d
   2254a:	e8 00 00 00 00       	callq  2254f <e1000_tso+0xcdb>
			2254b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2254f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22552: R_X86_64_32S	.rodata.str1.1+0x293e
   22556:	e8 00 00 00 00       	callq  2255b <e1000_tso+0xce7>
			22557: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2255b:	0f b6 85 6f ff ff ff 	movzbl 0xffffffffffffff6f(%rbp),%eax
   22562:	41 8b 4f 68          	mov    0x68(%r15),%ecx
   22566:	41 8b b7 a8 00 00 00 	mov    0xa8(%r15),%esi
   2256d:	4c 8b 85 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%r8
   22574:	49 03 b7 c0 00 00 00 	add    0xc0(%r15),%rsi
   2257b:	29 c1                	sub    %eax,%ecx
   2257d:	48 8b 85 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rax
   22584:	81 c9 00 00 00 25    	or     $0x25000000,%ecx
   2258a:	0b 8d 68 ff ff ff    	or     0xffffffffffffff68(%rbp),%ecx
   22590:	48 83 c6 10          	add    $0x10,%rsi
   22594:	41 2a b7 c8 00 00 00 	sub    0xc8(%r15),%sil
   2259b:	8b 78 18             	mov    0x18(%rax),%edi
   2259e:	89 fa                	mov    %edi,%edx
   225a0:	48 c1 e2 04          	shl    $0x4,%rdx
   225a4:	48 89 d0             	mov    %rdx,%rax
   225a7:	49 03 00             	add    (%r8),%rax
   225aa:	48 01 d2             	add    %rdx,%rdx
   225ad:	49 03 50 20          	add    0x20(%r8),%rdx
   225b1:	44 88 28             	mov    %r13b,(%rax)
   225b4:	88 58 01             	mov    %bl,0x1(%rax)
   225b7:	66 44 89 70 02       	mov    %r14w,0x2(%rax)
   225bc:	44 88 60 04          	mov    %r12b,0x4(%rax)
   225c0:	40 88 70 05          	mov    %sil,0x5(%rax)
   225c4:	66 c7 40 06 00 00    	movw   $0x0,0x6(%rax)
   225ca:	8b 9d 6c ff ff ff    	mov    0xffffffffffffff6c(%rbp),%ebx
   225d0:	66 89 58 0e          	mov    %bx,0xe(%rax)
   225d4:	8a 9d 6f ff ff ff    	mov    0xffffffffffffff6f(%rbp),%bl
   225da:	89 48 08             	mov    %ecx,0x8(%rax)
   225dd:	88 58 0d             	mov    %bl,0xd(%rax)
   225e0:	48 8b 05 00 00 00 00 	mov    0(%rip),%rax        # 225e7 <e1000_tso+0xd73>
			225e3: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   225e7:	bb 01 00 00 00       	mov    $0x1,%ebx
   225ec:	66 89 7a 1a          	mov    %di,0x1a(%rdx)
   225f0:	ff c7                	inc    %edi
   225f2:	48 89 42 10          	mov    %rax,0x10(%rdx)
   225f6:	41 3b 78 14          	cmp    0x14(%r8),%edi
   225fa:	b8 00 00 00 00       	mov    $0x0,%eax
   225ff:	0f 44 f8             	cmove  %eax,%edi
   22602:	41 89 78 18          	mov    %edi,0x18(%r8)
   22606:	48 83 c4 78          	add    $0x78,%rsp
   2260a:	89 d8                	mov    %ebx,%eax
   2260c:	5b                   	pop    %rbx
   2260d:	41 5c                	pop    %r12
   2260f:	41 5d                	pop    %r13
   22611:	41 5e                	pop    %r14
   22613:	41 5f                	pop    %r15
   22615:	c9                   	leaveq 
   22616:	c3                   	retq   

0000000000022617 <skb_put>:
   22617:	55                   	push   %rbp
   22618:	48 89 e5             	mov    %rsp,%rbp
   2261b:	41 57                	push   %r15
   2261d:	49 89 ff             	mov    %rdi,%r15
   22620:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22623: R_X86_64_32S	.rodata.str1.1+0x2a17
   22627:	41 56                	push   %r14
   22629:	41 55                	push   %r13
   2262b:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   2262f:	41 54                	push   %r12
   22631:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   22635:	53                   	push   %rbx
   22636:	48 83 ec 58          	sub    $0x58,%rsp
   2263a:	89 75 8c             	mov    %esi,0xffffffffffffff8c(%rbp)
   2263d:	e8 00 00 00 00       	callq  22642 <skb_put+0x2b>
			2263e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22642:	8b 45 8c             	mov    0xffffffffffffff8c(%rbp),%eax
   22645:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22648: R_X86_64_32S	.rodata.str1.1+0x2a1f
   2264c:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   22653:	00 
   22654:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   2265b:	00 
   2265c:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   22663:	4c 89 7d b0          	mov    %r15,0xffffffffffffffb0(%rbp)
   22667:	89 45 c0             	mov    %eax,0xffffffffffffffc0(%rbp)
   2266a:	e8 00 00 00 00       	callq  2266f <skb_put+0x58>
			2266b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2266f:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   22673:	4c 89 e2             	mov    %r12,%rdx
   22676:	4c 89 ee             	mov    %r13,%rsi
   22679:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2267c: R_X86_64_32S	.rodata.str1.1+0x2a17
   22680:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   22687:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   2268e:	00 
   2268f:	e8 00 00 00 00       	callq  22694 <skb_put+0x7d>
			22690: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   22694:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   22698:	48 85 c0             	test   %rax,%rax
   2269b:	0f 84 c7 02 00 00    	je     22968 <skb_put+0x351>
   226a1:	8a 40 7d             	mov    0x7d(%rax),%al
   226a4:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   226a8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   226ae:	4c 89 e2             	mov    %r12,%rdx
   226b1:	4c 89 ee             	mov    %r13,%rsi
   226b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			226b7: R_X86_64_32S	.rodata.str1.1+0x2a17
   226bb:	48 89 d9             	mov    %rbx,%rcx
   226be:	83 e0 07             	and    $0x7,%eax
   226c1:	0f b6 c0             	movzbl %al,%eax
   226c4:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   226c7:	e8 00 00 00 00       	callq  226cc <skb_put+0xb5>
			226c8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   226cc:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   226d0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   226d6:	4c 89 e2             	mov    %r12,%rdx
   226d9:	4c 89 ee             	mov    %r13,%rsi
   226dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			226df: R_X86_64_32S	.rodata.str1.1+0x2a17
   226e3:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   226ea:	e8 00 00 00 00       	callq  226ef <skb_put+0xd8>
			226eb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   226ef:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   226f3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   226f9:	4c 89 e2             	mov    %r12,%rdx
   226fc:	4c 89 ee             	mov    %r13,%rsi
   226ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22702: R_X86_64_32S	.rodata.str1.1+0x2a17
   22706:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   2270d:	e8 00 00 00 00       	callq  22712 <skb_put+0xfb>
			2270e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22712:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   22716:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2271c:	48 89 d9             	mov    %rbx,%rcx
   2271f:	4c 89 e2             	mov    %r12,%rdx
   22722:	4c 89 ee             	mov    %r13,%rsi
   22725:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22728: R_X86_64_32S	.rodata.str1.1+0x2a17
   2272c:	8a 40 7c             	mov    0x7c(%rax),%al
   2272f:	c0 e8 02             	shr    $0x2,%al
   22732:	83 e0 03             	and    $0x3,%eax
   22735:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   22738:	e8 00 00 00 00       	callq  2273d <skb_put+0x126>
			22739: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2273d:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   22741:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22747:	4c 89 e2             	mov    %r12,%rdx
   2274a:	4c 89 ee             	mov    %r13,%rsi
   2274d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22750: R_X86_64_32S	.rodata.str1.1+0x2a17
   22754:	48 83 c1 6c          	add    $0x6c,%rcx
   22758:	e8 00 00 00 00       	callq  2275d <skb_put+0x146>
			22759: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2275d:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   22761:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   22767:	4c 89 e2             	mov    %r12,%rdx
   2276a:	4c 89 ee             	mov    %r13,%rsi
   2276d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22770: R_X86_64_32S	.rodata.str1.1+0x2a17
   22774:	48 81 c1 a4 00 00 00 	add    $0xa4,%rcx
   2277b:	e8 00 00 00 00       	callq  22780 <skb_put+0x169>
			2277c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22780:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   22784:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2278a:	48 89 d9             	mov    %rbx,%rcx
   2278d:	4c 89 e2             	mov    %r12,%rdx
   22790:	4c 89 ee             	mov    %r13,%rsi
   22793:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22796: R_X86_64_32S	.rodata.str1.1+0x2a17
   2279a:	8a 40 7c             	mov    0x7c(%rax),%al
   2279d:	d0 e8                	shr    %al
   2279f:	83 e0 01             	and    $0x1,%eax
   227a2:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   227a5:	e8 00 00 00 00       	callq  227aa <skb_put+0x193>
			227a6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   227aa:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   227ae:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   227b4:	4c 89 e2             	mov    %r12,%rdx
   227b7:	4c 89 ee             	mov    %r13,%rsi
   227ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			227bd: R_X86_64_32S	.rodata.str1.1+0x2a17
   227c1:	48 83 c1 76          	add    $0x76,%rcx
   227c5:	e8 00 00 00 00       	callq  227ca <skb_put+0x1b3>
			227c6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   227ca:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   227ce:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   227d4:	4c 89 e2             	mov    %r12,%rdx
   227d7:	4c 89 ee             	mov    %r13,%rsi
   227da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			227dd: R_X86_64_32S	.rodata.str1.1+0x2a17
   227e1:	48 83 c1 74          	add    $0x74,%rcx
   227e5:	e8 00 00 00 00       	callq  227ea <skb_put+0x1d3>
			227e6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   227ea:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   227ee:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   227f4:	4c 89 e2             	mov    %r12,%rdx
   227f7:	4c 89 ee             	mov    %r13,%rsi
   227fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			227fd: R_X86_64_32S	.rodata.str1.1+0x2a17
   22801:	48 83 c1 68          	add    $0x68,%rcx
   22805:	e8 00 00 00 00       	callq  2280a <skb_put+0x1f3>
			22806: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2280a:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   2280e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22814:	4c 89 e2             	mov    %r12,%rdx
   22817:	4c 89 ee             	mov    %r13,%rsi
   2281a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2281d: R_X86_64_32S	.rodata.str1.1+0x2a17
   22821:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   22828:	e8 00 00 00 00       	callq  2282d <skb_put+0x216>
			22829: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2282d:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   22831:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22837:	4c 89 e2             	mov    %r12,%rdx
   2283a:	4c 89 ee             	mov    %r13,%rsi
   2283d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22840: R_X86_64_32S	.rodata.str1.1+0x2a17
   22844:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   2284b:	e8 00 00 00 00       	callq  22850 <skb_put+0x239>
			2284c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22850:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   22854:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2285a:	4c 89 e2             	mov    %r12,%rdx
   2285d:	4c 89 ee             	mov    %r13,%rsi
   22860:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22863: R_X86_64_32S	.rodata.str1.1+0x2a17
   22867:	48 83 c1 7e          	add    $0x7e,%rcx
   2286b:	e8 00 00 00 00       	callq  22870 <skb_put+0x259>
			2286c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22870:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   22874:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2287a:	4c 89 e2             	mov    %r12,%rdx
   2287d:	4c 89 ee             	mov    %r13,%rsi
   22880:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22883: R_X86_64_32S	.rodata.str1.1+0x2a17
   22887:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   2288e:	e8 00 00 00 00       	callq  22893 <skb_put+0x27c>
			2288f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22893:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   22897:	4c 89 e2             	mov    %r12,%rdx
   2289a:	4c 89 ee             	mov    %r13,%rsi
   2289d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			228a0: R_X86_64_32S	.rodata.str1.1+0x2a17
   228a4:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   228ab:	e8 00 00 00 00       	callq  228b0 <skb_put+0x299>
			228ac: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   228b0:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   228b4:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   228bb:	00 
   228bc:	74 5d                	je     2291b <skb_put+0x304>
   228be:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   228c4:	31 db                	xor    %ebx,%ebx
   228c6:	e8 00 00 00 00       	callq  228cb <skb_put+0x2b4>
			228c7: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   228cb:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   228cf:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   228d5:	4c 89 e2             	mov    %r12,%rdx
   228d8:	4c 89 ee             	mov    %r13,%rsi
   228db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			228de: R_X86_64_32S	.rodata.str1.1+0x2a17
   228e2:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   228e5:	e8 00 00 00 00       	callq  228ea <skb_put+0x2d3>
			228e6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   228ea:	eb 2a                	jmp    22916 <skb_put+0x2ff>
   228ec:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   228f0:	48 63 cb             	movslq %ebx,%rcx
   228f3:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   228f7:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   228fb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22901:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22904: R_X86_64_32S	.rodata.str1.1+0x2a17
   22908:	ff c3                	inc    %ebx
   2290a:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   22911:	e8 00 00 00 00       	callq  22916 <skb_put+0x2ff>
			22912: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22916:	3b 5d cc             	cmp    0xffffffffffffffcc(%rbp),%ebx
   22919:	7c d1                	jl     228ec <skb_put+0x2d5>
   2291b:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   2291f:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   22923:	4c 8d 65 b8          	lea    0xffffffffffffffb8(%rbp),%r12
   22927:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2292a: R_X86_64_32S	.rodata.str1.1+0x2a17
   2292e:	48 89 da             	mov    %rbx,%rdx
   22931:	4c 89 e6             	mov    %r12,%rsi
   22934:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   2293b:	e8 00 00 00 00       	callq  22940 <skb_put+0x329>
			2293c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   22940:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   22944:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   2294b:	48 85 c9             	test   %rcx,%rcx
   2294e:	74 18                	je     22968 <skb_put+0x351>
   22950:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22956:	48 89 da             	mov    %rbx,%rdx
   22959:	4c 89 e6             	mov    %r12,%rsi
   2295c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2295f: R_X86_64_32S	.rodata.str1.1+0x2a17
   22963:	e8 00 00 00 00       	callq  22968 <skb_put+0x351>
			22964: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22968:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   2296c:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   22970:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   22974:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2297a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2297d: R_X86_64_32S	.rodata.str1.1+0x2a17
   22981:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   22985:	4c 89 f2             	mov    %r14,%rdx
   22988:	48 89 de             	mov    %rbx,%rsi
   2298b:	e8 00 00 00 00       	callq  22990 <skb_put+0x379>
			2298c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22990:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   22994:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   22998:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2299b: R_X86_64_32S	.rodata.str1.1+0x2a17
   2299f:	48 c7 45 90 43 06 00 	movq   $0x643,0xffffffffffffff90(%rbp)
   229a6:	00 
   229a7:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   229ab:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
   229ae:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   229b1:	e8 00 00 00 00       	callq  229b6 <skb_put+0x39f>
			229b2: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   229b6:	8b 45 8c             	mov    0xffffffffffffff8c(%rbp),%eax
   229b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			229bc: R_X86_64_32S	.rodata.str1.1+0x2a35
   229c0:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
   229c4:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   229c7:	e8 00 00 00 00       	callq  229cc <skb_put+0x3b5>
			229c8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   229cc:	4c 8b 65 a0          	mov    0xffffffffffffffa0(%rbp),%r12
   229d0:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   229d6:	48 89 d9             	mov    %rbx,%rcx
   229d9:	4c 89 ea             	mov    %r13,%rdx
   229dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			229df: R_X86_64_32S	.rodata.str1.1+0x2a17
   229e3:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   229ea:	4c 89 e6             	mov    %r12,%rsi
   229ed:	e8 00 00 00 00       	callq  229f2 <skb_put+0x3db>
			229ee: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   229f2:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
   229f7:	0f 84 72 02 00 00    	je     22c6f <skb_put+0x658>
   229fd:	4d 89 f0             	mov    %r14,%r8
   22a00:	b9 01 00 00 00       	mov    $0x1,%ecx
   22a05:	4c 89 ea             	mov    %r13,%rdx
   22a08:	4c 89 e6             	mov    %r12,%rsi
   22a0b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22a0e: R_X86_64_32S	.rodata.str1.1+0x2a17
   22a12:	e8 00 00 00 00       	callq  22a17 <skb_put+0x400>
			22a13: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22a17:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   22a1b:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   22a1e:	4c 89 e6             	mov    %r12,%rsi
   22a21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22a24: R_X86_64_32S	.rodata.str1.1+0x2a17
   22a28:	8a 41 7d             	mov    0x7d(%rcx),%al
   22a2b:	83 e2 07             	and    $0x7,%edx
   22a2e:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   22a31:	09 d0                	or     %edx,%eax
   22a33:	4c 89 ea             	mov    %r13,%rdx
   22a36:	88 41 7d             	mov    %al,0x7d(%rcx)
   22a39:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22a3d:	b9 04 00 00 00       	mov    $0x4,%ecx
   22a42:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   22a49:	e8 00 00 00 00       	callq  22a4e <skb_put+0x437>
			22a4a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22a4e:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22a52:	b9 04 00 00 00       	mov    $0x4,%ecx
   22a57:	4c 89 ea             	mov    %r13,%rdx
   22a5a:	4c 89 e6             	mov    %r12,%rsi
   22a5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22a60: R_X86_64_32S	.rodata.str1.1+0x2a17
   22a64:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   22a6b:	e8 00 00 00 00       	callq  22a70 <skb_put+0x459>
			22a6c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22a70:	4d 89 f0             	mov    %r14,%r8
   22a73:	b9 01 00 00 00       	mov    $0x1,%ecx
   22a78:	4c 89 ea             	mov    %r13,%rdx
   22a7b:	4c 89 e6             	mov    %r12,%rsi
   22a7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22a81: R_X86_64_32S	.rodata.str1.1+0x2a17
   22a85:	e8 00 00 00 00       	callq  22a8a <skb_put+0x473>
			22a86: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22a8a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   22a8e:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   22a91:	4c 89 e6             	mov    %r12,%rsi
   22a94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22a97: R_X86_64_32S	.rodata.str1.1+0x2a17
   22a9b:	8a 41 7c             	mov    0x7c(%rcx),%al
   22a9e:	83 e2 03             	and    $0x3,%edx
   22aa1:	c1 e2 02             	shl    $0x2,%edx
   22aa4:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   22aa7:	09 d0                	or     %edx,%eax
   22aa9:	4c 89 ea             	mov    %r13,%rdx
   22aac:	88 41 7c             	mov    %al,0x7c(%rcx)
   22aaf:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22ab3:	b9 04 00 00 00       	mov    $0x4,%ecx
   22ab8:	49 83 c0 6c          	add    $0x6c,%r8
   22abc:	e8 00 00 00 00       	callq  22ac1 <skb_put+0x4aa>
			22abd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22ac1:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22ac5:	b9 04 00 00 00       	mov    $0x4,%ecx
   22aca:	4c 89 ea             	mov    %r13,%rdx
   22acd:	4c 89 e6             	mov    %r12,%rsi
   22ad0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22ad3: R_X86_64_32S	.rodata.str1.1+0x2a17
   22ad7:	49 83 c0 74          	add    $0x74,%r8
   22adb:	e8 00 00 00 00       	callq  22ae0 <skb_put+0x4c9>
			22adc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22ae0:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22ae4:	b9 04 00 00 00       	mov    $0x4,%ecx
   22ae9:	4c 89 ea             	mov    %r13,%rdx
   22aec:	4c 89 e6             	mov    %r12,%rsi
   22aef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22af2: R_X86_64_32S	.rodata.str1.1+0x2a17
   22af6:	49 83 c0 68          	add    $0x68,%r8
   22afa:	e8 00 00 00 00       	callq  22aff <skb_put+0x4e8>
			22afb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22aff:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22b03:	b9 04 00 00 00       	mov    $0x4,%ecx
   22b08:	4c 89 ea             	mov    %r13,%rdx
   22b0b:	4c 89 e6             	mov    %r12,%rsi
   22b0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22b11: R_X86_64_32S	.rodata.str1.1+0x2a17
   22b15:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   22b1c:	e8 00 00 00 00       	callq  22b21 <skb_put+0x50a>
			22b1d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22b21:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22b25:	b9 04 00 00 00       	mov    $0x4,%ecx
   22b2a:	4c 89 ea             	mov    %r13,%rdx
   22b2d:	4c 89 e6             	mov    %r12,%rsi
   22b30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22b33: R_X86_64_32S	.rodata.str1.1+0x2a17
   22b37:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   22b3e:	e8 00 00 00 00       	callq  22b43 <skb_put+0x52c>
			22b3f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22b43:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22b47:	b9 02 00 00 00       	mov    $0x2,%ecx
   22b4c:	4c 89 ea             	mov    %r13,%rdx
   22b4f:	4c 89 e6             	mov    %r12,%rsi
   22b52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22b55: R_X86_64_32S	.rodata.str1.1+0x2a17
   22b59:	49 83 c0 7e          	add    $0x7e,%r8
   22b5d:	e8 00 00 00 00       	callq  22b62 <skb_put+0x54b>
			22b5e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22b62:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   22b66:	b9 04 00 00 00       	mov    $0x4,%ecx
   22b6b:	4c 89 ea             	mov    %r13,%rdx
   22b6e:	4c 89 e6             	mov    %r12,%rsi
   22b71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22b74: R_X86_64_32S	.rodata.str1.1+0x2a17
   22b78:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   22b7f:	e8 00 00 00 00       	callq  22b84 <skb_put+0x56d>
			22b80: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22b84:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   22b88:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22b8e:	4c 89 ea             	mov    %r13,%rdx
   22b91:	4c 89 e6             	mov    %r12,%rsi
   22b94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22b97: R_X86_64_32S	.rodata.str1.1+0x2a17
   22b9b:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   22ba2:	e8 00 00 00 00       	callq  22ba7 <skb_put+0x590>
			22ba3: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22ba7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   22bab:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   22bb2:	00 
   22bb3:	74 69                	je     22c1e <skb_put+0x607>
   22bb5:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   22bb9:	b9 04 00 00 00       	mov    $0x4,%ecx
   22bbe:	4c 89 ea             	mov    %r13,%rdx
   22bc1:	4c 89 e6             	mov    %r12,%rsi
   22bc4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22bc7: R_X86_64_32S	.rodata.str1.1+0x2a17
   22bcb:	31 db                	xor    %ebx,%ebx
   22bcd:	e8 00 00 00 00       	callq  22bd2 <skb_put+0x5bb>
			22bce: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22bd2:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   22bd6:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
   22bd9:	b9 01 00 00 00       	mov    $0x1,%ecx
   22bde:	ba 01 00 00 00       	mov    $0x1,%edx
   22be3:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   22bea:	e8 00 00 00 00       	callq  22bef <skb_put+0x5d8>
			22beb: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   22bef:	eb 28                	jmp    22c19 <skb_put+0x602>
   22bf1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   22bf5:	4c 63 c3             	movslq %ebx,%r8
   22bf8:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   22bfc:	b9 01 00 00 00       	mov    $0x1,%ecx
   22c01:	4c 89 e6             	mov    %r12,%rsi
   22c04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22c07: R_X86_64_32S	.rodata.str1.1+0x2a17
   22c0b:	ff c3                	inc    %ebx
   22c0d:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   22c14:	e8 00 00 00 00       	callq  22c19 <skb_put+0x602>
			22c15: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22c19:	3b 5d c0             	cmp    0xffffffffffffffc0(%rbp),%ebx
   22c1c:	7c d3                	jl     22bf1 <skb_put+0x5da>
   22c1e:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   22c22:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   22c26:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22c2c:	4c 89 e6             	mov    %r12,%rsi
   22c2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22c32: R_X86_64_32S	.rodata.str1.1+0x2a17
   22c36:	48 89 da             	mov    %rbx,%rdx
   22c39:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   22c40:	e8 00 00 00 00       	callq  22c45 <skb_put+0x62e>
			22c41: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22c45:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   22c49:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   22c50:	48 85 c0             	test   %rax,%rax
   22c53:	74 1a                	je     22c6f <skb_put+0x658>
   22c55:	49 89 c0             	mov    %rax,%r8
   22c58:	b9 01 00 00 00       	mov    $0x1,%ecx
   22c5d:	48 89 da             	mov    %rbx,%rdx
   22c60:	4c 89 e6             	mov    %r12,%rsi
   22c63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22c66: R_X86_64_32S	.rodata.str1.1+0x2a17
   22c6a:	e8 00 00 00 00       	callq  22c6f <skb_put+0x658>
			22c6b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22c6f:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   22c73:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   22c77:	b9 04 00 00 00       	mov    $0x4,%ecx
   22c7c:	4c 89 e6             	mov    %r12,%rsi
   22c7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22c82: R_X86_64_32S	.rodata.str1.1+0x2a17
   22c86:	48 89 da             	mov    %rbx,%rdx
   22c89:	e8 00 00 00 00       	callq  22c8e <skb_put+0x677>
			22c8a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22c8e:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   22c92:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22c98:	48 89 da             	mov    %rbx,%rdx
   22c9b:	4c 89 e6             	mov    %r12,%rsi
   22c9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22ca1: R_X86_64_32S	.rodata.str1.1+0x2a17
   22ca5:	e8 00 00 00 00       	callq  22caa <skb_put+0x693>
			22ca6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22caa:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   22cae:	48 85 c0             	test   %rax,%rax
   22cb1:	74 1a                	je     22ccd <skb_put+0x6b6>
   22cb3:	49 89 c0             	mov    %rax,%r8
   22cb6:	b9 01 00 00 00       	mov    $0x1,%ecx
   22cbb:	48 89 da             	mov    %rbx,%rdx
   22cbe:	4c 89 e6             	mov    %r12,%rsi
   22cc1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22cc4: R_X86_64_32S	.rodata.str1.1+0x2a17
   22cc8:	e8 00 00 00 00       	callq  22ccd <skb_put+0x6b6>
			22cc9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22ccd:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   22cd1:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   22cd5:	48 85 ff             	test   %rdi,%rdi
   22cd8:	74 05                	je     22cdf <skb_put+0x6c8>
   22cda:	e8 00 00 00 00       	callq  22cdf <skb_put+0x6c8>
			22cdb: R_X86_64_PC32	kfree+0xfffffffffffffffc
   22cdf:	48 83 c4 58          	add    $0x58,%rsp
   22ce3:	48 89 d8             	mov    %rbx,%rax
   22ce6:	5b                   	pop    %rbx
   22ce7:	41 5c                	pop    %r12
   22ce9:	41 5d                	pop    %r13
   22ceb:	41 5e                	pop    %r14
   22ced:	41 5f                	pop    %r15
   22cef:	c9                   	leaveq 
   22cf0:	c3                   	retq   

0000000000022cf1 <__alloc_skb>:
   22cf1:	55                   	push   %rbp
   22cf2:	48 89 e5             	mov    %rsp,%rbp
   22cf5:	41 57                	push   %r15
   22cf7:	4c 8d 7d bc          	lea    0xffffffffffffffbc(%rbp),%r15
   22cfb:	41 56                	push   %r14
   22cfd:	41 89 fe             	mov    %edi,%r14d
   22d00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22d03: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22d07:	41 55                	push   %r13
   22d09:	41 89 f5             	mov    %esi,%r13d
   22d0c:	41 54                	push   %r12
   22d0e:	41 89 d4             	mov    %edx,%r12d
   22d11:	53                   	push   %rbx
   22d12:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   22d16:	48 83 ec 58          	sub    $0x58,%rsp
   22d1a:	89 4d 8c             	mov    %ecx,0xffffffffffffff8c(%rbp)
   22d1d:	e8 00 00 00 00       	callq  22d22 <__alloc_skb+0x31>
			22d1e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22d22:	8b 45 8c             	mov    0xffffffffffffff8c(%rbp),%eax
   22d25:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22d28: R_X86_64_32S	.rodata.str1.1+0x2a57
   22d2c:	44 89 75 c8          	mov    %r14d,0xffffffffffffffc8(%rbp)
   22d30:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   22d37:	00 
   22d38:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   22d3f:	00 
   22d40:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   22d47:	44 89 6d c4          	mov    %r13d,0xffffffffffffffc4(%rbp)
   22d4b:	89 45 bc             	mov    %eax,0xffffffffffffffbc(%rbp)
   22d4e:	44 89 65 c0          	mov    %r12d,0xffffffffffffffc0(%rbp)
   22d52:	e8 00 00 00 00       	callq  22d57 <__alloc_skb+0x66>
			22d53: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22d57:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   22d5b:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   22d5f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22d65:	48 89 da             	mov    %rbx,%rdx
   22d68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22d6b: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22d6f:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   22d76:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   22d7d:	00 
   22d7e:	e8 00 00 00 00       	callq  22d83 <__alloc_skb+0x92>
			22d7f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22d83:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   22d87:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   22d8b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22d91:	48 89 da             	mov    %rbx,%rdx
   22d94:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22d97: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22d9b:	e8 00 00 00 00       	callq  22da0 <__alloc_skb+0xaf>
			22d9c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22da0:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   22da4:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   22da8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22dae:	48 89 da             	mov    %rbx,%rdx
   22db1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22db4: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22db8:	e8 00 00 00 00       	callq  22dbd <__alloc_skb+0xcc>
			22db9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22dbd:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   22dc1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   22dc7:	4c 89 f9             	mov    %r15,%rcx
   22dca:	48 89 da             	mov    %rbx,%rdx
   22dcd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22dd0: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22dd4:	e8 00 00 00 00       	callq  22dd9 <__alloc_skb+0xe8>
			22dd5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   22dd9:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   22ddd:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   22de1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22de4: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22de8:	48 c7 45 90 2c 04 00 	movq   $0x42c,0xffffffffffffff90(%rbp)
   22def:	00 
   22df0:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   22df4:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   22df7:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   22dfa:	e8 00 00 00 00       	callq  22dff <__alloc_skb+0x10e>
			22dfb: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   22dff:	8b 45 8c             	mov    0xffffffffffffff8c(%rbp),%eax
   22e02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22e05: R_X86_64_32S	.rodata.str1.1+0x2a71
   22e09:	44 89 75 c0          	mov    %r14d,0xffffffffffffffc0(%rbp)
   22e0d:	44 89 6d c4          	mov    %r13d,0xffffffffffffffc4(%rbp)
   22e11:	44 89 65 c8          	mov    %r12d,0xffffffffffffffc8(%rbp)
   22e15:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   22e18:	e8 00 00 00 00       	callq  22e1d <__alloc_skb+0x12c>
			22e19: R_X86_64_PC32	record_function+0xfffffffffffffffc
   22e1d:	4c 8b 75 a0          	mov    0xffffffffffffffa0(%rbp),%r14
   22e21:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   22e25:	b9 04 00 00 00       	mov    $0x4,%ecx
   22e2a:	4c 89 fa             	mov    %r15,%rdx
   22e2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22e30: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22e34:	c7 45 bc 00 00 00 00 	movl   $0x0,0xffffffffffffffbc(%rbp)
   22e3b:	4c 89 f6             	mov    %r14,%rsi
   22e3e:	e8 00 00 00 00       	callq  22e43 <__alloc_skb+0x152>
			22e3f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22e43:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   22e47:	b9 04 00 00 00       	mov    $0x4,%ecx
   22e4c:	4c 89 fa             	mov    %r15,%rdx
   22e4f:	4c 89 f6             	mov    %r14,%rsi
   22e52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22e55: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22e59:	e8 00 00 00 00       	callq  22e5e <__alloc_skb+0x16d>
			22e5a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22e5e:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   22e62:	b9 04 00 00 00       	mov    $0x4,%ecx
   22e67:	4c 89 fa             	mov    %r15,%rdx
   22e6a:	4c 89 f6             	mov    %r14,%rsi
   22e6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22e70: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22e74:	e8 00 00 00 00       	callq  22e79 <__alloc_skb+0x188>
			22e75: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22e79:	49 89 d8             	mov    %rbx,%r8
   22e7c:	b9 04 00 00 00       	mov    $0x4,%ecx
   22e81:	4c 89 fa             	mov    %r15,%rdx
   22e84:	4c 89 f6             	mov    %r14,%rsi
   22e87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22e8a: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22e8e:	e8 00 00 00 00       	callq  22e93 <__alloc_skb+0x1a2>
			22e8f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22e93:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   22e97:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   22e9d:	4c 89 fa             	mov    %r15,%rdx
   22ea0:	4c 89 f6             	mov    %r14,%rsi
   22ea3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22ea6: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22eaa:	e8 00 00 00 00       	callq  22eaf <__alloc_skb+0x1be>
			22eab: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22eaf:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   22eb3:	48 85 c0             	test   %rax,%rax
   22eb6:	0f 84 4d 01 00 00    	je     23009 <__alloc_skb+0x318>
   22ebc:	4c 8d 80 b8 00 00 00 	lea    0xb8(%rax),%r8
   22ec3:	b9 04 00 00 00       	mov    $0x4,%ecx
   22ec8:	4c 89 fa             	mov    %r15,%rdx
   22ecb:	4c 89 f6             	mov    %r14,%rsi
   22ece:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22ed1: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22ed5:	e8 00 00 00 00       	callq  22eda <__alloc_skb+0x1e9>
			22ed6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22eda:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   22ede:	b9 04 00 00 00       	mov    $0x4,%ecx
   22ee3:	4c 89 fa             	mov    %r15,%rdx
   22ee6:	4c 89 f6             	mov    %r14,%rsi
   22ee9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22eec: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22ef0:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   22ef7:	e8 00 00 00 00       	callq  22efc <__alloc_skb+0x20b>
			22ef8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22efc:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   22f00:	b9 04 00 00 00       	mov    $0x4,%ecx
   22f05:	4c 89 fa             	mov    %r15,%rdx
   22f08:	4c 89 f6             	mov    %r14,%rsi
   22f0b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22f0e: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22f12:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   22f19:	e8 00 00 00 00       	callq  22f1e <__alloc_skb+0x22d>
			22f1a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22f1e:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   22f22:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22f28:	4c 89 fa             	mov    %r15,%rdx
   22f2b:	4c 89 f6             	mov    %r14,%rsi
   22f2e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22f31: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22f35:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   22f3c:	e8 00 00 00 00       	callq  22f41 <__alloc_skb+0x250>
			22f3d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22f41:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   22f45:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   22f4c:	00 
   22f4d:	74 69                	je     22fb8 <__alloc_skb+0x2c7>
   22f4f:	4c 8d 45 b0          	lea    0xffffffffffffffb0(%rbp),%r8
   22f53:	b9 04 00 00 00       	mov    $0x4,%ecx
   22f58:	4c 89 fa             	mov    %r15,%rdx
   22f5b:	4c 89 f6             	mov    %r14,%rsi
   22f5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22f61: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22f65:	31 db                	xor    %ebx,%ebx
   22f67:	e8 00 00 00 00       	callq  22f6c <__alloc_skb+0x27b>
			22f68: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22f6c:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
   22f70:	8b 75 b0             	mov    0xffffffffffffffb0(%rbp),%esi
   22f73:	b9 01 00 00 00       	mov    $0x1,%ecx
   22f78:	ba 01 00 00 00       	mov    $0x1,%edx
   22f7d:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   22f84:	e8 00 00 00 00       	callq  22f89 <__alloc_skb+0x298>
			22f85: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   22f89:	eb 28                	jmp    22fb3 <__alloc_skb+0x2c2>
   22f8b:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   22f8f:	4c 63 c3             	movslq %ebx,%r8
   22f92:	48 8d 55 bc          	lea    0xffffffffffffffbc(%rbp),%rdx
   22f96:	b9 01 00 00 00       	mov    $0x1,%ecx
   22f9b:	4c 89 f6             	mov    %r14,%rsi
   22f9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22fa1: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22fa5:	ff c3                	inc    %ebx
   22fa7:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   22fae:	e8 00 00 00 00       	callq  22fb3 <__alloc_skb+0x2c2>
			22faf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   22fb3:	3b 5d b0             	cmp    0xffffffffffffffb0(%rbp),%ebx
   22fb6:	7c d3                	jl     22f8b <__alloc_skb+0x29a>
   22fb8:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   22fbc:	48 8d 5d bc          	lea    0xffffffffffffffbc(%rbp),%rbx
   22fc0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   22fc6:	4c 89 f6             	mov    %r14,%rsi
   22fc9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			22fcc: R_X86_64_32S	.rodata.str1.1+0x2a4b
   22fd0:	48 89 da             	mov    %rbx,%rdx
   22fd3:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   22fda:	e8 00 00 00 00       	callq  22fdf <__alloc_skb+0x2ee>
			22fdb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   22fdf:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   22fe3:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   22fea:	48 85 c0             	test   %rax,%rax
   22fed:	74 1a                	je     23009 <__alloc_skb+0x318>
   22fef:	49 89 c0             	mov    %rax,%r8
   22ff2:	b9 01 00 00 00       	mov    $0x1,%ecx
   22ff7:	48 89 da             	mov    %rbx,%rdx
   22ffa:	4c 89 f6             	mov    %r14,%rsi
   22ffd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23000: R_X86_64_32S	.rodata.str1.1+0x2a4b
   23004:	e8 00 00 00 00       	callq  23009 <__alloc_skb+0x318>
			23005: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   23009:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   2300d:	48 8b 5d a8          	mov    0xffffffffffffffa8(%rbp),%rbx
   23011:	48 85 ff             	test   %rdi,%rdi
   23014:	74 05                	je     2301b <__alloc_skb+0x32a>
   23016:	e8 00 00 00 00       	callq  2301b <__alloc_skb+0x32a>
			23017: R_X86_64_PC32	kfree+0xfffffffffffffffc
   2301b:	48 83 c4 58          	add    $0x58,%rsp
   2301f:	48 89 d8             	mov    %rbx,%rax
   23022:	5b                   	pop    %rbx
   23023:	41 5c                	pop    %r12
   23025:	41 5d                	pop    %r13
   23027:	41 5e                	pop    %r14
   23029:	41 5f                	pop    %r15
   2302b:	c9                   	leaveq 
   2302c:	c3                   	retq   

000000000002302d <e1000_rx_checksum>:
   2302d:	55                   	push   %rbp
   2302e:	48 89 e5             	mov    %rsp,%rbp
   23031:	41 56                	push   %r14
   23033:	41 89 d6             	mov    %edx,%r14d
   23036:	41 55                	push   %r13
   23038:	49 89 fd             	mov    %rdi,%r13
   2303b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2303e: R_X86_64_32S	.rodata.str1.1+0x2acf
   23042:	41 54                	push   %r12
   23044:	49 89 cc             	mov    %rcx,%r12
   23047:	53                   	push   %rbx
   23048:	89 f3                	mov    %esi,%ebx
   2304a:	e8 00 00 00 00       	callq  2304f <e1000_rx_checksum+0x22>
			2304b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2304f:	41 80 64 24 7c f3    	andb   $0xf3,0x7c(%r12)
   23055:	41 8b 95 c8 03 00 00 	mov    0x3c8(%r13),%edx
   2305c:	83 fa 02             	cmp    $0x2,%edx
   2305f:	0f 86 82 00 00 00    	jbe    230e7 <e1000_rx_checksum+0xba>
   23065:	0f b7 c3             	movzwl %bx,%eax
   23068:	a8 04                	test   $0x4,%al
   2306a:	75 7b                	jne    230e7 <e1000_rx_checksum+0xba>
   2306c:	81 e3 00 00 00 20    	and    $0x20000000,%ebx
   23072:	74 09                	je     2307d <e1000_rx_checksum+0x50>
   23074:	49 ff 85 b8 02 00 00 	incq   0x2b8(%r13)
   2307b:	eb 6a                	jmp    230e7 <e1000_rx_checksum+0xba>
   2307d:	83 fa 0d             	cmp    $0xd,%edx
   23080:	77 04                	ja     23086 <e1000_rx_checksum+0x59>
   23082:	a8 20                	test   $0x20,%al
   23084:	eb 02                	jmp    23088 <e1000_rx_checksum+0x5b>
   23086:	a8 30                	test   $0x30,%al
   23088:	74 5d                	je     230e7 <e1000_rx_checksum+0xba>
   2308a:	a8 20                	test   $0x20,%al
   2308c:	74 0d                	je     2309b <e1000_rx_checksum+0x6e>
   2308e:	41 8a 44 24 7c       	mov    0x7c(%r12),%al
   23093:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   23096:	83 c8 04             	or     $0x4,%eax
   23099:	eb 40                	jmp    230db <e1000_rx_checksum+0xae>
   2309b:	83 fa 0d             	cmp    $0xd,%edx
   2309e:	76 40                	jbe    230e0 <e1000_rx_checksum+0xb3>
   230a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			230a3: R_X86_64_32S	.rodata.str1.1+0x2ae1
   230a7:	41 0f b7 de          	movzwl %r14w,%ebx
   230ab:	e8 00 00 00 00       	callq  230b0 <e1000_rx_checksum+0x83>
			230ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
   230b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			230b3: R_X86_64_32S	.rodata.str1.1+0x2aeb
   230b7:	e8 00 00 00 00       	callq  230bc <e1000_rx_checksum+0x8f>
			230b8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   230bc:	89 d8                	mov    %ebx,%eax
   230be:	c1 e3 08             	shl    $0x8,%ebx
   230c1:	c1 e8 08             	shr    $0x8,%eax
   230c4:	09 c3                	or     %eax,%ebx
   230c6:	41 8a 44 24 7c       	mov    0x7c(%r12),%al
   230cb:	f7 d3                	not    %ebx
   230cd:	0f b7 db             	movzwl %bx,%ebx
   230d0:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   230d3:	41 89 5c 24 74       	mov    %ebx,0x74(%r12)
   230d8:	83 c8 08             	or     $0x8,%eax
   230db:	41 88 44 24 7c       	mov    %al,0x7c(%r12)
   230e0:	49 ff 85 c0 02 00 00 	incq   0x2c0(%r13)
   230e7:	5b                   	pop    %rbx
   230e8:	41 5c                	pop    %r12
   230ea:	41 5d                	pop    %r13
   230ec:	41 5e                	pop    %r14
   230ee:	c9                   	leaveq 
   230ef:	c3                   	retq   

00000000000230f0 <e1000_intr>:
   230f0:	55                   	push   %rbp
   230f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			230f4: R_X86_64_32S	.rodata.str1.1+0x2af7
   230f8:	48 89 e5             	mov    %rsp,%rbp
   230fb:	41 56                	push   %r14
   230fd:	41 55                	push   %r13
   230ff:	41 54                	push   %r12
   23101:	49 89 f4             	mov    %rsi,%r12
   23104:	4d 8d ac 24 00 08 00 	lea    0x800(%r12),%r13
   2310b:	00 
   2310c:	4d 8d b4 24 b8 0b 00 	lea    0xbb8(%r12),%r14
   23113:	00 
   23114:	53                   	push   %rbx
   23115:	e8 00 00 00 00       	callq  2311a <e1000_intr+0x2a>
			23116: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2311a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2311d: R_X86_64_32S	.rodata.str1.1+0x1be
   23121:	e8 00 00 00 00       	callq  23126 <e1000_intr+0x36>
			23122: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23126:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23129: R_X86_64_32S	.rodata.str1.1+0xae
   2312d:	49 8b 9c 24 b8 0b 00 	mov    0xbb8(%r12),%rbx
   23134:	00 
   23135:	e8 00 00 00 00       	callq  2313a <e1000_intr+0x4a>
			23136: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2313a:	8b 9b c0 00 00 00    	mov    0xc0(%rbx),%ebx
   23140:	85 db                	test   %ebx,%ebx
   23142:	0f 84 9e 01 00 00    	je     232e6 <e1000_intr+0x1f6>
   23148:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2314b: R_X86_64_32S	.rodata.str1.1+0x15d4
   2314f:	e8 00 00 00 00       	callq  23154 <e1000_intr+0x64>
			23150: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23154:	41 f6 84 24 c8 0f 00 	testb  $0x2,0xfc8(%r12)
   2315b:	00 02 
   2315d:	0f 85 83 01 00 00    	jne    232e6 <e1000_intr+0x1f6>
   23163:	41 83 7e 10 0d       	cmpl   $0xd,0x10(%r14)
   23168:	76 08                	jbe    23172 <e1000_intr+0x82>
   2316a:	85 db                	test   %ebx,%ebx
   2316c:	0f 89 74 01 00 00    	jns    232e6 <e1000_intr+0x1f6>
   23172:	80 e3 0c             	and    $0xc,%bl
   23175:	0f 84 89 00 00 00    	je     23204 <e1000_intr+0x114>
   2317b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2317e: R_X86_64_32S	.rodata.str1.1+0x2b02
   23182:	41 c6 86 0c 01 00 00 	movb   $0x1,0x10c(%r14)
   23189:	01 
   2318a:	e8 00 00 00 00       	callq  2318f <e1000_intr+0x9f>
			2318b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2318f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23192: R_X86_64_32S	.rodata.str1.1+0x15d4
   23196:	e8 00 00 00 00       	callq  2319b <e1000_intr+0xab>
			23197: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2319b:	41 f6 44 24 48 04    	testb  $0x4,0x48(%r12)
   231a1:	75 38                	jne    231db <e1000_intr+0xeb>
   231a3:	e9 42 01 00 00       	jmpq   232ea <e1000_intr+0x1fa>
   231a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			231ab: R_X86_64_32S	.rodata.str1.1+0xae
   231af:	49 8b 1e             	mov    (%r14),%rbx
   231b2:	e8 00 00 00 00       	callq  231b7 <e1000_intr+0xc7>
			231b3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   231b7:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   231be:	49 8b 1e             	mov    (%r14),%rbx
   231c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			231c4: R_X86_64_32S	.rodata.str1.1+0xb4
   231c8:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
   231cc:	e8 00 00 00 00       	callq  231d1 <e1000_intr+0xe1>
			231cd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   231d1:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   231d8:	44 89 23             	mov    %r12d,(%rbx)
   231db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			231de: R_X86_64_32S	.rodata.str1.1+0x15d4
   231e2:	e8 00 00 00 00       	callq  231e7 <e1000_intr+0xf7>
			231e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   231e7:	41 f6 85 c8 07 00 00 	testb  $0x4,0x7c8(%r13)
   231ee:	04 
   231ef:	75 13                	jne    23204 <e1000_intr+0x114>
   231f1:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 231f8 <e1000_intr+0x108>
			231f4: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   231f8:	49 8d 7d 30          	lea    0x30(%r13),%rdi
   231fc:	48 ff c6             	inc    %rsi
   231ff:	e8 6f 43 fe ff       	callq  7573 <mod_timer>
   23204:	41 83 7e 10 0d       	cmpl   $0xd,0x10(%r14)
   23209:	77 2d                	ja     23238 <e1000_intr+0x148>
   2320b:	49 8b 1e             	mov    (%r14),%rbx
   2320e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23211: R_X86_64_32S	.rodata.str1.1+0xb4
   23215:	e8 00 00 00 00       	callq  2321a <e1000_intr+0x12a>
			23216: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2321a:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   2321d:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
   23224:	89 03                	mov    %eax,(%rbx)
   23226:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23229: R_X86_64_32S	.rodata.str1.1+0xae
   2322d:	49 8b 1e             	mov    (%r14),%rbx
   23230:	e8 00 00 00 00       	callq  23235 <e1000_intr+0x145>
			23231: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23235:	8b 43 08             	mov    0x8(%rbx),%eax
   23238:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2323b: R_X86_64_32S	.rodata.str1.1+0x2b13
   2323f:	e8 00 00 00 00       	callq  23244 <e1000_intr+0x154>
			23240: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23244:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23247: R_X86_64_32S	.rodata.str1.1+0x2b2a
   2324b:	e8 00 00 00 00       	callq  23250 <e1000_intr+0x160>
			2324c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23250:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23253: R_X86_64_32S	.rodata.str1.1+0x2b3d
   23257:	e8 00 00 00 00       	callq  2325c <e1000_intr+0x16c>
			23258: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2325c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2325f: R_X86_64_32S	.rodata.str1.1+0x15d4
   23263:	e8 00 00 00 00       	callq  23268 <e1000_intr+0x178>
			23264: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23268:	41 f6 85 38 02 00 00 	testb  $0x2,0x238(%r13)
   2326f:	02 
   23270:	75 65                	jne    232d7 <e1000_intr+0x1e7>
   23272:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23275: R_X86_64_32S	.rodata.str1.1+0x2b52
   23279:	e8 00 00 00 00       	callq  2327e <e1000_intr+0x18e>
			2327a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2327e:	f0 41 0f ba ad 38 02 	lock btsl $0x0,0x238(%r13)
   23285:	00 00 00 
   23288:	19 c0                	sbb    %eax,%eax
   2328a:	85 c0                	test   %eax,%eax
   2328c:	75 49                	jne    232d7 <e1000_intr+0x1e7>
   2328e:	49 8d 9d 28 02 00 00 	lea    0x228(%r13),%rbx
   23295:	41 c7 85 18 01 00 00 	movl   $0x0,0x118(%r13)
   2329c:	00 00 00 00 
   232a0:	41 c7 85 1c 01 00 00 	movl   $0x0,0x11c(%r13)
   232a7:	00 00 00 00 
   232ab:	41 c7 85 20 01 00 00 	movl   $0x0,0x120(%r13)
   232b2:	00 00 00 00 
   232b6:	41 c7 85 24 01 00 00 	movl   $0x0,0x124(%r13)
   232bd:	00 00 00 00 
   232c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			232c4: R_X86_64_32S	.rodata.str1.1+0x2b63
   232c8:	e8 00 00 00 00       	callq  232cd <e1000_intr+0x1dd>
			232c9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   232cd:	48 89 df             	mov    %rbx,%rdi
   232d0:	e8 eb e1 fe ff       	callq  114c0 <__napi_schedule>
   232d5:	eb 08                	jmp    232df <e1000_intr+0x1ef>
   232d7:	4c 89 ef             	mov    %r13,%rdi
   232da:	e8 ba df fd ff       	callq  1299 <e1000_irq_enable>
   232df:	b8 01 00 00 00       	mov    $0x1,%eax
   232e4:	eb 14                	jmp    232fa <e1000_intr+0x20a>
   232e6:	31 c0                	xor    %eax,%eax
   232e8:	eb 10                	jmp    232fa <e1000_intr+0x20a>
   232ea:	41 83 7e 10 11       	cmpl   $0x11,0x10(%r14)
   232ef:	0f 85 e6 fe ff ff    	jne    231db <e1000_intr+0xeb>
   232f5:	e9 ae fe ff ff       	jmpq   231a8 <e1000_intr+0xb8>
   232fa:	5b                   	pop    %rbx
   232fb:	41 5c                	pop    %r12
   232fd:	41 5d                	pop    %r13
   232ff:	41 5e                	pop    %r14
   23301:	c9                   	leaveq 
   23302:	c3                   	retq   

0000000000023303 <e1000_maybe_stop_tx>:
   23303:	55                   	push   %rbp
   23304:	48 89 e5             	mov    %rsp,%rbp
   23307:	41 57                	push   %r15
   23309:	41 89 d7             	mov    %edx,%r15d
   2330c:	41 56                	push   %r14
   2330e:	49 89 fe             	mov    %rdi,%r14
   23311:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23314: R_X86_64_32S	.rodata.str1.1+0x2b77
   23318:	41 55                	push   %r13
   2331a:	41 54                	push   %r12
   2331c:	53                   	push   %rbx
   2331d:	48 89 f3             	mov    %rsi,%rbx
   23320:	48 83 ec 08          	sub    $0x8,%rsp
   23324:	e8 00 00 00 00       	callq  23329 <e1000_maybe_stop_tx+0x26>
			23325: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23329:	8b 43 18             	mov    0x18(%rbx),%eax
   2332c:	31 d2                	xor    %edx,%edx
   2332e:	39 43 1c             	cmp    %eax,0x1c(%rbx)
   23331:	77 03                	ja     23336 <e1000_maybe_stop_tx+0x33>
   23333:	8b 53 14             	mov    0x14(%rbx),%edx
   23336:	8b 43 1c             	mov    0x1c(%rbx),%eax
   23339:	ff c8                	dec    %eax
   2333b:	2b 43 18             	sub    0x18(%rbx),%eax
   2333e:	01 d0                	add    %edx,%eax
   23340:	31 d2                	xor    %edx,%edx
   23342:	44 39 f8             	cmp    %r15d,%eax
   23345:	0f 83 d7 00 00 00    	jae    23422 <e1000_maybe_stop_tx+0x11f>
   2334b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2334e: R_X86_64_32S	.rodata.str1.1+0x2b8b
   23352:	4d 8d ae 00 08 00 00 	lea    0x800(%r14),%r13
   23359:	e8 00 00 00 00       	callq  2335e <e1000_maybe_stop_tx+0x5b>
			2335a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2335e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23361: R_X86_64_32S	.rodata.str1.1+0x1be
   23365:	e8 00 00 00 00       	callq  2336a <e1000_maybe_stop_tx+0x67>
			23366: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2336a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2336d: R_X86_64_32S	.rodata.str1.1+0x2ba1
   23371:	4d 8b a5 b0 01 00 00 	mov    0x1b0(%r13),%r12
   23378:	e8 00 00 00 00       	callq  2337d <e1000_maybe_stop_tx+0x7a>
			23379: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2337d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23380: R_X86_64_32S	.rodata.str1.1+0x2bb2
   23384:	e8 00 00 00 00       	callq  23389 <e1000_maybe_stop_tx+0x86>
			23385: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23389:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2338c: R_X86_64_32S	.rodata.str1.1+0x2bc6
   23390:	49 8b 9e 00 03 00 00 	mov    0x300(%r14),%rbx
   23397:	e8 00 00 00 00       	callq  2339c <e1000_maybe_stop_tx+0x99>
			23398: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2339c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2339f: R_X86_64_32S	.rodata.str1.1+0x2ac7
   233a3:	e8 00 00 00 00       	callq  233a8 <e1000_maybe_stop_tx+0xa5>
			233a4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   233a8:	f0 0f ba 6b 10 00    	lock btsl $0x0,0x10(%rbx)
   233ae:	0f ae f0             	mfence 
   233b1:	31 d2                	xor    %edx,%edx
   233b3:	41 8b 44 24 18       	mov    0x18(%r12),%eax
   233b8:	41 39 44 24 1c       	cmp    %eax,0x1c(%r12)
   233bd:	77 05                	ja     233c4 <e1000_maybe_stop_tx+0xc1>
   233bf:	41 8b 54 24 14       	mov    0x14(%r12),%edx
   233c4:	41 8b 44 24 1c       	mov    0x1c(%r12),%eax
   233c9:	ff c8                	dec    %eax
   233cb:	41 2b 44 24 18       	sub    0x18(%r12),%eax
   233d0:	01 d0                	add    %edx,%eax
   233d2:	ba f0 ff ff ff       	mov    $0xfffffff0,%edx
   233d7:	44 39 f8             	cmp    %r15d,%eax
   233da:	72 46                	jb     23422 <e1000_maybe_stop_tx+0x11f>
   233dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			233df: R_X86_64_32S	.rodata.str1.1+0x2bda
   233e3:	e8 00 00 00 00       	callq  233e8 <e1000_maybe_stop_tx+0xe5>
			233e4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   233e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			233eb: R_X86_64_32S	.rodata.str1.1+0x2bb2
   233ef:	e8 00 00 00 00       	callq  233f4 <e1000_maybe_stop_tx+0xf1>
			233f0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   233f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			233f7: R_X86_64_32S	.rodata.str1.1+0x2bec
   233fb:	49 8b 9e 00 03 00 00 	mov    0x300(%r14),%rbx
   23402:	e8 00 00 00 00       	callq  23407 <e1000_maybe_stop_tx+0x104>
			23403: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23407:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2340a: R_X86_64_32S	.rodata.str1.1+0x2c01
   2340e:	e8 00 00 00 00       	callq  23413 <e1000_maybe_stop_tx+0x110>
			2340f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23413:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   23419:	41 ff 85 b8 01 00 00 	incl   0x1b8(%r13)
   23420:	31 d2                	xor    %edx,%edx
   23422:	41 59                	pop    %r9
   23424:	5b                   	pop    %rbx
   23425:	41 5c                	pop    %r12
   23427:	41 5d                	pop    %r13
   23429:	41 5e                	pop    %r14
   2342b:	41 5f                	pop    %r15
   2342d:	c9                   	leaveq 
   2342e:	89 d0                	mov    %edx,%eax
   23430:	c3                   	retq   

0000000000023431 <e1000_tx_csum>:
   23431:	55                   	push   %rbp
   23432:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23435: R_X86_64_32S	.rodata.str1.1+0x2c0b
   23439:	48 89 e5             	mov    %rsp,%rbp
   2343c:	41 55                	push   %r13
   2343e:	49 89 f5             	mov    %rsi,%r13
   23441:	41 54                	push   %r12
   23443:	53                   	push   %rbx
   23444:	48 89 d3             	mov    %rdx,%rbx
   23447:	48 83 ec 28          	sub    $0x28,%rsp
   2344b:	e8 00 00 00 00       	callq  23450 <e1000_tx_csum+0x1f>
			2344c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23450:	8a 43 7c             	mov    0x7c(%rbx),%al
   23453:	31 d2                	xor    %edx,%edx
   23455:	83 e0 0c             	and    $0xc,%eax
   23458:	3c 0c                	cmp    $0xc,%al
   2345a:	0f 85 c4 01 00 00    	jne    23624 <e1000_tx_csum+0x1f3>
   23460:	66 8b 43 7e          	mov    0x7e(%rbx),%ax
   23464:	66 83 f8 08          	cmp    $0x8,%ax
   23468:	74 08                	je     23472 <e1000_tx_csum+0x41>
   2346a:	66 3d 86 dd          	cmp    $0xdd86,%ax
   2346e:	75 63                	jne    234d3 <e1000_tx_csum+0xa2>
   23470:	eb 2c                	jmp    2349e <e1000_tx_csum+0x6d>
   23472:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23475: R_X86_64_32S	.rodata.str1.1+0x2966
   23479:	e8 00 00 00 00       	callq  2347e <e1000_tx_csum+0x4d>
			2347a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2347e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23481: R_X86_64_32S	.rodata.str1.1+0x296d
   23485:	e8 00 00 00 00       	callq  2348a <e1000_tx_csum+0x59>
			23486: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2348a:	8b 93 ac 00 00 00    	mov    0xac(%rbx),%edx
   23490:	48 8b 83 c0 00 00 00 	mov    0xc0(%rbx),%rax
   23497:	80 7c 10 09 06       	cmpb   $0x6,0x9(%rax,%rdx,1)
   2349c:	eb 2a                	jmp    234c8 <e1000_tx_csum+0x97>
   2349e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			234a1: R_X86_64_32S	.rodata.str1.1+0x29af
   234a5:	e8 00 00 00 00       	callq  234aa <e1000_tx_csum+0x79>
			234a6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   234aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			234ad: R_X86_64_32S	.rodata.str1.1+0x296d
   234b1:	e8 00 00 00 00       	callq  234b6 <e1000_tx_csum+0x85>
			234b2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   234b6:	8b 93 ac 00 00 00    	mov    0xac(%rbx),%edx
   234bc:	48 8b 83 c0 00 00 00 	mov    0xc0(%rbx),%rax
   234c3:	80 7c 10 06 06       	cmpb   $0x6,0x6(%rax,%rdx,1)
   234c8:	0f 85 c6 00 00 00    	jne    23594 <e1000_tx_csum+0x163>
   234ce:	e9 b9 00 00 00       	jmpq   2358c <e1000_tx_csum+0x15b>
   234d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			234d6: R_X86_64_32S	.rodata.str1.1+0x2c19
   234da:	e8 00 00 00 00       	callq  234df <e1000_tx_csum+0xae>
			234db: R_X86_64_PC32	record_function+0xfffffffffffffffc
   234df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			234e2: R_X86_64_32S	.rodata.str1.1+0x2c27
   234e6:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   234ed:	00 
   234ee:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
   234f5:	00 
   234f6:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   234fd:	e8 00 00 00 00       	callq  23502 <e1000_tx_csum+0xd1>
			234fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23502:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
   23506:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23509: R_X86_64_32S	.rodata.str1.1+0x2c19
   2350d:	48 c7 45 c0 dc 05 00 	movq   $0x5dc,0xffffffffffffffc0(%rbp)
   23514:	00 
   23515:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
   2351c:	00 
   2351d:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   23524:	e8 00 00 00 00       	callq  23529 <e1000_tx_csum+0xf8>
			23525: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   23529:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2352c: R_X86_64_32S	.rodata.str1.1+0x2c43
   23530:	e8 00 00 00 00       	callq  23535 <e1000_tx_csum+0x104>
			23531: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23535:	48 8b 75 d0          	mov    0xffffffffffffffd0(%rbp),%rsi
   23539:	48 8d 55 d8          	lea    0xffffffffffffffd8(%rbp),%rdx
   2353d:	4c 8d 45 dc          	lea    0xffffffffffffffdc(%rbp),%r8
   23541:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23544: R_X86_64_32S	.rodata.str1.1+0x2c19
   23548:	b9 04 00 00 00       	mov    $0x4,%ecx
   2354d:	c7 45 d8 00 00 00 00 	movl   $0x0,0xffffffffffffffd8(%rbp)
   23554:	e8 00 00 00 00       	callq  23559 <e1000_tx_csum+0x128>
			23555: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   23559:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
   2355d:	44 8b 65 dc          	mov    0xffffffffffffffdc(%rbp),%r12d
   23561:	48 85 ff             	test   %rdi,%rdi
   23564:	74 0d                	je     23573 <e1000_tx_csum+0x142>
   23566:	e8 00 00 00 00       	callq  2356b <e1000_tx_csum+0x13a>
			23567: R_X86_64_PC32	kfree+0xfffffffffffffffc
   2356b:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
   23572:	00 
   23573:	45 85 e4             	test   %r12d,%r12d
   23576:	74 1c                	je     23594 <e1000_tx_csum+0x163>
   23578:	0f b7 73 7e          	movzwl 0x7e(%rbx),%esi
   2357c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2357f: R_X86_64_32S	str_930432364
   23583:	31 c0                	xor    %eax,%eax
   23585:	e8 00 00 00 00       	callq  2358a <e1000_tx_csum+0x159>
			23586: R_X86_64_PC32	printk+0xfffffffffffffffc
   2358a:	eb 08                	jmp    23594 <e1000_tx_csum+0x163>
   2358c:	41 bc 00 00 00 21    	mov    $0x21000000,%r12d
   23592:	eb 06                	jmp    2359a <e1000_tx_csum+0x169>
   23594:	41 bc 00 00 00 20    	mov    $0x20000000,%r12d
   2359a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2359d: R_X86_64_32S	.rodata.str1.1+0x2929
   235a1:	e8 00 00 00 00       	callq  235a6 <e1000_tx_csum+0x175>
			235a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   235a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			235a9: R_X86_64_32S	.rodata.str1.1+0x293e
   235ad:	e8 00 00 00 00       	callq  235b2 <e1000_tx_csum+0x181>
			235ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
   235b2:	41 8b 4d 18          	mov    0x18(%r13),%ecx
   235b6:	8b 93 a8 00 00 00    	mov    0xa8(%rbx),%edx
   235bc:	48 03 93 c0 00 00 00 	add    0xc0(%rbx),%rdx
   235c3:	2b 93 c8 00 00 00    	sub    0xc8(%rbx),%edx
   235c9:	89 c8                	mov    %ecx,%eax
   235cb:	48 89 c6             	mov    %rax,%rsi
   235ce:	48 c1 e0 04          	shl    $0x4,%rax
   235d2:	49 03 45 00          	add    0x0(%r13),%rax
   235d6:	48 c1 e6 05          	shl    $0x5,%rsi
   235da:	49 03 75 20          	add    0x20(%r13),%rsi
   235de:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   235e4:	88 50 04             	mov    %dl,0x4(%rax)
   235e7:	02 53 76             	add    0x76(%rbx),%dl
   235ea:	66 c7 40 06 00 00    	movw   $0x0,0x6(%rax)
   235f0:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   235f7:	44 89 60 08          	mov    %r12d,0x8(%rax)
   235fb:	88 50 05             	mov    %dl,0x5(%rax)
   235fe:	48 8b 05 00 00 00 00 	mov    0(%rip),%rax        # 23605 <e1000_tx_csum+0x1d4>
			23601: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   23605:	ba 01 00 00 00       	mov    $0x1,%edx
   2360a:	66 89 4e 1a          	mov    %cx,0x1a(%rsi)
   2360e:	ff c1                	inc    %ecx
   23610:	48 89 46 10          	mov    %rax,0x10(%rsi)
   23614:	41 3b 4d 14          	cmp    0x14(%r13),%ecx
   23618:	b8 00 00 00 00       	mov    $0x0,%eax
   2361d:	0f 44 c8             	cmove  %eax,%ecx
   23620:	41 89 4d 18          	mov    %ecx,0x18(%r13)
   23624:	48 83 c4 28          	add    $0x28,%rsp
   23628:	89 d0                	mov    %edx,%eax
   2362a:	5b                   	pop    %rbx
   2362b:	41 5c                	pop    %r12
   2362d:	41 5d                	pop    %r13
   2362f:	c9                   	leaveq 
   23630:	c3                   	retq   

0000000000023631 <e1000_update_itr>:
   23631:	55                   	push   %rbp
   23632:	48 89 e5             	mov    %rsp,%rbp
   23635:	41 56                	push   %r14
   23637:	41 89 f6             	mov    %esi,%r14d
   2363a:	41 55                	push   %r13
   2363c:	41 89 d5             	mov    %edx,%r13d
   2363f:	41 54                	push   %r12
   23641:	41 89 cc             	mov    %ecx,%r12d
   23644:	53                   	push   %rbx
   23645:	48 89 fb             	mov    %rdi,%rbx
   23648:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2364b: R_X86_64_32S	.rodata.str1.1+0x2c5f
   2364f:	e8 00 00 00 00       	callq  23654 <e1000_update_itr+0x23>
			23650: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23654:	83 bb c8 03 00 00 04 	cmpl   $0x4,0x3c8(%rbx)
   2365b:	41 0f b7 ce          	movzwl %r14w,%ecx
   2365f:	0f 86 bb 00 00 00    	jbe    23720 <e1000_update_itr+0xef>
   23665:	45 85 ed             	test   %r13d,%r13d
   23668:	0f 84 b2 00 00 00    	je     23720 <e1000_update_itr+0xef>
   2366e:	66 45 85 f6          	test   %r14w,%r14w
   23672:	74 14                	je     23688 <e1000_update_itr+0x57>
   23674:	66 41 83 fe 01       	cmp    $0x1,%r14w
   23679:	74 2e                	je     236a9 <e1000_update_itr+0x78>
   2367b:	66 41 83 fe 02       	cmp    $0x2,%r14w
   23680:	0f 85 9a 00 00 00    	jne    23720 <e1000_update_itr+0xef>
   23686:	eb 6c                	jmp    236f4 <e1000_update_itr+0xc3>
   23688:	44 89 e0             	mov    %r12d,%eax
   2368b:	99                   	cltd   
   2368c:	41 f7 fd             	idiv   %r13d
   2368f:	3d 40 1f 00 00       	cmp    $0x1f40,%eax
   23694:	7f 7a                	jg     23710 <e1000_update_itr+0xdf>
   23696:	41 83 fd 04          	cmp    $0x4,%r13d
   2369a:	0f 8f 80 00 00 00    	jg     23720 <e1000_update_itr+0xef>
   236a0:	41 81 fc 00 02 00 00 	cmp    $0x200,%r12d
   236a7:	eb 58                	jmp    23701 <e1000_update_itr+0xd0>
   236a9:	41 81 fc 10 27 00 00 	cmp    $0x2710,%r12d
   236b0:	7e 23                	jle    236d5 <e1000_update_itr+0xa4>
   236b2:	44 89 e0             	mov    %r12d,%eax
   236b5:	99                   	cltd   
   236b6:	41 f7 fd             	idiv   %r13d
   236b9:	3d 40 1f 00 00       	cmp    $0x1f40,%eax
   236be:	7f 50                	jg     23710 <e1000_update_itr+0xdf>
   236c0:	41 83 fd 09          	cmp    $0x9,%r13d
   236c4:	7e 4a                	jle    23710 <e1000_update_itr+0xdf>
   236c6:	3d b0 04 00 00       	cmp    $0x4b0,%eax
   236cb:	7f 43                	jg     23710 <e1000_update_itr+0xdf>
   236cd:	41 83 fd 23          	cmp    $0x23,%r13d
   236d1:	7f 4b                	jg     2371e <e1000_update_itr+0xed>
   236d3:	eb 4b                	jmp    23720 <e1000_update_itr+0xef>
   236d5:	44 89 e0             	mov    %r12d,%eax
   236d8:	99                   	cltd   
   236d9:	41 f7 fd             	idiv   %r13d
   236dc:	3d d0 07 00 00       	cmp    $0x7d0,%eax
   236e1:	7f 2d                	jg     23710 <e1000_update_itr+0xdf>
   236e3:	41 83 fd 02          	cmp    $0x2,%r13d
   236e7:	7f 37                	jg     23720 <e1000_update_itr+0xef>
   236e9:	41 81 fc ff 01 00 00 	cmp    $0x1ff,%r12d
   236f0:	7e 2c                	jle    2371e <e1000_update_itr+0xed>
   236f2:	eb 2c                	jmp    23720 <e1000_update_itr+0xef>
   236f4:	41 81 fc a8 61 00 00 	cmp    $0x61a8,%r12d
   236fb:	7e 08                	jle    23705 <e1000_update_itr+0xd4>
   236fd:	41 83 fd 23          	cmp    $0x23,%r13d
   23701:	7f 14                	jg     23717 <e1000_update_itr+0xe6>
   23703:	eb 1b                	jmp    23720 <e1000_update_itr+0xef>
   23705:	41 81 fc 6f 17 00 00 	cmp    $0x176f,%r12d
   2370c:	7e 09                	jle    23717 <e1000_update_itr+0xe6>
   2370e:	eb 10                	jmp    23720 <e1000_update_itr+0xef>
   23710:	b9 02 00 00 00       	mov    $0x2,%ecx
   23715:	eb 09                	jmp    23720 <e1000_update_itr+0xef>
   23717:	b9 01 00 00 00       	mov    $0x1,%ecx
   2371c:	eb 02                	jmp    23720 <e1000_update_itr+0xef>
   2371e:	31 c9                	xor    %ecx,%ecx
   23720:	5b                   	pop    %rbx
   23721:	41 5c                	pop    %r12
   23723:	41 5d                	pop    %r13
   23725:	41 5e                	pop    %r14
   23727:	c9                   	leaveq 
   23728:	89 c8                	mov    %ecx,%eax
   2372a:	c3                   	retq   

000000000002372b <e1000_clean_rx_ring>:
   2372b:	55                   	push   %rbp
   2372c:	48 89 e5             	mov    %rsp,%rbp
   2372f:	41 57                	push   %r15
   23731:	45 31 ff             	xor    %r15d,%r15d
   23734:	41 56                	push   %r14
   23736:	49 89 f6             	mov    %rsi,%r14
   23739:	41 55                	push   %r13
   2373b:	41 54                	push   %r12
   2373d:	53                   	push   %rbx
   2373e:	48 89 fb             	mov    %rdi,%rbx
   23741:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23744: R_X86_64_32S	.rodata.str1.1+0x2c70
   23748:	48 83 ec 28          	sub    $0x28,%rsp
   2374c:	e8 00 00 00 00       	callq  23751 <e1000_clean_rx_ring+0x26>
			2374d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23751:	48 8d 83 b8 03 00 00 	lea    0x3b8(%rbx),%rax
   23758:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   2375c:	48 8b 9b f8 02 00 00 	mov    0x2f8(%rbx),%rbx
   23763:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
   23767:	45 3b 7e 14          	cmp    0x14(%r14),%r15d
   2376b:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   2376f:	0f 83 c3 00 00 00    	jae    23838 <e1000_clean_rx_ring+0x10d>
   23775:	44 89 f8             	mov    %r15d,%eax
   23778:	48 c1 e0 05          	shl    $0x5,%rax
   2377c:	4c 8d 24 07          	lea    (%rdi,%rax,1),%r12
   23780:	49 83 3c 24 00       	cmpq   $0x0,(%r12)
   23785:	0f 84 a5 00 00 00    	je     23830 <e1000_clean_rx_ring+0x105>
   2378b:	41 8b 44 24 18       	mov    0x18(%r12),%eax
   23790:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23793: R_X86_64_32S	.rodata.str1.1+0x2c84
   23797:	45 31 ed             	xor    %r13d,%r13d
   2379a:	66 89 45 be          	mov    %ax,0xffffffffffffffbe(%rbp)
   2379e:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   237a3:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   237a7:	e8 00 00 00 00       	callq  237ac <e1000_clean_rx_ring+0x81>
			237a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   237ac:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   237b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			237b3: R_X86_64_32S	.rodata.str1.1+0x2c95
   237b7:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   237bb:	48 83 7d c8 00       	cmpq   $0x0,0xffffffffffffffc8(%rbp)
   237c0:	4c 0f 45 e8          	cmovne %rax,%r13
   237c4:	e8 00 00 00 00       	callq  237c9 <e1000_clean_rx_ring+0x9e>
			237c5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   237c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			237cc: R_X86_64_32S	.rodata.str1.1+0x2ca6
   237d0:	e8 00 00 00 00       	callq  237d5 <e1000_clean_rx_ring+0xaa>
			237d1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   237d5:	4d 85 ed             	test   %r13,%r13
   237d8:	75 09                	jne    237e3 <e1000_clean_rx_ring+0xb8>
   237da:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 237e1 <e1000_clean_rx_ring+0xb6>
			237dd: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   237e1:	eb 15                	jmp    237f8 <e1000_clean_rx_ring+0xcd>
   237e3:	49 8b 85 e8 01 00 00 	mov    0x1e8(%r13),%rax
   237ea:	48 85 c0             	test   %rax,%rax
   237ed:	48 89 c3             	mov    %rax,%rbx
   237f0:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 237f8 <e1000_clean_rx_ring+0xcd>
   237f7:	00 
			237f4: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   237f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			237fb: R_X86_64_32S	.rodata.str1.1+0x2cb2
   237ff:	e8 00 00 00 00       	callq  23804 <e1000_clean_rx_ring+0xd9>
			23800: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23804:	48 8b 43 20          	mov    0x20(%rbx),%rax
   23808:	48 85 c0             	test   %rax,%rax
   2380b:	74 12                	je     2381f <e1000_clean_rx_ring+0xf4>
   2380d:	0f b7 55 be          	movzwl 0xffffffffffffffbe(%rbp),%edx
   23811:	b9 02 00 00 00       	mov    $0x2,%ecx
   23816:	48 8b 75 d0          	mov    0xffffffffffffffd0(%rbp),%rsi
   2381a:	4c 89 ef             	mov    %r13,%rdi
   2381d:	ff d0                	callq  *%rax
   2381f:	49 8b 3c 24          	mov    (%r12),%rdi
   23823:	e8 00 00 00 00       	callq  23828 <e1000_clean_rx_ring+0xfd>
			23824: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   23828:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   2382f:	00 
   23830:	49 ff c7             	inc    %r15
   23833:	e9 2f ff ff ff       	jmpq   23767 <e1000_clean_rx_ring+0x3c>
   23838:	41 8b 56 14          	mov    0x14(%r14),%edx
   2383c:	31 f6                	xor    %esi,%esi
   2383e:	45 31 ed             	xor    %r13d,%r13d
   23841:	48 c1 e2 05          	shl    $0x5,%rdx
   23845:	e8 61 40 fe ff       	callq  78ab <memset>
   2384a:	41 8b 56 10          	mov    0x10(%r14),%edx
   2384e:	49 8b 3e             	mov    (%r14),%rdi
   23851:	31 f6                	xor    %esi,%esi
   23853:	e8 53 40 fe ff       	callq  78ab <memset>
   23858:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
   2385c:	41 0f b7 5e 2c       	movzwl 0x2c(%r14),%ebx
   23861:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23864: R_X86_64_32S	.rodata.str1.1+0xb4
   23868:	41 c7 46 1c 00 00 00 	movl   $0x0,0x1c(%r14)
   2386f:	00 
   23870:	41 c7 46 18 00 00 00 	movl   $0x0,0x18(%r14)
   23877:	00 
   23878:	4c 8b 20             	mov    (%rax),%r12
   2387b:	e8 00 00 00 00       	callq  23880 <e1000_clean_rx_ring+0x155>
			2387c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23880:	49 01 dc             	add    %rbx,%r12
   23883:	45 89 2c 24          	mov    %r13d,(%r12)
   23887:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
   2388b:	41 0f b7 5e 2e       	movzwl 0x2e(%r14),%ebx
   23890:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23893: R_X86_64_32S	.rodata.str1.1+0xb4
   23897:	4c 8b 20             	mov    (%rax),%r12
   2389a:	e8 00 00 00 00       	callq  2389f <e1000_clean_rx_ring+0x174>
			2389b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2389f:	49 01 dc             	add    %rbx,%r12
   238a2:	45 89 2c 24          	mov    %r13d,(%r12)
   238a6:	48 83 c4 28          	add    $0x28,%rsp
   238aa:	5b                   	pop    %rbx
   238ab:	41 5c                	pop    %r12
   238ad:	41 5d                	pop    %r13
   238af:	41 5e                	pop    %r14
   238b1:	41 5f                	pop    %r15
   238b3:	c9                   	leaveq 
   238b4:	c3                   	retq   

00000000000238b5 <e1000_clean_all_rx_rings>:
   238b5:	55                   	push   %rbp
   238b6:	48 89 e5             	mov    %rsp,%rbp
   238b9:	41 54                	push   %r12
   238bb:	45 31 e4             	xor    %r12d,%r12d
   238be:	53                   	push   %rbx
   238bf:	48 89 fb             	mov    %rdi,%rbx
   238c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			238c5: R_X86_64_32S	.rodata.str1.1+0x2cc6
   238c9:	e8 00 00 00 00       	callq  238ce <e1000_clean_all_rx_rings+0x19>
			238ca: R_X86_64_PC32	record_function+0xfffffffffffffffc
   238ce:	44 3b a3 b4 02 00 00 	cmp    0x2b4(%rbx),%r12d
   238d5:	7d 1b                	jge    238f2 <e1000_clean_all_rx_rings+0x3d>
   238d7:	49 63 f4             	movslq %r12d,%rsi
   238da:	48 89 df             	mov    %rbx,%rdi
   238dd:	41 ff c4             	inc    %r12d
   238e0:	48 6b f6 30          	imul   $0x30,%rsi,%rsi
   238e4:	48 03 b3 20 02 00 00 	add    0x220(%rbx),%rsi
   238eb:	e8 3b fe ff ff       	callq  2372b <e1000_clean_rx_ring>
   238f0:	eb dc                	jmp    238ce <e1000_clean_all_rx_rings+0x19>
   238f2:	5b                   	pop    %rbx
   238f3:	41 5c                	pop    %r12
   238f5:	c9                   	leaveq 
   238f6:	c3                   	retq   

00000000000238f7 <e1000_enter_82542_rst>:
   238f7:	55                   	push   %rbp
   238f8:	48 89 e5             	mov    %rsp,%rbp
   238fb:	41 56                	push   %r14
   238fd:	49 89 fe             	mov    %rdi,%r14
   23900:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23903: R_X86_64_32S	.rodata.str1.1+0x2cdf
   23907:	41 55                	push   %r13
   23909:	41 54                	push   %r12
   2390b:	53                   	push   %rbx
   2390c:	e8 00 00 00 00       	callq  23911 <e1000_enter_82542_rst+0x1a>
			2390d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23911:	49 8d be b8 03 00 00 	lea    0x3b8(%r14),%rdi
   23918:	4d 8b ae f0 02 00 00 	mov    0x2f0(%r14),%r13
   2391f:	e8 77 fe fd ff       	callq  379b <e1000_pci_clear_mwi>
   23924:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23927: R_X86_64_32S	.rodata.str1.1+0xae
   2392b:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
   23932:	e8 00 00 00 00       	callq  23937 <e1000_enter_82542_rst+0x40>
			23933: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23937:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   2393e:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
   23945:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23948: R_X86_64_32S	.rodata.str1.1+0xb4
   2394c:	41 83 cc 01          	or     $0x1,%r12d
   23950:	e8 00 00 00 00       	callq  23955 <e1000_enter_82542_rst+0x5e>
			23951: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23955:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   2395c:	44 89 23             	mov    %r12d,(%rbx)
   2395f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23962: R_X86_64_32S	.rodata.str1.1+0xae
   23966:	49 8b 9e b8 03 00 00 	mov    0x3b8(%r14),%rbx
   2396d:	e8 00 00 00 00       	callq  23972 <e1000_enter_82542_rst+0x7b>
			2396e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23972:	8b 43 08             	mov    0x8(%rbx),%eax
   23975:	bf b8 ae 47 01       	mov    $0x147aeb8,%edi
   2397a:	e8 dd 0f fe ff       	callq  495c <__const_udelay>
   2397f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23982: R_X86_64_32S	.rodata.str1.1+0x15c6
   23986:	e8 00 00 00 00       	callq  2398b <e1000_enter_82542_rst+0x94>
			23987: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2398b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2398e: R_X86_64_32S	.rodata.str1.1+0x15d4
   23992:	e8 00 00 00 00       	callq  23997 <e1000_enter_82542_rst+0xa0>
			23993: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23997:	41 f6 45 48 01       	testb  $0x1,0x48(%r13)
   2399c:	74 08                	je     239a6 <e1000_enter_82542_rst+0xaf>
   2399e:	4c 89 f7             	mov    %r14,%rdi
   239a1:	e8 0f ff ff ff       	callq  238b5 <e1000_clean_all_rx_rings>
   239a6:	5b                   	pop    %rbx
   239a7:	41 5c                	pop    %r12
   239a9:	41 5d                	pop    %r13
   239ab:	41 5e                	pop    %r14
   239ad:	c9                   	leaveq 
   239ae:	c3                   	retq   

00000000000239af <e1000_set_rx_mode>:
   239af:	55                   	push   %rbp
   239b0:	48 89 e5             	mov    %rsp,%rbp
   239b3:	41 57                	push   %r15
   239b5:	41 56                	push   %r14
   239b7:	41 55                	push   %r13
   239b9:	49 89 fd             	mov    %rdi,%r13
   239bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			239bf: R_X86_64_32S	.rodata.str1.1+0x2cf5
   239c3:	4d 8d bd b8 0b 00 00 	lea    0xbb8(%r13),%r15
   239ca:	41 54                	push   %r12
   239cc:	53                   	push   %rbx
   239cd:	48 83 ec 38          	sub    $0x38,%rsp
   239d1:	e8 00 00 00 00       	callq  239d6 <e1000_set_rx_mode+0x27>
			239d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   239d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			239d9: R_X86_64_32S	.rodata.str1.1+0x1be
   239dd:	e8 00 00 00 00       	callq  239e2 <e1000_set_rx_mode+0x33>
			239de: R_X86_64_PC32	record_function+0xfffffffffffffffc
   239e2:	49 8d 85 00 08 00 00 	lea    0x800(%r13),%rax
   239e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			239ec: R_X86_64_32S	.rodata.str1.1+0xae
   239f0:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
   239f4:	41 8b 57 10          	mov    0x10(%r15),%edx
   239f8:	b8 80 00 00 00       	mov    $0x80,%eax
   239fd:	c7 45 c4 20 00 00 00 	movl   $0x20,0xffffffffffffffc4(%rbp)
   23a04:	83 fa 12             	cmp    $0x12,%edx
   23a07:	0f 44 45 c4          	cmove  0xffffffffffffffc4(%rbp),%eax
   23a0b:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   23a0e:	0f 95 c0             	setne  %al
   23a11:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
   23a18:	44 0f b6 f0          	movzbl %al,%r14d
   23a1c:	31 c0                	xor    %eax,%eax
   23a1e:	83 fa 0e             	cmp    $0xe,%edx
   23a21:	47 8d 74 f6 06       	lea    0x6(%r14,%r14,8),%r14d
   23a26:	0f 94 c0             	sete   %al
   23a29:	41 29 c6             	sub    %eax,%r14d
   23a2c:	e8 00 00 00 00       	callq  23a31 <e1000_set_rx_mode+0x82>
			23a2d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23a31:	8b 83 00 01 00 00    	mov    0x100(%rbx),%eax
   23a37:	41 8b 95 60 01 00 00 	mov    0x160(%r13),%edx
   23a3e:	f6 c6 01             	test   $0x1,%dh
   23a41:	74 10                	je     23a53 <e1000_set_rx_mode+0xa4>
   23a43:	41 89 c4             	mov    %eax,%r12d
   23a46:	41 83 cc 18          	or     $0x18,%r12d
   23a4a:	41 81 e4 ff ff fb ff 	and    $0xfffbffff,%r12d
   23a51:	eb 2c                	jmp    23a7f <e1000_set_rx_mode+0xd0>
   23a53:	80 e6 02             	and    $0x2,%dh
   23a56:	74 09                	je     23a61 <e1000_set_rx_mode+0xb2>
   23a58:	41 89 c4             	mov    %eax,%r12d
   23a5b:	41 83 cc 10          	or     $0x10,%r12d
   23a5f:	eb 07                	jmp    23a68 <e1000_set_rx_mode+0xb9>
   23a61:	41 89 c4             	mov    %eax,%r12d
   23a64:	41 83 e4 ef          	and    $0xffffffffffffffef,%r12d
   23a68:	48 8b 55 a8          	mov    0xffffffffffffffa8(%rbp),%rdx
   23a6c:	44 89 e0             	mov    %r12d,%eax
   23a6f:	0d 00 00 04 00       	or     $0x40000,%eax
   23a74:	83 ba c8 03 00 00 12 	cmpl   $0x12,0x3c8(%rdx)
   23a7b:	44 0f 45 e0          	cmovne %eax,%r12d
   23a7f:	41 8d 46 ff          	lea    0xffffffffffffffff(%r14),%eax
   23a83:	41 39 85 e0 01 00 00 	cmp    %eax,0x1e0(%r13)
   23a8a:	7e 0e                	jle    23a9a <e1000_set_rx_mode+0xeb>
   23a8c:	41 83 cc 08          	or     $0x8,%r12d
   23a90:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   23a97:	00 
   23a98:	eb 21                	jmp    23abb <e1000_set_rx_mode+0x10c>
   23a9a:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   23aa1:	00 
   23aa2:	41 f6 85 61 01 00 00 	testb  $0x1,0x161(%r13)
   23aa9:	01 
   23aaa:	75 0f                	jne    23abb <e1000_set_rx_mode+0x10c>
   23aac:	49 8b 8d d8 01 00 00 	mov    0x1d8(%r13),%rcx
   23ab3:	41 83 e4 f7          	and    $0xfffffffffffffff7,%r12d
   23ab7:	48 89 4d b0          	mov    %rcx,0xffffffffffffffb0(%rbp)
   23abb:	49 8b 1f             	mov    (%r15),%rbx
   23abe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23ac1: R_X86_64_32S	.rodata.str1.1+0xb4
   23ac5:	e8 00 00 00 00       	callq  23aca <e1000_set_rx_mode+0x11b>
			23ac6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23aca:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   23ad1:	44 89 23             	mov    %r12d,(%rbx)
   23ad4:	41 83 7f 10 01       	cmpl   $0x1,0x10(%r15)
   23ad9:	75 09                	jne    23ae4 <e1000_set_rx_mode+0x135>
   23adb:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
   23adf:	e8 13 fe ff ff       	callq  238f7 <e1000_enter_82542_rst>
   23ae4:	4d 8b ad e8 01 00 00 	mov    0x1e8(%r13),%r13
   23aeb:	c7 45 a4 0c 00 00 00 	movl   $0xc,0xffffffffffffffa4(%rbp)
   23af2:	c7 45 a0 08 00 00 00 	movl   $0x8,0xffffffffffffffa0(%rbp)
   23af9:	4c 89 6d b8          	mov    %r13,0xffffffffffffffb8(%rbp)
   23afd:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   23b03:	45 39 f5             	cmp    %r14d,%r13d
   23b06:	0f 8d f6 00 00 00    	jge    23c02 <e1000_set_rx_mode+0x253>
   23b0c:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   23b11:	74 23                	je     23b36 <e1000_set_rx_mode+0x187>
   23b13:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   23b17:	44 89 ea             	mov    %r13d,%edx
   23b1a:	4c 89 ff             	mov    %r15,%rdi
   23b1d:	48 83 c6 08          	add    $0x8,%rsi
   23b21:	e8 68 c8 fd ff       	callq  38e <e1000_rar_set>
   23b26:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   23b2a:	48 8b 00             	mov    (%rax),%rax
   23b2d:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   23b31:	e9 bc 00 00 00       	jmpq   23bf2 <e1000_set_rx_mode+0x243>
   23b36:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
   23b3b:	74 23                	je     23b60 <e1000_set_rx_mode+0x1b1>
   23b3d:	48 8b 75 b8          	mov    0xffffffffffffffb8(%rbp),%rsi
   23b41:	44 89 ea             	mov    %r13d,%edx
   23b44:	4c 89 ff             	mov    %r15,%rdi
   23b47:	48 83 c6 08          	add    $0x8,%rsi
   23b4b:	e8 3e c8 fd ff       	callq  38e <e1000_rar_set>
   23b50:	48 8b 55 b8          	mov    0xffffffffffffffb8(%rbp),%rdx
   23b54:	48 8b 12             	mov    (%rdx),%rdx
   23b57:	48 89 55 b8          	mov    %rdx,0xffffffffffffffb8(%rbp)
   23b5b:	e9 92 00 00 00       	jmpq   23bf2 <e1000_set_rx_mode+0x243>
   23b60:	41 8b 47 10          	mov    0x10(%r15),%eax
   23b64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23b67: R_X86_64_32S	.rodata.str1.1+0xb4
   23b6b:	4d 8b 27             	mov    (%r15),%r12
   23b6e:	83 f8 03             	cmp    $0x3,%eax
   23b71:	19 db                	sbb    %ebx,%ebx
   23b73:	81 e3 40 ac ff ff    	and    $0xffffac40,%ebx
   23b79:	e8 00 00 00 00       	callq  23b7e <e1000_set_rx_mode+0x1cf>
			23b7a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23b7e:	48 63 45 a0          	movslq 0xffffffffffffffa0(%rbp),%rax
   23b82:	81 c3 00 54 00 00    	add    $0x5400,%ebx
   23b88:	48 63 db             	movslq %ebx,%rbx
   23b8b:	49 01 dc             	add    %rbx,%r12
   23b8e:	49 01 c4             	add    %rax,%r12
   23b91:	31 c0                	xor    %eax,%eax
   23b93:	41 89 04 24          	mov    %eax,(%r12)
   23b97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23b9a: R_X86_64_32S	.rodata.str1.1+0xae
   23b9e:	49 8b 1f             	mov    (%r15),%rbx
   23ba1:	e8 00 00 00 00       	callq  23ba6 <e1000_set_rx_mode+0x1f7>
			23ba2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23ba6:	8b 43 08             	mov    0x8(%rbx),%eax
   23ba9:	41 8b 47 10          	mov    0x10(%r15),%eax
   23bad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23bb0: R_X86_64_32S	.rodata.str1.1+0xb4
   23bb4:	4d 8b 27             	mov    (%r15),%r12
   23bb7:	83 f8 03             	cmp    $0x3,%eax
   23bba:	19 db                	sbb    %ebx,%ebx
   23bbc:	81 e3 40 ac ff ff    	and    $0xffffac40,%ebx
   23bc2:	e8 00 00 00 00       	callq  23bc7 <e1000_set_rx_mode+0x218>
			23bc3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23bc7:	48 63 45 a4          	movslq 0xffffffffffffffa4(%rbp),%rax
   23bcb:	81 c3 00 54 00 00    	add    $0x5400,%ebx
   23bd1:	48 63 db             	movslq %ebx,%rbx
   23bd4:	49 01 dc             	add    %rbx,%r12
   23bd7:	49 01 c4             	add    %rax,%r12
   23bda:	31 c0                	xor    %eax,%eax
   23bdc:	41 89 04 24          	mov    %eax,(%r12)
   23be0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23be3: R_X86_64_32S	.rodata.str1.1+0xae
   23be7:	49 8b 1f             	mov    (%r15),%rbx
   23bea:	e8 00 00 00 00       	callq  23bef <e1000_set_rx_mode+0x240>
			23beb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23bef:	8b 43 08             	mov    0x8(%rbx),%eax
   23bf2:	83 45 a0 08          	addl   $0x8,0xffffffffffffffa0(%rbp)
   23bf6:	83 45 a4 08          	addl   $0x8,0xffffffffffffffa4(%rbp)
   23bfa:	41 ff c5             	inc    %r13d
   23bfd:	e9 01 ff ff ff       	jmpq   23b03 <e1000_set_rx_mode+0x154>
   23c02:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   23c07:	74 15                	je     23c1e <e1000_set_rx_mode+0x26f>
   23c09:	31 d2                	xor    %edx,%edx
   23c0b:	be 87 09 00 00       	mov    $0x987,%esi
   23c10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23c13: R_X86_64_32S	str_888237591
   23c17:	31 c0                	xor    %eax,%eax
   23c19:	e8 00 00 00 00       	callq  23c1e <e1000_set_rx_mode+0x26f>
			23c1a: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   23c1e:	45 31 f6             	xor    %r14d,%r14d
   23c21:	45 31 ed             	xor    %r13d,%r13d
   23c24:	44 3b 75 c4          	cmp    0xffffffffffffffc4(%rbp),%r14d
   23c28:	7d 51                	jge    23c7b <e1000_set_rx_mode+0x2cc>
   23c2a:	41 8b 47 10          	mov    0x10(%r15),%eax
   23c2e:	4d 8b 27             	mov    (%r15),%r12
   23c31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23c34: R_X86_64_32S	.rodata.str1.1+0xb4
   23c38:	83 f8 03             	cmp    $0x3,%eax
   23c3b:	19 db                	sbb    %ebx,%ebx
   23c3d:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
   23c43:	81 c3 00 52 00 00    	add    $0x5200,%ebx
   23c49:	48 63 db             	movslq %ebx,%rbx
   23c4c:	e8 00 00 00 00       	callq  23c51 <e1000_set_rx_mode+0x2a2>
			23c4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23c51:	49 01 dc             	add    %rbx,%r12
   23c54:	49 63 c5             	movslq %r13d,%rax
   23c57:	49 01 c4             	add    %rax,%r12
   23c5a:	31 c0                	xor    %eax,%eax
   23c5c:	41 89 04 24          	mov    %eax,(%r12)
   23c60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23c63: R_X86_64_32S	.rodata.str1.1+0xae
   23c67:	49 8b 1f             	mov    (%r15),%rbx
   23c6a:	e8 00 00 00 00       	callq  23c6f <e1000_set_rx_mode+0x2c0>
			23c6b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23c6f:	8b 43 08             	mov    0x8(%rbx),%eax
   23c72:	41 ff c6             	inc    %r14d
   23c75:	41 83 c5 04          	add    $0x4,%r13d
   23c79:	eb a9                	jmp    23c24 <e1000_set_rx_mode+0x275>
   23c7b:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
   23c80:	0f 84 57 02 00 00    	je     23edd <e1000_set_rx_mode+0x52e>
   23c86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23c89: R_X86_64_32S	.rodata.str1.1+0x2d07
   23c8d:	e8 00 00 00 00       	callq  23c92 <e1000_set_rx_mode+0x2e3>
			23c8e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23c92:	41 8b 87 a0 00 00 00 	mov    0xa0(%r15),%eax
   23c99:	85 c0                	test   %eax,%eax
   23c9b:	74 17                	je     23cb4 <e1000_set_rx_mode+0x305>
   23c9d:	83 f8 01             	cmp    $0x1,%eax
   23ca0:	74 32                	je     23cd4 <e1000_set_rx_mode+0x325>
   23ca2:	83 f8 02             	cmp    $0x2,%eax
   23ca5:	74 58                	je     23cff <e1000_set_rx_mode+0x350>
   23ca7:	31 c9                	xor    %ecx,%ecx
   23ca9:	83 f8 03             	cmp    $0x3,%eax
   23cac:	0f 85 90 00 00 00    	jne    23d42 <e1000_set_rx_mode+0x393>
   23cb2:	eb 67                	jmp    23d1b <e1000_set_rx_mode+0x36c>
   23cb4:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   23cb9:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   23cbd:	8a 51 0c             	mov    0xc(%rcx),%dl
   23cc0:	8a 41 0d             	mov    0xd(%rcx),%al
   23cc3:	75 4b                	jne    23d10 <e1000_set_rx_mode+0x361>
   23cc5:	0f b6 c0             	movzbl %al,%eax
   23cc8:	c0 ea 06             	shr    $0x6,%dl
   23ccb:	8d 0c 85 00 00 00 00 	lea    0x0(,%rax,4),%ecx
   23cd2:	eb 69                	jmp    23d3d <e1000_set_rx_mode+0x38e>
   23cd4:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   23cd9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   23cdd:	8a 50 0c             	mov    0xc(%rax),%dl
   23ce0:	8a 40 0d             	mov    0xd(%rax),%al
   23ce3:	75 0f                	jne    23cf4 <e1000_set_rx_mode+0x345>
   23ce5:	0f b6 c0             	movzbl %al,%eax
   23ce8:	c0 ea 05             	shr    $0x5,%dl
   23ceb:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   23cf2:	eb 49                	jmp    23d3d <e1000_set_rx_mode+0x38e>
   23cf4:	0f b6 c8             	movzbl %al,%ecx
   23cf7:	c0 ea 03             	shr    $0x3,%dl
   23cfa:	c1 e1 05             	shl    $0x5,%ecx
   23cfd:	eb 3e                	jmp    23d3d <e1000_set_rx_mode+0x38e>
   23cff:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   23d04:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   23d08:	8a 50 0c             	mov    0xc(%rax),%dl
   23d0b:	8a 40 0d             	mov    0xd(%rax),%al
   23d0e:	75 1c                	jne    23d2c <e1000_set_rx_mode+0x37d>
   23d10:	0f b6 c8             	movzbl %al,%ecx
   23d13:	c0 ea 04             	shr    $0x4,%dl
   23d16:	c1 e1 04             	shl    $0x4,%ecx
   23d19:	eb 22                	jmp    23d3d <e1000_set_rx_mode+0x38e>
   23d1b:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   23d20:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   23d24:	8a 50 0c             	mov    0xc(%rax),%dl
   23d27:	8a 40 0d             	mov    0xd(%rax),%al
   23d2a:	75 0b                	jne    23d37 <e1000_set_rx_mode+0x388>
   23d2c:	0f b6 c8             	movzbl %al,%ecx
   23d2f:	c0 ea 02             	shr    $0x2,%dl
   23d32:	c1 e1 06             	shl    $0x6,%ecx
   23d35:	eb 06                	jmp    23d3d <e1000_set_rx_mode+0x38e>
   23d37:	0f b6 c8             	movzbl %al,%ecx
   23d3a:	c1 e1 08             	shl    $0x8,%ecx
   23d3d:	0f b6 c2             	movzbl %dl,%eax
   23d40:	09 c1                	or     %eax,%ecx
   23d42:	41 89 cc             	mov    %ecx,%r12d
   23d45:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   23d4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23d4e: R_X86_64_32S	.rodata.str1.1+0x2d1a
   23d52:	41 81 e4 ff 0f 00 00 	and    $0xfff,%r12d
   23d59:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   23d5e:	44 0f 44 e1          	cmove  %ecx,%r12d
   23d62:	e8 00 00 00 00       	callq  23d67 <e1000_set_rx_mode+0x3b8>
			23d63: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23d67:	44 89 e2             	mov    %r12d,%edx
   23d6a:	41 8b 47 10          	mov    0x10(%r15),%eax
   23d6e:	c1 ea 05             	shr    $0x5,%edx
   23d71:	41 89 d5             	mov    %edx,%r13d
   23d74:	41 83 e5 7f          	and    $0x7f,%r13d
   23d78:	83 f8 12             	cmp    $0x12,%eax
   23d7b:	75 09                	jne    23d86 <e1000_set_rx_mode+0x3d7>
   23d7d:	41 89 d5             	mov    %edx,%r13d
   23d80:	41 83 e5 1f          	and    $0x1f,%r13d
   23d84:	eb 0b                	jmp    23d91 <e1000_set_rx_mode+0x3e2>
   23d86:	83 f8 02             	cmp    $0x2,%eax
   23d89:	41 be 00 02 00 00    	mov    $0x200,%r14d
   23d8f:	76 06                	jbe    23d97 <e1000_set_rx_mode+0x3e8>
   23d91:	41 be 00 52 00 00    	mov    $0x5200,%r14d
   23d97:	42 8d 04 ad 00 00 00 	lea    0x0(,%r13,4),%eax
   23d9e:	00 
   23d9f:	49 8b 1f             	mov    (%r15),%rbx
   23da2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23da5: R_X86_64_32S	.rodata.str1.1+0xae
   23da9:	89 c0                	mov    %eax,%eax
   23dab:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   23daf:	e8 00 00 00 00       	callq  23db4 <e1000_set_rx_mode+0x405>
			23db0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23db4:	49 63 c6             	movslq %r14d,%rax
   23db7:	48 01 c3             	add    %rax,%rbx
   23dba:	48 03 5d d0          	add    0xffffffffffffffd0(%rbp),%rbx
   23dbe:	44 8b 33             	mov    (%rbx),%r14d
   23dc1:	41 83 e4 1f          	and    $0x1f,%r12d
   23dc5:	b8 01 00 00 00       	mov    $0x1,%eax
   23dca:	44 88 e1             	mov    %r12b,%cl
   23dcd:	d3 e0                	shl    %cl,%eax
   23dcf:	41 09 c6             	or     %eax,%r14d
   23dd2:	41 83 7f 10 04       	cmpl   $0x4,0x10(%r15)
   23dd7:	0f 85 ac 00 00 00    	jne    23e89 <e1000_set_rx_mode+0x4da>
   23ddd:	41 f6 c5 01          	test   $0x1,%r13b
   23de1:	0f 84 a2 00 00 00    	je     23e89 <e1000_set_rx_mode+0x4da>
   23de7:	46 8d 2c ad fc ff ff 	lea    0xfffffffffffffffc(,%r13,4),%r13d
   23dee:	ff 
   23def:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23df2: R_X86_64_32S	.rodata.str1.1+0xae
   23df6:	49 8b 1f             	mov    (%r15),%rbx
   23df9:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
   23dfd:	e8 00 00 00 00       	callq  23e02 <e1000_set_rx_mode+0x453>
			23dfe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23e02:	4c 8b 6d c8          	mov    0xffffffffffffffc8(%rbp),%r13
   23e06:	4a 8d 9c 2b 00 52 00 	lea    0x5200(%rbx,%r13,1),%rbx
   23e0d:	00 
   23e0e:	44 8b 2b             	mov    (%rbx),%r13d
   23e11:	41 8b 47 10          	mov    0x10(%r15),%eax
   23e15:	4d 8b 27             	mov    (%r15),%r12
   23e18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23e1b: R_X86_64_32S	.rodata.str1.1+0xb4
   23e1f:	83 f8 03             	cmp    $0x3,%eax
   23e22:	19 db                	sbb    %ebx,%ebx
   23e24:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
   23e2a:	81 c3 00 52 00 00    	add    $0x5200,%ebx
   23e30:	48 63 db             	movslq %ebx,%rbx
   23e33:	e8 00 00 00 00       	callq  23e38 <e1000_set_rx_mode+0x489>
			23e34: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23e38:	49 01 dc             	add    %rbx,%r12
   23e3b:	4c 03 65 d0          	add    0xffffffffffffffd0(%rbp),%r12
   23e3f:	45 89 34 24          	mov    %r14d,(%r12)
   23e43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23e46: R_X86_64_32S	.rodata.str1.1+0xae
   23e4a:	49 8b 1f             	mov    (%r15),%rbx
   23e4d:	e8 00 00 00 00       	callq  23e52 <e1000_set_rx_mode+0x4a3>
			23e4e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23e52:	8b 43 08             	mov    0x8(%rbx),%eax
   23e55:	41 8b 47 10          	mov    0x10(%r15),%eax
   23e59:	4d 8b 27             	mov    (%r15),%r12
   23e5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23e5f: R_X86_64_32S	.rodata.str1.1+0xb4
   23e63:	83 f8 03             	cmp    $0x3,%eax
   23e66:	19 db                	sbb    %ebx,%ebx
   23e68:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
   23e6e:	81 c3 00 52 00 00    	add    $0x5200,%ebx
   23e74:	48 63 db             	movslq %ebx,%rbx
   23e77:	e8 00 00 00 00       	callq  23e7c <e1000_set_rx_mode+0x4cd>
			23e78: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23e7c:	49 01 dc             	add    %rbx,%r12
   23e7f:	4c 03 65 c8          	add    0xffffffffffffffc8(%rbp),%r12
   23e83:	45 89 2c 24          	mov    %r13d,(%r12)
   23e87:	eb 32                	jmp    23ebb <e1000_set_rx_mode+0x50c>
   23e89:	41 8b 47 10          	mov    0x10(%r15),%eax
   23e8d:	4d 8b 27             	mov    (%r15),%r12
   23e90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23e93: R_X86_64_32S	.rodata.str1.1+0xb4
   23e97:	83 f8 03             	cmp    $0x3,%eax
   23e9a:	19 db                	sbb    %ebx,%ebx
   23e9c:	81 e3 00 b0 ff ff    	and    $0xffffb000,%ebx
   23ea2:	81 c3 00 52 00 00    	add    $0x5200,%ebx
   23ea8:	48 63 db             	movslq %ebx,%rbx
   23eab:	e8 00 00 00 00       	callq  23eb0 <e1000_set_rx_mode+0x501>
			23eac: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23eb0:	49 01 dc             	add    %rbx,%r12
   23eb3:	4c 03 65 d0          	add    0xffffffffffffffd0(%rbp),%r12
   23eb7:	45 89 34 24          	mov    %r14d,(%r12)
   23ebb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23ebe: R_X86_64_32S	.rodata.str1.1+0xae
   23ec2:	49 8b 1f             	mov    (%r15),%rbx
   23ec5:	e8 00 00 00 00       	callq  23eca <e1000_set_rx_mode+0x51b>
			23ec6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23eca:	8b 43 08             	mov    0x8(%rbx),%eax
   23ecd:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   23ed1:	48 8b 00             	mov    (%rax),%rax
   23ed4:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   23ed8:	e9 9e fd ff ff       	jmpq   23c7b <e1000_set_rx_mode+0x2cc>
   23edd:	41 83 7f 10 01       	cmpl   $0x1,0x10(%r15)
   23ee2:	75 09                	jne    23eed <e1000_set_rx_mode+0x53e>
   23ee4:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
   23ee8:	e8 cd 31 fe ff       	callq  70ba <e1000_leave_82542_rst>
   23eed:	48 83 c4 38          	add    $0x38,%rsp
   23ef1:	5b                   	pop    %rbx
   23ef2:	41 5c                	pop    %r12
   23ef4:	41 5d                	pop    %r13
   23ef6:	41 5e                	pop    %r14
   23ef8:	41 5f                	pop    %r15
   23efa:	c9                   	leaveq 
   23efb:	c3                   	retq   

0000000000023efc <e1000_configure>:
   23efc:	55                   	push   %rbp
   23efd:	48 89 e5             	mov    %rsp,%rbp
   23f00:	41 57                	push   %r15
   23f02:	49 89 ff             	mov    %rdi,%r15
   23f05:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23f08: R_X86_64_32S	.rodata.str1.1+0x2d28
   23f0c:	41 56                	push   %r14
   23f0e:	41 55                	push   %r13
   23f10:	41 54                	push   %r12
   23f12:	53                   	push   %rbx
   23f13:	48 83 ec 18          	sub    $0x18,%rsp
   23f17:	e8 00 00 00 00       	callq  23f1c <e1000_configure+0x20>
			23f18: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23f1c:	49 8b 87 f0 02 00 00 	mov    0x2f0(%r15),%rax
   23f23:	48 89 c7             	mov    %rax,%rdi
   23f26:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   23f2a:	e8 80 fa ff ff       	callq  239af <e1000_set_rx_mode>
   23f2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23f32: R_X86_64_32S	.rodata.str1.1+0x2d38
   23f36:	e8 00 00 00 00       	callq  23f3b <e1000_configure+0x3f>
			23f37: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23f3b:	49 8b b7 90 00 00 00 	mov    0x90(%r15),%rsi
   23f42:	49 8b bf f0 02 00 00 	mov    0x2f0(%r15),%rdi
   23f49:	e8 24 4e fe ff       	callq  8d72 <e1000_vlan_rx_register>
   23f4e:	49 83 bf 90 00 00 00 	cmpq   $0x0,0x90(%r15)
   23f55:	00 
   23f56:	74 54                	je     23fac <e1000_configure+0xb0>
   23f58:	45 31 e4             	xor    %r12d,%r12d
   23f5b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23f5e: R_X86_64_32S	.rodata.str1.1+0x19d5
   23f62:	49 8b 9f 90 00 00 00 	mov    0x90(%r15),%rbx
   23f69:	e8 00 00 00 00       	callq  23f6e <e1000_configure+0x72>
			23f6a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23f6e:	44 89 e0             	mov    %r12d,%eax
   23f71:	66 c1 e8 09          	shr    $0x9,%ax
   23f75:	83 e0 7f             	and    $0x7f,%eax
   23f78:	48 8b 54 c3 20       	mov    0x20(%rbx,%rax,8),%rdx
   23f7d:	48 85 d2             	test   %rdx,%rdx
   23f80:	74 1e                	je     23fa0 <e1000_configure+0xa4>
   23f82:	4c 89 e0             	mov    %r12,%rax
   23f85:	25 ff 01 00 00       	and    $0x1ff,%eax
   23f8a:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
   23f8f:	74 0f                	je     23fa0 <e1000_configure+0xa4>
   23f91:	49 8b bf f0 02 00 00 	mov    0x2f0(%r15),%rdi
   23f98:	44 89 e6             	mov    %r12d,%esi
   23f9b:	e8 91 ca fd ff       	callq  a31 <e1000_vlan_rx_add_vid>
   23fa0:	49 ff c4             	inc    %r12
   23fa3:	49 81 fc 00 10 00 00 	cmp    $0x1000,%r12
   23faa:	75 af                	jne    23f5b <e1000_configure+0x5f>
   23fac:	4c 89 ff             	mov    %r15,%rdi
   23faf:	e8 bc d0 fd ff       	callq  1070 <e1000_init_manageability>
   23fb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23fb7: R_X86_64_32S	.rodata.str1.1+0x2d4b
   23fbb:	e8 00 00 00 00       	callq  23fc0 <e1000_configure+0xc4>
			23fbc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   23fc0:	49 8b 87 b0 01 00 00 	mov    0x1b0(%r15),%rax
   23fc7:	49 8d 97 b8 03 00 00 	lea    0x3b8(%r15),%rdx
   23fce:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   23fd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			23fd8: R_X86_64_32S	.rodata.str1.1+0xb4
   23fdc:	48 89 55 d0          	mov    %rdx,0xffffffffffffffd0(%rbp)
   23fe0:	4c 8b 70 08          	mov    0x8(%rax),%r14
   23fe4:	44 8b 68 14          	mov    0x14(%rax),%r13d
   23fe8:	8b 42 10             	mov    0x10(%rdx),%eax
   23feb:	83 f8 03             	cmp    $0x3,%eax
   23fee:	19 db                	sbb    %ebx,%ebx
   23ff0:	41 c1 e5 04          	shl    $0x4,%r13d
   23ff4:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   23ffa:	81 c3 08 38 00 00    	add    $0x3808,%ebx
   24000:	48 63 db             	movslq %ebx,%rbx
   24003:	e8 00 00 00 00       	callq  24008 <e1000_configure+0x10c>
			24004: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24008:	49 01 dc             	add    %rbx,%r12
   2400b:	45 89 2c 24          	mov    %r13d,(%r12)
   2400f:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   24013:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   2401a:	4d 89 f5             	mov    %r14,%r13
   2401d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24020: R_X86_64_32S	.rodata.str1.1+0xb4
   24024:	8b 42 10             	mov    0x10(%rdx),%eax
   24027:	83 f8 03             	cmp    $0x3,%eax
   2402a:	19 db                	sbb    %ebx,%ebx
   2402c:	49 c1 ed 20          	shr    $0x20,%r13
   24030:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   24036:	81 c3 04 38 00 00    	add    $0x3804,%ebx
   2403c:	48 63 db             	movslq %ebx,%rbx
   2403f:	e8 00 00 00 00       	callq  24044 <e1000_configure+0x148>
			24040: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24044:	49 01 dc             	add    %rbx,%r12
   24047:	45 89 2c 24          	mov    %r13d,(%r12)
   2404b:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   2404f:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   24056:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24059: R_X86_64_32S	.rodata.str1.1+0xb4
   2405d:	8b 42 10             	mov    0x10(%rdx),%eax
   24060:	83 f8 03             	cmp    $0x3,%eax
   24063:	19 db                	sbb    %ebx,%ebx
   24065:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   2406b:	81 c3 00 38 00 00    	add    $0x3800,%ebx
   24071:	48 63 db             	movslq %ebx,%rbx
   24074:	e8 00 00 00 00       	callq  24079 <e1000_configure+0x17d>
			24075: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24079:	49 01 dc             	add    %rbx,%r12
   2407c:	45 89 34 24          	mov    %r14d,(%r12)
   24080:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   24084:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   2408b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2408e: R_X86_64_32S	.rodata.str1.1+0xb4
   24092:	8b 42 10             	mov    0x10(%rdx),%eax
   24095:	83 f8 03             	cmp    $0x3,%eax
   24098:	19 db                	sbb    %ebx,%ebx
   2409a:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   240a0:	81 c3 18 38 00 00    	add    $0x3818,%ebx
   240a6:	48 63 db             	movslq %ebx,%rbx
   240a9:	e8 00 00 00 00       	callq  240ae <e1000_configure+0x1b2>
			240aa: R_X86_64_PC32	record_function+0xfffffffffffffffc
   240ae:	49 01 dc             	add    %rbx,%r12
   240b1:	31 c0                	xor    %eax,%eax
   240b3:	41 89 04 24          	mov    %eax,(%r12)
   240b7:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   240bb:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   240c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			240c5: R_X86_64_32S	.rodata.str1.1+0xb4
   240c9:	8b 42 10             	mov    0x10(%rdx),%eax
   240cc:	83 f8 03             	cmp    $0x3,%eax
   240cf:	19 db                	sbb    %ebx,%ebx
   240d1:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   240d7:	81 c3 10 38 00 00    	add    $0x3810,%ebx
   240dd:	48 63 db             	movslq %ebx,%rbx
   240e0:	e8 00 00 00 00       	callq  240e5 <e1000_configure+0x1e9>
			240e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   240e5:	49 01 dc             	add    %rbx,%r12
   240e8:	31 c0                	xor    %eax,%eax
   240ea:	41 89 04 24          	mov    %eax,(%r12)
   240ee:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   240f2:	8b 42 10             	mov    0x10(%rdx),%eax
   240f5:	49 8b 97 b0 01 00 00 	mov    0x1b0(%r15),%rdx
   240fc:	83 f8 03             	cmp    $0x3,%eax
   240ff:	19 c0                	sbb    %eax,%eax
   24101:	66 25 20 cc          	and    $0xcc20,%ax
   24105:	66 05 10 38          	add    $0x3810,%ax
   24109:	66 89 42 58          	mov    %ax,0x58(%rdx)
   2410d:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   24111:	8b 42 10             	mov    0x10(%rdx),%eax
   24114:	49 8b 97 b0 01 00 00 	mov    0x1b0(%r15),%rdx
   2411b:	83 f8 03             	cmp    $0x3,%eax
   2411e:	19 c0                	sbb    %eax,%eax
   24120:	66 25 20 cc          	and    $0xcc20,%ax
   24124:	66 05 18 38          	add    $0x3818,%ax
   24128:	66 89 42 5a          	mov    %ax,0x5a(%rdx)
   2412c:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   24130:	83 78 10 0d          	cmpl   $0xd,0x10(%rax)
   24134:	77 14                	ja     2414a <e1000_configure+0x24e>
   24136:	8b 40 1c             	mov    0x1c(%rax),%eax
   24139:	83 f8 01             	cmp    $0x1,%eax
   2413c:	74 05                	je     24143 <e1000_configure+0x247>
   2413e:	83 f8 02             	cmp    $0x2,%eax
   24141:	75 07                	jne    2414a <e1000_configure+0x24e>
   24143:	be 09 00 00 00       	mov    $0x9,%esi
   24148:	eb 05                	jmp    2414f <e1000_configure+0x253>
   2414a:	be 08 00 00 00       	mov    $0x8,%esi
   2414f:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   24153:	8b 42 10             	mov    0x10(%rdx),%eax
   24156:	83 f8 01             	cmp    $0x1,%eax
   24159:	74 18                	je     24173 <e1000_configure+0x277>
   2415b:	83 f8 02             	cmp    $0x2,%eax
   2415e:	74 13                	je     24173 <e1000_configure+0x277>
   24160:	83 f8 11             	cmp    $0x11,%eax
   24163:	b9 08 00 00 00       	mov    $0x8,%ecx
   24168:	ba 07 00 00 00       	mov    $0x7,%edx
   2416d:	74 13                	je     24182 <e1000_configure+0x286>
   2416f:	b2 06                	mov    $0x6,%dl
   24171:	eb 0f                	jmp    24182 <e1000_configure+0x286>
   24173:	be 0a 00 00 00       	mov    $0xa,%esi
   24178:	b9 02 00 00 00       	mov    $0x2,%ecx
   2417d:	ba 0a 00 00 00       	mov    $0xa,%edx
   24182:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   24186:	41 89 cc             	mov    %ecx,%r12d
   24189:	c1 e2 14             	shl    $0x14,%edx
   2418c:	41 c1 e4 0a          	shl    $0xa,%r12d
   24190:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24193: R_X86_64_32S	.rodata.str1.1+0xb4
   24197:	41 09 d4             	or     %edx,%r12d
   2419a:	48 8b 18             	mov    (%rax),%rbx
   2419d:	41 09 f4             	or     %esi,%r12d
   241a0:	e8 00 00 00 00       	callq  241a5 <e1000_configure+0x2a9>
			241a1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   241a5:	48 81 c3 10 04 00 00 	add    $0x410,%rbx
   241ac:	44 89 23             	mov    %r12d,(%rbx)
   241af:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   241b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			241b6: R_X86_64_32S	.rodata.str1.1+0xb4
   241ba:	45 8b af cc 01 00 00 	mov    0x1cc(%r15),%r13d
   241c1:	8b 42 10             	mov    0x10(%rdx),%eax
   241c4:	4c 8b 22             	mov    (%rdx),%r12
   241c7:	83 f8 03             	cmp    $0x3,%eax
   241ca:	19 db                	sbb    %ebx,%ebx
   241cc:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   241d2:	81 c3 20 38 00 00    	add    $0x3820,%ebx
   241d8:	48 63 db             	movslq %ebx,%rbx
   241db:	e8 00 00 00 00       	callq  241e0 <e1000_configure+0x2e4>
			241dc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   241e0:	49 01 dc             	add    %rbx,%r12
   241e3:	45 89 2c 24          	mov    %r13d,(%r12)
   241e7:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   241eb:	83 78 10 04          	cmpl   $0x4,0x10(%rax)
   241ef:	76 20                	jbe    24211 <e1000_configure+0x315>
   241f1:	48 8b 18             	mov    (%rax),%rbx
   241f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			241f7: R_X86_64_32S	.rodata.str1.1+0xb4
   241fb:	45 8b a7 d0 01 00 00 	mov    0x1d0(%r15),%r12d
   24202:	e8 00 00 00 00       	callq  24207 <e1000_configure+0x30b>
			24203: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24207:	48 81 c3 2c 38 00 00 	add    $0x382c,%rbx
   2420e:	44 89 23             	mov    %r12d,(%rbx)
   24211:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   24215:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24218: R_X86_64_32S	.rodata.str1.1+0xae
   2421c:	48 8b 1a             	mov    (%rdx),%rbx
   2421f:	e8 00 00 00 00       	callq  24224 <e1000_configure+0x328>
			24220: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24224:	44 8b ab 00 04 00 00 	mov    0x400(%rbx),%r13d
   2422b:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   2422f:	8b 42 10             	mov    0x10(%rdx),%eax
   24232:	83 f8 0e             	cmp    $0xe,%eax
   24235:	74 05                	je     2423c <e1000_configure+0x340>
   24237:	83 f8 0f             	cmp    $0xf,%eax
   2423a:	75 3d                	jne    24279 <e1000_configure+0x37d>
   2423c:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   24240:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24243: R_X86_64_32S	.rodata.str1.1+0xae
   24247:	48 8b 18             	mov    (%rax),%rbx
   2424a:	e8 00 00 00 00       	callq  2424f <e1000_configure+0x353>
			2424b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2424f:	44 8b a3 40 38 00 00 	mov    0x3840(%rbx),%r12d
   24256:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   2425a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2425d: R_X86_64_32S	.rodata.str1.1+0xb4
   24261:	41 81 cc 00 00 20 00 	or     $0x200000,%r12d
   24268:	48 8b 1a             	mov    (%rdx),%rbx
   2426b:	e8 00 00 00 00       	callq  24270 <e1000_configure+0x374>
			2426c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24270:	48 81 c3 40 38 00 00 	add    $0x3840,%rbx
   24277:	eb 78                	jmp    242f1 <e1000_configure+0x3f5>
   24279:	83 f8 11             	cmp    $0x11,%eax
   2427c:	75 76                	jne    242f4 <e1000_configure+0x3f8>
   2427e:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   24282:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24285: R_X86_64_32S	.rodata.str1.1+0xae
   24289:	48 8b 18             	mov    (%rax),%rbx
   2428c:	e8 00 00 00 00       	callq  24291 <e1000_configure+0x395>
			2428d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24291:	44 8b a3 40 38 00 00 	mov    0x3840(%rbx),%r12d
   24298:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   2429c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2429f: R_X86_64_32S	.rodata.str1.1+0xb4
   242a3:	41 83 cc 01          	or     $0x1,%r12d
   242a7:	48 8b 1a             	mov    (%rdx),%rbx
   242aa:	e8 00 00 00 00       	callq  242af <e1000_configure+0x3b3>
			242ab: R_X86_64_PC32	record_function+0xfffffffffffffffc
   242af:	48 81 c3 40 38 00 00 	add    $0x3840,%rbx
   242b6:	44 89 23             	mov    %r12d,(%rbx)
   242b9:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   242bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			242c0: R_X86_64_32S	.rodata.str1.1+0xae
   242c4:	48 8b 18             	mov    (%rax),%rbx
   242c7:	e8 00 00 00 00       	callq  242cc <e1000_configure+0x3d0>
			242c8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   242cc:	44 8b a3 40 39 00 00 	mov    0x3940(%rbx),%r12d
   242d3:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   242d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			242da: R_X86_64_32S	.rodata.str1.1+0xb4
   242de:	41 83 cc 01          	or     $0x1,%r12d
   242e2:	48 8b 1a             	mov    (%rdx),%rbx
   242e5:	e8 00 00 00 00       	callq  242ea <e1000_configure+0x3ee>
			242e6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   242ea:	48 81 c3 40 39 00 00 	add    $0x3940,%rbx
   242f1:	44 89 23             	mov    %r12d,(%rbx)
   242f4:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
   242f8:	e8 cb c2 fd ff       	callq  5c8 <e1000_config_collision_dist>
   242fd:	41 83 bf cc 01 00 00 	cmpl   $0x0,0x1cc(%r15)
   24304:	00 
   24305:	41 c7 87 c8 01 00 00 	movl   $0x3000000,0x1c8(%r15)
   2430c:	00 00 00 03 
   24310:	74 0b                	je     2431d <e1000_configure+0x421>
   24312:	41 c7 87 c8 01 00 00 	movl   $0x83000000,0x1c8(%r15)
   24319:	00 00 00 83 
   2431d:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   24321:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
   24325:	41 8b 87 c8 01 00 00 	mov    0x1c8(%r15),%eax
   2432c:	77 07                	ja     24335 <e1000_configure+0x439>
   2432e:	0d 00 00 00 10       	or     $0x10000000,%eax
   24333:	eb 05                	jmp    2433a <e1000_configure+0x43e>
   24335:	0d 00 00 00 08       	or     $0x8000000,%eax
   2433a:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   2433e:	41 89 87 c8 01 00 00 	mov    %eax,0x1c8(%r15)
   24345:	83 7a 10 04          	cmpl   $0x4,0x10(%rdx)
   24349:	75 0e                	jne    24359 <e1000_configure+0x45d>
   2434b:	83 7a 44 02          	cmpl   $0x2,0x44(%rdx)
   2434f:	75 08                	jne    24359 <e1000_configure+0x45d>
   24351:	41 c6 87 08 02 00 00 	movb   $0x1,0x208(%r15)
   24358:	01 
   24359:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   2435d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24360: R_X86_64_32S	.rodata.str1.1+0xb4
   24364:	41 81 e5 0f f0 ff ff 	and    $0xfffff00f,%r13d
   2436b:	41 81 cd f8 00 00 01 	or     $0x10000f8,%r13d
   24372:	48 8b 18             	mov    (%rax),%rbx
   24375:	e8 00 00 00 00       	callq  2437a <e1000_configure+0x47e>
			24376: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2437a:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   24381:	44 89 2b             	mov    %r13d,(%rbx)
   24384:	4c 89 ff             	mov    %r15,%rdi
   24387:	31 db                	xor    %ebx,%ebx
   24389:	e8 08 cb fd ff       	callq  e96 <e1000_setup_rctl>
   2438e:	4c 89 ff             	mov    %r15,%rdi
   24391:	e8 93 c7 fd ff       	callq  b29 <e1000_configure_rx>
   24396:	41 3b 9f b4 02 00 00 	cmp    0x2b4(%r15),%ebx
   2439d:	7d 33                	jge    243d2 <e1000_configure+0x4d6>
   2439f:	48 63 c3             	movslq %ebx,%rax
   243a2:	31 c9                	xor    %ecx,%ecx
   243a4:	48 6b f0 30          	imul   $0x30,%rax,%rsi
   243a8:	49 03 b7 20 02 00 00 	add    0x220(%r15),%rsi
   243af:	8b 46 18             	mov    0x18(%rsi),%eax
   243b2:	39 46 1c             	cmp    %eax,0x1c(%rsi)
   243b5:	77 03                	ja     243ba <e1000_configure+0x4be>
   243b7:	8b 4e 14             	mov    0x14(%rsi),%ecx
   243ba:	8b 56 1c             	mov    0x1c(%rsi),%edx
   243bd:	4c 89 ff             	mov    %r15,%rdi
   243c0:	ff c3                	inc    %ebx
   243c2:	ff ca                	dec    %edx
   243c4:	2b 56 18             	sub    0x18(%rsi),%edx
   243c7:	01 ca                	add    %ecx,%edx
   243c9:	41 ff 97 18 02 00 00 	callq  *0x218(%r15)
   243d0:	eb c4                	jmp    24396 <e1000_configure+0x49a>
   243d2:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   243d6:	48 8b 82 10 03 00 00 	mov    0x310(%rdx),%rax
   243dd:	49 89 87 c0 01 00 00 	mov    %rax,0x1c0(%r15)
   243e4:	48 83 c4 18          	add    $0x18,%rsp
   243e8:	5b                   	pop    %rbx
   243e9:	41 5c                	pop    %r12
   243eb:	41 5d                	pop    %r13
   243ed:	41 5e                	pop    %r14
   243ef:	41 5f                	pop    %r15
   243f1:	c9                   	leaveq 
   243f2:	c3                   	retq   

00000000000243f3 <e1000_up>:
   243f3:	55                   	push   %rbp
   243f4:	48 89 e5             	mov    %rsp,%rbp
   243f7:	41 54                	push   %r12
   243f9:	53                   	push   %rbx
   243fa:	48 89 fb             	mov    %rdi,%rbx
   243fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24400: R_X86_64_32S	.rodata.str1.1+0x2d5e
   24404:	e8 00 00 00 00       	callq  24409 <e1000_up+0x16>
			24405: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24409:	48 89 df             	mov    %rbx,%rdi
   2440c:	e8 eb fa ff ff       	callq  23efc <e1000_configure>
   24411:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24414: R_X86_64_32S	.rodata.str1.1+0x2c01
   24418:	e8 00 00 00 00       	callq  2441d <e1000_up+0x2a>
			24419: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2441d:	f0 0f ba b3 c8 07 00 	lock btrl $0x2,0x7c8(%rbx)
   24424:	00 02 
   24426:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24429: R_X86_64_32S	.rodata.str1.1+0x2d67
   2442d:	4c 8d a3 28 02 00 00 	lea    0x228(%rbx),%r12
   24434:	e8 00 00 00 00       	callq  24439 <e1000_up+0x46>
			24435: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24439:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2443c: R_X86_64_32S	.rodata.str1.1+0x15d4
   24440:	e8 00 00 00 00       	callq  24445 <e1000_up+0x52>
			24441: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24445:	f6 83 38 02 00 00 01 	testb  $0x1,0x238(%rbx)
   2444c:	75 04                	jne    24452 <e1000_up+0x5f>
   2444e:	0f 0b                	ud2a   
   24450:	eb fe                	jmp    24450 <e1000_up+0x5d>
   24452:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24455: R_X86_64_32S	.rodata.str1.1+0x2c01
   24459:	e8 00 00 00 00       	callq  2445e <e1000_up+0x6b>
			2445a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2445e:	f0 41 0f ba 74 24 10 	lock btrl $0x0,0x10(%r12)
   24465:	00 
   24466:	48 89 df             	mov    %rbx,%rdi
   24469:	e8 2b ce fd ff       	callq  1299 <e1000_irq_enable>
   2446e:	48 8b 9b b8 03 00 00 	mov    0x3b8(%rbx),%rbx
   24475:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24478: R_X86_64_32S	.rodata.str1.1+0xb4
   2447c:	e8 00 00 00 00       	callq  24481 <e1000_up+0x8e>
			2447d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24481:	b8 04 00 00 00       	mov    $0x4,%eax
   24486:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   2448d:	89 03                	mov    %eax,(%rbx)
   2448f:	5b                   	pop    %rbx
   24490:	41 5c                	pop    %r12
   24492:	c9                   	leaveq 
   24493:	30 c0                	xor    %al,%al
   24495:	c3                   	retq   

0000000000024496 <e1000_io_resume>:
   24496:	55                   	push   %rbp
   24497:	48 89 e5             	mov    %rsp,%rbp
   2449a:	41 55                	push   %r13
   2449c:	41 54                	push   %r12
   2449e:	53                   	push   %rbx
   2449f:	48 89 fb             	mov    %rdi,%rbx
   244a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244a5: R_X86_64_32S	.rodata.str1.1+0x2d8d
   244a9:	48 83 ec 08          	sub    $0x8,%rsp
   244ad:	e8 00 00 00 00       	callq  244b2 <e1000_io_resume+0x1c>
			244ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
   244b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244b5: R_X86_64_32S	.rodata.str1.1+0x2d9d
   244b9:	e8 00 00 00 00       	callq  244be <e1000_io_resume+0x28>
			244ba: R_X86_64_PC32	record_function+0xfffffffffffffffc
   244be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244c1: R_X86_64_32S	.rodata.str1.1+0x2dad
   244c5:	e8 00 00 00 00       	callq  244ca <e1000_io_resume+0x34>
			244c6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   244ca:	4c 8b ab f8 01 00 00 	mov    0x1f8(%rbx),%r13
   244d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244d4: R_X86_64_32S	.rodata.str1.1+0x1be
   244d8:	e8 00 00 00 00       	callq  244dd <e1000_io_resume+0x47>
			244d9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   244dd:	4d 8d a5 00 08 00 00 	lea    0x800(%r13),%r12
   244e4:	4c 89 e7             	mov    %r12,%rdi
   244e7:	e8 84 cb fd ff       	callq  1070 <e1000_init_manageability>
   244ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244ef: R_X86_64_32S	.rodata.str1.1+0x15c6
   244f3:	e8 00 00 00 00       	callq  244f8 <e1000_io_resume+0x62>
			244f4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   244f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244fb: R_X86_64_32S	.rodata.str1.1+0x15d4
   244ff:	e8 00 00 00 00       	callq  24504 <e1000_io_resume+0x6e>
			24500: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24504:	41 f6 45 48 01       	testb  $0x1,0x48(%r13)
   24509:	74 1c                	je     24527 <e1000_io_resume+0x91>
   2450b:	4c 89 e7             	mov    %r12,%rdi
   2450e:	e8 e0 fe ff ff       	callq  243f3 <e1000_up>
   24513:	85 c0                	test   %eax,%eax
   24515:	74 10                	je     24527 <e1000_io_resume+0x91>
   24517:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2451a: R_X86_64_32S	str_1049785182
   2451e:	31 c0                	xor    %eax,%eax
   24520:	e8 00 00 00 00       	callq  24525 <e1000_io_resume+0x8f>
			24521: R_X86_64_PC32	printk+0xfffffffffffffffc
   24525:	eb 2a                	jmp    24551 <e1000_io_resume+0xbb>
   24527:	49 8d 9c 24 b8 03 00 	lea    0x3b8(%r12),%rbx
   2452e:	00 
   2452f:	4c 89 ef             	mov    %r13,%rdi
   24532:	e8 7f 6d fe ff       	callq  b2b6 <netif_device_attach>
   24537:	83 7b 10 10          	cmpl   $0x10,0x10(%rbx)
   2453b:	75 0c                	jne    24549 <e1000_io_resume+0xb3>
   2453d:	48 89 df             	mov    %rbx,%rdi
   24540:	e8 aa bc fd ff       	callq  1ef <e1000_check_mng_mode>
   24545:	84 c0                	test   %al,%al
   24547:	75 08                	jne    24551 <e1000_io_resume+0xbb>
   24549:	4c 89 e7             	mov    %r12,%rdi
   2454c:	e8 e2 cb fd ff       	callq  1133 <e1000_get_hw_control>
   24551:	41 5a                	pop    %r10
   24553:	5b                   	pop    %rbx
   24554:	41 5c                	pop    %r12
   24556:	41 5d                	pop    %r13
   24558:	c9                   	leaveq 
   24559:	c3                   	retq   

000000000002455a <e1000_free_desc_rings>:
   2455a:	55                   	push   %rbp
   2455b:	48 89 e5             	mov    %rsp,%rbp
   2455e:	41 57                	push   %r15
   24560:	41 56                	push   %r14
   24562:	41 55                	push   %r13
   24564:	41 54                	push   %r12
   24566:	53                   	push   %rbx
   24567:	48 89 fb             	mov    %rdi,%rbx
   2456a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2456d: R_X86_64_32S	.rodata.str1.1+0x2dbd
   24571:	4c 8d b3 90 07 00 00 	lea    0x790(%rbx),%r14
   24578:	48 83 ec 68          	sub    $0x68,%rsp
   2457c:	e8 00 00 00 00       	callq  24581 <e1000_free_desc_rings+0x27>
			2457d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24581:	48 8d 83 30 07 00 00 	lea    0x730(%rbx),%rax
   24588:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   2458c:	48 83 bb 30 07 00 00 	cmpq   $0x0,0x730(%rbx)
   24593:	00 
   24594:	4c 8b bb f8 02 00 00 	mov    0x2f8(%rbx),%r15
   2459b:	0f 84 ea 00 00 00    	je     2468b <e1000_free_desc_rings+0x131>
   245a1:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
   245a6:	0f 84 df 00 00 00    	je     2468b <e1000_free_desc_rings+0x131>
   245ac:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   245b3:	00 
   245b4:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   245b8:	8b 45 c0             	mov    0xffffffffffffffc0(%rbp),%eax
   245bb:	3b 42 14             	cmp    0x14(%rdx),%eax
   245be:	0f 83 c7 00 00 00    	jae    2468b <e1000_free_desc_rings+0x131>
   245c4:	4c 63 e0             	movslq %eax,%r12
   245c7:	49 c1 e4 05          	shl    $0x5,%r12
   245cb:	4c 89 e0             	mov    %r12,%rax
   245ce:	48 03 42 20          	add    0x20(%rdx),%rax
   245d2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   245d6:	48 85 d2             	test   %rdx,%rdx
   245d9:	48 89 95 78 ff ff ff 	mov    %rdx,0xffffffffffffff78(%rbp)
   245e0:	0f 84 86 00 00 00    	je     2466c <e1000_free_desc_rings+0x112>
   245e6:	8b 40 18             	mov    0x18(%rax),%eax
   245e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			245ec: R_X86_64_32S	.rodata.str1.1+0x2c84
   245f0:	45 31 ed             	xor    %r13d,%r13d
   245f3:	66 89 45 86          	mov    %ax,0xffffffffffffff86(%rbp)
   245f7:	e8 00 00 00 00       	callq  245fc <e1000_free_desc_rings+0xa2>
			245f8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   245fc:	49 8d 87 80 00 00 00 	lea    0x80(%r15),%rax
   24603:	4d 85 ff             	test   %r15,%r15
   24606:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24609: R_X86_64_32S	.rodata.str1.1+0x2c95
   2460d:	4c 0f 45 e8          	cmovne %rax,%r13
   24611:	e8 00 00 00 00       	callq  24616 <e1000_free_desc_rings+0xbc>
			24612: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24616:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24619: R_X86_64_32S	.rodata.str1.1+0x2ca6
   2461d:	e8 00 00 00 00       	callq  24622 <e1000_free_desc_rings+0xc8>
			2461e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24622:	4d 85 ed             	test   %r13,%r13
   24625:	75 09                	jne    24630 <e1000_free_desc_rings+0xd6>
   24627:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 2462e <e1000_free_desc_rings+0xd4>
			2462a: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   2462e:	eb 12                	jmp    24642 <e1000_free_desc_rings+0xe8>
   24630:	49 8b 9d e8 01 00 00 	mov    0x1e8(%r13),%rbx
   24637:	48 85 db             	test   %rbx,%rbx
   2463a:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 24642 <e1000_free_desc_rings+0xe8>
   24641:	00 
			2463e: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24642:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24645: R_X86_64_32S	.rodata.str1.1+0x2cb2
   24649:	e8 00 00 00 00       	callq  2464e <e1000_free_desc_rings+0xf4>
			2464a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2464e:	48 8b 43 20          	mov    0x20(%rbx),%rax
   24652:	48 85 c0             	test   %rax,%rax
   24655:	74 15                	je     2466c <e1000_free_desc_rings+0x112>
   24657:	0f b7 55 86          	movzwl 0xffffffffffffff86(%rbp),%edx
   2465b:	b9 01 00 00 00       	mov    $0x1,%ecx
   24660:	48 8b b5 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rsi
   24667:	4c 89 ef             	mov    %r13,%rdi
   2466a:	ff d0                	callq  *%rax
   2466c:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   24670:	48 8b 42 20          	mov    0x20(%rdx),%rax
   24674:	4a 8b 3c 20          	mov    (%rax,%r12,1),%rdi
   24678:	48 85 ff             	test   %rdi,%rdi
   2467b:	74 05                	je     24682 <e1000_free_desc_rings+0x128>
   2467d:	e8 00 00 00 00       	callq  24682 <e1000_free_desc_rings+0x128>
			2467e: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   24682:	48 ff 45 c0          	incq   0xffffffffffffffc0(%rbp)
   24686:	e9 29 ff ff ff       	jmpq   245b4 <e1000_free_desc_rings+0x5a>
   2468b:	49 83 3e 00          	cmpq   $0x0,(%r14)
   2468f:	0f 84 dd 00 00 00    	je     24772 <e1000_free_desc_rings+0x218>
   24695:	49 83 7e 20 00       	cmpq   $0x0,0x20(%r14)
   2469a:	0f 84 d2 00 00 00    	je     24772 <e1000_free_desc_rings+0x218>
   246a0:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   246a7:	00 
   246a8:	8b 45 b8             	mov    0xffffffffffffffb8(%rbp),%eax
   246ab:	41 3b 46 14          	cmp    0x14(%r14),%eax
   246af:	0f 83 bd 00 00 00    	jae    24772 <e1000_free_desc_rings+0x218>
   246b5:	4c 63 e0             	movslq %eax,%r12
   246b8:	49 c1 e4 05          	shl    $0x5,%r12
   246bc:	4c 89 e0             	mov    %r12,%rax
   246bf:	49 03 46 20          	add    0x20(%r14),%rax
   246c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   246c7:	48 85 d2             	test   %rdx,%rdx
   246ca:	48 89 55 88          	mov    %rdx,0xffffffffffffff88(%rbp)
   246ce:	0f 84 83 00 00 00    	je     24757 <e1000_free_desc_rings+0x1fd>
   246d4:	8b 40 18             	mov    0x18(%rax),%eax
   246d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			246da: R_X86_64_32S	.rodata.str1.1+0x2c84
   246de:	45 31 ed             	xor    %r13d,%r13d
   246e1:	66 89 45 96          	mov    %ax,0xffffffffffffff96(%rbp)
   246e5:	e8 00 00 00 00       	callq  246ea <e1000_free_desc_rings+0x190>
			246e6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   246ea:	49 8d 87 80 00 00 00 	lea    0x80(%r15),%rax
   246f1:	4d 85 ff             	test   %r15,%r15
   246f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			246f7: R_X86_64_32S	.rodata.str1.1+0x2c95
   246fb:	4c 0f 45 e8          	cmovne %rax,%r13
   246ff:	e8 00 00 00 00       	callq  24704 <e1000_free_desc_rings+0x1aa>
			24700: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24704:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24707: R_X86_64_32S	.rodata.str1.1+0x2ca6
   2470b:	e8 00 00 00 00       	callq  24710 <e1000_free_desc_rings+0x1b6>
			2470c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24710:	4d 85 ed             	test   %r13,%r13
   24713:	75 09                	jne    2471e <e1000_free_desc_rings+0x1c4>
   24715:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 2471c <e1000_free_desc_rings+0x1c2>
			24718: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   2471c:	eb 12                	jmp    24730 <e1000_free_desc_rings+0x1d6>
   2471e:	49 8b 9d e8 01 00 00 	mov    0x1e8(%r13),%rbx
   24725:	48 85 db             	test   %rbx,%rbx
   24728:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 24730 <e1000_free_desc_rings+0x1d6>
   2472f:	00 
			2472c: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24730:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24733: R_X86_64_32S	.rodata.str1.1+0x2cb2
   24737:	e8 00 00 00 00       	callq  2473c <e1000_free_desc_rings+0x1e2>
			24738: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2473c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   24740:	48 85 c0             	test   %rax,%rax
   24743:	74 12                	je     24757 <e1000_free_desc_rings+0x1fd>
   24745:	0f b7 55 96          	movzwl 0xffffffffffffff96(%rbp),%edx
   24749:	b9 02 00 00 00       	mov    $0x2,%ecx
   2474e:	48 8b 75 88          	mov    0xffffffffffffff88(%rbp),%rsi
   24752:	4c 89 ef             	mov    %r13,%rdi
   24755:	ff d0                	callq  *%rax
   24757:	49 8b 46 20          	mov    0x20(%r14),%rax
   2475b:	4a 8b 3c 20          	mov    (%rax,%r12,1),%rdi
   2475f:	48 85 ff             	test   %rdi,%rdi
   24762:	74 05                	je     24769 <e1000_free_desc_rings+0x20f>
   24764:	e8 00 00 00 00       	callq  24769 <e1000_free_desc_rings+0x20f>
			24765: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   24769:	48 ff 45 b8          	incq   0xffffffffffffffb8(%rbp)
   2476d:	e9 36 ff ff ff       	jmpq   246a8 <e1000_free_desc_rings+0x14e>
   24772:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   24776:	48 8b 00             	mov    (%rax),%rax
   24779:	48 85 c0             	test   %rax,%rax
   2477c:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   24780:	0f 84 d0 00 00 00    	je     24856 <e1000_free_desc_rings+0x2fc>
   24786:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   2478a:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   2478e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24791: R_X86_64_32S	.rodata.str1.1+0x2dd3
   24795:	45 31 ed             	xor    %r13d,%r13d
   24798:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   2479c:	48 89 55 a8          	mov    %rdx,0xffffffffffffffa8(%rbp)
   247a0:	8b 40 10             	mov    0x10(%rax),%eax
   247a3:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   247a6:	e8 00 00 00 00       	callq  247ab <e1000_free_desc_rings+0x251>
			247a7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   247ab:	49 8d 87 80 00 00 00 	lea    0x80(%r15),%rax
   247b2:	4d 85 ff             	test   %r15,%r15
   247b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			247b8: R_X86_64_32S	.rodata.str1.1+0x2de7
   247bc:	4c 0f 45 e8          	cmovne %rax,%r13
   247c0:	e8 00 00 00 00       	callq  247c5 <e1000_free_desc_rings+0x26b>
			247c1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   247c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			247c8: R_X86_64_32S	.rodata.str1.1+0x2ca6
   247cc:	e8 00 00 00 00       	callq  247d1 <e1000_free_desc_rings+0x277>
			247cd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   247d1:	4d 85 ed             	test   %r13,%r13
   247d4:	75 09                	jne    247df <e1000_free_desc_rings+0x285>
   247d6:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 247dd <e1000_free_desc_rings+0x283>
			247d9: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   247dd:	eb 12                	jmp    247f1 <e1000_free_desc_rings+0x297>
   247df:	4d 8b a5 e8 01 00 00 	mov    0x1e8(%r13),%r12
   247e6:	4d 85 e4             	test   %r12,%r12
   247e9:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 247f1 <e1000_free_desc_rings+0x297>
   247f0:	00 
			247ed: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   247f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			247f4: R_X86_64_32S	.rodata.str1.1+0x2df9
   247f8:	e8 00 00 00 00       	callq  247fd <e1000_free_desc_rings+0x2a3>
			247f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   247fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24800: R_X86_64_32S	.rodata.str1.1+0x2e10
   24804:	e8 00 00 00 00       	callq  24809 <e1000_free_desc_rings+0x2af>
			24805: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24809:	9c                   	pushfq 
   2480a:	5b                   	pop    %rbx
   2480b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2480e: R_X86_64_32S	.rodata.str1.1+0x2e1f
   24812:	e8 00 00 00 00       	callq  24817 <e1000_free_desc_rings+0x2bd>
			24813: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24817:	80 e7 02             	and    $0x2,%bh
   2481a:	75 15                	jne    24831 <e1000_free_desc_rings+0x2d7>
   2481c:	31 d2                	xor    %edx,%edx
   2481e:	be 29 01 00 00       	mov    $0x129,%esi
   24823:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24826: R_X86_64_32S	str_366789432
   2482a:	31 c0                	xor    %eax,%eax
   2482c:	e8 00 00 00 00       	callq  24831 <e1000_free_desc_rings+0x2d7>
			2482d: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   24831:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   24836:	48 85 c0             	test   %rax,%rax
   24839:	74 10                	je     2484b <e1000_free_desc_rings+0x2f1>
   2483b:	8b 75 98             	mov    0xffffffffffffff98(%rbp),%esi
   2483e:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   24842:	4c 89 ef             	mov    %r13,%rdi
   24845:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   24849:	ff d0                	callq  *%rax
   2484b:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   2484f:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   24856:	49 8b 06             	mov    (%r14),%rax
   24859:	48 85 c0             	test   %rax,%rax
   2485c:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   24860:	0f 84 c5 00 00 00    	je     2492b <e1000_free_desc_rings+0x3d1>
   24866:	49 8b 56 08          	mov    0x8(%r14),%rdx
   2486a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2486d: R_X86_64_32S	.rodata.str1.1+0x2dd3
   24871:	45 31 ed             	xor    %r13d,%r13d
   24874:	48 89 55 b0          	mov    %rdx,0xffffffffffffffb0(%rbp)
   24878:	41 8b 46 10          	mov    0x10(%r14),%eax
   2487c:	89 45 9c             	mov    %eax,0xffffffffffffff9c(%rbp)
   2487f:	e8 00 00 00 00       	callq  24884 <e1000_free_desc_rings+0x32a>
			24880: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24884:	49 8d 87 80 00 00 00 	lea    0x80(%r15),%rax
   2488b:	4d 85 ff             	test   %r15,%r15
   2488e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24891: R_X86_64_32S	.rodata.str1.1+0x2de7
   24895:	4c 0f 45 e8          	cmovne %rax,%r13
   24899:	e8 00 00 00 00       	callq  2489e <e1000_free_desc_rings+0x344>
			2489a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2489e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			248a1: R_X86_64_32S	.rodata.str1.1+0x2ca6
   248a5:	e8 00 00 00 00       	callq  248aa <e1000_free_desc_rings+0x350>
			248a6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   248aa:	4d 85 ed             	test   %r13,%r13
   248ad:	75 09                	jne    248b8 <e1000_free_desc_rings+0x35e>
   248af:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 248b6 <e1000_free_desc_rings+0x35c>
			248b2: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   248b6:	eb 12                	jmp    248ca <e1000_free_desc_rings+0x370>
   248b8:	4d 8b a5 e8 01 00 00 	mov    0x1e8(%r13),%r12
   248bf:	4d 85 e4             	test   %r12,%r12
   248c2:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 248ca <e1000_free_desc_rings+0x370>
   248c9:	00 
			248c6: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   248ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			248cd: R_X86_64_32S	.rodata.str1.1+0x2df9
   248d1:	e8 00 00 00 00       	callq  248d6 <e1000_free_desc_rings+0x37c>
			248d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   248d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			248d9: R_X86_64_32S	.rodata.str1.1+0x2e10
   248dd:	e8 00 00 00 00       	callq  248e2 <e1000_free_desc_rings+0x388>
			248de: R_X86_64_PC32	record_function+0xfffffffffffffffc
   248e2:	9c                   	pushfq 
   248e3:	5b                   	pop    %rbx
   248e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			248e7: R_X86_64_32S	.rodata.str1.1+0x2e1f
   248eb:	e8 00 00 00 00       	callq  248f0 <e1000_free_desc_rings+0x396>
			248ec: R_X86_64_PC32	record_function+0xfffffffffffffffc
   248f0:	80 e7 02             	and    $0x2,%bh
   248f3:	75 15                	jne    2490a <e1000_free_desc_rings+0x3b0>
   248f5:	31 d2                	xor    %edx,%edx
   248f7:	be 29 01 00 00       	mov    $0x129,%esi
   248fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			248ff: R_X86_64_32S	str_366789432
   24903:	31 c0                	xor    %eax,%eax
   24905:	e8 00 00 00 00       	callq  2490a <e1000_free_desc_rings+0x3b0>
			24906: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   2490a:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   2490f:	48 85 c0             	test   %rax,%rax
   24912:	74 10                	je     24924 <e1000_free_desc_rings+0x3ca>
   24914:	8b 75 9c             	mov    0xffffffffffffff9c(%rbp),%esi
   24917:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   2491b:	4c 89 ef             	mov    %r13,%rdi
   2491e:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   24922:	ff d0                	callq  *%rax
   24924:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   2492b:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   2492f:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
   24933:	e8 00 00 00 00       	callq  24938 <e1000_free_desc_rings+0x3de>
			24934: R_X86_64_PC32	kfree+0xfffffffffffffffc
   24938:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   2493c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   24943:	00 
   24944:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   24948:	e8 00 00 00 00       	callq  2494d <e1000_free_desc_rings+0x3f3>
			24949: R_X86_64_PC32	kfree+0xfffffffffffffffc
   2494d:	49 c7 46 20 00 00 00 	movq   $0x0,0x20(%r14)
   24954:	00 
   24955:	48 83 c4 68          	add    $0x68,%rsp
   24959:	5b                   	pop    %rbx
   2495a:	41 5c                	pop    %r12
   2495c:	41 5d                	pop    %r13
   2495e:	41 5e                	pop    %r14
   24960:	41 5f                	pop    %r15
   24962:	c9                   	leaveq 
   24963:	c3                   	retq   

0000000000024964 <e1000_loopback_test>:
   24964:	55                   	push   %rbp
   24965:	48 89 e5             	mov    %rsp,%rbp
   24968:	41 57                	push   %r15
   2496a:	41 56                	push   %r14
   2496c:	41 55                	push   %r13
   2496e:	41 54                	push   %r12
   24970:	53                   	push   %rbx
   24971:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
   24978:	48 89 bd f0 fe ff ff 	mov    %rdi,0xfffffffffffffef0(%rbp)
   2497f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24982: R_X86_64_32S	.rodata.str1.1+0x2e37
   24986:	48 89 b5 e8 fe ff ff 	mov    %rsi,0xfffffffffffffee8(%rbp)
   2498d:	e8 00 00 00 00       	callq  24992 <e1000_loopback_test+0x2e>
			2498e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24992:	4c 8b bd f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r15
   24999:	49 81 c7 b8 03 00 00 	add    $0x3b8,%r15
   249a0:	4c 89 ff             	mov    %r15,%rdi
   249a3:	e8 6c b7 fd ff       	callq  114 <e1000_check_phy_reset_block>
   249a8:	85 c0                	test   %eax,%eax
   249aa:	74 3f                	je     249eb <e1000_loopback_test+0x87>
   249ac:	48 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rax
   249b3:	f6 80 c0 07 00 00 01 	testb  $0x1,0x7c0(%rax)
   249ba:	74 1c                	je     249d8 <e1000_loopback_test+0x74>
   249bc:	48 8b b0 f0 02 00 00 	mov    0x2f0(%rax),%rsi
   249c3:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			249c6: R_X86_64_32S	str_436346563
   249ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			249cd: R_X86_64_32S	str_16094602
   249d1:	31 c0                	xor    %eax,%eax
   249d3:	e8 00 00 00 00       	callq  249d8 <e1000_loopback_test+0x74>
			249d4: R_X86_64_PC32	printk+0xfffffffffffffffc
   249d8:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   249df:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   249e6:	e9 ad 0f 00 00       	jmpq   25998 <e1000_loopback_test+0x1034>
   249eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			249ee: R_X86_64_32S	.rodata.str1.1+0x2e4b
   249f2:	e8 00 00 00 00       	callq  249f7 <e1000_loopback_test+0x93>
			249f3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   249f7:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   249fe:	4c 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r8
   24a05:	4c 8b b5 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r14
   24a0c:	48 81 c1 90 07 00 00 	add    $0x790,%rcx
   24a13:	48 89 8d 18 ff ff ff 	mov    %rcx,0xffffffffffffff18(%rbp)
   24a1a:	4d 8b 80 f8 02 00 00 	mov    0x2f8(%r8),%r8
   24a21:	49 81 c6 30 07 00 00 	add    $0x730,%r14
   24a28:	4c 89 85 f8 fe ff ff 	mov    %r8,0xfffffffffffffef8(%rbp)
   24a2f:	41 83 7e 14 00       	cmpl   $0x0,0x14(%r14)
   24a34:	75 08                	jne    24a3e <e1000_loopback_test+0xda>
   24a36:	41 c7 46 14 00 01 00 	movl   $0x100,0x14(%r14)
   24a3d:	00 
   24a3e:	41 8b 5e 14          	mov    0x14(%r14),%ebx
   24a42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24a45: R_X86_64_32S	.rodata.str1.1+0x2abf
   24a49:	e8 00 00 00 00       	callq  24a4e <e1000_loopback_test+0xea>
			24a4a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24a4e:	31 c0                	xor    %eax,%eax
   24a50:	48 81 fb ff ff ff 07 	cmp    $0x7ffffff,%rbx
   24a57:	77 11                	ja     24a6a <e1000_loopback_test+0x106>
   24a59:	48 c1 e3 05          	shl    $0x5,%rbx
   24a5d:	be d0 80 00 00       	mov    $0x80d0,%esi
   24a62:	48 89 df             	mov    %rbx,%rdi
   24a65:	e8 00 00 00 00       	callq  24a6a <e1000_loopback_test+0x106>
			24a66: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   24a6a:	48 85 c0             	test   %rax,%rax
   24a6d:	49 89 46 20          	mov    %rax,0x20(%r14)
   24a71:	0f 84 b8 08 00 00    	je     2532f <e1000_loopback_test+0x9cb>
   24a77:	41 8b 46 14          	mov    0x14(%r14),%eax
   24a7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24a7e: R_X86_64_32S	.rodata.str1.1+0x2e62
   24a82:	45 31 e4             	xor    %r12d,%r12d
   24a85:	c1 e0 04             	shl    $0x4,%eax
   24a88:	05 ff 0f 00 00       	add    $0xfff,%eax
   24a8d:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   24a92:	89 85 3c ff ff ff    	mov    %eax,0xffffffffffffff3c(%rbp)
   24a98:	41 89 46 10          	mov    %eax,0x10(%r14)
   24a9c:	e8 00 00 00 00       	callq  24aa1 <e1000_loopback_test+0x13d>
			24a9d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24aa1:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   24aa8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24aab: R_X86_64_32S	.rodata.str1.1+0x2e77
   24aaf:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   24ab3:	48 83 bd f8 fe ff ff 	cmpq   $0x0,0xfffffffffffffef8(%rbp)
   24aba:	00 
   24abb:	4c 0f 45 e0          	cmovne %rax,%r12
   24abf:	49 8d 46 08          	lea    0x8(%r14),%rax
   24ac3:	48 89 85 10 ff ff ff 	mov    %rax,0xffffffffffffff10(%rbp)
   24aca:	e8 00 00 00 00       	callq  24acf <e1000_loopback_test+0x16b>
			24acb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24acf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24ad2: R_X86_64_32S	.rodata.str1.1+0x2ca6
   24ad6:	e8 00 00 00 00       	callq  24adb <e1000_loopback_test+0x177>
			24ad7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24adb:	4d 85 e4             	test   %r12,%r12
   24ade:	75 15                	jne    24af5 <e1000_loopback_test+0x191>
   24ae0:	4c 8b 2d 00 00 00 00 	mov    0(%rip),%r13        # 24ae7 <e1000_loopback_test+0x183>
			24ae3: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24ae7:	bb 21 00 00 00       	mov    $0x21,%ebx
   24aec:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
			24aef: R_X86_64_32S	x86_dma_fallback_dev
   24af3:	eb 1b                	jmp    24b10 <e1000_loopback_test+0x1ac>
   24af5:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   24afc:	00 
   24afd:	bb 20 00 00 00       	mov    $0x20,%ebx
   24b02:	48 85 c0             	test   %rax,%rax
   24b05:	49 89 c5             	mov    %rax,%r13
   24b08:	4c 0f 44 2d 00 00 00 	cmove  0(%rip),%r13        # 24b10 <e1000_loopback_test+0x1ac>
   24b0f:	00 
			24b0c: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24b10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24b13: R_X86_64_32S	.rodata.str1.1+0x2e8a
   24b17:	e8 00 00 00 00       	callq  24b1c <e1000_loopback_test+0x1b8>
			24b18: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24b1c:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   24b23:	00 
   24b24:	48 85 c0             	test   %rax,%rax
   24b27:	74 74                	je     24b9d <e1000_loopback_test+0x239>
   24b29:	48 83 38 00          	cmpq   $0x0,(%rax)
   24b2d:	74 6e                	je     24b9d <e1000_loopback_test+0x239>
   24b2f:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   24b34:	74 67                	je     24b9d <e1000_loopback_test+0x239>
   24b36:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24b39: R_X86_64_32S	.rodata.str1.1+0x2ea0
   24b3d:	e8 00 00 00 00       	callq  24b42 <e1000_loopback_test+0x1de>
			24b3e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24b42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24b45: R_X86_64_32S	.rodata.str1.1+0x2ebd
   24b49:	e8 00 00 00 00       	callq  24b4e <e1000_loopback_test+0x1ea>
			24b4a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24b4e:	49 8b 94 24 b8 01 00 	mov    0x1b8(%r12),%rdx
   24b55:	00 
   24b56:	48 85 d2             	test   %rdx,%rdx
   24b59:	75 07                	jne    24b62 <e1000_loopback_test+0x1fe>
   24b5b:	f6 c3 01             	test   $0x1,%bl
   24b5e:	75 0b                	jne    24b6b <e1000_loopback_test+0x207>
   24b60:	eb 1d                	jmp    24b7f <e1000_loopback_test+0x21b>
   24b62:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   24b69:	77 05                	ja     24b70 <e1000_loopback_test+0x20c>
   24b6b:	83 cb 01             	or     $0x1,%ebx
   24b6e:	eb 0a                	jmp    24b7a <e1000_loopback_test+0x216>
   24b70:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   24b75:	48 39 c2             	cmp    %rax,%rdx
   24b78:	77 08                	ja     24b82 <e1000_loopback_test+0x21e>
   24b7a:	f6 c3 01             	test   $0x1,%bl
   24b7d:	75 03                	jne    24b82 <e1000_loopback_test+0x21e>
   24b7f:	83 cb 04             	or     $0x4,%ebx
   24b82:	8b b5 3c ff ff ff    	mov    0xffffffffffffff3c(%rbp),%esi
   24b88:	48 8b 95 10 ff ff ff 	mov    0xffffffffffffff10(%rbp),%rdx
   24b8f:	4c 89 e7             	mov    %r12,%rdi
   24b92:	89 d9                	mov    %ebx,%ecx
   24b94:	41 ff 55 08          	callq  *0x8(%r13)
   24b98:	48 89 c7             	mov    %rax,%rdi
   24b9b:	eb 02                	jmp    24b9f <e1000_loopback_test+0x23b>
   24b9d:	31 ff                	xor    %edi,%edi
   24b9f:	48 85 ff             	test   %rdi,%rdi
   24ba2:	49 89 3e             	mov    %rdi,(%r14)
   24ba5:	bb 02 00 00 00       	mov    $0x2,%ebx
   24baa:	0f 84 84 07 00 00    	je     25334 <e1000_loopback_test+0x9d0>
   24bb0:	41 8b 56 10          	mov    0x10(%r14),%edx
   24bb4:	31 f6                	xor    %esi,%esi
   24bb6:	e8 f0 2c fe ff       	callq  78ab <memset>
   24bbb:	41 c7 46 1c 00 00 00 	movl   $0x0,0x1c(%r14)
   24bc2:	00 
   24bc3:	41 c7 46 18 00 00 00 	movl   $0x0,0x18(%r14)
   24bca:	00 
   24bcb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24bce: R_X86_64_32S	.rodata.str1.1+0xb4
   24bd2:	41 8b 47 10          	mov    0x10(%r15),%eax
   24bd6:	4d 8b 27             	mov    (%r15),%r12
   24bd9:	45 8b 6e 08          	mov    0x8(%r14),%r13d
   24bdd:	83 f8 03             	cmp    $0x3,%eax
   24be0:	19 db                	sbb    %ebx,%ebx
   24be2:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   24be8:	81 c3 00 38 00 00    	add    $0x3800,%ebx
   24bee:	48 63 db             	movslq %ebx,%rbx
   24bf1:	e8 00 00 00 00       	callq  24bf6 <e1000_loopback_test+0x292>
			24bf2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24bf6:	49 01 dc             	add    %rbx,%r12
   24bf9:	45 89 2c 24          	mov    %r13d,(%r12)
   24bfd:	41 8b 47 10          	mov    0x10(%r15),%eax
   24c01:	4d 8b 27             	mov    (%r15),%r12
   24c04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24c07: R_X86_64_32S	.rodata.str1.1+0xb4
   24c0b:	45 8b 6e 0c          	mov    0xc(%r14),%r13d
   24c0f:	83 f8 03             	cmp    $0x3,%eax
   24c12:	19 db                	sbb    %ebx,%ebx
   24c14:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   24c1a:	81 c3 04 38 00 00    	add    $0x3804,%ebx
   24c20:	48 63 db             	movslq %ebx,%rbx
   24c23:	e8 00 00 00 00       	callq  24c28 <e1000_loopback_test+0x2c4>
			24c24: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24c28:	49 01 dc             	add    %rbx,%r12
   24c2b:	45 89 2c 24          	mov    %r13d,(%r12)
   24c2f:	41 8b 47 10          	mov    0x10(%r15),%eax
   24c33:	45 8b 66 14          	mov    0x14(%r14),%r12d
   24c37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24c3a: R_X86_64_32S	.rodata.str1.1+0xb4
   24c3e:	4d 8b 2f             	mov    (%r15),%r13
   24c41:	83 f8 03             	cmp    $0x3,%eax
   24c44:	19 db                	sbb    %ebx,%ebx
   24c46:	41 c1 e4 04          	shl    $0x4,%r12d
   24c4a:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   24c50:	81 c3 08 38 00 00    	add    $0x3808,%ebx
   24c56:	48 63 db             	movslq %ebx,%rbx
   24c59:	e8 00 00 00 00       	callq  24c5e <e1000_loopback_test+0x2fa>
			24c5a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24c5e:	49 01 dd             	add    %rbx,%r13
   24c61:	45 89 65 00          	mov    %r12d,0x0(%r13)
   24c65:	41 8b 47 10          	mov    0x10(%r15),%eax
   24c69:	4d 8b 27             	mov    (%r15),%r12
   24c6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24c6f: R_X86_64_32S	.rodata.str1.1+0xb4
   24c73:	83 f8 03             	cmp    $0x3,%eax
   24c76:	19 db                	sbb    %ebx,%ebx
   24c78:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   24c7e:	81 c3 10 38 00 00    	add    $0x3810,%ebx
   24c84:	48 63 db             	movslq %ebx,%rbx
   24c87:	e8 00 00 00 00       	callq  24c8c <e1000_loopback_test+0x328>
			24c88: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24c8c:	49 01 dc             	add    %rbx,%r12
   24c8f:	31 c0                	xor    %eax,%eax
   24c91:	41 89 04 24          	mov    %eax,(%r12)
   24c95:	41 8b 47 10          	mov    0x10(%r15),%eax
   24c99:	4d 8b 27             	mov    (%r15),%r12
   24c9c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24c9f: R_X86_64_32S	.rodata.str1.1+0xb4
   24ca3:	83 f8 03             	cmp    $0x3,%eax
   24ca6:	19 db                	sbb    %ebx,%ebx
   24ca8:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   24cae:	81 c3 18 38 00 00    	add    $0x3818,%ebx
   24cb4:	48 63 db             	movslq %ebx,%rbx
   24cb7:	e8 00 00 00 00       	callq  24cbc <e1000_loopback_test+0x358>
			24cb8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24cbc:	49 01 dc             	add    %rbx,%r12
   24cbf:	31 c0                	xor    %eax,%eax
   24cc1:	41 89 04 24          	mov    %eax,(%r12)
   24cc5:	49 8b 1f             	mov    (%r15),%rbx
   24cc8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24ccb: R_X86_64_32S	.rodata.str1.1+0xb4
   24ccf:	e8 00 00 00 00       	callq  24cd4 <e1000_loopback_test+0x370>
			24cd0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24cd4:	b8 fa f0 03 00       	mov    $0x3f0fa,%eax
   24cd9:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   24ce0:	89 03                	mov    %eax,(%rbx)
   24ce2:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   24ce9:	00 
   24cea:	44 8b 6d 90          	mov    0xffffffffffffff90(%rbp),%r13d
   24cee:	45 3b 6e 14          	cmp    0x14(%r14),%r13d
   24cf2:	0f 83 89 01 00 00    	jae    24e81 <e1000_loopback_test+0x51d>
   24cf8:	49 8b 16             	mov    (%r14),%rdx
   24cfb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24cfe: R_X86_64_32S	.rodata.str1.1+0x2ed5
   24d02:	48 89 55 a8          	mov    %rdx,0xffffffffffffffa8(%rbp)
   24d06:	e8 00 00 00 00       	callq  24d0b <e1000_loopback_test+0x3a7>
			24d07: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24d0b:	83 c9 ff             	or     $0xffffffffffffffff,%ecx
   24d0e:	31 d2                	xor    %edx,%edx
   24d10:	be d0 00 00 00       	mov    $0xd0,%esi
   24d15:	bf 00 04 00 00       	mov    $0x400,%edi
   24d1a:	e8 d2 df ff ff       	callq  22cf1 <__alloc_skb>
   24d1f:	48 85 c0             	test   %rax,%rax
   24d22:	49 89 c4             	mov    %rax,%r12
   24d25:	0f 84 22 04 00 00    	je     2514d <e1000_loopback_test+0x7e9>
   24d2b:	be 00 04 00 00       	mov    $0x400,%esi
   24d30:	48 89 c7             	mov    %rax,%rdi
   24d33:	49 63 dd             	movslq %r13d,%rbx
   24d36:	e8 dc d8 ff ff       	callq  22617 <skb_put>
   24d3b:	49 8b 46 20          	mov    0x20(%r14),%rax
   24d3f:	49 89 dd             	mov    %rbx,%r13
   24d42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24d45: R_X86_64_32S	.rodata.str1.1+0x2edf
   24d49:	49 c1 e5 05          	shl    $0x5,%r13
   24d4d:	4c 01 e8             	add    %r13,%rax
   24d50:	4c 89 20             	mov    %r12,(%rax)
   24d53:	49 8b 56 20          	mov    0x20(%r14),%rdx
   24d57:	41 8b 44 24 68       	mov    0x68(%r12),%eax
   24d5c:	4c 01 ea             	add    %r13,%rdx
   24d5f:	66 89 42 18          	mov    %ax,0x18(%rdx)
   24d63:	49 8b 4e 20          	mov    0x20(%r14),%rcx
   24d67:	48 89 4d a0          	mov    %rcx,0xffffffffffffffa0(%rbp)
   24d6b:	45 8b 44 24 68       	mov    0x68(%r12),%r8d
   24d70:	44 89 45 9c          	mov    %r8d,0xffffffffffffff9c(%rbp)
   24d74:	49 8b 84 24 c8 00 00 	mov    0xc8(%r12),%rax
   24d7b:	00 
   24d7c:	48 89 85 30 ff ff ff 	mov    %rax,0xffffffffffffff30(%rbp)
   24d83:	e8 00 00 00 00       	callq  24d88 <e1000_loopback_test+0x424>
			24d84: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24d88:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   24d8f:	48 c7 85 00 ff ff ff 	movq   $0x0,0xffffffffffffff00(%rbp)
   24d96:	00 00 00 00 
   24d9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24d9d: R_X86_64_32S	.rodata.str1.1+0x2eee
   24da1:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   24da5:	48 83 bd f8 fe ff ff 	cmpq   $0x0,0xfffffffffffffef8(%rbp)
   24dac:	00 
   24dad:	48 0f 44 85 00 ff ff 	cmove  0xffffffffffffff00(%rbp),%rax
   24db4:	ff 
   24db5:	48 89 85 00 ff ff ff 	mov    %rax,0xffffffffffffff00(%rbp)
   24dbc:	e8 00 00 00 00       	callq  24dc1 <e1000_loopback_test+0x45d>
			24dbd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24dc1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24dc4: R_X86_64_32S	.rodata.str1.1+0x2ca6
   24dc8:	e8 00 00 00 00       	callq  24dcd <e1000_loopback_test+0x469>
			24dc9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24dcd:	48 83 bd 00 ff ff ff 	cmpq   $0x0,0xffffffffffffff00(%rbp)
   24dd4:	00 
   24dd5:	75 10                	jne    24de7 <e1000_loopback_test+0x483>
   24dd7:	48 8b 15 00 00 00 00 	mov    0(%rip),%rdx        # 24dde <e1000_loopback_test+0x47a>
			24dda: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24dde:	48 89 95 08 ff ff ff 	mov    %rdx,0xffffffffffffff08(%rbp)
   24de5:	eb 20                	jmp    24e07 <e1000_loopback_test+0x4a3>
   24de7:	48 8b 8d 00 ff ff ff 	mov    0xffffffffffffff00(%rbp),%rcx
   24dee:	48 8b 81 e8 01 00 00 	mov    0x1e8(%rcx),%rax
   24df5:	48 85 c0             	test   %rax,%rax
   24df8:	48 0f 44 05 00 00 00 	cmove  0(%rip),%rax        # 24e00 <e1000_loopback_test+0x49c>
   24dff:	00 
			24dfc: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24e00:	48 89 85 08 ff ff ff 	mov    %rax,0xffffffffffffff08(%rbp)
   24e07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24e0a: R_X86_64_32S	.rodata.str1.1+0x2cb2
   24e0e:	48 c1 e3 04          	shl    $0x4,%rbx
   24e12:	e8 00 00 00 00       	callq  24e17 <e1000_loopback_test+0x4b3>
			24e13: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24e17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24e1a: R_X86_64_32S	.rodata.str1.1+0x2efd
   24e1e:	48 03 5d a8          	add    0xffffffffffffffa8(%rbp),%rbx
   24e22:	e8 00 00 00 00       	callq  24e27 <e1000_loopback_test+0x4c3>
			24e23: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24e27:	48 8b bd 30 ff ff ff 	mov    0xffffffffffffff30(%rbp),%rdi
   24e2e:	e8 96 37 fe ff       	callq  85c9 <__phys_addr>
   24e33:	4c 8b 85 08 ff ff ff 	mov    0xffffffffffffff08(%rbp),%r8
   24e3a:	8b 55 9c             	mov    0xffffffffffffff9c(%rbp),%edx
   24e3d:	48 89 c6             	mov    %rax,%rsi
   24e40:	b9 01 00 00 00       	mov    $0x1,%ecx
   24e45:	48 8b bd 00 ff ff ff 	mov    0xffffffffffffff00(%rbp),%rdi
   24e4c:	41 ff 50 18          	callq  *0x18(%r8)
   24e50:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   24e54:	4a 89 44 2a 08       	mov    %rax,0x8(%rdx,%r13,1)
   24e59:	4d 03 6e 20          	add    0x20(%r14),%r13
   24e5d:	49 8b 45 08          	mov    0x8(%r13),%rax
   24e61:	48 89 03             	mov    %rax,(%rbx)
   24e64:	41 8b 44 24 68       	mov    0x68(%r12),%eax
   24e69:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%rbx)
   24e70:	0d 00 00 00 13       	or     $0x13000000,%eax
   24e75:	89 43 08             	mov    %eax,0x8(%rbx)
   24e78:	48 ff 45 90          	incq   0xffffffffffffff90(%rbp)
   24e7c:	e9 69 fe ff ff       	jmpq   24cea <e1000_loopback_test+0x386>
   24e81:	48 8b 8d 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rcx
   24e88:	83 79 14 00          	cmpl   $0x0,0x14(%rcx)
   24e8c:	75 07                	jne    24e95 <e1000_loopback_test+0x531>
   24e8e:	c7 41 14 00 01 00 00 	movl   $0x100,0x14(%rcx)
   24e95:	4c 8b 85 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%r8
   24e9c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24e9f: R_X86_64_32S	.rodata.str1.1+0x2abf
   24ea3:	41 8b 58 14          	mov    0x14(%r8),%ebx
   24ea7:	e8 00 00 00 00       	callq  24eac <e1000_loopback_test+0x548>
			24ea8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24eac:	31 c0                	xor    %eax,%eax
   24eae:	48 81 fb ff ff ff 07 	cmp    $0x7ffffff,%rbx
   24eb5:	77 11                	ja     24ec8 <e1000_loopback_test+0x564>
   24eb7:	48 c1 e3 05          	shl    $0x5,%rbx
   24ebb:	be d0 80 00 00       	mov    $0x80d0,%esi
   24ec0:	48 89 df             	mov    %rbx,%rdi
   24ec3:	e8 00 00 00 00       	callq  24ec8 <e1000_loopback_test+0x564>
			24ec4: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   24ec8:	48 8b 95 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rdx
   24ecf:	48 85 c0             	test   %rax,%rax
   24ed2:	bb 04 00 00 00       	mov    $0x4,%ebx
   24ed7:	48 89 42 20          	mov    %rax,0x20(%rdx)
   24edb:	0f 84 53 04 00 00    	je     25334 <e1000_loopback_test+0x9d0>
   24ee1:	8b 42 14             	mov    0x14(%rdx),%eax
   24ee4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24ee7: R_X86_64_32S	.rodata.str1.1+0x2e62
   24eeb:	45 31 e4             	xor    %r12d,%r12d
   24eee:	48 c1 e0 04          	shl    $0x4,%rax
   24ef2:	89 42 10             	mov    %eax,0x10(%rdx)
   24ef5:	89 85 2c ff ff ff    	mov    %eax,0xffffffffffffff2c(%rbp)
   24efb:	e8 00 00 00 00       	callq  24f00 <e1000_loopback_test+0x59c>
			24efc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24f00:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   24f07:	4c 8b b5 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%r14
   24f0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24f11: R_X86_64_32S	.rodata.str1.1+0x2e77
   24f15:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   24f19:	48 83 bd f8 fe ff ff 	cmpq   $0x0,0xfffffffffffffef8(%rbp)
   24f20:	00 
   24f21:	4c 0f 45 e0          	cmovne %rax,%r12
   24f25:	49 83 c6 08          	add    $0x8,%r14
   24f29:	e8 00 00 00 00       	callq  24f2e <e1000_loopback_test+0x5ca>
			24f2a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24f2e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24f31: R_X86_64_32S	.rodata.str1.1+0x2ca6
   24f35:	e8 00 00 00 00       	callq  24f3a <e1000_loopback_test+0x5d6>
			24f36: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24f3a:	4d 85 e4             	test   %r12,%r12
   24f3d:	75 12                	jne    24f51 <e1000_loopback_test+0x5ed>
   24f3f:	4c 8b 2d 00 00 00 00 	mov    0(%rip),%r13        # 24f46 <e1000_loopback_test+0x5e2>
			24f42: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24f46:	b3 21                	mov    $0x21,%bl
   24f48:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
			24f4b: R_X86_64_32S	x86_dma_fallback_dev
   24f4f:	eb 1b                	jmp    24f6c <e1000_loopback_test+0x608>
   24f51:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   24f58:	00 
   24f59:	bb 20 00 00 00       	mov    $0x20,%ebx
   24f5e:	48 85 c0             	test   %rax,%rax
   24f61:	49 89 c5             	mov    %rax,%r13
   24f64:	4c 0f 44 2d 00 00 00 	cmove  0(%rip),%r13        # 24f6c <e1000_loopback_test+0x608>
   24f6b:	00 
			24f68: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   24f6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24f6f: R_X86_64_32S	.rodata.str1.1+0x2e8a
   24f73:	e8 00 00 00 00       	callq  24f78 <e1000_loopback_test+0x614>
			24f74: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24f78:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   24f7f:	00 
   24f80:	48 85 c0             	test   %rax,%rax
   24f83:	74 70                	je     24ff5 <e1000_loopback_test+0x691>
   24f85:	48 83 38 00          	cmpq   $0x0,(%rax)
   24f89:	74 6a                	je     24ff5 <e1000_loopback_test+0x691>
   24f8b:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   24f90:	74 63                	je     24ff5 <e1000_loopback_test+0x691>
   24f92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24f95: R_X86_64_32S	.rodata.str1.1+0x2ea0
   24f99:	e8 00 00 00 00       	callq  24f9e <e1000_loopback_test+0x63a>
			24f9a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24f9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24fa1: R_X86_64_32S	.rodata.str1.1+0x2ebd
   24fa5:	e8 00 00 00 00       	callq  24faa <e1000_loopback_test+0x646>
			24fa6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   24faa:	49 8b 94 24 b8 01 00 	mov    0x1b8(%r12),%rdx
   24fb1:	00 
   24fb2:	48 85 d2             	test   %rdx,%rdx
   24fb5:	75 07                	jne    24fbe <e1000_loopback_test+0x65a>
   24fb7:	f6 c3 01             	test   $0x1,%bl
   24fba:	75 0b                	jne    24fc7 <e1000_loopback_test+0x663>
   24fbc:	eb 1d                	jmp    24fdb <e1000_loopback_test+0x677>
   24fbe:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   24fc5:	77 05                	ja     24fcc <e1000_loopback_test+0x668>
   24fc7:	83 cb 01             	or     $0x1,%ebx
   24fca:	eb 0a                	jmp    24fd6 <e1000_loopback_test+0x672>
   24fcc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   24fd1:	48 39 c2             	cmp    %rax,%rdx
   24fd4:	77 08                	ja     24fde <e1000_loopback_test+0x67a>
   24fd6:	f6 c3 01             	test   $0x1,%bl
   24fd9:	75 03                	jne    24fde <e1000_loopback_test+0x67a>
   24fdb:	83 cb 04             	or     $0x4,%ebx
   24fde:	8b b5 2c ff ff ff    	mov    0xffffffffffffff2c(%rbp),%esi
   24fe4:	4c 89 e7             	mov    %r12,%rdi
   24fe7:	89 d9                	mov    %ebx,%ecx
   24fe9:	4c 89 f2             	mov    %r14,%rdx
   24fec:	41 ff 55 08          	callq  *0x8(%r13)
   24ff0:	48 89 c7             	mov    %rax,%rdi
   24ff3:	eb 02                	jmp    24ff7 <e1000_loopback_test+0x693>
   24ff5:	31 ff                	xor    %edi,%edi
   24ff7:	48 8b 8d 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rcx
   24ffe:	48 85 ff             	test   %rdi,%rdi
   25001:	bb 05 00 00 00       	mov    $0x5,%ebx
   25006:	48 89 39             	mov    %rdi,(%rcx)
   25009:	0f 84 25 03 00 00    	je     25334 <e1000_loopback_test+0x9d0>
   2500f:	8b 51 10             	mov    0x10(%rcx),%edx
   25012:	31 f6                	xor    %esi,%esi
   25014:	e8 92 28 fe ff       	callq  78ab <memset>
   25019:	4c 8b 85 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%r8
   25020:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25023: R_X86_64_32S	.rodata.str1.1+0xae
   25027:	41 c7 40 1c 00 00 00 	movl   $0x0,0x1c(%r8)
   2502e:	00 
   2502f:	41 c7 40 18 00 00 00 	movl   $0x0,0x18(%r8)
   25036:	00 
   25037:	49 8b 1f             	mov    (%r15),%rbx
   2503a:	e8 00 00 00 00       	callq  2503f <e1000_loopback_test+0x6db>
			2503b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2503f:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   25046:	49 8b 1f             	mov    (%r15),%rbx
   25049:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2504c: R_X86_64_32S	.rodata.str1.1+0xb4
   25050:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
   25054:	e8 00 00 00 00       	callq  25059 <e1000_loopback_test+0x6f5>
			25055: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25059:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   25060:	44 89 23             	mov    %r12d,(%rbx)
   25063:	41 8b 47 10          	mov    0x10(%r15),%eax
   25067:	4d 8b 27             	mov    (%r15),%r12
   2506a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2506d: R_X86_64_32S	.rodata.str1.1+0xb4
   25071:	83 f8 03             	cmp    $0x3,%eax
   25074:	48 8b 85 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rax
   2507b:	19 db                	sbb    %ebx,%ebx
   2507d:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   25083:	81 c3 00 28 00 00    	add    $0x2800,%ebx
   25089:	44 8b 68 08          	mov    0x8(%rax),%r13d
   2508d:	48 63 db             	movslq %ebx,%rbx
   25090:	e8 00 00 00 00       	callq  25095 <e1000_loopback_test+0x731>
			25091: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25095:	49 01 dc             	add    %rbx,%r12
   25098:	45 89 2c 24          	mov    %r13d,(%r12)
   2509c:	41 8b 47 10          	mov    0x10(%r15),%eax
   250a0:	4d 8b 27             	mov    (%r15),%r12
   250a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			250a6: R_X86_64_32S	.rodata.str1.1+0xb4
   250aa:	48 8b 95 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rdx
   250b1:	83 f8 03             	cmp    $0x3,%eax
   250b4:	19 db                	sbb    %ebx,%ebx
   250b6:	44 8b 6a 0c          	mov    0xc(%rdx),%r13d
   250ba:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   250c0:	81 c3 04 28 00 00    	add    $0x2804,%ebx
   250c6:	48 63 db             	movslq %ebx,%rbx
   250c9:	e8 00 00 00 00       	callq  250ce <e1000_loopback_test+0x76a>
			250ca: R_X86_64_PC32	record_function+0xfffffffffffffffc
   250ce:	49 01 dc             	add    %rbx,%r12
   250d1:	45 89 2c 24          	mov    %r13d,(%r12)
   250d5:	41 8b 47 10          	mov    0x10(%r15),%eax
   250d9:	4d 8b 27             	mov    (%r15),%r12
   250dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			250df: R_X86_64_32S	.rodata.str1.1+0xb4
   250e3:	48 8b 8d 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rcx
   250ea:	83 f8 03             	cmp    $0x3,%eax
   250ed:	19 db                	sbb    %ebx,%ebx
   250ef:	44 8b 69 10          	mov    0x10(%rcx),%r13d
   250f3:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   250f9:	81 c3 08 28 00 00    	add    $0x2808,%ebx
   250ff:	48 63 db             	movslq %ebx,%rbx
   25102:	e8 00 00 00 00       	callq  25107 <e1000_loopback_test+0x7a3>
			25103: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25107:	49 01 dc             	add    %rbx,%r12
   2510a:	45 89 2c 24          	mov    %r13d,(%r12)
   2510e:	41 8b 47 10          	mov    0x10(%r15),%eax
   25112:	4d 8b 27             	mov    (%r15),%r12
   25115:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25118: R_X86_64_32S	.rodata.str1.1+0xb4
   2511c:	83 f8 03             	cmp    $0x3,%eax
   2511f:	19 db                	sbb    %ebx,%ebx
   25121:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   25127:	81 c3 10 28 00 00    	add    $0x2810,%ebx
   2512d:	48 63 db             	movslq %ebx,%rbx
   25130:	e8 00 00 00 00       	callq  25135 <e1000_loopback_test+0x7d1>
			25131: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25135:	49 01 dc             	add    %rbx,%r12
   25138:	31 c0                	xor    %eax,%eax
   2513a:	41 89 04 24          	mov    %eax,(%r12)
   2513e:	41 83 7f 10 02       	cmpl   $0x2,0x10(%r15)
   25143:	41 bc 18 28 00 00    	mov    $0x2818,%r12d
   25149:	77 23                	ja     2516e <e1000_loopback_test+0x80a>
   2514b:	eb 1b                	jmp    25168 <e1000_loopback_test+0x804>
   2514d:	bb 03 00 00 00       	mov    $0x3,%ebx
   25152:	e9 dd 01 00 00       	jmpq   25334 <e1000_loopback_test+0x9d0>
   25157:	31 db                	xor    %ebx,%ebx
   25159:	e9 e2 01 00 00       	jmpq   25340 <e1000_loopback_test+0x9dc>
   2515e:	bb 06 00 00 00       	mov    $0x6,%ebx
   25163:	e9 cc 01 00 00       	jmpq   25334 <e1000_loopback_test+0x9d0>
   25168:	41 bc 28 01 00 00    	mov    $0x128,%r12d
   2516e:	49 8b 1f             	mov    (%r15),%rbx
   25171:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25174: R_X86_64_32S	.rodata.str1.1+0xb4
   25178:	e8 00 00 00 00       	callq  2517d <e1000_loopback_test+0x819>
			25179: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2517d:	49 63 c4             	movslq %r12d,%rax
   25180:	48 01 c3             	add    %rax,%rbx
   25183:	31 c0                	xor    %eax,%eax
   25185:	89 03                	mov    %eax,(%rbx)
   25187:	45 8b a7 a0 00 00 00 	mov    0xa0(%r15),%r12d
   2518e:	49 8b 1f             	mov    (%r15),%rbx
   25191:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25194: R_X86_64_32S	.rodata.str1.1+0xb4
   25198:	e8 00 00 00 00       	callq  2519d <e1000_loopback_test+0x839>
			25199: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2519d:	41 c1 e4 0c          	shl    $0xc,%r12d
   251a1:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   251a8:	41 81 cc 02 80 00 00 	or     $0x8002,%r12d
   251af:	44 89 23             	mov    %r12d,(%rbx)
   251b2:	48 c7 45 88 00 00 00 	movq   $0x0,0xffffffffffffff88(%rbp)
   251b9:	00 
   251ba:	4c 8b 85 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%r8
   251c1:	44 8b 65 88          	mov    0xffffffffffffff88(%rbp),%r12d
   251c5:	45 3b 60 14          	cmp    0x14(%r8),%r12d
   251c9:	73 8c                	jae    25157 <e1000_loopback_test+0x7f3>
   251cb:	49 8b 00             	mov    (%r8),%rax
   251ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			251d1: R_X86_64_32S	.rodata.str1.1+0x2ed5
   251d5:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   251d9:	e8 00 00 00 00       	callq  251de <e1000_loopback_test+0x87a>
			251da: R_X86_64_PC32	record_function+0xfffffffffffffffc
   251de:	83 c9 ff             	or     $0xffffffffffffffff,%ecx
   251e1:	31 d2                	xor    %edx,%edx
   251e3:	be d0 00 00 00       	mov    $0xd0,%esi
   251e8:	bf 02 08 00 00       	mov    $0x802,%edi
   251ed:	e8 ff da ff ff       	callq  22cf1 <__alloc_skb>
   251f2:	48 85 c0             	test   %rax,%rax
   251f5:	48 89 c3             	mov    %rax,%rbx
   251f8:	0f 84 60 ff ff ff    	je     2515e <e1000_loopback_test+0x7fa>
   251fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25201: R_X86_64_32S	.rodata.str1.1+0x2f0a
   25205:	4d 63 f4             	movslq %r12d,%r14
   25208:	45 31 ed             	xor    %r13d,%r13d
   2520b:	e8 00 00 00 00       	callq  25210 <e1000_loopback_test+0x8ac>
			2520c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25210:	48 83 83 c8 00 00 00 	addq   $0x2,0xc8(%rbx)
   25217:	02 
   25218:	83 83 b4 00 00 00 02 	addl   $0x2,0xb4(%rbx)
   2521f:	4d 89 f4             	mov    %r14,%r12
   25222:	48 8b 95 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rdx
   25229:	49 c1 e4 05          	shl    $0x5,%r12
   2522d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25230: R_X86_64_32S	.rodata.str1.1+0x2edf
   25234:	48 8b 42 20          	mov    0x20(%rdx),%rax
   25238:	4c 01 e0             	add    %r12,%rax
   2523b:	48 89 18             	mov    %rbx,(%rax)
   2523e:	48 8b 42 20          	mov    0x20(%rdx),%rax
   25242:	4c 01 e0             	add    %r12,%rax
   25245:	66 c7 40 18 00 08    	movw   $0x800,0x18(%rax)
   2524b:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
   2524f:	48 89 4d b0          	mov    %rcx,0xffffffffffffffb0(%rbp)
   25253:	4c 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%r8
   2525a:	4c 89 85 20 ff ff ff 	mov    %r8,0xffffffffffffff20(%rbp)
   25261:	e8 00 00 00 00       	callq  25266 <e1000_loopback_test+0x902>
			25262: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25266:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   2526d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25270: R_X86_64_32S	.rodata.str1.1+0x2eee
   25274:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25278:	48 83 bd f8 fe ff ff 	cmpq   $0x0,0xfffffffffffffef8(%rbp)
   2527f:	00 
   25280:	4c 0f 45 e8          	cmovne %rax,%r13
   25284:	e8 00 00 00 00       	callq  25289 <e1000_loopback_test+0x925>
			25285: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25289:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2528c: R_X86_64_32S	.rodata.str1.1+0x2ca6
   25290:	e8 00 00 00 00       	callq  25295 <e1000_loopback_test+0x931>
			25291: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25295:	4d 85 ed             	test   %r13,%r13
   25298:	75 09                	jne    252a3 <e1000_loopback_test+0x93f>
   2529a:	4c 8b 3d 00 00 00 00 	mov    0(%rip),%r15        # 252a1 <e1000_loopback_test+0x93d>
			2529d: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   252a1:	eb 15                	jmp    252b8 <e1000_loopback_test+0x954>
   252a3:	49 8b 85 e8 01 00 00 	mov    0x1e8(%r13),%rax
   252aa:	48 85 c0             	test   %rax,%rax
   252ad:	49 89 c7             	mov    %rax,%r15
   252b0:	4c 0f 44 3d 00 00 00 	cmove  0(%rip),%r15        # 252b8 <e1000_loopback_test+0x954>
   252b7:	00 
			252b4: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   252b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			252bb: R_X86_64_32S	.rodata.str1.1+0x2cb2
   252bf:	49 c1 e6 04          	shl    $0x4,%r14
   252c3:	e8 00 00 00 00       	callq  252c8 <e1000_loopback_test+0x964>
			252c4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   252c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			252cb: R_X86_64_32S	.rodata.str1.1+0x2efd
   252cf:	e8 00 00 00 00       	callq  252d4 <e1000_loopback_test+0x970>
			252d0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   252d4:	48 8b bd 20 ff ff ff 	mov    0xffffffffffffff20(%rbp),%rdi
   252db:	e8 e9 32 fe ff       	callq  85c9 <__phys_addr>
   252e0:	b9 02 00 00 00       	mov    $0x2,%ecx
   252e5:	48 89 c6             	mov    %rax,%rsi
   252e8:	ba 00 08 00 00       	mov    $0x800,%edx
   252ed:	4c 89 ef             	mov    %r13,%rdi
   252f0:	41 ff 57 18          	callq  *0x18(%r15)
   252f4:	48 8b 55 b0          	mov    0xffffffffffffffb0(%rbp),%rdx
   252f8:	31 f6                	xor    %esi,%esi
   252fa:	4a 89 44 22 08       	mov    %rax,0x8(%rdx,%r12,1)
   252ff:	48 8b 8d 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rcx
   25306:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2530a:	4c 03 61 20          	add    0x20(%rcx),%r12
   2530e:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   25313:	4b 89 04 30          	mov    %rax,(%r8,%r14,1)
   25317:	8b 53 68             	mov    0x68(%rbx),%edx
   2531a:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
   25321:	e8 85 25 fe ff       	callq  78ab <memset>
   25326:	48 ff 45 88          	incq   0xffffffffffffff88(%rbp)
   2532a:	e9 8b fe ff ff       	jmpq   251ba <e1000_loopback_test+0x856>
   2532f:	bb 01 00 00 00       	mov    $0x1,%ebx
   25334:	48 8b bd f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdi
   2533b:	e8 1a f2 ff ff       	callq  2455a <e1000_free_desc_rings>
   25340:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   25347:	48 63 c3             	movslq %ebx,%rax
   2534a:	48 85 c0             	test   %rax,%rax
   2534d:	48 89 02             	mov    %rax,(%rdx)
   25350:	0f 85 42 06 00 00    	jne    25998 <e1000_loopback_test+0x1034>
   25356:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25359: R_X86_64_32S	.rodata.str1.1+0x2f16
   2535d:	e8 00 00 00 00       	callq  25362 <e1000_loopback_test+0x9fe>
			2535e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25362:	48 8b 9d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rbx
   25369:	48 81 c3 b8 03 00 00 	add    $0x3b8,%rbx
   25370:	8b 53 1c             	mov    0x1c(%rbx),%edx
   25373:	83 fa 01             	cmp    $0x1,%edx
   25376:	74 09                	je     25381 <e1000_loopback_test+0xa1d>
   25378:	83 fa 02             	cmp    $0x2,%edx
   2537b:	0f 85 b0 00 00 00    	jne    25431 <e1000_loopback_test+0xacd>
   25381:	8b 43 10             	mov    0x10(%rbx),%eax
   25384:	83 f8 06             	cmp    $0x6,%eax
   25387:	0f 84 ad 00 00 00    	je     2543a <e1000_loopback_test+0xad6>
   2538d:	83 f8 08             	cmp    $0x8,%eax
   25390:	0f 84 a4 00 00 00    	je     2543a <e1000_loopback_test+0xad6>
   25396:	83 f8 07             	cmp    $0x7,%eax
   25399:	0f 84 9b 00 00 00    	je     2543a <e1000_loopback_test+0xad6>
   2539f:	83 f8 09             	cmp    $0x9,%eax
   253a2:	0f 84 92 00 00 00    	je     2543a <e1000_loopback_test+0xad6>
   253a8:	83 f8 0e             	cmp    $0xe,%eax
   253ab:	74 05                	je     253b2 <e1000_loopback_test+0xa4e>
   253ad:	83 f8 0f             	cmp    $0xf,%eax
   253b0:	75 32                	jne    253e4 <e1000_loopback_test+0xa80>
   253b2:	48 8b bd f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdi
   253b9:	e8 f0 8e ff ff       	callq  1e2ae <e1000_set_phy_loopback>
   253be:	48 8b 1b             	mov    (%rbx),%rbx
   253c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			253c4: R_X86_64_32S	.rodata.str1.1+0xb4
   253c8:	e8 00 00 00 00       	callq  253cd <e1000_loopback_test+0xa69>
			253c9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   253cd:	b8 10 04 00 00       	mov    $0x410,%eax
   253d2:	48 83 c3 24          	add    $0x24,%rbx
   253d6:	89 03                	mov    %eax,(%rbx)
   253d8:	bf 0a 00 00 00       	mov    $0xa,%edi
   253dd:	e8 6e 27 fe ff       	callq  7b50 <msleep>
   253e2:	eb 49                	jmp    2542d <e1000_loopback_test+0xac9>
   253e4:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   253eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			253ee: R_X86_64_32S	.rodata.str1.1+0xae
   253f2:	48 8b 99 b8 03 00 00 	mov    0x3b8(%rcx),%rbx
   253f9:	e8 00 00 00 00       	callq  253fe <e1000_loopback_test+0xa9a>
			253fa: R_X86_64_PC32	record_function+0xfffffffffffffffc
   253fe:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   25405:	4c 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r8
   2540c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2540f: R_X86_64_32S	.rodata.str1.1+0xb4
   25413:	41 80 cc c0          	or     $0xc0,%r12b
   25417:	49 8b 98 b8 03 00 00 	mov    0x3b8(%r8),%rbx
   2541e:	e8 00 00 00 00       	callq  25423 <e1000_loopback_test+0xabf>
			2541f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25423:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   2542a:	44 89 23             	mov    %r12d,(%rbx)
   2542d:	31 c0                	xor    %eax,%eax
   2542f:	eb 15                	jmp    25446 <e1000_loopback_test+0xae2>
   25431:	85 d2                	test   %edx,%edx
   25433:	b8 07 00 00 00       	mov    $0x7,%eax
   25438:	75 0c                	jne    25446 <e1000_loopback_test+0xae2>
   2543a:	48 8b bd f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdi
   25441:	e8 68 8e ff ff       	callq  1e2ae <e1000_set_phy_loopback>
   25446:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   2544d:	48 98                	cltq   
   2544f:	48 85 c0             	test   %rax,%rax
   25452:	48 89 02             	mov    %rax,(%rdx)
   25455:	0f 85 31 05 00 00    	jne    2598c <e1000_loopback_test+0x1028>
   2545b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2545e: R_X86_64_32S	.rodata.str1.1+0x2f30
   25462:	e8 00 00 00 00       	callq  25467 <e1000_loopback_test+0xb03>
			25463: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25467:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   2546e:	4c 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r8
   25475:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25478: R_X86_64_32S	.rodata.str1.1+0xb4
   2547c:	48 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rax
   25483:	48 8b 95 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdx
   2548a:	48 81 c1 b8 03 00 00 	add    $0x3b8,%rcx
   25491:	49 81 c0 30 07 00 00 	add    $0x730,%r8
   25498:	48 05 90 07 00 00    	add    $0x790,%rax
   2549e:	48 89 8d 78 ff ff ff 	mov    %rcx,0xffffffffffffff78(%rbp)
   254a5:	4c 89 85 70 ff ff ff 	mov    %r8,0xffffffffffffff70(%rbp)
   254ac:	48 89 85 68 ff ff ff 	mov    %rax,0xffffffffffffff68(%rbp)
   254b3:	48 8b 92 f8 02 00 00 	mov    0x2f8(%rdx),%rdx
   254ba:	4c 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%r8
   254c1:	48 89 95 40 ff ff ff 	mov    %rdx,0xffffffffffffff40(%rbp)
   254c8:	8b 41 10             	mov    0x10(%rcx),%eax
   254cb:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   254d2:	45 8b 68 14          	mov    0x14(%r8),%r13d
   254d6:	83 f8 03             	cmp    $0x3,%eax
   254d9:	19 db                	sbb    %ebx,%ebx
   254db:	4c 8b a1 b8 03 00 00 	mov    0x3b8(%rcx),%r12
   254e2:	41 ff cd             	dec    %r13d
   254e5:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   254eb:	81 c3 18 28 00 00    	add    $0x2818,%ebx
   254f1:	48 63 db             	movslq %ebx,%rbx
   254f4:	e8 00 00 00 00       	callq  254f9 <e1000_loopback_test+0xb95>
			254f5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   254f9:	49 01 dc             	add    %rbx,%r12
   254fc:	45 89 2c 24          	mov    %r13d,(%r12)
   25500:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   25507:	48 8b 8d 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rcx
   2550e:	8b 50 14             	mov    0x14(%rax),%edx
   25511:	8b 41 14             	mov    0x14(%rcx),%eax
   25514:	39 c2                	cmp    %eax,%edx
   25516:	77 19                	ja     25531 <e1000_loopback_test+0xbcd>
   25518:	c1 e8 06             	shr    $0x6,%eax
   2551b:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
   2551f:	89 85 60 ff ff ff    	mov    %eax,0xffffffffffffff60(%rbp)
   25525:	eb 17                	jmp    2553e <e1000_loopback_test+0xbda>
   25527:	b9 0e 00 00 00       	mov    $0xe,%ecx
   2552c:	e9 52 03 00 00       	jmpq   25883 <e1000_loopback_test+0xf1f>
   25531:	c1 ea 06             	shr    $0x6,%edx
   25534:	8d 54 12 01          	lea    0x1(%rdx,%rdx,1),%edx
   25538:	89 95 60 ff ff ff    	mov    %edx,0xffffffffffffff60(%rbp)
   2553e:	c7 85 64 ff ff ff 00 	movl   $0x0,0xffffffffffffff64(%rbp)
   25545:	00 00 00 
   25548:	45 31 f6             	xor    %r14d,%r14d
   2554b:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   25552:	31 c9                	xor    %ecx,%ecx
   25554:	44 8b 85 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%r8d
   2555b:	44 39 85 64 ff ff ff 	cmp    %r8d,0xffffffffffffff64(%rbp)
   25562:	0f 8f 1b 03 00 00    	jg     25883 <e1000_loopback_test+0xf1f>
   25568:	45 31 ff             	xor    %r15d,%r15d
   2556b:	48 8b 95 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdx
   25572:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25575: R_X86_64_32S	.rodata.str1.1+0x2f48
   25579:	45 31 e4             	xor    %r12d,%r12d
   2557c:	48 8b 42 20          	mov    0x20(%rdx),%rax
   25580:	4c 01 f8             	add    %r15,%rax
   25583:	48 8b 18             	mov    (%rax),%rbx
   25586:	e8 00 00 00 00       	callq  2558b <e1000_loopback_test+0xc27>
			25587: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2558b:	ba 00 04 00 00       	mov    $0x400,%edx
   25590:	be ff 00 00 00       	mov    $0xff,%esi
   25595:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
   2559c:	e8 0a 23 fe ff       	callq  78ab <memset>
   255a1:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
   255a8:	ba ff 01 00 00       	mov    $0x1ff,%edx
   255ad:	be aa 00 00 00       	mov    $0xaa,%esi
   255b2:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
   255b9:	e8 ed 22 fe ff       	callq  78ab <memset>
   255be:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
   255c5:	ba 01 00 00 00       	mov    $0x1,%edx
   255ca:	be be 00 00 00       	mov    $0xbe,%esi
   255cf:	48 81 c7 0a 02 00 00 	add    $0x20a,%rdi
   255d6:	e8 d0 22 fe ff       	callq  78ab <memset>
   255db:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
   255e2:	ba 01 00 00 00       	mov    $0x1,%edx
   255e7:	be af 00 00 00       	mov    $0xaf,%esi
   255ec:	48 81 c7 0c 02 00 00 	add    $0x20c,%rdi
   255f3:	e8 b3 22 fe ff       	callq  78ab <memset>
   255f8:	48 8b 8d 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rcx
   255ff:	49 63 c6             	movslq %r14d,%rax
   25602:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25605: R_X86_64_32S	.rodata.str1.1+0x2f62
   25609:	48 c1 e0 05          	shl    $0x5,%rax
   2560d:	48 03 41 20          	add    0x20(%rcx),%rax
   25611:	44 8b 68 18          	mov    0x18(%rax),%r13d
   25615:	48 8b 40 08          	mov    0x8(%rax),%rax
   25619:	48 89 85 50 ff ff ff 	mov    %rax,0xffffffffffffff50(%rbp)
   25620:	e8 00 00 00 00       	callq  25625 <e1000_loopback_test+0xcc1>
			25621: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25625:	48 8b 85 40 ff ff ff 	mov    0xffffffffffffff40(%rbp),%rax
   2562c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2562f: R_X86_64_32S	.rodata.str1.1+0x2f81
   25633:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25637:	48 83 bd 40 ff ff ff 	cmpq   $0x0,0xffffffffffffff40(%rbp)
   2563e:	00 
   2563f:	4c 0f 45 e0          	cmovne %rax,%r12
   25643:	e8 00 00 00 00       	callq  25648 <e1000_loopback_test+0xce4>
			25644: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25648:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2564b: R_X86_64_32S	.rodata.str1.1+0x2ca6
   2564f:	e8 00 00 00 00       	callq  25654 <e1000_loopback_test+0xcf0>
			25650: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25654:	4d 85 e4             	test   %r12,%r12
   25657:	75 09                	jne    25662 <e1000_loopback_test+0xcfe>
   25659:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 25660 <e1000_loopback_test+0xcfc>
			2565c: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25660:	eb 16                	jmp    25678 <e1000_loopback_test+0xd14>
   25662:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   25669:	00 
   2566a:	48 85 c0             	test   %rax,%rax
   2566d:	48 89 c3             	mov    %rax,%rbx
   25670:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 25678 <e1000_loopback_test+0xd14>
   25677:	00 
			25674: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25678:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2567b: R_X86_64_32S	.rodata.str1.1+0x2cb2
   2567f:	e8 00 00 00 00       	callq  25684 <e1000_loopback_test+0xd20>
			25680: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25684:	48 8b 43 30          	mov    0x30(%rbx),%rax
   25688:	48 85 c0             	test   %rax,%rax
   2568b:	74 15                	je     256a2 <e1000_loopback_test+0xd3e>
   2568d:	41 0f b7 d5          	movzwl %r13w,%edx
   25691:	b9 01 00 00 00       	mov    $0x1,%ecx
   25696:	48 8b b5 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rsi
   2569d:	4c 89 e7             	mov    %r12,%rdi
   256a0:	ff d0                	callq  *%rax
   256a2:	4c 8b 85 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%r8
   256a9:	41 ff c6             	inc    %r14d
   256ac:	b8 00 00 00 00       	mov    $0x0,%eax
   256b1:	45 3b 70 14          	cmp    0x14(%r8),%r14d
   256b5:	44 0f 44 f0          	cmove  %eax,%r14d
   256b9:	49 83 c7 20          	add    $0x20,%r15
   256bd:	49 81 ff 00 08 00 00 	cmp    $0x800,%r15
   256c4:	0f 85 a1 fe ff ff    	jne    2556b <e1000_loopback_test+0xc07>
   256ca:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
   256d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			256d4: R_X86_64_32S	.rodata.str1.1+0xb4
   256d8:	8b 42 10             	mov    0x10(%rdx),%eax
   256db:	4c 8b 22             	mov    (%rdx),%r12
   256de:	83 f8 03             	cmp    $0x3,%eax
   256e1:	19 db                	sbb    %ebx,%ebx
   256e3:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   256e9:	81 c3 18 38 00 00    	add    $0x3818,%ebx
   256ef:	48 63 db             	movslq %ebx,%rbx
   256f2:	e8 00 00 00 00       	callq  256f7 <e1000_loopback_test+0xd93>
			256f3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   256f7:	49 01 dc             	add    %rbx,%r12
   256fa:	45 89 34 24          	mov    %r14d,(%r12)
   256fe:	bf c8 00 00 00       	mov    $0xc8,%edi
   25703:	66 45 31 ff          	xor    %r15w,%r15w
   25707:	e8 44 24 fe ff       	callq  7b50 <msleep>
   2570c:	48 8b 0d 00 00 00 00 	mov    0(%rip),%rcx        # 25713 <e1000_loopback_test+0xdaf>
			2570f: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   25713:	48 89 8d 58 ff ff ff 	mov    %rcx,0xffffffffffffff58(%rbp)
   2571a:	4c 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%r8
   25721:	48 63 5d c4          	movslq 0xffffffffffffffc4(%rbp),%rbx
   25725:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25728: R_X86_64_32S	.rodata.str1.1+0x2f9c
   2572c:	45 31 ed             	xor    %r13d,%r13d
   2572f:	49 8b 40 20          	mov    0x20(%r8),%rax
   25733:	48 c1 e3 05          	shl    $0x5,%rbx
   25737:	48 01 d8             	add    %rbx,%rax
   2573a:	8b 50 18             	mov    0x18(%rax),%edx
   2573d:	66 89 55 86          	mov    %dx,0xffffffffffffff86(%rbp)
   25741:	48 8b 40 08          	mov    0x8(%rax),%rax
   25745:	48 89 85 48 ff ff ff 	mov    %rax,0xffffffffffffff48(%rbp)
   2574c:	e8 00 00 00 00       	callq  25751 <e1000_loopback_test+0xded>
			2574d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25751:	48 8b 85 40 ff ff ff 	mov    0xffffffffffffff40(%rbp),%rax
   25758:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2575b: R_X86_64_32S	.rodata.str1.1+0x2fb8
   2575f:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25763:	48 83 bd 40 ff ff ff 	cmpq   $0x0,0xffffffffffffff40(%rbp)
   2576a:	00 
   2576b:	4c 0f 45 e8          	cmovne %rax,%r13
   2576f:	e8 00 00 00 00       	callq  25774 <e1000_loopback_test+0xe10>
			25770: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25774:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25777: R_X86_64_32S	.rodata.str1.1+0x2ca6
   2577b:	e8 00 00 00 00       	callq  25780 <e1000_loopback_test+0xe1c>
			2577c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25780:	4d 85 ed             	test   %r13,%r13
   25783:	75 09                	jne    2578e <e1000_loopback_test+0xe2a>
   25785:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 2578c <e1000_loopback_test+0xe28>
			25788: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   2578c:	eb 15                	jmp    257a3 <e1000_loopback_test+0xe3f>
   2578e:	49 8b 85 e8 01 00 00 	mov    0x1e8(%r13),%rax
   25795:	48 85 c0             	test   %rax,%rax
   25798:	49 89 c4             	mov    %rax,%r12
   2579b:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 257a3 <e1000_loopback_test+0xe3f>
   257a2:	00 
			2579f: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   257a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			257a6: R_X86_64_32S	.rodata.str1.1+0x2cb2
   257aa:	e8 00 00 00 00       	callq  257af <e1000_loopback_test+0xe4b>
			257ab: R_X86_64_PC32	record_function+0xfffffffffffffffc
   257af:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   257b4:	48 85 c0             	test   %rax,%rax
   257b7:	74 15                	je     257ce <e1000_loopback_test+0xe6a>
   257b9:	0f b7 55 86          	movzwl 0xffffffffffffff86(%rbp),%edx
   257bd:	b9 02 00 00 00       	mov    $0x2,%ecx
   257c2:	48 8b b5 48 ff ff ff 	mov    0xffffffffffffff48(%rbp),%rsi
   257c9:	4c 89 ef             	mov    %r13,%rdi
   257cc:	ff d0                	callq  *%rax
   257ce:	48 8b 8d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rcx
   257d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			257d8: R_X86_64_32S	.rodata.str1.1+0x2fd0
   257dc:	48 03 59 20          	add    0x20(%rcx),%rbx
   257e0:	48 8b 1b             	mov    (%rbx),%rbx
   257e3:	e8 00 00 00 00       	callq  257e8 <e1000_loopback_test+0xe84>
			257e4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   257e8:	48 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%rax
   257ef:	80 78 03 ff          	cmpb   $0xff,0x3(%rax)
   257f3:	75 19                	jne    2580e <e1000_loopback_test+0xeaa>
   257f5:	80 b8 0a 02 00 00 be 	cmpb   $0xbe,0x20a(%rax)
   257fc:	75 10                	jne    2580e <e1000_loopback_test+0xeaa>
   257fe:	80 b8 0c 02 00 00 af 	cmpb   $0xaf,0x20c(%rax)
   25805:	75 07                	jne    2580e <e1000_loopback_test+0xeaa>
   25807:	41 ff c7             	inc    %r15d
   2580a:	31 c9                	xor    %ecx,%ecx
   2580c:	eb 05                	jmp    25813 <e1000_loopback_test+0xeaf>
   2580e:	b9 0d 00 00 00       	mov    $0xd,%ecx
   25813:	4c 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%r8
   2581a:	ff 45 c4             	incl   0xffffffffffffffc4(%rbp)
   2581d:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
   25820:	41 3b 40 14          	cmp    0x14(%r8),%eax
   25824:	b8 00 00 00 00       	mov    $0x0,%eax
   25829:	0f 45 45 c4          	cmovne 0xffffffffffffffc4(%rbp),%eax
   2582d:	41 83 ff 3f          	cmp    $0x3f,%r15d
   25831:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   25834:	7f 1c                	jg     25852 <e1000_loopback_test+0xeee>
   25836:	48 8b 85 58 ff ff ff 	mov    0xffffffffffffff58(%rbp),%rax
   2583d:	48 8b 15 00 00 00 00 	mov    0(%rip),%rdx        # 25844 <e1000_loopback_test+0xee0>
			25840: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   25844:	48 83 c0 14          	add    $0x14,%rax
   25848:	48 39 c2             	cmp    %rax,%rdx
   2584b:	73 31                	jae    2587e <e1000_loopback_test+0xf1a>
   2584d:	e9 c8 fe ff ff       	jmpq   2571a <e1000_loopback_test+0xdb6>
   25852:	41 83 ff 40          	cmp    $0x40,%r15d
   25856:	75 26                	jne    2587e <e1000_loopback_test+0xf1a>
   25858:	48 8b 85 58 ff ff ff 	mov    0xffffffffffffff58(%rbp),%rax
   2585f:	48 8b 15 00 00 00 00 	mov    0(%rip),%rdx        # 25866 <e1000_loopback_test+0xf02>
			25862: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   25866:	48 83 c0 02          	add    $0x2,%rax
   2586a:	48 39 c2             	cmp    %rax,%rdx
   2586d:	0f 83 b4 fc ff ff    	jae    25527 <e1000_loopback_test+0xbc3>
   25873:	ff 85 64 ff ff ff    	incl   0xffffffffffffff64(%rbp)
   25879:	e9 d6 fc ff ff       	jmpq   25554 <e1000_loopback_test+0xbf0>
   2587e:	b9 0d 00 00 00       	mov    $0xd,%ecx
   25883:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   2588a:	48 63 c1             	movslq %ecx,%rax
   2588d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25890: R_X86_64_32S	.rodata.str1.1+0x2fe9
   25894:	48 89 02             	mov    %rax,(%rdx)
   25897:	e8 00 00 00 00       	callq  2589c <e1000_loopback_test+0xf38>
			25898: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2589c:	4c 8b ad f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r13
   258a3:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   258aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			258ad: R_X86_64_32S	.rodata.str1.1+0xae
   258b1:	48 8b 99 b8 03 00 00 	mov    0x3b8(%rcx),%rbx
   258b8:	49 81 c5 b8 03 00 00 	add    $0x3b8,%r13
   258bf:	e8 00 00 00 00       	callq  258c4 <e1000_loopback_test+0xf60>
			258c0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   258c4:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   258cb:	4c 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%r8
   258d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			258d5: R_X86_64_32S	.rodata.str1.1+0xb4
   258d9:	41 80 e4 3f          	and    $0x3f,%r12b
   258dd:	49 8b 98 b8 03 00 00 	mov    0x3b8(%r8),%rbx
   258e4:	e8 00 00 00 00       	callq  258e9 <e1000_loopback_test+0xf85>
			258e5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   258e9:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   258f0:	44 89 23             	mov    %r12d,(%rbx)
   258f3:	41 8b 45 10          	mov    0x10(%r13),%eax
   258f7:	83 f8 0e             	cmp    $0xe,%eax
   258fa:	74 05                	je     25901 <e1000_loopback_test+0xf9d>
   258fc:	83 f8 0f             	cmp    $0xf,%eax
   258ff:	75 35                	jne    25936 <e1000_loopback_test+0xfd2>
   25901:	41 8b 45 1c          	mov    0x1c(%r13),%eax
   25905:	83 f8 01             	cmp    $0x1,%eax
   25908:	74 05                	je     2590f <e1000_loopback_test+0xfab>
   2590a:	83 f8 02             	cmp    $0x2,%eax
   2590d:	75 27                	jne    25936 <e1000_loopback_test+0xfd2>
   2590f:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   25913:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25916: R_X86_64_32S	.rodata.str1.1+0xb4
   2591a:	e8 00 00 00 00       	callq  2591f <e1000_loopback_test+0xfbb>
			2591b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2591f:	b8 00 04 00 00       	mov    $0x400,%eax
   25924:	48 83 c3 24          	add    $0x24,%rbx
   25928:	89 03                	mov    %eax,(%rbx)
   2592a:	bf 0a 00 00 00       	mov    $0xa,%edi
   2592f:	e8 1c 22 fe ff       	callq  7b50 <msleep>
   25934:	eb 56                	jmp    2598c <e1000_loopback_test+0x1028>
   25936:	41 83 7d 14 03       	cmpl   $0x3,0x14(%r13)
   2593b:	41 c6 85 ef 00 00 00 	movb   $0x1,0xef(%r13)
   25942:	01 
   25943:	75 12                	jne    25957 <e1000_loopback_test+0xff3>
   25945:	ba 80 01 00 00       	mov    $0x180,%edx
   2594a:	be 30 18 00 00       	mov    $0x1830,%esi
   2594f:	4c 89 ef             	mov    %r13,%rdi
   25952:	e8 30 05 fe ff       	callq  5e87 <e1000_write_phy_reg>
   25957:	48 8d 55 d6          	lea    0xffffffffffffffd6(%rbp),%rdx
   2595b:	31 f6                	xor    %esi,%esi
   2595d:	4c 89 ef             	mov    %r13,%rdi
   25960:	e8 74 07 fe ff       	callq  60d9 <e1000_read_phy_reg>
   25965:	66 8b 45 d6          	mov    0xffffffffffffffd6(%rbp),%ax
   25969:	f6 c4 40             	test   $0x40,%ah
   2596c:	74 1e                	je     2598c <e1000_loopback_test+0x1028>
   2596e:	89 c2                	mov    %eax,%edx
   25970:	4c 89 ef             	mov    %r13,%rdi
   25973:	31 f6                	xor    %esi,%esi
   25975:	80 e6 bf             	and    $0xbf,%dh
   25978:	66 89 55 d6          	mov    %dx,0xffffffffffffffd6(%rbp)
   2597c:	0f b7 d2             	movzwl %dx,%edx
   2597f:	e8 03 05 fe ff       	callq  5e87 <e1000_write_phy_reg>
   25984:	4c 89 ef             	mov    %r13,%rdi
   25987:	e8 b2 83 ff ff       	callq  1dd3e <e1000_phy_reset>
   2598c:	48 8b bd f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdi
   25993:	e8 c2 eb ff ff       	callq  2455a <e1000_free_desc_rings>
   25998:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   2599f:	48 8b 02             	mov    (%rdx),%rax
   259a2:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
   259a9:	5b                   	pop    %rbx
   259aa:	41 5c                	pop    %r12
   259ac:	41 5d                	pop    %r13
   259ae:	41 5e                	pop    %r14
   259b0:	41 5f                	pop    %r15
   259b2:	c9                   	leaveq 
   259b3:	c3                   	retq   

00000000000259b4 <e1000_free_rx_resources>:
   259b4:	55                   	push   %rbp
   259b5:	48 89 e5             	mov    %rsp,%rbp
   259b8:	41 57                	push   %r15
   259ba:	41 56                	push   %r14
   259bc:	45 31 f6             	xor    %r14d,%r14d
   259bf:	41 55                	push   %r13
   259c1:	49 89 f5             	mov    %rsi,%r13
   259c4:	41 54                	push   %r12
   259c6:	53                   	push   %rbx
   259c7:	48 89 fb             	mov    %rdi,%rbx
   259ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			259cd: R_X86_64_32S	.rodata.str1.1+0x3000
   259d1:	48 83 ec 18          	sub    $0x18,%rsp
   259d5:	e8 00 00 00 00       	callq  259da <e1000_free_rx_resources+0x26>
			259d6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   259da:	4c 89 ee             	mov    %r13,%rsi
   259dd:	48 89 df             	mov    %rbx,%rdi
   259e0:	4c 8b a3 f8 02 00 00 	mov    0x2f8(%rbx),%r12
   259e7:	e8 3f dd ff ff       	callq  2372b <e1000_clean_rx_ring>
   259ec:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   259f0:	e8 00 00 00 00       	callq  259f5 <e1000_free_rx_resources+0x41>
			259f1: R_X86_64_PC32	vfree+0xfffffffffffffffc
   259f5:	49 8b 45 08          	mov    0x8(%r13),%rax
   259f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			259fc: R_X86_64_32S	.rodata.str1.1+0x2dd3
   25a00:	49 c7 45 20 00 00 00 	movq   $0x0,0x20(%r13)
   25a07:	00 
   25a08:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   25a0c:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   25a10:	49 8b 45 00          	mov    0x0(%r13),%rax
   25a14:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   25a18:	e8 00 00 00 00       	callq  25a1d <e1000_free_rx_resources+0x69>
			25a19: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25a1d:	49 8d 84 24 80 00 00 	lea    0x80(%r12),%rax
   25a24:	00 
   25a25:	4d 85 e4             	test   %r12,%r12
   25a28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25a2b: R_X86_64_32S	.rodata.str1.1+0x2de7
   25a2f:	4c 0f 45 f0          	cmovne %rax,%r14
   25a33:	e8 00 00 00 00       	callq  25a38 <e1000_free_rx_resources+0x84>
			25a34: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25a38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25a3b: R_X86_64_32S	.rodata.str1.1+0x2ca6
   25a3f:	e8 00 00 00 00       	callq  25a44 <e1000_free_rx_resources+0x90>
			25a40: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25a44:	4d 85 f6             	test   %r14,%r14
   25a47:	75 09                	jne    25a52 <e1000_free_rx_resources+0x9e>
   25a49:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 25a50 <e1000_free_rx_resources+0x9c>
			25a4c: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25a50:	eb 12                	jmp    25a64 <e1000_free_rx_resources+0xb0>
   25a52:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   25a59:	4d 85 e4             	test   %r12,%r12
   25a5c:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 25a64 <e1000_free_rx_resources+0xb0>
   25a63:	00 
			25a60: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25a64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25a67: R_X86_64_32S	.rodata.str1.1+0x2df9
   25a6b:	e8 00 00 00 00       	callq  25a70 <e1000_free_rx_resources+0xbc>
			25a6c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25a70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25a73: R_X86_64_32S	.rodata.str1.1+0x2e10
   25a77:	e8 00 00 00 00       	callq  25a7c <e1000_free_rx_resources+0xc8>
			25a78: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25a7c:	9c                   	pushfq 
   25a7d:	5b                   	pop    %rbx
   25a7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25a81: R_X86_64_32S	.rodata.str1.1+0x2e1f
   25a85:	e8 00 00 00 00       	callq  25a8a <e1000_free_rx_resources+0xd6>
			25a86: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25a8a:	80 e7 02             	and    $0x2,%bh
   25a8d:	75 15                	jne    25aa4 <e1000_free_rx_resources+0xf0>
   25a8f:	31 d2                	xor    %edx,%edx
   25a91:	be 29 01 00 00       	mov    $0x129,%esi
   25a96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25a99: R_X86_64_32S	str_366789432
   25a9d:	31 c0                	xor    %eax,%eax
   25a9f:	e8 00 00 00 00       	callq  25aa4 <e1000_free_rx_resources+0xf0>
			25aa0: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   25aa4:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   25aa9:	48 85 c0             	test   %rax,%rax
   25aac:	74 10                	je     25abe <e1000_free_rx_resources+0x10a>
   25aae:	44 89 fe             	mov    %r15d,%esi
   25ab1:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   25ab5:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   25ab9:	4c 89 f7             	mov    %r14,%rdi
   25abc:	ff d0                	callq  *%rax
   25abe:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   25ac5:	00 
   25ac6:	48 83 c4 18          	add    $0x18,%rsp
   25aca:	5b                   	pop    %rbx
   25acb:	41 5c                	pop    %r12
   25acd:	41 5d                	pop    %r13
   25acf:	41 5e                	pop    %r14
   25ad1:	41 5f                	pop    %r15
   25ad3:	c9                   	leaveq 
   25ad4:	c3                   	retq   

0000000000025ad5 <e1000_free_all_rx_resources>:
   25ad5:	55                   	push   %rbp
   25ad6:	48 89 e5             	mov    %rsp,%rbp
   25ad9:	41 54                	push   %r12
   25adb:	45 31 e4             	xor    %r12d,%r12d
   25ade:	53                   	push   %rbx
   25adf:	48 89 fb             	mov    %rdi,%rbx
   25ae2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ae5: R_X86_64_32S	.rodata.str1.1+0x3018
   25ae9:	e8 00 00 00 00       	callq  25aee <e1000_free_all_rx_resources+0x19>
			25aea: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25aee:	44 3b a3 b4 02 00 00 	cmp    0x2b4(%rbx),%r12d
   25af5:	7d 1b                	jge    25b12 <e1000_free_all_rx_resources+0x3d>
   25af7:	49 63 f4             	movslq %r12d,%rsi
   25afa:	48 89 df             	mov    %rbx,%rdi
   25afd:	41 ff c4             	inc    %r12d
   25b00:	48 6b f6 30          	imul   $0x30,%rsi,%rsi
   25b04:	48 03 b3 20 02 00 00 	add    0x220(%rbx),%rsi
   25b0b:	e8 a4 fe ff ff       	callq  259b4 <e1000_free_rx_resources>
   25b10:	eb dc                	jmp    25aee <e1000_free_all_rx_resources+0x19>
   25b12:	5b                   	pop    %rbx
   25b13:	41 5c                	pop    %r12
   25b15:	c9                   	leaveq 
   25b16:	c3                   	retq   

0000000000025b17 <e1000_setup_all_rx_resources>:
   25b17:	55                   	push   %rbp
   25b18:	48 89 e5             	mov    %rsp,%rbp
   25b1b:	41 57                	push   %r15
   25b1d:	41 56                	push   %r14
   25b1f:	41 55                	push   %r13
   25b21:	41 54                	push   %r12
   25b23:	53                   	push   %rbx
   25b24:	48 83 ec 48          	sub    $0x48,%rsp
   25b28:	48 89 7d a0          	mov    %rdi,0xffffffffffffffa0(%rbp)
   25b2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25b2f: R_X86_64_32S	.rodata.str1.1+0x3034
   25b33:	e8 00 00 00 00       	callq  25b38 <e1000_setup_all_rx_resources+0x21>
			25b34: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25b38:	c7 45 ac 00 00 00 00 	movl   $0x0,0xffffffffffffffac(%rbp)
   25b3f:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   25b43:	8b 55 ac             	mov    0xffffffffffffffac(%rbp),%edx
   25b46:	3b 90 b4 02 00 00    	cmp    0x2b4(%rax),%edx
   25b4c:	0f 8d 5e 06 00 00    	jge    261b0 <e1000_setup_all_rx_resources+0x699>
   25b52:	48 63 c2             	movslq %edx,%rax
   25b55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25b58: R_X86_64_32S	.rodata.str1.1+0x3051
   25b5c:	4c 6b e8 30          	imul   $0x30,%rax,%r13
   25b60:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   25b64:	4c 03 a8 20 02 00 00 	add    0x220(%rax),%r13
   25b6b:	e8 00 00 00 00       	callq  25b70 <e1000_setup_all_rx_resources+0x59>
			25b6c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25b70:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   25b74:	48 8b 92 f8 02 00 00 	mov    0x2f8(%rdx),%rdx
   25b7b:	48 89 55 b0          	mov    %rdx,0xffffffffffffffb0(%rbp)
   25b7f:	41 8b 45 14          	mov    0x14(%r13),%eax
   25b83:	48 c1 e0 05          	shl    $0x5,%rax
   25b87:	48 63 d8             	movslq %eax,%rbx
   25b8a:	48 89 df             	mov    %rbx,%rdi
   25b8d:	e8 00 00 00 00       	callq  25b92 <e1000_setup_all_rx_resources+0x7b>
			25b8e: R_X86_64_PC32	vmalloc+0xfffffffffffffffc
   25b92:	48 85 c0             	test   %rax,%rax
   25b95:	48 89 c7             	mov    %rax,%rdi
   25b98:	49 89 45 20          	mov    %rax,0x20(%r13)
   25b9c:	0f 84 12 06 00 00    	je     261b4 <e1000_setup_all_rx_resources+0x69d>
   25ba2:	31 f6                	xor    %esi,%esi
   25ba4:	48 89 da             	mov    %rbx,%rdx
   25ba7:	e8 ff 1c fe ff       	callq  78ab <memset>
   25bac:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   25bb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25bb3: R_X86_64_32S	.rodata.str1.1+0x2e62
   25bb7:	83 b8 c8 03 00 00 0e 	cmpl   $0xe,0x3c8(%rax)
   25bbe:	19 c0                	sbb    %eax,%eax
   25bc0:	45 31 f6             	xor    %r14d,%r14d
   25bc3:	83 e0 f0             	and    $0xfffffffffffffff0,%eax
   25bc6:	83 c0 20             	add    $0x20,%eax
   25bc9:	41 0f af 45 14       	imul   0x14(%r13),%eax
   25bce:	44 8d b8 ff 0f 00 00 	lea    0xfff(%rax),%r15d
   25bd5:	41 81 e7 00 f0 ff ff 	and    $0xfffff000,%r15d
   25bdc:	45 89 7d 10          	mov    %r15d,0x10(%r13)
   25be0:	e8 00 00 00 00       	callq  25be5 <e1000_setup_all_rx_resources+0xce>
			25be1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25be5:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   25be9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25bec: R_X86_64_32S	.rodata.str1.1+0x2e77
   25bf0:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25bf4:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   25bf9:	4c 0f 45 f0          	cmovne %rax,%r14
   25bfd:	e8 00 00 00 00       	callq  25c02 <e1000_setup_all_rx_resources+0xeb>
			25bfe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25c02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25c05: R_X86_64_32S	.rodata.str1.1+0x2ca6
   25c09:	e8 00 00 00 00       	callq  25c0e <e1000_setup_all_rx_resources+0xf7>
			25c0a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25c0e:	4d 85 f6             	test   %r14,%r14
   25c11:	75 15                	jne    25c28 <e1000_setup_all_rx_resources+0x111>
   25c13:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 25c1a <e1000_setup_all_rx_resources+0x103>
			25c16: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25c1a:	bb 21 00 00 00       	mov    $0x21,%ebx
   25c1f:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
			25c22: R_X86_64_32S	x86_dma_fallback_dev
   25c26:	eb 17                	jmp    25c3f <e1000_setup_all_rx_resources+0x128>
   25c28:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   25c2f:	bb 20 00 00 00       	mov    $0x20,%ebx
   25c34:	4d 85 e4             	test   %r12,%r12
   25c37:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 25c3f <e1000_setup_all_rx_resources+0x128>
   25c3e:	00 
			25c3b: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25c3f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25c42: R_X86_64_32S	.rodata.str1.1+0x2e8a
   25c46:	e8 00 00 00 00       	callq  25c4b <e1000_setup_all_rx_resources+0x134>
			25c47: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25c4b:	49 8b 86 b0 01 00 00 	mov    0x1b0(%r14),%rax
   25c52:	48 85 c0             	test   %rax,%rax
   25c55:	0f 84 69 05 00 00    	je     261c4 <e1000_setup_all_rx_resources+0x6ad>
   25c5b:	48 83 38 00          	cmpq   $0x0,(%rax)
   25c5f:	0f 84 5f 05 00 00    	je     261c4 <e1000_setup_all_rx_resources+0x6ad>
   25c65:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
   25c6b:	0f 84 53 05 00 00    	je     261c4 <e1000_setup_all_rx_resources+0x6ad>
   25c71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25c74: R_X86_64_32S	.rodata.str1.1+0x2ea0
   25c78:	e8 00 00 00 00       	callq  25c7d <e1000_setup_all_rx_resources+0x166>
			25c79: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25c7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25c80: R_X86_64_32S	.rodata.str1.1+0x2ebd
   25c84:	e8 00 00 00 00       	callq  25c89 <e1000_setup_all_rx_resources+0x172>
			25c85: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25c89:	49 8b 96 b8 01 00 00 	mov    0x1b8(%r14),%rdx
   25c90:	48 85 d2             	test   %rdx,%rdx
   25c93:	75 07                	jne    25c9c <e1000_setup_all_rx_resources+0x185>
   25c95:	f6 c3 01             	test   $0x1,%bl
   25c98:	75 0b                	jne    25ca5 <e1000_setup_all_rx_resources+0x18e>
   25c9a:	eb 1d                	jmp    25cb9 <e1000_setup_all_rx_resources+0x1a2>
   25c9c:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   25ca3:	77 05                	ja     25caa <e1000_setup_all_rx_resources+0x193>
   25ca5:	83 cb 01             	or     $0x1,%ebx
   25ca8:	eb 0a                	jmp    25cb4 <e1000_setup_all_rx_resources+0x19d>
   25caa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25caf:	48 39 c2             	cmp    %rax,%rdx
   25cb2:	77 08                	ja     25cbc <e1000_setup_all_rx_resources+0x1a5>
   25cb4:	f6 c3 01             	test   $0x1,%bl
   25cb7:	75 03                	jne    25cbc <e1000_setup_all_rx_resources+0x1a5>
   25cb9:	83 cb 04             	or     $0x4,%ebx
   25cbc:	49 8d 55 08          	lea    0x8(%r13),%rdx
   25cc0:	44 89 fe             	mov    %r15d,%esi
   25cc3:	89 d9                	mov    %ebx,%ecx
   25cc5:	4c 89 f7             	mov    %r14,%rdi
   25cc8:	48 89 55 d0          	mov    %rdx,0xffffffffffffffd0(%rbp)
   25ccc:	41 ff 54 24 08       	callq  *0x8(%r12)
   25cd1:	48 85 c0             	test   %rax,%rax
   25cd4:	48 89 c6             	mov    %rax,%rsi
   25cd7:	49 89 45 00          	mov    %rax,0x0(%r13)
   25cdb:	75 1c                	jne    25cf9 <e1000_setup_all_rx_resources+0x1e2>
   25cdd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ce0: R_X86_64_32S	str_878317376
   25ce4:	31 c0                	xor    %eax,%eax
   25ce6:	e8 00 00 00 00       	callq  25ceb <e1000_setup_all_rx_resources+0x1d4>
			25ce7: R_X86_64_PC32	printk+0xfffffffffffffffc
   25ceb:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   25cef:	e8 00 00 00 00       	callq  25cf4 <e1000_setup_all_rx_resources+0x1dd>
			25cf0: R_X86_64_PC32	vfree+0xfffffffffffffffc
   25cf4:	e9 81 04 00 00       	jmpq   2617a <e1000_setup_all_rx_resources+0x663>
   25cf9:	41 8b 55 10          	mov    0x10(%r13),%edx
   25cfd:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   25d01:	e8 93 b2 fd ff       	callq  f99 <e1000_check_64k_bound>
   25d06:	84 c0                	test   %al,%al
   25d08:	0f 85 45 04 00 00    	jne    26153 <e1000_setup_all_rx_resources+0x63c>
   25d0e:	49 8b 45 00          	mov    0x0(%r13),%rax
   25d12:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25d15: R_X86_64_32S	str_959038149
   25d19:	45 31 f6             	xor    %r14d,%r14d
   25d1c:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   25d20:	49 8b 55 08          	mov    0x8(%r13),%rdx
   25d24:	48 89 55 b8          	mov    %rdx,0xffffffffffffffb8(%rbp)
   25d28:	41 8b 75 10          	mov    0x10(%r13),%esi
   25d2c:	48 89 c2             	mov    %rax,%rdx
   25d2f:	31 c0                	xor    %eax,%eax
   25d31:	e8 00 00 00 00       	callq  25d36 <e1000_setup_all_rx_resources+0x21f>
			25d32: R_X86_64_PC32	printk+0xfffffffffffffffc
   25d36:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25d39: R_X86_64_32S	.rodata.str1.1+0x2e62
   25d3d:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   25d41:	e8 00 00 00 00       	callq  25d46 <e1000_setup_all_rx_resources+0x22f>
			25d42: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25d46:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   25d4a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25d4d: R_X86_64_32S	.rodata.str1.1+0x2e77
   25d51:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25d55:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   25d5a:	4c 0f 45 f0          	cmovne %rax,%r14
   25d5e:	e8 00 00 00 00       	callq  25d63 <e1000_setup_all_rx_resources+0x24c>
			25d5f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25d63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25d66: R_X86_64_32S	.rodata.str1.1+0x2ca6
   25d6a:	e8 00 00 00 00       	callq  25d6f <e1000_setup_all_rx_resources+0x258>
			25d6b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25d6f:	4d 85 f6             	test   %r14,%r14
   25d72:	75 15                	jne    25d89 <e1000_setup_all_rx_resources+0x272>
   25d74:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 25d7b <e1000_setup_all_rx_resources+0x264>
			25d77: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25d7b:	bb 21 00 00 00       	mov    $0x21,%ebx
   25d80:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
			25d83: R_X86_64_32S	x86_dma_fallback_dev
   25d87:	eb 17                	jmp    25da0 <e1000_setup_all_rx_resources+0x289>
   25d89:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   25d90:	bb 20 00 00 00       	mov    $0x20,%ebx
   25d95:	4d 85 e4             	test   %r12,%r12
   25d98:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 25da0 <e1000_setup_all_rx_resources+0x289>
   25d9f:	00 
			25d9c: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25da0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25da3: R_X86_64_32S	.rodata.str1.1+0x2e8a
   25da7:	e8 00 00 00 00       	callq  25dac <e1000_setup_all_rx_resources+0x295>
			25da8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25dac:	49 8b 86 b0 01 00 00 	mov    0x1b0(%r14),%rax
   25db3:	48 85 c0             	test   %rax,%rax
   25db6:	0f 84 15 04 00 00    	je     261d1 <e1000_setup_all_rx_resources+0x6ba>
   25dbc:	48 83 38 00          	cmpq   $0x0,(%rax)
   25dc0:	0f 84 0b 04 00 00    	je     261d1 <e1000_setup_all_rx_resources+0x6ba>
   25dc6:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
   25dcc:	0f 84 ff 03 00 00    	je     261d1 <e1000_setup_all_rx_resources+0x6ba>
   25dd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25dd5: R_X86_64_32S	.rodata.str1.1+0x2ea0
   25dd9:	e8 00 00 00 00       	callq  25dde <e1000_setup_all_rx_resources+0x2c7>
			25dda: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25dde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25de1: R_X86_64_32S	.rodata.str1.1+0x2ebd
   25de5:	e8 00 00 00 00       	callq  25dea <e1000_setup_all_rx_resources+0x2d3>
			25de6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25dea:	49 8b 96 b8 01 00 00 	mov    0x1b8(%r14),%rdx
   25df1:	48 85 d2             	test   %rdx,%rdx
   25df4:	75 07                	jne    25dfd <e1000_setup_all_rx_resources+0x2e6>
   25df6:	f6 c3 01             	test   $0x1,%bl
   25df9:	75 0b                	jne    25e06 <e1000_setup_all_rx_resources+0x2ef>
   25dfb:	eb 1d                	jmp    25e1a <e1000_setup_all_rx_resources+0x303>
   25dfd:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   25e04:	77 05                	ja     25e0b <e1000_setup_all_rx_resources+0x2f4>
   25e06:	83 cb 01             	or     $0x1,%ebx
   25e09:	eb 0a                	jmp    25e15 <e1000_setup_all_rx_resources+0x2fe>
   25e0b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25e10:	48 39 c2             	cmp    %rax,%rdx
   25e13:	77 08                	ja     25e1d <e1000_setup_all_rx_resources+0x306>
   25e15:	f6 c3 01             	test   $0x1,%bl
   25e18:	75 03                	jne    25e1d <e1000_setup_all_rx_resources+0x306>
   25e1a:	83 cb 04             	or     $0x4,%ebx
   25e1d:	44 89 fe             	mov    %r15d,%esi
   25e20:	89 d9                	mov    %ebx,%ecx
   25e22:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   25e26:	4c 89 f7             	mov    %r14,%rdi
   25e29:	41 ff 54 24 08       	callq  *0x8(%r12)
   25e2e:	48 85 c0             	test   %rax,%rax
   25e31:	48 89 c6             	mov    %rax,%rsi
   25e34:	49 89 45 00          	mov    %rax,0x0(%r13)
   25e38:	0f 85 bf 00 00 00    	jne    25efd <e1000_setup_all_rx_resources+0x3e6>
   25e3e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25e41: R_X86_64_32S	.rodata.str1.1+0x2dd3
   25e45:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   25e49:	45 31 f6             	xor    %r14d,%r14d
   25e4c:	e8 00 00 00 00       	callq  25e51 <e1000_setup_all_rx_resources+0x33a>
			25e4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25e51:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   25e55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25e58: R_X86_64_32S	.rodata.str1.1+0x2de7
   25e5c:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25e60:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   25e65:	4c 0f 45 f0          	cmovne %rax,%r14
   25e69:	e8 00 00 00 00       	callq  25e6e <e1000_setup_all_rx_resources+0x357>
			25e6a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25e6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25e71: R_X86_64_32S	.rodata.str1.1+0x2ca6
   25e75:	e8 00 00 00 00       	callq  25e7a <e1000_setup_all_rx_resources+0x363>
			25e76: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25e7a:	4d 85 f6             	test   %r14,%r14
   25e7d:	75 09                	jne    25e88 <e1000_setup_all_rx_resources+0x371>
   25e7f:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 25e86 <e1000_setup_all_rx_resources+0x36f>
			25e82: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25e86:	eb 12                	jmp    25e9a <e1000_setup_all_rx_resources+0x383>
   25e88:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   25e8f:	4d 85 e4             	test   %r12,%r12
   25e92:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 25e9a <e1000_setup_all_rx_resources+0x383>
   25e99:	00 
			25e96: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25e9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25e9d: R_X86_64_32S	.rodata.str1.1+0x2df9
   25ea1:	e8 00 00 00 00       	callq  25ea6 <e1000_setup_all_rx_resources+0x38f>
			25ea2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25ea6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ea9: R_X86_64_32S	.rodata.str1.1+0x2e10
   25ead:	e8 00 00 00 00       	callq  25eb2 <e1000_setup_all_rx_resources+0x39b>
			25eae: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25eb2:	9c                   	pushfq 
   25eb3:	5b                   	pop    %rbx
   25eb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25eb7: R_X86_64_32S	.rodata.str1.1+0x2e1f
   25ebb:	e8 00 00 00 00       	callq  25ec0 <e1000_setup_all_rx_resources+0x3a9>
			25ebc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25ec0:	80 e7 02             	and    $0x2,%bh
   25ec3:	75 15                	jne    25eda <e1000_setup_all_rx_resources+0x3c3>
   25ec5:	31 d2                	xor    %edx,%edx
   25ec7:	be 29 01 00 00       	mov    $0x129,%esi
   25ecc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ecf: R_X86_64_32S	str_366789432
   25ed3:	31 c0                	xor    %eax,%eax
   25ed5:	e8 00 00 00 00       	callq  25eda <e1000_setup_all_rx_resources+0x3c3>
			25ed6: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   25eda:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   25edf:	48 85 c0             	test   %rax,%rax
   25ee2:	0f 84 f5 fd ff ff    	je     25cdd <e1000_setup_all_rx_resources+0x1c6>
   25ee8:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   25eec:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   25ef0:	44 89 fe             	mov    %r15d,%esi
   25ef3:	4c 89 f7             	mov    %r14,%rdi
   25ef6:	ff d0                	callq  *%rax
   25ef8:	e9 e0 fd ff ff       	jmpq   25cdd <e1000_setup_all_rx_resources+0x1c6>
   25efd:	41 8b 55 10          	mov    0x10(%r13),%edx
   25f01:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   25f05:	e8 8f b0 fd ff       	callq  f99 <e1000_check_64k_bound>
   25f0a:	84 c0                	test   %al,%al
   25f0c:	41 8b 45 10          	mov    0x10(%r13),%eax
   25f10:	89 45 9c             	mov    %eax,0xffffffffffffff9c(%rbp)
   25f13:	0f 84 bb 00 00 00    	je     25fd4 <e1000_setup_all_rx_resources+0x4bd>
   25f19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25f1c: R_X86_64_32S	.rodata.str1.1+0x2dd3
   25f20:	45 31 f6             	xor    %r14d,%r14d
   25f23:	e8 00 00 00 00       	callq  25f28 <e1000_setup_all_rx_resources+0x411>
			25f24: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25f28:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   25f2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25f2f: R_X86_64_32S	.rodata.str1.1+0x2de7
   25f33:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25f37:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   25f3c:	4c 0f 45 f0          	cmovne %rax,%r14
   25f40:	e8 00 00 00 00       	callq  25f45 <e1000_setup_all_rx_resources+0x42e>
			25f41: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25f45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25f48: R_X86_64_32S	.rodata.str1.1+0x2ca6
   25f4c:	e8 00 00 00 00       	callq  25f51 <e1000_setup_all_rx_resources+0x43a>
			25f4d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25f51:	4d 85 f6             	test   %r14,%r14
   25f54:	75 09                	jne    25f5f <e1000_setup_all_rx_resources+0x448>
   25f56:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 25f5d <e1000_setup_all_rx_resources+0x446>
			25f59: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25f5d:	eb 12                	jmp    25f71 <e1000_setup_all_rx_resources+0x45a>
   25f5f:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   25f66:	4d 85 e4             	test   %r12,%r12
   25f69:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 25f71 <e1000_setup_all_rx_resources+0x45a>
   25f70:	00 
			25f6d: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   25f71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25f74: R_X86_64_32S	.rodata.str1.1+0x2df9
   25f78:	e8 00 00 00 00       	callq  25f7d <e1000_setup_all_rx_resources+0x466>
			25f79: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25f7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25f80: R_X86_64_32S	.rodata.str1.1+0x2e10
   25f84:	e8 00 00 00 00       	callq  25f89 <e1000_setup_all_rx_resources+0x472>
			25f85: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25f89:	9c                   	pushfq 
   25f8a:	5b                   	pop    %rbx
   25f8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25f8e: R_X86_64_32S	.rodata.str1.1+0x2e1f
   25f92:	e8 00 00 00 00       	callq  25f97 <e1000_setup_all_rx_resources+0x480>
			25f93: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25f97:	80 e7 02             	and    $0x2,%bh
   25f9a:	75 15                	jne    25fb1 <e1000_setup_all_rx_resources+0x49a>
   25f9c:	31 d2                	xor    %edx,%edx
   25f9e:	be 29 01 00 00       	mov    $0x129,%esi
   25fa3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25fa6: R_X86_64_32S	str_366789432
   25faa:	31 c0                	xor    %eax,%eax
   25fac:	e8 00 00 00 00       	callq  25fb1 <e1000_setup_all_rx_resources+0x49a>
			25fad: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   25fb1:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   25fb6:	48 85 c0             	test   %rax,%rax
   25fb9:	0f 84 94 01 00 00    	je     26153 <e1000_setup_all_rx_resources+0x63c>
   25fbf:	8b 75 9c             	mov    0xffffffffffffff9c(%rbp),%esi
   25fc2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   25fc6:	4c 89 f7             	mov    %r14,%rdi
   25fc9:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   25fcd:	ff d0                	callq  *%rax
   25fcf:	e9 7f 01 00 00       	jmpq   26153 <e1000_setup_all_rx_resources+0x63c>
   25fd4:	49 8b 55 08          	mov    0x8(%r13),%rdx
   25fd8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25fdb: R_X86_64_32S	.rodata.str1.1+0x2dd3
   25fdf:	45 31 f6             	xor    %r14d,%r14d
   25fe2:	48 89 55 c8          	mov    %rdx,0xffffffffffffffc8(%rbp)
   25fe6:	4d 8b 7d 00          	mov    0x0(%r13),%r15
   25fea:	e8 00 00 00 00       	callq  25fef <e1000_setup_all_rx_resources+0x4d8>
			25feb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   25fef:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   25ff3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			25ff6: R_X86_64_32S	.rodata.str1.1+0x2de7
   25ffa:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   25ffe:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   26003:	4c 0f 45 f0          	cmovne %rax,%r14
   26007:	e8 00 00 00 00       	callq  2600c <e1000_setup_all_rx_resources+0x4f5>
			26008: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2600c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2600f: R_X86_64_32S	.rodata.str1.1+0x2ca6
   26013:	e8 00 00 00 00       	callq  26018 <e1000_setup_all_rx_resources+0x501>
			26014: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26018:	4d 85 f6             	test   %r14,%r14
   2601b:	75 09                	jne    26026 <e1000_setup_all_rx_resources+0x50f>
   2601d:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 26024 <e1000_setup_all_rx_resources+0x50d>
			26020: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26024:	eb 12                	jmp    26038 <e1000_setup_all_rx_resources+0x521>
   26026:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   2602d:	4d 85 e4             	test   %r12,%r12
   26030:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26038 <e1000_setup_all_rx_resources+0x521>
   26037:	00 
			26034: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26038:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2603b: R_X86_64_32S	.rodata.str1.1+0x2df9
   2603f:	e8 00 00 00 00       	callq  26044 <e1000_setup_all_rx_resources+0x52d>
			26040: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26044:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26047: R_X86_64_32S	.rodata.str1.1+0x2e10
   2604b:	e8 00 00 00 00       	callq  26050 <e1000_setup_all_rx_resources+0x539>
			2604c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26050:	9c                   	pushfq 
   26051:	5b                   	pop    %rbx
   26052:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26055: R_X86_64_32S	.rodata.str1.1+0x2e1f
   26059:	e8 00 00 00 00       	callq  2605e <e1000_setup_all_rx_resources+0x547>
			2605a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2605e:	80 e7 02             	and    $0x2,%bh
   26061:	75 15                	jne    26078 <e1000_setup_all_rx_resources+0x561>
   26063:	31 d2                	xor    %edx,%edx
   26065:	be 29 01 00 00       	mov    $0x129,%esi
   2606a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2606d: R_X86_64_32S	str_366789432
   26071:	31 c0                	xor    %eax,%eax
   26073:	e8 00 00 00 00       	callq  26078 <e1000_setup_all_rx_resources+0x561>
			26074: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   26078:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   2607d:	48 85 c0             	test   %rax,%rax
   26080:	74 0f                	je     26091 <e1000_setup_all_rx_resources+0x57a>
   26082:	8b 75 9c             	mov    0xffffffffffffff9c(%rbp),%esi
   26085:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   26089:	4c 89 fa             	mov    %r15,%rdx
   2608c:	4c 89 f7             	mov    %r14,%rdi
   2608f:	ff d0                	callq  *%rax
   26091:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26094: R_X86_64_32S	.rodata.str1.1+0x2dd3
   26098:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   2609c:	45 31 f6             	xor    %r14d,%r14d
   2609f:	e8 00 00 00 00       	callq  260a4 <e1000_setup_all_rx_resources+0x58d>
			260a0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   260a4:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   260a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			260ab: R_X86_64_32S	.rodata.str1.1+0x2de7
   260af:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   260b3:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   260b8:	4c 0f 45 f0          	cmovne %rax,%r14
   260bc:	e8 00 00 00 00       	callq  260c1 <e1000_setup_all_rx_resources+0x5aa>
			260bd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   260c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			260c4: R_X86_64_32S	.rodata.str1.1+0x2ca6
   260c8:	e8 00 00 00 00       	callq  260cd <e1000_setup_all_rx_resources+0x5b6>
			260c9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   260cd:	4d 85 f6             	test   %r14,%r14
   260d0:	75 09                	jne    260db <e1000_setup_all_rx_resources+0x5c4>
   260d2:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 260d9 <e1000_setup_all_rx_resources+0x5c2>
			260d5: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   260d9:	eb 12                	jmp    260ed <e1000_setup_all_rx_resources+0x5d6>
   260db:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   260e2:	4d 85 e4             	test   %r12,%r12
   260e5:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 260ed <e1000_setup_all_rx_resources+0x5d6>
   260ec:	00 
			260e9: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   260ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			260f0: R_X86_64_32S	.rodata.str1.1+0x2df9
   260f4:	e8 00 00 00 00       	callq  260f9 <e1000_setup_all_rx_resources+0x5e2>
			260f5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   260f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			260fc: R_X86_64_32S	.rodata.str1.1+0x2e10
   26100:	e8 00 00 00 00       	callq  26105 <e1000_setup_all_rx_resources+0x5ee>
			26101: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26105:	9c                   	pushfq 
   26106:	5b                   	pop    %rbx
   26107:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2610a: R_X86_64_32S	.rodata.str1.1+0x2e1f
   2610e:	e8 00 00 00 00       	callq  26113 <e1000_setup_all_rx_resources+0x5fc>
			2610f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26113:	80 e7 02             	and    $0x2,%bh
   26116:	75 15                	jne    2612d <e1000_setup_all_rx_resources+0x616>
   26118:	31 d2                	xor    %edx,%edx
   2611a:	be 29 01 00 00       	mov    $0x129,%esi
   2611f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26122: R_X86_64_32S	str_366789432
   26126:	31 c0                	xor    %eax,%eax
   26128:	e8 00 00 00 00       	callq  2612d <e1000_setup_all_rx_resources+0x616>
			26129: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   2612d:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   26132:	48 85 c0             	test   %rax,%rax
   26135:	74 10                	je     26147 <e1000_setup_all_rx_resources+0x630>
   26137:	44 89 fe             	mov    %r15d,%esi
   2613a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2613e:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   26142:	4c 89 f7             	mov    %r14,%rdi
   26145:	ff d0                	callq  *%rax
   26147:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2614a: R_X86_64_32S	str_511117956
   2614e:	e9 91 fb ff ff       	jmpq   25ce4 <e1000_setup_all_rx_resources+0x1cd>
   26153:	41 8b 55 10          	mov    0x10(%r13),%edx
   26157:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   2615b:	31 f6                	xor    %esi,%esi
   2615d:	e8 49 17 fe ff       	callq  78ab <memset>
   26162:	41 c7 45 1c 00 00 00 	movl   $0x0,0x1c(%r13)
   26169:	00 
   2616a:	41 c7 45 18 00 00 00 	movl   $0x0,0x18(%r13)
   26171:	00 
   26172:	ff 45 ac             	incl   0xffffffffffffffac(%rbp)
   26175:	e9 c5 f9 ff ff       	jmpq   25b3f <e1000_setup_all_rx_resources+0x28>
   2617a:	8b 75 ac             	mov    0xffffffffffffffac(%rbp),%esi
   2617d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26180: R_X86_64_32S	str_804937019
   26184:	31 c0                	xor    %eax,%eax
   26186:	e8 00 00 00 00       	callq  2618b <e1000_setup_all_rx_resources+0x674>
			26187: R_X86_64_PC32	printk+0xfffffffffffffffc
   2618b:	8b 5d ac             	mov    0xffffffffffffffac(%rbp),%ebx
   2618e:	ff cb                	dec    %ebx
   26190:	85 db                	test   %ebx,%ebx
   26192:	78 4a                	js     261de <e1000_setup_all_rx_resources+0x6c7>
   26194:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   26198:	48 63 f3             	movslq %ebx,%rsi
   2619b:	48 6b f6 30          	imul   $0x30,%rsi,%rsi
   2619f:	48 03 b0 20 02 00 00 	add    0x220(%rax),%rsi
   261a6:	48 89 c7             	mov    %rax,%rdi
   261a9:	e8 06 f8 ff ff       	callq  259b4 <e1000_free_rx_resources>
   261ae:	eb de                	jmp    2618e <e1000_setup_all_rx_resources+0x677>
   261b0:	31 c0                	xor    %eax,%eax
   261b2:	eb 2f                	jmp    261e3 <e1000_setup_all_rx_resources+0x6cc>
   261b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			261b7: R_X86_64_32S	str_878317376
   261bb:	31 c0                	xor    %eax,%eax
   261bd:	e8 00 00 00 00       	callq  261c2 <e1000_setup_all_rx_resources+0x6ab>
			261be: R_X86_64_PC32	printk+0xfffffffffffffffc
   261c2:	eb b6                	jmp    2617a <e1000_setup_all_rx_resources+0x663>
   261c4:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   261cb:	00 
   261cc:	e9 0c fb ff ff       	jmpq   25cdd <e1000_setup_all_rx_resources+0x1c6>
   261d1:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   261d8:	00 
   261d9:	e9 60 fc ff ff       	jmpq   25e3e <e1000_setup_all_rx_resources+0x327>
   261de:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
   261e3:	48 83 c4 48          	add    $0x48,%rsp
   261e7:	5b                   	pop    %rbx
   261e8:	41 5c                	pop    %r12
   261ea:	41 5d                	pop    %r13
   261ec:	41 5e                	pop    %r14
   261ee:	41 5f                	pop    %r15
   261f0:	c9                   	leaveq 
   261f1:	c3                   	retq   

00000000000261f2 <e1000_unmap_and_free_tx_resource>:
   261f2:	55                   	push   %rbp
   261f3:	48 89 e5             	mov    %rsp,%rbp
   261f6:	41 57                	push   %r15
   261f8:	41 56                	push   %r14
   261fa:	41 55                	push   %r13
   261fc:	41 54                	push   %r12
   261fe:	49 89 f4             	mov    %rsi,%r12
   26201:	53                   	push   %rbx
   26202:	48 89 fb             	mov    %rdi,%rbx
   26205:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26208: R_X86_64_32S	.rodata.str1.1+0x306a
   2620c:	48 83 ec 08          	sub    $0x8,%rsp
   26210:	e8 00 00 00 00       	callq  26215 <e1000_unmap_and_free_tx_resource+0x23>
			26211: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26215:	4d 8b 74 24 08       	mov    0x8(%r12),%r14
   2621a:	4d 85 f6             	test   %r14,%r14
   2621d:	0f 84 9c 00 00 00    	je     262bf <e1000_unmap_and_free_tx_resource+0xcd>
   26223:	48 8b 9b f8 02 00 00 	mov    0x2f8(%rbx),%rbx
   2622a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2622d: R_X86_64_32S	.rodata.str1.1+0x308b
   26231:	45 8b 7c 24 18       	mov    0x18(%r12),%r15d
   26236:	e8 00 00 00 00       	callq  2623b <e1000_unmap_and_free_tx_resource+0x49>
			26237: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2623b:	45 31 ed             	xor    %r13d,%r13d
   2623e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26241: R_X86_64_32S	.rodata.str1.1+0x309a
   26245:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   2624c:	48 85 db             	test   %rbx,%rbx
   2624f:	4c 0f 45 e8          	cmovne %rax,%r13
   26253:	e8 00 00 00 00       	callq  26258 <e1000_unmap_and_free_tx_resource+0x66>
			26254: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26258:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2625b: R_X86_64_32S	.rodata.str1.1+0x2c95
   2625f:	e8 00 00 00 00       	callq  26264 <e1000_unmap_and_free_tx_resource+0x72>
			26260: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26264:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26267: R_X86_64_32S	.rodata.str1.1+0x2ca6
   2626b:	e8 00 00 00 00       	callq  26270 <e1000_unmap_and_free_tx_resource+0x7e>
			2626c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26270:	4d 85 ed             	test   %r13,%r13
   26273:	75 09                	jne    2627e <e1000_unmap_and_free_tx_resource+0x8c>
   26275:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 2627c <e1000_unmap_and_free_tx_resource+0x8a>
			26278: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   2627c:	eb 12                	jmp    26290 <e1000_unmap_and_free_tx_resource+0x9e>
   2627e:	49 8b 9d e8 01 00 00 	mov    0x1e8(%r13),%rbx
   26285:	48 85 db             	test   %rbx,%rbx
   26288:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 26290 <e1000_unmap_and_free_tx_resource+0x9e>
   2628f:	00 
			2628c: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26290:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26293: R_X86_64_32S	.rodata.str1.1+0x2cb2
   26297:	e8 00 00 00 00       	callq  2629c <e1000_unmap_and_free_tx_resource+0xaa>
			26298: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2629c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   262a0:	48 85 c0             	test   %rax,%rax
   262a3:	74 11                	je     262b6 <e1000_unmap_and_free_tx_resource+0xc4>
   262a5:	41 0f b7 d7          	movzwl %r15w,%edx
   262a9:	b9 01 00 00 00       	mov    $0x1,%ecx
   262ae:	4c 89 f6             	mov    %r14,%rsi
   262b1:	4c 89 ef             	mov    %r13,%rdi
   262b4:	ff d0                	callq  *%rax
   262b6:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
   262bd:	00 00 
   262bf:	49 8b 3c 24          	mov    (%r12),%rdi
   262c3:	48 85 ff             	test   %rdi,%rdi
   262c6:	74 0d                	je     262d5 <e1000_unmap_and_free_tx_resource+0xe3>
   262c8:	e8 00 00 00 00       	callq  262cd <e1000_unmap_and_free_tx_resource+0xdb>
			262c9: R_X86_64_PC32	dev_kfree_skb_any+0xfffffffffffffffc
   262cd:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   262d4:	00 
   262d5:	41 5b                	pop    %r11
   262d7:	5b                   	pop    %rbx
   262d8:	41 5c                	pop    %r12
   262da:	41 5d                	pop    %r13
   262dc:	41 5e                	pop    %r14
   262de:	41 5f                	pop    %r15
   262e0:	c9                   	leaveq 
   262e1:	c3                   	retq   

00000000000262e2 <e1000_clean_tx_ring>:
   262e2:	55                   	push   %rbp
   262e3:	48 89 e5             	mov    %rsp,%rbp
   262e6:	41 57                	push   %r15
   262e8:	41 56                	push   %r14
   262ea:	49 89 f6             	mov    %rsi,%r14
   262ed:	41 55                	push   %r13
   262ef:	41 54                	push   %r12
   262f1:	49 89 fc             	mov    %rdi,%r12
   262f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			262f7: R_X86_64_32S	.rodata.str1.1+0x30a9
   262fb:	4d 8d bc 24 b8 03 00 	lea    0x3b8(%r12),%r15
   26302:	00 
   26303:	53                   	push   %rbx
   26304:	31 db                	xor    %ebx,%ebx
   26306:	48 83 ec 08          	sub    $0x8,%rsp
   2630a:	e8 00 00 00 00       	callq  2630f <e1000_clean_tx_ring+0x2d>
			2630b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2630f:	89 d8                	mov    %ebx,%eax
   26311:	48 ff c3             	inc    %rbx
   26314:	41 3b 46 14          	cmp    0x14(%r14),%eax
   26318:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   2631c:	73 14                	jae    26332 <e1000_clean_tx_ring+0x50>
   2631e:	89 c6                	mov    %eax,%esi
   26320:	48 c1 e6 05          	shl    $0x5,%rsi
   26324:	48 8d 34 37          	lea    (%rdi,%rsi,1),%rsi
   26328:	4c 89 e7             	mov    %r12,%rdi
   2632b:	e8 c2 fe ff ff       	callq  261f2 <e1000_unmap_and_free_tx_resource>
   26330:	eb dd                	jmp    2630f <e1000_clean_tx_ring+0x2d>
   26332:	41 8b 56 14          	mov    0x14(%r14),%edx
   26336:	31 f6                	xor    %esi,%esi
   26338:	45 31 ed             	xor    %r13d,%r13d
   2633b:	48 c1 e2 05          	shl    $0x5,%rdx
   2633f:	e8 67 15 fe ff       	callq  78ab <memset>
   26344:	41 8b 56 10          	mov    0x10(%r14),%edx
   26348:	49 8b 3e             	mov    (%r14),%rdi
   2634b:	31 f6                	xor    %esi,%esi
   2634d:	e8 59 15 fe ff       	callq  78ab <memset>
   26352:	41 0f b7 5e 58       	movzwl 0x58(%r14),%ebx
   26357:	41 c7 46 18 00 00 00 	movl   $0x0,0x18(%r14)
   2635e:	00 
   2635f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26362: R_X86_64_32S	.rodata.str1.1+0xb4
   26366:	41 c7 46 1c 00 00 00 	movl   $0x0,0x1c(%r14)
   2636d:	00 
   2636e:	41 c6 46 5c 00       	movb   $0x0,0x5c(%r14)
   26373:	4d 8b 27             	mov    (%r15),%r12
   26376:	e8 00 00 00 00       	callq  2637b <e1000_clean_tx_ring+0x99>
			26377: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2637b:	49 01 dc             	add    %rbx,%r12
   2637e:	45 89 2c 24          	mov    %r13d,(%r12)
   26382:	41 0f b7 5e 5a       	movzwl 0x5a(%r14),%ebx
   26387:	4d 8b 27             	mov    (%r15),%r12
   2638a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2638d: R_X86_64_32S	.rodata.str1.1+0xb4
   26391:	e8 00 00 00 00       	callq  26396 <e1000_clean_tx_ring+0xb4>
			26392: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26396:	49 01 dc             	add    %rbx,%r12
   26399:	45 89 2c 24          	mov    %r13d,(%r12)
   2639d:	5b                   	pop    %rbx
   2639e:	5b                   	pop    %rbx
   2639f:	41 5c                	pop    %r12
   263a1:	41 5d                	pop    %r13
   263a3:	41 5e                	pop    %r14
   263a5:	41 5f                	pop    %r15
   263a7:	c9                   	leaveq 
   263a8:	c3                   	retq   

00000000000263a9 <e1000_free_tx_resources>:
   263a9:	55                   	push   %rbp
   263aa:	48 89 e5             	mov    %rsp,%rbp
   263ad:	41 57                	push   %r15
   263af:	41 56                	push   %r14
   263b1:	45 31 f6             	xor    %r14d,%r14d
   263b4:	41 55                	push   %r13
   263b6:	49 89 f5             	mov    %rsi,%r13
   263b9:	41 54                	push   %r12
   263bb:	53                   	push   %rbx
   263bc:	48 89 fb             	mov    %rdi,%rbx
   263bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			263c2: R_X86_64_32S	.rodata.str1.1+0x30bd
   263c6:	48 83 ec 18          	sub    $0x18,%rsp
   263ca:	e8 00 00 00 00       	callq  263cf <e1000_free_tx_resources+0x26>
			263cb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   263cf:	4c 89 ee             	mov    %r13,%rsi
   263d2:	48 89 df             	mov    %rbx,%rdi
   263d5:	4c 8b a3 f8 02 00 00 	mov    0x2f8(%rbx),%r12
   263dc:	e8 01 ff ff ff       	callq  262e2 <e1000_clean_tx_ring>
   263e1:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   263e5:	e8 00 00 00 00       	callq  263ea <e1000_free_tx_resources+0x41>
			263e6: R_X86_64_PC32	vfree+0xfffffffffffffffc
   263ea:	49 8b 45 08          	mov    0x8(%r13),%rax
   263ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			263f1: R_X86_64_32S	.rodata.str1.1+0x2dd3
   263f5:	49 c7 45 20 00 00 00 	movq   $0x0,0x20(%r13)
   263fc:	00 
   263fd:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   26401:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   26405:	49 8b 45 00          	mov    0x0(%r13),%rax
   26409:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   2640d:	e8 00 00 00 00       	callq  26412 <e1000_free_tx_resources+0x69>
			2640e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26412:	49 8d 84 24 80 00 00 	lea    0x80(%r12),%rax
   26419:	00 
   2641a:	4d 85 e4             	test   %r12,%r12
   2641d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26420: R_X86_64_32S	.rodata.str1.1+0x2de7
   26424:	4c 0f 45 f0          	cmovne %rax,%r14
   26428:	e8 00 00 00 00       	callq  2642d <e1000_free_tx_resources+0x84>
			26429: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2642d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26430: R_X86_64_32S	.rodata.str1.1+0x2ca6
   26434:	e8 00 00 00 00       	callq  26439 <e1000_free_tx_resources+0x90>
			26435: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26439:	4d 85 f6             	test   %r14,%r14
   2643c:	75 09                	jne    26447 <e1000_free_tx_resources+0x9e>
   2643e:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 26445 <e1000_free_tx_resources+0x9c>
			26441: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26445:	eb 12                	jmp    26459 <e1000_free_tx_resources+0xb0>
   26447:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   2644e:	4d 85 e4             	test   %r12,%r12
   26451:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26459 <e1000_free_tx_resources+0xb0>
   26458:	00 
			26455: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26459:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2645c: R_X86_64_32S	.rodata.str1.1+0x2df9
   26460:	e8 00 00 00 00       	callq  26465 <e1000_free_tx_resources+0xbc>
			26461: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26465:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26468: R_X86_64_32S	.rodata.str1.1+0x2e10
   2646c:	e8 00 00 00 00       	callq  26471 <e1000_free_tx_resources+0xc8>
			2646d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26471:	9c                   	pushfq 
   26472:	5b                   	pop    %rbx
   26473:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26476: R_X86_64_32S	.rodata.str1.1+0x2e1f
   2647a:	e8 00 00 00 00       	callq  2647f <e1000_free_tx_resources+0xd6>
			2647b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2647f:	80 e7 02             	and    $0x2,%bh
   26482:	75 15                	jne    26499 <e1000_free_tx_resources+0xf0>
   26484:	31 d2                	xor    %edx,%edx
   26486:	be 29 01 00 00       	mov    $0x129,%esi
   2648b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2648e: R_X86_64_32S	str_366789432
   26492:	31 c0                	xor    %eax,%eax
   26494:	e8 00 00 00 00       	callq  26499 <e1000_free_tx_resources+0xf0>
			26495: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   26499:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   2649e:	48 85 c0             	test   %rax,%rax
   264a1:	74 10                	je     264b3 <e1000_free_tx_resources+0x10a>
   264a3:	44 89 fe             	mov    %r15d,%esi
   264a6:	48 8b 4d d0          	mov    0xffffffffffffffd0(%rbp),%rcx
   264aa:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   264ae:	4c 89 f7             	mov    %r14,%rdi
   264b1:	ff d0                	callq  *%rax
   264b3:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   264ba:	00 
   264bb:	48 83 c4 18          	add    $0x18,%rsp
   264bf:	5b                   	pop    %rbx
   264c0:	41 5c                	pop    %r12
   264c2:	41 5d                	pop    %r13
   264c4:	41 5e                	pop    %r14
   264c6:	41 5f                	pop    %r15
   264c8:	c9                   	leaveq 
   264c9:	c3                   	retq   

00000000000264ca <e1000_free_all_tx_resources>:
   264ca:	55                   	push   %rbp
   264cb:	48 89 e5             	mov    %rsp,%rbp
   264ce:	41 54                	push   %r12
   264d0:	45 31 e4             	xor    %r12d,%r12d
   264d3:	53                   	push   %rbx
   264d4:	48 89 fb             	mov    %rdi,%rbx
   264d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			264da: R_X86_64_32S	.rodata.str1.1+0x30d5
   264de:	e8 00 00 00 00       	callq  264e3 <e1000_free_all_tx_resources+0x19>
			264df: R_X86_64_PC32	record_function+0xfffffffffffffffc
   264e3:	44 3b a3 b0 02 00 00 	cmp    0x2b0(%rbx),%r12d
   264ea:	7d 1b                	jge    26507 <e1000_free_all_tx_resources+0x3d>
   264ec:	49 63 f4             	movslq %r12d,%rsi
   264ef:	48 89 df             	mov    %rbx,%rdi
   264f2:	41 ff c4             	inc    %r12d
   264f5:	48 6b f6 60          	imul   $0x60,%rsi,%rsi
   264f9:	48 03 b3 b0 01 00 00 	add    0x1b0(%rbx),%rsi
   26500:	e8 a4 fe ff ff       	callq  263a9 <e1000_free_tx_resources>
   26505:	eb dc                	jmp    264e3 <e1000_free_all_tx_resources+0x19>
   26507:	5b                   	pop    %rbx
   26508:	41 5c                	pop    %r12
   2650a:	c9                   	leaveq 
   2650b:	c3                   	retq   

000000000002650c <e1000_setup_all_tx_resources>:
   2650c:	55                   	push   %rbp
   2650d:	48 89 e5             	mov    %rsp,%rbp
   26510:	41 57                	push   %r15
   26512:	41 56                	push   %r14
   26514:	41 55                	push   %r13
   26516:	41 54                	push   %r12
   26518:	53                   	push   %rbx
   26519:	48 83 ec 48          	sub    $0x48,%rsp
   2651d:	48 89 7d a0          	mov    %rdi,0xffffffffffffffa0(%rbp)
   26521:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26524: R_X86_64_32S	.rodata.str1.1+0x30f1
   26528:	e8 00 00 00 00       	callq  2652d <e1000_setup_all_tx_resources+0x21>
			26529: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2652d:	c7 45 ac 00 00 00 00 	movl   $0x0,0xffffffffffffffac(%rbp)
   26534:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   26538:	8b 55 ac             	mov    0xffffffffffffffac(%rbp),%edx
   2653b:	3b 90 b0 02 00 00    	cmp    0x2b0(%rax),%edx
   26541:	0f 8d 64 06 00 00    	jge    26bab <e1000_setup_all_tx_resources+0x69f>
   26547:	48 63 c2             	movslq %edx,%rax
   2654a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2654d: R_X86_64_32S	.rodata.str1.1+0x310e
   26551:	4c 6b e8 60          	imul   $0x60,%rax,%r13
   26555:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   26559:	4c 03 a8 b0 01 00 00 	add    0x1b0(%rax),%r13
   26560:	e8 00 00 00 00       	callq  26565 <e1000_setup_all_tx_resources+0x59>
			26561: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26565:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   26569:	48 8b 92 f8 02 00 00 	mov    0x2f8(%rdx),%rdx
   26570:	48 89 55 b0          	mov    %rdx,0xffffffffffffffb0(%rbp)
   26574:	41 8b 45 14          	mov    0x14(%r13),%eax
   26578:	48 c1 e0 05          	shl    $0x5,%rax
   2657c:	48 63 d8             	movslq %eax,%rbx
   2657f:	48 89 df             	mov    %rbx,%rdi
   26582:	e8 00 00 00 00       	callq  26587 <e1000_setup_all_tx_resources+0x7b>
			26583: R_X86_64_PC32	vmalloc+0xfffffffffffffffc
   26587:	48 85 c0             	test   %rax,%rax
   2658a:	48 89 c7             	mov    %rax,%rdi
   2658d:	49 89 45 20          	mov    %rax,0x20(%r13)
   26591:	0f 84 18 06 00 00    	je     26baf <e1000_setup_all_tx_resources+0x6a3>
   26597:	31 f6                	xor    %esi,%esi
   26599:	48 89 da             	mov    %rbx,%rdx
   2659c:	45 31 f6             	xor    %r14d,%r14d
   2659f:	e8 07 13 fe ff       	callq  78ab <memset>
   265a4:	41 8b 45 14          	mov    0x14(%r13),%eax
   265a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			265ab: R_X86_64_32S	.rodata.str1.1+0x2e62
   265af:	48 c1 e0 04          	shl    $0x4,%rax
   265b3:	44 8d b8 ff 0f 00 00 	lea    0xfff(%rax),%r15d
   265ba:	41 81 e7 00 f0 ff ff 	and    $0xfffff000,%r15d
   265c1:	45 89 7d 10          	mov    %r15d,0x10(%r13)
   265c5:	e8 00 00 00 00       	callq  265ca <e1000_setup_all_tx_resources+0xbe>
			265c6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   265ca:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   265ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			265d1: R_X86_64_32S	.rodata.str1.1+0x2e77
   265d5:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   265d9:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   265de:	4c 0f 45 f0          	cmovne %rax,%r14
   265e2:	e8 00 00 00 00       	callq  265e7 <e1000_setup_all_tx_resources+0xdb>
			265e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   265e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			265ea: R_X86_64_32S	.rodata.str1.1+0x2ca6
   265ee:	e8 00 00 00 00       	callq  265f3 <e1000_setup_all_tx_resources+0xe7>
			265ef: R_X86_64_PC32	record_function+0xfffffffffffffffc
   265f3:	4d 85 f6             	test   %r14,%r14
   265f6:	75 15                	jne    2660d <e1000_setup_all_tx_resources+0x101>
   265f8:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 265ff <e1000_setup_all_tx_resources+0xf3>
			265fb: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   265ff:	bb 21 00 00 00       	mov    $0x21,%ebx
   26604:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
			26607: R_X86_64_32S	x86_dma_fallback_dev
   2660b:	eb 17                	jmp    26624 <e1000_setup_all_tx_resources+0x118>
   2660d:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   26614:	bb 20 00 00 00       	mov    $0x20,%ebx
   26619:	4d 85 e4             	test   %r12,%r12
   2661c:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26624 <e1000_setup_all_tx_resources+0x118>
   26623:	00 
			26620: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26624:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26627: R_X86_64_32S	.rodata.str1.1+0x2e8a
   2662b:	e8 00 00 00 00       	callq  26630 <e1000_setup_all_tx_resources+0x124>
			2662c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26630:	49 8b 86 b0 01 00 00 	mov    0x1b0(%r14),%rax
   26637:	48 85 c0             	test   %rax,%rax
   2663a:	0f 84 7f 05 00 00    	je     26bbf <e1000_setup_all_tx_resources+0x6b3>
   26640:	48 83 38 00          	cmpq   $0x0,(%rax)
   26644:	0f 84 75 05 00 00    	je     26bbf <e1000_setup_all_tx_resources+0x6b3>
   2664a:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
   26650:	0f 84 69 05 00 00    	je     26bbf <e1000_setup_all_tx_resources+0x6b3>
   26656:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26659: R_X86_64_32S	.rodata.str1.1+0x2ea0
   2665d:	e8 00 00 00 00       	callq  26662 <e1000_setup_all_tx_resources+0x156>
			2665e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26662:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26665: R_X86_64_32S	.rodata.str1.1+0x2ebd
   26669:	e8 00 00 00 00       	callq  2666e <e1000_setup_all_tx_resources+0x162>
			2666a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2666e:	49 8b 96 b8 01 00 00 	mov    0x1b8(%r14),%rdx
   26675:	48 85 d2             	test   %rdx,%rdx
   26678:	75 07                	jne    26681 <e1000_setup_all_tx_resources+0x175>
   2667a:	f6 c3 01             	test   $0x1,%bl
   2667d:	75 0b                	jne    2668a <e1000_setup_all_tx_resources+0x17e>
   2667f:	eb 1d                	jmp    2669e <e1000_setup_all_tx_resources+0x192>
   26681:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   26688:	77 05                	ja     2668f <e1000_setup_all_tx_resources+0x183>
   2668a:	83 cb 01             	or     $0x1,%ebx
   2668d:	eb 0a                	jmp    26699 <e1000_setup_all_tx_resources+0x18d>
   2668f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   26694:	48 39 c2             	cmp    %rax,%rdx
   26697:	77 08                	ja     266a1 <e1000_setup_all_tx_resources+0x195>
   26699:	f6 c3 01             	test   $0x1,%bl
   2669c:	75 03                	jne    266a1 <e1000_setup_all_tx_resources+0x195>
   2669e:	83 cb 04             	or     $0x4,%ebx
   266a1:	49 8d 45 08          	lea    0x8(%r13),%rax
   266a5:	44 89 fe             	mov    %r15d,%esi
   266a8:	89 d9                	mov    %ebx,%ecx
   266aa:	4c 89 f7             	mov    %r14,%rdi
   266ad:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   266b1:	48 89 c2             	mov    %rax,%rdx
   266b4:	41 ff 54 24 08       	callq  *0x8(%r12)
   266b9:	48 85 c0             	test   %rax,%rax
   266bc:	48 89 c6             	mov    %rax,%rsi
   266bf:	49 89 45 00          	mov    %rax,0x0(%r13)
   266c3:	75 0e                	jne    266d3 <e1000_setup_all_tx_resources+0x1c7>
   266c5:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   266c9:	e8 00 00 00 00       	callq  266ce <e1000_setup_all_tx_resources+0x1c2>
			266ca: R_X86_64_PC32	vfree+0xfffffffffffffffc
   266ce:	e9 dc 04 00 00       	jmpq   26baf <e1000_setup_all_tx_resources+0x6a3>
   266d3:	41 8b 55 10          	mov    0x10(%r13),%edx
   266d7:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   266db:	e8 b9 a8 fd ff       	callq  f99 <e1000_check_64k_bound>
   266e0:	84 c0                	test   %al,%al
   266e2:	0f 85 4f 04 00 00    	jne    26b37 <e1000_setup_all_tx_resources+0x62b>
   266e8:	49 8b 55 00          	mov    0x0(%r13),%rdx
   266ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			266ef: R_X86_64_32S	str_924115643
   266f3:	45 31 f6             	xor    %r14d,%r14d
   266f6:	48 89 55 c0          	mov    %rdx,0xffffffffffffffc0(%rbp)
   266fa:	49 8b 45 08          	mov    0x8(%r13),%rax
   266fe:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   26702:	41 8b 75 10          	mov    0x10(%r13),%esi
   26706:	31 c0                	xor    %eax,%eax
   26708:	e8 00 00 00 00       	callq  2670d <e1000_setup_all_tx_resources+0x201>
			26709: R_X86_64_PC32	printk+0xfffffffffffffffc
   2670d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26710: R_X86_64_32S	.rodata.str1.1+0x2e62
   26714:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   26718:	e8 00 00 00 00       	callq  2671d <e1000_setup_all_tx_resources+0x211>
			26719: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2671d:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   26721:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26724: R_X86_64_32S	.rodata.str1.1+0x2e77
   26728:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   2672c:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   26731:	4c 0f 45 f0          	cmovne %rax,%r14
   26735:	e8 00 00 00 00       	callq  2673a <e1000_setup_all_tx_resources+0x22e>
			26736: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2673a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2673d: R_X86_64_32S	.rodata.str1.1+0x2ca6
   26741:	e8 00 00 00 00       	callq  26746 <e1000_setup_all_tx_resources+0x23a>
			26742: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26746:	4d 85 f6             	test   %r14,%r14
   26749:	75 15                	jne    26760 <e1000_setup_all_tx_resources+0x254>
   2674b:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 26752 <e1000_setup_all_tx_resources+0x246>
			2674e: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26752:	bb 21 00 00 00       	mov    $0x21,%ebx
   26757:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
			2675a: R_X86_64_32S	x86_dma_fallback_dev
   2675e:	eb 17                	jmp    26777 <e1000_setup_all_tx_resources+0x26b>
   26760:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   26767:	bb 20 00 00 00       	mov    $0x20,%ebx
   2676c:	4d 85 e4             	test   %r12,%r12
   2676f:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26777 <e1000_setup_all_tx_resources+0x26b>
   26776:	00 
			26773: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26777:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2677a: R_X86_64_32S	.rodata.str1.1+0x2e8a
   2677e:	e8 00 00 00 00       	callq  26783 <e1000_setup_all_tx_resources+0x277>
			2677f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26783:	49 8b 86 b0 01 00 00 	mov    0x1b0(%r14),%rax
   2678a:	48 85 c0             	test   %rax,%rax
   2678d:	0f 84 39 04 00 00    	je     26bcc <e1000_setup_all_tx_resources+0x6c0>
   26793:	48 83 38 00          	cmpq   $0x0,(%rax)
   26797:	0f 84 2f 04 00 00    	je     26bcc <e1000_setup_all_tx_resources+0x6c0>
   2679d:	49 83 7c 24 08 00    	cmpq   $0x0,0x8(%r12)
   267a3:	0f 84 23 04 00 00    	je     26bcc <e1000_setup_all_tx_resources+0x6c0>
   267a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			267ac: R_X86_64_32S	.rodata.str1.1+0x2ea0
   267b0:	e8 00 00 00 00       	callq  267b5 <e1000_setup_all_tx_resources+0x2a9>
			267b1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   267b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			267b8: R_X86_64_32S	.rodata.str1.1+0x2ebd
   267bc:	e8 00 00 00 00       	callq  267c1 <e1000_setup_all_tx_resources+0x2b5>
			267bd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   267c1:	49 8b 96 b8 01 00 00 	mov    0x1b8(%r14),%rdx
   267c8:	48 85 d2             	test   %rdx,%rdx
   267cb:	75 07                	jne    267d4 <e1000_setup_all_tx_resources+0x2c8>
   267cd:	f6 c3 01             	test   $0x1,%bl
   267d0:	75 0b                	jne    267dd <e1000_setup_all_tx_resources+0x2d1>
   267d2:	eb 1d                	jmp    267f1 <e1000_setup_all_tx_resources+0x2e5>
   267d4:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
   267db:	77 05                	ja     267e2 <e1000_setup_all_tx_resources+0x2d6>
   267dd:	83 cb 01             	or     $0x1,%ebx
   267e0:	eb 0a                	jmp    267ec <e1000_setup_all_tx_resources+0x2e0>
   267e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   267e7:	48 39 c2             	cmp    %rax,%rdx
   267ea:	77 08                	ja     267f4 <e1000_setup_all_tx_resources+0x2e8>
   267ec:	f6 c3 01             	test   $0x1,%bl
   267ef:	75 03                	jne    267f4 <e1000_setup_all_tx_resources+0x2e8>
   267f1:	83 cb 04             	or     $0x4,%ebx
   267f4:	44 89 fe             	mov    %r15d,%esi
   267f7:	89 d9                	mov    %ebx,%ecx
   267f9:	48 8b 55 d0          	mov    0xffffffffffffffd0(%rbp),%rdx
   267fd:	4c 89 f7             	mov    %r14,%rdi
   26800:	41 ff 54 24 08       	callq  *0x8(%r12)
   26805:	48 85 c0             	test   %rax,%rax
   26808:	48 89 c6             	mov    %rax,%rsi
   2680b:	49 89 45 00          	mov    %rax,0x0(%r13)
   2680f:	0f 85 bf 00 00 00    	jne    268d4 <e1000_setup_all_tx_resources+0x3c8>
   26815:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26818: R_X86_64_32S	.rodata.str1.1+0x2dd3
   2681c:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   26820:	45 31 f6             	xor    %r14d,%r14d
   26823:	e8 00 00 00 00       	callq  26828 <e1000_setup_all_tx_resources+0x31c>
			26824: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26828:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   2682c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2682f: R_X86_64_32S	.rodata.str1.1+0x2de7
   26833:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   26837:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   2683c:	4c 0f 45 f0          	cmovne %rax,%r14
   26840:	e8 00 00 00 00       	callq  26845 <e1000_setup_all_tx_resources+0x339>
			26841: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26845:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26848: R_X86_64_32S	.rodata.str1.1+0x2ca6
   2684c:	e8 00 00 00 00       	callq  26851 <e1000_setup_all_tx_resources+0x345>
			2684d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26851:	4d 85 f6             	test   %r14,%r14
   26854:	75 09                	jne    2685f <e1000_setup_all_tx_resources+0x353>
   26856:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 2685d <e1000_setup_all_tx_resources+0x351>
			26859: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   2685d:	eb 12                	jmp    26871 <e1000_setup_all_tx_resources+0x365>
   2685f:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   26866:	4d 85 e4             	test   %r12,%r12
   26869:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26871 <e1000_setup_all_tx_resources+0x365>
   26870:	00 
			2686d: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26871:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26874: R_X86_64_32S	.rodata.str1.1+0x2df9
   26878:	e8 00 00 00 00       	callq  2687d <e1000_setup_all_tx_resources+0x371>
			26879: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2687d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26880: R_X86_64_32S	.rodata.str1.1+0x2e10
   26884:	e8 00 00 00 00       	callq  26889 <e1000_setup_all_tx_resources+0x37d>
			26885: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26889:	9c                   	pushfq 
   2688a:	5b                   	pop    %rbx
   2688b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2688e: R_X86_64_32S	.rodata.str1.1+0x2e1f
   26892:	e8 00 00 00 00       	callq  26897 <e1000_setup_all_tx_resources+0x38b>
			26893: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26897:	80 e7 02             	and    $0x2,%bh
   2689a:	75 15                	jne    268b1 <e1000_setup_all_tx_resources+0x3a5>
   2689c:	31 d2                	xor    %edx,%edx
   2689e:	be 29 01 00 00       	mov    $0x129,%esi
   268a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			268a6: R_X86_64_32S	str_366789432
   268aa:	31 c0                	xor    %eax,%eax
   268ac:	e8 00 00 00 00       	callq  268b1 <e1000_setup_all_tx_resources+0x3a5>
			268ad: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   268b1:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   268b6:	48 85 c0             	test   %rax,%rax
   268b9:	0f 84 06 fe ff ff    	je     266c5 <e1000_setup_all_tx_resources+0x1b9>
   268bf:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   268c3:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   268c7:	44 89 fe             	mov    %r15d,%esi
   268ca:	4c 89 f7             	mov    %r14,%rdi
   268cd:	ff d0                	callq  *%rax
   268cf:	e9 f1 fd ff ff       	jmpq   266c5 <e1000_setup_all_tx_resources+0x1b9>
   268d4:	41 8b 55 10          	mov    0x10(%r13),%edx
   268d8:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   268dc:	e8 b8 a6 fd ff       	callq  f99 <e1000_check_64k_bound>
   268e1:	41 8b 55 10          	mov    0x10(%r13),%edx
   268e5:	84 c0                	test   %al,%al
   268e7:	89 55 9c             	mov    %edx,0xffffffffffffff9c(%rbp)
   268ea:	0f 84 bb 00 00 00    	je     269ab <e1000_setup_all_tx_resources+0x49f>
   268f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			268f3: R_X86_64_32S	.rodata.str1.1+0x2dd3
   268f7:	45 31 f6             	xor    %r14d,%r14d
   268fa:	e8 00 00 00 00       	callq  268ff <e1000_setup_all_tx_resources+0x3f3>
			268fb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   268ff:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   26903:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26906: R_X86_64_32S	.rodata.str1.1+0x2de7
   2690a:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   2690e:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   26913:	4c 0f 45 f0          	cmovne %rax,%r14
   26917:	e8 00 00 00 00       	callq  2691c <e1000_setup_all_tx_resources+0x410>
			26918: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2691c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2691f: R_X86_64_32S	.rodata.str1.1+0x2ca6
   26923:	e8 00 00 00 00       	callq  26928 <e1000_setup_all_tx_resources+0x41c>
			26924: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26928:	4d 85 f6             	test   %r14,%r14
   2692b:	75 09                	jne    26936 <e1000_setup_all_tx_resources+0x42a>
   2692d:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 26934 <e1000_setup_all_tx_resources+0x428>
			26930: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26934:	eb 12                	jmp    26948 <e1000_setup_all_tx_resources+0x43c>
   26936:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   2693d:	4d 85 e4             	test   %r12,%r12
   26940:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26948 <e1000_setup_all_tx_resources+0x43c>
   26947:	00 
			26944: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26948:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2694b: R_X86_64_32S	.rodata.str1.1+0x2df9
   2694f:	e8 00 00 00 00       	callq  26954 <e1000_setup_all_tx_resources+0x448>
			26950: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26954:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26957: R_X86_64_32S	.rodata.str1.1+0x2e10
   2695b:	e8 00 00 00 00       	callq  26960 <e1000_setup_all_tx_resources+0x454>
			2695c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26960:	9c                   	pushfq 
   26961:	5b                   	pop    %rbx
   26962:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26965: R_X86_64_32S	.rodata.str1.1+0x2e1f
   26969:	e8 00 00 00 00       	callq  2696e <e1000_setup_all_tx_resources+0x462>
			2696a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   2696e:	80 e7 02             	and    $0x2,%bh
   26971:	75 15                	jne    26988 <e1000_setup_all_tx_resources+0x47c>
   26973:	31 d2                	xor    %edx,%edx
   26975:	be 29 01 00 00       	mov    $0x129,%esi
   2697a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2697d: R_X86_64_32S	str_366789432
   26981:	31 c0                	xor    %eax,%eax
   26983:	e8 00 00 00 00       	callq  26988 <e1000_setup_all_tx_resources+0x47c>
			26984: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   26988:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   2698d:	48 85 c0             	test   %rax,%rax
   26990:	0f 84 a1 01 00 00    	je     26b37 <e1000_setup_all_tx_resources+0x62b>
   26996:	8b 75 9c             	mov    0xffffffffffffff9c(%rbp),%esi
   26999:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2699d:	4c 89 f7             	mov    %r14,%rdi
   269a0:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   269a4:	ff d0                	callq  *%rax
   269a6:	e9 8c 01 00 00       	jmpq   26b37 <e1000_setup_all_tx_resources+0x62b>
   269ab:	49 8b 45 08          	mov    0x8(%r13),%rax
   269af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			269b2: R_X86_64_32S	.rodata.str1.1+0x2dd3
   269b6:	45 31 f6             	xor    %r14d,%r14d
   269b9:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   269bd:	4d 8b 7d 00          	mov    0x0(%r13),%r15
   269c1:	e8 00 00 00 00       	callq  269c6 <e1000_setup_all_tx_resources+0x4ba>
			269c2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   269c6:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   269ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			269cd: R_X86_64_32S	.rodata.str1.1+0x2de7
   269d1:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   269d5:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   269da:	4c 0f 45 f0          	cmovne %rax,%r14
   269de:	e8 00 00 00 00       	callq  269e3 <e1000_setup_all_tx_resources+0x4d7>
			269df: R_X86_64_PC32	record_function+0xfffffffffffffffc
   269e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			269e6: R_X86_64_32S	.rodata.str1.1+0x2ca6
   269ea:	e8 00 00 00 00       	callq  269ef <e1000_setup_all_tx_resources+0x4e3>
			269eb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   269ef:	4d 85 f6             	test   %r14,%r14
   269f2:	75 09                	jne    269fd <e1000_setup_all_tx_resources+0x4f1>
   269f4:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 269fb <e1000_setup_all_tx_resources+0x4ef>
			269f7: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   269fb:	eb 12                	jmp    26a0f <e1000_setup_all_tx_resources+0x503>
   269fd:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   26a04:	4d 85 e4             	test   %r12,%r12
   26a07:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26a0f <e1000_setup_all_tx_resources+0x503>
   26a0e:	00 
			26a0b: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26a0f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a12: R_X86_64_32S	.rodata.str1.1+0x2df9
   26a16:	e8 00 00 00 00       	callq  26a1b <e1000_setup_all_tx_resources+0x50f>
			26a17: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26a1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a1e: R_X86_64_32S	.rodata.str1.1+0x2e10
   26a22:	e8 00 00 00 00       	callq  26a27 <e1000_setup_all_tx_resources+0x51b>
			26a23: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26a27:	9c                   	pushfq 
   26a28:	5b                   	pop    %rbx
   26a29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a2c: R_X86_64_32S	.rodata.str1.1+0x2e1f
   26a30:	e8 00 00 00 00       	callq  26a35 <e1000_setup_all_tx_resources+0x529>
			26a31: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26a35:	80 e7 02             	and    $0x2,%bh
   26a38:	75 15                	jne    26a4f <e1000_setup_all_tx_resources+0x543>
   26a3a:	31 d2                	xor    %edx,%edx
   26a3c:	be 29 01 00 00       	mov    $0x129,%esi
   26a41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a44: R_X86_64_32S	str_366789432
   26a48:	31 c0                	xor    %eax,%eax
   26a4a:	e8 00 00 00 00       	callq  26a4f <e1000_setup_all_tx_resources+0x543>
			26a4b: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   26a4f:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   26a54:	48 85 c0             	test   %rax,%rax
   26a57:	74 0f                	je     26a68 <e1000_setup_all_tx_resources+0x55c>
   26a59:	8b 75 9c             	mov    0xffffffffffffff9c(%rbp),%esi
   26a5c:	48 8b 4d c8          	mov    0xffffffffffffffc8(%rbp),%rcx
   26a60:	4c 89 fa             	mov    %r15,%rdx
   26a63:	4c 89 f7             	mov    %r14,%rdi
   26a66:	ff d0                	callq  *%rax
   26a68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a6b: R_X86_64_32S	.rodata.str1.1+0x2dd3
   26a6f:	45 8b 7d 10          	mov    0x10(%r13),%r15d
   26a73:	45 31 f6             	xor    %r14d,%r14d
   26a76:	e8 00 00 00 00       	callq  26a7b <e1000_setup_all_tx_resources+0x56f>
			26a77: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26a7b:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   26a7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a82: R_X86_64_32S	.rodata.str1.1+0x2de7
   26a86:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   26a8a:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   26a8f:	4c 0f 45 f0          	cmovne %rax,%r14
   26a93:	e8 00 00 00 00       	callq  26a98 <e1000_setup_all_tx_resources+0x58c>
			26a94: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26a98:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26a9b: R_X86_64_32S	.rodata.str1.1+0x2ca6
   26a9f:	e8 00 00 00 00       	callq  26aa4 <e1000_setup_all_tx_resources+0x598>
			26aa0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26aa4:	4d 85 f6             	test   %r14,%r14
   26aa7:	75 09                	jne    26ab2 <e1000_setup_all_tx_resources+0x5a6>
   26aa9:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 26ab0 <e1000_setup_all_tx_resources+0x5a4>
			26aac: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26ab0:	eb 12                	jmp    26ac4 <e1000_setup_all_tx_resources+0x5b8>
   26ab2:	4d 8b a6 e8 01 00 00 	mov    0x1e8(%r14),%r12
   26ab9:	4d 85 e4             	test   %r12,%r12
   26abc:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 26ac4 <e1000_setup_all_tx_resources+0x5b8>
   26ac3:	00 
			26ac0: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   26ac4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ac7: R_X86_64_32S	.rodata.str1.1+0x2df9
   26acb:	e8 00 00 00 00       	callq  26ad0 <e1000_setup_all_tx_resources+0x5c4>
			26acc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26ad0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ad3: R_X86_64_32S	.rodata.str1.1+0x2e10
   26ad7:	e8 00 00 00 00       	callq  26adc <e1000_setup_all_tx_resources+0x5d0>
			26ad8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26adc:	9c                   	pushfq 
   26add:	5b                   	pop    %rbx
   26ade:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ae1: R_X86_64_32S	.rodata.str1.1+0x2e1f
   26ae5:	e8 00 00 00 00       	callq  26aea <e1000_setup_all_tx_resources+0x5de>
			26ae6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26aea:	80 e7 02             	and    $0x2,%bh
   26aed:	75 15                	jne    26b04 <e1000_setup_all_tx_resources+0x5f8>
   26aef:	31 d2                	xor    %edx,%edx
   26af1:	be 29 01 00 00       	mov    $0x129,%esi
   26af6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26af9: R_X86_64_32S	str_366789432
   26afd:	31 c0                	xor    %eax,%eax
   26aff:	e8 00 00 00 00       	callq  26b04 <e1000_setup_all_tx_resources+0x5f8>
			26b00: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   26b04:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   26b09:	48 85 c0             	test   %rax,%rax
   26b0c:	74 10                	je     26b1e <e1000_setup_all_tx_resources+0x612>
   26b0e:	44 89 fe             	mov    %r15d,%esi
   26b11:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   26b15:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   26b19:	4c 89 f7             	mov    %r14,%rdi
   26b1c:	ff d0                	callq  *%rax
   26b1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26b21: R_X86_64_32S	str_346704155
   26b25:	31 c0                	xor    %eax,%eax
   26b27:	e8 00 00 00 00       	callq  26b2c <e1000_setup_all_tx_resources+0x620>
			26b28: R_X86_64_PC32	printk+0xfffffffffffffffc
   26b2c:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   26b30:	e8 00 00 00 00       	callq  26b35 <e1000_setup_all_tx_resources+0x629>
			26b31: R_X86_64_PC32	vfree+0xfffffffffffffffc
   26b35:	eb 3e                	jmp    26b75 <e1000_setup_all_tx_resources+0x669>
   26b37:	41 8b 55 10          	mov    0x10(%r13),%edx
   26b3b:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   26b3f:	31 f6                	xor    %esi,%esi
   26b41:	e8 65 0d fe ff       	callq  78ab <memset>
   26b46:	49 8d 7d 28          	lea    0x28(%r13),%rdi
   26b4a:	41 c7 45 18 00 00 00 	movl   $0x0,0x18(%r13)
   26b51:	00 
   26b52:	41 c7 45 1c 00 00 00 	movl   $0x0,0x1c(%r13)
   26b59:	00 
   26b5a:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			26b5d: R_X86_64_32S	.bss+0x2d8
   26b61:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			26b64: R_X86_64_32S	str_522411353
   26b68:	e8 8c d8 fd ff       	callq  43f9 <__spin_lock_init>
   26b6d:	ff 45 ac             	incl   0xffffffffffffffac(%rbp)
   26b70:	e9 bf f9 ff ff       	jmpq   26534 <e1000_setup_all_tx_resources+0x28>
   26b75:	8b 75 ac             	mov    0xffffffffffffffac(%rbp),%esi
   26b78:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26b7b: R_X86_64_32S	str_829171853
   26b7f:	31 c0                	xor    %eax,%eax
   26b81:	e8 00 00 00 00       	callq  26b86 <e1000_setup_all_tx_resources+0x67a>
			26b82: R_X86_64_PC32	printk+0xfffffffffffffffc
   26b86:	8b 5d ac             	mov    0xffffffffffffffac(%rbp),%ebx
   26b89:	ff cb                	dec    %ebx
   26b8b:	85 db                	test   %ebx,%ebx
   26b8d:	78 4a                	js     26bd9 <e1000_setup_all_tx_resources+0x6cd>
   26b8f:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   26b93:	48 63 f3             	movslq %ebx,%rsi
   26b96:	48 6b f6 60          	imul   $0x60,%rsi,%rsi
   26b9a:	48 03 b2 b0 01 00 00 	add    0x1b0(%rdx),%rsi
   26ba1:	48 89 d7             	mov    %rdx,%rdi
   26ba4:	e8 00 f8 ff ff       	callq  263a9 <e1000_free_tx_resources>
   26ba9:	eb de                	jmp    26b89 <e1000_setup_all_tx_resources+0x67d>
   26bab:	31 c0                	xor    %eax,%eax
   26bad:	eb 2f                	jmp    26bde <e1000_setup_all_tx_resources+0x6d2>
   26baf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26bb2: R_X86_64_32S	str_881042191
   26bb6:	31 c0                	xor    %eax,%eax
   26bb8:	e8 00 00 00 00       	callq  26bbd <e1000_setup_all_tx_resources+0x6b1>
			26bb9: R_X86_64_PC32	printk+0xfffffffffffffffc
   26bbd:	eb b6                	jmp    26b75 <e1000_setup_all_tx_resources+0x669>
   26bbf:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   26bc6:	00 
   26bc7:	e9 f9 fa ff ff       	jmpq   266c5 <e1000_setup_all_tx_resources+0x1b9>
   26bcc:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   26bd3:	00 
   26bd4:	e9 3c fc ff ff       	jmpq   26815 <e1000_setup_all_tx_resources+0x309>
   26bd9:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
   26bde:	48 83 c4 48          	add    $0x48,%rsp
   26be2:	5b                   	pop    %rbx
   26be3:	41 5c                	pop    %r12
   26be5:	41 5d                	pop    %r13
   26be7:	41 5e                	pop    %r14
   26be9:	41 5f                	pop    %r15
   26beb:	c9                   	leaveq 
   26bec:	c3                   	retq   

0000000000026bed <e1000_dump_eeprom>:
   26bed:	55                   	push   %rbp
   26bee:	48 89 e5             	mov    %rsp,%rbp
   26bf1:	41 56                	push   %r14
   26bf3:	41 55                	push   %r13
   26bf5:	41 54                	push   %r12
   26bf7:	53                   	push   %rbx
   26bf8:	48 89 fb             	mov    %rdi,%rbx
   26bfb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26bfe: R_X86_64_32S	.rodata.str1.1+0x3127
   26c02:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
   26c06:	e8 00 00 00 00       	callq  26c0b <e1000_dump_eeprom+0x1e>
			26c07: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26c0b:	4c 8b a3 f0 02 00 00 	mov    0x2f0(%rbx),%r12
   26c12:	4d 8b ac 24 50 01 00 	mov    0x150(%r12),%r13
   26c19:	00 
   26c1a:	4c 89 e7             	mov    %r12,%rdi
   26c1d:	41 ff 55 58          	callq  *0x58(%r13)
   26c21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26c24: R_X86_64_32S	.rodata.str1.1+0x3139
   26c28:	89 c3                	mov    %eax,%ebx
   26c2a:	89 45 8c             	mov    %eax,0xffffffffffffff8c(%rbp)
   26c2d:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
   26c34:	e8 00 00 00 00       	callq  26c39 <e1000_dump_eeprom+0x4c>
			26c35: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26c39:	be d0 00 00 00       	mov    $0xd0,%esi
   26c3e:	48 89 df             	mov    %rbx,%rdi
   26c41:	e8 00 00 00 00       	callq  26c46 <e1000_dump_eeprom+0x59>
			26c42: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   26c46:	48 85 c0             	test   %rax,%rax
   26c49:	49 89 c6             	mov    %rax,%r14
   26c4c:	75 13                	jne    26c61 <e1000_dump_eeprom+0x74>
   26c4e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26c51: R_X86_64_32S	str_576378810
   26c55:	31 c0                	xor    %eax,%eax
   26c57:	e8 00 00 00 00       	callq  26c5c <e1000_dump_eeprom+0x6f>
			26c58: R_X86_64_PC32	printk+0xfffffffffffffffc
   26c5c:	e9 f6 05 00 00       	jmpq   27257 <e1000_dump_eeprom+0x66a>
   26c61:	48 89 c2             	mov    %rax,%rdx
   26c64:	4c 89 e7             	mov    %r12,%rdi
   26c67:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
   26c6b:	41 ff 55 60          	callq  *0x60(%r13)
   26c6f:	41 0f b6 46 7f       	movzbl 0x7f(%r14),%eax
   26c74:	66 41 0f b6 56 7e    	movzbw 0x7e(%r14),%dx
   26c7a:	31 db                	xor    %ebx,%ebx
   26c7c:	31 c9                	xor    %ecx,%ecx
   26c7e:	c1 e0 08             	shl    $0x8,%eax
   26c81:	44 8d 24 02          	lea    (%rdx,%rax,1),%r12d
   26c85:	41 0f b6 54 4e 01    	movzbl 0x1(%r14,%rcx,2),%edx
   26c8b:	66 41 0f b6 04 4e    	movzbw (%r14,%rcx,2),%ax
   26c91:	48 ff c1             	inc    %rcx
   26c94:	c1 e2 08             	shl    $0x8,%edx
   26c97:	01 d0                	add    %edx,%eax
   26c99:	01 c3                	add    %eax,%ebx
   26c9b:	48 83 f9 3f          	cmp    $0x3f,%rcx
   26c9f:	75 e4                	jne    26c85 <e1000_dump_eeprom+0x98>
   26ca1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ca4: R_X86_64_32S	str_556488457
   26ca8:	31 c0                	xor    %eax,%eax
   26caa:	e8 00 00 00 00       	callq  26caf <e1000_dump_eeprom+0xc2>
			26cab: R_X86_64_PC32	printk+0xfffffffffffffffc
   26caf:	41 0f b7 f4          	movzwl %r12w,%esi
   26cb3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26cb6: R_X86_64_32S	str_473371806
   26cba:	31 c0                	xor    %eax,%eax
   26cbc:	e8 00 00 00 00       	callq  26cc1 <e1000_dump_eeprom+0xd4>
			26cbd: R_X86_64_PC32	printk+0xfffffffffffffffc
   26cc1:	be ba ba ff ff       	mov    $0xffffbaba,%esi
   26cc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26cc9: R_X86_64_32S	str_284091528
   26ccd:	31 c0                	xor    %eax,%eax
   26ccf:	66 29 de             	sub    %bx,%si
   26cd2:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   26cd6:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   26cda:	0f b7 f6             	movzwl %si,%esi
   26cdd:	e8 00 00 00 00       	callq  26ce2 <e1000_dump_eeprom+0xf5>
			26cde: R_X86_64_PC32	printk+0xfffffffffffffffc
   26ce2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ce5: R_X86_64_32S	str_853479334
   26ce9:	31 c0                	xor    %eax,%eax
   26ceb:	e8 00 00 00 00       	callq  26cf0 <e1000_dump_eeprom+0x103>
			26cec: R_X86_64_PC32	printk+0xfffffffffffffffc
   26cf0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26cf3: R_X86_64_32S	str_986426007
   26cf7:	31 c0                	xor    %eax,%eax
   26cf9:	e8 00 00 00 00       	callq  26cfe <e1000_dump_eeprom+0x111>
			26cfa: R_X86_64_PC32	printk+0xfffffffffffffffc
   26cfe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26d01: R_X86_64_32S	.rodata.str1.1+0x3141
   26d05:	e8 00 00 00 00       	callq  26d0a <e1000_dump_eeprom+0x11d>
			26d06: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26d0a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26d0d: R_X86_64_32S	.rodata.str1.1+0x3150
   26d11:	48 c7 85 60 ff ff ff 	movq   $0x0,0xffffffffffffff60(%rbp)
   26d18:	00 00 00 00 
   26d1c:	48 c7 85 70 ff ff ff 	movq   $0x0,0xffffffffffffff70(%rbp)
   26d23:	00 00 00 00 
   26d27:	c7 85 68 ff ff ff 00 	movl   $0x0,0xffffffffffffff68(%rbp)
   26d2e:	00 00 00 
   26d31:	48 c7 45 a8 00 00 00 	movq   $0x0,0xffffffffffffffa8(%rbp)
   26d38:	00 
			26d35: R_X86_64_32S	str_22691
   26d39:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   26d40:	00 
			26d3d: R_X86_64_32S	str_0
   26d41:	c7 45 c8 02 00 00 00 	movl   $0x2,0xffffffffffffffc8(%rbp)
   26d48:	c7 45 c4 10 00 00 00 	movl   $0x10,0xffffffffffffffc4(%rbp)
   26d4f:	c7 45 c0 01 00 00 00 	movl   $0x1,0xffffffffffffffc0(%rbp)
   26d56:	4c 89 75 98          	mov    %r14,0xffffffffffffff98(%rbp)
   26d5a:	48 c7 45 b8 80 00 00 	movq   $0x80,0xffffffffffffffb8(%rbp)
   26d61:	00 
   26d62:	c6 45 df 00          	movb   $0x0,0xffffffffffffffdf(%rbp)
   26d66:	e8 00 00 00 00       	callq  26d6b <e1000_dump_eeprom+0x17e>
			26d67: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26d6b:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   26d6f:	48 89 da             	mov    %rbx,%rdx
   26d72:	4c 89 e6             	mov    %r12,%rsi
   26d75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26d78: R_X86_64_32S	.rodata.str1.1+0x3141
   26d7c:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   26d83:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   26d8a:	00 
   26d8b:	e8 00 00 00 00       	callq  26d90 <e1000_dump_eeprom+0x1a3>
			26d8c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   26d90:	48 8b 55 a8          	mov    0xffffffffffffffa8(%rbp),%rdx
   26d94:	48 85 d2             	test   %rdx,%rdx
   26d97:	74 47                	je     26de0 <e1000_dump_eeprom+0x1f3>
   26d99:	fc                   	cld    
   26d9a:	48 89 d7             	mov    %rdx,%rdi
   26d9d:	31 c0                	xor    %eax,%eax
   26d9f:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   26da3:	f2 ae                	repnz scas %es:(%rdi),%al
   26da5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   26dab:	48 89 da             	mov    %rbx,%rdx
   26dae:	4c 89 e6             	mov    %r12,%rsi
   26db1:	f7 d1                	not    %ecx
   26db3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26db6: R_X86_64_32S	.rodata.str1.1+0x3141
   26dba:	89 4d d0             	mov    %ecx,0xffffffffffffffd0(%rbp)
   26dbd:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
   26dc1:	e8 00 00 00 00       	callq  26dc6 <e1000_dump_eeprom+0x1d9>
			26dc2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26dc6:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   26dca:	44 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%r8d
   26dce:	48 89 da             	mov    %rbx,%rdx
   26dd1:	4c 89 e6             	mov    %r12,%rsi
   26dd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26dd7: R_X86_64_32S	.rodata.str1.1+0x3141
   26ddb:	e8 00 00 00 00       	callq  26de0 <e1000_dump_eeprom+0x1f3>
			26ddc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26de0:	48 8d 4d a0          	lea    0xffffffffffffffa0(%rbp),%rcx
   26de4:	48 89 da             	mov    %rbx,%rdx
   26de7:	4c 89 e6             	mov    %r12,%rsi
   26dea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ded: R_X86_64_32S	.rodata.str1.1+0x3141
   26df1:	e8 00 00 00 00       	callq  26df6 <e1000_dump_eeprom+0x209>
			26df2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   26df6:	48 8b 55 a0          	mov    0xffffffffffffffa0(%rbp),%rdx
   26dfa:	48 85 d2             	test   %rdx,%rdx
   26dfd:	74 47                	je     26e46 <e1000_dump_eeprom+0x259>
   26dff:	fc                   	cld    
   26e00:	48 89 d7             	mov    %rdx,%rdi
   26e03:	31 c0                	xor    %eax,%eax
   26e05:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   26e09:	f2 ae                	repnz scas %es:(%rdi),%al
   26e0b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   26e11:	48 89 da             	mov    %rbx,%rdx
   26e14:	4c 89 e6             	mov    %r12,%rsi
   26e17:	f7 d1                	not    %ecx
   26e19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26e1c: R_X86_64_32S	.rodata.str1.1+0x3141
   26e20:	89 4d d4             	mov    %ecx,0xffffffffffffffd4(%rbp)
   26e23:	48 8d 4d d4          	lea    0xffffffffffffffd4(%rbp),%rcx
   26e27:	e8 00 00 00 00       	callq  26e2c <e1000_dump_eeprom+0x23f>
			26e28: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26e2c:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   26e30:	44 8b 45 d4          	mov    0xffffffffffffffd4(%rbp),%r8d
   26e34:	48 89 da             	mov    %rbx,%rdx
   26e37:	4c 89 e6             	mov    %r12,%rsi
   26e3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26e3d: R_X86_64_32S	.rodata.str1.1+0x3141
   26e41:	e8 00 00 00 00       	callq  26e46 <e1000_dump_eeprom+0x259>
			26e42: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26e46:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   26e4a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   26e50:	48 89 da             	mov    %rbx,%rdx
   26e53:	4c 89 e6             	mov    %r12,%rsi
   26e56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26e59: R_X86_64_32S	.rodata.str1.1+0x3141
   26e5d:	e8 00 00 00 00       	callq  26e62 <e1000_dump_eeprom+0x275>
			26e5e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26e62:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   26e66:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   26e6c:	48 89 da             	mov    %rbx,%rdx
   26e6f:	4c 89 e6             	mov    %r12,%rsi
   26e72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26e75: R_X86_64_32S	.rodata.str1.1+0x3141
   26e79:	e8 00 00 00 00       	callq  26e7e <e1000_dump_eeprom+0x291>
			26e7a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26e7e:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   26e82:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   26e88:	48 89 da             	mov    %rbx,%rdx
   26e8b:	4c 89 e6             	mov    %r12,%rsi
   26e8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26e91: R_X86_64_32S	.rodata.str1.1+0x3141
   26e95:	e8 00 00 00 00       	callq  26e9a <e1000_dump_eeprom+0x2ad>
			26e96: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26e9a:	48 8d 4d 98          	lea    0xffffffffffffff98(%rbp),%rcx
   26e9e:	48 89 da             	mov    %rbx,%rdx
   26ea1:	4c 89 e6             	mov    %r12,%rsi
   26ea4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ea7: R_X86_64_32S	.rodata.str1.1+0x3141
   26eab:	e8 00 00 00 00       	callq  26eb0 <e1000_dump_eeprom+0x2c3>
			26eac: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   26eb0:	48 83 7d 98 00       	cmpq   $0x0,0xffffffffffffff98(%rbp)
   26eb5:	74 4f                	je     26f06 <e1000_dump_eeprom+0x319>
   26eb7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   26ebb:	48 8d 4d d8          	lea    0xffffffffffffffd8(%rbp),%rcx
   26ebf:	48 89 da             	mov    %rbx,%rdx
   26ec2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   26ec8:	4c 89 e6             	mov    %r12,%rsi
   26ecb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ece: R_X86_64_32S	.rodata.str1.1+0x3141
   26ed2:	31 db                	xor    %ebx,%ebx
   26ed4:	89 45 d8             	mov    %eax,0xffffffffffffffd8(%rbp)
   26ed7:	e8 00 00 00 00       	callq  26edc <e1000_dump_eeprom+0x2ef>
			26ed8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26edc:	eb 23                	jmp    26f01 <e1000_dump_eeprom+0x314>
   26ede:	48 63 cb             	movslq %ebx,%rcx
   26ee1:	48 03 4d 98          	add    0xffffffffffffff98(%rbp),%rcx
   26ee5:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   26ee9:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   26eed:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   26ef3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26ef6: R_X86_64_32S	.rodata.str1.1+0x3141
   26efa:	ff c3                	inc    %ebx
   26efc:	e8 00 00 00 00       	callq  26f01 <e1000_dump_eeprom+0x314>
			26efd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26f01:	3b 5d d8             	cmp    0xffffffffffffffd8(%rbp),%ebx
   26f04:	7c d8                	jl     26ede <e1000_dump_eeprom+0x2f1>
   26f06:	4c 8d 6d cc          	lea    0xffffffffffffffcc(%rbp),%r13
   26f0a:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   26f0e:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   26f12:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   26f18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26f1b: R_X86_64_32S	.rodata.str1.1+0x3141
   26f1f:	48 89 de             	mov    %rbx,%rsi
   26f22:	4c 89 ea             	mov    %r13,%rdx
   26f25:	e8 00 00 00 00       	callq  26f2a <e1000_dump_eeprom+0x33d>
			26f26: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26f2a:	48 8d 4d df          	lea    0xffffffffffffffdf(%rbp),%rcx
   26f2e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   26f34:	4c 89 ea             	mov    %r13,%rdx
   26f37:	48 89 de             	mov    %rbx,%rsi
   26f3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26f3d: R_X86_64_32S	.rodata.str1.1+0x3141
   26f41:	48 8d 5d 98          	lea    0xffffffffffffff98(%rbp),%rbx
   26f45:	e8 00 00 00 00       	callq  26f4a <e1000_dump_eeprom+0x35d>
			26f46: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   26f4a:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   26f4e:	48 8d b5 60 ff ff ff 	lea    0xffffffffffffff60(%rbp),%rsi
   26f55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26f58: R_X86_64_32S	.rodata.str1.1+0x3141
   26f5c:	48 c7 85 60 ff ff ff 	movq   $0x62d,0xffffffffffffff60(%rbp)
   26f63:	2d 06 00 00 
   26f67:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   26f6e:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   26f71:	89 85 68 ff ff ff    	mov    %eax,0xffffffffffffff68(%rbp)
   26f77:	e8 00 00 00 00       	callq  26f7c <e1000_dump_eeprom+0x38f>
			26f78: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   26f7c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26f7f: R_X86_64_32S	.rodata.str1.1+0x316d
   26f83:	48 c7 45 98 00 00 00 	movq   $0x0,0xffffffffffffff98(%rbp)
   26f8a:	00 
			26f87: R_X86_64_32S	str_22691
   26f8b:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   26f92:	00 
			26f8f: R_X86_64_32S	str_0
   26f93:	c7 45 d0 02 00 00 00 	movl   $0x2,0xffffffffffffffd0(%rbp)
   26f9a:	c7 45 d4 10 00 00 00 	movl   $0x10,0xffffffffffffffd4(%rbp)
   26fa1:	c7 45 d8 01 00 00 00 	movl   $0x1,0xffffffffffffffd8(%rbp)
   26fa8:	4c 89 75 a8          	mov    %r14,0xffffffffffffffa8(%rbp)
   26fac:	48 c7 45 b0 80 00 00 	movq   $0x80,0xffffffffffffffb0(%rbp)
   26fb3:	00 
   26fb4:	c6 45 df 00          	movb   $0x0,0xffffffffffffffdf(%rbp)
   26fb8:	e8 00 00 00 00       	callq  26fbd <e1000_dump_eeprom+0x3d0>
			26fb9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   26fbd:	4c 8b a5 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%r12
   26fc4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   26fca:	48 89 d9             	mov    %rbx,%rcx
   26fcd:	4c 89 ea             	mov    %r13,%rdx
   26fd0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26fd3: R_X86_64_32S	.rodata.str1.1+0x3141
   26fd7:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   26fde:	4c 89 e6             	mov    %r12,%rsi
   26fe1:	e8 00 00 00 00       	callq  26fe6 <e1000_dump_eeprom+0x3f9>
			26fe2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   26fe6:	48 83 7d 98 00       	cmpq   $0x0,0xffffffffffffff98(%rbp)
   26feb:	74 46                	je     27033 <e1000_dump_eeprom+0x446>
   26fed:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   26ff1:	b9 04 00 00 00       	mov    $0x4,%ecx
   26ff6:	4c 89 ea             	mov    %r13,%rdx
   26ff9:	4c 89 e6             	mov    %r12,%rsi
   26ffc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			26fff: R_X86_64_32S	.rodata.str1.1+0x3141
   27003:	e8 00 00 00 00       	callq  27008 <e1000_dump_eeprom+0x41b>
			27004: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27008:	8b 75 c8             	mov    0xffffffffffffffc8(%rbp),%esi
   2700b:	31 c9                	xor    %ecx,%ecx
   2700d:	ba 01 00 00 00       	mov    $0x1,%edx
   27012:	48 89 df             	mov    %rbx,%rdi
   27015:	e8 00 00 00 00       	callq  2701a <e1000_dump_eeprom+0x42d>
			27016: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   2701a:	8b 4d c8             	mov    0xffffffffffffffc8(%rbp),%ecx
   2701d:	4c 8b 45 98          	mov    0xffffffffffffff98(%rbp),%r8
   27021:	4c 89 ea             	mov    %r13,%rdx
   27024:	4c 89 e6             	mov    %r12,%rsi
   27027:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2702a: R_X86_64_32S	.rodata.str1.1+0x3141
   2702e:	e8 00 00 00 00       	callq  27033 <e1000_dump_eeprom+0x446>
			2702f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27033:	48 8d 5d a0          	lea    0xffffffffffffffa0(%rbp),%rbx
   27037:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2703d:	4c 89 ea             	mov    %r13,%rdx
   27040:	4c 89 e6             	mov    %r12,%rsi
   27043:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27046: R_X86_64_32S	.rodata.str1.1+0x3141
   2704a:	48 89 d9             	mov    %rbx,%rcx
   2704d:	e8 00 00 00 00       	callq  27052 <e1000_dump_eeprom+0x465>
			2704e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   27052:	48 83 7d a0 00       	cmpq   $0x0,0xffffffffffffffa0(%rbp)
   27057:	74 46                	je     2709f <e1000_dump_eeprom+0x4b2>
   27059:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   2705d:	b9 04 00 00 00       	mov    $0x4,%ecx
   27062:	4c 89 ea             	mov    %r13,%rdx
   27065:	4c 89 e6             	mov    %r12,%rsi
   27068:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2706b: R_X86_64_32S	.rodata.str1.1+0x3141
   2706f:	e8 00 00 00 00       	callq  27074 <e1000_dump_eeprom+0x487>
			27070: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27074:	8b 75 c4             	mov    0xffffffffffffffc4(%rbp),%esi
   27077:	31 c9                	xor    %ecx,%ecx
   27079:	ba 01 00 00 00       	mov    $0x1,%edx
   2707e:	48 89 df             	mov    %rbx,%rdi
   27081:	e8 00 00 00 00       	callq  27086 <e1000_dump_eeprom+0x499>
			27082: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   27086:	8b 4d c4             	mov    0xffffffffffffffc4(%rbp),%ecx
   27089:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   2708d:	4c 89 ea             	mov    %r13,%rdx
   27090:	4c 89 e6             	mov    %r12,%rsi
   27093:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27096: R_X86_64_32S	.rodata.str1.1+0x3141
   2709a:	e8 00 00 00 00       	callq  2709f <e1000_dump_eeprom+0x4b2>
			2709b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2709f:	4c 8d 45 d0          	lea    0xffffffffffffffd0(%rbp),%r8
   270a3:	b9 04 00 00 00       	mov    $0x4,%ecx
   270a8:	4c 89 ea             	mov    %r13,%rdx
   270ab:	4c 89 e6             	mov    %r12,%rsi
   270ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			270b1: R_X86_64_32S	.rodata.str1.1+0x3141
   270b5:	48 8d 5d a8          	lea    0xffffffffffffffa8(%rbp),%rbx
   270b9:	e8 00 00 00 00       	callq  270be <e1000_dump_eeprom+0x4d1>
			270ba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   270be:	4c 8d 45 d4          	lea    0xffffffffffffffd4(%rbp),%r8
   270c2:	b9 04 00 00 00       	mov    $0x4,%ecx
   270c7:	4c 89 ea             	mov    %r13,%rdx
   270ca:	4c 89 e6             	mov    %r12,%rsi
   270cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			270d0: R_X86_64_32S	.rodata.str1.1+0x3141
   270d4:	e8 00 00 00 00       	callq  270d9 <e1000_dump_eeprom+0x4ec>
			270d5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   270d9:	4c 8d 45 d8          	lea    0xffffffffffffffd8(%rbp),%r8
   270dd:	b9 04 00 00 00       	mov    $0x4,%ecx
   270e2:	4c 89 ea             	mov    %r13,%rdx
   270e5:	4c 89 e6             	mov    %r12,%rsi
   270e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			270eb: R_X86_64_32S	.rodata.str1.1+0x3141
   270ef:	e8 00 00 00 00       	callq  270f4 <e1000_dump_eeprom+0x507>
			270f0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   270f4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   270fa:	48 89 d9             	mov    %rbx,%rcx
   270fd:	4c 89 ea             	mov    %r13,%rdx
   27100:	4c 89 e6             	mov    %r12,%rsi
   27103:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27106: R_X86_64_32S	.rodata.str1.1+0x3141
   2710a:	e8 00 00 00 00       	callq  2710f <e1000_dump_eeprom+0x522>
			2710b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2710f:	48 83 7d a8 00       	cmpq   $0x0,0xffffffffffffffa8(%rbp)
   27114:	74 57                	je     2716d <e1000_dump_eeprom+0x580>
   27116:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   2711a:	b9 04 00 00 00       	mov    $0x4,%ecx
   2711f:	4c 89 ea             	mov    %r13,%rdx
   27122:	4c 89 e6             	mov    %r12,%rsi
   27125:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27128: R_X86_64_32S	.rodata.str1.1+0x3141
   2712c:	e8 00 00 00 00       	callq  27131 <e1000_dump_eeprom+0x544>
			2712d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27131:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
   27134:	48 89 df             	mov    %rbx,%rdi
   27137:	31 c9                	xor    %ecx,%ecx
   27139:	ba 01 00 00 00       	mov    $0x1,%edx
   2713e:	31 db                	xor    %ebx,%ebx
   27140:	e8 00 00 00 00       	callq  27145 <e1000_dump_eeprom+0x558>
			27141: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   27145:	eb 21                	jmp    27168 <e1000_dump_eeprom+0x57b>
   27147:	4c 63 c3             	movslq %ebx,%r8
   2714a:	4c 03 45 a8          	add    0xffffffffffffffa8(%rbp),%r8
   2714e:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   27152:	b9 01 00 00 00       	mov    $0x1,%ecx
   27157:	4c 89 e6             	mov    %r12,%rsi
   2715a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2715d: R_X86_64_32S	.rodata.str1.1+0x3141
   27161:	ff c3                	inc    %ebx
   27163:	e8 00 00 00 00       	callq  27168 <e1000_dump_eeprom+0x57b>
			27164: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27168:	3b 5d c0             	cmp    0xffffffffffffffc0(%rbp),%ebx
   2716b:	7c da                	jl     27147 <e1000_dump_eeprom+0x55a>
   2716d:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   27171:	4c 8d 45 b0          	lea    0xffffffffffffffb0(%rbp),%r8
   27175:	b9 08 00 00 00       	mov    $0x8,%ecx
   2717a:	4c 89 e6             	mov    %r12,%rsi
   2717d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27180: R_X86_64_32S	.rodata.str1.1+0x3141
   27184:	48 89 da             	mov    %rbx,%rdx
   27187:	e8 00 00 00 00       	callq  2718c <e1000_dump_eeprom+0x59f>
			27188: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2718c:	4c 8d 45 df          	lea    0xffffffffffffffdf(%rbp),%r8
   27190:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27193: R_X86_64_32S	.rodata.str1.1+0x3141
   27197:	b9 01 00 00 00       	mov    $0x1,%ecx
   2719c:	48 89 da             	mov    %rbx,%rdx
   2719f:	4c 89 e6             	mov    %r12,%rsi
   271a2:	e8 00 00 00 00       	callq  271a7 <e1000_dump_eeprom+0x5ba>
			271a3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   271a7:	48 8b bd 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdi
   271ae:	48 85 ff             	test   %rdi,%rdi
   271b1:	74 10                	je     271c3 <e1000_dump_eeprom+0x5d6>
   271b3:	e8 00 00 00 00       	callq  271b8 <e1000_dump_eeprom+0x5cb>
			271b4: R_X86_64_PC32	kfree+0xfffffffffffffffc
   271b8:	48 c7 85 70 ff ff ff 	movq   $0x0,0xffffffffffffff70(%rbp)
   271bf:	00 00 00 00 
   271c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			271c6: R_X86_64_32S	str_265272835
   271ca:	31 c0                	xor    %eax,%eax
   271cc:	e8 00 00 00 00       	callq  271d1 <e1000_dump_eeprom+0x5e4>
			271cd: R_X86_64_PC32	printk+0xfffffffffffffffc
   271d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			271d4: R_X86_64_32S	str_250828028
   271d8:	31 c0                	xor    %eax,%eax
   271da:	e8 00 00 00 00       	callq  271df <e1000_dump_eeprom+0x5f2>
			271db: R_X86_64_PC32	printk+0xfffffffffffffffc
   271df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			271e2: R_X86_64_32S	str_366186003
   271e6:	31 c0                	xor    %eax,%eax
   271e8:	e8 00 00 00 00       	callq  271ed <e1000_dump_eeprom+0x600>
			271e9: R_X86_64_PC32	printk+0xfffffffffffffffc
   271ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			271f0: R_X86_64_32S	str_248420259
   271f4:	31 c0                	xor    %eax,%eax
   271f6:	e8 00 00 00 00       	callq  271fb <e1000_dump_eeprom+0x60e>
			271f7: R_X86_64_PC32	printk+0xfffffffffffffffc
   271fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			271fe: R_X86_64_32S	str_393802358
   27202:	31 c0                	xor    %eax,%eax
   27204:	e8 00 00 00 00       	callq  27209 <e1000_dump_eeprom+0x61c>
			27205: R_X86_64_PC32	printk+0xfffffffffffffffc
   27209:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2720c: R_X86_64_32S	str_929055912
   27210:	31 c0                	xor    %eax,%eax
   27212:	e8 00 00 00 00       	callq  27217 <e1000_dump_eeprom+0x62a>
			27213: R_X86_64_PC32	printk+0xfffffffffffffffc
   27217:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2721a: R_X86_64_32S	str_108217275
   2721e:	31 c0                	xor    %eax,%eax
   27220:	e8 00 00 00 00       	callq  27225 <e1000_dump_eeprom+0x638>
			27221: R_X86_64_PC32	printk+0xfffffffffffffffc
   27225:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27228: R_X86_64_32S	str_38293389
   2722c:	31 c0                	xor    %eax,%eax
   2722e:	e8 00 00 00 00       	callq  27233 <e1000_dump_eeprom+0x646>
			2722f: R_X86_64_PC32	printk+0xfffffffffffffffc
   27233:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27236: R_X86_64_32S	str_806744193
   2723a:	31 c0                	xor    %eax,%eax
   2723c:	e8 00 00 00 00       	callq  27241 <e1000_dump_eeprom+0x654>
			2723d: R_X86_64_PC32	printk+0xfffffffffffffffc
   27241:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27244: R_X86_64_32S	str_556488457
   27248:	31 c0                	xor    %eax,%eax
   2724a:	e8 00 00 00 00       	callq  2724f <e1000_dump_eeprom+0x662>
			2724b: R_X86_64_PC32	printk+0xfffffffffffffffc
   2724f:	4c 89 f7             	mov    %r14,%rdi
   27252:	e8 00 00 00 00       	callq  27257 <e1000_dump_eeprom+0x66a>
			27253: R_X86_64_PC32	kfree+0xfffffffffffffffc
   27257:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
   2725b:	5b                   	pop    %rbx
   2725c:	41 5c                	pop    %r12
   2725e:	41 5d                	pop    %r13
   27260:	41 5e                	pop    %r14
   27262:	c9                   	leaveq 
   27263:	c3                   	retq   

0000000000027264 <__pci_register_driver>:
   27264:	55                   	push   %rbp
   27265:	48 89 e5             	mov    %rsp,%rbp
   27268:	41 57                	push   %r15
   2726a:	49 89 ff             	mov    %rdi,%r15
   2726d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27270: R_X86_64_32S	.rodata.str1.1+0x318a
   27274:	41 56                	push   %r14
   27276:	41 55                	push   %r13
   27278:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   2727c:	41 54                	push   %r12
   2727e:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   27282:	53                   	push   %rbx
   27283:	48 83 ec 58          	sub    $0x58,%rsp
   27287:	48 89 75 88          	mov    %rsi,0xffffffffffffff88(%rbp)
   2728b:	48 89 55 80          	mov    %rdx,0xffffffffffffff80(%rbp)
   2728f:	e8 00 00 00 00       	callq  27294 <__pci_register_driver+0x30>
			27290: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27294:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   27298:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2729b: R_X86_64_32S	.rodata.str1.1+0x31a0
   2729f:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   272a6:	00 
   272a7:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   272ae:	00 
   272af:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   272b6:	4c 89 7d b0          	mov    %r15,0xffffffffffffffb0(%rbp)
   272ba:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
   272be:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   272c2:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   272c6:	e8 00 00 00 00       	callq  272cb <__pci_register_driver+0x67>
			272c7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   272cb:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   272cf:	4c 89 e2             	mov    %r12,%rdx
   272d2:	4c 89 ee             	mov    %r13,%rsi
   272d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			272d8: R_X86_64_32S	.rodata.str1.1+0x318a
   272dc:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   272e3:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   272ea:	00 
   272eb:	e8 00 00 00 00       	callq  272f0 <__pci_register_driver+0x8c>
			272ec: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   272f0:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   272f4:	48 85 db             	test   %rbx,%rbx
   272f7:	0f 84 eb 00 00 00    	je     273e8 <__pci_register_driver+0x184>
   272fd:	48 8d 4b 60          	lea    0x60(%rbx),%rcx
   27301:	4c 89 e2             	mov    %r12,%rdx
   27304:	4c 89 ee             	mov    %r13,%rsi
   27307:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2730a: R_X86_64_32S	.rodata.str1.1+0x318a
   2730e:	e8 00 00 00 00       	callq  27313 <__pci_register_driver+0xaf>
			2730f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   27313:	48 8b 53 60          	mov    0x60(%rbx),%rdx
   27317:	48 85 d2             	test   %rdx,%rdx
   2731a:	74 47                	je     27363 <__pci_register_driver+0xff>
   2731c:	fc                   	cld    
   2731d:	48 89 d7             	mov    %rdx,%rdi
   27320:	31 c0                	xor    %eax,%eax
   27322:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
   27326:	f2 ae                	repnz scas %es:(%rdi),%al
   27328:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2732e:	4c 89 e2             	mov    %r12,%rdx
   27331:	4c 89 ee             	mov    %r13,%rsi
   27334:	f7 d1                	not    %ecx
   27336:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27339: R_X86_64_32S	.rodata.str1.1+0x318a
   2733d:	89 4d cc             	mov    %ecx,0xffffffffffffffcc(%rbp)
   27340:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   27344:	e8 00 00 00 00       	callq  27349 <__pci_register_driver+0xe5>
			27345: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27349:	44 8b 45 cc          	mov    0xffffffffffffffcc(%rbp),%r8d
   2734d:	48 8b 4b 60          	mov    0x60(%rbx),%rcx
   27351:	4c 89 e2             	mov    %r12,%rdx
   27354:	4c 89 ee             	mov    %r13,%rsi
   27357:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2735a: R_X86_64_32S	.rodata.str1.1+0x318a
   2735e:	e8 00 00 00 00       	callq  27363 <__pci_register_driver+0xff>
			2735f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27363:	48 8d 4b 68          	lea    0x68(%rbx),%rcx
   27367:	4c 89 e2             	mov    %r12,%rdx
   2736a:	4c 89 ee             	mov    %r13,%rsi
   2736d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27370: R_X86_64_32S	.rodata.str1.1+0x318a
   27374:	e8 00 00 00 00       	callq  27379 <__pci_register_driver+0x115>
			27375: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   27379:	48 8d 4b 70          	lea    0x70(%rbx),%rcx
   2737d:	4c 89 e2             	mov    %r12,%rdx
   27380:	4c 89 ee             	mov    %r13,%rsi
   27383:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27386: R_X86_64_32S	.rodata.str1.1+0x318a
   2738a:	e8 00 00 00 00       	callq  2738f <__pci_register_driver+0x12b>
			2738b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2738f:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   27393:	4c 89 e2             	mov    %r12,%rdx
   27396:	4c 89 ee             	mov    %r13,%rsi
   27399:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2739c: R_X86_64_32S	.rodata.str1.1+0x318a
   273a0:	48 83 c1 20          	add    $0x20,%rcx
   273a4:	e8 00 00 00 00       	callq  273a9 <__pci_register_driver+0x145>
			273a5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   273a9:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   273ad:	4c 89 e2             	mov    %r12,%rdx
   273b0:	4c 89 ee             	mov    %r13,%rsi
   273b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			273b6: R_X86_64_32S	.rodata.str1.1+0x318a
   273ba:	48 83 c1 10          	add    $0x10,%rcx
   273be:	e8 00 00 00 00       	callq  273c3 <__pci_register_driver+0x15f>
			273bf: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   273c3:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   273c7:	48 8b 48 10          	mov    0x10(%rax),%rcx
   273cb:	48 85 c9             	test   %rcx,%rcx
   273ce:	74 18                	je     273e8 <__pci_register_driver+0x184>
   273d0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   273d6:	4c 89 e2             	mov    %r12,%rdx
   273d9:	4c 89 ee             	mov    %r13,%rsi
   273dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			273df: R_X86_64_32S	.rodata.str1.1+0x318a
   273e3:	e8 00 00 00 00       	callq  273e8 <__pci_register_driver+0x184>
			273e4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   273e8:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   273ec:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   273f0:	4c 8d 75 a8          	lea    0xffffffffffffffa8(%rbp),%r14
   273f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			273f7: R_X86_64_32S	.rodata.str1.1+0x318a
   273fb:	4c 89 f1             	mov    %r14,%rcx
   273fe:	4c 89 ea             	mov    %r13,%rdx
   27401:	48 89 de             	mov    %rbx,%rsi
   27404:	e8 00 00 00 00       	callq  27409 <__pci_register_driver+0x1a5>
			27405: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   27409:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   2740d:	4c 89 ea             	mov    %r13,%rdx
   27410:	48 89 de             	mov    %rbx,%rsi
   27413:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27416: R_X86_64_32S	.rodata.str1.1+0x318a
   2741a:	e8 00 00 00 00       	callq  2741f <__pci_register_driver+0x1bb>
			2741b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2741f:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   27423:	48 85 c9             	test   %rcx,%rcx
   27426:	74 18                	je     27440 <__pci_register_driver+0x1dc>
   27428:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2742e:	4c 89 ea             	mov    %r13,%rdx
   27431:	48 89 de             	mov    %rbx,%rsi
   27434:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27437: R_X86_64_32S	.rodata.str1.1+0x318a
   2743b:	e8 00 00 00 00       	callq  27440 <__pci_register_driver+0x1dc>
			2743c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27440:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   27444:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   27448:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2744b: R_X86_64_32S	.rodata.str1.1+0x318a
   2744f:	48 c7 45 90 5b 04 00 	movq   $0x45b,0xffffffffffffff90(%rbp)
   27456:	00 
   27457:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   2745b:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   2745e:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   27461:	e8 00 00 00 00       	callq  27466 <__pci_register_driver+0x202>
			27462: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   27466:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   2746a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2746d: R_X86_64_32S	.rodata.str1.1+0x31c4
   27471:	4c 89 7d a8          	mov    %r15,0xffffffffffffffa8(%rbp)
   27475:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   27479:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   2747d:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   27481:	e8 00 00 00 00       	callq  27486 <__pci_register_driver+0x222>
			27482: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27486:	4c 8b 65 a0          	mov    0xffffffffffffffa0(%rbp),%r12
   2748a:	41 b8 00 01 00 00    	mov    $0x100,%r8d
   27490:	4c 89 f1             	mov    %r14,%rcx
   27493:	4c 89 ea             	mov    %r13,%rdx
   27496:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27499: R_X86_64_32S	.rodata.str1.1+0x318a
   2749d:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   274a4:	4c 89 e6             	mov    %r12,%rsi
   274a7:	e8 00 00 00 00       	callq  274ac <__pci_register_driver+0x248>
			274a8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   274ac:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   274b0:	48 85 c0             	test   %rax,%rax
   274b3:	0f 84 4d 01 00 00    	je     27606 <__pci_register_driver+0x3a2>
   274b9:	48 8d b8 c0 00 00 00 	lea    0xc0(%rax),%rdi
   274c0:	ba 10 00 00 00       	mov    $0x10,%edx
   274c5:	be 30 00 00 00       	mov    $0x30,%esi
   274ca:	e8 00 00 00 00       	callq  274cf <__pci_register_driver+0x26b>
			274cb: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   274cf:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
   274d3:	31 f6                	xor    %esi,%esi
   274d5:	ba 30 00 00 00       	mov    $0x30,%edx
   274da:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   274e1:	e8 00 00 00 00       	callq  274e6 <__pci_register_driver+0x282>
			274e2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   274e6:	48 8b 7d a8          	mov    0xffffffffffffffa8(%rbp),%rdi
   274ea:	ba 60 00 00 00       	mov    $0x60,%edx
   274ef:	be 60 00 00 00       	mov    $0x60,%esi
   274f4:	e8 00 00 00 00       	callq  274f9 <__pci_register_driver+0x295>
			274f5: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   274f9:	48 8b 5d a8          	mov    0xffffffffffffffa8(%rbp),%rbx
   274fd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   27503:	4c 89 ea             	mov    %r13,%rdx
   27506:	4c 89 e6             	mov    %r12,%rsi
   27509:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2750c: R_X86_64_32S	.rodata.str1.1+0x318a
   27510:	48 83 c3 60          	add    $0x60,%rbx
   27514:	48 89 d9             	mov    %rbx,%rcx
   27517:	e8 00 00 00 00       	callq  2751c <__pci_register_driver+0x2b8>
			27518: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2751c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   27520:	74 45                	je     27567 <__pci_register_driver+0x303>
   27522:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   27526:	b9 04 00 00 00       	mov    $0x4,%ecx
   2752b:	4c 89 ea             	mov    %r13,%rdx
   2752e:	4c 89 e6             	mov    %r12,%rsi
   27531:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27534: R_X86_64_32S	.rodata.str1.1+0x318a
   27538:	e8 00 00 00 00       	callq  2753d <__pci_register_driver+0x2d9>
			27539: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2753d:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
   27540:	31 c9                	xor    %ecx,%ecx
   27542:	ba 01 00 00 00       	mov    $0x1,%edx
   27547:	48 89 df             	mov    %rbx,%rdi
   2754a:	e8 00 00 00 00       	callq  2754f <__pci_register_driver+0x2eb>
			2754b: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   2754f:	8b 4d c0             	mov    0xffffffffffffffc0(%rbp),%ecx
   27552:	4c 8b 03             	mov    (%rbx),%r8
   27555:	4c 89 ea             	mov    %r13,%rdx
   27558:	4c 89 e6             	mov    %r12,%rsi
   2755b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2755e: R_X86_64_32S	.rodata.str1.1+0x318a
   27562:	e8 00 00 00 00       	callq  27567 <__pci_register_driver+0x303>
			27563: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27567:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
   2756b:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   27571:	4c 89 ea             	mov    %r13,%rdx
   27574:	4c 89 e6             	mov    %r12,%rsi
   27577:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2757a: R_X86_64_32S	.rodata.str1.1+0x318a
   2757e:	e8 00 00 00 00       	callq  27583 <__pci_register_driver+0x31f>
			2757f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   27583:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   27587:	41 b8 d8 01 00 00    	mov    $0x1d8,%r8d
   2758d:	4c 89 ea             	mov    %r13,%rdx
   27590:	4c 89 e6             	mov    %r12,%rsi
   27593:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27596: R_X86_64_32S	.rodata.str1.1+0x318a
   2759a:	e8 00 00 00 00       	callq  2759f <__pci_register_driver+0x33b>
			2759b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2759f:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   275a3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   275a9:	4c 89 ea             	mov    %r13,%rdx
   275ac:	4c 89 e6             	mov    %r12,%rsi
   275af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			275b2: R_X86_64_32S	.rodata.str1.1+0x318a
   275b6:	48 83 c1 20          	add    $0x20,%rcx
   275ba:	e8 00 00 00 00       	callq  275bf <__pci_register_driver+0x35b>
			275bb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   275bf:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   275c3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   275c9:	4c 89 ea             	mov    %r13,%rdx
   275cc:	4c 89 e6             	mov    %r12,%rsi
   275cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			275d2: R_X86_64_32S	.rodata.str1.1+0x318a
   275d6:	48 83 c1 10          	add    $0x10,%rcx
   275da:	e8 00 00 00 00       	callq  275df <__pci_register_driver+0x37b>
			275db: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   275df:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   275e3:	48 8b 40 10          	mov    0x10(%rax),%rax
   275e7:	48 85 c0             	test   %rax,%rax
   275ea:	74 1a                	je     27606 <__pci_register_driver+0x3a2>
   275ec:	49 89 c0             	mov    %rax,%r8
   275ef:	b9 01 00 00 00       	mov    $0x1,%ecx
   275f4:	4c 89 ea             	mov    %r13,%rdx
   275f7:	4c 89 e6             	mov    %r12,%rsi
   275fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			275fd: R_X86_64_32S	.rodata.str1.1+0x318a
   27601:	e8 00 00 00 00       	callq  27606 <__pci_register_driver+0x3a2>
			27602: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27606:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   2760a:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   2760e:	41 b8 d8 01 00 00    	mov    $0x1d8,%r8d
   27614:	4c 89 e6             	mov    %r12,%rsi
   27617:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2761a: R_X86_64_32S	.rodata.str1.1+0x318a
   2761e:	48 89 da             	mov    %rbx,%rdx
   27621:	e8 00 00 00 00       	callq  27626 <__pci_register_driver+0x3c2>
			27622: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   27626:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   2762a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   27630:	48 89 da             	mov    %rbx,%rdx
   27633:	4c 89 e6             	mov    %r12,%rsi
   27636:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27639: R_X86_64_32S	.rodata.str1.1+0x318a
   2763d:	e8 00 00 00 00       	callq  27642 <__pci_register_driver+0x3de>
			2763e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   27642:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   27646:	48 85 c0             	test   %rax,%rax
   27649:	74 1a                	je     27665 <__pci_register_driver+0x401>
   2764b:	49 89 c0             	mov    %rax,%r8
   2764e:	b9 01 00 00 00       	mov    $0x1,%ecx
   27653:	48 89 da             	mov    %rbx,%rdx
   27656:	4c 89 e6             	mov    %r12,%rsi
   27659:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2765c: R_X86_64_32S	.rodata.str1.1+0x318a
   27660:	e8 00 00 00 00       	callq  27665 <__pci_register_driver+0x401>
			27661: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27665:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   27669:	48 89 da             	mov    %rbx,%rdx
   2766c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2766f: R_X86_64_32S	.rodata.str1.1+0x318a
   27673:	b9 04 00 00 00       	mov    $0x4,%ecx
   27678:	4c 89 e6             	mov    %r12,%rsi
   2767b:	e8 00 00 00 00       	callq  27680 <__pci_register_driver+0x41c>
			2767c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27680:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   27684:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
   27687:	48 85 ff             	test   %rdi,%rdi
   2768a:	74 05                	je     27691 <__pci_register_driver+0x42d>
   2768c:	e8 00 00 00 00       	callq  27691 <__pci_register_driver+0x42d>
			2768d: R_X86_64_PC32	kfree+0xfffffffffffffffc
   27691:	48 83 c4 58          	add    $0x58,%rsp
   27695:	89 d8                	mov    %ebx,%eax
   27697:	5b                   	pop    %rbx
   27698:	41 5c                	pop    %r12
   2769a:	41 5d                	pop    %r13
   2769c:	41 5e                	pop    %r14
   2769e:	41 5f                	pop    %r15
   276a0:	c9                   	leaveq 
   276a1:	c3                   	retq   

00000000000276a2 <e1000_set_spd_dplx>:
   276a2:	55                   	push   %rbp
   276a3:	48 89 e5             	mov    %rsp,%rbp
   276a6:	41 56                	push   %r14
   276a8:	41 55                	push   %r13
   276aa:	41 54                	push   %r12
   276ac:	41 89 f4             	mov    %esi,%r12d
   276af:	53                   	push   %rbx
   276b0:	48 89 fb             	mov    %rdi,%rbx
   276b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			276b6: R_X86_64_32S	.rodata.str1.1+0x31e8
   276ba:	4c 8d b3 a7 04 00 00 	lea    0x4a7(%rbx),%r14
   276c1:	4c 8d ab b8 03 00 00 	lea    0x3b8(%rbx),%r13
   276c8:	e8 00 00 00 00       	callq  276cd <e1000_set_spd_dplx+0x2b>
			276c9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   276cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			276d0: R_X86_64_32S	str_328922700
   276d4:	e8 00 00 00 00       	callq  276d9 <e1000_set_spd_dplx+0x37>
			276d5: R_X86_64_PC32	logStackFrame+0xfffffffffffffffc
   276d9:	b9 31 62 00 00       	mov    $0x6231,%ecx
   276de:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			276e1: R_X86_64_32S	str_158302356
   276e5:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			276e8: R_X86_64_32S	str_642711145
   276ec:	4c 89 f7             	mov    %r14,%rdi
   276ef:	e8 00 00 00 00       	callq  276f4 <e1000_set_spd_dplx+0x52>
			276f0: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   276f4:	48 8d bb d4 03 00 00 	lea    0x3d4(%rbx),%rdi
   276fb:	41 c6 85 ef 00 00 00 	movb   $0x0,0xef(%r13)
   27702:	00 
   27703:	b9 33 62 00 00       	mov    $0x6233,%ecx
   27708:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			2770b: R_X86_64_32S	str_158302356
   2770f:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27712: R_X86_64_32S	str_246169321
   27716:	e8 00 00 00 00       	callq  2771b <e1000_set_spd_dplx+0x79>
			27717: R_X86_64_PC32	logRead+0xfffffffffffffffc
   2771b:	41 83 7d 1c 01       	cmpl   $0x1,0x1c(%r13)
   27720:	74 20                	je     27742 <e1000_set_spd_dplx+0xa0>
   27722:	66 41 83 fc 0a       	cmp    $0xa,%r12w
   27727:	74 2a                	je     27753 <e1000_set_spd_dplx+0xb1>
   27729:	66 41 83 fc 0b       	cmp    $0xb,%r12w
   2772e:	74 4f                	je     2777f <e1000_set_spd_dplx+0xdd>
   27730:	66 41 83 fc 64       	cmp    $0x64,%r12w
   27735:	74 74                	je     277ab <e1000_set_spd_dplx+0x109>
   27737:	66 41 83 fc 65       	cmp    $0x65,%r12w
   2773c:	0f 84 92 00 00 00    	je     277d4 <e1000_set_spd_dplx+0x132>
   27742:	66 41 81 fc e9 03    	cmp    $0x3e9,%r12w
   27748:	0f 84 af 00 00 00    	je     277fd <e1000_set_spd_dplx+0x15b>
   2774e:	e9 fa 00 00 00       	jmpq   2784d <e1000_set_spd_dplx+0x1ab>
   27753:	48 8d bb a9 04 00 00 	lea    0x4a9(%rbx),%rdi
   2775a:	b9 40 62 00 00       	mov    $0x6240,%ecx
   2775f:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27762: R_X86_64_32S	str_158302356
   27766:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27769: R_X86_64_32S	str_592281790
   2776d:	e8 00 00 00 00       	callq  27772 <e1000_set_spd_dplx+0xd0>
			2776e: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   27772:	41 c6 85 f1 00 00 00 	movb   $0x0,0xf1(%r13)
   27779:	00 
   2777a:	e9 ca 00 00 00       	jmpq   27849 <e1000_set_spd_dplx+0x1a7>
   2777f:	48 8d bb a9 04 00 00 	lea    0x4a9(%rbx),%rdi
   27786:	b9 45 62 00 00       	mov    $0x6245,%ecx
   2778b:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			2778e: R_X86_64_32S	str_158302356
   27792:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27795: R_X86_64_32S	str_592281790
   27799:	e8 00 00 00 00       	callq  2779e <e1000_set_spd_dplx+0xfc>
			2779a: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   2779e:	41 c6 85 f1 00 00 00 	movb   $0x1,0xf1(%r13)
   277a5:	01 
   277a6:	e9 9e 00 00 00       	jmpq   27849 <e1000_set_spd_dplx+0x1a7>
   277ab:	48 8d bb a9 04 00 00 	lea    0x4a9(%rbx),%rdi
   277b2:	b9 4a 62 00 00       	mov    $0x624a,%ecx
   277b7:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			277ba: R_X86_64_32S	str_158302356
   277be:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			277c1: R_X86_64_32S	str_592281790
   277c5:	e8 00 00 00 00       	callq  277ca <e1000_set_spd_dplx+0x128>
			277c6: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   277ca:	41 c6 85 f1 00 00 00 	movb   $0x2,0xf1(%r13)
   277d1:	02 
   277d2:	eb 75                	jmp    27849 <e1000_set_spd_dplx+0x1a7>
   277d4:	48 8d bb a9 04 00 00 	lea    0x4a9(%rbx),%rdi
   277db:	b9 4f 62 00 00       	mov    $0x624f,%ecx
   277e0:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			277e3: R_X86_64_32S	str_158302356
   277e7:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			277ea: R_X86_64_32S	str_592281790
   277ee:	e8 00 00 00 00       	callq  277f3 <e1000_set_spd_dplx+0x151>
			277ef: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   277f3:	41 c6 85 f1 00 00 00 	movb   $0x3,0xf1(%r13)
   277fa:	03 
   277fb:	eb 4c                	jmp    27849 <e1000_set_spd_dplx+0x1a7>
   277fd:	b9 54 62 00 00       	mov    $0x6254,%ecx
   27802:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27805: R_X86_64_32S	str_158302356
   27809:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			2780c: R_X86_64_32S	str_642711145
   27810:	4c 89 f7             	mov    %r14,%rdi
   27813:	e8 00 00 00 00       	callq  27818 <e1000_set_spd_dplx+0x176>
			27814: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   27818:	49 8d bd d2 00 00 00 	lea    0xd2(%r13),%rdi
   2781f:	41 c6 85 ef 00 00 00 	movb   $0x1,0xef(%r13)
   27826:	01 
   27827:	b9 56 62 00 00       	mov    $0x6256,%ecx
   2782c:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			2782f: R_X86_64_32S	str_158302356
   27833:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27836: R_X86_64_32S	str_101123515
   2783a:	e8 00 00 00 00       	callq  2783f <e1000_set_spd_dplx+0x19d>
			2783b: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   2783f:	66 41 c7 85 d2 00 00 	movw   $0x20,0xd2(%r13)
   27846:	00 20 00 
   27849:	31 c0                	xor    %eax,%eax
   2784b:	eb 13                	jmp    27860 <e1000_set_spd_dplx+0x1be>
   2784d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27850: R_X86_64_32S	str_250403513
   27854:	31 c0                	xor    %eax,%eax
   27856:	e8 00 00 00 00       	callq  2785b <e1000_set_spd_dplx+0x1b9>
			27857: R_X86_64_PC32	printk+0xfffffffffffffffc
   2785b:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
   27860:	5b                   	pop    %rbx
   27861:	41 5c                	pop    %r12
   27863:	41 5d                	pop    %r13
   27865:	41 5e                	pop    %r14
   27867:	c9                   	leaveq 
   27868:	c3                   	retq   

0000000000027869 <__MARSH_WRAP__e1000_set_spd_dplx>:
   27869:	55                   	push   %rbp
   2786a:	48 89 e5             	mov    %rsp,%rbp
   2786d:	41 57                	push   %r15
   2786f:	49 89 f7             	mov    %rsi,%r15
   27872:	41 56                	push   %r14
   27874:	4c 8d 75 d0          	lea    0xffffffffffffffd0(%rbp),%r14
   27878:	41 55                	push   %r13
   2787a:	41 54                	push   %r12
   2787c:	53                   	push   %rbx
   2787d:	48 83 ec 28          	sub    $0x28,%rsp
   27881:	48 89 7d b0          	mov    %rdi,0xffffffffffffffb0(%rbp)
   27885:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27888: R_X86_64_32S	.rodata.str1.1+0x31fb
   2788c:	e8 00 00 00 00       	callq  27891 <__MARSH_WRAP__e1000_set_spd_dplx+0x28>
			2788d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27891:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27895:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   27899:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2789c: R_X86_64_32S	.rodata.str1.1+0x31e8
   278a0:	41 b8 e0 07 00 00    	mov    $0x7e0,%r8d
   278a6:	4c 89 f2             	mov    %r14,%rdx
   278a9:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
   278b0:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   278b7:	00 
   278b8:	e8 00 00 00 00       	callq  278bd <__MARSH_WRAP__e1000_set_spd_dplx+0x54>
			278b9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   278bd:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   278c1:	48 85 ff             	test   %rdi,%rdi
   278c4:	0f 84 e7 00 00 00    	je     279b1 <__MARSH_WRAP__e1000_set_spd_dplx+0x148>
   278ca:	ba 20 01 00 00       	mov    $0x120,%edx
   278cf:	be b8 03 00 00       	mov    $0x3b8,%esi
   278d4:	e8 00 00 00 00       	callq  278d9 <__MARSH_WRAP__e1000_set_spd_dplx+0x70>
			278d5: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   278d9:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
   278dd:	ba 04 00 00 00       	mov    $0x4,%edx
   278e2:	48 81 c3 b8 03 00 00 	add    $0x3b8,%rbx
   278e9:	4c 8d 63 1c          	lea    0x1c(%rbx),%r12
   278ed:	48 89 df             	mov    %rbx,%rdi
   278f0:	44 89 e6             	mov    %r12d,%esi
   278f3:	29 de                	sub    %ebx,%esi
   278f5:	e8 00 00 00 00       	callq  278fa <__MARSH_WRAP__e1000_set_spd_dplx+0x91>
			278f6: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   278fa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   278fe:	4d 89 e0             	mov    %r12,%r8
   27901:	4c 8d a3 d2 00 00 00 	lea    0xd2(%rbx),%r12
   27908:	b9 04 00 00 00       	mov    $0x4,%ecx
   2790d:	4c 89 f2             	mov    %r14,%rdx
   27910:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27913: R_X86_64_32S	.rodata.str1.1+0x31e8
   27917:	e8 00 00 00 00       	callq  2791c <__MARSH_WRAP__e1000_set_spd_dplx+0xb3>
			27918: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2791c:	44 89 e6             	mov    %r12d,%esi
   2791f:	ba 02 00 00 00       	mov    $0x2,%edx
   27924:	48 89 df             	mov    %rbx,%rdi
   27927:	29 de                	sub    %ebx,%esi
   27929:	e8 00 00 00 00       	callq  2792e <__MARSH_WRAP__e1000_set_spd_dplx+0xc5>
			2792a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2792e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27932:	4d 89 e0             	mov    %r12,%r8
   27935:	4c 8d a3 ef 00 00 00 	lea    0xef(%rbx),%r12
   2793c:	b9 02 00 00 00       	mov    $0x2,%ecx
   27941:	4c 89 f2             	mov    %r14,%rdx
   27944:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27947: R_X86_64_32S	.rodata.str1.1+0x31e8
   2794b:	e8 00 00 00 00       	callq  27950 <__MARSH_WRAP__e1000_set_spd_dplx+0xe7>
			2794c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27950:	44 89 e6             	mov    %r12d,%esi
   27953:	ba 01 00 00 00       	mov    $0x1,%edx
   27958:	48 89 df             	mov    %rbx,%rdi
   2795b:	29 de                	sub    %ebx,%esi
   2795d:	e8 00 00 00 00       	callq  27962 <__MARSH_WRAP__e1000_set_spd_dplx+0xf9>
			2795e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   27962:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27966:	4d 89 e0             	mov    %r12,%r8
   27969:	4c 8d a3 f1 00 00 00 	lea    0xf1(%rbx),%r12
   27970:	b9 01 00 00 00       	mov    $0x1,%ecx
   27975:	4c 89 f2             	mov    %r14,%rdx
   27978:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2797b: R_X86_64_32S	.rodata.str1.1+0x31e8
   2797f:	e8 00 00 00 00       	callq  27984 <__MARSH_WRAP__e1000_set_spd_dplx+0x11b>
			27980: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27984:	44 89 e6             	mov    %r12d,%esi
   27987:	ba 01 00 00 00       	mov    $0x1,%edx
   2798c:	48 89 df             	mov    %rbx,%rdi
   2798f:	29 de                	sub    %ebx,%esi
   27991:	e8 00 00 00 00       	callq  27996 <__MARSH_WRAP__e1000_set_spd_dplx+0x12d>
			27992: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   27996:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2799a:	4d 89 e0             	mov    %r12,%r8
   2799d:	b9 01 00 00 00       	mov    $0x1,%ecx
   279a2:	4c 89 f2             	mov    %r14,%rdx
   279a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			279a8: R_X86_64_32S	.rodata.str1.1+0x31e8
   279ac:	e8 00 00 00 00       	callq  279b1 <__MARSH_WRAP__e1000_set_spd_dplx+0x148>
			279ad: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   279b1:	4c 8d 6d d6          	lea    0xffffffffffffffd6(%rbp),%r13
   279b5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   279b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			279bc: R_X86_64_32S	.rodata.str1.1+0x31e8
   279c0:	b9 02 00 00 00       	mov    $0x2,%ecx
   279c5:	4c 89 f2             	mov    %r14,%rdx
   279c8:	4d 89 e8             	mov    %r13,%r8
   279cb:	e8 00 00 00 00       	callq  279d0 <__MARSH_WRAP__e1000_set_spd_dplx+0x167>
			279cc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   279d0:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   279d4:	48 85 ff             	test   %rdi,%rdi
   279d7:	74 0d                	je     279e6 <__MARSH_WRAP__e1000_set_spd_dplx+0x17d>
   279d9:	e8 00 00 00 00       	callq  279de <__MARSH_WRAP__e1000_set_spd_dplx+0x175>
			279da: R_X86_64_PC32	kfree+0xfffffffffffffffc
   279de:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   279e5:	00 
   279e6:	0f b7 75 d6          	movzwl 0xffffffffffffffd6(%rbp),%esi
   279ea:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   279ee:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   279f2:	e8 00 00 00 00       	callq  279f7 <__MARSH_WRAP__e1000_set_spd_dplx+0x18e>
			279f3: R_X86_64_PC32	e1000_set_spd_dplx+0xfffffffffffffffc
   279f7:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   279fb:	4c 89 f2             	mov    %r14,%rdx
   279fe:	4c 89 e6             	mov    %r12,%rsi
   27a01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27a04: R_X86_64_32S	.rodata.str1.1+0x31e8
   27a08:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   27a0b:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
   27a12:	e8 00 00 00 00       	callq  27a17 <__MARSH_WRAP__e1000_set_spd_dplx+0x1ae>
			27a13: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   27a17:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
   27a1b:	48 85 db             	test   %rbx,%rbx
   27a1e:	74 7c                	je     27a9c <__MARSH_WRAP__e1000_set_spd_dplx+0x233>
   27a20:	48 8d 8b d4 03 00 00 	lea    0x3d4(%rbx),%rcx
   27a27:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   27a2d:	4c 89 f2             	mov    %r14,%rdx
   27a30:	4c 89 e6             	mov    %r12,%rsi
   27a33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27a36: R_X86_64_32S	.rodata.str1.1+0x31e8
   27a3a:	e8 00 00 00 00       	callq  27a3f <__MARSH_WRAP__e1000_set_spd_dplx+0x1d6>
			27a3b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27a3f:	48 8d 8b 8a 04 00 00 	lea    0x48a(%rbx),%rcx
   27a46:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   27a4c:	4c 89 f2             	mov    %r14,%rdx
   27a4f:	4c 89 e6             	mov    %r12,%rsi
   27a52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27a55: R_X86_64_32S	.rodata.str1.1+0x31e8
   27a59:	e8 00 00 00 00       	callq  27a5e <__MARSH_WRAP__e1000_set_spd_dplx+0x1f5>
			27a5a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27a5e:	48 8d 8b a7 04 00 00 	lea    0x4a7(%rbx),%rcx
   27a65:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   27a6b:	4c 89 f2             	mov    %r14,%rdx
   27a6e:	4c 89 e6             	mov    %r12,%rsi
   27a71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27a74: R_X86_64_32S	.rodata.str1.1+0x31e8
   27a78:	e8 00 00 00 00       	callq  27a7d <__MARSH_WRAP__e1000_set_spd_dplx+0x214>
			27a79: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27a7d:	48 8d 8b a9 04 00 00 	lea    0x4a9(%rbx),%rcx
   27a84:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   27a8a:	4c 89 f2             	mov    %r14,%rdx
   27a8d:	4c 89 e6             	mov    %r12,%rsi
   27a90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27a93: R_X86_64_32S	.rodata.str1.1+0x31e8
   27a97:	e8 00 00 00 00       	callq  27a9c <__MARSH_WRAP__e1000_set_spd_dplx+0x233>
			27a98: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27a9c:	4c 89 e9             	mov    %r13,%rcx
   27a9f:	4c 89 f2             	mov    %r14,%rdx
   27aa2:	4c 89 e6             	mov    %r12,%rsi
   27aa5:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   27aab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27aae: R_X86_64_32S	.rodata.str1.1+0x31e8
   27ab2:	e8 00 00 00 00       	callq  27ab7 <__MARSH_WRAP__e1000_set_spd_dplx+0x24e>
			27ab3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27ab7:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   27abb:	4c 89 f2             	mov    %r14,%rdx
   27abe:	4c 89 e6             	mov    %r12,%rsi
   27ac1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   27ac7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27aca: R_X86_64_32S	.rodata.str1.1+0x31e8
   27ace:	e8 00 00 00 00       	callq  27ad3 <__MARSH_WRAP__e1000_set_spd_dplx+0x26a>
			27acf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   27ad3:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   27ad7:	49 89 07             	mov    %rax,(%r15)
   27ada:	8b 45 d0             	mov    0xffffffffffffffd0(%rbp),%eax
   27add:	41 89 47 08          	mov    %eax,0x8(%r15)
   27ae1:	48 83 c4 28          	add    $0x28,%rsp
   27ae5:	5b                   	pop    %rbx
   27ae6:	41 5c                	pop    %r12
   27ae8:	41 5d                	pop    %r13
   27aea:	41 5e                	pop    %r14
   27aec:	41 5f                	pop    %r15
   27aee:	c9                   	leaveq 
   27aef:	c3                   	retq   

0000000000027af0 <e1000_down>:
   27af0:	55                   	push   %rbp
   27af1:	48 89 e5             	mov    %rsp,%rbp
   27af4:	41 54                	push   %r12
   27af6:	49 89 fc             	mov    %rdi,%r12
   27af9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27afc: R_X86_64_32S	.rodata.str1.1+0x321c
   27b00:	53                   	push   %rbx
   27b01:	e8 00 00 00 00       	callq  27b06 <e1000_down+0x16>
			27b02: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27b06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27b09: R_X86_64_32S	str_415417957
   27b0d:	e8 00 00 00 00       	callq  27b12 <e1000_down+0x22>
			27b0e: R_X86_64_PC32	logStackFrame+0xfffffffffffffffc
   27b12:	49 8d bc 24 f0 02 00 	lea    0x2f0(%r12),%rdi
   27b19:	00 
   27b1a:	b9 69 40 00 00       	mov    $0x4069,%ecx
   27b1f:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27b22: R_X86_64_32S	str_158302356
   27b26:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27b29: R_X86_64_32S	str_618091532
   27b2d:	e8 00 00 00 00       	callq  27b32 <e1000_down+0x42>
			27b2e: R_X86_64_PC32	logRead+0xfffffffffffffffc
   27b32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27b35: R_X86_64_32S	.rodata.str1.1+0x2ac7
   27b39:	49 8b 9c 24 f0 02 00 	mov    0x2f0(%r12),%rbx
   27b40:	00 
   27b41:	e8 00 00 00 00       	callq  27b46 <e1000_down+0x56>
			27b42: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27b46:	f0 41 0f ba ac 24 c8 	lock btsl $0x2,0x7c8(%r12)
   27b4d:	07 00 00 02 
   27b51:	4c 89 e7             	mov    %r12,%rdi
   27b54:	e8 61 0e fe ff       	callq  89ba <e1000_irq_disable>
   27b59:	4c 89 e7             	mov    %r12,%rdi
   27b5c:	e8 7a 0b fe ff       	callq  86db <del_timer_sync>
   27b61:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
   27b66:	e8 70 0b fe ff       	callq  86db <del_timer_sync>
   27b6b:	49 8d 7c 24 60       	lea    0x60(%r12),%rdi
   27b70:	e8 66 0b fe ff       	callq  86db <del_timer_sync>
   27b75:	48 8d bb 10 03 00 00 	lea    0x310(%rbx),%rdi
   27b7c:	b9 75 40 00 00       	mov    $0x4075,%ecx
   27b81:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27b84: R_X86_64_32S	str_158302356
   27b88:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27b8b: R_X86_64_32S	str_603321121
   27b8f:	e8 00 00 00 00       	callq  27b94 <e1000_down+0xa4>
			27b90: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   27b94:	49 8d bc 24 c0 01 00 	lea    0x1c0(%r12),%rdi
   27b9b:	00 
   27b9c:	b9 75 40 00 00       	mov    $0x4075,%ecx
   27ba1:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27ba4: R_X86_64_32S	str_158302356
   27ba8:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27bab: R_X86_64_32S	str_640311072
   27baf:	e8 00 00 00 00       	callq  27bb4 <e1000_down+0xc4>
			27bb0: R_X86_64_PC32	logRead+0xfffffffffffffffc
   27bb4:	49 8b 84 24 c0 01 00 	mov    0x1c0(%r12),%rax
   27bbb:	00 
   27bbc:	49 8d bc 24 b0 00 00 	lea    0xb0(%r12),%rdi
   27bc3:	00 
   27bc4:	b9 77 40 00 00       	mov    $0x4077,%ecx
   27bc9:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27bcc: R_X86_64_32S	str_158302356
   27bd0:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27bd3: R_X86_64_32S	str_894705842
   27bd7:	48 89 83 10 03 00 00 	mov    %rax,0x310(%rbx)
   27bde:	e8 00 00 00 00       	callq  27be3 <e1000_down+0xf3>
			27bdf: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   27be3:	49 8d bc 24 b2 00 00 	lea    0xb2(%r12),%rdi
   27bea:	00 
   27beb:	b9 79 40 00 00       	mov    $0x4079,%ecx
   27bf0:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			27bf3: R_X86_64_32S	str_158302356
   27bf7:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			27bfa: R_X86_64_32S	str_856871873
   27bfe:	66 41 c7 84 24 b0 00 	movw   $0x0,0xb0(%r12)
   27c05:	00 00 00 00 
   27c09:	e8 00 00 00 00       	callq  27c0e <e1000_down+0x11e>
			27c0a: R_X86_64_PC32	logWrite+0xfffffffffffffffc
   27c0e:	48 89 df             	mov    %rbx,%rdi
   27c11:	66 41 c7 84 24 b2 00 	movw   $0x0,0xb2(%r12)
   27c18:	00 00 00 00 
   27c1c:	e8 fa e6 fe ff       	callq  1631b <netif_carrier_off>
   27c21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27c24: R_X86_64_32S	.rodata.str1.1+0x2ba1
   27c28:	e8 00 00 00 00       	callq  27c2d <e1000_down+0x13d>
			27c29: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27c2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27c30: R_X86_64_32S	.rodata.str1.1+0x2bb2
   27c34:	e8 00 00 00 00       	callq  27c39 <e1000_down+0x149>
			27c35: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27c39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27c3c: R_X86_64_32S	.rodata.str1.1+0x2bc6
   27c40:	48 8b 9b 00 03 00 00 	mov    0x300(%rbx),%rbx
   27c47:	e8 00 00 00 00       	callq  27c4c <e1000_down+0x15c>
			27c48: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27c4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27c4f: R_X86_64_32S	.rodata.str1.1+0x2ac7
   27c53:	e8 00 00 00 00       	callq  27c58 <e1000_down+0x168>
			27c54: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27c58:	f0 0f ba 6b 10 00    	lock btsl $0x0,0x10(%rbx)
   27c5e:	4c 89 e7             	mov    %r12,%rdi
   27c61:	31 db                	xor    %ebx,%ebx
   27c63:	e8 0e 98 ff ff       	callq  21476 <e1000_reset>
   27c68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27c6b: R_X86_64_32S	.rodata.str1.1+0x3227
   27c6f:	e8 00 00 00 00       	callq  27c74 <e1000_down+0x184>
			27c70: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27c74:	41 3b 9c 24 b0 02 00 	cmp    0x2b0(%r12),%ebx
   27c7b:	00 
   27c7c:	7d 1b                	jge    27c99 <e1000_down+0x1a9>
   27c7e:	48 63 f3             	movslq %ebx,%rsi
   27c81:	4c 89 e7             	mov    %r12,%rdi
   27c84:	ff c3                	inc    %ebx
   27c86:	48 6b f6 60          	imul   $0x60,%rsi,%rsi
   27c8a:	49 03 b4 24 b0 01 00 	add    0x1b0(%r12),%rsi
   27c91:	00 
   27c92:	e8 4b e6 ff ff       	callq  262e2 <e1000_clean_tx_ring>
   27c97:	eb db                	jmp    27c74 <e1000_down+0x184>
   27c99:	4c 89 e7             	mov    %r12,%rdi
   27c9c:	e8 14 bc ff ff       	callq  238b5 <e1000_clean_all_rx_rings>
   27ca1:	5b                   	pop    %rbx
   27ca2:	41 5c                	pop    %r12
   27ca4:	c9                   	leaveq 
   27ca5:	c3                   	retq   

0000000000027ca6 <__MARSH_WRAP__e1000_down>:
   27ca6:	55                   	push   %rbp
   27ca7:	48 89 e5             	mov    %rsp,%rbp
   27caa:	41 57                	push   %r15
   27cac:	41 56                	push   %r14
   27cae:	4c 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%r14
   27cb2:	41 55                	push   %r13
   27cb4:	41 54                	push   %r12
   27cb6:	53                   	push   %rbx
   27cb7:	48 83 ec 68          	sub    $0x68,%rsp
   27cbb:	48 89 7d b0          	mov    %rdi,0xffffffffffffffb0(%rbp)
   27cbf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27cc2: R_X86_64_32S	.rodata.str1.1+0x3240
   27cc6:	48 89 75 98          	mov    %rsi,0xffffffffffffff98(%rbp)
   27cca:	e8 00 00 00 00       	callq  27ccf <__MARSH_WRAP__e1000_down+0x29>
			27ccb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   27ccf:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27cd3:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   27cd7:	41 b8 e0 07 00 00    	mov    $0x7e0,%r8d
   27cdd:	4c 89 f2             	mov    %r14,%rdx
   27ce0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27ce3: R_X86_64_32S	.rodata.str1.1+0x321c
   27ce7:	c7 45 d4 00 00 00 00 	movl   $0x0,0xffffffffffffffd4(%rbp)
   27cee:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   27cf5:	00 
   27cf6:	e8 00 00 00 00       	callq  27cfb <__MARSH_WRAP__e1000_down+0x55>
			27cf7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   27cfb:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   27cff:	48 85 c0             	test   %rax,%rax
   27d02:	0f 84 ad 5f 00 00    	je     2dcb5 <__MARSH_WRAP__e1000_down+0x600f>
   27d08:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27d0c:	4c 8d 80 20 01 00 00 	lea    0x120(%rax),%r8
   27d13:	b9 04 00 00 00       	mov    $0x4,%ecx
   27d18:	4c 89 f2             	mov    %r14,%rdx
   27d1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27d1e: R_X86_64_32S	.rodata.str1.1+0x321c
   27d22:	e8 00 00 00 00       	callq  27d27 <__MARSH_WRAP__e1000_down+0x81>
			27d23: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27d27:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27d2b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27d2f:	b9 04 00 00 00       	mov    $0x4,%ecx
   27d34:	4c 89 f2             	mov    %r14,%rdx
   27d37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27d3a: R_X86_64_32S	.rodata.str1.1+0x321c
   27d3e:	49 81 c0 9c 00 00 00 	add    $0x9c,%r8
   27d45:	e8 00 00 00 00       	callq  27d4a <__MARSH_WRAP__e1000_down+0xa4>
			27d46: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27d4a:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27d4e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27d52:	b9 04 00 00 00       	mov    $0x4,%ecx
   27d57:	4c 89 f2             	mov    %r14,%rdx
   27d5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27d5d: R_X86_64_32S	.rodata.str1.1+0x321c
   27d61:	49 81 c0 a4 00 00 00 	add    $0xa4,%r8
   27d68:	e8 00 00 00 00       	callq  27d6d <__MARSH_WRAP__e1000_down+0xc7>
			27d69: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27d6d:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27d71:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27d75:	b9 04 00 00 00       	mov    $0x4,%ecx
   27d7a:	4c 89 f2             	mov    %r14,%rdx
   27d7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27d80: R_X86_64_32S	.rodata.str1.1+0x321c
   27d84:	49 81 c0 f4 01 00 00 	add    $0x1f4,%r8
   27d8b:	e8 00 00 00 00       	callq  27d90 <__MARSH_WRAP__e1000_down+0xea>
			27d8c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27d90:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   27d94:	ba 02 00 00 00       	mov    $0x2,%edx
   27d99:	be b0 00 00 00       	mov    $0xb0,%esi
   27d9e:	e8 00 00 00 00       	callq  27da3 <__MARSH_WRAP__e1000_down+0xfd>
			27d9f: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   27da3:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27da7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27dab:	b9 02 00 00 00       	mov    $0x2,%ecx
   27db0:	4c 89 f2             	mov    %r14,%rdx
   27db3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27db6: R_X86_64_32S	.rodata.str1.1+0x321c
   27dba:	49 81 c0 b0 00 00 00 	add    $0xb0,%r8
   27dc1:	e8 00 00 00 00       	callq  27dc6 <__MARSH_WRAP__e1000_down+0x120>
			27dc2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27dc6:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27dca:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27dce:	b9 04 00 00 00       	mov    $0x4,%ecx
   27dd3:	4c 89 f2             	mov    %r14,%rdx
   27dd6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27dd9: R_X86_64_32S	.rodata.str1.1+0x321c
   27ddd:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   27de4:	e8 00 00 00 00       	callq  27de9 <__MARSH_WRAP__e1000_down+0x143>
			27de5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27de9:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27ded:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27df1:	b9 04 00 00 00       	mov    $0x4,%ecx
   27df6:	4c 89 f2             	mov    %r14,%rdx
   27df9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27dfc: R_X86_64_32S	.rodata.str1.1+0x321c
   27e00:	49 81 c0 28 07 00 00 	add    $0x728,%r8
   27e07:	e8 00 00 00 00       	callq  27e0c <__MARSH_WRAP__e1000_down+0x166>
			27e08: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27e0c:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27e10:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27e14:	b9 01 00 00 00       	mov    $0x1,%ecx
   27e19:	4c 89 f2             	mov    %r14,%rdx
   27e1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27e1f: R_X86_64_32S	.rodata.str1.1+0x321c
   27e23:	49 81 c0 c5 07 00 00 	add    $0x7c5,%r8
   27e2a:	e8 00 00 00 00       	callq  27e2f <__MARSH_WRAP__e1000_down+0x189>
			27e2b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27e2f:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27e33:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27e37:	b9 04 00 00 00       	mov    $0x4,%ecx
   27e3c:	4c 89 f2             	mov    %r14,%rdx
   27e3f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27e42: R_X86_64_32S	.rodata.str1.1+0x321c
   27e46:	49 81 c0 24 07 00 00 	add    $0x724,%r8
   27e4d:	e8 00 00 00 00       	callq  27e52 <__MARSH_WRAP__e1000_down+0x1ac>
			27e4e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27e52:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27e56:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27e5a:	b9 04 00 00 00       	mov    $0x4,%ecx
   27e5f:	4c 89 f2             	mov    %r14,%rdx
   27e62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27e65: R_X86_64_32S	.rodata.str1.1+0x321c
   27e69:	49 81 c0 20 07 00 00 	add    $0x720,%r8
   27e70:	e8 00 00 00 00       	callq  27e75 <__MARSH_WRAP__e1000_down+0x1cf>
			27e71: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27e75:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27e79:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27e7d:	b9 04 00 00 00       	mov    $0x4,%ecx
   27e82:	4c 89 f2             	mov    %r14,%rdx
   27e85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27e88: R_X86_64_32S	.rodata.str1.1+0x321c
   27e8c:	49 81 c0 2c 01 00 00 	add    $0x12c,%r8
   27e93:	e8 00 00 00 00       	callq  27e98 <__MARSH_WRAP__e1000_down+0x1f2>
			27e94: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27e98:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   27e9c:	ba 30 00 00 00       	mov    $0x30,%edx
   27ea1:	be e8 00 00 00       	mov    $0xe8,%esi
   27ea6:	e8 00 00 00 00       	callq  27eab <__MARSH_WRAP__e1000_down+0x205>
			27ea7: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   27eab:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27eaf:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27eb3:	b9 04 00 00 00       	mov    $0x4,%ecx
   27eb8:	4c 89 f2             	mov    %r14,%rdx
   27ebb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27ebe: R_X86_64_32S	.rodata.str1.1+0x321c
   27ec2:	49 81 c0 c8 01 00 00 	add    $0x1c8,%r8
   27ec9:	e8 00 00 00 00       	callq  27ece <__MARSH_WRAP__e1000_down+0x228>
			27eca: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27ece:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27ed2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27ed6:	b9 01 00 00 00       	mov    $0x1,%ecx
   27edb:	4c 89 f2             	mov    %r14,%rdx
   27ede:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27ee1: R_X86_64_32S	.rodata.str1.1+0x321c
   27ee5:	49 81 c0 c4 07 00 00 	add    $0x7c4,%r8
   27eec:	e8 00 00 00 00       	callq  27ef1 <__MARSH_WRAP__e1000_down+0x24b>
			27eed: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27ef1:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27ef5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27ef9:	b9 04 00 00 00       	mov    $0x4,%ecx
   27efe:	4c 89 f2             	mov    %r14,%rdx
   27f01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27f04: R_X86_64_32S	.rodata.str1.1+0x321c
   27f08:	49 81 c0 b4 02 00 00 	add    $0x2b4,%r8
   27f0f:	e8 00 00 00 00       	callq  27f14 <__MARSH_WRAP__e1000_down+0x26e>
			27f10: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27f14:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27f18:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27f1c:	b9 04 00 00 00       	mov    $0x4,%ecx
   27f21:	4c 89 f2             	mov    %r14,%rdx
   27f24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27f27: R_X86_64_32S	.rodata.str1.1+0x321c
   27f2b:	49 81 c0 d8 07 00 00 	add    $0x7d8,%r8
   27f32:	e8 00 00 00 00       	callq  27f37 <__MARSH_WRAP__e1000_down+0x291>
			27f33: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27f37:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27f3b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27f3f:	b9 04 00 00 00       	mov    $0x4,%ecx
   27f44:	4c 89 f2             	mov    %r14,%rdx
   27f47:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27f4a: R_X86_64_32S	.rodata.str1.1+0x321c
   27f4e:	49 81 c0 1c 01 00 00 	add    $0x11c,%r8
   27f55:	e8 00 00 00 00       	callq  27f5a <__MARSH_WRAP__e1000_down+0x2b4>
			27f56: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27f5a:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27f5e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27f62:	b9 01 00 00 00       	mov    $0x1,%ecx
   27f67:	4c 89 f2             	mov    %r14,%rdx
   27f6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27f6d: R_X86_64_32S	.rodata.str1.1+0x321c
   27f71:	49 81 c0 c7 07 00 00 	add    $0x7c7,%r8
   27f78:	e8 00 00 00 00       	callq  27f7d <__MARSH_WRAP__e1000_down+0x2d7>
			27f79: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27f7d:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27f81:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27f85:	b9 08 00 00 00       	mov    $0x8,%ecx
   27f8a:	4c 89 f2             	mov    %r14,%rdx
   27f8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27f90: R_X86_64_32S	.rodata.str1.1+0x321c
   27f94:	49 81 c0 e8 01 00 00 	add    $0x1e8,%r8
   27f9b:	e8 00 00 00 00       	callq  27fa0 <__MARSH_WRAP__e1000_down+0x2fa>
			27f9c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27fa0:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27fa4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27fa8:	b9 04 00 00 00       	mov    $0x4,%ecx
   27fad:	4c 89 f2             	mov    %r14,%rdx
   27fb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27fb3: R_X86_64_32S	.rodata.str1.1+0x321c
   27fb7:	49 81 c0 b8 01 00 00 	add    $0x1b8,%r8
   27fbe:	e8 00 00 00 00       	callq  27fc3 <__MARSH_WRAP__e1000_down+0x31d>
			27fbf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27fc3:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   27fc7:	ba 08 00 00 00       	mov    $0x8,%edx
   27fcc:	be c8 07 00 00       	mov    $0x7c8,%esi
   27fd1:	e8 00 00 00 00       	callq  27fd6 <__MARSH_WRAP__e1000_down+0x330>
			27fd2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   27fd6:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   27fda:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   27fde:	b9 08 00 00 00       	mov    $0x8,%ecx
   27fe3:	4c 89 f2             	mov    %r14,%rdx
   27fe6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27fe9: R_X86_64_32S	.rodata.str1.1+0x321c
   27fed:	49 81 c0 c8 07 00 00 	add    $0x7c8,%r8
   27ff4:	e8 00 00 00 00       	callq  27ff9 <__MARSH_WRAP__e1000_down+0x353>
			27ff5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   27ff9:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   27ffd:	ba 08 00 00 00       	mov    $0x8,%edx
   28002:	be a8 01 00 00       	mov    $0x1a8,%esi
   28007:	e8 00 00 00 00       	callq  2800c <__MARSH_WRAP__e1000_down+0x366>
			28008: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2800c:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   28010:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28014:	b9 08 00 00 00       	mov    $0x8,%ecx
   28019:	4c 89 f2             	mov    %r14,%rdx
   2801c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2801f: R_X86_64_32S	.rodata.str1.1+0x321c
   28023:	49 81 c0 a8 01 00 00 	add    $0x1a8,%r8
   2802a:	e8 00 00 00 00       	callq  2802f <__MARSH_WRAP__e1000_down+0x389>
			2802b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2802f:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   28033:	ba 28 02 00 00       	mov    $0x228,%edx
   28038:	be d8 04 00 00       	mov    $0x4d8,%esi
   2803d:	e8 00 00 00 00       	callq  28042 <__MARSH_WRAP__e1000_down+0x39c>
			2803e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   28042:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   28046:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2804a:	b9 08 00 00 00       	mov    $0x8,%ecx
   2804f:	4c 89 f2             	mov    %r14,%rdx
   28052:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28055: R_X86_64_32S	.rodata.str1.1+0x321c
   28059:	48 81 c3 d8 04 00 00 	add    $0x4d8,%rbx
   28060:	4c 8d 43 40          	lea    0x40(%rbx),%r8
   28064:	e8 00 00 00 00       	callq  28069 <__MARSH_WRAP__e1000_down+0x3c3>
			28065: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28069:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2806d:	4c 8d 83 a0 01 00 00 	lea    0x1a0(%rbx),%r8
   28074:	b9 08 00 00 00       	mov    $0x8,%ecx
   28079:	4c 89 f2             	mov    %r14,%rdx
   2807c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2807f: R_X86_64_32S	.rodata.str1.1+0x321c
   28083:	e8 00 00 00 00       	callq  28088 <__MARSH_WRAP__e1000_down+0x3e2>
			28084: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28088:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2808c:	4c 8d 83 18 02 00 00 	lea    0x218(%rbx),%r8
   28093:	b9 08 00 00 00       	mov    $0x8,%ecx
   28098:	4c 89 f2             	mov    %r14,%rdx
   2809b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2809e: R_X86_64_32S	.rodata.str1.1+0x321c
   280a2:	e8 00 00 00 00       	callq  280a7 <__MARSH_WRAP__e1000_down+0x401>
			280a3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   280a7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   280ab:	4c 8d 83 f0 00 00 00 	lea    0xf0(%rbx),%r8
   280b2:	b9 08 00 00 00       	mov    $0x8,%ecx
   280b7:	4c 89 f2             	mov    %r14,%rdx
   280ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			280bd: R_X86_64_32S	.rodata.str1.1+0x321c
   280c1:	e8 00 00 00 00       	callq  280c6 <__MARSH_WRAP__e1000_down+0x420>
			280c2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   280c6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   280ca:	4c 8d 83 08 02 00 00 	lea    0x208(%rbx),%r8
   280d1:	b9 08 00 00 00       	mov    $0x8,%ecx
   280d6:	4c 89 f2             	mov    %r14,%rdx
   280d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			280dc: R_X86_64_32S	.rodata.str1.1+0x321c
   280e0:	e8 00 00 00 00       	callq  280e5 <__MARSH_WRAP__e1000_down+0x43f>
			280e1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   280e5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   280e9:	4c 8d 83 50 01 00 00 	lea    0x150(%rbx),%r8
   280f0:	b9 08 00 00 00       	mov    $0x8,%ecx
   280f5:	4c 89 f2             	mov    %r14,%rdx
   280f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			280fb: R_X86_64_32S	.rodata.str1.1+0x321c
   280ff:	e8 00 00 00 00       	callq  28104 <__MARSH_WRAP__e1000_down+0x45e>
			28100: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28104:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28108:	4c 8d 83 a0 00 00 00 	lea    0xa0(%rbx),%r8
   2810f:	b9 08 00 00 00       	mov    $0x8,%ecx
   28114:	4c 89 f2             	mov    %r14,%rdx
   28117:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2811a: R_X86_64_32S	.rodata.str1.1+0x321c
   2811e:	e8 00 00 00 00       	callq  28123 <__MARSH_WRAP__e1000_down+0x47d>
			2811f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28123:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28127:	4c 8d 43 68          	lea    0x68(%rbx),%r8
   2812b:	b9 08 00 00 00       	mov    $0x8,%ecx
   28130:	4c 89 f2             	mov    %r14,%rdx
   28133:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28136: R_X86_64_32S	.rodata.str1.1+0x321c
   2813a:	e8 00 00 00 00       	callq  2813f <__MARSH_WRAP__e1000_down+0x499>
			2813b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2813f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28143:	4c 8d 83 f8 00 00 00 	lea    0xf8(%rbx),%r8
   2814a:	b9 08 00 00 00       	mov    $0x8,%ecx
   2814f:	4c 89 f2             	mov    %r14,%rdx
   28152:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28155: R_X86_64_32S	.rodata.str1.1+0x321c
   28159:	e8 00 00 00 00       	callq  2815e <__MARSH_WRAP__e1000_down+0x4b8>
			2815a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2815e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28162:	4c 8d 83 60 01 00 00 	lea    0x160(%rbx),%r8
   28169:	b9 08 00 00 00       	mov    $0x8,%ecx
   2816e:	4c 89 f2             	mov    %r14,%rdx
   28171:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28174: R_X86_64_32S	.rodata.str1.1+0x321c
   28178:	e8 00 00 00 00       	callq  2817d <__MARSH_WRAP__e1000_down+0x4d7>
			28179: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2817d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28181:	4c 8d 83 e8 01 00 00 	lea    0x1e8(%rbx),%r8
   28188:	b9 08 00 00 00       	mov    $0x8,%ecx
   2818d:	4c 89 f2             	mov    %r14,%rdx
   28190:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28193: R_X86_64_32S	.rodata.str1.1+0x321c
   28197:	e8 00 00 00 00       	callq  2819c <__MARSH_WRAP__e1000_down+0x4f6>
			28198: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2819c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   281a0:	4c 8d 43 08          	lea    0x8(%rbx),%r8
   281a4:	b9 08 00 00 00       	mov    $0x8,%ecx
   281a9:	4c 89 f2             	mov    %r14,%rdx
   281ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			281af: R_X86_64_32S	.rodata.str1.1+0x321c
   281b3:	e8 00 00 00 00       	callq  281b8 <__MARSH_WRAP__e1000_down+0x512>
			281b4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   281b8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   281bc:	4c 8d 83 00 01 00 00 	lea    0x100(%rbx),%r8
   281c3:	b9 08 00 00 00       	mov    $0x8,%ecx
   281c8:	4c 89 f2             	mov    %r14,%rdx
   281cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			281ce: R_X86_64_32S	.rodata.str1.1+0x321c
   281d2:	e8 00 00 00 00       	callq  281d7 <__MARSH_WRAP__e1000_down+0x531>
			281d3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   281d7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   281db:	4c 8d 83 e8 00 00 00 	lea    0xe8(%rbx),%r8
   281e2:	b9 08 00 00 00       	mov    $0x8,%ecx
   281e7:	4c 89 f2             	mov    %r14,%rdx
   281ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			281ed: R_X86_64_32S	.rodata.str1.1+0x321c
   281f1:	e8 00 00 00 00       	callq  281f6 <__MARSH_WRAP__e1000_down+0x550>
			281f2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   281f6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   281fa:	4c 8d 83 c0 00 00 00 	lea    0xc0(%rbx),%r8
   28201:	b9 08 00 00 00       	mov    $0x8,%ecx
   28206:	4c 89 f2             	mov    %r14,%rdx
   28209:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2820c: R_X86_64_32S	.rodata.str1.1+0x321c
   28210:	e8 00 00 00 00       	callq  28215 <__MARSH_WRAP__e1000_down+0x56f>
			28211: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28215:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28219:	4c 8d 83 68 01 00 00 	lea    0x168(%rbx),%r8
   28220:	b9 08 00 00 00       	mov    $0x8,%ecx
   28225:	4c 89 f2             	mov    %r14,%rdx
   28228:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2822b: R_X86_64_32S	.rodata.str1.1+0x321c
   2822f:	e8 00 00 00 00       	callq  28234 <__MARSH_WRAP__e1000_down+0x58e>
			28230: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28234:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28238:	4c 8d 83 d8 01 00 00 	lea    0x1d8(%rbx),%r8
   2823f:	b9 08 00 00 00       	mov    $0x8,%ecx
   28244:	4c 89 f2             	mov    %r14,%rdx
   28247:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2824a: R_X86_64_32S	.rodata.str1.1+0x321c
   2824e:	e8 00 00 00 00       	callq  28253 <__MARSH_WRAP__e1000_down+0x5ad>
			2824f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28253:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28257:	4c 8d 83 38 01 00 00 	lea    0x138(%rbx),%r8
   2825e:	b9 08 00 00 00       	mov    $0x8,%ecx
   28263:	4c 89 f2             	mov    %r14,%rdx
   28266:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28269: R_X86_64_32S	.rodata.str1.1+0x321c
   2826d:	e8 00 00 00 00       	callq  28272 <__MARSH_WRAP__e1000_down+0x5cc>
			2826e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28272:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28276:	4c 8d 43 58          	lea    0x58(%rbx),%r8
   2827a:	b9 08 00 00 00       	mov    $0x8,%ecx
   2827f:	4c 89 f2             	mov    %r14,%rdx
   28282:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28285: R_X86_64_32S	.rodata.str1.1+0x321c
   28289:	e8 00 00 00 00       	callq  2828e <__MARSH_WRAP__e1000_down+0x5e8>
			2828a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2828e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28292:	4c 8d 83 20 01 00 00 	lea    0x120(%rbx),%r8
   28299:	b9 08 00 00 00       	mov    $0x8,%ecx
   2829e:	4c 89 f2             	mov    %r14,%rdx
   282a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			282a4: R_X86_64_32S	.rodata.str1.1+0x321c
   282a8:	e8 00 00 00 00       	callq  282ad <__MARSH_WRAP__e1000_down+0x607>
			282a9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   282ad:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   282b1:	4c 8d 83 70 01 00 00 	lea    0x170(%rbx),%r8
   282b8:	b9 08 00 00 00       	mov    $0x8,%ecx
   282bd:	4c 89 f2             	mov    %r14,%rdx
   282c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			282c3: R_X86_64_32S	.rodata.str1.1+0x321c
   282c7:	e8 00 00 00 00       	callq  282cc <__MARSH_WRAP__e1000_down+0x626>
			282c8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   282cc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   282d0:	4c 8d 83 80 00 00 00 	lea    0x80(%rbx),%r8
   282d7:	b9 08 00 00 00       	mov    $0x8,%ecx
   282dc:	4c 89 f2             	mov    %r14,%rdx
   282df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			282e2: R_X86_64_32S	.rodata.str1.1+0x321c
   282e6:	e8 00 00 00 00       	callq  282eb <__MARSH_WRAP__e1000_down+0x645>
			282e7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   282eb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   282ef:	4c 8d 83 18 01 00 00 	lea    0x118(%rbx),%r8
   282f6:	b9 08 00 00 00       	mov    $0x8,%ecx
   282fb:	4c 89 f2             	mov    %r14,%rdx
   282fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28301: R_X86_64_32S	.rodata.str1.1+0x321c
   28305:	e8 00 00 00 00       	callq  2830a <__MARSH_WRAP__e1000_down+0x664>
			28306: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2830a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2830e:	4c 8d 83 28 01 00 00 	lea    0x128(%rbx),%r8
   28315:	b9 08 00 00 00       	mov    $0x8,%ecx
   2831a:	4c 89 f2             	mov    %r14,%rdx
   2831d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28320: R_X86_64_32S	.rodata.str1.1+0x321c
   28324:	e8 00 00 00 00       	callq  28329 <__MARSH_WRAP__e1000_down+0x683>
			28325: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28329:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2832d:	4c 8d 83 48 01 00 00 	lea    0x148(%rbx),%r8
   28334:	b9 08 00 00 00       	mov    $0x8,%ecx
   28339:	4c 89 f2             	mov    %r14,%rdx
   2833c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2833f: R_X86_64_32S	.rodata.str1.1+0x321c
   28343:	e8 00 00 00 00       	callq  28348 <__MARSH_WRAP__e1000_down+0x6a2>
			28344: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28348:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2834c:	4c 8d 83 c0 01 00 00 	lea    0x1c0(%rbx),%r8
   28353:	b9 08 00 00 00       	mov    $0x8,%ecx
   28358:	4c 89 f2             	mov    %r14,%rdx
   2835b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2835e: R_X86_64_32S	.rodata.str1.1+0x321c
   28362:	e8 00 00 00 00       	callq  28367 <__MARSH_WRAP__e1000_down+0x6c1>
			28363: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28367:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2836b:	4c 8d 83 d0 00 00 00 	lea    0xd0(%rbx),%r8
   28372:	b9 08 00 00 00       	mov    $0x8,%ecx
   28377:	4c 89 f2             	mov    %r14,%rdx
   2837a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2837d: R_X86_64_32S	.rodata.str1.1+0x321c
   28381:	e8 00 00 00 00       	callq  28386 <__MARSH_WRAP__e1000_down+0x6e0>
			28382: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28386:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2838a:	4c 8d 83 b0 00 00 00 	lea    0xb0(%rbx),%r8
   28391:	b9 08 00 00 00       	mov    $0x8,%ecx
   28396:	4c 89 f2             	mov    %r14,%rdx
   28399:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2839c: R_X86_64_32S	.rodata.str1.1+0x321c
   283a0:	e8 00 00 00 00       	callq  283a5 <__MARSH_WRAP__e1000_down+0x6ff>
			283a1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   283a5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   283a9:	4c 8d 83 f0 01 00 00 	lea    0x1f0(%rbx),%r8
   283b0:	b9 08 00 00 00       	mov    $0x8,%ecx
   283b5:	4c 89 f2             	mov    %r14,%rdx
   283b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			283bb: R_X86_64_32S	.rodata.str1.1+0x321c
   283bf:	e8 00 00 00 00       	callq  283c4 <__MARSH_WRAP__e1000_down+0x71e>
			283c0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   283c4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   283c8:	4c 8d 83 78 01 00 00 	lea    0x178(%rbx),%r8
   283cf:	b9 08 00 00 00       	mov    $0x8,%ecx
   283d4:	4c 89 f2             	mov    %r14,%rdx
   283d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			283da: R_X86_64_32S	.rodata.str1.1+0x321c
   283de:	e8 00 00 00 00       	callq  283e3 <__MARSH_WRAP__e1000_down+0x73d>
			283df: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   283e3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   283e7:	4c 8d 43 48          	lea    0x48(%rbx),%r8
   283eb:	b9 08 00 00 00       	mov    $0x8,%ecx
   283f0:	4c 89 f2             	mov    %r14,%rdx
   283f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			283f6: R_X86_64_32S	.rodata.str1.1+0x321c
   283fa:	e8 00 00 00 00       	callq  283ff <__MARSH_WRAP__e1000_down+0x759>
			283fb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   283ff:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28403:	4c 8d 43 70          	lea    0x70(%rbx),%r8
   28407:	b9 08 00 00 00       	mov    $0x8,%ecx
   2840c:	4c 89 f2             	mov    %r14,%rdx
   2840f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28412: R_X86_64_32S	.rodata.str1.1+0x321c
   28416:	e8 00 00 00 00       	callq  2841b <__MARSH_WRAP__e1000_down+0x775>
			28417: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2841b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2841f:	4c 8d 83 b8 01 00 00 	lea    0x1b8(%rbx),%r8
   28426:	b9 08 00 00 00       	mov    $0x8,%ecx
   2842b:	4c 89 f2             	mov    %r14,%rdx
   2842e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28431: R_X86_64_32S	.rodata.str1.1+0x321c
   28435:	e8 00 00 00 00       	callq  2843a <__MARSH_WRAP__e1000_down+0x794>
			28436: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2843a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2843e:	4c 8d 83 e0 00 00 00 	lea    0xe0(%rbx),%r8
   28445:	b9 08 00 00 00       	mov    $0x8,%ecx
   2844a:	4c 89 f2             	mov    %r14,%rdx
   2844d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28450: R_X86_64_32S	.rodata.str1.1+0x321c
   28454:	e8 00 00 00 00       	callq  28459 <__MARSH_WRAP__e1000_down+0x7b3>
			28455: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28459:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2845d:	4c 8d 43 78          	lea    0x78(%rbx),%r8
   28461:	b9 08 00 00 00       	mov    $0x8,%ecx
   28466:	4c 89 f2             	mov    %r14,%rdx
   28469:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2846c: R_X86_64_32S	.rodata.str1.1+0x321c
   28470:	e8 00 00 00 00       	callq  28475 <__MARSH_WRAP__e1000_down+0x7cf>
			28471: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28475:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28479:	4c 8d 83 e0 01 00 00 	lea    0x1e0(%rbx),%r8
   28480:	b9 08 00 00 00       	mov    $0x8,%ecx
   28485:	4c 89 f2             	mov    %r14,%rdx
   28488:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2848b: R_X86_64_32S	.rodata.str1.1+0x321c
   2848f:	e8 00 00 00 00       	callq  28494 <__MARSH_WRAP__e1000_down+0x7ee>
			28490: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28494:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28498:	4c 8d 83 98 00 00 00 	lea    0x98(%rbx),%r8
   2849f:	b9 08 00 00 00       	mov    $0x8,%ecx
   284a4:	4c 89 f2             	mov    %r14,%rdx
   284a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			284aa: R_X86_64_32S	.rodata.str1.1+0x321c
   284ae:	e8 00 00 00 00       	callq  284b3 <__MARSH_WRAP__e1000_down+0x80d>
			284af: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   284b3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   284b7:	4c 8d 83 b8 00 00 00 	lea    0xb8(%rbx),%r8
   284be:	b9 08 00 00 00       	mov    $0x8,%ecx
   284c3:	4c 89 f2             	mov    %r14,%rdx
   284c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			284c9: R_X86_64_32S	.rodata.str1.1+0x321c
   284cd:	e8 00 00 00 00       	callq  284d2 <__MARSH_WRAP__e1000_down+0x82c>
			284ce: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   284d2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   284d6:	4c 8d 43 38          	lea    0x38(%rbx),%r8
   284da:	b9 08 00 00 00       	mov    $0x8,%ecx
   284df:	4c 89 f2             	mov    %r14,%rdx
   284e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			284e5: R_X86_64_32S	.rodata.str1.1+0x321c
   284e9:	e8 00 00 00 00       	callq  284ee <__MARSH_WRAP__e1000_down+0x848>
			284ea: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   284ee:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   284f2:	4c 8d 83 58 01 00 00 	lea    0x158(%rbx),%r8
   284f9:	b9 08 00 00 00       	mov    $0x8,%ecx
   284fe:	4c 89 f2             	mov    %r14,%rdx
   28501:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28504: R_X86_64_32S	.rodata.str1.1+0x321c
   28508:	e8 00 00 00 00       	callq  2850d <__MARSH_WRAP__e1000_down+0x867>
			28509: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2850d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28511:	4c 8d 83 88 01 00 00 	lea    0x188(%rbx),%r8
   28518:	b9 08 00 00 00       	mov    $0x8,%ecx
   2851d:	4c 89 f2             	mov    %r14,%rdx
   28520:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28523: R_X86_64_32S	.rodata.str1.1+0x321c
   28527:	e8 00 00 00 00       	callq  2852c <__MARSH_WRAP__e1000_down+0x886>
			28528: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2852c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28530:	4c 8d 83 f8 01 00 00 	lea    0x1f8(%rbx),%r8
   28537:	b9 08 00 00 00       	mov    $0x8,%ecx
   2853c:	4c 89 f2             	mov    %r14,%rdx
   2853f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28542: R_X86_64_32S	.rodata.str1.1+0x321c
   28546:	e8 00 00 00 00       	callq  2854b <__MARSH_WRAP__e1000_down+0x8a5>
			28547: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2854b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2854f:	4c 8d 83 a8 01 00 00 	lea    0x1a8(%rbx),%r8
   28556:	b9 08 00 00 00       	mov    $0x8,%ecx
   2855b:	4c 89 f2             	mov    %r14,%rdx
   2855e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28561: R_X86_64_32S	.rodata.str1.1+0x321c
   28565:	e8 00 00 00 00       	callq  2856a <__MARSH_WRAP__e1000_down+0x8c4>
			28566: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2856a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2856e:	4c 8d 83 80 01 00 00 	lea    0x180(%rbx),%r8
   28575:	b9 08 00 00 00       	mov    $0x8,%ecx
   2857a:	4c 89 f2             	mov    %r14,%rdx
   2857d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28580: R_X86_64_32S	.rodata.str1.1+0x321c
   28584:	e8 00 00 00 00       	callq  28589 <__MARSH_WRAP__e1000_down+0x8e3>
			28585: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28589:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2858d:	4c 8d 43 50          	lea    0x50(%rbx),%r8
   28591:	b9 08 00 00 00       	mov    $0x8,%ecx
   28596:	4c 89 f2             	mov    %r14,%rdx
   28599:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2859c: R_X86_64_32S	.rodata.str1.1+0x321c
   285a0:	e8 00 00 00 00       	callq  285a5 <__MARSH_WRAP__e1000_down+0x8ff>
			285a1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   285a5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   285a9:	4c 8d 83 d0 01 00 00 	lea    0x1d0(%rbx),%r8
   285b0:	b9 08 00 00 00       	mov    $0x8,%ecx
   285b5:	4c 89 f2             	mov    %r14,%rdx
   285b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			285bb: R_X86_64_32S	.rodata.str1.1+0x321c
   285bf:	e8 00 00 00 00       	callq  285c4 <__MARSH_WRAP__e1000_down+0x91e>
			285c0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   285c4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   285c8:	49 89 d8             	mov    %rbx,%r8
   285cb:	b9 08 00 00 00       	mov    $0x8,%ecx
   285d0:	4c 89 f2             	mov    %r14,%rdx
   285d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			285d6: R_X86_64_32S	.rodata.str1.1+0x321c
   285da:	e8 00 00 00 00       	callq  285df <__MARSH_WRAP__e1000_down+0x939>
			285db: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   285df:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   285e3:	4c 8d 83 c8 01 00 00 	lea    0x1c8(%rbx),%r8
   285ea:	b9 08 00 00 00       	mov    $0x8,%ecx
   285ef:	4c 89 f2             	mov    %r14,%rdx
   285f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			285f5: R_X86_64_32S	.rodata.str1.1+0x321c
   285f9:	e8 00 00 00 00       	callq  285fe <__MARSH_WRAP__e1000_down+0x958>
			285fa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   285fe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28602:	4c 8d 43 28          	lea    0x28(%rbx),%r8
   28606:	b9 08 00 00 00       	mov    $0x8,%ecx
   2860b:	4c 89 f2             	mov    %r14,%rdx
   2860e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28611: R_X86_64_32S	.rodata.str1.1+0x321c
   28615:	e8 00 00 00 00       	callq  2861a <__MARSH_WRAP__e1000_down+0x974>
			28616: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2861a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2861e:	4c 8d 83 30 01 00 00 	lea    0x130(%rbx),%r8
   28625:	b9 08 00 00 00       	mov    $0x8,%ecx
   2862a:	4c 89 f2             	mov    %r14,%rdx
   2862d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28630: R_X86_64_32S	.rodata.str1.1+0x321c
   28634:	e8 00 00 00 00       	callq  28639 <__MARSH_WRAP__e1000_down+0x993>
			28635: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28639:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2863d:	4c 8d 83 08 01 00 00 	lea    0x108(%rbx),%r8
   28644:	b9 08 00 00 00       	mov    $0x8,%ecx
   28649:	4c 89 f2             	mov    %r14,%rdx
   2864c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2864f: R_X86_64_32S	.rodata.str1.1+0x321c
   28653:	e8 00 00 00 00       	callq  28658 <__MARSH_WRAP__e1000_down+0x9b2>
			28654: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28658:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2865c:	4c 8d 83 40 01 00 00 	lea    0x140(%rbx),%r8
   28663:	b9 08 00 00 00       	mov    $0x8,%ecx
   28668:	4c 89 f2             	mov    %r14,%rdx
   2866b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2866e: R_X86_64_32S	.rodata.str1.1+0x321c
   28672:	e8 00 00 00 00       	callq  28677 <__MARSH_WRAP__e1000_down+0x9d1>
			28673: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28677:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2867b:	4c 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%r8
   28682:	b9 08 00 00 00       	mov    $0x8,%ecx
   28687:	4c 89 f2             	mov    %r14,%rdx
   2868a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2868d: R_X86_64_32S	.rodata.str1.1+0x321c
   28691:	e8 00 00 00 00       	callq  28696 <__MARSH_WRAP__e1000_down+0x9f0>
			28692: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28696:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2869a:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   2869e:	b9 08 00 00 00       	mov    $0x8,%ecx
   286a3:	4c 89 f2             	mov    %r14,%rdx
   286a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			286a9: R_X86_64_32S	.rodata.str1.1+0x321c
   286ad:	e8 00 00 00 00       	callq  286b2 <__MARSH_WRAP__e1000_down+0xa0c>
			286ae: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   286b2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   286b6:	4c 8d 83 d8 00 00 00 	lea    0xd8(%rbx),%r8
   286bd:	b9 08 00 00 00       	mov    $0x8,%ecx
   286c2:	4c 89 f2             	mov    %r14,%rdx
   286c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			286c8: R_X86_64_32S	.rodata.str1.1+0x321c
   286cc:	e8 00 00 00 00       	callq  286d1 <__MARSH_WRAP__e1000_down+0xa2b>
			286cd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   286d1:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   286d5:	4c 8d 83 a8 00 00 00 	lea    0xa8(%rbx),%r8
   286dc:	b9 08 00 00 00       	mov    $0x8,%ecx
   286e1:	4c 89 f2             	mov    %r14,%rdx
   286e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			286e7: R_X86_64_32S	.rodata.str1.1+0x321c
   286eb:	e8 00 00 00 00       	callq  286f0 <__MARSH_WRAP__e1000_down+0xa4a>
			286ec: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   286f0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   286f4:	4c 8d 43 60          	lea    0x60(%rbx),%r8
   286f8:	b9 08 00 00 00       	mov    $0x8,%ecx
   286fd:	4c 89 f2             	mov    %r14,%rdx
   28700:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28703: R_X86_64_32S	.rodata.str1.1+0x321c
   28707:	e8 00 00 00 00       	callq  2870c <__MARSH_WRAP__e1000_down+0xa66>
			28708: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2870c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28710:	4c 8d 83 00 02 00 00 	lea    0x200(%rbx),%r8
   28717:	b9 08 00 00 00       	mov    $0x8,%ecx
   2871c:	4c 89 f2             	mov    %r14,%rdx
   2871f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28722: R_X86_64_32S	.rodata.str1.1+0x321c
   28726:	e8 00 00 00 00       	callq  2872b <__MARSH_WRAP__e1000_down+0xa85>
			28727: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2872b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2872f:	4c 8d 83 98 01 00 00 	lea    0x198(%rbx),%r8
   28736:	b9 08 00 00 00       	mov    $0x8,%ecx
   2873b:	4c 89 f2             	mov    %r14,%rdx
   2873e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28741: R_X86_64_32S	.rodata.str1.1+0x321c
   28745:	e8 00 00 00 00       	callq  2874a <__MARSH_WRAP__e1000_down+0xaa4>
			28746: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2874a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2874e:	4c 8d 83 10 01 00 00 	lea    0x110(%rbx),%r8
   28755:	b9 08 00 00 00       	mov    $0x8,%ecx
   2875a:	4c 89 f2             	mov    %r14,%rdx
   2875d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28760: R_X86_64_32S	.rodata.str1.1+0x321c
   28764:	e8 00 00 00 00       	callq  28769 <__MARSH_WRAP__e1000_down+0xac3>
			28765: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28769:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2876d:	4c 8d 43 18          	lea    0x18(%rbx),%r8
   28771:	b9 08 00 00 00       	mov    $0x8,%ecx
   28776:	4c 89 f2             	mov    %r14,%rdx
   28779:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2877c: R_X86_64_32S	.rodata.str1.1+0x321c
   28780:	e8 00 00 00 00       	callq  28785 <__MARSH_WRAP__e1000_down+0xadf>
			28781: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28785:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28789:	4c 8d 83 b0 01 00 00 	lea    0x1b0(%rbx),%r8
   28790:	b9 08 00 00 00       	mov    $0x8,%ecx
   28795:	4c 89 f2             	mov    %r14,%rdx
   28798:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2879b: R_X86_64_32S	.rodata.str1.1+0x321c
   2879f:	e8 00 00 00 00       	callq  287a4 <__MARSH_WRAP__e1000_down+0xafe>
			287a0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   287a4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   287a8:	4c 8d 83 90 00 00 00 	lea    0x90(%rbx),%r8
   287af:	b9 08 00 00 00       	mov    $0x8,%ecx
   287b4:	4c 89 f2             	mov    %r14,%rdx
   287b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			287ba: R_X86_64_32S	.rodata.str1.1+0x321c
   287be:	e8 00 00 00 00       	callq  287c3 <__MARSH_WRAP__e1000_down+0xb1d>
			287bf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   287c3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   287c7:	4c 8d 43 30          	lea    0x30(%rbx),%r8
   287cb:	b9 08 00 00 00       	mov    $0x8,%ecx
   287d0:	4c 89 f2             	mov    %r14,%rdx
   287d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			287d6: R_X86_64_32S	.rodata.str1.1+0x321c
   287da:	e8 00 00 00 00       	callq  287df <__MARSH_WRAP__e1000_down+0xb39>
			287db: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   287df:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   287e3:	4c 8d 83 10 02 00 00 	lea    0x210(%rbx),%r8
   287ea:	b9 08 00 00 00       	mov    $0x8,%ecx
   287ef:	4c 89 f2             	mov    %r14,%rdx
   287f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			287f5: R_X86_64_32S	.rodata.str1.1+0x321c
   287f9:	e8 00 00 00 00       	callq  287fe <__MARSH_WRAP__e1000_down+0xb58>
			287fa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   287fe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28802:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   28806:	b9 08 00 00 00       	mov    $0x8,%ecx
   2880b:	4c 89 f2             	mov    %r14,%rdx
   2880e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28811: R_X86_64_32S	.rodata.str1.1+0x321c
   28815:	e8 00 00 00 00       	callq  2881a <__MARSH_WRAP__e1000_down+0xb74>
			28816: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2881a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2881e:	4c 8d 83 20 02 00 00 	lea    0x220(%rbx),%r8
   28825:	b9 08 00 00 00       	mov    $0x8,%ecx
   2882a:	4c 89 f2             	mov    %r14,%rdx
   2882d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28830: R_X86_64_32S	.rodata.str1.1+0x321c
   28834:	e8 00 00 00 00       	callq  28839 <__MARSH_WRAP__e1000_down+0xb93>
			28835: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28839:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2883d:	4c 8d 83 90 01 00 00 	lea    0x190(%rbx),%r8
   28844:	b9 08 00 00 00       	mov    $0x8,%ecx
   28849:	4c 89 f2             	mov    %r14,%rdx
   2884c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2884f: R_X86_64_32S	.rodata.str1.1+0x321c
   28853:	e8 00 00 00 00       	callq  28858 <__MARSH_WRAP__e1000_down+0xbb2>
			28854: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28858:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2885c:	4c 8d 83 88 00 00 00 	lea    0x88(%rbx),%r8
   28863:	b9 08 00 00 00       	mov    $0x8,%ecx
   28868:	4c 89 f2             	mov    %r14,%rdx
   2886b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2886e: R_X86_64_32S	.rodata.str1.1+0x321c
   28872:	e8 00 00 00 00       	callq  28877 <__MARSH_WRAP__e1000_down+0xbd1>
			28873: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28877:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2887b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2887f:	b9 01 00 00 00       	mov    $0x1,%ecx
   28884:	4c 89 f2             	mov    %r14,%rdx
   28887:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2888a: R_X86_64_32S	.rodata.str1.1+0x321c
   2888e:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   28895:	e8 00 00 00 00       	callq  2889a <__MARSH_WRAP__e1000_down+0xbf4>
			28896: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2889a:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2889e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   288a2:	b9 04 00 00 00       	mov    $0x4,%ecx
   288a7:	4c 89 f2             	mov    %r14,%rdx
   288aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			288ad: R_X86_64_32S	.rodata.str1.1+0x321c
   288b1:	49 81 c0 24 01 00 00 	add    $0x124,%r8
   288b8:	e8 00 00 00 00       	callq  288bd <__MARSH_WRAP__e1000_down+0xc17>
			288b9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   288bd:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   288c1:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   288c5:	b9 02 00 00 00       	mov    $0x2,%ecx
   288ca:	4c 89 f2             	mov    %r14,%rdx
   288cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			288d0: R_X86_64_32S	.rodata.str1.1+0x321c
   288d4:	49 81 c0 98 00 00 00 	add    $0x98,%r8
   288db:	e8 00 00 00 00       	callq  288e0 <__MARSH_WRAP__e1000_down+0xc3a>
			288dc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   288e0:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   288e4:	ba 04 00 00 00       	mov    $0x4,%edx
   288e9:	be d4 02 00 00       	mov    $0x2d4,%esi
   288ee:	e8 00 00 00 00       	callq  288f3 <__MARSH_WRAP__e1000_down+0xc4d>
			288ef: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   288f3:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   288f7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   288fb:	b9 04 00 00 00       	mov    $0x4,%ecx
   28900:	4c 89 f2             	mov    %r14,%rdx
   28903:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28906: R_X86_64_32S	.rodata.str1.1+0x321c
   2890a:	49 81 c0 d4 02 00 00 	add    $0x2d4,%r8
   28911:	e8 00 00 00 00       	callq  28916 <__MARSH_WRAP__e1000_down+0xc70>
			28912: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28916:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2891a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2891e:	b9 04 00 00 00       	mov    $0x4,%ecx
   28923:	4c 89 f2             	mov    %r14,%rdx
   28926:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28929: R_X86_64_32S	.rodata.str1.1+0x321c
   2892d:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   28934:	e8 00 00 00 00       	callq  28939 <__MARSH_WRAP__e1000_down+0xc93>
			28935: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28939:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2893d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28941:	b9 04 00 00 00       	mov    $0x4,%ecx
   28946:	4c 89 f2             	mov    %r14,%rdx
   28949:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2894c: R_X86_64_32S	.rodata.str1.1+0x321c
   28950:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   28957:	e8 00 00 00 00       	callq  2895c <__MARSH_WRAP__e1000_down+0xcb6>
			28958: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2895c:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   28960:	ba 88 00 00 00       	mov    $0x88,%edx
   28965:	be 28 02 00 00       	mov    $0x228,%esi
   2896a:	e8 00 00 00 00       	callq  2896f <__MARSH_WRAP__e1000_down+0xcc9>
			2896b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2896f:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   28973:	ba 08 00 00 00       	mov    $0x8,%edx
   28978:	48 81 c7 28 02 00 00 	add    $0x228,%rdi
   2897f:	48 8d 5f 10          	lea    0x10(%rdi),%rbx
   28983:	89 de                	mov    %ebx,%esi
   28985:	29 fe                	sub    %edi,%esi
   28987:	e8 00 00 00 00       	callq  2898c <__MARSH_WRAP__e1000_down+0xce6>
			28988: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2898c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28990:	49 89 d8             	mov    %rbx,%r8
   28993:	b9 08 00 00 00       	mov    $0x8,%ecx
   28998:	4c 89 f2             	mov    %r14,%rdx
   2899b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2899e: R_X86_64_32S	.rodata.str1.1+0x321c
   289a2:	e8 00 00 00 00       	callq  289a7 <__MARSH_WRAP__e1000_down+0xd01>
			289a3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   289a7:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   289ab:	ba 60 00 00 00       	mov    $0x60,%edx
   289b0:	be 30 07 00 00       	mov    $0x730,%esi
   289b5:	e8 00 00 00 00       	callq  289ba <__MARSH_WRAP__e1000_down+0xd14>
			289b6: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   289ba:	4c 8b 6d b8          	mov    0xffffffffffffffb8(%rbp),%r13
   289be:	ba 08 00 00 00       	mov    $0x8,%edx
   289c3:	49 81 c5 30 07 00 00 	add    $0x730,%r13
   289ca:	49 8d 5d 08          	lea    0x8(%r13),%rbx
   289ce:	4c 89 ef             	mov    %r13,%rdi
   289d1:	89 de                	mov    %ebx,%esi
   289d3:	44 29 ee             	sub    %r13d,%esi
   289d6:	e8 00 00 00 00       	callq  289db <__MARSH_WRAP__e1000_down+0xd35>
			289d7: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   289db:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   289df:	49 89 d8             	mov    %rbx,%r8
   289e2:	49 8d 5d 14          	lea    0x14(%r13),%rbx
   289e6:	b9 08 00 00 00       	mov    $0x8,%ecx
   289eb:	4c 89 f2             	mov    %r14,%rdx
   289ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			289f1: R_X86_64_32S	.rodata.str1.1+0x321c
   289f5:	e8 00 00 00 00       	callq  289fa <__MARSH_WRAP__e1000_down+0xd54>
			289f6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   289fa:	89 de                	mov    %ebx,%esi
   289fc:	ba 04 00 00 00       	mov    $0x4,%edx
   28a01:	4c 89 ef             	mov    %r13,%rdi
   28a04:	44 29 ee             	sub    %r13d,%esi
   28a07:	e8 00 00 00 00       	callq  28a0c <__MARSH_WRAP__e1000_down+0xd66>
			28a08: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   28a0c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28a10:	49 89 d8             	mov    %rbx,%r8
   28a13:	b9 04 00 00 00       	mov    $0x4,%ecx
   28a18:	4c 89 f2             	mov    %r14,%rdx
   28a1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28a1e: R_X86_64_32S	.rodata.str1.1+0x321c
   28a22:	e8 00 00 00 00       	callq  28a27 <__MARSH_WRAP__e1000_down+0xd81>
			28a23: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28a27:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28a2b:	4d 8d 45 18          	lea    0x18(%r13),%r8
   28a2f:	b9 04 00 00 00       	mov    $0x4,%ecx
   28a34:	4c 89 f2             	mov    %r14,%rdx
   28a37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28a3a: R_X86_64_32S	.rodata.str1.1+0x321c
   28a3e:	e8 00 00 00 00       	callq  28a43 <__MARSH_WRAP__e1000_down+0xd9d>
			28a3f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28a43:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28a47:	4d 8d 45 5c          	lea    0x5c(%r13),%r8
   28a4b:	b9 01 00 00 00       	mov    $0x1,%ecx
   28a50:	4c 89 f2             	mov    %r14,%rdx
   28a53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28a56: R_X86_64_32S	.rodata.str1.1+0x321c
   28a5a:	e8 00 00 00 00       	callq  28a5f <__MARSH_WRAP__e1000_down+0xdb9>
			28a5b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28a5f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28a63:	4d 8d 45 10          	lea    0x10(%r13),%r8
   28a67:	b9 04 00 00 00       	mov    $0x4,%ecx
   28a6c:	4c 89 f2             	mov    %r14,%rdx
   28a6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28a72: R_X86_64_32S	.rodata.str1.1+0x321c
   28a76:	e8 00 00 00 00       	callq  28a7b <__MARSH_WRAP__e1000_down+0xdd5>
			28a77: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28a7b:	49 8d 75 28          	lea    0x28(%r13),%rsi
   28a7f:	ba 30 00 00 00       	mov    $0x30,%edx
   28a84:	4c 89 ef             	mov    %r13,%rdi
   28a87:	44 29 ee             	sub    %r13d,%esi
   28a8a:	e8 00 00 00 00       	callq  28a8f <__MARSH_WRAP__e1000_down+0xde9>
			28a8b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   28a8f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28a93:	4d 8d 45 5a          	lea    0x5a(%r13),%r8
   28a97:	b9 02 00 00 00       	mov    $0x2,%ecx
   28a9c:	4c 89 f2             	mov    %r14,%rdx
   28a9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28aa2: R_X86_64_32S	.rodata.str1.1+0x321c
   28aa6:	e8 00 00 00 00       	callq  28aab <__MARSH_WRAP__e1000_down+0xe05>
			28aa7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28aab:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28aaf:	4d 8d 45 58          	lea    0x58(%r13),%r8
   28ab3:	b9 02 00 00 00       	mov    $0x2,%ecx
   28ab8:	4c 89 f2             	mov    %r14,%rdx
   28abb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28abe: R_X86_64_32S	.rodata.str1.1+0x321c
   28ac2:	e8 00 00 00 00       	callq  28ac7 <__MARSH_WRAP__e1000_down+0xe21>
			28ac3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28ac7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28acb:	4d 8d 45 1c          	lea    0x1c(%r13),%r8
   28acf:	b9 04 00 00 00       	mov    $0x4,%ecx
   28ad4:	4c 89 f2             	mov    %r14,%rdx
   28ad7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28ada: R_X86_64_32S	.rodata.str1.1+0x321c
   28ade:	e8 00 00 00 00       	callq  28ae3 <__MARSH_WRAP__e1000_down+0xe3d>
			28adf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28ae3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28ae7:	49 8d 4d 20          	lea    0x20(%r13),%rcx
   28aeb:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   28af1:	4c 89 f2             	mov    %r14,%rdx
   28af4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28af7: R_X86_64_32S	.rodata.str1.1+0x321c
   28afb:	e8 00 00 00 00       	callq  28b00 <__MARSH_WRAP__e1000_down+0xe5a>
			28afc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   28b00:	49 8b 45 20          	mov    0x20(%r13),%rax
   28b04:	48 85 c0             	test   %rax,%rax
   28b07:	0f 84 de 03 00 00    	je     28eeb <__MARSH_WRAP__e1000_down+0x1245>
   28b0d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28b11:	4c 8d 40 18          	lea    0x18(%rax),%r8
   28b15:	b9 02 00 00 00       	mov    $0x2,%ecx
   28b1a:	4c 89 f2             	mov    %r14,%rdx
   28b1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28b20: R_X86_64_32S	.rodata.str1.1+0x321c
   28b24:	e8 00 00 00 00       	callq  28b29 <__MARSH_WRAP__e1000_down+0xe83>
			28b25: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28b29:	4d 8b 45 20          	mov    0x20(%r13),%r8
   28b2d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28b31:	b9 08 00 00 00       	mov    $0x8,%ecx
   28b36:	4c 89 f2             	mov    %r14,%rdx
   28b39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28b3c: R_X86_64_32S	.rodata.str1.1+0x321c
   28b40:	49 83 c0 10          	add    $0x10,%r8
   28b44:	e8 00 00 00 00       	callq  28b49 <__MARSH_WRAP__e1000_down+0xea3>
			28b45: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28b49:	4d 8b 45 20          	mov    0x20(%r13),%r8
   28b4d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28b51:	b9 02 00 00 00       	mov    $0x2,%ecx
   28b56:	4c 89 f2             	mov    %r14,%rdx
   28b59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28b5c: R_X86_64_32S	.rodata.str1.1+0x321c
   28b60:	49 83 c0 1a          	add    $0x1a,%r8
   28b64:	e8 00 00 00 00       	callq  28b69 <__MARSH_WRAP__e1000_down+0xec3>
			28b65: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28b69:	4d 8b 45 20          	mov    0x20(%r13),%r8
   28b6d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28b71:	b9 08 00 00 00       	mov    $0x8,%ecx
   28b76:	4c 89 f2             	mov    %r14,%rdx
   28b79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28b7c: R_X86_64_32S	.rodata.str1.1+0x321c
   28b80:	49 83 c0 08          	add    $0x8,%r8
   28b84:	e8 00 00 00 00       	callq  28b89 <__MARSH_WRAP__e1000_down+0xee3>
			28b85: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28b89:	49 8b 4d 20          	mov    0x20(%r13),%rcx
   28b8d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28b91:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   28b97:	4c 89 f2             	mov    %r14,%rdx
   28b9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28b9d: R_X86_64_32S	.rodata.str1.1+0x321c
   28ba1:	e8 00 00 00 00       	callq  28ba6 <__MARSH_WRAP__e1000_down+0xf00>
			28ba2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   28ba6:	49 8b 45 20          	mov    0x20(%r13),%rax
   28baa:	48 83 38 00          	cmpq   $0x0,(%rax)
   28bae:	0f 84 37 03 00 00    	je     28eeb <__MARSH_WRAP__e1000_down+0x1245>
   28bb4:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   28bb8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28bbc:	b9 01 00 00 00       	mov    $0x1,%ecx
   28bc1:	4c 89 f2             	mov    %r14,%rdx
   28bc4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28bc7: R_X86_64_32S	.rodata.str1.1+0x321c
   28bcb:	49 89 d8             	mov    %rbx,%r8
   28bce:	e8 00 00 00 00       	callq  28bd3 <__MARSH_WRAP__e1000_down+0xf2d>
			28bcf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28bd3:	49 8b 45 20          	mov    0x20(%r13),%rax
   28bd7:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   28bda:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28bdd: R_X86_64_32S	.rodata.str1.1+0x321c
   28be1:	48 8b 08             	mov    (%rax),%rcx
   28be4:	83 e2 07             	and    $0x7,%edx
   28be7:	8a 41 7d             	mov    0x7d(%rcx),%al
   28bea:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   28bed:	09 d0                	or     %edx,%eax
   28bef:	4c 89 f2             	mov    %r14,%rdx
   28bf2:	88 41 7d             	mov    %al,0x7d(%rcx)
   28bf5:	49 8b 45 20          	mov    0x20(%r13),%rax
   28bf9:	b9 04 00 00 00       	mov    $0x4,%ecx
   28bfe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28c02:	4c 8b 00             	mov    (%rax),%r8
   28c05:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   28c0c:	e8 00 00 00 00       	callq  28c11 <__MARSH_WRAP__e1000_down+0xf6b>
			28c0d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28c11:	49 8b 45 20          	mov    0x20(%r13),%rax
   28c15:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28c19:	b9 04 00 00 00       	mov    $0x4,%ecx
   28c1e:	4c 89 f2             	mov    %r14,%rdx
   28c21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28c24: R_X86_64_32S	.rodata.str1.1+0x321c
   28c28:	4c 8b 00             	mov    (%rax),%r8
   28c2b:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   28c32:	e8 00 00 00 00       	callq  28c37 <__MARSH_WRAP__e1000_down+0xf91>
			28c33: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28c37:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28c3b:	49 89 d8             	mov    %rbx,%r8
   28c3e:	b9 01 00 00 00       	mov    $0x1,%ecx
   28c43:	4c 89 f2             	mov    %r14,%rdx
   28c46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28c49: R_X86_64_32S	.rodata.str1.1+0x321c
   28c4d:	e8 00 00 00 00       	callq  28c52 <__MARSH_WRAP__e1000_down+0xfac>
			28c4e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28c52:	49 8b 45 20          	mov    0x20(%r13),%rax
   28c56:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   28c59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28c5c: R_X86_64_32S	.rodata.str1.1+0x321c
   28c60:	48 8b 08             	mov    (%rax),%rcx
   28c63:	83 e2 03             	and    $0x3,%edx
   28c66:	c1 e2 02             	shl    $0x2,%edx
   28c69:	8a 41 7c             	mov    0x7c(%rcx),%al
   28c6c:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   28c6f:	09 d0                	or     %edx,%eax
   28c71:	4c 89 f2             	mov    %r14,%rdx
   28c74:	88 41 7c             	mov    %al,0x7c(%rcx)
   28c77:	49 8b 45 20          	mov    0x20(%r13),%rax
   28c7b:	b9 04 00 00 00       	mov    $0x4,%ecx
   28c80:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28c84:	4c 8b 00             	mov    (%rax),%r8
   28c87:	49 83 c0 6c          	add    $0x6c,%r8
   28c8b:	e8 00 00 00 00       	callq  28c90 <__MARSH_WRAP__e1000_down+0xfea>
			28c8c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28c90:	49 8b 45 20          	mov    0x20(%r13),%rax
   28c94:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28c98:	b9 02 00 00 00       	mov    $0x2,%ecx
   28c9d:	4c 89 f2             	mov    %r14,%rdx
   28ca0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28ca3: R_X86_64_32S	.rodata.str1.1+0x321c
   28ca7:	4c 8b 00             	mov    (%rax),%r8
   28caa:	49 81 c0 a4 00 00 00 	add    $0xa4,%r8
   28cb1:	e8 00 00 00 00       	callq  28cb6 <__MARSH_WRAP__e1000_down+0x1010>
			28cb2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28cb6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28cba:	49 89 d8             	mov    %rbx,%r8
   28cbd:	b9 01 00 00 00       	mov    $0x1,%ecx
   28cc2:	4c 89 f2             	mov    %r14,%rdx
   28cc5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28cc8: R_X86_64_32S	.rodata.str1.1+0x321c
   28ccc:	e8 00 00 00 00       	callq  28cd1 <__MARSH_WRAP__e1000_down+0x102b>
			28ccd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28cd1:	49 8b 45 20          	mov    0x20(%r13),%rax
   28cd5:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   28cd8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28cdb: R_X86_64_32S	.rodata.str1.1+0x321c
   28cdf:	48 8b 08             	mov    (%rax),%rcx
   28ce2:	83 e2 01             	and    $0x1,%edx
   28ce5:	01 d2                	add    %edx,%edx
   28ce7:	8a 41 7c             	mov    0x7c(%rcx),%al
   28cea:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   28ced:	09 d0                	or     %edx,%eax
   28cef:	4c 89 f2             	mov    %r14,%rdx
   28cf2:	88 41 7c             	mov    %al,0x7c(%rcx)
   28cf5:	49 8b 45 20          	mov    0x20(%r13),%rax
   28cf9:	b9 02 00 00 00       	mov    $0x2,%ecx
   28cfe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28d02:	4c 8b 00             	mov    (%rax),%r8
   28d05:	49 83 c0 76          	add    $0x76,%r8
   28d09:	e8 00 00 00 00       	callq  28d0e <__MARSH_WRAP__e1000_down+0x1068>
			28d0a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28d0e:	49 8b 45 20          	mov    0x20(%r13),%rax
   28d12:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28d16:	b9 04 00 00 00       	mov    $0x4,%ecx
   28d1b:	4c 89 f2             	mov    %r14,%rdx
   28d1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28d21: R_X86_64_32S	.rodata.str1.1+0x321c
   28d25:	4c 8b 00             	mov    (%rax),%r8
   28d28:	49 83 c0 74          	add    $0x74,%r8
   28d2c:	e8 00 00 00 00       	callq  28d31 <__MARSH_WRAP__e1000_down+0x108b>
			28d2d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28d31:	49 8b 45 20          	mov    0x20(%r13),%rax
   28d35:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28d39:	b9 04 00 00 00       	mov    $0x4,%ecx
   28d3e:	4c 89 f2             	mov    %r14,%rdx
   28d41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28d44: R_X86_64_32S	.rodata.str1.1+0x321c
   28d48:	4c 8b 00             	mov    (%rax),%r8
   28d4b:	49 83 c0 68          	add    $0x68,%r8
   28d4f:	e8 00 00 00 00       	callq  28d54 <__MARSH_WRAP__e1000_down+0x10ae>
			28d50: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28d54:	49 8b 45 20          	mov    0x20(%r13),%rax
   28d58:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28d5c:	b9 04 00 00 00       	mov    $0x4,%ecx
   28d61:	4c 89 f2             	mov    %r14,%rdx
   28d64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28d67: R_X86_64_32S	.rodata.str1.1+0x321c
   28d6b:	4c 8b 00             	mov    (%rax),%r8
   28d6e:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   28d75:	e8 00 00 00 00       	callq  28d7a <__MARSH_WRAP__e1000_down+0x10d4>
			28d76: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28d7a:	49 8b 45 20          	mov    0x20(%r13),%rax
   28d7e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28d82:	b9 04 00 00 00       	mov    $0x4,%ecx
   28d87:	4c 89 f2             	mov    %r14,%rdx
   28d8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28d8d: R_X86_64_32S	.rodata.str1.1+0x321c
   28d91:	4c 8b 00             	mov    (%rax),%r8
   28d94:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   28d9b:	e8 00 00 00 00       	callq  28da0 <__MARSH_WRAP__e1000_down+0x10fa>
			28d9c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28da0:	49 8b 45 20          	mov    0x20(%r13),%rax
   28da4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28da8:	b9 02 00 00 00       	mov    $0x2,%ecx
   28dad:	4c 89 f2             	mov    %r14,%rdx
   28db0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28db3: R_X86_64_32S	.rodata.str1.1+0x321c
   28db7:	4c 8b 00             	mov    (%rax),%r8
   28dba:	49 83 c0 7e          	add    $0x7e,%r8
   28dbe:	e8 00 00 00 00       	callq  28dc3 <__MARSH_WRAP__e1000_down+0x111d>
			28dbf: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28dc3:	49 8b 45 20          	mov    0x20(%r13),%rax
   28dc7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28dcb:	b9 04 00 00 00       	mov    $0x4,%ecx
   28dd0:	4c 89 f2             	mov    %r14,%rdx
   28dd3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28dd6: R_X86_64_32S	.rodata.str1.1+0x321c
   28dda:	4c 8b 00             	mov    (%rax),%r8
   28ddd:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   28de4:	e8 00 00 00 00       	callq  28de9 <__MARSH_WRAP__e1000_down+0x1143>
			28de5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28de9:	49 8b 45 20          	mov    0x20(%r13),%rax
   28ded:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28df1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   28df7:	4c 89 f2             	mov    %r14,%rdx
   28dfa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28dfd: R_X86_64_32S	.rodata.str1.1+0x321c
   28e01:	48 8b 08             	mov    (%rax),%rcx
   28e04:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   28e0b:	e8 00 00 00 00       	callq  28e10 <__MARSH_WRAP__e1000_down+0x116a>
			28e0c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   28e10:	49 8b 45 20          	mov    0x20(%r13),%rax
   28e14:	48 8b 00             	mov    (%rax),%rax
   28e17:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   28e1e:	00 
   28e1f:	74 71                	je     28e92 <__MARSH_WRAP__e1000_down+0x11ec>
   28e21:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28e25:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   28e29:	b9 04 00 00 00       	mov    $0x4,%ecx
   28e2e:	4c 89 f2             	mov    %r14,%rdx
   28e31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28e34: R_X86_64_32S	.rodata.str1.1+0x321c
   28e38:	31 db                	xor    %ebx,%ebx
   28e3a:	e8 00 00 00 00       	callq  28e3f <__MARSH_WRAP__e1000_down+0x1199>
			28e3b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28e3f:	49 8b 45 20          	mov    0x20(%r13),%rax
   28e43:	8b 75 cc             	mov    0xffffffffffffffcc(%rbp),%esi
   28e46:	b9 01 00 00 00       	mov    $0x1,%ecx
   28e4b:	ba 01 00 00 00       	mov    $0x1,%edx
   28e50:	48 8b 38             	mov    (%rax),%rdi
   28e53:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   28e5a:	e8 00 00 00 00       	callq  28e5f <__MARSH_WRAP__e1000_down+0x11b9>
			28e5b: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   28e5f:	eb 2c                	jmp    28e8d <__MARSH_WRAP__e1000_down+0x11e7>
   28e61:	49 8b 45 20          	mov    0x20(%r13),%rax
   28e65:	4c 63 c3             	movslq %ebx,%r8
   28e68:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28e6c:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   28e70:	b9 01 00 00 00       	mov    $0x1,%ecx
   28e75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28e78: R_X86_64_32S	.rodata.str1.1+0x321c
   28e7c:	ff c3                	inc    %ebx
   28e7e:	48 8b 00             	mov    (%rax),%rax
   28e81:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   28e88:	e8 00 00 00 00       	callq  28e8d <__MARSH_WRAP__e1000_down+0x11e7>
			28e89: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28e8d:	3b 5d cc             	cmp    0xffffffffffffffcc(%rbp),%ebx
   28e90:	7c cf                	jl     28e61 <__MARSH_WRAP__e1000_down+0x11bb>
   28e92:	49 8b 45 20          	mov    0x20(%r13),%rax
   28e96:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   28e9a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28e9e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   28ea4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28ea7: R_X86_64_32S	.rodata.str1.1+0x321c
   28eab:	48 89 da             	mov    %rbx,%rdx
   28eae:	48 8b 08             	mov    (%rax),%rcx
   28eb1:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   28eb8:	e8 00 00 00 00       	callq  28ebd <__MARSH_WRAP__e1000_down+0x1217>
			28eb9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   28ebd:	49 8b 45 20          	mov    0x20(%r13),%rax
   28ec1:	48 8b 00             	mov    (%rax),%rax
   28ec4:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   28ecb:	48 85 c0             	test   %rax,%rax
   28ece:	74 1b                	je     28eeb <__MARSH_WRAP__e1000_down+0x1245>
   28ed0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28ed4:	49 89 c0             	mov    %rax,%r8
   28ed7:	b9 01 00 00 00       	mov    $0x1,%ecx
   28edc:	48 89 da             	mov    %rbx,%rdx
   28edf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28ee2: R_X86_64_32S	.rodata.str1.1+0x321c
   28ee6:	e8 00 00 00 00       	callq  28eeb <__MARSH_WRAP__e1000_down+0x1245>
			28ee7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28eeb:	4c 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%r14
   28eef:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28ef3:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   28ef9:	4c 89 e9             	mov    %r13,%rcx
   28efc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28eff: R_X86_64_32S	.rodata.str1.1+0x321c
   28f03:	4c 89 f2             	mov    %r14,%rdx
   28f06:	e8 00 00 00 00       	callq  28f0b <__MARSH_WRAP__e1000_down+0x1265>
			28f07: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   28f0b:	49 8b 45 00          	mov    0x0(%r13),%rax
   28f0f:	48 85 c0             	test   %rax,%rax
   28f12:	0f 84 b8 00 00 00    	je     28fd0 <__MARSH_WRAP__e1000_down+0x132a>
   28f18:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28f1c:	4c 8d 40 0e          	lea    0xe(%rax),%r8
   28f20:	b9 02 00 00 00       	mov    $0x2,%ecx
   28f25:	4c 89 f2             	mov    %r14,%rdx
   28f28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28f2b: R_X86_64_32S	.rodata.str1.1+0x321c
   28f2f:	e8 00 00 00 00       	callq  28f34 <__MARSH_WRAP__e1000_down+0x128e>
			28f30: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28f34:	4d 8b 45 00          	mov    0x0(%r13),%r8
   28f38:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28f3c:	b9 01 00 00 00       	mov    $0x1,%ecx
   28f41:	4c 89 f2             	mov    %r14,%rdx
   28f44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28f47: R_X86_64_32S	.rodata.str1.1+0x321c
   28f4b:	49 83 c0 0d          	add    $0xd,%r8
   28f4f:	e8 00 00 00 00       	callq  28f54 <__MARSH_WRAP__e1000_down+0x12ae>
			28f50: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28f54:	4d 8b 45 00          	mov    0x0(%r13),%r8
   28f58:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28f5c:	b9 02 00 00 00       	mov    $0x2,%ecx
   28f61:	4c 89 f2             	mov    %r14,%rdx
   28f64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28f67: R_X86_64_32S	.rodata.str1.1+0x321c
   28f6b:	49 83 c0 0a          	add    $0xa,%r8
   28f6f:	e8 00 00 00 00       	callq  28f74 <__MARSH_WRAP__e1000_down+0x12ce>
			28f70: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28f74:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28f78:	4d 8b 45 00          	mov    0x0(%r13),%r8
   28f7c:	b9 08 00 00 00       	mov    $0x8,%ecx
   28f81:	4c 89 f2             	mov    %r14,%rdx
   28f84:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28f87: R_X86_64_32S	.rodata.str1.1+0x321c
   28f8b:	e8 00 00 00 00       	callq  28f90 <__MARSH_WRAP__e1000_down+0x12ea>
			28f8c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28f90:	4d 8b 45 00          	mov    0x0(%r13),%r8
   28f94:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28f98:	b9 02 00 00 00       	mov    $0x2,%ecx
   28f9d:	4c 89 f2             	mov    %r14,%rdx
   28fa0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28fa3: R_X86_64_32S	.rodata.str1.1+0x321c
   28fa7:	49 83 c0 08          	add    $0x8,%r8
   28fab:	e8 00 00 00 00       	callq  28fb0 <__MARSH_WRAP__e1000_down+0x130a>
			28fac: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28fb0:	4d 8b 45 00          	mov    0x0(%r13),%r8
   28fb4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28fb8:	b9 01 00 00 00       	mov    $0x1,%ecx
   28fbd:	4c 89 f2             	mov    %r14,%rdx
   28fc0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28fc3: R_X86_64_32S	.rodata.str1.1+0x321c
   28fc7:	49 83 c0 0c          	add    $0xc,%r8
   28fcb:	e8 00 00 00 00       	callq  28fd0 <__MARSH_WRAP__e1000_down+0x132a>
			28fcc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   28fd0:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   28fd4:	ba 04 00 00 00       	mov    $0x4,%edx
   28fd9:	be cc 01 00 00       	mov    $0x1cc,%esi
   28fde:	e8 00 00 00 00       	callq  28fe3 <__MARSH_WRAP__e1000_down+0x133d>
			28fdf: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   28fe3:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   28fe7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   28feb:	4c 89 f2             	mov    %r14,%rdx
   28fee:	b9 04 00 00 00       	mov    $0x4,%ecx
   28ff3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28ff6: R_X86_64_32S	.rodata.str1.1+0x321c
   28ffa:	49 81 c0 cc 01 00 00 	add    $0x1cc,%r8
   29001:	e8 00 00 00 00       	callq  29006 <__MARSH_WRAP__e1000_down+0x1360>
			29002: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29006:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2900a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2900e:	b9 04 00 00 00       	mov    $0x4,%ecx
   29013:	4c 89 f2             	mov    %r14,%rdx
   29016:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29019: R_X86_64_32S	.rodata.str1.1+0x321c
   2901d:	49 81 c0 18 01 00 00 	add    $0x118,%r8
   29024:	e8 00 00 00 00       	callq  29029 <__MARSH_WRAP__e1000_down+0x1383>
			29025: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29029:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2902d:	ba 30 00 00 00       	mov    $0x30,%edx
   29032:	be b8 00 00 00       	mov    $0xb8,%esi
   29037:	e8 00 00 00 00       	callq  2903c <__MARSH_WRAP__e1000_down+0x1396>
			29038: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2903c:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   29040:	ba 38 00 00 00       	mov    $0x38,%edx
   29045:	be 38 01 00 00       	mov    $0x138,%esi
   2904a:	e8 00 00 00 00       	callq  2904f <__MARSH_WRAP__e1000_down+0x13a9>
			2904b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2904f:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   29053:	ba 10 00 00 00       	mov    $0x10,%edx
   29058:	be 08 00 00 00       	mov    $0x8,%esi
   2905d:	49 81 c4 38 01 00 00 	add    $0x138,%r12
   29064:	4c 89 e7             	mov    %r12,%rdi
   29067:	e8 00 00 00 00       	callq  2906c <__MARSH_WRAP__e1000_down+0x13c6>
			29068: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2906c:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
   29071:	4c 89 e7             	mov    %r12,%rdi
   29074:	ba 18 00 00 00       	mov    $0x18,%edx
   29079:	44 29 e6             	sub    %r12d,%esi
   2907c:	e8 00 00 00 00       	callq  29081 <__MARSH_WRAP__e1000_down+0x13db>
			2907d: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   29081:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29085:	49 8d 4c 24 18       	lea    0x18(%r12),%rcx
   2908a:	4c 89 f2             	mov    %r14,%rdx
   2908d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   29093:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29096: R_X86_64_32S	.rodata.str1.1+0x321c
   2909a:	e8 00 00 00 00       	callq  2909f <__MARSH_WRAP__e1000_down+0x13f9>
			2909b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2909f:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   290a3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   290a7:	b9 04 00 00 00       	mov    $0x4,%ecx
   290ac:	4c 89 f2             	mov    %r14,%rdx
   290af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			290b2: R_X86_64_32S	.rodata.str1.1+0x321c
   290b6:	49 81 c0 b0 02 00 00 	add    $0x2b0,%r8
   290bd:	e8 00 00 00 00       	callq  290c2 <__MARSH_WRAP__e1000_down+0x141c>
			290be: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   290c2:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   290c6:	ba 04 00 00 00       	mov    $0x4,%edx
   290cb:	be 28 01 00 00       	mov    $0x128,%esi
   290d0:	e8 00 00 00 00       	callq  290d5 <__MARSH_WRAP__e1000_down+0x142f>
			290d1: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   290d5:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   290d9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   290dd:	b9 04 00 00 00       	mov    $0x4,%ecx
   290e2:	4c 89 f2             	mov    %r14,%rdx
   290e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			290e8: R_X86_64_32S	.rodata.str1.1+0x321c
   290ec:	49 81 c0 28 01 00 00 	add    $0x128,%r8
   290f3:	e8 00 00 00 00       	callq  290f8 <__MARSH_WRAP__e1000_down+0x1452>
			290f4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   290f8:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   290fc:	ba 30 00 00 00       	mov    $0x30,%edx
   29101:	be 78 01 00 00       	mov    $0x178,%esi
   29106:	e8 00 00 00 00       	callq  2910b <__MARSH_WRAP__e1000_down+0x1465>
			29107: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2910b:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2910f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29113:	4c 89 f2             	mov    %r14,%rdx
   29116:	b9 08 00 00 00       	mov    $0x8,%ecx
   2911b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2911e: R_X86_64_32S	.rodata.str1.1+0x321c
   29122:	48 81 c3 78 01 00 00 	add    $0x178,%rbx
   29129:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   2912d:	e8 00 00 00 00       	callq  29132 <__MARSH_WRAP__e1000_down+0x148c>
			2912e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29132:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29136:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   2913a:	4c 89 f2             	mov    %r14,%rdx
   2913d:	b9 08 00 00 00       	mov    $0x8,%ecx
   29142:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29145: R_X86_64_32S	.rodata.str1.1+0x321c
   29149:	e8 00 00 00 00       	callq  2914e <__MARSH_WRAP__e1000_down+0x14a8>
			2914a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2914e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29152:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   29156:	4c 89 f2             	mov    %r14,%rdx
   29159:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2915f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29162: R_X86_64_32S	.rodata.str1.1+0x321c
   29166:	e8 00 00 00 00       	callq  2916b <__MARSH_WRAP__e1000_down+0x14c5>
			29167: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2916b:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2916f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29173:	4c 89 f2             	mov    %r14,%rdx
   29176:	b9 08 00 00 00       	mov    $0x8,%ecx
   2917b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2917e: R_X86_64_32S	.rodata.str1.1+0x321c
   29182:	49 81 c0 e8 02 00 00 	add    $0x2e8,%r8
   29189:	e8 00 00 00 00       	callq  2918e <__MARSH_WRAP__e1000_down+0x14e8>
			2918a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2918e:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29192:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29196:	b9 01 00 00 00       	mov    $0x1,%ecx
   2919b:	4c 89 f2             	mov    %r14,%rdx
   2919e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			291a1: R_X86_64_32S	.rodata.str1.1+0x321c
   291a5:	49 81 c0 dc 02 00 00 	add    $0x2dc,%r8
   291ac:	e8 00 00 00 00       	callq  291b1 <__MARSH_WRAP__e1000_down+0x150b>
			291ad: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   291b1:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   291b5:	ba 30 00 00 00       	mov    $0x30,%edx
   291ba:	be 60 00 00 00       	mov    $0x60,%esi
   291bf:	e8 00 00 00 00       	callq  291c4 <__MARSH_WRAP__e1000_down+0x151e>
			291c0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   291c4:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   291c8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   291cc:	4c 89 f2             	mov    %r14,%rdx
   291cf:	b9 08 00 00 00       	mov    $0x8,%ecx
   291d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			291d7: R_X86_64_32S	.rodata.str1.1+0x321c
   291db:	48 83 c3 60          	add    $0x60,%rbx
   291df:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   291e3:	e8 00 00 00 00       	callq  291e8 <__MARSH_WRAP__e1000_down+0x1542>
			291e4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   291e8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   291ec:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   291f0:	4c 89 f2             	mov    %r14,%rdx
   291f3:	b9 08 00 00 00       	mov    $0x8,%ecx
   291f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			291fb: R_X86_64_32S	.rodata.str1.1+0x321c
   291ff:	e8 00 00 00 00       	callq  29204 <__MARSH_WRAP__e1000_down+0x155e>
			29200: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29204:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29208:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2920c:	4c 89 f2             	mov    %r14,%rdx
   2920f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   29215:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29218: R_X86_64_32S	.rodata.str1.1+0x321c
   2921c:	e8 00 00 00 00       	callq  29221 <__MARSH_WRAP__e1000_down+0x157b>
			2921d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   29221:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29225:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29229:	4c 89 f2             	mov    %r14,%rdx
   2922c:	b9 08 00 00 00       	mov    $0x8,%ecx
   29231:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29234: R_X86_64_32S	.rodata.str1.1+0x321c
   29238:	49 81 c0 e0 01 00 00 	add    $0x1e0,%r8
   2923f:	e8 00 00 00 00       	callq  29244 <__MARSH_WRAP__e1000_down+0x159e>
			29240: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29244:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29248:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2924c:	b9 04 00 00 00       	mov    $0x4,%ecx
   29251:	4c 89 f2             	mov    %r14,%rdx
   29254:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29257: R_X86_64_32S	.rodata.str1.1+0x321c
   2925b:	49 81 c0 d4 01 00 00 	add    $0x1d4,%r8
   29262:	e8 00 00 00 00       	callq  29267 <__MARSH_WRAP__e1000_down+0x15c1>
			29263: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29267:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2926b:	ba 20 01 00 00       	mov    $0x120,%edx
   29270:	be b8 03 00 00       	mov    $0x3b8,%esi
   29275:	e8 00 00 00 00       	callq  2927a <__MARSH_WRAP__e1000_down+0x15d4>
			29276: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2927a:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   2927e:	ba 10 00 00 00       	mov    $0x10,%edx
   29283:	49 81 c4 b8 03 00 00 	add    $0x3b8,%r12
   2928a:	49 8d 9c 24 c0 00 00 	lea    0xc0(%r12),%rbx
   29291:	00 
   29292:	4c 89 e7             	mov    %r12,%rdi
   29295:	45 89 e7             	mov    %r12d,%r15d
   29298:	89 de                	mov    %ebx,%esi
   2929a:	44 29 e6             	sub    %r12d,%esi
   2929d:	e8 00 00 00 00       	callq  292a2 <__MARSH_WRAP__e1000_down+0x15fc>
			2929e: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   292a2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   292a6:	49 89 d8             	mov    %rbx,%r8
   292a9:	4c 89 f2             	mov    %r14,%rdx
   292ac:	b9 04 00 00 00       	mov    $0x4,%ecx
   292b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			292b4: R_X86_64_32S	.rodata.str1.1+0x321c
   292b8:	49 8d 9c 24 ef 00 00 	lea    0xef(%r12),%rbx
   292bf:	00 
   292c0:	e8 00 00 00 00       	callq  292c5 <__MARSH_WRAP__e1000_down+0x161f>
			292c1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   292c5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   292c9:	4d 8d 84 24 c6 00 00 	lea    0xc6(%r12),%r8
   292d0:	00 
   292d1:	4c 89 f2             	mov    %r14,%rdx
   292d4:	b9 02 00 00 00       	mov    $0x2,%ecx
   292d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			292dc: R_X86_64_32S	.rodata.str1.1+0x321c
   292e0:	e8 00 00 00 00       	callq  292e5 <__MARSH_WRAP__e1000_down+0x163f>
			292e1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   292e5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   292e9:	4d 8d 84 24 cf 00 00 	lea    0xcf(%r12),%r8
   292f0:	00 
   292f1:	4c 89 f2             	mov    %r14,%rdx
   292f4:	b9 01 00 00 00       	mov    $0x1,%ecx
   292f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			292fc: R_X86_64_32S	.rodata.str1.1+0x321c
   29300:	e8 00 00 00 00       	callq  29305 <__MARSH_WRAP__e1000_down+0x165f>
			29301: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29305:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29309:	4d 8d 84 24 c4 00 00 	lea    0xc4(%r12),%r8
   29310:	00 
   29311:	4c 89 f2             	mov    %r14,%rdx
   29314:	b9 01 00 00 00       	mov    $0x1,%ecx
   29319:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2931c: R_X86_64_32S	.rodata.str1.1+0x321c
   29320:	e8 00 00 00 00       	callq  29325 <__MARSH_WRAP__e1000_down+0x167f>
			29321: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29325:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29329:	4d 8d 84 24 84 00 00 	lea    0x84(%r12),%r8
   29330:	00 
   29331:	4c 89 f2             	mov    %r14,%rdx
   29334:	b9 04 00 00 00       	mov    $0x4,%ecx
   29339:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2933c: R_X86_64_32S	.rodata.str1.1+0x321c
   29340:	e8 00 00 00 00       	callq  29345 <__MARSH_WRAP__e1000_down+0x169f>
			29341: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29345:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29349:	4d 8d 84 24 0e 01 00 	lea    0x10e(%r12),%r8
   29350:	00 
   29351:	4c 89 f2             	mov    %r14,%rdx
   29354:	b9 01 00 00 00       	mov    $0x1,%ecx
   29359:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2935c: R_X86_64_32S	.rodata.str1.1+0x321c
   29360:	e8 00 00 00 00       	callq  29365 <__MARSH_WRAP__e1000_down+0x16bf>
			29361: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29365:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29369:	4d 8d 44 24 14       	lea    0x14(%r12),%r8
   2936e:	4c 89 f2             	mov    %r14,%rdx
   29371:	b9 04 00 00 00       	mov    $0x4,%ecx
   29376:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29379: R_X86_64_32S	.rodata.str1.1+0x321c
   2937d:	e8 00 00 00 00       	callq  29382 <__MARSH_WRAP__e1000_down+0x16dc>
			2937e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29382:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29386:	4d 8d 84 24 04 01 00 	lea    0x104(%r12),%r8
   2938d:	00 
   2938e:	b9 04 00 00 00       	mov    $0x4,%ecx
   29393:	4c 89 f2             	mov    %r14,%rdx
   29396:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29399: R_X86_64_32S	.rodata.str1.1+0x321c
   2939d:	e8 00 00 00 00       	callq  293a2 <__MARSH_WRAP__e1000_down+0x16fc>
			2939e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   293a2:	89 de                	mov    %ebx,%esi
   293a4:	ba 01 00 00 00       	mov    $0x1,%edx
   293a9:	4c 89 e7             	mov    %r12,%rdi
   293ac:	44 29 e6             	sub    %r12d,%esi
   293af:	e8 00 00 00 00       	callq  293b4 <__MARSH_WRAP__e1000_down+0x170e>
			293b0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   293b4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   293b8:	49 89 d8             	mov    %rbx,%r8
   293bb:	4c 89 f2             	mov    %r14,%rdx
   293be:	b9 01 00 00 00       	mov    $0x1,%ecx
   293c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			293c6: R_X86_64_32S	.rodata.str1.1+0x321c
   293ca:	49 8d 9c 24 d2 00 00 	lea    0xd2(%r12),%rbx
   293d1:	00 
   293d2:	e8 00 00 00 00       	callq  293d7 <__MARSH_WRAP__e1000_down+0x1731>
			293d3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   293d7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   293db:	4d 8d 84 24 b0 00 00 	lea    0xb0(%r12),%r8
   293e2:	00 
   293e3:	4c 89 f2             	mov    %r14,%rdx
   293e6:	b9 04 00 00 00       	mov    $0x4,%ecx
   293eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			293ee: R_X86_64_32S	.rodata.str1.1+0x321c
   293f2:	e8 00 00 00 00       	callq  293f7 <__MARSH_WRAP__e1000_down+0x1751>
			293f3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   293f7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   293fb:	4d 8d 84 24 b8 00 00 	lea    0xb8(%r12),%r8
   29402:	00 
   29403:	4c 89 f2             	mov    %r14,%rdx
   29406:	b9 04 00 00 00       	mov    $0x4,%ecx
   2940b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2940e: R_X86_64_32S	.rodata.str1.1+0x321c
   29412:	e8 00 00 00 00       	callq  29417 <__MARSH_WRAP__e1000_down+0x1771>
			29413: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29417:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2941b:	4d 8d 84 24 a0 00 00 	lea    0xa0(%r12),%r8
   29422:	00 
   29423:	4c 89 f2             	mov    %r14,%rdx
   29426:	b9 04 00 00 00       	mov    $0x4,%ecx
   2942b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2942e: R_X86_64_32S	.rodata.str1.1+0x321c
   29432:	e8 00 00 00 00       	callq  29437 <__MARSH_WRAP__e1000_down+0x1791>
			29433: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29437:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2943b:	4d 8d 44 24 38       	lea    0x38(%r12),%r8
   29440:	b9 04 00 00 00       	mov    $0x4,%ecx
   29445:	4c 89 f2             	mov    %r14,%rdx
   29448:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2944b: R_X86_64_32S	.rodata.str1.1+0x321c
   2944f:	e8 00 00 00 00       	callq  29454 <__MARSH_WRAP__e1000_down+0x17ae>
			29450: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29454:	89 de                	mov    %ebx,%esi
   29456:	ba 02 00 00 00       	mov    $0x2,%edx
   2945b:	4c 89 e7             	mov    %r12,%rdi
   2945e:	44 29 e6             	sub    %r12d,%esi
   29461:	e8 00 00 00 00       	callq  29466 <__MARSH_WRAP__e1000_down+0x17c0>
			29462: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   29466:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2946a:	49 89 d8             	mov    %rbx,%r8
   2946d:	49 8d 9c 24 d0 00 00 	lea    0xd0(%r12),%rbx
   29474:	00 
   29475:	b9 02 00 00 00       	mov    $0x2,%ecx
   2947a:	4c 89 f2             	mov    %r14,%rdx
   2947d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29480: R_X86_64_32S	.rodata.str1.1+0x321c
   29484:	e8 00 00 00 00       	callq  29489 <__MARSH_WRAP__e1000_down+0x17e3>
			29485: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29489:	89 de                	mov    %ebx,%esi
   2948b:	ba 02 00 00 00       	mov    $0x2,%edx
   29490:	4c 89 e7             	mov    %r12,%rdi
   29493:	44 29 e6             	sub    %r12d,%esi
   29496:	e8 00 00 00 00       	callq  2949b <__MARSH_WRAP__e1000_down+0x17f5>
			29497: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2949b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2949f:	49 89 d8             	mov    %rbx,%r8
   294a2:	4c 89 f2             	mov    %r14,%rdx
   294a5:	b9 02 00 00 00       	mov    $0x2,%ecx
   294aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			294ad: R_X86_64_32S	.rodata.str1.1+0x321c
   294b1:	49 8d 9c 24 fa 00 00 	lea    0xfa(%r12),%rbx
   294b8:	00 
   294b9:	e8 00 00 00 00       	callq  294be <__MARSH_WRAP__e1000_down+0x1818>
			294ba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   294be:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   294c2:	4d 8d 84 24 b4 00 00 	lea    0xb4(%r12),%r8
   294c9:	00 
   294ca:	4c 89 f2             	mov    %r14,%rdx
   294cd:	b9 04 00 00 00       	mov    $0x4,%ecx
   294d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			294d5: R_X86_64_32S	.rodata.str1.1+0x321c
   294d9:	e8 00 00 00 00       	callq  294de <__MARSH_WRAP__e1000_down+0x1838>
			294da: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   294de:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   294e2:	4d 8d 84 24 ee 00 00 	lea    0xee(%r12),%r8
   294e9:	00 
   294ea:	4c 89 f2             	mov    %r14,%rdx
   294ed:	b9 01 00 00 00       	mov    $0x1,%ecx
   294f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			294f5: R_X86_64_32S	.rodata.str1.1+0x321c
   294f9:	e8 00 00 00 00       	callq  294fe <__MARSH_WRAP__e1000_down+0x1858>
			294fa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   294fe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29502:	4d 8d 84 24 d6 00 00 	lea    0xd6(%r12),%r8
   29509:	00 
   2950a:	4c 89 f2             	mov    %r14,%rdx
   2950d:	b9 02 00 00 00       	mov    $0x2,%ecx
   29512:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29515: R_X86_64_32S	.rodata.str1.1+0x321c
   29519:	e8 00 00 00 00       	callq  2951e <__MARSH_WRAP__e1000_down+0x1878>
			2951a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2951e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29522:	4d 8d 84 24 e8 00 00 	lea    0xe8(%r12),%r8
   29529:	00 
   2952a:	4c 89 f2             	mov    %r14,%rdx
   2952d:	b9 02 00 00 00       	mov    $0x2,%ecx
   29532:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29535: R_X86_64_32S	.rodata.str1.1+0x321c
   29539:	e8 00 00 00 00       	callq  2953e <__MARSH_WRAP__e1000_down+0x1898>
			2953a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2953e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29542:	4d 8d 84 24 f0 00 00 	lea    0xf0(%r12),%r8
   29549:	00 
   2954a:	4c 89 f2             	mov    %r14,%rdx
   2954d:	b9 01 00 00 00       	mov    $0x1,%ecx
   29552:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29555: R_X86_64_32S	.rodata.str1.1+0x321c
   29559:	e8 00 00 00 00       	callq  2955e <__MARSH_WRAP__e1000_down+0x18b8>
			2955a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2955e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29562:	4d 8d 84 24 e0 00 00 	lea    0xe0(%r12),%r8
   29569:	00 
   2956a:	4c 89 f2             	mov    %r14,%rdx
   2956d:	b9 02 00 00 00       	mov    $0x2,%ecx
   29572:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29575: R_X86_64_32S	.rodata.str1.1+0x321c
   29579:	e8 00 00 00 00       	callq  2957e <__MARSH_WRAP__e1000_down+0x18d8>
			2957a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2957e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29582:	4d 8d 84 24 1a 01 00 	lea    0x11a(%r12),%r8
   29589:	00 
   2958a:	4c 89 f2             	mov    %r14,%rdx
   2958d:	b9 01 00 00 00       	mov    $0x1,%ecx
   29592:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29595: R_X86_64_32S	.rodata.str1.1+0x321c
   29599:	e8 00 00 00 00       	callq  2959e <__MARSH_WRAP__e1000_down+0x18f8>
			2959a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2959e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   295a2:	4d 8d 84 24 e2 00 00 	lea    0xe2(%r12),%r8
   295a9:	00 
   295aa:	4c 89 f2             	mov    %r14,%rdx
   295ad:	b9 02 00 00 00       	mov    $0x2,%ecx
   295b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			295b5: R_X86_64_32S	.rodata.str1.1+0x321c
   295b9:	e8 00 00 00 00       	callq  295be <__MARSH_WRAP__e1000_down+0x1918>
			295ba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   295be:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   295c2:	4d 8d 44 24 10       	lea    0x10(%r12),%r8
   295c7:	4c 89 f2             	mov    %r14,%rdx
   295ca:	b9 04 00 00 00       	mov    $0x4,%ecx
   295cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			295d2: R_X86_64_32S	.rodata.str1.1+0x321c
   295d6:	e8 00 00 00 00       	callq  295db <__MARSH_WRAP__e1000_down+0x1935>
			295d7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   295db:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   295df:	4d 8d 84 24 f3 00 00 	lea    0xf3(%r12),%r8
   295e6:	00 
   295e7:	4c 89 f2             	mov    %r14,%rdx
   295ea:	b9 01 00 00 00       	mov    $0x1,%ecx
   295ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			295f2: R_X86_64_32S	.rodata.str1.1+0x321c
   295f6:	e8 00 00 00 00       	callq  295fb <__MARSH_WRAP__e1000_down+0x1955>
			295f7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   295fb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   295ff:	4d 8d 44 24 70       	lea    0x70(%r12),%r8
   29604:	4c 89 f2             	mov    %r14,%rdx
   29607:	b9 04 00 00 00       	mov    $0x4,%ecx
   2960c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2960f: R_X86_64_32S	.rodata.str1.1+0x321c
   29613:	e8 00 00 00 00       	callq  29618 <__MARSH_WRAP__e1000_down+0x1972>
			29614: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29618:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2961c:	4d 8d 44 24 78       	lea    0x78(%r12),%r8
   29621:	4c 89 f2             	mov    %r14,%rdx
   29624:	b9 08 00 00 00       	mov    $0x8,%ecx
   29629:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2962c: R_X86_64_32S	.rodata.str1.1+0x321c
   29630:	e8 00 00 00 00       	callq  29635 <__MARSH_WRAP__e1000_down+0x198f>
			29631: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29635:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29639:	4d 8d 84 24 d8 00 00 	lea    0xd8(%r12),%r8
   29640:	00 
   29641:	4c 89 f2             	mov    %r14,%rdx
   29644:	b9 02 00 00 00       	mov    $0x2,%ecx
   29649:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2964c: R_X86_64_32S	.rodata.str1.1+0x321c
   29650:	e8 00 00 00 00       	callq  29655 <__MARSH_WRAP__e1000_down+0x19af>
			29651: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29655:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29659:	4d 8d 44 24 5c       	lea    0x5c(%r12),%r8
   2965e:	4c 89 f2             	mov    %r14,%rdx
   29661:	b9 04 00 00 00       	mov    $0x4,%ecx
   29666:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29669: R_X86_64_32S	.rodata.str1.1+0x321c
   2966d:	e8 00 00 00 00       	callq  29672 <__MARSH_WRAP__e1000_down+0x19cc>
			2966e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29672:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29676:	4d 8d 44 24 6c       	lea    0x6c(%r12),%r8
   2967b:	4c 89 f2             	mov    %r14,%rdx
   2967e:	b9 04 00 00 00       	mov    $0x4,%ecx
   29683:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29686: R_X86_64_32S	.rodata.str1.1+0x321c
   2968a:	e8 00 00 00 00       	callq  2968f <__MARSH_WRAP__e1000_down+0x19e9>
			2968b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2968f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29693:	4d 8d 44 24 40       	lea    0x40(%r12),%r8
   29698:	4c 89 f2             	mov    %r14,%rdx
   2969b:	b9 04 00 00 00       	mov    $0x4,%ecx
   296a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			296a3: R_X86_64_32S	.rodata.str1.1+0x321c
   296a7:	e8 00 00 00 00       	callq  296ac <__MARSH_WRAP__e1000_down+0x1a06>
			296a8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   296ac:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   296b0:	4d 8d 84 24 10 01 00 	lea    0x110(%r12),%r8
   296b7:	00 
   296b8:	4c 89 f2             	mov    %r14,%rdx
   296bb:	b9 01 00 00 00       	mov    $0x1,%ecx
   296c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			296c3: R_X86_64_32S	.rodata.str1.1+0x321c
   296c7:	45 31 f6             	xor    %r14d,%r14d
   296ca:	e8 00 00 00 00       	callq  296cf <__MARSH_WRAP__e1000_down+0x1a29>
			296cb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   296cf:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   296d3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   296d7:	49 89 d8             	mov    %rbx,%r8
   296da:	b9 01 00 00 00       	mov    $0x1,%ecx
   296df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			296e2: R_X86_64_32S	.rodata.str1.1+0x321c
   296e6:	49 ff c6             	inc    %r14
   296e9:	4c 89 ea             	mov    %r13,%rdx
   296ec:	48 ff c3             	inc    %rbx
   296ef:	e8 00 00 00 00       	callq  296f4 <__MARSH_WRAP__e1000_down+0x1a4e>
			296f0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   296f4:	49 83 fe 06          	cmp    $0x6,%r14
   296f8:	75 d5                	jne    296cf <__MARSH_WRAP__e1000_down+0x1a29>
   296fa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   296fe:	4d 8d 84 24 a8 00 00 	lea    0xa8(%r12),%r8
   29705:	00 
   29706:	4c 89 ea             	mov    %r13,%rdx
   29709:	b9 04 00 00 00       	mov    $0x4,%ecx
   2970e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29711: R_X86_64_32S	.rodata.str1.1+0x321c
   29715:	49 8d 5c 24 48       	lea    0x48(%r12),%rbx
   2971a:	e8 00 00 00 00       	callq  2971f <__MARSH_WRAP__e1000_down+0x1a79>
			2971b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2971f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29723:	4d 8d 44 24 3c       	lea    0x3c(%r12),%r8
   29728:	4c 89 ea             	mov    %r13,%rdx
   2972b:	b9 04 00 00 00       	mov    $0x4,%ecx
   29730:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29733: R_X86_64_32S	.rodata.str1.1+0x321c
   29737:	e8 00 00 00 00       	callq  2973c <__MARSH_WRAP__e1000_down+0x1a96>
			29738: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2973c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29740:	4d 8d 84 24 12 01 00 	lea    0x112(%r12),%r8
   29747:	00 
   29748:	4c 89 ea             	mov    %r13,%rdx
   2974b:	b9 01 00 00 00       	mov    $0x1,%ecx
   29750:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29753: R_X86_64_32S	.rodata.str1.1+0x321c
   29757:	e8 00 00 00 00       	callq  2975c <__MARSH_WRAP__e1000_down+0x1ab6>
			29758: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2975c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29760:	4d 8d 84 24 de 00 00 	lea    0xde(%r12),%r8
   29767:	00 
   29768:	b9 02 00 00 00       	mov    $0x2,%ecx
   2976d:	4c 89 ea             	mov    %r13,%rdx
   29770:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29773: R_X86_64_32S	.rodata.str1.1+0x321c
   29777:	e8 00 00 00 00       	callq  2977c <__MARSH_WRAP__e1000_down+0x1ad6>
			29778: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2977c:	89 de                	mov    %ebx,%esi
   2977e:	ba 10 00 00 00       	mov    $0x10,%edx
   29783:	4c 89 e7             	mov    %r12,%rdi
   29786:	44 29 fe             	sub    %r15d,%esi
   29789:	e8 00 00 00 00       	callq  2978e <__MARSH_WRAP__e1000_down+0x1ae8>
			2978a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2978e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29792:	4d 8d 44 24 52       	lea    0x52(%r12),%r8
   29797:	4c 89 ea             	mov    %r13,%rdx
   2979a:	b9 02 00 00 00       	mov    $0x2,%ecx
   2979f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			297a2: R_X86_64_32S	.rodata.str1.1+0x321c
   297a6:	e8 00 00 00 00       	callq  297ab <__MARSH_WRAP__e1000_down+0x1b05>
			297a7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   297ab:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   297af:	4d 8d 44 24 4e       	lea    0x4e(%r12),%r8
   297b4:	4c 89 ea             	mov    %r13,%rdx
   297b7:	b9 02 00 00 00       	mov    $0x2,%ecx
   297bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			297bf: R_X86_64_32S	.rodata.str1.1+0x321c
   297c3:	e8 00 00 00 00       	callq  297c8 <__MARSH_WRAP__e1000_down+0x1b22>
			297c4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   297c8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   297cc:	4d 8d 44 24 4c       	lea    0x4c(%r12),%r8
   297d1:	4c 89 ea             	mov    %r13,%rdx
   297d4:	b9 02 00 00 00       	mov    $0x2,%ecx
   297d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			297dc: R_X86_64_32S	.rodata.str1.1+0x321c
   297e0:	e8 00 00 00 00       	callq  297e5 <__MARSH_WRAP__e1000_down+0x1b3f>
			297e1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   297e5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   297e9:	49 89 d8             	mov    %rbx,%r8
   297ec:	4c 89 ea             	mov    %r13,%rdx
   297ef:	b9 04 00 00 00       	mov    $0x4,%ecx
   297f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			297f7: R_X86_64_32S	.rodata.str1.1+0x321c
   297fb:	49 8d 9c 24 f1 00 00 	lea    0xf1(%r12),%rbx
   29802:	00 
   29803:	e8 00 00 00 00       	callq  29808 <__MARSH_WRAP__e1000_down+0x1b62>
			29804: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29808:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2980c:	4d 8d 44 24 56       	lea    0x56(%r12),%r8
   29811:	4c 89 ea             	mov    %r13,%rdx
   29814:	b9 01 00 00 00       	mov    $0x1,%ecx
   29819:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2981c: R_X86_64_32S	.rodata.str1.1+0x321c
   29820:	e8 00 00 00 00       	callq  29825 <__MARSH_WRAP__e1000_down+0x1b7f>
			29821: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29825:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29829:	4d 8d 44 24 50       	lea    0x50(%r12),%r8
   2982e:	4c 89 ea             	mov    %r13,%rdx
   29831:	b9 02 00 00 00       	mov    $0x2,%ecx
   29836:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29839: R_X86_64_32S	.rodata.str1.1+0x321c
   2983d:	e8 00 00 00 00       	callq  29842 <__MARSH_WRAP__e1000_down+0x1b9c>
			2983e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29842:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29846:	4d 8d 44 24 54       	lea    0x54(%r12),%r8
   2984b:	4c 89 ea             	mov    %r13,%rdx
   2984e:	b9 02 00 00 00       	mov    $0x2,%ecx
   29853:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29856: R_X86_64_32S	.rodata.str1.1+0x321c
   2985a:	e8 00 00 00 00       	callq  2985f <__MARSH_WRAP__e1000_down+0x1bb9>
			2985b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2985f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29863:	4d 8d 44 24 57       	lea    0x57(%r12),%r8
   29868:	4c 89 ea             	mov    %r13,%rdx
   2986b:	b9 01 00 00 00       	mov    $0x1,%ecx
   29870:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29873: R_X86_64_32S	.rodata.str1.1+0x321c
   29877:	e8 00 00 00 00       	callq  2987c <__MARSH_WRAP__e1000_down+0x1bd6>
			29878: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2987c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29880:	4d 8d 84 24 11 01 00 	lea    0x111(%r12),%r8
   29887:	00 
   29888:	4c 89 ea             	mov    %r13,%rdx
   2988b:	b9 01 00 00 00       	mov    $0x1,%ecx
   29890:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29893: R_X86_64_32S	.rodata.str1.1+0x321c
   29897:	e8 00 00 00 00       	callq  2989c <__MARSH_WRAP__e1000_down+0x1bf6>
			29898: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2989c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   298a0:	4d 8d 84 24 08 01 00 	lea    0x108(%r12),%r8
   298a7:	00 
   298a8:	4c 89 ea             	mov    %r13,%rdx
   298ab:	b9 04 00 00 00       	mov    $0x4,%ecx
   298b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			298b3: R_X86_64_32S	.rodata.str1.1+0x321c
   298b7:	e8 00 00 00 00       	callq  298bc <__MARSH_WRAP__e1000_down+0x1c16>
			298b8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   298bc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   298c0:	4d 8d 84 24 1e 01 00 	lea    0x11e(%r12),%r8
   298c7:	00 
   298c8:	4c 89 ea             	mov    %r13,%rdx
   298cb:	b9 01 00 00 00       	mov    $0x1,%ecx
   298d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			298d3: R_X86_64_32S	.rodata.str1.1+0x321c
   298d7:	e8 00 00 00 00       	callq  298dc <__MARSH_WRAP__e1000_down+0x1c36>
			298d8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   298dc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   298e0:	4d 8d 84 24 90 00 00 	lea    0x90(%r12),%r8
   298e7:	00 
   298e8:	4c 89 ea             	mov    %r13,%rdx
   298eb:	b9 04 00 00 00       	mov    $0x4,%ecx
   298f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			298f3: R_X86_64_32S	.rodata.str1.1+0x321c
   298f7:	e8 00 00 00 00       	callq  298fc <__MARSH_WRAP__e1000_down+0x1c56>
			298f8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   298fc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29900:	4d 8d 84 24 f2 00 00 	lea    0xf2(%r12),%r8
   29907:	00 
   29908:	4c 89 ea             	mov    %r13,%rdx
   2990b:	b9 01 00 00 00       	mov    $0x1,%ecx
   29910:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29913: R_X86_64_32S	.rodata.str1.1+0x321c
   29917:	e8 00 00 00 00       	callq  2991c <__MARSH_WRAP__e1000_down+0x1c76>
			29918: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2991c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29920:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
   29925:	4c 89 ea             	mov    %r13,%rdx
   29928:	b9 04 00 00 00       	mov    $0x4,%ecx
   2992d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29930: R_X86_64_32S	.rodata.str1.1+0x321c
   29934:	e8 00 00 00 00       	callq  29939 <__MARSH_WRAP__e1000_down+0x1c93>
			29935: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29939:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2993d:	4d 8d 84 24 da 00 00 	lea    0xda(%r12),%r8
   29944:	00 
   29945:	b9 02 00 00 00       	mov    $0x2,%ecx
   2994a:	4c 89 ea             	mov    %r13,%rdx
   2994d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29950: R_X86_64_32S	.rodata.str1.1+0x321c
   29954:	e8 00 00 00 00       	callq  29959 <__MARSH_WRAP__e1000_down+0x1cb3>
			29955: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29959:	89 de                	mov    %ebx,%esi
   2995b:	ba 01 00 00 00       	mov    $0x1,%edx
   29960:	4c 89 e7             	mov    %r12,%rdi
   29963:	44 29 fe             	sub    %r15d,%esi
   29966:	e8 00 00 00 00       	callq  2996b <__MARSH_WRAP__e1000_down+0x1cc5>
			29967: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2996b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2996f:	49 89 d8             	mov    %rbx,%r8
   29972:	4c 89 ea             	mov    %r13,%rdx
   29975:	b9 01 00 00 00       	mov    $0x1,%ecx
   2997a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2997d: R_X86_64_32S	.rodata.str1.1+0x321c
   29981:	49 8d 5c 24 1c       	lea    0x1c(%r12),%rbx
   29986:	e8 00 00 00 00       	callq  2998b <__MARSH_WRAP__e1000_down+0x1ce5>
			29987: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2998b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2998f:	4d 8d 84 24 17 01 00 	lea    0x117(%r12),%r8
   29996:	00 
   29997:	4c 89 ea             	mov    %r13,%rdx
   2999a:	b9 01 00 00 00       	mov    $0x1,%ecx
   2999f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			299a2: R_X86_64_32S	.rodata.str1.1+0x321c
   299a6:	e8 00 00 00 00       	callq  299ab <__MARSH_WRAP__e1000_down+0x1d05>
			299a7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   299ab:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   299af:	4d 8d 44 24 34       	lea    0x34(%r12),%r8
   299b4:	4c 89 ea             	mov    %r13,%rdx
   299b7:	b9 04 00 00 00       	mov    $0x4,%ecx
   299bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			299bf: R_X86_64_32S	.rodata.str1.1+0x321c
   299c3:	e8 00 00 00 00       	callq  299c8 <__MARSH_WRAP__e1000_down+0x1d22>
			299c4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   299c8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   299cc:	4d 8d 84 24 9c 00 00 	lea    0x9c(%r12),%r8
   299d3:	00 
   299d4:	4c 89 ea             	mov    %r13,%rdx
   299d7:	b9 04 00 00 00       	mov    $0x4,%ecx
   299dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			299df: R_X86_64_32S	.rodata.str1.1+0x321c
   299e3:	e8 00 00 00 00       	callq  299e8 <__MARSH_WRAP__e1000_down+0x1d42>
			299e4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   299e8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   299ec:	4d 8d 84 24 13 01 00 	lea    0x113(%r12),%r8
   299f3:	00 
   299f4:	4c 89 ea             	mov    %r13,%rdx
   299f7:	b9 01 00 00 00       	mov    $0x1,%ecx
   299fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			299ff: R_X86_64_32S	.rodata.str1.1+0x321c
   29a03:	e8 00 00 00 00       	callq  29a08 <__MARSH_WRAP__e1000_down+0x1d62>
			29a04: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29a08:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29a0c:	4d 8d 84 24 ec 00 00 	lea    0xec(%r12),%r8
   29a13:	00 
   29a14:	4c 89 ea             	mov    %r13,%rdx
   29a17:	b9 02 00 00 00       	mov    $0x2,%ecx
   29a1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29a1f: R_X86_64_32S	.rodata.str1.1+0x321c
   29a23:	e8 00 00 00 00       	callq  29a28 <__MARSH_WRAP__e1000_down+0x1d82>
			29a24: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29a28:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29a2c:	4d 8d 44 24 44       	lea    0x44(%r12),%r8
   29a31:	4c 89 ea             	mov    %r13,%rdx
   29a34:	b9 04 00 00 00       	mov    $0x4,%ecx
   29a39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29a3c: R_X86_64_32S	.rodata.str1.1+0x321c
   29a40:	e8 00 00 00 00       	callq  29a45 <__MARSH_WRAP__e1000_down+0x1d9f>
			29a41: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29a45:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29a49:	4d 8d 84 24 1b 01 00 	lea    0x11b(%r12),%r8
   29a50:	00 
   29a51:	4c 89 ea             	mov    %r13,%rdx
   29a54:	b9 01 00 00 00       	mov    $0x1,%ecx
   29a59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29a5c: R_X86_64_32S	.rodata.str1.1+0x321c
   29a60:	e8 00 00 00 00       	callq  29a65 <__MARSH_WRAP__e1000_down+0x1dbf>
			29a61: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29a65:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29a69:	4d 8d 84 24 98 00 00 	lea    0x98(%r12),%r8
   29a70:	00 
   29a71:	4c 89 ea             	mov    %r13,%rdx
   29a74:	b9 04 00 00 00       	mov    $0x4,%ecx
   29a79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29a7c: R_X86_64_32S	.rodata.str1.1+0x321c
   29a80:	e8 00 00 00 00       	callq  29a85 <__MARSH_WRAP__e1000_down+0x1ddf>
			29a81: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29a85:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29a89:	4d 8d 84 24 18 01 00 	lea    0x118(%r12),%r8
   29a90:	00 
   29a91:	4c 89 ea             	mov    %r13,%rdx
   29a94:	b9 01 00 00 00       	mov    $0x1,%ecx
   29a99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29a9c: R_X86_64_32S	.rodata.str1.1+0x321c
   29aa0:	e8 00 00 00 00       	callq  29aa5 <__MARSH_WRAP__e1000_down+0x1dff>
			29aa1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29aa5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29aa9:	4d 8d 84 24 e6 00 00 	lea    0xe6(%r12),%r8
   29ab0:	00 
   29ab1:	4c 89 ea             	mov    %r13,%rdx
   29ab4:	b9 02 00 00 00       	mov    $0x2,%ecx
   29ab9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29abc: R_X86_64_32S	.rodata.str1.1+0x321c
   29ac0:	e8 00 00 00 00       	callq  29ac5 <__MARSH_WRAP__e1000_down+0x1e1f>
			29ac1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29ac5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29ac9:	4d 8d 84 24 dc 00 00 	lea    0xdc(%r12),%r8
   29ad0:	00 
   29ad1:	4c 89 ea             	mov    %r13,%rdx
   29ad4:	b9 02 00 00 00       	mov    $0x2,%ecx
   29ad9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29adc: R_X86_64_32S	.rodata.str1.1+0x321c
   29ae0:	e8 00 00 00 00       	callq  29ae5 <__MARSH_WRAP__e1000_down+0x1e3f>
			29ae1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29ae5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29ae9:	4d 8d 84 24 80 00 00 	lea    0x80(%r12),%r8
   29af0:	00 
   29af1:	4c 89 ea             	mov    %r13,%rdx
   29af4:	b9 04 00 00 00       	mov    $0x4,%ecx
   29af9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29afc: R_X86_64_32S	.rodata.str1.1+0x321c
   29b00:	e8 00 00 00 00       	callq  29b05 <__MARSH_WRAP__e1000_down+0x1e5f>
			29b01: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29b05:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29b09:	4d 8d 44 24 18       	lea    0x18(%r12),%r8
   29b0e:	4c 89 ea             	mov    %r13,%rdx
   29b11:	b9 04 00 00 00       	mov    $0x4,%ecx
   29b16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b19: R_X86_64_32S	.rodata.str1.1+0x321c
   29b1d:	e8 00 00 00 00       	callq  29b22 <__MARSH_WRAP__e1000_down+0x1e7c>
			29b1e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29b22:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29b26:	4d 8d 84 24 bc 00 00 	lea    0xbc(%r12),%r8
   29b2d:	00 
   29b2e:	4c 89 ea             	mov    %r13,%rdx
   29b31:	b9 01 00 00 00       	mov    $0x1,%ecx
   29b36:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b39: R_X86_64_32S	.rodata.str1.1+0x321c
   29b3d:	e8 00 00 00 00       	callq  29b42 <__MARSH_WRAP__e1000_down+0x1e9c>
			29b3e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29b42:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29b46:	4d 8d 84 24 01 01 00 	lea    0x101(%r12),%r8
   29b4d:	00 
   29b4e:	4c 89 ea             	mov    %r13,%rdx
   29b51:	b9 01 00 00 00       	mov    $0x1,%ecx
   29b56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b59: R_X86_64_32S	.rodata.str1.1+0x321c
   29b5d:	e8 00 00 00 00       	callq  29b62 <__MARSH_WRAP__e1000_down+0x1ebc>
			29b5e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29b62:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29b66:	4d 8d 84 24 16 01 00 	lea    0x116(%r12),%r8
   29b6d:	00 
   29b6e:	4c 89 ea             	mov    %r13,%rdx
   29b71:	b9 01 00 00 00       	mov    $0x1,%ecx
   29b76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b79: R_X86_64_32S	.rodata.str1.1+0x321c
   29b7d:	e8 00 00 00 00       	callq  29b82 <__MARSH_WRAP__e1000_down+0x1edc>
			29b7e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29b82:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29b86:	4d 8d 84 24 88 00 00 	lea    0x88(%r12),%r8
   29b8d:	00 
   29b8e:	4c 89 ea             	mov    %r13,%rdx
   29b91:	b9 04 00 00 00       	mov    $0x4,%ecx
   29b96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b99: R_X86_64_32S	.rodata.str1.1+0x321c
   29b9d:	e8 00 00 00 00       	callq  29ba2 <__MARSH_WRAP__e1000_down+0x1efc>
			29b9e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29ba2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29ba6:	4d 8d 84 24 e4 00 00 	lea    0xe4(%r12),%r8
   29bad:	00 
   29bae:	4c 89 ea             	mov    %r13,%rdx
   29bb1:	b9 02 00 00 00       	mov    $0x2,%ecx
   29bb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29bb9: R_X86_64_32S	.rodata.str1.1+0x321c
   29bbd:	e8 00 00 00 00       	callq  29bc2 <__MARSH_WRAP__e1000_down+0x1f1c>
			29bbe: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29bc2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29bc6:	4d 8d 44 24 58       	lea    0x58(%r12),%r8
   29bcb:	4c 89 ea             	mov    %r13,%rdx
   29bce:	b9 04 00 00 00       	mov    $0x4,%ecx
   29bd3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29bd6: R_X86_64_32S	.rodata.str1.1+0x321c
   29bda:	e8 00 00 00 00       	callq  29bdf <__MARSH_WRAP__e1000_down+0x1f39>
			29bdb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29bdf:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29be3:	4d 8d 84 24 ea 00 00 	lea    0xea(%r12),%r8
   29bea:	00 
   29beb:	b9 02 00 00 00       	mov    $0x2,%ecx
   29bf0:	4c 89 ea             	mov    %r13,%rdx
   29bf3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29bf6: R_X86_64_32S	.rodata.str1.1+0x321c
   29bfa:	e8 00 00 00 00       	callq  29bff <__MARSH_WRAP__e1000_down+0x1f59>
			29bfb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29bff:	89 de                	mov    %ebx,%esi
   29c01:	ba 04 00 00 00       	mov    $0x4,%edx
   29c06:	4c 89 e7             	mov    %r12,%rdi
   29c09:	44 29 fe             	sub    %r15d,%esi
   29c0c:	e8 00 00 00 00       	callq  29c11 <__MARSH_WRAP__e1000_down+0x1f6b>
			29c0d: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   29c11:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29c15:	49 89 d8             	mov    %rbx,%r8
   29c18:	4c 89 ea             	mov    %r13,%rdx
   29c1b:	b9 04 00 00 00       	mov    $0x4,%ecx
   29c20:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29c23: R_X86_64_32S	.rodata.str1.1+0x321c
   29c27:	49 8d 9c 24 d4 00 00 	lea    0xd4(%r12),%rbx
   29c2e:	00 
   29c2f:	e8 00 00 00 00       	callq  29c34 <__MARSH_WRAP__e1000_down+0x1f8e>
			29c30: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29c34:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29c38:	4d 8d 44 24 64       	lea    0x64(%r12),%r8
   29c3d:	4c 89 ea             	mov    %r13,%rdx
   29c40:	b9 04 00 00 00       	mov    $0x4,%ecx
   29c45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29c48: R_X86_64_32S	.rodata.str1.1+0x321c
   29c4c:	e8 00 00 00 00       	callq  29c51 <__MARSH_WRAP__e1000_down+0x1fab>
			29c4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29c51:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29c55:	4d 8d 84 24 00 01 00 	lea    0x100(%r12),%r8
   29c5c:	00 
   29c5d:	4c 89 ea             	mov    %r13,%rdx
   29c60:	b9 01 00 00 00       	mov    $0x1,%ecx
   29c65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29c68: R_X86_64_32S	.rodata.str1.1+0x321c
   29c6c:	e8 00 00 00 00       	callq  29c71 <__MARSH_WRAP__e1000_down+0x1fcb>
			29c6d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29c71:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29c75:	4d 8d 84 24 15 01 00 	lea    0x115(%r12),%r8
   29c7c:	00 
   29c7d:	4c 89 ea             	mov    %r13,%rdx
   29c80:	b9 01 00 00 00       	mov    $0x1,%ecx
   29c85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29c88: R_X86_64_32S	.rodata.str1.1+0x321c
   29c8c:	e8 00 00 00 00       	callq  29c91 <__MARSH_WRAP__e1000_down+0x1feb>
			29c8d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29c91:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29c95:	4d 8d 84 24 1d 01 00 	lea    0x11d(%r12),%r8
   29c9c:	00 
   29c9d:	b9 01 00 00 00       	mov    $0x1,%ecx
   29ca2:	4c 89 ea             	mov    %r13,%rdx
   29ca5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29ca8: R_X86_64_32S	.rodata.str1.1+0x321c
   29cac:	e8 00 00 00 00       	callq  29cb1 <__MARSH_WRAP__e1000_down+0x200b>
			29cad: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29cb1:	89 de                	mov    %ebx,%esi
   29cb3:	ba 02 00 00 00       	mov    $0x2,%edx
   29cb8:	4c 89 e7             	mov    %r12,%rdi
   29cbb:	44 29 fe             	sub    %r15d,%esi
   29cbe:	e8 00 00 00 00       	callq  29cc3 <__MARSH_WRAP__e1000_down+0x201d>
			29cbf: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   29cc3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29cc7:	49 89 d8             	mov    %rbx,%r8
   29cca:	4c 89 ea             	mov    %r13,%rdx
   29ccd:	b9 02 00 00 00       	mov    $0x2,%ecx
   29cd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29cd5: R_X86_64_32S	.rodata.str1.1+0x321c
   29cd9:	49 8d 9c 24 f4 00 00 	lea    0xf4(%r12),%rbx
   29ce0:	00 
   29ce1:	e8 00 00 00 00       	callq  29ce6 <__MARSH_WRAP__e1000_down+0x2040>
			29ce2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29ce6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29cea:	4d 8d 44 24 30       	lea    0x30(%r12),%r8
   29cef:	4c 89 ea             	mov    %r13,%rdx
   29cf2:	b9 04 00 00 00       	mov    $0x4,%ecx
   29cf7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29cfa: R_X86_64_32S	.rodata.str1.1+0x321c
   29cfe:	45 31 ed             	xor    %r13d,%r13d
   29d01:	e8 00 00 00 00       	callq  29d06 <__MARSH_WRAP__e1000_down+0x2060>
			29d02: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29d06:	4c 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%r14
   29d0a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29d0e:	49 89 d8             	mov    %rbx,%r8
   29d11:	b9 01 00 00 00       	mov    $0x1,%ecx
   29d16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29d19: R_X86_64_32S	.rodata.str1.1+0x321c
   29d1d:	49 ff c5             	inc    %r13
   29d20:	4c 89 f2             	mov    %r14,%rdx
   29d23:	48 ff c3             	inc    %rbx
   29d26:	e8 00 00 00 00       	callq  29d2b <__MARSH_WRAP__e1000_down+0x2085>
			29d27: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29d2b:	49 83 fd 06          	cmp    $0x6,%r13
   29d2f:	75 d5                	jne    29d06 <__MARSH_WRAP__e1000_down+0x2060>
   29d31:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29d35:	4d 8d 84 24 1f 01 00 	lea    0x11f(%r12),%r8
   29d3c:	00 
   29d3d:	b9 01 00 00 00       	mov    $0x1,%ecx
   29d42:	4c 89 f2             	mov    %r14,%rdx
   29d45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29d48: R_X86_64_32S	.rodata.str1.1+0x321c
   29d4c:	e8 00 00 00 00       	callq  29d51 <__MARSH_WRAP__e1000_down+0x20ab>
			29d4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29d51:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29d55:	4d 8d 84 24 0d 01 00 	lea    0x10d(%r12),%r8
   29d5c:	00 
   29d5d:	b9 01 00 00 00       	mov    $0x1,%ecx
   29d62:	4c 89 f2             	mov    %r14,%rdx
   29d65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29d68: R_X86_64_32S	.rodata.str1.1+0x321c
   29d6c:	e8 00 00 00 00       	callq  29d71 <__MARSH_WRAP__e1000_down+0x20cb>
			29d6d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29d71:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29d75:	4d 8d 84 24 14 01 00 	lea    0x114(%r12),%r8
   29d7c:	00 
   29d7d:	b9 01 00 00 00       	mov    $0x1,%ecx
   29d82:	4c 89 f2             	mov    %r14,%rdx
   29d85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29d88: R_X86_64_32S	.rodata.str1.1+0x321c
   29d8c:	e8 00 00 00 00       	callq  29d91 <__MARSH_WRAP__e1000_down+0x20eb>
			29d8d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29d91:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29d95:	4d 8d 44 24 68       	lea    0x68(%r12),%r8
   29d9a:	b9 04 00 00 00       	mov    $0x4,%ecx
   29d9f:	4c 89 f2             	mov    %r14,%rdx
   29da2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29da5: R_X86_64_32S	.rodata.str1.1+0x321c
   29da9:	e8 00 00 00 00       	callq  29dae <__MARSH_WRAP__e1000_down+0x2108>
			29daa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29dae:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29db2:	4d 8d 84 24 94 00 00 	lea    0x94(%r12),%r8
   29db9:	00 
   29dba:	b9 04 00 00 00       	mov    $0x4,%ecx
   29dbf:	4c 89 f2             	mov    %r14,%rdx
   29dc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29dc5: R_X86_64_32S	.rodata.str1.1+0x321c
   29dc9:	e8 00 00 00 00       	callq  29dce <__MARSH_WRAP__e1000_down+0x2128>
			29dca: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29dce:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29dd2:	4d 8d 84 24 0c 01 00 	lea    0x10c(%r12),%r8
   29dd9:	00 
   29dda:	b9 01 00 00 00       	mov    $0x1,%ecx
   29ddf:	4c 89 f2             	mov    %r14,%rdx
   29de2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29de5: R_X86_64_32S	.rodata.str1.1+0x321c
   29de9:	e8 00 00 00 00       	callq  29dee <__MARSH_WRAP__e1000_down+0x2148>
			29dea: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29dee:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29df2:	4d 8d 84 24 0f 01 00 	lea    0x10f(%r12),%r8
   29df9:	00 
   29dfa:	b9 01 00 00 00       	mov    $0x1,%ecx
   29dff:	4c 89 f2             	mov    %r14,%rdx
   29e02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29e05: R_X86_64_32S	.rodata.str1.1+0x321c
   29e09:	e8 00 00 00 00       	callq  29e0e <__MARSH_WRAP__e1000_down+0x2168>
			29e0a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29e0e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29e12:	4d 8d 84 24 1c 01 00 	lea    0x11c(%r12),%r8
   29e19:	00 
   29e1a:	b9 01 00 00 00       	mov    $0x1,%ecx
   29e1f:	4c 89 f2             	mov    %r14,%rdx
   29e22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29e25: R_X86_64_32S	.rodata.str1.1+0x321c
   29e29:	e8 00 00 00 00       	callq  29e2e <__MARSH_WRAP__e1000_down+0x2188>
			29e2a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29e2e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29e32:	4d 8d 84 24 8c 00 00 	lea    0x8c(%r12),%r8
   29e39:	00 
   29e3a:	b9 04 00 00 00       	mov    $0x4,%ecx
   29e3f:	4c 89 f2             	mov    %r14,%rdx
   29e42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29e45: R_X86_64_32S	.rodata.str1.1+0x321c
   29e49:	e8 00 00 00 00       	callq  29e4e <__MARSH_WRAP__e1000_down+0x21a8>
			29e4a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29e4e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29e52:	4d 8d 84 24 ac 00 00 	lea    0xac(%r12),%r8
   29e59:	00 
   29e5a:	b9 04 00 00 00       	mov    $0x4,%ecx
   29e5f:	4c 89 f2             	mov    %r14,%rdx
   29e62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29e65: R_X86_64_32S	.rodata.str1.1+0x321c
   29e69:	e8 00 00 00 00       	callq  29e6e <__MARSH_WRAP__e1000_down+0x21c8>
			29e6a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29e6e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29e72:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   29e78:	4c 89 e1             	mov    %r12,%rcx
   29e7b:	4c 89 f2             	mov    %r14,%rdx
   29e7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29e81: R_X86_64_32S	.rodata.str1.1+0x321c
   29e85:	e8 00 00 00 00       	callq  29e8a <__MARSH_WRAP__e1000_down+0x21e4>
			29e86: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   29e8a:	49 8b 04 24          	mov    (%r12),%rax
   29e8e:	48 85 c0             	test   %rax,%rax
   29e91:	74 1b                	je     29eae <__MARSH_WRAP__e1000_down+0x2208>
   29e93:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29e97:	49 89 c0             	mov    %rax,%r8
   29e9a:	b9 01 00 00 00       	mov    $0x1,%ecx
   29e9f:	4c 89 f2             	mov    %r14,%rdx
   29ea2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29ea5: R_X86_64_32S	.rodata.str1.1+0x321c
   29ea9:	e8 00 00 00 00       	callq  29eae <__MARSH_WRAP__e1000_down+0x2208>
			29eaa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29eae:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29eb2:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
   29eb7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   29ebd:	4c 89 f2             	mov    %r14,%rdx
   29ec0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29ec3: R_X86_64_32S	.rodata.str1.1+0x321c
   29ec7:	e8 00 00 00 00       	callq  29ecc <__MARSH_WRAP__e1000_down+0x2226>
			29ec8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   29ecc:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   29ed1:	48 85 c0             	test   %rax,%rax
   29ed4:	74 3c                	je     29f12 <__MARSH_WRAP__e1000_down+0x226c>
   29ed6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29eda:	49 89 c0             	mov    %rax,%r8
   29edd:	b9 02 00 00 00       	mov    $0x2,%ecx
   29ee2:	4c 89 f2             	mov    %r14,%rdx
   29ee5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29ee8: R_X86_64_32S	.rodata.str1.1+0x321c
   29eec:	e8 00 00 00 00       	callq  29ef1 <__MARSH_WRAP__e1000_down+0x224b>
			29eed: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29ef1:	4d 8b 44 24 28       	mov    0x28(%r12),%r8
   29ef6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29efa:	b9 01 00 00 00       	mov    $0x1,%ecx
   29eff:	4c 89 f2             	mov    %r14,%rdx
   29f02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29f05: R_X86_64_32S	.rodata.str1.1+0x321c
   29f09:	49 83 c0 02          	add    $0x2,%r8
   29f0d:	e8 00 00 00 00       	callq  29f12 <__MARSH_WRAP__e1000_down+0x226c>
			29f0e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29f12:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29f16:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
   29f1b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   29f21:	4c 89 f2             	mov    %r14,%rdx
   29f24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29f27: R_X86_64_32S	.rodata.str1.1+0x321c
   29f2b:	e8 00 00 00 00       	callq  29f30 <__MARSH_WRAP__e1000_down+0x228a>
			29f2c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   29f30:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   29f35:	48 85 c0             	test   %rax,%rax
   29f38:	74 1b                	je     29f55 <__MARSH_WRAP__e1000_down+0x22af>
   29f3a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29f3e:	49 89 c0             	mov    %rax,%r8
   29f41:	b9 01 00 00 00       	mov    $0x1,%ecx
   29f46:	4c 89 f2             	mov    %r14,%rdx
   29f49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29f4c: R_X86_64_32S	.rodata.str1.1+0x321c
   29f50:	e8 00 00 00 00       	callq  29f55 <__MARSH_WRAP__e1000_down+0x22af>
			29f51: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29f55:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29f59:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29f5d:	b9 04 00 00 00       	mov    $0x4,%ecx
   29f62:	4c 89 f2             	mov    %r14,%rdx
   29f65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29f68: R_X86_64_32S	.rodata.str1.1+0x321c
   29f6c:	49 81 c0 c0 07 00 00 	add    $0x7c0,%r8
   29f73:	e8 00 00 00 00       	callq  29f78 <__MARSH_WRAP__e1000_down+0x22d2>
			29f74: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29f78:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29f7c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29f80:	b9 02 00 00 00       	mov    $0x2,%ecx
   29f85:	4c 89 f2             	mov    %r14,%rdx
   29f88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29f8b: R_X86_64_32S	.rodata.str1.1+0x321c
   29f8f:	49 81 c0 32 01 00 00 	add    $0x132,%r8
   29f96:	e8 00 00 00 00       	callq  29f9b <__MARSH_WRAP__e1000_down+0x22f5>
			29f97: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29f9b:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29f9f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29fa3:	b9 04 00 00 00       	mov    $0x4,%ecx
   29fa8:	4c 89 f2             	mov    %r14,%rdx
   29fab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29fae: R_X86_64_32S	.rodata.str1.1+0x321c
   29fb2:	49 81 c0 d4 07 00 00 	add    $0x7d4,%r8
   29fb9:	e8 00 00 00 00       	callq  29fbe <__MARSH_WRAP__e1000_down+0x2318>
			29fba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29fbe:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   29fc2:	ba 04 00 00 00       	mov    $0x4,%edx
   29fc7:	be d0 01 00 00       	mov    $0x1d0,%esi
   29fcc:	e8 00 00 00 00       	callq  29fd1 <__MARSH_WRAP__e1000_down+0x232b>
			29fcd: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   29fd1:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29fd5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29fd9:	b9 04 00 00 00       	mov    $0x4,%ecx
   29fde:	4c 89 f2             	mov    %r14,%rdx
   29fe1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29fe4: R_X86_64_32S	.rodata.str1.1+0x321c
   29fe8:	49 81 c0 d0 01 00 00 	add    $0x1d0,%r8
   29fef:	e8 00 00 00 00       	callq  29ff4 <__MARSH_WRAP__e1000_down+0x234e>
			29ff0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   29ff4:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   29ff8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   29ffc:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a001:	4c 89 f2             	mov    %r14,%rdx
   2a004:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a007: R_X86_64_32S	.rodata.str1.1+0x321c
   2a00b:	49 81 c0 b8 02 00 00 	add    $0x2b8,%r8
   2a012:	e8 00 00 00 00       	callq  2a017 <__MARSH_WRAP__e1000_down+0x2371>
			2a013: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a017:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a01b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a01f:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a024:	4c 89 f2             	mov    %r14,%rdx
   2a027:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a02a: R_X86_64_32S	.rodata.str1.1+0x321c
   2a02e:	49 81 c0 00 02 00 00 	add    $0x200,%r8
   2a035:	e8 00 00 00 00       	callq  2a03a <__MARSH_WRAP__e1000_down+0x2394>
			2a036: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a03a:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a03e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a042:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a047:	4c 89 f2             	mov    %r14,%rdx
   2a04a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a04d: R_X86_64_32S	.rodata.str1.1+0x321c
   2a051:	49 81 c0 d0 07 00 00 	add    $0x7d0,%r8
   2a058:	e8 00 00 00 00       	callq  2a05d <__MARSH_WRAP__e1000_down+0x23b7>
			2a059: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a05d:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2a061:	ba 04 00 00 00       	mov    $0x4,%edx
   2a066:	be d8 02 00 00       	mov    $0x2d8,%esi
   2a06b:	e8 00 00 00 00       	callq  2a070 <__MARSH_WRAP__e1000_down+0x23ca>
			2a06c: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a070:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a074:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a078:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a07d:	4c 89 f2             	mov    %r14,%rdx
   2a080:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a083: R_X86_64_32S	.rodata.str1.1+0x321c
   2a087:	49 81 c0 d8 02 00 00 	add    $0x2d8,%r8
   2a08e:	e8 00 00 00 00       	callq  2a093 <__MARSH_WRAP__e1000_down+0x23ed>
			2a08f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a093:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2a097:	ba 08 00 00 00       	mov    $0x8,%edx
   2a09c:	be c0 01 00 00       	mov    $0x1c0,%esi
   2a0a1:	e8 00 00 00 00       	callq  2a0a6 <__MARSH_WRAP__e1000_down+0x2400>
			2a0a2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a0a6:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a0aa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a0ae:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a0b3:	4c 89 f2             	mov    %r14,%rdx
   2a0b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a0b9: R_X86_64_32S	.rodata.str1.1+0x321c
   2a0bd:	49 81 c0 c0 01 00 00 	add    $0x1c0,%r8
   2a0c4:	e8 00 00 00 00       	callq  2a0c9 <__MARSH_WRAP__e1000_down+0x2423>
			2a0c5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a0c9:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a0cd:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a0d1:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a0d6:	4c 89 f2             	mov    %r14,%rdx
   2a0d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a0dc: R_X86_64_32S	.rodata.str1.1+0x321c
   2a0e0:	49 81 c0 c0 02 00 00 	add    $0x2c0,%r8
   2a0e7:	e8 00 00 00 00       	callq  2a0ec <__MARSH_WRAP__e1000_down+0x2446>
			2a0e8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a0ec:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2a0f0:	ba b8 00 00 00       	mov    $0xb8,%edx
   2a0f5:	be 00 03 00 00       	mov    $0x300,%esi
   2a0fa:	e8 00 00 00 00       	callq  2a0ff <__MARSH_WRAP__e1000_down+0x2459>
			2a0fb: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a0ff:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2a103:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a107:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a10c:	4c 89 f2             	mov    %r14,%rdx
   2a10f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a112: R_X86_64_32S	.rodata.str1.1+0x321c
   2a116:	48 81 c3 00 03 00 00 	add    $0x300,%rbx
   2a11d:	4c 8d 43 48          	lea    0x48(%rbx),%r8
   2a121:	e8 00 00 00 00       	callq  2a126 <__MARSH_WRAP__e1000_down+0x2480>
			2a122: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a126:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a12a:	4c 8d 43 68          	lea    0x68(%rbx),%r8
   2a12e:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a133:	4c 89 f2             	mov    %r14,%rdx
   2a136:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a139: R_X86_64_32S	.rodata.str1.1+0x321c
   2a13d:	e8 00 00 00 00       	callq  2a142 <__MARSH_WRAP__e1000_down+0x249c>
			2a13e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a142:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a146:	4c 8d 43 18          	lea    0x18(%rbx),%r8
   2a14a:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a14f:	4c 89 f2             	mov    %r14,%rdx
   2a152:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a155: R_X86_64_32S	.rodata.str1.1+0x321c
   2a159:	e8 00 00 00 00       	callq  2a15e <__MARSH_WRAP__e1000_down+0x24b8>
			2a15a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a15e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a162:	4c 8d 83 88 00 00 00 	lea    0x88(%rbx),%r8
   2a169:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a16e:	4c 89 f2             	mov    %r14,%rdx
   2a171:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a174: R_X86_64_32S	.rodata.str1.1+0x321c
   2a178:	e8 00 00 00 00       	callq  2a17d <__MARSH_WRAP__e1000_down+0x24d7>
			2a179: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a17d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a181:	4c 8d 43 40          	lea    0x40(%rbx),%r8
   2a185:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a18a:	4c 89 f2             	mov    %r14,%rdx
   2a18d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a190: R_X86_64_32S	.rodata.str1.1+0x321c
   2a194:	e8 00 00 00 00       	callq  2a199 <__MARSH_WRAP__e1000_down+0x24f3>
			2a195: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a199:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a19d:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   2a1a1:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a1a6:	4c 89 f2             	mov    %r14,%rdx
   2a1a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a1ac: R_X86_64_32S	.rodata.str1.1+0x321c
   2a1b0:	e8 00 00 00 00       	callq  2a1b5 <__MARSH_WRAP__e1000_down+0x250f>
			2a1b1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a1b5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a1b9:	49 89 d8             	mov    %rbx,%r8
   2a1bc:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a1c1:	4c 89 f2             	mov    %r14,%rdx
   2a1c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a1c7: R_X86_64_32S	.rodata.str1.1+0x321c
   2a1cb:	e8 00 00 00 00       	callq  2a1d0 <__MARSH_WRAP__e1000_down+0x252a>
			2a1cc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a1d0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a1d4:	4c 8d 43 78          	lea    0x78(%rbx),%r8
   2a1d8:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a1dd:	4c 89 f2             	mov    %r14,%rdx
   2a1e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a1e3: R_X86_64_32S	.rodata.str1.1+0x321c
   2a1e7:	e8 00 00 00 00       	callq  2a1ec <__MARSH_WRAP__e1000_down+0x2546>
			2a1e8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a1ec:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a1f0:	4c 8d 43 50          	lea    0x50(%rbx),%r8
   2a1f4:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a1f9:	4c 89 f2             	mov    %r14,%rdx
   2a1fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a1ff: R_X86_64_32S	.rodata.str1.1+0x321c
   2a203:	e8 00 00 00 00       	callq  2a208 <__MARSH_WRAP__e1000_down+0x2562>
			2a204: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a208:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a20c:	4c 8d 43 60          	lea    0x60(%rbx),%r8
   2a210:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a215:	4c 89 f2             	mov    %r14,%rdx
   2a218:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a21b: R_X86_64_32S	.rodata.str1.1+0x321c
   2a21f:	e8 00 00 00 00       	callq  2a224 <__MARSH_WRAP__e1000_down+0x257e>
			2a220: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a224:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a228:	4c 8d 83 80 00 00 00 	lea    0x80(%rbx),%r8
   2a22f:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a234:	4c 89 f2             	mov    %r14,%rdx
   2a237:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a23a: R_X86_64_32S	.rodata.str1.1+0x321c
   2a23e:	e8 00 00 00 00       	callq  2a243 <__MARSH_WRAP__e1000_down+0x259d>
			2a23f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a243:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a247:	4c 8d 43 08          	lea    0x8(%rbx),%r8
   2a24b:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a250:	4c 89 f2             	mov    %r14,%rdx
   2a253:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a256: R_X86_64_32S	.rodata.str1.1+0x321c
   2a25a:	e8 00 00 00 00       	callq  2a25f <__MARSH_WRAP__e1000_down+0x25b9>
			2a25b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a25f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a263:	4c 8d 43 28          	lea    0x28(%rbx),%r8
   2a267:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a26c:	4c 89 f2             	mov    %r14,%rdx
   2a26f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a272: R_X86_64_32S	.rodata.str1.1+0x321c
   2a276:	e8 00 00 00 00       	callq  2a27b <__MARSH_WRAP__e1000_down+0x25d5>
			2a277: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a27b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a27f:	4c 8d 83 a0 00 00 00 	lea    0xa0(%rbx),%r8
   2a286:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a28b:	4c 89 f2             	mov    %r14,%rdx
   2a28e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a291: R_X86_64_32S	.rodata.str1.1+0x321c
   2a295:	e8 00 00 00 00       	callq  2a29a <__MARSH_WRAP__e1000_down+0x25f4>
			2a296: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a29a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a29e:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   2a2a2:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a2a7:	4c 89 f2             	mov    %r14,%rdx
   2a2aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a2ad: R_X86_64_32S	.rodata.str1.1+0x321c
   2a2b1:	e8 00 00 00 00       	callq  2a2b6 <__MARSH_WRAP__e1000_down+0x2610>
			2a2b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a2b6:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a2ba:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a2be:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a2c3:	4c 89 f2             	mov    %r14,%rdx
   2a2c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a2c9: R_X86_64_32S	.rodata.str1.1+0x321c
   2a2cd:	49 81 c0 30 01 00 00 	add    $0x130,%r8
   2a2d4:	e8 00 00 00 00       	callq  2a2d9 <__MARSH_WRAP__e1000_down+0x2633>
			2a2d5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a2d9:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a2dd:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a2e1:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a2e6:	4c 89 f2             	mov    %r14,%rdx
   2a2e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a2ec: R_X86_64_32S	.rodata.str1.1+0x321c
   2a2f0:	49 81 c0 a0 00 00 00 	add    $0xa0,%r8
   2a2f7:	e8 00 00 00 00       	callq  2a2fc <__MARSH_WRAP__e1000_down+0x2656>
			2a2f8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a2fc:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2a300:	ba 02 00 00 00       	mov    $0x2,%edx
   2a305:	be b2 00 00 00       	mov    $0xb2,%esi
   2a30a:	e8 00 00 00 00       	callq  2a30f <__MARSH_WRAP__e1000_down+0x2669>
			2a30b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a30f:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a313:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a317:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a31c:	4c 89 f2             	mov    %r14,%rdx
   2a31f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a322: R_X86_64_32S	.rodata.str1.1+0x321c
   2a326:	49 81 c0 b2 00 00 00 	add    $0xb2,%r8
   2a32d:	e8 00 00 00 00       	callq  2a332 <__MARSH_WRAP__e1000_down+0x268c>
			2a32e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a332:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a336:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a33a:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a33f:	4c 89 f2             	mov    %r14,%rdx
   2a342:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a345: R_X86_64_32S	.rodata.str1.1+0x321c
   2a349:	49 81 c0 c6 07 00 00 	add    $0x7c6,%r8
   2a350:	e8 00 00 00 00       	callq  2a355 <__MARSH_WRAP__e1000_down+0x26af>
			2a351: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a355:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2a359:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a35d:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a362:	4c 89 f2             	mov    %r14,%rdx
   2a365:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a368: R_X86_64_32S	.rodata.str1.1+0x321c
   2a36c:	49 81 c0 08 02 00 00 	add    $0x208,%r8
   2a373:	e8 00 00 00 00       	callq  2a378 <__MARSH_WRAP__e1000_down+0x26d2>
			2a374: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a378:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2a37c:	ba 30 00 00 00       	mov    $0x30,%edx
   2a381:	be 90 07 00 00       	mov    $0x790,%esi
   2a386:	e8 00 00 00 00       	callq  2a38b <__MARSH_WRAP__e1000_down+0x26e5>
			2a387: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a38b:	4c 8b 6d b8          	mov    0xffffffffffffffb8(%rbp),%r13
   2a38f:	ba 04 00 00 00       	mov    $0x4,%edx
   2a394:	49 81 c5 90 07 00 00 	add    $0x790,%r13
   2a39b:	49 8d 5d 14          	lea    0x14(%r13),%rbx
   2a39f:	4c 89 ef             	mov    %r13,%rdi
   2a3a2:	89 de                	mov    %ebx,%esi
   2a3a4:	44 29 ee             	sub    %r13d,%esi
   2a3a7:	e8 00 00 00 00       	callq  2a3ac <__MARSH_WRAP__e1000_down+0x2706>
			2a3a8: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a3ac:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a3b0:	49 89 d8             	mov    %rbx,%r8
   2a3b3:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a3b8:	4c 89 f2             	mov    %r14,%rdx
   2a3bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a3be: R_X86_64_32S	.rodata.str1.1+0x321c
   2a3c2:	49 8d 5d 08          	lea    0x8(%r13),%rbx
   2a3c6:	e8 00 00 00 00       	callq  2a3cb <__MARSH_WRAP__e1000_down+0x2725>
			2a3c7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a3cb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a3cf:	4d 8d 45 10          	lea    0x10(%r13),%r8
   2a3d3:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a3d8:	4c 89 f2             	mov    %r14,%rdx
   2a3db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a3de: R_X86_64_32S	.rodata.str1.1+0x321c
   2a3e2:	e8 00 00 00 00       	callq  2a3e7 <__MARSH_WRAP__e1000_down+0x2741>
			2a3e3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a3e7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a3eb:	4d 8d 45 2e          	lea    0x2e(%r13),%r8
   2a3ef:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a3f4:	4c 89 f2             	mov    %r14,%rdx
   2a3f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a3fa: R_X86_64_32S	.rodata.str1.1+0x321c
   2a3fe:	e8 00 00 00 00       	callq  2a403 <__MARSH_WRAP__e1000_down+0x275d>
			2a3ff: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a403:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a407:	4d 8d 45 1c          	lea    0x1c(%r13),%r8
   2a40b:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a410:	4c 89 f2             	mov    %r14,%rdx
   2a413:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a416: R_X86_64_32S	.rodata.str1.1+0x321c
   2a41a:	e8 00 00 00 00       	callq  2a41f <__MARSH_WRAP__e1000_down+0x2779>
			2a41b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a41f:	89 de                	mov    %ebx,%esi
   2a421:	ba 08 00 00 00       	mov    $0x8,%edx
   2a426:	4c 89 ef             	mov    %r13,%rdi
   2a429:	44 29 ee             	sub    %r13d,%esi
   2a42c:	e8 00 00 00 00       	callq  2a431 <__MARSH_WRAP__e1000_down+0x278b>
			2a42d: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a431:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a435:	49 89 d8             	mov    %rbx,%r8
   2a438:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a43d:	4c 89 f2             	mov    %r14,%rdx
   2a440:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a443: R_X86_64_32S	.rodata.str1.1+0x321c
   2a447:	e8 00 00 00 00       	callq  2a44c <__MARSH_WRAP__e1000_down+0x27a6>
			2a448: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a44c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a450:	4d 8d 45 2c          	lea    0x2c(%r13),%r8
   2a454:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a459:	4c 89 f2             	mov    %r14,%rdx
   2a45c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a45f: R_X86_64_32S	.rodata.str1.1+0x321c
   2a463:	e8 00 00 00 00       	callq  2a468 <__MARSH_WRAP__e1000_down+0x27c2>
			2a464: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a468:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a46c:	4d 8d 45 18          	lea    0x18(%r13),%r8
   2a470:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a475:	4c 89 f2             	mov    %r14,%rdx
   2a478:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a47b: R_X86_64_32S	.rodata.str1.1+0x321c
   2a47f:	e8 00 00 00 00       	callq  2a484 <__MARSH_WRAP__e1000_down+0x27de>
			2a480: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a484:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a488:	49 8d 4d 20          	lea    0x20(%r13),%rcx
   2a48c:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   2a492:	4c 89 f2             	mov    %r14,%rdx
   2a495:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a498: R_X86_64_32S	.rodata.str1.1+0x321c
   2a49c:	e8 00 00 00 00       	callq  2a4a1 <__MARSH_WRAP__e1000_down+0x27fb>
			2a49d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2a4a1:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a4a5:	48 85 c0             	test   %rax,%rax
   2a4a8:	0f 84 de 03 00 00    	je     2a88c <__MARSH_WRAP__e1000_down+0x2be6>
   2a4ae:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a4b2:	4c 8d 40 18          	lea    0x18(%rax),%r8
   2a4b6:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a4bb:	4c 89 f2             	mov    %r14,%rdx
   2a4be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a4c1: R_X86_64_32S	.rodata.str1.1+0x321c
   2a4c5:	e8 00 00 00 00       	callq  2a4ca <__MARSH_WRAP__e1000_down+0x2824>
			2a4c6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a4ca:	4d 8b 45 20          	mov    0x20(%r13),%r8
   2a4ce:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a4d2:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a4d7:	4c 89 f2             	mov    %r14,%rdx
   2a4da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a4dd: R_X86_64_32S	.rodata.str1.1+0x321c
   2a4e1:	49 83 c0 10          	add    $0x10,%r8
   2a4e5:	e8 00 00 00 00       	callq  2a4ea <__MARSH_WRAP__e1000_down+0x2844>
			2a4e6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a4ea:	4d 8b 45 20          	mov    0x20(%r13),%r8
   2a4ee:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a4f2:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a4f7:	4c 89 f2             	mov    %r14,%rdx
   2a4fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a4fd: R_X86_64_32S	.rodata.str1.1+0x321c
   2a501:	49 83 c0 1a          	add    $0x1a,%r8
   2a505:	e8 00 00 00 00       	callq  2a50a <__MARSH_WRAP__e1000_down+0x2864>
			2a506: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a50a:	4d 8b 45 20          	mov    0x20(%r13),%r8
   2a50e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a512:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a517:	4c 89 f2             	mov    %r14,%rdx
   2a51a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a51d: R_X86_64_32S	.rodata.str1.1+0x321c
   2a521:	49 83 c0 08          	add    $0x8,%r8
   2a525:	e8 00 00 00 00       	callq  2a52a <__MARSH_WRAP__e1000_down+0x2884>
			2a526: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a52a:	49 8b 4d 20          	mov    0x20(%r13),%rcx
   2a52e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a532:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   2a538:	4c 89 f2             	mov    %r14,%rdx
   2a53b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a53e: R_X86_64_32S	.rodata.str1.1+0x321c
   2a542:	e8 00 00 00 00       	callq  2a547 <__MARSH_WRAP__e1000_down+0x28a1>
			2a543: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2a547:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a54b:	48 83 38 00          	cmpq   $0x0,(%rax)
   2a54f:	0f 84 37 03 00 00    	je     2a88c <__MARSH_WRAP__e1000_down+0x2be6>
   2a555:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2a559:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a55d:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a562:	4c 89 f2             	mov    %r14,%rdx
   2a565:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a568: R_X86_64_32S	.rodata.str1.1+0x321c
   2a56c:	49 89 d8             	mov    %rbx,%r8
   2a56f:	e8 00 00 00 00       	callq  2a574 <__MARSH_WRAP__e1000_down+0x28ce>
			2a570: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a574:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a578:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2a57b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a57e: R_X86_64_32S	.rodata.str1.1+0x321c
   2a582:	48 8b 08             	mov    (%rax),%rcx
   2a585:	83 e2 07             	and    $0x7,%edx
   2a588:	8a 41 7d             	mov    0x7d(%rcx),%al
   2a58b:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   2a58e:	09 d0                	or     %edx,%eax
   2a590:	4c 89 f2             	mov    %r14,%rdx
   2a593:	88 41 7d             	mov    %al,0x7d(%rcx)
   2a596:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a59a:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a59f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a5a3:	4c 8b 00             	mov    (%rax),%r8
   2a5a6:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   2a5ad:	e8 00 00 00 00       	callq  2a5b2 <__MARSH_WRAP__e1000_down+0x290c>
			2a5ae: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a5b2:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a5b6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a5ba:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a5bf:	4c 89 f2             	mov    %r14,%rdx
   2a5c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a5c5: R_X86_64_32S	.rodata.str1.1+0x321c
   2a5c9:	4c 8b 00             	mov    (%rax),%r8
   2a5cc:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   2a5d3:	e8 00 00 00 00       	callq  2a5d8 <__MARSH_WRAP__e1000_down+0x2932>
			2a5d4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a5d8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a5dc:	49 89 d8             	mov    %rbx,%r8
   2a5df:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a5e4:	4c 89 f2             	mov    %r14,%rdx
   2a5e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a5ea: R_X86_64_32S	.rodata.str1.1+0x321c
   2a5ee:	e8 00 00 00 00       	callq  2a5f3 <__MARSH_WRAP__e1000_down+0x294d>
			2a5ef: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a5f3:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a5f7:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2a5fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a5fd: R_X86_64_32S	.rodata.str1.1+0x321c
   2a601:	48 8b 08             	mov    (%rax),%rcx
   2a604:	83 e2 03             	and    $0x3,%edx
   2a607:	c1 e2 02             	shl    $0x2,%edx
   2a60a:	8a 41 7c             	mov    0x7c(%rcx),%al
   2a60d:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   2a610:	09 d0                	or     %edx,%eax
   2a612:	4c 89 f2             	mov    %r14,%rdx
   2a615:	88 41 7c             	mov    %al,0x7c(%rcx)
   2a618:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a61c:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a621:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a625:	4c 8b 00             	mov    (%rax),%r8
   2a628:	49 83 c0 6c          	add    $0x6c,%r8
   2a62c:	e8 00 00 00 00       	callq  2a631 <__MARSH_WRAP__e1000_down+0x298b>
			2a62d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a631:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a635:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a639:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a63e:	4c 89 f2             	mov    %r14,%rdx
   2a641:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a644: R_X86_64_32S	.rodata.str1.1+0x321c
   2a648:	4c 8b 00             	mov    (%rax),%r8
   2a64b:	49 81 c0 a4 00 00 00 	add    $0xa4,%r8
   2a652:	e8 00 00 00 00       	callq  2a657 <__MARSH_WRAP__e1000_down+0x29b1>
			2a653: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a657:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a65b:	49 89 d8             	mov    %rbx,%r8
   2a65e:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a663:	4c 89 f2             	mov    %r14,%rdx
   2a666:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a669: R_X86_64_32S	.rodata.str1.1+0x321c
   2a66d:	e8 00 00 00 00       	callq  2a672 <__MARSH_WRAP__e1000_down+0x29cc>
			2a66e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a672:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a676:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2a679:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a67c: R_X86_64_32S	.rodata.str1.1+0x321c
   2a680:	48 8b 08             	mov    (%rax),%rcx
   2a683:	83 e2 01             	and    $0x1,%edx
   2a686:	01 d2                	add    %edx,%edx
   2a688:	8a 41 7c             	mov    0x7c(%rcx),%al
   2a68b:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   2a68e:	09 d0                	or     %edx,%eax
   2a690:	4c 89 f2             	mov    %r14,%rdx
   2a693:	88 41 7c             	mov    %al,0x7c(%rcx)
   2a696:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a69a:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a69f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a6a3:	4c 8b 00             	mov    (%rax),%r8
   2a6a6:	49 83 c0 76          	add    $0x76,%r8
   2a6aa:	e8 00 00 00 00       	callq  2a6af <__MARSH_WRAP__e1000_down+0x2a09>
			2a6ab: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a6af:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a6b3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a6b7:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a6bc:	4c 89 f2             	mov    %r14,%rdx
   2a6bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a6c2: R_X86_64_32S	.rodata.str1.1+0x321c
   2a6c6:	4c 8b 00             	mov    (%rax),%r8
   2a6c9:	49 83 c0 74          	add    $0x74,%r8
   2a6cd:	e8 00 00 00 00       	callq  2a6d2 <__MARSH_WRAP__e1000_down+0x2a2c>
			2a6ce: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a6d2:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a6d6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a6da:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a6df:	4c 89 f2             	mov    %r14,%rdx
   2a6e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a6e5: R_X86_64_32S	.rodata.str1.1+0x321c
   2a6e9:	4c 8b 00             	mov    (%rax),%r8
   2a6ec:	49 83 c0 68          	add    $0x68,%r8
   2a6f0:	e8 00 00 00 00       	callq  2a6f5 <__MARSH_WRAP__e1000_down+0x2a4f>
			2a6f1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a6f5:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a6f9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a6fd:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a702:	4c 89 f2             	mov    %r14,%rdx
   2a705:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a708: R_X86_64_32S	.rodata.str1.1+0x321c
   2a70c:	4c 8b 00             	mov    (%rax),%r8
   2a70f:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   2a716:	e8 00 00 00 00       	callq  2a71b <__MARSH_WRAP__e1000_down+0x2a75>
			2a717: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a71b:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a71f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a723:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a728:	4c 89 f2             	mov    %r14,%rdx
   2a72b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a72e: R_X86_64_32S	.rodata.str1.1+0x321c
   2a732:	4c 8b 00             	mov    (%rax),%r8
   2a735:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   2a73c:	e8 00 00 00 00       	callq  2a741 <__MARSH_WRAP__e1000_down+0x2a9b>
			2a73d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a741:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a745:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a749:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a74e:	4c 89 f2             	mov    %r14,%rdx
   2a751:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a754: R_X86_64_32S	.rodata.str1.1+0x321c
   2a758:	4c 8b 00             	mov    (%rax),%r8
   2a75b:	49 83 c0 7e          	add    $0x7e,%r8
   2a75f:	e8 00 00 00 00       	callq  2a764 <__MARSH_WRAP__e1000_down+0x2abe>
			2a760: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a764:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a768:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a76c:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a771:	4c 89 f2             	mov    %r14,%rdx
   2a774:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a777: R_X86_64_32S	.rodata.str1.1+0x321c
   2a77b:	4c 8b 00             	mov    (%rax),%r8
   2a77e:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   2a785:	e8 00 00 00 00       	callq  2a78a <__MARSH_WRAP__e1000_down+0x2ae4>
			2a786: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a78a:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a78e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a792:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2a798:	4c 89 f2             	mov    %r14,%rdx
   2a79b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a79e: R_X86_64_32S	.rodata.str1.1+0x321c
   2a7a2:	48 8b 08             	mov    (%rax),%rcx
   2a7a5:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   2a7ac:	e8 00 00 00 00       	callq  2a7b1 <__MARSH_WRAP__e1000_down+0x2b0b>
			2a7ad: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2a7b1:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a7b5:	48 8b 00             	mov    (%rax),%rax
   2a7b8:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   2a7bf:	00 
   2a7c0:	74 71                	je     2a833 <__MARSH_WRAP__e1000_down+0x2b8d>
   2a7c2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a7c6:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   2a7ca:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a7cf:	4c 89 f2             	mov    %r14,%rdx
   2a7d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a7d5: R_X86_64_32S	.rodata.str1.1+0x321c
   2a7d9:	31 db                	xor    %ebx,%ebx
   2a7db:	e8 00 00 00 00       	callq  2a7e0 <__MARSH_WRAP__e1000_down+0x2b3a>
			2a7dc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a7e0:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a7e4:	8b 75 c8             	mov    0xffffffffffffffc8(%rbp),%esi
   2a7e7:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a7ec:	ba 01 00 00 00       	mov    $0x1,%edx
   2a7f1:	48 8b 38             	mov    (%rax),%rdi
   2a7f4:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   2a7fb:	e8 00 00 00 00       	callq  2a800 <__MARSH_WRAP__e1000_down+0x2b5a>
			2a7fc: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   2a800:	eb 2c                	jmp    2a82e <__MARSH_WRAP__e1000_down+0x2b88>
   2a802:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a806:	4c 63 c3             	movslq %ebx,%r8
   2a809:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a80d:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2a811:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a816:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a819: R_X86_64_32S	.rodata.str1.1+0x321c
   2a81d:	ff c3                	inc    %ebx
   2a81f:	48 8b 00             	mov    (%rax),%rax
   2a822:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   2a829:	e8 00 00 00 00       	callq  2a82e <__MARSH_WRAP__e1000_down+0x2b88>
			2a82a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a82e:	3b 5d c8             	cmp    0xffffffffffffffc8(%rbp),%ebx
   2a831:	7c cf                	jl     2a802 <__MARSH_WRAP__e1000_down+0x2b5c>
   2a833:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a837:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2a83b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a83f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2a845:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a848: R_X86_64_32S	.rodata.str1.1+0x321c
   2a84c:	48 89 da             	mov    %rbx,%rdx
   2a84f:	48 8b 08             	mov    (%rax),%rcx
   2a852:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   2a859:	e8 00 00 00 00       	callq  2a85e <__MARSH_WRAP__e1000_down+0x2bb8>
			2a85a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2a85e:	49 8b 45 20          	mov    0x20(%r13),%rax
   2a862:	48 8b 00             	mov    (%rax),%rax
   2a865:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   2a86c:	48 85 c0             	test   %rax,%rax
   2a86f:	74 1b                	je     2a88c <__MARSH_WRAP__e1000_down+0x2be6>
   2a871:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a875:	49 89 c0             	mov    %rax,%r8
   2a878:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a87d:	48 89 da             	mov    %rbx,%rdx
   2a880:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a883: R_X86_64_32S	.rodata.str1.1+0x321c
   2a887:	e8 00 00 00 00       	callq  2a88c <__MARSH_WRAP__e1000_down+0x2be6>
			2a888: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a88c:	4c 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%r14
   2a890:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a894:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   2a89a:	4c 89 e9             	mov    %r13,%rcx
   2a89d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a8a0: R_X86_64_32S	.rodata.str1.1+0x321c
   2a8a4:	4c 89 f2             	mov    %r14,%rdx
   2a8a7:	e8 00 00 00 00       	callq  2a8ac <__MARSH_WRAP__e1000_down+0x2c06>
			2a8a8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2a8ac:	49 8b 45 00          	mov    0x0(%r13),%rax
   2a8b0:	48 85 c0             	test   %rax,%rax
   2a8b3:	0f 84 b8 00 00 00    	je     2a971 <__MARSH_WRAP__e1000_down+0x2ccb>
   2a8b9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a8bd:	4c 8d 40 0e          	lea    0xe(%rax),%r8
   2a8c1:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a8c6:	4c 89 f2             	mov    %r14,%rdx
   2a8c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a8cc: R_X86_64_32S	.rodata.str1.1+0x321c
   2a8d0:	e8 00 00 00 00       	callq  2a8d5 <__MARSH_WRAP__e1000_down+0x2c2f>
			2a8d1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a8d5:	4d 8b 45 00          	mov    0x0(%r13),%r8
   2a8d9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a8dd:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a8e2:	4c 89 f2             	mov    %r14,%rdx
   2a8e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a8e8: R_X86_64_32S	.rodata.str1.1+0x321c
   2a8ec:	49 83 c0 0d          	add    $0xd,%r8
   2a8f0:	e8 00 00 00 00       	callq  2a8f5 <__MARSH_WRAP__e1000_down+0x2c4f>
			2a8f1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a8f5:	4d 8b 45 00          	mov    0x0(%r13),%r8
   2a8f9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a8fd:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a902:	4c 89 f2             	mov    %r14,%rdx
   2a905:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a908: R_X86_64_32S	.rodata.str1.1+0x321c
   2a90c:	49 83 c0 0a          	add    $0xa,%r8
   2a910:	e8 00 00 00 00       	callq  2a915 <__MARSH_WRAP__e1000_down+0x2c6f>
			2a911: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a915:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a919:	4d 8b 45 00          	mov    0x0(%r13),%r8
   2a91d:	b9 08 00 00 00       	mov    $0x8,%ecx
   2a922:	4c 89 f2             	mov    %r14,%rdx
   2a925:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a928: R_X86_64_32S	.rodata.str1.1+0x321c
   2a92c:	e8 00 00 00 00       	callq  2a931 <__MARSH_WRAP__e1000_down+0x2c8b>
			2a92d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a931:	4d 8b 45 00          	mov    0x0(%r13),%r8
   2a935:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a939:	b9 02 00 00 00       	mov    $0x2,%ecx
   2a93e:	4c 89 f2             	mov    %r14,%rdx
   2a941:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a944: R_X86_64_32S	.rodata.str1.1+0x321c
   2a948:	49 83 c0 08          	add    $0x8,%r8
   2a94c:	e8 00 00 00 00       	callq  2a951 <__MARSH_WRAP__e1000_down+0x2cab>
			2a94d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a951:	4d 8b 45 00          	mov    0x0(%r13),%r8
   2a955:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a959:	b9 01 00 00 00       	mov    $0x1,%ecx
   2a95e:	4c 89 f2             	mov    %r14,%rdx
   2a961:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a964: R_X86_64_32S	.rodata.str1.1+0x321c
   2a968:	49 83 c0 0c          	add    $0xc,%r8
   2a96c:	e8 00 00 00 00       	callq  2a971 <__MARSH_WRAP__e1000_down+0x2ccb>
			2a96d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a971:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2a975:	ba 20 00 00 00       	mov    $0x20,%edx
   2a97a:	be 00 07 00 00       	mov    $0x700,%esi
   2a97f:	e8 00 00 00 00       	callq  2a984 <__MARSH_WRAP__e1000_down+0x2cde>
			2a980: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2a984:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2a988:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a98c:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a991:	4c 89 f2             	mov    %r14,%rdx
   2a994:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a997: R_X86_64_32S	.rodata.str1.1+0x321c
   2a99b:	48 81 c3 00 07 00 00 	add    $0x700,%rbx
   2a9a2:	4c 8d 43 18          	lea    0x18(%rbx),%r8
   2a9a6:	e8 00 00 00 00       	callq  2a9ab <__MARSH_WRAP__e1000_down+0x2d05>
			2a9a7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a9ab:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a9af:	49 89 d8             	mov    %rbx,%r8
   2a9b2:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a9b7:	4c 89 f2             	mov    %r14,%rdx
   2a9ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a9bd: R_X86_64_32S	.rodata.str1.1+0x321c
   2a9c1:	e8 00 00 00 00       	callq  2a9c6 <__MARSH_WRAP__e1000_down+0x2d20>
			2a9c2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a9c6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a9ca:	4c 8d 43 1c          	lea    0x1c(%rbx),%r8
   2a9ce:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a9d3:	4c 89 f2             	mov    %r14,%rdx
   2a9d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a9d9: R_X86_64_32S	.rodata.str1.1+0x321c
   2a9dd:	e8 00 00 00 00       	callq  2a9e2 <__MARSH_WRAP__e1000_down+0x2d3c>
			2a9de: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a9e2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2a9e6:	4c 8d 43 14          	lea    0x14(%rbx),%r8
   2a9ea:	b9 04 00 00 00       	mov    $0x4,%ecx
   2a9ef:	4c 89 f2             	mov    %r14,%rdx
   2a9f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2a9f5: R_X86_64_32S	.rodata.str1.1+0x321c
   2a9f9:	e8 00 00 00 00       	callq  2a9fe <__MARSH_WRAP__e1000_down+0x2d58>
			2a9fa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2a9fe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aa02:	4c 8d 43 04          	lea    0x4(%rbx),%r8
   2aa06:	b9 04 00 00 00       	mov    $0x4,%ecx
   2aa0b:	4c 89 f2             	mov    %r14,%rdx
   2aa0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aa11: R_X86_64_32S	.rodata.str1.1+0x321c
   2aa15:	e8 00 00 00 00       	callq  2aa1a <__MARSH_WRAP__e1000_down+0x2d74>
			2aa16: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aa1a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aa1e:	4c 8d 43 0c          	lea    0xc(%rbx),%r8
   2aa22:	b9 04 00 00 00       	mov    $0x4,%ecx
   2aa27:	4c 89 f2             	mov    %r14,%rdx
   2aa2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aa2d: R_X86_64_32S	.rodata.str1.1+0x321c
   2aa31:	e8 00 00 00 00       	callq  2aa36 <__MARSH_WRAP__e1000_down+0x2d90>
			2aa32: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aa36:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aa3a:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   2aa3e:	b9 04 00 00 00       	mov    $0x4,%ecx
   2aa43:	4c 89 f2             	mov    %r14,%rdx
   2aa46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aa49: R_X86_64_32S	.rodata.str1.1+0x321c
   2aa4d:	e8 00 00 00 00       	callq  2aa52 <__MARSH_WRAP__e1000_down+0x2dac>
			2aa4e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aa52:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aa56:	4c 8d 43 08          	lea    0x8(%rbx),%r8
   2aa5a:	b9 04 00 00 00       	mov    $0x4,%ecx
   2aa5f:	4c 89 f2             	mov    %r14,%rdx
   2aa62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aa65: R_X86_64_32S	.rodata.str1.1+0x321c
   2aa69:	e8 00 00 00 00       	callq  2aa6e <__MARSH_WRAP__e1000_down+0x2dc8>
			2aa6a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aa6e:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2aa72:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aa76:	b9 04 00 00 00       	mov    $0x4,%ecx
   2aa7b:	4c 89 f2             	mov    %r14,%rdx
   2aa7e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aa81: R_X86_64_32S	.rodata.str1.1+0x321c
   2aa85:	49 81 c0 d0 02 00 00 	add    $0x2d0,%r8
   2aa8c:	e8 00 00 00 00       	callq  2aa91 <__MARSH_WRAP__e1000_down+0x2deb>
			2aa8d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aa91:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2aa95:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aa99:	b9 08 00 00 00       	mov    $0x8,%ecx
   2aa9e:	4c 89 f2             	mov    %r14,%rdx
   2aaa1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aaa4: R_X86_64_32S	.rodata.str1.1+0x321c
   2aaa8:	49 81 c0 d8 01 00 00 	add    $0x1d8,%r8
   2aaaf:	e8 00 00 00 00       	callq  2aab4 <__MARSH_WRAP__e1000_down+0x2e0e>
			2aab0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aab4:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2aab8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aabc:	b9 01 00 00 00       	mov    $0x1,%ecx
   2aac1:	4c 89 f2             	mov    %r14,%rdx
   2aac4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aac7: R_X86_64_32S	.rodata.str1.1+0x321c
   2aacb:	49 81 c0 09 02 00 00 	add    $0x209,%r8
   2aad2:	e8 00 00 00 00       	callq  2aad7 <__MARSH_WRAP__e1000_down+0x2e31>
			2aad3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aad7:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2aadb:	31 f6                	xor    %esi,%esi
   2aadd:	ba 30 00 00 00       	mov    $0x30,%edx
   2aae2:	e8 00 00 00 00       	callq  2aae7 <__MARSH_WRAP__e1000_down+0x2e41>
			2aae3: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2aae7:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2aaeb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aaef:	b9 08 00 00 00       	mov    $0x8,%ecx
   2aaf4:	4c 89 f2             	mov    %r14,%rdx
   2aaf7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aafa: R_X86_64_32S	.rodata.str1.1+0x321c
   2aafe:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   2ab02:	e8 00 00 00 00       	callq  2ab07 <__MARSH_WRAP__e1000_down+0x2e61>
			2ab03: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ab07:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ab0b:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   2ab0f:	b9 08 00 00 00       	mov    $0x8,%ecx
   2ab14:	4c 89 f2             	mov    %r14,%rdx
   2ab17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ab1a: R_X86_64_32S	.rodata.str1.1+0x321c
   2ab1e:	e8 00 00 00 00       	callq  2ab23 <__MARSH_WRAP__e1000_down+0x2e7d>
			2ab1f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ab23:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ab27:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2ab2b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ab31:	4c 89 f2             	mov    %r14,%rdx
   2ab34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ab37: R_X86_64_32S	.rodata.str1.1+0x321c
   2ab3b:	e8 00 00 00 00       	callq  2ab40 <__MARSH_WRAP__e1000_down+0x2e9a>
			2ab3c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ab40:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2ab44:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ab48:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ab4d:	4c 89 f2             	mov    %r14,%rdx
   2ab50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ab53: R_X86_64_32S	.rodata.str1.1+0x321c
   2ab57:	49 81 c0 f8 01 00 00 	add    $0x1f8,%r8
   2ab5e:	e8 00 00 00 00       	callq  2ab63 <__MARSH_WRAP__e1000_down+0x2ebd>
			2ab5f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ab63:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2ab67:	ba 30 00 00 00       	mov    $0x30,%edx
   2ab6c:	be 30 00 00 00       	mov    $0x30,%esi
   2ab71:	e8 00 00 00 00       	callq  2ab76 <__MARSH_WRAP__e1000_down+0x2ed0>
			2ab72: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2ab76:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2ab7a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ab7e:	b9 08 00 00 00       	mov    $0x8,%ecx
   2ab83:	4c 89 f2             	mov    %r14,%rdx
   2ab86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ab89: R_X86_64_32S	.rodata.str1.1+0x321c
   2ab8d:	48 83 c3 30          	add    $0x30,%rbx
   2ab91:	4c 8d 43 10          	lea    0x10(%rbx),%r8
   2ab95:	e8 00 00 00 00       	callq  2ab9a <__MARSH_WRAP__e1000_down+0x2ef4>
			2ab96: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ab9a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ab9e:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   2aba2:	b9 08 00 00 00       	mov    $0x8,%ecx
   2aba7:	4c 89 f2             	mov    %r14,%rdx
   2abaa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2abad: R_X86_64_32S	.rodata.str1.1+0x321c
   2abb1:	e8 00 00 00 00       	callq  2abb6 <__MARSH_WRAP__e1000_down+0x2f10>
			2abb2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2abb6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2abba:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2abbe:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2abc4:	4c 89 f2             	mov    %r14,%rdx
   2abc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2abca: R_X86_64_32S	.rodata.str1.1+0x321c
   2abce:	e8 00 00 00 00       	callq  2abd3 <__MARSH_WRAP__e1000_down+0x2f2d>
			2abcf: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2abd3:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2abd7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2abdb:	b9 04 00 00 00       	mov    $0x4,%ecx
   2abe0:	4c 89 f2             	mov    %r14,%rdx
   2abe3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2abe6: R_X86_64_32S	.rodata.str1.1+0x321c
   2abea:	49 81 c0 e0 02 00 00 	add    $0x2e0,%r8
   2abf1:	e8 00 00 00 00       	callq  2abf6 <__MARSH_WRAP__e1000_down+0x2f50>
			2abf2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2abf6:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   2abfa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2abfe:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ac03:	4c 89 f2             	mov    %r14,%rdx
   2ac06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ac09: R_X86_64_32S	.rodata.str1.1+0x321c
   2ac0d:	49 81 c0 fc 01 00 00 	add    $0x1fc,%r8
   2ac14:	e8 00 00 00 00       	callq  2ac19 <__MARSH_WRAP__e1000_down+0x2f73>
			2ac15: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ac19:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2ac1d:	ba 08 00 00 00       	mov    $0x8,%edx
   2ac22:	be f0 02 00 00       	mov    $0x2f0,%esi
   2ac27:	e8 00 00 00 00       	callq  2ac2c <__MARSH_WRAP__e1000_down+0x2f86>
			2ac28: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2ac2c:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   2ac30:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ac34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ac37: R_X86_64_32S	.rodata.str1.1+0x321c
   2ac3b:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   2ac41:	4c 89 f2             	mov    %r14,%rdx
   2ac44:	49 81 c4 f0 02 00 00 	add    $0x2f0,%r12
   2ac4b:	4c 89 e1             	mov    %r12,%rcx
   2ac4e:	e8 00 00 00 00       	callq  2ac53 <__MARSH_WRAP__e1000_down+0x2fad>
			2ac4f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ac53:	49 8b 3c 24          	mov    (%r12),%rdi
   2ac57:	48 85 ff             	test   %rdi,%rdi
   2ac5a:	0f 84 2e 08 00 00    	je     2b48e <__MARSH_WRAP__e1000_down+0x37e8>
   2ac60:	ba 08 00 00 00       	mov    $0x8,%edx
   2ac65:	be 10 03 00 00       	mov    $0x310,%esi
   2ac6a:	31 db                	xor    %ebx,%ebx
   2ac6c:	e8 00 00 00 00       	callq  2ac71 <__MARSH_WRAP__e1000_down+0x2fcb>
			2ac6d: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2ac71:	4d 8b 04 24          	mov    (%r12),%r8
   2ac75:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ac79:	b9 08 00 00 00       	mov    $0x8,%ecx
   2ac7e:	4c 89 f2             	mov    %r14,%rdx
   2ac81:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ac84: R_X86_64_32S	.rodata.str1.1+0x321c
   2ac88:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   2ac8f:	e8 00 00 00 00       	callq  2ac94 <__MARSH_WRAP__e1000_down+0x2fee>
			2ac90: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ac94:	4d 8b 04 24          	mov    (%r12),%r8
   2ac98:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ac9c:	b9 02 00 00 00       	mov    $0x2,%ecx
   2aca1:	4c 89 f2             	mov    %r14,%rdx
   2aca4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aca7: R_X86_64_32S	.rodata.str1.1+0x321c
   2acab:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   2acb2:	e8 00 00 00 00       	callq  2acb7 <__MARSH_WRAP__e1000_down+0x3011>
			2acb3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2acb7:	4d 8b 04 24          	mov    (%r12),%r8
   2acbb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2acbf:	b9 08 00 00 00       	mov    $0x8,%ecx
   2acc4:	4c 89 f2             	mov    %r14,%rdx
   2acc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2acca: R_X86_64_32S	.rodata.str1.1+0x321c
   2acce:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   2acd5:	e8 00 00 00 00       	callq  2acda <__MARSH_WRAP__e1000_down+0x3034>
			2acd6: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2acda:	4d 8b 04 24          	mov    (%r12),%r8
   2acde:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ace2:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ace7:	4c 89 f2             	mov    %r14,%rdx
   2acea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aced: R_X86_64_32S	.rodata.str1.1+0x321c
   2acf1:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   2acf8:	e8 00 00 00 00       	callq  2acfd <__MARSH_WRAP__e1000_down+0x3057>
			2acf9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2acfd:	4d 8b 04 24          	mov    (%r12),%r8
   2ad01:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ad05:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ad0a:	4c 89 f2             	mov    %r14,%rdx
   2ad0d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ad10: R_X86_64_32S	.rodata.str1.1+0x321c
   2ad14:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   2ad1b:	e8 00 00 00 00       	callq  2ad20 <__MARSH_WRAP__e1000_down+0x307a>
			2ad1c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ad20:	49 8b 0c 24          	mov    (%r12),%rcx
   2ad24:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ad28:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ad2e:	4c 89 f2             	mov    %r14,%rdx
   2ad31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ad34: R_X86_64_32S	.rodata.str1.1+0x321c
   2ad38:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   2ad3f:	e8 00 00 00 00       	callq  2ad44 <__MARSH_WRAP__e1000_down+0x309e>
			2ad40: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ad44:	49 8b 0c 24          	mov    (%r12),%rcx
   2ad48:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ad4c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ad52:	4c 89 f2             	mov    %r14,%rdx
   2ad55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ad58: R_X86_64_32S	.rodata.str1.1+0x321c
   2ad5c:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   2ad63:	e8 00 00 00 00       	callq  2ad68 <__MARSH_WRAP__e1000_down+0x30c2>
			2ad64: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ad68:	49 8b 0c 24          	mov    (%r12),%rcx
   2ad6c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ad70:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ad76:	4c 89 f2             	mov    %r14,%rdx
   2ad79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ad7c: R_X86_64_32S	.rodata.str1.1+0x321c
   2ad80:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   2ad87:	e8 00 00 00 00       	callq  2ad8c <__MARSH_WRAP__e1000_down+0x30e6>
			2ad88: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ad8c:	4d 8b 04 24          	mov    (%r12),%r8
   2ad90:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ad94:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2ad98:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ad9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ada0: R_X86_64_32S	.rodata.str1.1+0x321c
   2ada4:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   2adab:	49 01 d8             	add    %rbx,%r8
   2adae:	48 ff c3             	inc    %rbx
   2adb1:	e8 00 00 00 00       	callq  2adb6 <__MARSH_WRAP__e1000_down+0x3110>
			2adb2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2adb6:	48 83 fb 20          	cmp    $0x20,%rbx
   2adba:	75 d0                	jne    2ad8c <__MARSH_WRAP__e1000_down+0x30e6>
   2adbc:	30 db                	xor    %bl,%bl
   2adbe:	4d 8b 04 24          	mov    (%r12),%r8
   2adc2:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2adc6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2adca:	b9 01 00 00 00       	mov    $0x1,%ecx
   2adcf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2add2: R_X86_64_32S	.rodata.str1.1+0x321c
   2add6:	4c 89 ea             	mov    %r13,%rdx
   2add9:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   2ade0:	49 01 d8             	add    %rbx,%r8
   2ade3:	48 ff c3             	inc    %rbx
   2ade6:	e8 00 00 00 00       	callq  2adeb <__MARSH_WRAP__e1000_down+0x3145>
			2ade7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2adeb:	48 83 fb 20          	cmp    $0x20,%rbx
   2adef:	75 cd                	jne    2adbe <__MARSH_WRAP__e1000_down+0x3118>
   2adf1:	4d 8b 04 24          	mov    (%r12),%r8
   2adf5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2adf9:	b9 02 00 00 00       	mov    $0x2,%ecx
   2adfe:	4c 89 ea             	mov    %r13,%rdx
   2ae01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ae04: R_X86_64_32S	.rodata.str1.1+0x321c
   2ae08:	30 db                	xor    %bl,%bl
   2ae0a:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   2ae11:	e8 00 00 00 00       	callq  2ae16 <__MARSH_WRAP__e1000_down+0x3170>
			2ae12: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ae16:	49 8b 3c 24          	mov    (%r12),%rdi
   2ae1a:	ba 08 00 00 00       	mov    $0x8,%edx
   2ae1f:	be 48 00 00 00       	mov    $0x48,%esi
   2ae24:	e8 00 00 00 00       	callq  2ae29 <__MARSH_WRAP__e1000_down+0x3183>
			2ae25: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2ae29:	4d 8b 04 24          	mov    (%r12),%r8
   2ae2d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ae31:	b9 08 00 00 00       	mov    $0x8,%ecx
   2ae36:	4c 89 ea             	mov    %r13,%rdx
   2ae39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ae3c: R_X86_64_32S	.rodata.str1.1+0x321c
   2ae40:	49 83 c0 48          	add    $0x48,%r8
   2ae44:	e8 00 00 00 00       	callq  2ae49 <__MARSH_WRAP__e1000_down+0x31a3>
			2ae45: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ae49:	4d 8b 04 24          	mov    (%r12),%r8
   2ae4d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ae51:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2ae55:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ae5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ae5d: R_X86_64_32S	.rodata.str1.1+0x321c
   2ae61:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   2ae68:	49 01 d8             	add    %rbx,%r8
   2ae6b:	48 ff c3             	inc    %rbx
   2ae6e:	e8 00 00 00 00       	callq  2ae73 <__MARSH_WRAP__e1000_down+0x31cd>
			2ae6f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ae73:	48 83 fb 20          	cmp    $0x20,%rbx
   2ae77:	75 d0                	jne    2ae49 <__MARSH_WRAP__e1000_down+0x31a3>
   2ae79:	30 db                	xor    %bl,%bl
   2ae7b:	49 89 d8             	mov    %rbx,%r8
   2ae7e:	4d 03 04 24          	add    (%r12),%r8
   2ae82:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2ae86:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ae8a:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ae8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ae92: R_X86_64_32S	.rodata.str1.1+0x321c
   2ae96:	4c 89 ea             	mov    %r13,%rdx
   2ae99:	48 ff c3             	inc    %rbx
   2ae9c:	e8 00 00 00 00       	callq  2aea1 <__MARSH_WRAP__e1000_down+0x31fb>
			2ae9d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aea1:	48 83 fb 10          	cmp    $0x10,%rbx
   2aea5:	75 d4                	jne    2ae7b <__MARSH_WRAP__e1000_down+0x31d5>
   2aea7:	49 8b 3c 24          	mov    (%r12),%rdi
   2aeab:	ba 10 00 00 00       	mov    $0x10,%edx
   2aeb0:	be 18 04 00 00       	mov    $0x418,%esi
   2aeb5:	30 db                	xor    %bl,%bl
   2aeb7:	e8 00 00 00 00       	callq  2aebc <__MARSH_WRAP__e1000_down+0x3216>
			2aeb8: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2aebc:	4d 8b 04 24          	mov    (%r12),%r8
   2aec0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aec4:	b9 01 00 00 00       	mov    $0x1,%ecx
   2aec9:	4c 89 ea             	mov    %r13,%rdx
   2aecc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aecf: R_X86_64_32S	.rodata.str1.1+0x321c
   2aed3:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   2aeda:	e8 00 00 00 00       	callq  2aedf <__MARSH_WRAP__e1000_down+0x3239>
			2aedb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2aedf:	4d 8b 04 24          	mov    (%r12),%r8
   2aee3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2aee7:	b9 04 00 00 00       	mov    $0x4,%ecx
   2aeec:	4c 89 ea             	mov    %r13,%rdx
   2aeef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aef2: R_X86_64_32S	.rodata.str1.1+0x321c
   2aef6:	49 81 c0 e0 01 00 00 	add    $0x1e0,%r8
   2aefd:	e8 00 00 00 00       	callq  2af02 <__MARSH_WRAP__e1000_down+0x325c>
			2aefe: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2af02:	4d 8b 04 24          	mov    (%r12),%r8
   2af06:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2af0a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2af0e:	b9 01 00 00 00       	mov    $0x1,%ecx
   2af13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2af16: R_X86_64_32S	.rodata.str1.1+0x321c
   2af1a:	4c 89 ea             	mov    %r13,%rdx
   2af1d:	49 81 c0 60 05 00 00 	add    $0x560,%r8
   2af24:	49 01 d8             	add    %rbx,%r8
   2af27:	48 ff c3             	inc    %rbx
   2af2a:	e8 00 00 00 00       	callq  2af2f <__MARSH_WRAP__e1000_down+0x3289>
			2af2b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2af2f:	48 83 fb 14          	cmp    $0x14,%rbx
   2af33:	75 cd                	jne    2af02 <__MARSH_WRAP__e1000_down+0x325c>
   2af35:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2af39:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2af3d:	b9 04 00 00 00       	mov    $0x4,%ecx
   2af42:	4c 89 ea             	mov    %r13,%rdx
   2af45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2af48: R_X86_64_32S	.rodata.str1.1+0x321c
   2af4c:	49 89 d8             	mov    %rbx,%r8
   2af4f:	e8 00 00 00 00       	callq  2af54 <__MARSH_WRAP__e1000_down+0x32ae>
			2af50: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2af54:	49 8b 0c 24          	mov    (%r12),%rcx
   2af58:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2af5b:	49 89 d8             	mov    %rbx,%r8
   2af5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2af61: R_X86_64_32S	.rodata.str1.1+0x321c
   2af65:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   2af6b:	83 e2 01             	and    $0x1,%edx
   2af6e:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   2af71:	09 d0                	or     %edx,%eax
   2af73:	4c 89 ea             	mov    %r13,%rdx
   2af76:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   2af7c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2af80:	b9 04 00 00 00       	mov    $0x4,%ecx
   2af85:	e8 00 00 00 00       	callq  2af8a <__MARSH_WRAP__e1000_down+0x32e4>
			2af86: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2af8a:	49 8b 0c 24          	mov    (%r12),%rcx
   2af8e:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2af91:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   2af97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2af9a: R_X86_64_32S	.rodata.str1.1+0x321c
   2af9e:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   2afa4:	83 e2 01             	and    $0x1,%edx
   2afa7:	01 d2                	add    %edx,%edx
   2afa9:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   2afac:	09 d0                	or     %edx,%eax
   2afae:	4c 89 ea             	mov    %r13,%rdx
   2afb1:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   2afb7:	49 8b 0c 24          	mov    (%r12),%rcx
   2afbb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2afbf:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   2afc6:	e8 00 00 00 00       	callq  2afcb <__MARSH_WRAP__e1000_down+0x3325>
			2afc7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2afcb:	49 8b 04 24          	mov    (%r12),%rax
   2afcf:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   2afd6:	48 85 c0             	test   %rax,%rax
   2afd9:	0f 84 e5 00 00 00    	je     2b0c4 <__MARSH_WRAP__e1000_down+0x341e>
   2afdf:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2afe3:	48 8d 48 18          	lea    0x18(%rax),%rcx
   2afe7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2afed:	4c 89 ea             	mov    %r13,%rdx
   2aff0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2aff3: R_X86_64_32S	.rodata.str1.1+0x321c
   2aff7:	e8 00 00 00 00       	callq  2affc <__MARSH_WRAP__e1000_down+0x3356>
			2aff8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2affc:	49 8b 04 24          	mov    (%r12),%rax
   2b000:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b004:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b00a:	4c 89 ea             	mov    %r13,%rdx
   2b00d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b010: R_X86_64_32S	.rodata.str1.1+0x321c
   2b014:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2b01b:	48 83 c1 20          	add    $0x20,%rcx
   2b01f:	e8 00 00 00 00       	callq  2b024 <__MARSH_WRAP__e1000_down+0x337e>
			2b020: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b024:	49 8b 04 24          	mov    (%r12),%rax
   2b028:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b02c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b032:	4c 89 ea             	mov    %r13,%rdx
   2b035:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b038: R_X86_64_32S	.rodata.str1.1+0x321c
   2b03c:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2b043:	48 83 c1 30          	add    $0x30,%rcx
   2b047:	e8 00 00 00 00       	callq  2b04c <__MARSH_WRAP__e1000_down+0x33a6>
			2b048: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b04c:	49 8b 04 24          	mov    (%r12),%rax
   2b050:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b054:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b05a:	4c 89 ea             	mov    %r13,%rdx
   2b05d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b060: R_X86_64_32S	.rodata.str1.1+0x321c
   2b064:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2b06b:	48 83 c1 10          	add    $0x10,%rcx
   2b06f:	e8 00 00 00 00       	callq  2b074 <__MARSH_WRAP__e1000_down+0x33ce>
			2b070: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b074:	49 8b 04 24          	mov    (%r12),%rax
   2b078:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b07c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b082:	4c 89 ea             	mov    %r13,%rdx
   2b085:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b088: R_X86_64_32S	.rodata.str1.1+0x321c
   2b08c:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2b093:	48 83 c1 28          	add    $0x28,%rcx
   2b097:	e8 00 00 00 00       	callq  2b09c <__MARSH_WRAP__e1000_down+0x33f6>
			2b098: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b09c:	49 8b 04 24          	mov    (%r12),%rax
   2b0a0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b0a4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b0aa:	4c 89 ea             	mov    %r13,%rdx
   2b0ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b0b0: R_X86_64_32S	.rodata.str1.1+0x321c
   2b0b4:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2b0bb:	48 83 c1 08          	add    $0x8,%rcx
   2b0bf:	e8 00 00 00 00       	callq  2b0c4 <__MARSH_WRAP__e1000_down+0x341e>
			2b0c0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b0c4:	4d 8b 04 24          	mov    (%r12),%r8
   2b0c8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b0cc:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b0d1:	4c 89 ea             	mov    %r13,%rdx
   2b0d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b0d7: R_X86_64_32S	.rodata.str1.1+0x321c
   2b0db:	49 81 c0 20 06 00 00 	add    $0x620,%r8
   2b0e2:	e8 00 00 00 00       	callq  2b0e7 <__MARSH_WRAP__e1000_down+0x3441>
			2b0e3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b0e7:	49 8b 0c 24          	mov    (%r12),%rcx
   2b0eb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b0ef:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   2b0f5:	4c 89 ea             	mov    %r13,%rdx
   2b0f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b0fb: R_X86_64_32S	.rodata.str1.1+0x321c
   2b0ff:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   2b106:	e8 00 00 00 00       	callq  2b10b <__MARSH_WRAP__e1000_down+0x3465>
			2b107: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b10b:	49 8b 0c 24          	mov    (%r12),%rcx
   2b10f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b113:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   2b119:	4c 89 ea             	mov    %r13,%rdx
   2b11c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b11f: R_X86_64_32S	.rodata.str1.1+0x321c
   2b123:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   2b12a:	e8 00 00 00 00       	callq  2b12f <__MARSH_WRAP__e1000_down+0x3489>
			2b12b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b12f:	49 8b 0c 24          	mov    (%r12),%rcx
   2b133:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b137:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2b13d:	4c 89 ea             	mov    %r13,%rdx
   2b140:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b143: R_X86_64_32S	.rodata.str1.1+0x321c
   2b147:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   2b14e:	e8 00 00 00 00       	callq  2b153 <__MARSH_WRAP__e1000_down+0x34ad>
			2b14f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b153:	49 8b 04 24          	mov    (%r12),%rax
   2b157:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
   2b15e:	48 85 c0             	test   %rax,%rax
   2b161:	74 1b                	je     2b17e <__MARSH_WRAP__e1000_down+0x34d8>
   2b163:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b167:	49 89 c0             	mov    %rax,%r8
   2b16a:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b16f:	4c 89 ea             	mov    %r13,%rdx
   2b172:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b175: R_X86_64_32S	.rodata.str1.1+0x321c
   2b179:	e8 00 00 00 00       	callq  2b17e <__MARSH_WRAP__e1000_down+0x34d8>
			2b17a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b17e:	4d 8b 04 24          	mov    (%r12),%r8
   2b182:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b186:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b18b:	4c 89 ea             	mov    %r13,%rdx
   2b18e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b191: R_X86_64_32S	.rodata.str1.1+0x321c
   2b195:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   2b19c:	e8 00 00 00 00       	callq  2b1a1 <__MARSH_WRAP__e1000_down+0x34fb>
			2b19d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b1a1:	4d 8b 04 24          	mov    (%r12),%r8
   2b1a5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b1a9:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b1ae:	4c 89 ea             	mov    %r13,%rdx
   2b1b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b1b4: R_X86_64_32S	.rodata.str1.1+0x321c
   2b1b8:	49 83 c0 70          	add    $0x70,%r8
   2b1bc:	e8 00 00 00 00       	callq  2b1c1 <__MARSH_WRAP__e1000_down+0x351b>
			2b1bd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b1c1:	49 8b 3c 24          	mov    (%r12),%rdi
   2b1c5:	ba 10 00 00 00       	mov    $0x10,%edx
   2b1ca:	be 10 00 00 00       	mov    $0x10,%esi
   2b1cf:	e8 00 00 00 00       	callq  2b1d4 <__MARSH_WRAP__e1000_down+0x352e>
			2b1d0: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2b1d4:	4d 8b 04 24          	mov    (%r12),%r8
   2b1d8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b1dc:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b1e1:	4c 89 ea             	mov    %r13,%rdx
   2b1e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b1e7: R_X86_64_32S	.rodata.str1.1+0x321c
   2b1eb:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   2b1f2:	e8 00 00 00 00       	callq  2b1f7 <__MARSH_WRAP__e1000_down+0x3551>
			2b1f3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b1f7:	4d 8b 04 24          	mov    (%r12),%r8
   2b1fb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b1ff:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b204:	4c 89 ea             	mov    %r13,%rdx
   2b207:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b20a: R_X86_64_32S	.rodata.str1.1+0x321c
   2b20e:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   2b215:	e8 00 00 00 00       	callq  2b21a <__MARSH_WRAP__e1000_down+0x3574>
			2b216: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b21a:	4d 8b 04 24          	mov    (%r12),%r8
   2b21e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b222:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b227:	4c 89 ea             	mov    %r13,%rdx
   2b22a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b22d: R_X86_64_32S	.rodata.str1.1+0x321c
   2b231:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   2b238:	e8 00 00 00 00       	callq  2b23d <__MARSH_WRAP__e1000_down+0x3597>
			2b239: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b23d:	49 8b 0c 24          	mov    (%r12),%rcx
   2b241:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b245:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2b24b:	4c 89 ea             	mov    %r13,%rdx
   2b24e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b251: R_X86_64_32S	.rodata.str1.1+0x321c
   2b255:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   2b25c:	e8 00 00 00 00       	callq  2b261 <__MARSH_WRAP__e1000_down+0x35bb>
			2b25d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b261:	49 8b 04 24          	mov    (%r12),%rax
   2b265:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   2b26c:	00 
   2b26d:	74 5d                	je     2b2cc <__MARSH_WRAP__e1000_down+0x3626>
   2b26f:	31 db                	xor    %ebx,%ebx
   2b271:	49 8b 04 24          	mov    (%r12),%rax
   2b275:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2b279:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b27d:	b9 01 00 00 00       	mov    $0x1,%ecx
   2b282:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b285: R_X86_64_32S	.rodata.str1.1+0x321c
   2b289:	4c 89 ea             	mov    %r13,%rdx
   2b28c:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   2b293:	49 83 c0 08          	add    $0x8,%r8
   2b297:	49 01 d8             	add    %rbx,%r8
   2b29a:	48 ff c3             	inc    %rbx
   2b29d:	e8 00 00 00 00       	callq  2b2a2 <__MARSH_WRAP__e1000_down+0x35fc>
			2b29e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b2a2:	48 83 fb 20          	cmp    $0x20,%rbx
   2b2a6:	75 c9                	jne    2b271 <__MARSH_WRAP__e1000_down+0x35cb>
   2b2a8:	49 8b 04 24          	mov    (%r12),%rax
   2b2ac:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b2b0:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2b2b6:	4c 89 ea             	mov    %r13,%rdx
   2b2b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b2bc: R_X86_64_32S	.rodata.str1.1+0x321c
   2b2c0:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   2b2c7:	e8 00 00 00 00       	callq  2b2cc <__MARSH_WRAP__e1000_down+0x3626>
			2b2c8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b2cc:	49 8b 0c 24          	mov    (%r12),%rcx
   2b2d0:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2b2d4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b2d8:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   2b2de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b2e1: R_X86_64_32S	.rodata.str1.1+0x321c
   2b2e5:	48 89 da             	mov    %rbx,%rdx
   2b2e8:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   2b2ef:	e8 00 00 00 00       	callq  2b2f4 <__MARSH_WRAP__e1000_down+0x364e>
			2b2f0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b2f4:	49 8b 0c 24          	mov    (%r12),%rcx
   2b2f8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b2fc:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   2b302:	48 89 da             	mov    %rbx,%rdx
   2b305:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b308: R_X86_64_32S	.rodata.str1.1+0x321c
   2b30c:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   2b313:	e8 00 00 00 00       	callq  2b318 <__MARSH_WRAP__e1000_down+0x3672>
			2b314: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b318:	49 8b 04 24          	mov    (%r12),%rax
   2b31c:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   2b323:	48 85 c0             	test   %rax,%rax
   2b326:	74 45                	je     2b36d <__MARSH_WRAP__e1000_down+0x36c7>
   2b328:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b32c:	48 8d 48 60          	lea    0x60(%rax),%rcx
   2b330:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b336:	48 89 da             	mov    %rbx,%rdx
   2b339:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b33c: R_X86_64_32S	.rodata.str1.1+0x321c
   2b340:	e8 00 00 00 00       	callq  2b345 <__MARSH_WRAP__e1000_down+0x369f>
			2b341: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b345:	49 8b 04 24          	mov    (%r12),%rax
   2b349:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b34d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b353:	48 89 da             	mov    %rbx,%rdx
   2b356:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b359: R_X86_64_32S	.rodata.str1.1+0x321c
   2b35d:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   2b364:	48 83 c1 58          	add    $0x58,%rcx
   2b368:	e8 00 00 00 00       	callq  2b36d <__MARSH_WRAP__e1000_down+0x36c7>
			2b369: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b36d:	49 8b 0c 24          	mov    (%r12),%rcx
   2b371:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b375:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b378: R_X86_64_32S	.rodata.str1.1+0x321c
   2b37c:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   2b382:	48 89 da             	mov    %rbx,%rdx
   2b385:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   2b38c:	e8 00 00 00 00       	callq  2b391 <__MARSH_WRAP__e1000_down+0x36eb>
			2b38d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b391:	49 8b 04 24          	mov    (%r12),%rax
   2b395:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   2b39c:	48 85 ff             	test   %rdi,%rdi
   2b39f:	74 5e                	je     2b3ff <__MARSH_WRAP__e1000_down+0x3759>
   2b3a1:	ba 08 00 00 00       	mov    $0x8,%edx
   2b3a6:	be 10 00 00 00       	mov    $0x10,%esi
   2b3ab:	e8 00 00 00 00       	callq  2b3b0 <__MARSH_WRAP__e1000_down+0x370a>
			2b3ac: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2b3b0:	49 8b 04 24          	mov    (%r12),%rax
   2b3b4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b3b8:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b3bd:	48 89 da             	mov    %rbx,%rdx
   2b3c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b3c3: R_X86_64_32S	.rodata.str1.1+0x321c
   2b3c7:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   2b3ce:	49 83 c0 10          	add    $0x10,%r8
   2b3d2:	e8 00 00 00 00       	callq  2b3d7 <__MARSH_WRAP__e1000_down+0x3731>
			2b3d3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b3d7:	49 8b 04 24          	mov    (%r12),%rax
   2b3db:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b3df:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   2b3e5:	48 89 da             	mov    %rbx,%rdx
   2b3e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b3eb: R_X86_64_32S	.rodata.str1.1+0x321c
   2b3ef:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   2b3f6:	48 83 c1 08          	add    $0x8,%rcx
   2b3fa:	e8 00 00 00 00       	callq  2b3ff <__MARSH_WRAP__e1000_down+0x3759>
			2b3fb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b3ff:	49 8b 0c 24          	mov    (%r12),%rcx
   2b403:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b407:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2b40d:	48 89 da             	mov    %rbx,%rdx
   2b410:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b413: R_X86_64_32S	.rodata.str1.1+0x321c
   2b417:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   2b41e:	e8 00 00 00 00       	callq  2b423 <__MARSH_WRAP__e1000_down+0x377d>
			2b41f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b423:	49 8b 04 24          	mov    (%r12),%rax
   2b427:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   2b42e:	00 
   2b42f:	74 5d                	je     2b48e <__MARSH_WRAP__e1000_down+0x37e8>
   2b431:	31 db                	xor    %ebx,%ebx
   2b433:	49 8b 04 24          	mov    (%r12),%rax
   2b437:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2b43b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b43f:	b9 01 00 00 00       	mov    $0x1,%ecx
   2b444:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b447: R_X86_64_32S	.rodata.str1.1+0x321c
   2b44b:	4c 89 ea             	mov    %r13,%rdx
   2b44e:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   2b455:	49 83 c0 08          	add    $0x8,%r8
   2b459:	49 01 d8             	add    %rbx,%r8
   2b45c:	48 ff c3             	inc    %rbx
   2b45f:	e8 00 00 00 00       	callq  2b464 <__MARSH_WRAP__e1000_down+0x37be>
			2b460: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b464:	48 83 fb 20          	cmp    $0x20,%rbx
   2b468:	75 c9                	jne    2b433 <__MARSH_WRAP__e1000_down+0x378d>
   2b46a:	49 8b 04 24          	mov    (%r12),%rax
   2b46e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b472:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2b478:	4c 89 ea             	mov    %r13,%rdx
   2b47b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b47e: R_X86_64_32S	.rodata.str1.1+0x321c
   2b482:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   2b489:	e8 00 00 00 00       	callq  2b48e <__MARSH_WRAP__e1000_down+0x37e8>
			2b48a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b48e:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2b492:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2b496:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b49a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b49d: R_X86_64_32S	.rodata.str1.1+0x321c
   2b4a1:	41 b8 30 00 00 00    	mov    $0x30,%r8d
   2b4a7:	4c 89 e2             	mov    %r12,%rdx
   2b4aa:	48 81 c1 20 02 00 00 	add    $0x220,%rcx
   2b4b1:	e8 00 00 00 00       	callq  2b4b6 <__MARSH_WRAP__e1000_down+0x3810>
			2b4b2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b4b6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b4ba:	48 8b b8 20 02 00 00 	mov    0x220(%rax),%rdi
   2b4c1:	48 85 ff             	test   %rdi,%rdi
   2b4c4:	0f 84 98 07 00 00    	je     2bc62 <__MARSH_WRAP__e1000_down+0x3fbc>
   2b4ca:	ba 04 00 00 00       	mov    $0x4,%edx
   2b4cf:	be 14 00 00 00       	mov    $0x14,%esi
   2b4d4:	e8 00 00 00 00       	callq  2b4d9 <__MARSH_WRAP__e1000_down+0x3833>
			2b4d5: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2b4d9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b4dd:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b4e1:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b4e6:	4c 89 e2             	mov    %r12,%rdx
   2b4e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b4ec: R_X86_64_32S	.rodata.str1.1+0x321c
   2b4f0:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b4f7:	49 83 c0 14          	add    $0x14,%r8
   2b4fb:	e8 00 00 00 00       	callq  2b500 <__MARSH_WRAP__e1000_down+0x385a>
			2b4fc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b500:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b504:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b508:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b50d:	4c 89 e2             	mov    %r12,%rdx
   2b510:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b513: R_X86_64_32S	.rodata.str1.1+0x321c
   2b517:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b51e:	49 83 c0 10          	add    $0x10,%r8
   2b522:	e8 00 00 00 00       	callq  2b527 <__MARSH_WRAP__e1000_down+0x3881>
			2b523: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b527:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b52b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b52f:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b534:	4c 89 e2             	mov    %r12,%rdx
   2b537:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b53a: R_X86_64_32S	.rodata.str1.1+0x321c
   2b53e:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b545:	49 83 c0 2e          	add    $0x2e,%r8
   2b549:	e8 00 00 00 00       	callq  2b54e <__MARSH_WRAP__e1000_down+0x38a8>
			2b54a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b54e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b552:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b556:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b55b:	4c 89 e2             	mov    %r12,%rdx
   2b55e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b561: R_X86_64_32S	.rodata.str1.1+0x321c
   2b565:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b56c:	49 83 c0 1c          	add    $0x1c,%r8
   2b570:	e8 00 00 00 00       	callq  2b575 <__MARSH_WRAP__e1000_down+0x38cf>
			2b571: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b575:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b579:	ba 08 00 00 00       	mov    $0x8,%edx
   2b57e:	be 08 00 00 00       	mov    $0x8,%esi
   2b583:	48 8b b8 20 02 00 00 	mov    0x220(%rax),%rdi
   2b58a:	e8 00 00 00 00       	callq  2b58f <__MARSH_WRAP__e1000_down+0x38e9>
			2b58b: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2b58f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b593:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b597:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b59c:	4c 89 e2             	mov    %r12,%rdx
   2b59f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b5a2: R_X86_64_32S	.rodata.str1.1+0x321c
   2b5a6:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b5ad:	49 83 c0 08          	add    $0x8,%r8
   2b5b1:	e8 00 00 00 00       	callq  2b5b6 <__MARSH_WRAP__e1000_down+0x3910>
			2b5b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b5b6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b5ba:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b5be:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b5c3:	4c 89 e2             	mov    %r12,%rdx
   2b5c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b5c9: R_X86_64_32S	.rodata.str1.1+0x321c
   2b5cd:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b5d4:	49 83 c0 2c          	add    $0x2c,%r8
   2b5d8:	e8 00 00 00 00       	callq  2b5dd <__MARSH_WRAP__e1000_down+0x3937>
			2b5d9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b5dd:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b5e1:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b5e5:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b5ea:	4c 89 e2             	mov    %r12,%rdx
   2b5ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b5f0: R_X86_64_32S	.rodata.str1.1+0x321c
   2b5f4:	4c 8b 80 20 02 00 00 	mov    0x220(%rax),%r8
   2b5fb:	49 83 c0 18          	add    $0x18,%r8
   2b5ff:	e8 00 00 00 00       	callq  2b604 <__MARSH_WRAP__e1000_down+0x395e>
			2b600: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b604:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b608:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b60c:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   2b612:	4c 89 e2             	mov    %r12,%rdx
   2b615:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b618: R_X86_64_32S	.rodata.str1.1+0x321c
   2b61c:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   2b623:	48 83 c1 20          	add    $0x20,%rcx
   2b627:	e8 00 00 00 00       	callq  2b62c <__MARSH_WRAP__e1000_down+0x3986>
			2b628: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b62c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b630:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b637:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b63b:	48 85 c0             	test   %rax,%rax
   2b63e:	0f 84 f5 04 00 00    	je     2bb39 <__MARSH_WRAP__e1000_down+0x3e93>
   2b644:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b648:	4c 8d 40 18          	lea    0x18(%rax),%r8
   2b64c:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b651:	4c 89 e2             	mov    %r12,%rdx
   2b654:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b657: R_X86_64_32S	.rodata.str1.1+0x321c
   2b65b:	e8 00 00 00 00       	callq  2b660 <__MARSH_WRAP__e1000_down+0x39ba>
			2b65c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b660:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b664:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b668:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b66d:	4c 89 e2             	mov    %r12,%rdx
   2b670:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b673: R_X86_64_32S	.rodata.str1.1+0x321c
   2b677:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b67e:	4c 8b 40 20          	mov    0x20(%rax),%r8
   2b682:	49 83 c0 10          	add    $0x10,%r8
   2b686:	e8 00 00 00 00       	callq  2b68b <__MARSH_WRAP__e1000_down+0x39e5>
			2b687: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b68b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b68f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b693:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b698:	4c 89 e2             	mov    %r12,%rdx
   2b69b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b69e: R_X86_64_32S	.rodata.str1.1+0x321c
   2b6a2:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b6a9:	4c 8b 40 20          	mov    0x20(%rax),%r8
   2b6ad:	49 83 c0 1a          	add    $0x1a,%r8
   2b6b1:	e8 00 00 00 00       	callq  2b6b6 <__MARSH_WRAP__e1000_down+0x3a10>
			2b6b2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b6b6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b6ba:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b6be:	b9 08 00 00 00       	mov    $0x8,%ecx
   2b6c3:	4c 89 e2             	mov    %r12,%rdx
   2b6c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b6c9: R_X86_64_32S	.rodata.str1.1+0x321c
   2b6cd:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b6d4:	4c 8b 40 20          	mov    0x20(%rax),%r8
   2b6d8:	49 83 c0 08          	add    $0x8,%r8
   2b6dc:	e8 00 00 00 00       	callq  2b6e1 <__MARSH_WRAP__e1000_down+0x3a3b>
			2b6dd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b6e1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b6e5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b6e9:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   2b6ef:	4c 89 e2             	mov    %r12,%rdx
   2b6f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b6f5: R_X86_64_32S	.rodata.str1.1+0x321c
   2b6f9:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b700:	48 8b 48 20          	mov    0x20(%rax),%rcx
   2b704:	e8 00 00 00 00       	callq  2b709 <__MARSH_WRAP__e1000_down+0x3a63>
			2b705: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2b709:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b70d:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b714:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b718:	48 83 38 00          	cmpq   $0x0,(%rax)
   2b71c:	0f 84 17 04 00 00    	je     2bb39 <__MARSH_WRAP__e1000_down+0x3e93>
   2b722:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2b726:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b72a:	b9 01 00 00 00       	mov    $0x1,%ecx
   2b72f:	4c 89 e2             	mov    %r12,%rdx
   2b732:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b735: R_X86_64_32S	.rodata.str1.1+0x321c
   2b739:	49 89 d8             	mov    %rbx,%r8
   2b73c:	e8 00 00 00 00       	callq  2b741 <__MARSH_WRAP__e1000_down+0x3a9b>
			2b73d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b741:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b745:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2b748:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b74b: R_X86_64_32S	.rodata.str1.1+0x321c
   2b74f:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b756:	83 e2 07             	and    $0x7,%edx
   2b759:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b75d:	48 8b 08             	mov    (%rax),%rcx
   2b760:	8a 41 7d             	mov    0x7d(%rcx),%al
   2b763:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   2b766:	09 d0                	or     %edx,%eax
   2b768:	4c 89 e2             	mov    %r12,%rdx
   2b76b:	88 41 7d             	mov    %al,0x7d(%rcx)
   2b76e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b772:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b777:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b77b:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b782:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b786:	4c 8b 00             	mov    (%rax),%r8
   2b789:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   2b790:	e8 00 00 00 00       	callq  2b795 <__MARSH_WRAP__e1000_down+0x3aef>
			2b791: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b795:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b799:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b79d:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b7a2:	4c 89 e2             	mov    %r12,%rdx
   2b7a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b7a8: R_X86_64_32S	.rodata.str1.1+0x321c
   2b7ac:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b7b3:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b7b7:	4c 8b 00             	mov    (%rax),%r8
   2b7ba:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   2b7c1:	e8 00 00 00 00       	callq  2b7c6 <__MARSH_WRAP__e1000_down+0x3b20>
			2b7c2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b7c6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b7ca:	49 89 d8             	mov    %rbx,%r8
   2b7cd:	b9 01 00 00 00       	mov    $0x1,%ecx
   2b7d2:	4c 89 e2             	mov    %r12,%rdx
   2b7d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b7d8: R_X86_64_32S	.rodata.str1.1+0x321c
   2b7dc:	e8 00 00 00 00       	callq  2b7e1 <__MARSH_WRAP__e1000_down+0x3b3b>
			2b7dd: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b7e1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b7e5:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2b7e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b7eb: R_X86_64_32S	.rodata.str1.1+0x321c
   2b7ef:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b7f6:	83 e2 03             	and    $0x3,%edx
   2b7f9:	c1 e2 02             	shl    $0x2,%edx
   2b7fc:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b800:	48 8b 08             	mov    (%rax),%rcx
   2b803:	8a 41 7c             	mov    0x7c(%rcx),%al
   2b806:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   2b809:	09 d0                	or     %edx,%eax
   2b80b:	4c 89 e2             	mov    %r12,%rdx
   2b80e:	88 41 7c             	mov    %al,0x7c(%rcx)
   2b811:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b815:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b81a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b81e:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b825:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b829:	4c 8b 00             	mov    (%rax),%r8
   2b82c:	49 83 c0 6c          	add    $0x6c,%r8
   2b830:	e8 00 00 00 00       	callq  2b835 <__MARSH_WRAP__e1000_down+0x3b8f>
			2b831: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b835:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b839:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b83d:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b842:	4c 89 e2             	mov    %r12,%rdx
   2b845:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b848: R_X86_64_32S	.rodata.str1.1+0x321c
   2b84c:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b853:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b857:	4c 8b 00             	mov    (%rax),%r8
   2b85a:	49 81 c0 a4 00 00 00 	add    $0xa4,%r8
   2b861:	e8 00 00 00 00       	callq  2b866 <__MARSH_WRAP__e1000_down+0x3bc0>
			2b862: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b866:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b86a:	49 89 d8             	mov    %rbx,%r8
   2b86d:	b9 01 00 00 00       	mov    $0x1,%ecx
   2b872:	4c 89 e2             	mov    %r12,%rdx
   2b875:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b878: R_X86_64_32S	.rodata.str1.1+0x321c
   2b87c:	e8 00 00 00 00       	callq  2b881 <__MARSH_WRAP__e1000_down+0x3bdb>
			2b87d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b881:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b885:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2b888:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b88b: R_X86_64_32S	.rodata.str1.1+0x321c
   2b88f:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b896:	83 e2 01             	and    $0x1,%edx
   2b899:	01 d2                	add    %edx,%edx
   2b89b:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b89f:	48 8b 08             	mov    (%rax),%rcx
   2b8a2:	8a 41 7c             	mov    0x7c(%rcx),%al
   2b8a5:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   2b8a8:	09 d0                	or     %edx,%eax
   2b8aa:	4c 89 e2             	mov    %r12,%rdx
   2b8ad:	88 41 7c             	mov    %al,0x7c(%rcx)
   2b8b0:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b8b4:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b8b9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b8bd:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b8c4:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b8c8:	4c 8b 00             	mov    (%rax),%r8
   2b8cb:	49 83 c0 76          	add    $0x76,%r8
   2b8cf:	e8 00 00 00 00       	callq  2b8d4 <__MARSH_WRAP__e1000_down+0x3c2e>
			2b8d0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b8d4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b8d8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b8dc:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b8e1:	4c 89 e2             	mov    %r12,%rdx
   2b8e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b8e7: R_X86_64_32S	.rodata.str1.1+0x321c
   2b8eb:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b8f2:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b8f6:	4c 8b 00             	mov    (%rax),%r8
   2b8f9:	49 83 c0 74          	add    $0x74,%r8
   2b8fd:	e8 00 00 00 00       	callq  2b902 <__MARSH_WRAP__e1000_down+0x3c5c>
			2b8fe: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b902:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b906:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b90a:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b90f:	4c 89 e2             	mov    %r12,%rdx
   2b912:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b915: R_X86_64_32S	.rodata.str1.1+0x321c
   2b919:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b920:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b924:	4c 8b 00             	mov    (%rax),%r8
   2b927:	49 83 c0 68          	add    $0x68,%r8
   2b92b:	e8 00 00 00 00       	callq  2b930 <__MARSH_WRAP__e1000_down+0x3c8a>
			2b92c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b930:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b934:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b938:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b93d:	4c 89 e2             	mov    %r12,%rdx
   2b940:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b943: R_X86_64_32S	.rodata.str1.1+0x321c
   2b947:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b94e:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b952:	4c 8b 00             	mov    (%rax),%r8
   2b955:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   2b95c:	e8 00 00 00 00       	callq  2b961 <__MARSH_WRAP__e1000_down+0x3cbb>
			2b95d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b961:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b965:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b969:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b96e:	4c 89 e2             	mov    %r12,%rdx
   2b971:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b974: R_X86_64_32S	.rodata.str1.1+0x321c
   2b978:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b97f:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b983:	4c 8b 00             	mov    (%rax),%r8
   2b986:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   2b98d:	e8 00 00 00 00       	callq  2b992 <__MARSH_WRAP__e1000_down+0x3cec>
			2b98e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b992:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b996:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b99a:	b9 02 00 00 00       	mov    $0x2,%ecx
   2b99f:	4c 89 e2             	mov    %r12,%rdx
   2b9a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b9a5: R_X86_64_32S	.rodata.str1.1+0x321c
   2b9a9:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b9b0:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b9b4:	4c 8b 00             	mov    (%rax),%r8
   2b9b7:	49 83 c0 7e          	add    $0x7e,%r8
   2b9bb:	e8 00 00 00 00       	callq  2b9c0 <__MARSH_WRAP__e1000_down+0x3d1a>
			2b9bc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b9c0:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b9c4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b9c8:	b9 04 00 00 00       	mov    $0x4,%ecx
   2b9cd:	4c 89 e2             	mov    %r12,%rdx
   2b9d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2b9d3: R_X86_64_32S	.rodata.str1.1+0x321c
   2b9d7:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2b9de:	48 8b 40 20          	mov    0x20(%rax),%rax
   2b9e2:	4c 8b 00             	mov    (%rax),%r8
   2b9e5:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   2b9ec:	e8 00 00 00 00       	callq  2b9f1 <__MARSH_WRAP__e1000_down+0x3d4b>
			2b9ed: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2b9f1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2b9f5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2b9f9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2b9ff:	4c 89 e2             	mov    %r12,%rdx
   2ba02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ba05: R_X86_64_32S	.rodata.str1.1+0x321c
   2ba09:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2ba10:	48 8b 40 20          	mov    0x20(%rax),%rax
   2ba14:	48 8b 08             	mov    (%rax),%rcx
   2ba17:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   2ba1e:	e8 00 00 00 00       	callq  2ba23 <__MARSH_WRAP__e1000_down+0x3d7d>
			2ba1f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ba23:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2ba27:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2ba2e:	48 8b 40 20          	mov    0x20(%rax),%rax
   2ba32:	48 8b 00             	mov    (%rax),%rax
   2ba35:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   2ba3c:	00 
   2ba3d:	0f 84 87 00 00 00    	je     2baca <__MARSH_WRAP__e1000_down+0x3e24>
   2ba43:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ba47:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   2ba4b:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ba50:	4c 89 e2             	mov    %r12,%rdx
   2ba53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ba56: R_X86_64_32S	.rodata.str1.1+0x321c
   2ba5a:	31 db                	xor    %ebx,%ebx
   2ba5c:	e8 00 00 00 00       	callq  2ba61 <__MARSH_WRAP__e1000_down+0x3dbb>
			2ba5d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ba61:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2ba65:	8b 75 c4             	mov    0xffffffffffffffc4(%rbp),%esi
   2ba68:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ba6d:	ba 01 00 00 00       	mov    $0x1,%edx
   2ba72:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2ba79:	48 8b 40 20          	mov    0x20(%rax),%rax
   2ba7d:	48 8b 38             	mov    (%rax),%rdi
   2ba80:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   2ba87:	e8 00 00 00 00       	callq  2ba8c <__MARSH_WRAP__e1000_down+0x3de6>
			2ba88: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   2ba8c:	eb 37                	jmp    2bac5 <__MARSH_WRAP__e1000_down+0x3e1f>
   2ba8e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2ba92:	4c 63 c3             	movslq %ebx,%r8
   2ba95:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ba99:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2ba9d:	b9 01 00 00 00       	mov    $0x1,%ecx
   2baa2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2baa5: R_X86_64_32S	.rodata.str1.1+0x321c
   2baa9:	ff c3                	inc    %ebx
   2baab:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bab2:	48 8b 40 20          	mov    0x20(%rax),%rax
   2bab6:	48 8b 00             	mov    (%rax),%rax
   2bab9:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   2bac0:	e8 00 00 00 00       	callq  2bac5 <__MARSH_WRAP__e1000_down+0x3e1f>
			2bac1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bac5:	3b 5d c4             	cmp    0xffffffffffffffc4(%rbp),%ebx
   2bac8:	7c c4                	jl     2ba8e <__MARSH_WRAP__e1000_down+0x3de8>
   2baca:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bace:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2bad2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bad6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2badc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2badf: R_X86_64_32S	.rodata.str1.1+0x321c
   2bae3:	48 89 da             	mov    %rbx,%rdx
   2bae6:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2baed:	48 8b 40 20          	mov    0x20(%rax),%rax
   2baf1:	48 8b 08             	mov    (%rax),%rcx
   2baf4:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   2bafb:	e8 00 00 00 00       	callq  2bb00 <__MARSH_WRAP__e1000_down+0x3e5a>
			2bafc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bb00:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bb04:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bb0b:	48 8b 40 20          	mov    0x20(%rax),%rax
   2bb0f:	48 8b 00             	mov    (%rax),%rax
   2bb12:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   2bb19:	48 85 c0             	test   %rax,%rax
   2bb1c:	74 1b                	je     2bb39 <__MARSH_WRAP__e1000_down+0x3e93>
   2bb1e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bb22:	49 89 c0             	mov    %rax,%r8
   2bb25:	b9 01 00 00 00       	mov    $0x1,%ecx
   2bb2a:	48 89 da             	mov    %rbx,%rdx
   2bb2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bb30: R_X86_64_32S	.rodata.str1.1+0x321c
   2bb34:	e8 00 00 00 00       	callq  2bb39 <__MARSH_WRAP__e1000_down+0x3e93>
			2bb35: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bb39:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bb3d:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2bb41:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bb45:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   2bb4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bb4e: R_X86_64_32S	.rodata.str1.1+0x321c
   2bb52:	48 89 da             	mov    %rbx,%rdx
   2bb55:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   2bb5c:	e8 00 00 00 00       	callq  2bb61 <__MARSH_WRAP__e1000_down+0x3ebb>
			2bb5d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bb61:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bb65:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bb6c:	48 8b 00             	mov    (%rax),%rax
   2bb6f:	48 85 c0             	test   %rax,%rax
   2bb72:	0f 84 ea 00 00 00    	je     2bc62 <__MARSH_WRAP__e1000_down+0x3fbc>
   2bb78:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bb7c:	4c 8d 40 0e          	lea    0xe(%rax),%r8
   2bb80:	b9 02 00 00 00       	mov    $0x2,%ecx
   2bb85:	48 89 da             	mov    %rbx,%rdx
   2bb88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bb8b: R_X86_64_32S	.rodata.str1.1+0x321c
   2bb8f:	e8 00 00 00 00       	callq  2bb94 <__MARSH_WRAP__e1000_down+0x3eee>
			2bb90: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bb94:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bb98:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bb9c:	b9 01 00 00 00       	mov    $0x1,%ecx
   2bba1:	48 89 da             	mov    %rbx,%rdx
   2bba4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bba7: R_X86_64_32S	.rodata.str1.1+0x321c
   2bbab:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bbb2:	4c 8b 00             	mov    (%rax),%r8
   2bbb5:	49 83 c0 0d          	add    $0xd,%r8
   2bbb9:	e8 00 00 00 00       	callq  2bbbe <__MARSH_WRAP__e1000_down+0x3f18>
			2bbba: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bbbe:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bbc2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bbc6:	b9 02 00 00 00       	mov    $0x2,%ecx
   2bbcb:	48 89 da             	mov    %rbx,%rdx
   2bbce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bbd1: R_X86_64_32S	.rodata.str1.1+0x321c
   2bbd5:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bbdc:	4c 8b 00             	mov    (%rax),%r8
   2bbdf:	49 83 c0 0a          	add    $0xa,%r8
   2bbe3:	e8 00 00 00 00       	callq  2bbe8 <__MARSH_WRAP__e1000_down+0x3f42>
			2bbe4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bbe8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bbec:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bbf0:	b9 08 00 00 00       	mov    $0x8,%ecx
   2bbf5:	48 89 da             	mov    %rbx,%rdx
   2bbf8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bbfb: R_X86_64_32S	.rodata.str1.1+0x321c
   2bbff:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bc06:	4c 8b 00             	mov    (%rax),%r8
   2bc09:	e8 00 00 00 00       	callq  2bc0e <__MARSH_WRAP__e1000_down+0x3f68>
			2bc0a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bc0e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bc12:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bc16:	b9 02 00 00 00       	mov    $0x2,%ecx
   2bc1b:	48 89 da             	mov    %rbx,%rdx
   2bc1e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bc21: R_X86_64_32S	.rodata.str1.1+0x321c
   2bc25:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bc2c:	4c 8b 00             	mov    (%rax),%r8
   2bc2f:	49 83 c0 08          	add    $0x8,%r8
   2bc33:	e8 00 00 00 00       	callq  2bc38 <__MARSH_WRAP__e1000_down+0x3f92>
			2bc34: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bc38:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bc3c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bc40:	b9 01 00 00 00       	mov    $0x1,%ecx
   2bc45:	48 89 da             	mov    %rbx,%rdx
   2bc48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bc4b: R_X86_64_32S	.rodata.str1.1+0x321c
   2bc4f:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   2bc56:	4c 8b 00             	mov    (%rax),%r8
   2bc59:	49 83 c0 0c          	add    $0xc,%r8
   2bc5d:	e8 00 00 00 00       	callq  2bc62 <__MARSH_WRAP__e1000_down+0x3fbc>
			2bc5e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bc62:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2bc66:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bc6a:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2bc6e:	41 b8 70 00 00 00    	mov    $0x70,%r8d
   2bc74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bc77: R_X86_64_32S	.rodata.str1.1+0x321c
   2bc7b:	48 81 c1 90 00 00 00 	add    $0x90,%rcx
   2bc82:	e8 00 00 00 00       	callq  2bc87 <__MARSH_WRAP__e1000_down+0x3fe1>
			2bc83: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bc87:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bc8b:	48 83 b8 90 00 00 00 	cmpq   $0x0,0x90(%rax)
   2bc92:	00 
   2bc93:	0f 84 9a 0c 00 00    	je     2c933 <__MARSH_WRAP__e1000_down+0x4c8d>
   2bc99:	c7 45 ac 00 00 00 00 	movl   $0x0,0xffffffffffffffac(%rbp)
   2bca0:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   2bca7:	00 
   2bca8:	45 31 ff             	xor    %r15d,%r15d
   2bcab:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   2bcb2:	00 
   2bcb3:	48 c7 45 88 00 00 00 	movq   $0x0,0xffffffffffffff88(%rbp)
   2bcba:	00 
   2bcbb:	45 31 ed             	xor    %r13d,%r13d
   2bcbe:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
   2bcc5:	00 
   2bcc6:	48 c7 85 78 ff ff ff 	movq   $0x0,0xffffffffffffff78(%rbp)
   2bccd:	00 00 00 00 
   2bcd1:	45 31 f6             	xor    %r14d,%r14d
   2bcd4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bcd8:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2bcdc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bce0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2bce6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bce9: R_X86_64_32S	.rodata.str1.1+0x321c
   2bced:	48 89 da             	mov    %rbx,%rdx
   2bcf0:	48 8b 88 90 00 00 00 	mov    0x90(%rax),%rcx
   2bcf7:	48 83 c1 20          	add    $0x20,%rcx
   2bcfb:	48 03 4d a0          	add    0xffffffffffffffa0(%rbp),%rcx
   2bcff:	e8 00 00 00 00       	callq  2bd04 <__MARSH_WRAP__e1000_down+0x405e>
			2bd00: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bd04:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bd08:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bd0f:	4a 8b 4c f0 20       	mov    0x20(%rax,%r14,8),%rcx
   2bd14:	48 85 c9             	test   %rcx,%rcx
   2bd17:	0f 84 e8 0b 00 00    	je     2c905 <__MARSH_WRAP__e1000_down+0x4c5f>
   2bd1d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bd21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bd24: R_X86_64_32S	.rodata.str1.1+0x321c
   2bd28:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   2bd2e:	48 89 da             	mov    %rbx,%rdx
   2bd31:	e8 00 00 00 00       	callq  2bd36 <__MARSH_WRAP__e1000_down+0x4090>
			2bd32: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bd36:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bd3a:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bd41:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2bd46:	48 8b 38             	mov    (%rax),%rdi
   2bd49:	48 85 ff             	test   %rdi,%rdi
   2bd4c:	0f 84 b3 0b 00 00    	je     2c905 <__MARSH_WRAP__e1000_down+0x4c5f>
   2bd52:	ba 08 00 00 00       	mov    $0x8,%edx
   2bd57:	be 10 03 00 00       	mov    $0x310,%esi
   2bd5c:	e8 00 00 00 00       	callq  2bd61 <__MARSH_WRAP__e1000_down+0x40bb>
			2bd5d: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2bd61:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bd65:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bd69:	48 89 da             	mov    %rbx,%rdx
   2bd6c:	b9 08 00 00 00       	mov    $0x8,%ecx
   2bd71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bd74: R_X86_64_32S	.rodata.str1.1+0x321c
   2bd78:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bd7f:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2bd84:	4c 8b 00             	mov    (%rax),%r8
   2bd87:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   2bd8e:	e8 00 00 00 00       	callq  2bd93 <__MARSH_WRAP__e1000_down+0x40ed>
			2bd8f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bd93:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bd97:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bd9b:	48 89 da             	mov    %rbx,%rdx
   2bd9e:	b9 02 00 00 00       	mov    $0x2,%ecx
   2bda3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bda6: R_X86_64_32S	.rodata.str1.1+0x321c
   2bdaa:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bdb1:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2bdb6:	4c 8b 00             	mov    (%rax),%r8
   2bdb9:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   2bdc0:	e8 00 00 00 00       	callq  2bdc5 <__MARSH_WRAP__e1000_down+0x411f>
			2bdc1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bdc5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bdc9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bdcd:	48 89 da             	mov    %rbx,%rdx
   2bdd0:	b9 08 00 00 00       	mov    $0x8,%ecx
   2bdd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bdd8: R_X86_64_32S	.rodata.str1.1+0x321c
   2bddc:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bde3:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2bde8:	4c 8b 00             	mov    (%rax),%r8
   2bdeb:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   2bdf2:	e8 00 00 00 00       	callq  2bdf7 <__MARSH_WRAP__e1000_down+0x4151>
			2bdf3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bdf7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bdfb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bdff:	48 89 da             	mov    %rbx,%rdx
   2be02:	b9 04 00 00 00       	mov    $0x4,%ecx
   2be07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2be0a: R_X86_64_32S	.rodata.str1.1+0x321c
   2be0e:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2be15:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2be1a:	4c 8b 00             	mov    (%rax),%r8
   2be1d:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   2be24:	e8 00 00 00 00       	callq  2be29 <__MARSH_WRAP__e1000_down+0x4183>
			2be25: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2be29:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2be2d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2be31:	48 89 da             	mov    %rbx,%rdx
   2be34:	b9 04 00 00 00       	mov    $0x4,%ecx
   2be39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2be3c: R_X86_64_32S	.rodata.str1.1+0x321c
   2be40:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2be47:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2be4c:	4c 8b 00             	mov    (%rax),%r8
   2be4f:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   2be56:	e8 00 00 00 00       	callq  2be5b <__MARSH_WRAP__e1000_down+0x41b5>
			2be57: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2be5b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2be5f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2be63:	48 89 da             	mov    %rbx,%rdx
   2be66:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2be6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2be6f: R_X86_64_32S	.rodata.str1.1+0x321c
   2be73:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2be7a:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2be7f:	48 8b 08             	mov    (%rax),%rcx
   2be82:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   2be89:	e8 00 00 00 00       	callq  2be8e <__MARSH_WRAP__e1000_down+0x41e8>
			2be8a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2be8e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2be92:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2be96:	48 89 da             	mov    %rbx,%rdx
   2be99:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2be9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bea2: R_X86_64_32S	.rodata.str1.1+0x321c
   2bea6:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bead:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2beb2:	48 8b 08             	mov    (%rax),%rcx
   2beb5:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   2bebc:	e8 00 00 00 00       	callq  2bec1 <__MARSH_WRAP__e1000_down+0x421b>
			2bebd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bec1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bec5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bec9:	48 89 da             	mov    %rbx,%rdx
   2becc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2bed2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bed5: R_X86_64_32S	.rodata.str1.1+0x321c
   2bed9:	31 db                	xor    %ebx,%ebx
   2bedb:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bee2:	4a 8b 44 f0 20       	mov    0x20(%rax,%r14,8),%rax
   2bee7:	48 8b 08             	mov    (%rax),%rcx
   2beea:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   2bef1:	e8 00 00 00 00       	callq  2bef6 <__MARSH_WRAP__e1000_down+0x4250>
			2bef2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2bef6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2befa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2befe:	b9 01 00 00 00       	mov    $0x1,%ecx
   2bf03:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bf06: R_X86_64_32S	.rodata.str1.1+0x321c
   2bf0a:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
   2bf11:	48 63 45 ac          	movslq 0xffffffffffffffac(%rbp),%rax
   2bf15:	48 8b 44 c2 20       	mov    0x20(%rdx,%rax,8),%rax
   2bf1a:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2bf1e:	4c 8b 00             	mov    (%rax),%r8
   2bf21:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   2bf28:	49 01 d8             	add    %rbx,%r8
   2bf2b:	48 ff c3             	inc    %rbx
   2bf2e:	e8 00 00 00 00       	callq  2bf33 <__MARSH_WRAP__e1000_down+0x428d>
			2bf2f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bf33:	48 83 fb 20          	cmp    $0x20,%rbx
   2bf37:	75 bd                	jne    2bef6 <__MARSH_WRAP__e1000_down+0x4250>
   2bf39:	30 db                	xor    %bl,%bl
   2bf3b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bf3f:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
   2bf46:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2bf4a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bf4e:	b9 01 00 00 00       	mov    $0x1,%ecx
   2bf53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bf56: R_X86_64_32S	.rodata.str1.1+0x321c
   2bf5a:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bf61:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2bf66:	4c 89 e2             	mov    %r12,%rdx
   2bf69:	4c 8b 00             	mov    (%rax),%r8
   2bf6c:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   2bf73:	49 01 d8             	add    %rbx,%r8
   2bf76:	48 ff c3             	inc    %rbx
   2bf79:	e8 00 00 00 00       	callq  2bf7e <__MARSH_WRAP__e1000_down+0x42d8>
			2bf7a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bf7e:	48 83 fb 20          	cmp    $0x20,%rbx
   2bf82:	75 b7                	jne    2bf3b <__MARSH_WRAP__e1000_down+0x4295>
   2bf84:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bf88:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
   2bf8f:	b9 02 00 00 00       	mov    $0x2,%ecx
   2bf94:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bf98:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bf9b: R_X86_64_32S	.rodata.str1.1+0x321c
   2bf9f:	30 db                	xor    %bl,%bl
   2bfa1:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bfa8:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2bfad:	4c 89 e2             	mov    %r12,%rdx
   2bfb0:	4c 8b 00             	mov    (%rax),%r8
   2bfb3:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   2bfba:	e8 00 00 00 00       	callq  2bfbf <__MARSH_WRAP__e1000_down+0x4319>
			2bfbb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2bfbf:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bfc3:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
   2bfca:	be 48 00 00 00       	mov    $0x48,%esi
   2bfcf:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2bfd6:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2bfdb:	ba 08 00 00 00       	mov    $0x8,%edx
   2bfe0:	48 8b 38             	mov    (%rax),%rdi
   2bfe3:	e8 00 00 00 00       	callq  2bfe8 <__MARSH_WRAP__e1000_down+0x4342>
			2bfe4: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2bfe8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2bfec:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
   2bff3:	b9 08 00 00 00       	mov    $0x8,%ecx
   2bff8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2bffc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2bfff: R_X86_64_32S	.rodata.str1.1+0x321c
   2c003:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c00a:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c00f:	4c 89 e2             	mov    %r12,%rdx
   2c012:	4c 8b 00             	mov    (%rax),%r8
   2c015:	49 83 c0 48          	add    $0x48,%r8
   2c019:	e8 00 00 00 00       	callq  2c01e <__MARSH_WRAP__e1000_down+0x4378>
			2c01a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c01e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c022:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c026:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c02b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c02e: R_X86_64_32S	.rodata.str1.1+0x321c
   2c032:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
   2c039:	48 63 45 ac          	movslq 0xffffffffffffffac(%rbp),%rax
   2c03d:	48 8b 44 c2 20       	mov    0x20(%rdx,%rax,8),%rax
   2c042:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2c046:	4c 8b 00             	mov    (%rax),%r8
   2c049:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   2c050:	49 01 d8             	add    %rbx,%r8
   2c053:	48 ff c3             	inc    %rbx
   2c056:	e8 00 00 00 00       	callq  2c05b <__MARSH_WRAP__e1000_down+0x43b5>
			2c057: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c05b:	48 83 fb 20          	cmp    $0x20,%rbx
   2c05f:	75 bd                	jne    2c01e <__MARSH_WRAP__e1000_down+0x4378>
   2c061:	30 db                	xor    %bl,%bl
   2c063:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c067:	48 8b 55 80          	mov    0xffffffffffffff80(%rbp),%rdx
   2c06b:	49 89 d8             	mov    %rbx,%r8
   2c06e:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2c072:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c076:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c07b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c07e: R_X86_64_32S	.rodata.str1.1+0x321c
   2c082:	48 ff c3             	inc    %rbx
   2c085:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c08c:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c091:	4c 89 e2             	mov    %r12,%rdx
   2c094:	4c 03 00             	add    (%rax),%r8
   2c097:	e8 00 00 00 00       	callq  2c09c <__MARSH_WRAP__e1000_down+0x43f6>
			2c098: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c09c:	48 83 fb 10          	cmp    $0x10,%rbx
   2c0a0:	75 c1                	jne    2c063 <__MARSH_WRAP__e1000_down+0x43bd>
   2c0a2:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c0a6:	48 8b 55 80          	mov    0xffffffffffffff80(%rbp),%rdx
   2c0aa:	be 18 04 00 00       	mov    $0x418,%esi
   2c0af:	30 db                	xor    %bl,%bl
   2c0b1:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c0b8:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c0bd:	ba 10 00 00 00       	mov    $0x10,%edx
   2c0c2:	48 8b 38             	mov    (%rax),%rdi
   2c0c5:	e8 00 00 00 00       	callq  2c0ca <__MARSH_WRAP__e1000_down+0x4424>
			2c0c6: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2c0ca:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c0ce:	48 8b 55 80          	mov    0xffffffffffffff80(%rbp),%rdx
   2c0d2:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c0d7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c0db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c0de: R_X86_64_32S	.rodata.str1.1+0x321c
   2c0e2:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c0e9:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c0ee:	4c 89 e2             	mov    %r12,%rdx
   2c0f1:	4c 8b 00             	mov    (%rax),%r8
   2c0f4:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   2c0fb:	e8 00 00 00 00       	callq  2c100 <__MARSH_WRAP__e1000_down+0x445a>
			2c0fc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c100:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c104:	48 8b 55 80          	mov    0xffffffffffffff80(%rbp),%rdx
   2c108:	b9 04 00 00 00       	mov    $0x4,%ecx
   2c10d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c111:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c114: R_X86_64_32S	.rodata.str1.1+0x321c
   2c118:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c11f:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c124:	4c 89 e2             	mov    %r12,%rdx
   2c127:	4c 8b 00             	mov    (%rax),%r8
   2c12a:	49 81 c0 e0 01 00 00 	add    $0x1e0,%r8
   2c131:	e8 00 00 00 00       	callq  2c136 <__MARSH_WRAP__e1000_down+0x4490>
			2c132: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c136:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c13a:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2c13e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c142:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c147:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c14a: R_X86_64_32S	.rodata.str1.1+0x321c
   2c14e:	4c 89 e2             	mov    %r12,%rdx
   2c151:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c158:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c15d:	4c 8b 00             	mov    (%rax),%r8
   2c160:	49 81 c0 60 05 00 00 	add    $0x560,%r8
   2c167:	49 01 d8             	add    %rbx,%r8
   2c16a:	48 ff c3             	inc    %rbx
   2c16d:	e8 00 00 00 00       	callq  2c172 <__MARSH_WRAP__e1000_down+0x44cc>
			2c16e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c172:	48 83 fb 14          	cmp    $0x14,%rbx
   2c176:	75 be                	jne    2c136 <__MARSH_WRAP__e1000_down+0x4490>
   2c178:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2c17c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c180:	b9 04 00 00 00       	mov    $0x4,%ecx
   2c185:	4c 89 e2             	mov    %r12,%rdx
   2c188:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c18b: R_X86_64_32S	.rodata.str1.1+0x321c
   2c18f:	49 89 d8             	mov    %rbx,%r8
   2c192:	e8 00 00 00 00       	callq  2c197 <__MARSH_WRAP__e1000_down+0x44f1>
			2c193: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c197:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c19b:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2c19e:	49 89 d8             	mov    %rbx,%r8
   2c1a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c1a4: R_X86_64_32S	.rodata.str1.1+0x321c
   2c1a8:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c1af:	83 e2 01             	and    $0x1,%edx
   2c1b2:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c1b7:	48 8b 08             	mov    (%rax),%rcx
   2c1ba:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   2c1c0:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   2c1c3:	09 d0                	or     %edx,%eax
   2c1c5:	4c 89 e2             	mov    %r12,%rdx
   2c1c8:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   2c1ce:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c1d2:	b9 04 00 00 00       	mov    $0x4,%ecx
   2c1d7:	e8 00 00 00 00       	callq  2c1dc <__MARSH_WRAP__e1000_down+0x4536>
			2c1d8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c1dc:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c1e0:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2c1e3:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   2c1e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c1ec: R_X86_64_32S	.rodata.str1.1+0x321c
   2c1f0:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c1f7:	83 e2 01             	and    $0x1,%edx
   2c1fa:	01 d2                	add    %edx,%edx
   2c1fc:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c201:	48 8b 08             	mov    (%rax),%rcx
   2c204:	8a 81 f4 05 00 00    	mov    0x5f4(%rcx),%al
   2c20a:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   2c20d:	09 d0                	or     %edx,%eax
   2c20f:	4c 89 e2             	mov    %r12,%rdx
   2c212:	88 81 f4 05 00 00    	mov    %al,0x5f4(%rcx)
   2c218:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c21c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c220:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c227:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c22c:	48 8b 08             	mov    (%rax),%rcx
   2c22f:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   2c236:	e8 00 00 00 00       	callq  2c23b <__MARSH_WRAP__e1000_down+0x4595>
			2c237: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c23b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c23f:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c246:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c24b:	48 8b 00             	mov    (%rax),%rax
   2c24e:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   2c255:	48 85 c0             	test   %rax,%rax
   2c258:	0f 84 30 01 00 00    	je     2c38e <__MARSH_WRAP__e1000_down+0x46e8>
   2c25e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c262:	48 8d 48 18          	lea    0x18(%rax),%rcx
   2c266:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c26c:	4c 89 e2             	mov    %r12,%rdx
   2c26f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c272: R_X86_64_32S	.rodata.str1.1+0x321c
   2c276:	e8 00 00 00 00       	callq  2c27b <__MARSH_WRAP__e1000_down+0x45d5>
			2c277: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c27b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c27f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c283:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c289:	4c 89 e2             	mov    %r12,%rdx
   2c28c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c28f: R_X86_64_32S	.rodata.str1.1+0x321c
   2c293:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c29a:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c29f:	48 8b 00             	mov    (%rax),%rax
   2c2a2:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2c2a9:	48 83 c1 20          	add    $0x20,%rcx
   2c2ad:	e8 00 00 00 00       	callq  2c2b2 <__MARSH_WRAP__e1000_down+0x460c>
			2c2ae: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c2b2:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c2b6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c2ba:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c2c0:	4c 89 e2             	mov    %r12,%rdx
   2c2c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c2c6: R_X86_64_32S	.rodata.str1.1+0x321c
   2c2ca:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c2d1:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c2d6:	48 8b 00             	mov    (%rax),%rax
   2c2d9:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2c2e0:	48 83 c1 30          	add    $0x30,%rcx
   2c2e4:	e8 00 00 00 00       	callq  2c2e9 <__MARSH_WRAP__e1000_down+0x4643>
			2c2e5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c2e9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c2ed:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c2f1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c2f7:	4c 89 e2             	mov    %r12,%rdx
   2c2fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c2fd: R_X86_64_32S	.rodata.str1.1+0x321c
   2c301:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c308:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c30d:	48 8b 00             	mov    (%rax),%rax
   2c310:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2c317:	48 83 c1 10          	add    $0x10,%rcx
   2c31b:	e8 00 00 00 00       	callq  2c320 <__MARSH_WRAP__e1000_down+0x467a>
			2c31c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c320:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c324:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c328:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c32e:	4c 89 e2             	mov    %r12,%rdx
   2c331:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c334: R_X86_64_32S	.rodata.str1.1+0x321c
   2c338:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c33f:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c344:	48 8b 00             	mov    (%rax),%rax
   2c347:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2c34e:	48 83 c1 28          	add    $0x28,%rcx
   2c352:	e8 00 00 00 00       	callq  2c357 <__MARSH_WRAP__e1000_down+0x46b1>
			2c353: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c357:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c35b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c35f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c365:	4c 89 e2             	mov    %r12,%rdx
   2c368:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c36b: R_X86_64_32S	.rodata.str1.1+0x321c
   2c36f:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c376:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c37b:	48 8b 00             	mov    (%rax),%rax
   2c37e:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   2c385:	48 83 c1 08          	add    $0x8,%rcx
   2c389:	e8 00 00 00 00       	callq  2c38e <__MARSH_WRAP__e1000_down+0x46e8>
			2c38a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c38e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c392:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c396:	b9 08 00 00 00       	mov    $0x8,%ecx
   2c39b:	4c 89 e2             	mov    %r12,%rdx
   2c39e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c3a1: R_X86_64_32S	.rodata.str1.1+0x321c
   2c3a5:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c3ac:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c3b1:	4c 8b 00             	mov    (%rax),%r8
   2c3b4:	49 81 c0 20 06 00 00 	add    $0x620,%r8
   2c3bb:	e8 00 00 00 00       	callq  2c3c0 <__MARSH_WRAP__e1000_down+0x471a>
			2c3bc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c3c0:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c3c4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c3c8:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   2c3ce:	4c 89 e2             	mov    %r12,%rdx
   2c3d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c3d4: R_X86_64_32S	.rodata.str1.1+0x321c
   2c3d8:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c3df:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c3e4:	48 8b 08             	mov    (%rax),%rcx
   2c3e7:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   2c3ee:	e8 00 00 00 00       	callq  2c3f3 <__MARSH_WRAP__e1000_down+0x474d>
			2c3ef: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c3f3:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c3f7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c3fb:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   2c401:	4c 89 e2             	mov    %r12,%rdx
   2c404:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c407: R_X86_64_32S	.rodata.str1.1+0x321c
   2c40b:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c412:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c417:	48 8b 08             	mov    (%rax),%rcx
   2c41a:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   2c421:	e8 00 00 00 00       	callq  2c426 <__MARSH_WRAP__e1000_down+0x4780>
			2c422: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c426:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c42a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c42e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2c434:	4c 89 e2             	mov    %r12,%rdx
   2c437:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c43a: R_X86_64_32S	.rodata.str1.1+0x321c
   2c43e:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c445:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c44a:	48 8b 08             	mov    (%rax),%rcx
   2c44d:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   2c454:	e8 00 00 00 00       	callq  2c459 <__MARSH_WRAP__e1000_down+0x47b3>
			2c455: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c459:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c45d:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c464:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c469:	48 8b 00             	mov    (%rax),%rax
   2c46c:	48 8b 80 18 06 00 00 	mov    0x618(%rax),%rax
   2c473:	48 85 c0             	test   %rax,%rax
   2c476:	74 1b                	je     2c493 <__MARSH_WRAP__e1000_down+0x47ed>
   2c478:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c47c:	49 89 c0             	mov    %rax,%r8
   2c47f:	b9 08 00 00 00       	mov    $0x8,%ecx
   2c484:	4c 89 e2             	mov    %r12,%rdx
   2c487:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c48a: R_X86_64_32S	.rodata.str1.1+0x321c
   2c48e:	e8 00 00 00 00       	callq  2c493 <__MARSH_WRAP__e1000_down+0x47ed>
			2c48f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c493:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c497:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c49b:	b9 04 00 00 00       	mov    $0x4,%ecx
   2c4a0:	4c 89 e2             	mov    %r12,%rdx
   2c4a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c4a6: R_X86_64_32S	.rodata.str1.1+0x321c
   2c4aa:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c4b1:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c4b6:	4c 8b 00             	mov    (%rax),%r8
   2c4b9:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   2c4c0:	e8 00 00 00 00       	callq  2c4c5 <__MARSH_WRAP__e1000_down+0x481f>
			2c4c1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c4c5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c4c9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c4cd:	b9 08 00 00 00       	mov    $0x8,%ecx
   2c4d2:	4c 89 e2             	mov    %r12,%rdx
   2c4d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c4d8: R_X86_64_32S	.rodata.str1.1+0x321c
   2c4dc:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c4e3:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c4e8:	4c 8b 00             	mov    (%rax),%r8
   2c4eb:	49 83 c0 70          	add    $0x70,%r8
   2c4ef:	e8 00 00 00 00       	callq  2c4f4 <__MARSH_WRAP__e1000_down+0x484e>
			2c4f0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c4f4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c4f8:	ba 10 00 00 00       	mov    $0x10,%edx
   2c4fd:	be 10 00 00 00       	mov    $0x10,%esi
   2c502:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c509:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c50e:	48 8b 38             	mov    (%rax),%rdi
   2c511:	e8 00 00 00 00       	callq  2c516 <__MARSH_WRAP__e1000_down+0x4870>
			2c512: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2c516:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c51a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c51e:	b9 04 00 00 00       	mov    $0x4,%ecx
   2c523:	4c 89 e2             	mov    %r12,%rdx
   2c526:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c529: R_X86_64_32S	.rodata.str1.1+0x321c
   2c52d:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c534:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c539:	4c 8b 00             	mov    (%rax),%r8
   2c53c:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   2c543:	e8 00 00 00 00       	callq  2c548 <__MARSH_WRAP__e1000_down+0x48a2>
			2c544: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c548:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c54c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c550:	b9 08 00 00 00       	mov    $0x8,%ecx
   2c555:	4c 89 e2             	mov    %r12,%rdx
   2c558:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c55b: R_X86_64_32S	.rodata.str1.1+0x321c
   2c55f:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c566:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c56b:	4c 8b 00             	mov    (%rax),%r8
   2c56e:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   2c575:	e8 00 00 00 00       	callq  2c57a <__MARSH_WRAP__e1000_down+0x48d4>
			2c576: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c57a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c57e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c582:	b9 04 00 00 00       	mov    $0x4,%ecx
   2c587:	4c 89 e2             	mov    %r12,%rdx
   2c58a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c58d: R_X86_64_32S	.rodata.str1.1+0x321c
   2c591:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c598:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c59d:	4c 8b 00             	mov    (%rax),%r8
   2c5a0:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   2c5a7:	e8 00 00 00 00       	callq  2c5ac <__MARSH_WRAP__e1000_down+0x4906>
			2c5a8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c5ac:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c5b0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c5b4:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2c5ba:	4c 89 e2             	mov    %r12,%rdx
   2c5bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c5c0: R_X86_64_32S	.rodata.str1.1+0x321c
   2c5c4:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c5cb:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c5d0:	48 8b 08             	mov    (%rax),%rcx
   2c5d3:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   2c5da:	e8 00 00 00 00       	callq  2c5df <__MARSH_WRAP__e1000_down+0x4939>
			2c5db: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c5df:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c5e3:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c5ea:	4a 8b 44 e8 20       	mov    0x20(%rax,%r13,8),%rax
   2c5ef:	48 8b 00             	mov    (%rax),%rax
   2c5f2:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   2c5f9:	00 
   2c5fa:	0f 84 83 00 00 00    	je     2c683 <__MARSH_WRAP__e1000_down+0x49dd>
   2c600:	31 db                	xor    %ebx,%ebx
   2c602:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c606:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   2c60a:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2c60e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c612:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c617:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c61a: R_X86_64_32S	.rodata.str1.1+0x321c
   2c61e:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c625:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c62a:	4c 89 e2             	mov    %r12,%rdx
   2c62d:	48 8b 00             	mov    (%rax),%rax
   2c630:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   2c637:	49 83 c0 08          	add    $0x8,%r8
   2c63b:	49 01 d8             	add    %rbx,%r8
   2c63e:	48 ff c3             	inc    %rbx
   2c641:	e8 00 00 00 00       	callq  2c646 <__MARSH_WRAP__e1000_down+0x49a0>
			2c642: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c646:	48 83 fb 20          	cmp    $0x20,%rbx
   2c64a:	75 b6                	jne    2c602 <__MARSH_WRAP__e1000_down+0x495c>
   2c64c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c650:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   2c654:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2c65a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c65e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c661: R_X86_64_32S	.rodata.str1.1+0x321c
   2c665:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c66c:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c671:	4c 89 e2             	mov    %r12,%rdx
   2c674:	48 8b 00             	mov    (%rax),%rax
   2c677:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   2c67e:	e8 00 00 00 00       	callq  2c683 <__MARSH_WRAP__e1000_down+0x49dd>
			2c67f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c683:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c687:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2c68b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c68f:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   2c695:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c698: R_X86_64_32S	.rodata.str1.1+0x321c
   2c69c:	48 89 da             	mov    %rbx,%rdx
   2c69f:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c6a6:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c6ab:	48 8b 08             	mov    (%rax),%rcx
   2c6ae:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   2c6b5:	e8 00 00 00 00       	callq  2c6ba <__MARSH_WRAP__e1000_down+0x4a14>
			2c6b6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c6ba:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c6be:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c6c2:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   2c6c8:	48 89 da             	mov    %rbx,%rdx
   2c6cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c6ce: R_X86_64_32S	.rodata.str1.1+0x321c
   2c6d2:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c6d9:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c6de:	48 8b 08             	mov    (%rax),%rcx
   2c6e1:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   2c6e8:	e8 00 00 00 00       	callq  2c6ed <__MARSH_WRAP__e1000_down+0x4a47>
			2c6e9: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c6ed:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c6f1:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c6f8:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c6fd:	48 8b 00             	mov    (%rax),%rax
   2c700:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   2c707:	48 85 c0             	test   %rax,%rax
   2c70a:	74 54                	je     2c760 <__MARSH_WRAP__e1000_down+0x4aba>
   2c70c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c710:	48 8d 48 60          	lea    0x60(%rax),%rcx
   2c714:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c71a:	48 89 da             	mov    %rbx,%rdx
   2c71d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c720: R_X86_64_32S	.rodata.str1.1+0x321c
   2c724:	e8 00 00 00 00       	callq  2c729 <__MARSH_WRAP__e1000_down+0x4a83>
			2c725: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c729:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c72d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c731:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c737:	48 89 da             	mov    %rbx,%rdx
   2c73a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c73d: R_X86_64_32S	.rodata.str1.1+0x321c
   2c741:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c748:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c74d:	48 8b 00             	mov    (%rax),%rax
   2c750:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   2c757:	48 83 c1 58          	add    $0x58,%rcx
   2c75b:	e8 00 00 00 00       	callq  2c760 <__MARSH_WRAP__e1000_down+0x4aba>
			2c75c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c760:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c764:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c768:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c76b: R_X86_64_32S	.rodata.str1.1+0x321c
   2c76f:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   2c775:	48 89 da             	mov    %rbx,%rdx
   2c778:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c77f:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c784:	48 8b 08             	mov    (%rax),%rcx
   2c787:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   2c78e:	e8 00 00 00 00       	callq  2c793 <__MARSH_WRAP__e1000_down+0x4aed>
			2c78f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c793:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c797:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c79e:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c7a3:	48 8b 00             	mov    (%rax),%rax
   2c7a6:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   2c7ad:	48 85 ff             	test   %rdi,%rdi
   2c7b0:	74 7c                	je     2c82e <__MARSH_WRAP__e1000_down+0x4b88>
   2c7b2:	ba 08 00 00 00       	mov    $0x8,%edx
   2c7b7:	be 10 00 00 00       	mov    $0x10,%esi
   2c7bc:	e8 00 00 00 00       	callq  2c7c1 <__MARSH_WRAP__e1000_down+0x4b1b>
			2c7bd: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2c7c1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c7c5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c7c9:	b9 08 00 00 00       	mov    $0x8,%ecx
   2c7ce:	48 89 da             	mov    %rbx,%rdx
   2c7d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c7d4: R_X86_64_32S	.rodata.str1.1+0x321c
   2c7d8:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c7df:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c7e4:	48 8b 00             	mov    (%rax),%rax
   2c7e7:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   2c7ee:	49 83 c0 10          	add    $0x10,%r8
   2c7f2:	e8 00 00 00 00       	callq  2c7f7 <__MARSH_WRAP__e1000_down+0x4b51>
			2c7f3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c7f7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c7fb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c7ff:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   2c805:	48 89 da             	mov    %rbx,%rdx
   2c808:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c80b: R_X86_64_32S	.rodata.str1.1+0x321c
   2c80f:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c816:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c81b:	48 8b 00             	mov    (%rax),%rax
   2c81e:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   2c825:	48 83 c1 08          	add    $0x8,%rcx
   2c829:	e8 00 00 00 00       	callq  2c82e <__MARSH_WRAP__e1000_down+0x4b88>
			2c82a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c82e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c832:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c836:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2c83c:	48 89 da             	mov    %rbx,%rdx
   2c83f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c842: R_X86_64_32S	.rodata.str1.1+0x321c
   2c846:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c84d:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c852:	48 8b 08             	mov    (%rax),%rcx
   2c855:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   2c85c:	e8 00 00 00 00       	callq  2c861 <__MARSH_WRAP__e1000_down+0x4bbb>
			2c85d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c861:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c865:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c86c:	4a 8b 44 f8 20       	mov    0x20(%rax,%r15,8),%rax
   2c871:	48 8b 00             	mov    (%rax),%rax
   2c874:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   2c87b:	00 
   2c87c:	0f 84 83 00 00 00    	je     2c905 <__MARSH_WRAP__e1000_down+0x4c5f>
   2c882:	31 db                	xor    %ebx,%ebx
   2c884:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c888:	48 8b 55 90          	mov    0xffffffffffffff90(%rbp),%rdx
   2c88c:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2c890:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c894:	b9 01 00 00 00       	mov    $0x1,%ecx
   2c899:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c89c: R_X86_64_32S	.rodata.str1.1+0x321c
   2c8a0:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c8a7:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c8ac:	4c 89 e2             	mov    %r12,%rdx
   2c8af:	48 8b 00             	mov    (%rax),%rax
   2c8b2:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   2c8b9:	49 83 c0 08          	add    $0x8,%r8
   2c8bd:	49 01 d8             	add    %rbx,%r8
   2c8c0:	48 ff c3             	inc    %rbx
   2c8c3:	e8 00 00 00 00       	callq  2c8c8 <__MARSH_WRAP__e1000_down+0x4c22>
			2c8c4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c8c8:	48 83 fb 20          	cmp    $0x20,%rbx
   2c8cc:	75 b6                	jne    2c884 <__MARSH_WRAP__e1000_down+0x4bde>
   2c8ce:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c8d2:	48 8b 55 90          	mov    0xffffffffffffff90(%rbp),%rdx
   2c8d6:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2c8dc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c8e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c8e3: R_X86_64_32S	.rodata.str1.1+0x321c
   2c8e7:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
   2c8ee:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   2c8f3:	4c 89 e2             	mov    %r12,%rdx
   2c8f6:	48 8b 00             	mov    (%rax),%rax
   2c8f9:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   2c900:	e8 00 00 00 00       	callq  2c905 <__MARSH_WRAP__e1000_down+0x4c5f>
			2c901: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c905:	ff 45 ac             	incl   0xffffffffffffffac(%rbp)
   2c908:	49 ff c6             	inc    %r14
   2c90b:	48 ff 85 78 ff ff ff 	incq   0xffffffffffffff78(%rbp)
   2c912:	49 ff c5             	inc    %r13
   2c915:	49 ff c7             	inc    %r15
   2c918:	48 ff 45 80          	incq   0xffffffffffffff80(%rbp)
   2c91c:	48 ff 45 88          	incq   0xffffffffffffff88(%rbp)
   2c920:	48 ff 45 90          	incq   0xffffffffffffff90(%rbp)
   2c924:	48 83 45 a0 08       	addq   $0x8,0xffffffffffffffa0(%rbp)
   2c929:	83 7d ac 08          	cmpl   $0x8,0xffffffffffffffac(%rbp)
   2c92d:	0f 85 a1 f3 ff ff    	jne    2bcd4 <__MARSH_WRAP__e1000_down+0x402e>
   2c933:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2c937:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2c93b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c93f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c945:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c948: R_X86_64_32S	.rodata.str1.1+0x321c
   2c94c:	48 89 da             	mov    %rbx,%rdx
   2c94f:	48 81 c1 10 02 00 00 	add    $0x210,%rcx
   2c956:	e8 00 00 00 00       	callq  2c95b <__MARSH_WRAP__e1000_down+0x4cb5>
			2c957: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c95b:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2c95f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c963:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2c969:	48 89 da             	mov    %rbx,%rdx
   2c96c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c96f: R_X86_64_32S	.rodata.str1.1+0x321c
   2c973:	48 81 c1 18 02 00 00 	add    $0x218,%rcx
   2c97a:	e8 00 00 00 00       	callq  2c97f <__MARSH_WRAP__e1000_down+0x4cd9>
			2c97b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c97f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2c983:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c987:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   2c98d:	48 89 da             	mov    %rbx,%rdx
   2c990:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c993: R_X86_64_32S	.rodata.str1.1+0x321c
   2c997:	48 81 c1 f8 02 00 00 	add    $0x2f8,%rcx
   2c99e:	e8 00 00 00 00       	callq  2c9a3 <__MARSH_WRAP__e1000_down+0x4cfd>
			2c99f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2c9a3:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c9a7:	48 83 b8 f8 02 00 00 	cmpq   $0x0,0x2f8(%rax)
   2c9ae:	00 
   2c9af:	0f 84 eb 0a 00 00    	je     2d4a0 <__MARSH_WRAP__e1000_down+0x57fa>
   2c9b5:	45 31 f6             	xor    %r14d,%r14d
   2c9b8:	45 31 ed             	xor    %r13d,%r13d
   2c9bb:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c9bf:	49 8d 9d 00 03 00 00 	lea    0x300(%r13),%rbx
   2c9c6:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2c9ca:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c9ce:	b9 08 00 00 00       	mov    $0x8,%ecx
   2c9d3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2c9d6: R_X86_64_32S	.rodata.str1.1+0x321c
   2c9da:	49 89 d8             	mov    %rbx,%r8
   2c9dd:	4c 89 e2             	mov    %r12,%rdx
   2c9e0:	41 ff c6             	inc    %r14d
   2c9e3:	4c 03 80 f8 02 00 00 	add    0x2f8(%rax),%r8
   2c9ea:	49 83 c0 08          	add    $0x8,%r8
   2c9ee:	e8 00 00 00 00       	callq  2c9f3 <__MARSH_WRAP__e1000_down+0x4d4d>
			2c9ef: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2c9f3:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2c9f7:	49 89 d8             	mov    %rbx,%r8
   2c9fa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2c9fe:	b9 08 00 00 00       	mov    $0x8,%ecx
   2ca03:	4c 89 e2             	mov    %r12,%rdx
   2ca06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ca09: R_X86_64_32S	.rodata.str1.1+0x321c
   2ca0d:	4c 03 80 f8 02 00 00 	add    0x2f8(%rax),%r8
   2ca14:	e8 00 00 00 00       	callq  2ca19 <__MARSH_WRAP__e1000_down+0x4d73>
			2ca15: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ca19:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2ca1d:	4d 89 e8             	mov    %r13,%r8
   2ca20:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ca24:	b9 08 00 00 00       	mov    $0x8,%ecx
   2ca29:	4c 89 e2             	mov    %r12,%rdx
   2ca2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ca2f: R_X86_64_32S	.rodata.str1.1+0x321c
   2ca33:	49 83 c5 38          	add    $0x38,%r13
   2ca37:	4c 03 80 f8 02 00 00 	add    0x2f8(%rax),%r8
   2ca3e:	49 81 c0 18 03 00 00 	add    $0x318,%r8
   2ca45:	e8 00 00 00 00       	callq  2ca4a <__MARSH_WRAP__e1000_down+0x4da4>
			2ca46: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ca4a:	41 83 fe 0c          	cmp    $0xc,%r14d
   2ca4e:	0f 85 67 ff ff ff    	jne    2c9bb <__MARSH_WRAP__e1000_down+0x4d15>
   2ca54:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2ca58:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ca5c:	4c 89 e2             	mov    %r12,%rdx
   2ca5f:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ca64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ca67: R_X86_64_32S	.rodata.str1.1+0x321c
   2ca6b:	45 31 ed             	xor    %r13d,%r13d
   2ca6e:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2ca75:	49 83 c0 48          	add    $0x48,%r8
   2ca79:	e8 00 00 00 00       	callq  2ca7e <__MARSH_WRAP__e1000_down+0x4dd8>
			2ca7a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ca7e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2ca82:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ca86:	4c 89 e2             	mov    %r12,%rdx
   2ca89:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ca8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ca91: R_X86_64_32S	.rodata.str1.1+0x321c
   2ca95:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2ca9c:	49 83 c0 38          	add    $0x38,%r8
   2caa0:	e8 00 00 00 00       	callq  2caa5 <__MARSH_WRAP__e1000_down+0x4dff>
			2caa1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2caa5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2caa9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2caad:	4c 89 e2             	mov    %r12,%rdx
   2cab0:	b9 04 00 00 00       	mov    $0x4,%ecx
   2cab5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cab8: R_X86_64_32S	.rodata.str1.1+0x321c
   2cabc:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2cac3:	49 83 c0 7c          	add    $0x7c,%r8
   2cac7:	e8 00 00 00 00       	callq  2cacc <__MARSH_WRAP__e1000_down+0x4e26>
			2cac8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cacc:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2cad0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cad4:	4c 89 e2             	mov    %r12,%rdx
   2cad7:	b9 04 00 00 00       	mov    $0x4,%ecx
   2cadc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cadf: R_X86_64_32S	.rodata.str1.1+0x321c
   2cae3:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2caea:	49 81 c0 fc 02 00 00 	add    $0x2fc,%r8
   2caf1:	e8 00 00 00 00       	callq  2caf6 <__MARSH_WRAP__e1000_down+0x4e50>
			2caf2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2caf6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2cafa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cafe:	4c 89 e2             	mov    %r12,%rdx
   2cb01:	b9 02 00 00 00       	mov    $0x2,%ecx
   2cb06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cb09: R_X86_64_32S	.rodata.str1.1+0x321c
   2cb0d:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2cb14:	49 83 c0 3e          	add    $0x3e,%r8
   2cb18:	e8 00 00 00 00       	callq  2cb1d <__MARSH_WRAP__e1000_down+0x4e77>
			2cb19: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cb1d:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2cb21:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cb25:	4c 89 e2             	mov    %r12,%rdx
   2cb28:	b9 02 00 00 00       	mov    $0x2,%ecx
   2cb2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cb30: R_X86_64_32S	.rodata.str1.1+0x321c
   2cb34:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2cb3b:	49 83 c0 42          	add    $0x42,%r8
   2cb3f:	e8 00 00 00 00       	callq  2cb44 <__MARSH_WRAP__e1000_down+0x4e9e>
			2cb40: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cb44:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2cb48:	ba 78 02 00 00       	mov    $0x278,%edx
   2cb4d:	be 80 00 00 00       	mov    $0x80,%esi
   2cb52:	48 8b b8 f8 02 00 00 	mov    0x2f8(%rax),%rdi
   2cb59:	e8 00 00 00 00       	callq  2cb5e <__MARSH_WRAP__e1000_down+0x4eb8>
			2cb5a: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2cb5e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2cb62:	4c 8b a0 f8 02 00 00 	mov    0x2f8(%rax),%r12
   2cb69:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   2cb6d:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   2cb74:	00 
   2cb75:	4c 8d 75 d4          	lea    0xffffffffffffffd4(%rbp),%r14
   2cb79:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cb7d:	49 89 d8             	mov    %rbx,%r8
   2cb80:	b9 01 00 00 00       	mov    $0x1,%ecx
   2cb85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cb88: R_X86_64_32S	.rodata.str1.1+0x321c
   2cb8c:	49 ff c5             	inc    %r13
   2cb8f:	4c 89 f2             	mov    %r14,%rdx
   2cb92:	48 ff c3             	inc    %rbx
   2cb95:	e8 00 00 00 00       	callq  2cb9a <__MARSH_WRAP__e1000_down+0x4ef4>
			2cb96: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cb9a:	49 83 fd 14          	cmp    $0x14,%r13
   2cb9e:	75 d5                	jne    2cb75 <__MARSH_WRAP__e1000_down+0x4ecf>
   2cba0:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2cba4:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cba8:	b9 04 00 00 00       	mov    $0x4,%ecx
   2cbad:	4c 89 f2             	mov    %r14,%rdx
   2cbb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cbb3: R_X86_64_32S	.rodata.str1.1+0x321c
   2cbb7:	49 89 d8             	mov    %rbx,%r8
   2cbba:	e8 00 00 00 00       	callq  2cbbf <__MARSH_WRAP__e1000_down+0x4f19>
			2cbbb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cbbf:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2cbc2:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   2cbc9:	00 
   2cbca:	49 89 d8             	mov    %rbx,%r8
   2cbcd:	b9 04 00 00 00       	mov    $0x4,%ecx
   2cbd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cbd5: R_X86_64_32S	.rodata.str1.1+0x321c
   2cbd9:	83 e2 01             	and    $0x1,%edx
   2cbdc:	83 e0 fe             	and    $0xfffffffffffffffe,%eax
   2cbdf:	09 d0                	or     %edx,%eax
   2cbe1:	4c 89 f2             	mov    %r14,%rdx
   2cbe4:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   2cbeb:	00 
   2cbec:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cbf0:	e8 00 00 00 00       	callq  2cbf5 <__MARSH_WRAP__e1000_down+0x4f4f>
			2cbf1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cbf5:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2cbf8:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   2cbff:	00 
   2cc00:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   2cc07:	00 
   2cc08:	41 b8 78 00 00 00    	mov    $0x78,%r8d
   2cc0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cc11: R_X86_64_32S	.rodata.str1.1+0x321c
   2cc15:	83 e2 01             	and    $0x1,%edx
   2cc18:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   2cc1b:	01 d2                	add    %edx,%edx
   2cc1d:	09 d0                	or     %edx,%eax
   2cc1f:	4c 89 f2             	mov    %r14,%rdx
   2cc22:	41 88 84 24 8c 01 00 	mov    %al,0x18c(%r12)
   2cc29:	00 
   2cc2a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cc2e:	e8 00 00 00 00       	callq  2cc33 <__MARSH_WRAP__e1000_down+0x4f8d>
			2cc2f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2cc33:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   2cc3a:	00 
   2cc3b:	48 85 c0             	test   %rax,%rax
   2cc3e:	0f 84 d6 00 00 00    	je     2cd1a <__MARSH_WRAP__e1000_down+0x5074>
   2cc44:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cc48:	48 8d 48 18          	lea    0x18(%rax),%rcx
   2cc4c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2cc52:	4c 89 f2             	mov    %r14,%rdx
   2cc55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cc58: R_X86_64_32S	.rodata.str1.1+0x321c
   2cc5c:	e8 00 00 00 00       	callq  2cc61 <__MARSH_WRAP__e1000_down+0x4fbb>
			2cc5d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2cc61:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   2cc68:	00 
   2cc69:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cc6d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2cc73:	4c 89 f2             	mov    %r14,%rdx
   2cc76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cc79: R_X86_64_32S	.rodata.str1.1+0x321c
   2cc7d:	48 83 c1 20          	add    $0x20,%rcx
   2cc81:	e8 00 00 00 00       	callq  2cc86 <__MARSH_WRAP__e1000_down+0x4fe0>
			2cc82: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2cc86:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   2cc8d:	00 
   2cc8e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cc92:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2cc98:	4c 89 f2             	mov    %r14,%rdx
   2cc9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cc9e: R_X86_64_32S	.rodata.str1.1+0x321c
   2cca2:	48 83 c1 30          	add    $0x30,%rcx
   2cca6:	e8 00 00 00 00       	callq  2ccab <__MARSH_WRAP__e1000_down+0x5005>
			2cca7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ccab:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   2ccb2:	00 
   2ccb3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ccb7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ccbd:	4c 89 f2             	mov    %r14,%rdx
   2ccc0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ccc3: R_X86_64_32S	.rodata.str1.1+0x321c
   2ccc7:	48 83 c1 10          	add    $0x10,%rcx
   2cccb:	e8 00 00 00 00       	callq  2ccd0 <__MARSH_WRAP__e1000_down+0x502a>
			2cccc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ccd0:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   2ccd7:	00 
   2ccd8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ccdc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2cce2:	4c 89 f2             	mov    %r14,%rdx
   2cce5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cce8: R_X86_64_32S	.rodata.str1.1+0x321c
   2ccec:	48 83 c1 28          	add    $0x28,%rcx
   2ccf0:	e8 00 00 00 00       	callq  2ccf5 <__MARSH_WRAP__e1000_down+0x504f>
			2ccf1: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ccf5:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   2ccfc:	00 
   2ccfd:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cd01:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2cd07:	4c 89 f2             	mov    %r14,%rdx
   2cd0a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cd0d: R_X86_64_32S	.rodata.str1.1+0x321c
   2cd11:	48 83 c1 08          	add    $0x8,%rcx
   2cd15:	e8 00 00 00 00       	callq  2cd1a <__MARSH_WRAP__e1000_down+0x5074>
			2cd16: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2cd1a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cd1e:	4d 8d 84 24 b8 01 00 	lea    0x1b8(%r12),%r8
   2cd25:	00 
   2cd26:	b9 08 00 00 00       	mov    $0x8,%ecx
   2cd2b:	4c 89 f2             	mov    %r14,%rdx
   2cd2e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cd31: R_X86_64_32S	.rodata.str1.1+0x321c
   2cd35:	e8 00 00 00 00       	callq  2cd3a <__MARSH_WRAP__e1000_down+0x5094>
			2cd36: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cd3a:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cd3e:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   2cd45:	00 
   2cd46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cd49: R_X86_64_32S	.rodata.str1.1+0x321c
   2cd4d:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   2cd53:	4c 89 f2             	mov    %r14,%rdx
   2cd56:	e8 00 00 00 00       	callq  2cd5b <__MARSH_WRAP__e1000_down+0x50b5>
			2cd57: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2cd5b:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   2cd62:	00 
   2cd63:	48 85 ff             	test   %rdi,%rdi
   2cd66:	0f 84 50 06 00 00    	je     2d3bc <__MARSH_WRAP__e1000_down+0x5716>
   2cd6c:	ba 08 00 00 00       	mov    $0x8,%edx
   2cd71:	be 10 03 00 00       	mov    $0x310,%esi
   2cd76:	31 db                	xor    %ebx,%ebx
   2cd78:	e8 00 00 00 00       	callq  2cd7d <__MARSH_WRAP__e1000_down+0x50d7>
			2cd79: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2cd7d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cd84:	00 
   2cd85:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cd89:	b9 08 00 00 00       	mov    $0x8,%ecx
   2cd8e:	4c 89 f2             	mov    %r14,%rdx
   2cd91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cd94: R_X86_64_32S	.rodata.str1.1+0x321c
   2cd98:	49 81 c0 10 03 00 00 	add    $0x310,%r8
   2cd9f:	e8 00 00 00 00       	callq  2cda4 <__MARSH_WRAP__e1000_down+0x50fe>
			2cda0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cda4:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cdab:	00 
   2cdac:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cdb0:	b9 02 00 00 00       	mov    $0x2,%ecx
   2cdb5:	4c 89 f2             	mov    %r14,%rdx
   2cdb8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cdbb: R_X86_64_32S	.rodata.str1.1+0x321c
   2cdbf:	49 81 c0 70 01 00 00 	add    $0x170,%r8
   2cdc6:	e8 00 00 00 00       	callq  2cdcb <__MARSH_WRAP__e1000_down+0x5125>
			2cdc7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cdcb:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cdd2:	00 
   2cdd3:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cdd7:	b9 08 00 00 00       	mov    $0x8,%ecx
   2cddc:	4c 89 f2             	mov    %r14,%rdx
   2cddf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cde2: R_X86_64_32S	.rodata.str1.1+0x321c
   2cde6:	49 81 c0 48 03 00 00 	add    $0x348,%r8
   2cded:	e8 00 00 00 00       	callq  2cdf2 <__MARSH_WRAP__e1000_down+0x514c>
			2cdee: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cdf2:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cdf9:	00 
   2cdfa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cdfe:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ce03:	4c 89 f2             	mov    %r14,%rdx
   2ce06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ce09: R_X86_64_32S	.rodata.str1.1+0x321c
   2ce0d:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
   2ce14:	e8 00 00 00 00       	callq  2ce19 <__MARSH_WRAP__e1000_down+0x5173>
			2ce15: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ce19:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2ce20:	00 
   2ce21:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ce25:	b9 04 00 00 00       	mov    $0x4,%ecx
   2ce2a:	4c 89 f2             	mov    %r14,%rdx
   2ce2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ce30: R_X86_64_32S	.rodata.str1.1+0x321c
   2ce34:	49 81 c0 6c 01 00 00 	add    $0x16c,%r8
   2ce3b:	e8 00 00 00 00       	callq  2ce40 <__MARSH_WRAP__e1000_down+0x519a>
			2ce3c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2ce40:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2ce47:	00 
   2ce48:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ce4c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ce52:	4c 89 f2             	mov    %r14,%rdx
   2ce55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ce58: R_X86_64_32S	.rodata.str1.1+0x321c
   2ce5c:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   2ce63:	e8 00 00 00 00       	callq  2ce68 <__MARSH_WRAP__e1000_down+0x51c2>
			2ce64: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ce68:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2ce6f:	00 
   2ce70:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ce74:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ce7a:	4c 89 f2             	mov    %r14,%rdx
   2ce7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ce80: R_X86_64_32S	.rodata.str1.1+0x321c
   2ce84:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   2ce8b:	e8 00 00 00 00       	callq  2ce90 <__MARSH_WRAP__e1000_down+0x51ea>
			2ce8c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ce90:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2ce97:	00 
   2ce98:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2ce9c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2cea2:	4c 89 f2             	mov    %r14,%rdx
   2cea5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cea8: R_X86_64_32S	.rodata.str1.1+0x321c
   2ceac:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   2ceb3:	e8 00 00 00 00       	callq  2ceb8 <__MARSH_WRAP__e1000_down+0x5212>
			2ceb4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2ceb8:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cebf:	00 
   2cec0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cec4:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2cec8:	b9 01 00 00 00       	mov    $0x1,%ecx
   2cecd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ced0: R_X86_64_32S	.rodata.str1.1+0x321c
   2ced4:	49 81 c0 60 02 00 00 	add    $0x260,%r8
   2cedb:	49 01 d8             	add    %rbx,%r8
   2cede:	48 ff c3             	inc    %rbx
   2cee1:	e8 00 00 00 00       	callq  2cee6 <__MARSH_WRAP__e1000_down+0x5240>
			2cee2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cee6:	48 83 fb 20          	cmp    $0x20,%rbx
   2ceea:	75 cc                	jne    2ceb8 <__MARSH_WRAP__e1000_down+0x5212>
   2ceec:	30 db                	xor    %bl,%bl
   2ceee:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cef5:	00 
   2cef6:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2cefa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cefe:	b9 01 00 00 00       	mov    $0x1,%ecx
   2cf03:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cf06: R_X86_64_32S	.rodata.str1.1+0x321c
   2cf0a:	4c 89 ea             	mov    %r13,%rdx
   2cf0d:	49 81 c0 80 01 00 00 	add    $0x180,%r8
   2cf14:	49 01 d8             	add    %rbx,%r8
   2cf17:	48 ff c3             	inc    %rbx
   2cf1a:	e8 00 00 00 00       	callq  2cf1f <__MARSH_WRAP__e1000_down+0x5279>
			2cf1b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cf1f:	48 83 fb 20          	cmp    $0x20,%rbx
   2cf23:	75 c9                	jne    2ceee <__MARSH_WRAP__e1000_down+0x5248>
   2cf25:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cf2c:	00 
   2cf2d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cf31:	b9 02 00 00 00       	mov    $0x2,%ecx
   2cf36:	4c 89 ea             	mov    %r13,%rdx
   2cf39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cf3c: R_X86_64_32S	.rodata.str1.1+0x321c
   2cf40:	30 db                	xor    %bl,%bl
   2cf42:	49 81 c0 72 01 00 00 	add    $0x172,%r8
   2cf49:	e8 00 00 00 00       	callq  2cf4e <__MARSH_WRAP__e1000_down+0x52a8>
			2cf4a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cf4e:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   2cf55:	00 
   2cf56:	ba 08 00 00 00       	mov    $0x8,%edx
   2cf5b:	be 48 00 00 00       	mov    $0x48,%esi
   2cf60:	e8 00 00 00 00       	callq  2cf65 <__MARSH_WRAP__e1000_down+0x52bf>
			2cf61: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2cf65:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cf6c:	00 
   2cf6d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cf71:	b9 08 00 00 00       	mov    $0x8,%ecx
   2cf76:	4c 89 ea             	mov    %r13,%rdx
   2cf79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cf7c: R_X86_64_32S	.rodata.str1.1+0x321c
   2cf80:	49 83 c0 48          	add    $0x48,%r8
   2cf84:	e8 00 00 00 00       	callq  2cf89 <__MARSH_WRAP__e1000_down+0x52e3>
			2cf85: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cf89:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2cf90:	00 
   2cf91:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cf95:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2cf99:	b9 01 00 00 00       	mov    $0x1,%ecx
   2cf9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cfa1: R_X86_64_32S	.rodata.str1.1+0x321c
   2cfa5:	49 81 c0 40 02 00 00 	add    $0x240,%r8
   2cfac:	49 01 d8             	add    %rbx,%r8
   2cfaf:	48 ff c3             	inc    %rbx
   2cfb2:	e8 00 00 00 00       	callq  2cfb7 <__MARSH_WRAP__e1000_down+0x5311>
			2cfb3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cfb7:	48 83 fb 20          	cmp    $0x20,%rbx
   2cfbb:	75 cc                	jne    2cf89 <__MARSH_WRAP__e1000_down+0x52e3>
   2cfbd:	30 db                	xor    %bl,%bl
   2cfbf:	49 89 d8             	mov    %rbx,%r8
   2cfc2:	4d 03 84 24 78 01 00 	add    0x178(%r12),%r8
   2cfc9:	00 
   2cfca:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2cfce:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2cfd2:	b9 01 00 00 00       	mov    $0x1,%ecx
   2cfd7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cfda: R_X86_64_32S	.rodata.str1.1+0x321c
   2cfde:	4c 89 ea             	mov    %r13,%rdx
   2cfe1:	48 ff c3             	inc    %rbx
   2cfe4:	e8 00 00 00 00       	callq  2cfe9 <__MARSH_WRAP__e1000_down+0x5343>
			2cfe5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2cfe9:	48 83 fb 10          	cmp    $0x10,%rbx
   2cfed:	75 d0                	jne    2cfbf <__MARSH_WRAP__e1000_down+0x5319>
   2cfef:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   2cff6:	00 
   2cff7:	ba 10 00 00 00       	mov    $0x10,%edx
   2cffc:	be 18 04 00 00       	mov    $0x418,%esi
   2d001:	e8 00 00 00 00       	callq  2d006 <__MARSH_WRAP__e1000_down+0x5360>
			2d002: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2d006:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d00d:	00 
   2d00e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d012:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d017:	4c 89 ea             	mov    %r13,%rdx
   2d01a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d01d: R_X86_64_32S	.rodata.str1.1+0x321c
   2d021:	49 81 c0 a0 01 00 00 	add    $0x1a0,%r8
   2d028:	e8 00 00 00 00       	callq  2d02d <__MARSH_WRAP__e1000_down+0x5387>
			2d029: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d02d:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d034:	00 
   2d035:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d039:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d03e:	4c 89 ea             	mov    %r13,%rdx
   2d041:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d044: R_X86_64_32S	.rodata.str1.1+0x321c
   2d048:	49 81 c0 e0 01 00 00 	add    $0x1e0,%r8
   2d04f:	e8 00 00 00 00       	callq  2d054 <__MARSH_WRAP__e1000_down+0x53ae>
			2d050: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d054:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d05b:	00 
   2d05c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d060:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d065:	4c 89 ea             	mov    %r13,%rdx
   2d068:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d06b: R_X86_64_32S	.rodata.str1.1+0x321c
   2d06f:	49 81 c0 30 04 00 00 	add    $0x430,%r8
   2d076:	e8 00 00 00 00       	callq  2d07b <__MARSH_WRAP__e1000_down+0x53d5>
			2d077: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d07b:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d082:	00 
   2d083:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d087:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d08c:	4c 89 ea             	mov    %r13,%rdx
   2d08f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d092: R_X86_64_32S	.rodata.str1.1+0x321c
   2d096:	49 83 c0 70          	add    $0x70,%r8
   2d09a:	e8 00 00 00 00       	callq  2d09f <__MARSH_WRAP__e1000_down+0x53f9>
			2d09b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d09f:	49 8b bc 24 78 01 00 	mov    0x178(%r12),%rdi
   2d0a6:	00 
   2d0a7:	ba 10 00 00 00       	mov    $0x10,%edx
   2d0ac:	be 10 00 00 00       	mov    $0x10,%esi
   2d0b1:	e8 00 00 00 00       	callq  2d0b6 <__MARSH_WRAP__e1000_down+0x5410>
			2d0b2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2d0b6:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d0bd:	00 
   2d0be:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d0c2:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d0c7:	4c 89 ea             	mov    %r13,%rdx
   2d0ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d0cd: R_X86_64_32S	.rodata.str1.1+0x321c
   2d0d1:	49 81 c0 50 03 00 00 	add    $0x350,%r8
   2d0d8:	e8 00 00 00 00       	callq  2d0dd <__MARSH_WRAP__e1000_down+0x5437>
			2d0d9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d0dd:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d0e4:	00 
   2d0e5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d0e9:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d0ee:	4c 89 ea             	mov    %r13,%rdx
   2d0f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d0f4: R_X86_64_32S	.rodata.str1.1+0x321c
   2d0f8:	49 81 c0 00 07 00 00 	add    $0x700,%r8
   2d0ff:	e8 00 00 00 00       	callq  2d104 <__MARSH_WRAP__e1000_down+0x545e>
			2d100: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d104:	4d 8b 84 24 78 01 00 	mov    0x178(%r12),%r8
   2d10b:	00 
   2d10c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d110:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d115:	4c 89 ea             	mov    %r13,%rdx
   2d118:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d11b: R_X86_64_32S	.rodata.str1.1+0x321c
   2d11f:	49 81 c0 60 01 00 00 	add    $0x160,%r8
   2d126:	e8 00 00 00 00       	callq  2d12b <__MARSH_WRAP__e1000_down+0x5485>
			2d127: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d12b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2d132:	00 
   2d133:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d137:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2d13d:	4c 89 ea             	mov    %r13,%rdx
   2d140:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d143: R_X86_64_32S	.rodata.str1.1+0x321c
   2d147:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   2d14e:	e8 00 00 00 00       	callq  2d153 <__MARSH_WRAP__e1000_down+0x54ad>
			2d14f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d153:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d15a:	00 
   2d15b:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   2d162:	00 
   2d163:	74 65                	je     2d1ca <__MARSH_WRAP__e1000_down+0x5524>
   2d165:	30 db                	xor    %bl,%bl
   2d167:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d16e:	00 
   2d16f:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2d173:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d177:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d17c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d17f: R_X86_64_32S	.rodata.str1.1+0x321c
   2d183:	4c 89 ea             	mov    %r13,%rdx
   2d186:	4c 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%r8
   2d18d:	49 83 c0 08          	add    $0x8,%r8
   2d191:	49 01 d8             	add    %rbx,%r8
   2d194:	48 ff c3             	inc    %rbx
   2d197:	e8 00 00 00 00       	callq  2d19c <__MARSH_WRAP__e1000_down+0x54f6>
			2d198: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d19c:	48 83 fb 20          	cmp    $0x20,%rbx
   2d1a0:	75 c5                	jne    2d167 <__MARSH_WRAP__e1000_down+0x54c1>
   2d1a2:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d1a9:	00 
   2d1aa:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d1ae:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2d1b4:	4c 89 ea             	mov    %r13,%rdx
   2d1b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d1ba: R_X86_64_32S	.rodata.str1.1+0x321c
   2d1be:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   2d1c5:	e8 00 00 00 00       	callq  2d1ca <__MARSH_WRAP__e1000_down+0x5524>
			2d1c6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d1ca:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2d1d1:	00 
   2d1d2:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2d1d6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d1da:	41 b8 a8 00 00 00    	mov    $0xa8,%r8d
   2d1e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d1e3: R_X86_64_32S	.rodata.str1.1+0x321c
   2d1e7:	48 89 da             	mov    %rbx,%rdx
   2d1ea:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   2d1f1:	e8 00 00 00 00       	callq  2d1f6 <__MARSH_WRAP__e1000_down+0x5550>
			2d1f2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d1f6:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2d1fd:	00 
   2d1fe:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d202:	41 b8 68 01 00 00    	mov    $0x168,%r8d
   2d208:	48 89 da             	mov    %rbx,%rdx
   2d20b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d20e: R_X86_64_32S	.rodata.str1.1+0x321c
   2d212:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   2d219:	e8 00 00 00 00       	callq  2d21e <__MARSH_WRAP__e1000_down+0x5578>
			2d21a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d21e:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d225:	00 
   2d226:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   2d22d:	48 85 c0             	test   %rax,%rax
   2d230:	74 49                	je     2d27b <__MARSH_WRAP__e1000_down+0x55d5>
   2d232:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d236:	48 8d 48 60          	lea    0x60(%rax),%rcx
   2d23a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2d240:	48 89 da             	mov    %rbx,%rdx
   2d243:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d246: R_X86_64_32S	.rodata.str1.1+0x321c
   2d24a:	e8 00 00 00 00       	callq  2d24f <__MARSH_WRAP__e1000_down+0x55a9>
			2d24b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d24f:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d256:	00 
   2d257:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d25b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2d261:	48 89 da             	mov    %rbx,%rdx
   2d264:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d267: R_X86_64_32S	.rodata.str1.1+0x321c
   2d26b:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   2d272:	48 83 c1 58          	add    $0x58,%rcx
   2d276:	e8 00 00 00 00       	callq  2d27b <__MARSH_WRAP__e1000_down+0x55d5>
			2d277: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d27b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2d282:	00 
   2d283:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d287:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d28a: R_X86_64_32S	.rodata.str1.1+0x321c
   2d28e:	41 b8 80 00 00 00    	mov    $0x80,%r8d
   2d294:	48 89 da             	mov    %rbx,%rdx
   2d297:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   2d29e:	e8 00 00 00 00       	callq  2d2a3 <__MARSH_WRAP__e1000_down+0x55fd>
			2d29f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d2a3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d2aa:	00 
   2d2ab:	48 8b b8 00 03 00 00 	mov    0x300(%rax),%rdi
   2d2b2:	48 85 ff             	test   %rdi,%rdi
   2d2b5:	74 66                	je     2d31d <__MARSH_WRAP__e1000_down+0x5677>
   2d2b7:	ba 08 00 00 00       	mov    $0x8,%edx
   2d2bc:	be 10 00 00 00       	mov    $0x10,%esi
   2d2c1:	e8 00 00 00 00       	callq  2d2c6 <__MARSH_WRAP__e1000_down+0x5620>
			2d2c2: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2d2c6:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d2cd:	00 
   2d2ce:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d2d2:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d2d7:	48 89 da             	mov    %rbx,%rdx
   2d2da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d2dd: R_X86_64_32S	.rodata.str1.1+0x321c
   2d2e1:	4c 8b 80 00 03 00 00 	mov    0x300(%rax),%r8
   2d2e8:	49 83 c0 10          	add    $0x10,%r8
   2d2ec:	e8 00 00 00 00       	callq  2d2f1 <__MARSH_WRAP__e1000_down+0x564b>
			2d2ed: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d2f1:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d2f8:	00 
   2d2f9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d2fd:	41 b8 f8 00 00 00    	mov    $0xf8,%r8d
   2d303:	48 89 da             	mov    %rbx,%rdx
   2d306:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d309: R_X86_64_32S	.rodata.str1.1+0x321c
   2d30d:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   2d314:	48 83 c1 08          	add    $0x8,%rcx
   2d318:	e8 00 00 00 00       	callq  2d31d <__MARSH_WRAP__e1000_down+0x5677>
			2d319: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d31d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   2d324:	00 
   2d325:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d329:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2d32f:	48 89 da             	mov    %rbx,%rdx
   2d332:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d335: R_X86_64_32S	.rodata.str1.1+0x321c
   2d339:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   2d340:	e8 00 00 00 00       	callq  2d345 <__MARSH_WRAP__e1000_down+0x569f>
			2d341: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d345:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d34c:	00 
   2d34d:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   2d354:	00 
   2d355:	74 65                	je     2d3bc <__MARSH_WRAP__e1000_down+0x5716>
   2d357:	31 db                	xor    %ebx,%ebx
   2d359:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d360:	00 
   2d361:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2d365:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d369:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d36e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d371: R_X86_64_32S	.rodata.str1.1+0x321c
   2d375:	4c 89 ea             	mov    %r13,%rdx
   2d378:	4c 8b 80 e8 01 00 00 	mov    0x1e8(%rax),%r8
   2d37f:	49 83 c0 08          	add    $0x8,%r8
   2d383:	49 01 d8             	add    %rbx,%r8
   2d386:	48 ff c3             	inc    %rbx
   2d389:	e8 00 00 00 00       	callq  2d38e <__MARSH_WRAP__e1000_down+0x56e8>
			2d38a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d38e:	48 83 fb 20          	cmp    $0x20,%rbx
   2d392:	75 c5                	jne    2d359 <__MARSH_WRAP__e1000_down+0x56b3>
   2d394:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   2d39b:	00 
   2d39c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d3a0:	41 b8 38 00 00 00    	mov    $0x38,%r8d
   2d3a6:	4c 89 ea             	mov    %r13,%rdx
   2d3a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d3ac: R_X86_64_32S	.rodata.str1.1+0x321c
   2d3b0:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   2d3b7:	e8 00 00 00 00       	callq  2d3bc <__MARSH_WRAP__e1000_down+0x5716>
			2d3b8: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d3bc:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2d3c0:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d3c4:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   2d3cb:	00 
   2d3cc:	41 b8 78 02 00 00    	mov    $0x278,%r8d
   2d3d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d3d5: R_X86_64_32S	.rodata.str1.1+0x321c
   2d3d9:	48 89 da             	mov    %rbx,%rdx
   2d3dc:	e8 00 00 00 00       	callq  2d3e1 <__MARSH_WRAP__e1000_down+0x573b>
			2d3dd: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d3e1:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d3e5:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   2d3ec:	00 
   2d3ed:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2d3f3:	48 89 da             	mov    %rbx,%rdx
   2d3f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d3f9: R_X86_64_32S	.rodata.str1.1+0x321c
   2d3fd:	e8 00 00 00 00       	callq  2d402 <__MARSH_WRAP__e1000_down+0x575c>
			2d3fe: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d402:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   2d409:	00 
   2d40a:	48 85 c0             	test   %rax,%rax
   2d40d:	74 1b                	je     2d42a <__MARSH_WRAP__e1000_down+0x5784>
   2d40f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d413:	49 89 c0             	mov    %rax,%r8
   2d416:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d41b:	48 89 da             	mov    %rbx,%rdx
   2d41e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d421: R_X86_64_32S	.rodata.str1.1+0x321c
   2d425:	e8 00 00 00 00       	callq  2d42a <__MARSH_WRAP__e1000_down+0x5784>
			2d426: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d42a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d42e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d432:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d437:	48 89 da             	mov    %rbx,%rdx
   2d43a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d43d: R_X86_64_32S	.rodata.str1.1+0x321c
   2d441:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2d448:	49 83 c0 40          	add    $0x40,%r8
   2d44c:	e8 00 00 00 00       	callq  2d451 <__MARSH_WRAP__e1000_down+0x57ab>
			2d44d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d451:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d455:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d459:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d45e:	48 89 da             	mov    %rbx,%rdx
   2d461:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d464: R_X86_64_32S	.rodata.str1.1+0x321c
   2d468:	4c 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%r8
   2d46f:	49 83 c0 3c          	add    $0x3c,%r8
   2d473:	e8 00 00 00 00       	callq  2d478 <__MARSH_WRAP__e1000_down+0x57d2>
			2d474: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d478:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d47c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d480:	41 b8 b8 03 00 00    	mov    $0x3b8,%r8d
   2d486:	48 89 da             	mov    %rbx,%rdx
   2d489:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d48c: R_X86_64_32S	.rodata.str1.1+0x321c
   2d490:	48 8b 88 f8 02 00 00 	mov    0x2f8(%rax),%rcx
   2d497:	48 83 c1 10          	add    $0x10,%rcx
   2d49b:	e8 00 00 00 00       	callq  2d4a0 <__MARSH_WRAP__e1000_down+0x57fa>
			2d49c: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d4a0:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2d4a4:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   2d4a8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d4ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d4af: R_X86_64_32S	.rodata.str1.1+0x321c
   2d4b3:	41 b8 60 00 00 00    	mov    $0x60,%r8d
   2d4b9:	4c 89 e2             	mov    %r12,%rdx
   2d4bc:	48 81 c1 b0 01 00 00 	add    $0x1b0,%rcx
   2d4c3:	e8 00 00 00 00       	callq  2d4c8 <__MARSH_WRAP__e1000_down+0x5822>
			2d4c4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d4c8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d4cc:	48 8b b8 b0 01 00 00 	mov    0x1b0(%rax),%rdi
   2d4d3:	48 85 ff             	test   %rdi,%rdi
   2d4d6:	0f 84 d9 07 00 00    	je     2dcb5 <__MARSH_WRAP__e1000_down+0x600f>
   2d4dc:	ba 08 00 00 00       	mov    $0x8,%edx
   2d4e1:	be 08 00 00 00       	mov    $0x8,%esi
   2d4e6:	e8 00 00 00 00       	callq  2d4eb <__MARSH_WRAP__e1000_down+0x5845>
			2d4e7: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2d4eb:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d4ef:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d4f3:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d4f8:	4c 89 e2             	mov    %r12,%rdx
   2d4fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d4fe: R_X86_64_32S	.rodata.str1.1+0x321c
   2d502:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d509:	49 83 c0 08          	add    $0x8,%r8
   2d50d:	e8 00 00 00 00       	callq  2d512 <__MARSH_WRAP__e1000_down+0x586c>
			2d50e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d512:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d516:	ba 04 00 00 00       	mov    $0x4,%edx
   2d51b:	be 14 00 00 00       	mov    $0x14,%esi
   2d520:	48 8b b8 b0 01 00 00 	mov    0x1b0(%rax),%rdi
   2d527:	e8 00 00 00 00       	callq  2d52c <__MARSH_WRAP__e1000_down+0x5886>
			2d528: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2d52c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d530:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d534:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d539:	4c 89 e2             	mov    %r12,%rdx
   2d53c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d53f: R_X86_64_32S	.rodata.str1.1+0x321c
   2d543:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d54a:	49 83 c0 14          	add    $0x14,%r8
   2d54e:	e8 00 00 00 00       	callq  2d553 <__MARSH_WRAP__e1000_down+0x58ad>
			2d54f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d553:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d557:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d55b:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d560:	4c 89 e2             	mov    %r12,%rdx
   2d563:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d566: R_X86_64_32S	.rodata.str1.1+0x321c
   2d56a:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d571:	49 83 c0 18          	add    $0x18,%r8
   2d575:	e8 00 00 00 00       	callq  2d57a <__MARSH_WRAP__e1000_down+0x58d4>
			2d576: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d57a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d57e:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d582:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d587:	4c 89 e2             	mov    %r12,%rdx
   2d58a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d58d: R_X86_64_32S	.rodata.str1.1+0x321c
   2d591:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d598:	49 83 c0 5c          	add    $0x5c,%r8
   2d59c:	e8 00 00 00 00       	callq  2d5a1 <__MARSH_WRAP__e1000_down+0x58fb>
			2d59d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d5a1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d5a5:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d5a9:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d5ae:	4c 89 e2             	mov    %r12,%rdx
   2d5b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d5b4: R_X86_64_32S	.rodata.str1.1+0x321c
   2d5b8:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d5bf:	49 83 c0 10          	add    $0x10,%r8
   2d5c3:	e8 00 00 00 00       	callq  2d5c8 <__MARSH_WRAP__e1000_down+0x5922>
			2d5c4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d5c8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d5cc:	ba 30 00 00 00       	mov    $0x30,%edx
   2d5d1:	be 28 00 00 00       	mov    $0x28,%esi
   2d5d6:	48 8b b8 b0 01 00 00 	mov    0x1b0(%rax),%rdi
   2d5dd:	e8 00 00 00 00       	callq  2d5e2 <__MARSH_WRAP__e1000_down+0x593c>
			2d5de: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   2d5e2:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d5e6:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d5ea:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d5ef:	4c 89 e2             	mov    %r12,%rdx
   2d5f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d5f5: R_X86_64_32S	.rodata.str1.1+0x321c
   2d5f9:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d600:	49 83 c0 5a          	add    $0x5a,%r8
   2d604:	e8 00 00 00 00       	callq  2d609 <__MARSH_WRAP__e1000_down+0x5963>
			2d605: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d609:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d60d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d611:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d616:	4c 89 e2             	mov    %r12,%rdx
   2d619:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d61c: R_X86_64_32S	.rodata.str1.1+0x321c
   2d620:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d627:	49 83 c0 58          	add    $0x58,%r8
   2d62b:	e8 00 00 00 00       	callq  2d630 <__MARSH_WRAP__e1000_down+0x598a>
			2d62c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d630:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d634:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d638:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d63d:	4c 89 e2             	mov    %r12,%rdx
   2d640:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d643: R_X86_64_32S	.rodata.str1.1+0x321c
   2d647:	4c 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%r8
   2d64e:	49 83 c0 1c          	add    $0x1c,%r8
   2d652:	e8 00 00 00 00       	callq  2d657 <__MARSH_WRAP__e1000_down+0x59b1>
			2d653: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d657:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d65b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d65f:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   2d665:	4c 89 e2             	mov    %r12,%rdx
   2d668:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d66b: R_X86_64_32S	.rodata.str1.1+0x321c
   2d66f:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   2d676:	48 83 c1 20          	add    $0x20,%rcx
   2d67a:	e8 00 00 00 00       	callq  2d67f <__MARSH_WRAP__e1000_down+0x59d9>
			2d67b: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d67f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d683:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d68a:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d68e:	48 85 c0             	test   %rax,%rax
   2d691:	0f 84 f5 04 00 00    	je     2db8c <__MARSH_WRAP__e1000_down+0x5ee6>
   2d697:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d69b:	4c 8d 40 18          	lea    0x18(%rax),%r8
   2d69f:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d6a4:	4c 89 e2             	mov    %r12,%rdx
   2d6a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d6aa: R_X86_64_32S	.rodata.str1.1+0x321c
   2d6ae:	e8 00 00 00 00       	callq  2d6b3 <__MARSH_WRAP__e1000_down+0x5a0d>
			2d6af: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d6b3:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d6b7:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d6bb:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d6c0:	4c 89 e2             	mov    %r12,%rdx
   2d6c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d6c6: R_X86_64_32S	.rodata.str1.1+0x321c
   2d6ca:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d6d1:	4c 8b 40 20          	mov    0x20(%rax),%r8
   2d6d5:	49 83 c0 10          	add    $0x10,%r8
   2d6d9:	e8 00 00 00 00       	callq  2d6de <__MARSH_WRAP__e1000_down+0x5a38>
			2d6da: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d6de:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d6e2:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d6e6:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d6eb:	4c 89 e2             	mov    %r12,%rdx
   2d6ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d6f1: R_X86_64_32S	.rodata.str1.1+0x321c
   2d6f5:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d6fc:	4c 8b 40 20          	mov    0x20(%rax),%r8
   2d700:	49 83 c0 1a          	add    $0x1a,%r8
   2d704:	e8 00 00 00 00       	callq  2d709 <__MARSH_WRAP__e1000_down+0x5a63>
			2d705: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d709:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d70d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d711:	b9 08 00 00 00       	mov    $0x8,%ecx
   2d716:	4c 89 e2             	mov    %r12,%rdx
   2d719:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d71c: R_X86_64_32S	.rodata.str1.1+0x321c
   2d720:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d727:	4c 8b 40 20          	mov    0x20(%rax),%r8
   2d72b:	49 83 c0 08          	add    $0x8,%r8
   2d72f:	e8 00 00 00 00       	callq  2d734 <__MARSH_WRAP__e1000_down+0x5a8e>
			2d730: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d734:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d738:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d73c:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   2d742:	4c 89 e2             	mov    %r12,%rdx
   2d745:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d748: R_X86_64_32S	.rodata.str1.1+0x321c
   2d74c:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d753:	48 8b 48 20          	mov    0x20(%rax),%rcx
   2d757:	e8 00 00 00 00       	callq  2d75c <__MARSH_WRAP__e1000_down+0x5ab6>
			2d758: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2d75c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d760:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d767:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d76b:	48 83 38 00          	cmpq   $0x0,(%rax)
   2d76f:	0f 84 17 04 00 00    	je     2db8c <__MARSH_WRAP__e1000_down+0x5ee6>
   2d775:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2d779:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d77d:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d782:	4c 89 e2             	mov    %r12,%rdx
   2d785:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d788: R_X86_64_32S	.rodata.str1.1+0x321c
   2d78c:	49 89 d8             	mov    %rbx,%r8
   2d78f:	e8 00 00 00 00       	callq  2d794 <__MARSH_WRAP__e1000_down+0x5aee>
			2d790: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d794:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d798:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2d79b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d79e: R_X86_64_32S	.rodata.str1.1+0x321c
   2d7a2:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d7a9:	83 e2 07             	and    $0x7,%edx
   2d7ac:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d7b0:	48 8b 08             	mov    (%rax),%rcx
   2d7b3:	8a 41 7d             	mov    0x7d(%rcx),%al
   2d7b6:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   2d7b9:	09 d0                	or     %edx,%eax
   2d7bb:	4c 89 e2             	mov    %r12,%rdx
   2d7be:	88 41 7d             	mov    %al,0x7d(%rcx)
   2d7c1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d7c5:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d7ca:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d7ce:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d7d5:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d7d9:	4c 8b 00             	mov    (%rax),%r8
   2d7dc:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   2d7e3:	e8 00 00 00 00       	callq  2d7e8 <__MARSH_WRAP__e1000_down+0x5b42>
			2d7e4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d7e8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d7ec:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d7f0:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d7f5:	4c 89 e2             	mov    %r12,%rdx
   2d7f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d7fb: R_X86_64_32S	.rodata.str1.1+0x321c
   2d7ff:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d806:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d80a:	4c 8b 00             	mov    (%rax),%r8
   2d80d:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   2d814:	e8 00 00 00 00       	callq  2d819 <__MARSH_WRAP__e1000_down+0x5b73>
			2d815: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d819:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d81d:	49 89 d8             	mov    %rbx,%r8
   2d820:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d825:	4c 89 e2             	mov    %r12,%rdx
   2d828:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d82b: R_X86_64_32S	.rodata.str1.1+0x321c
   2d82f:	e8 00 00 00 00       	callq  2d834 <__MARSH_WRAP__e1000_down+0x5b8e>
			2d830: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d834:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d838:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2d83b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d83e: R_X86_64_32S	.rodata.str1.1+0x321c
   2d842:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d849:	83 e2 03             	and    $0x3,%edx
   2d84c:	c1 e2 02             	shl    $0x2,%edx
   2d84f:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d853:	48 8b 08             	mov    (%rax),%rcx
   2d856:	8a 41 7c             	mov    0x7c(%rcx),%al
   2d859:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   2d85c:	09 d0                	or     %edx,%eax
   2d85e:	4c 89 e2             	mov    %r12,%rdx
   2d861:	88 41 7c             	mov    %al,0x7c(%rcx)
   2d864:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d868:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d86d:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d871:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d878:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d87c:	4c 8b 00             	mov    (%rax),%r8
   2d87f:	49 83 c0 6c          	add    $0x6c,%r8
   2d883:	e8 00 00 00 00       	callq  2d888 <__MARSH_WRAP__e1000_down+0x5be2>
			2d884: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d888:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d88c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d890:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d895:	4c 89 e2             	mov    %r12,%rdx
   2d898:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d89b: R_X86_64_32S	.rodata.str1.1+0x321c
   2d89f:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d8a6:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d8aa:	4c 8b 00             	mov    (%rax),%r8
   2d8ad:	49 81 c0 a4 00 00 00 	add    $0xa4,%r8
   2d8b4:	e8 00 00 00 00       	callq  2d8b9 <__MARSH_WRAP__e1000_down+0x5c13>
			2d8b5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d8b9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d8bd:	49 89 d8             	mov    %rbx,%r8
   2d8c0:	b9 01 00 00 00       	mov    $0x1,%ecx
   2d8c5:	4c 89 e2             	mov    %r12,%rdx
   2d8c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d8cb: R_X86_64_32S	.rodata.str1.1+0x321c
   2d8cf:	e8 00 00 00 00       	callq  2d8d4 <__MARSH_WRAP__e1000_down+0x5c2e>
			2d8d0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d8d4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d8d8:	8a 55 d0             	mov    0xffffffffffffffd0(%rbp),%dl
   2d8db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d8de: R_X86_64_32S	.rodata.str1.1+0x321c
   2d8e2:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d8e9:	83 e2 01             	and    $0x1,%edx
   2d8ec:	01 d2                	add    %edx,%edx
   2d8ee:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d8f2:	48 8b 08             	mov    (%rax),%rcx
   2d8f5:	8a 41 7c             	mov    0x7c(%rcx),%al
   2d8f8:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   2d8fb:	09 d0                	or     %edx,%eax
   2d8fd:	4c 89 e2             	mov    %r12,%rdx
   2d900:	88 41 7c             	mov    %al,0x7c(%rcx)
   2d903:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d907:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d90c:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d910:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d917:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d91b:	4c 8b 00             	mov    (%rax),%r8
   2d91e:	49 83 c0 76          	add    $0x76,%r8
   2d922:	e8 00 00 00 00       	callq  2d927 <__MARSH_WRAP__e1000_down+0x5c81>
			2d923: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d927:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d92b:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d92f:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d934:	4c 89 e2             	mov    %r12,%rdx
   2d937:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d93a: R_X86_64_32S	.rodata.str1.1+0x321c
   2d93e:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d945:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d949:	4c 8b 00             	mov    (%rax),%r8
   2d94c:	49 83 c0 74          	add    $0x74,%r8
   2d950:	e8 00 00 00 00       	callq  2d955 <__MARSH_WRAP__e1000_down+0x5caf>
			2d951: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d955:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d959:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d95d:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d962:	4c 89 e2             	mov    %r12,%rdx
   2d965:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d968: R_X86_64_32S	.rodata.str1.1+0x321c
   2d96c:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d973:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d977:	4c 8b 00             	mov    (%rax),%r8
   2d97a:	49 83 c0 68          	add    $0x68,%r8
   2d97e:	e8 00 00 00 00       	callq  2d983 <__MARSH_WRAP__e1000_down+0x5cdd>
			2d97f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d983:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d987:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d98b:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d990:	4c 89 e2             	mov    %r12,%rdx
   2d993:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d996: R_X86_64_32S	.rodata.str1.1+0x321c
   2d99a:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d9a1:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d9a5:	4c 8b 00             	mov    (%rax),%r8
   2d9a8:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   2d9af:	e8 00 00 00 00       	callq  2d9b4 <__MARSH_WRAP__e1000_down+0x5d0e>
			2d9b0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d9b4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d9b8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d9bc:	b9 04 00 00 00       	mov    $0x4,%ecx
   2d9c1:	4c 89 e2             	mov    %r12,%rdx
   2d9c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d9c7: R_X86_64_32S	.rodata.str1.1+0x321c
   2d9cb:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2d9d2:	48 8b 40 20          	mov    0x20(%rax),%rax
   2d9d6:	4c 8b 00             	mov    (%rax),%r8
   2d9d9:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   2d9e0:	e8 00 00 00 00       	callq  2d9e5 <__MARSH_WRAP__e1000_down+0x5d3f>
			2d9e1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2d9e5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2d9e9:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2d9ed:	b9 02 00 00 00       	mov    $0x2,%ecx
   2d9f2:	4c 89 e2             	mov    %r12,%rdx
   2d9f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d9f8: R_X86_64_32S	.rodata.str1.1+0x321c
   2d9fc:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2da03:	48 8b 40 20          	mov    0x20(%rax),%rax
   2da07:	4c 8b 00             	mov    (%rax),%r8
   2da0a:	49 83 c0 7e          	add    $0x7e,%r8
   2da0e:	e8 00 00 00 00       	callq  2da13 <__MARSH_WRAP__e1000_down+0x5d6d>
			2da0f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2da13:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2da17:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2da1b:	b9 04 00 00 00       	mov    $0x4,%ecx
   2da20:	4c 89 e2             	mov    %r12,%rdx
   2da23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2da26: R_X86_64_32S	.rodata.str1.1+0x321c
   2da2a:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2da31:	48 8b 40 20          	mov    0x20(%rax),%rax
   2da35:	4c 8b 00             	mov    (%rax),%r8
   2da38:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   2da3f:	e8 00 00 00 00       	callq  2da44 <__MARSH_WRAP__e1000_down+0x5d9e>
			2da40: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2da44:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2da48:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2da4c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2da52:	4c 89 e2             	mov    %r12,%rdx
   2da55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2da58: R_X86_64_32S	.rodata.str1.1+0x321c
   2da5c:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2da63:	48 8b 40 20          	mov    0x20(%rax),%rax
   2da67:	48 8b 08             	mov    (%rax),%rcx
   2da6a:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   2da71:	e8 00 00 00 00       	callq  2da76 <__MARSH_WRAP__e1000_down+0x5dd0>
			2da72: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2da76:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2da7a:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2da81:	48 8b 40 20          	mov    0x20(%rax),%rax
   2da85:	48 8b 00             	mov    (%rax),%rax
   2da88:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   2da8f:	00 
   2da90:	0f 84 87 00 00 00    	je     2db1d <__MARSH_WRAP__e1000_down+0x5e77>
   2da96:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2da9a:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   2da9e:	b9 04 00 00 00       	mov    $0x4,%ecx
   2daa3:	4c 89 e2             	mov    %r12,%rdx
   2daa6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2daa9: R_X86_64_32S	.rodata.str1.1+0x321c
   2daad:	31 db                	xor    %ebx,%ebx
   2daaf:	e8 00 00 00 00       	callq  2dab4 <__MARSH_WRAP__e1000_down+0x5e0e>
			2dab0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dab4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dab8:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
   2dabb:	b9 01 00 00 00       	mov    $0x1,%ecx
   2dac0:	ba 01 00 00 00       	mov    $0x1,%edx
   2dac5:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dacc:	48 8b 40 20          	mov    0x20(%rax),%rax
   2dad0:	48 8b 38             	mov    (%rax),%rdi
   2dad3:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   2dada:	e8 00 00 00 00       	callq  2dadf <__MARSH_WRAP__e1000_down+0x5e39>
			2dadb: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   2dadf:	eb 37                	jmp    2db18 <__MARSH_WRAP__e1000_down+0x5e72>
   2dae1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dae5:	4c 63 c3             	movslq %ebx,%r8
   2dae8:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2daec:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2daf0:	b9 01 00 00 00       	mov    $0x1,%ecx
   2daf5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2daf8: R_X86_64_32S	.rodata.str1.1+0x321c
   2dafc:	ff c3                	inc    %ebx
   2dafe:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2db05:	48 8b 40 20          	mov    0x20(%rax),%rax
   2db09:	48 8b 00             	mov    (%rax),%rax
   2db0c:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   2db13:	e8 00 00 00 00       	callq  2db18 <__MARSH_WRAP__e1000_down+0x5e72>
			2db14: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2db18:	3b 5d c0             	cmp    0xffffffffffffffc0(%rbp),%ebx
   2db1b:	7c c4                	jl     2dae1 <__MARSH_WRAP__e1000_down+0x5e3b>
   2db1d:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2db21:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2db25:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2db29:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2db2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2db32: R_X86_64_32S	.rodata.str1.1+0x321c
   2db36:	48 89 da             	mov    %rbx,%rdx
   2db39:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2db40:	48 8b 40 20          	mov    0x20(%rax),%rax
   2db44:	48 8b 08             	mov    (%rax),%rcx
   2db47:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   2db4e:	e8 00 00 00 00       	callq  2db53 <__MARSH_WRAP__e1000_down+0x5ead>
			2db4f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2db53:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2db57:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2db5e:	48 8b 40 20          	mov    0x20(%rax),%rax
   2db62:	48 8b 00             	mov    (%rax),%rax
   2db65:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   2db6c:	48 85 c0             	test   %rax,%rax
   2db6f:	74 1b                	je     2db8c <__MARSH_WRAP__e1000_down+0x5ee6>
   2db71:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2db75:	49 89 c0             	mov    %rax,%r8
   2db78:	b9 01 00 00 00       	mov    $0x1,%ecx
   2db7d:	48 89 da             	mov    %rbx,%rdx
   2db80:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2db83: R_X86_64_32S	.rodata.str1.1+0x321c
   2db87:	e8 00 00 00 00       	callq  2db8c <__MARSH_WRAP__e1000_down+0x5ee6>
			2db88: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2db8c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2db90:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2db94:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2db98:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   2db9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dba1: R_X86_64_32S	.rodata.str1.1+0x321c
   2dba5:	48 89 da             	mov    %rbx,%rdx
   2dba8:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   2dbaf:	e8 00 00 00 00       	callq  2dbb4 <__MARSH_WRAP__e1000_down+0x5f0e>
			2dbb0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   2dbb4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dbb8:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dbbf:	48 8b 00             	mov    (%rax),%rax
   2dbc2:	48 85 c0             	test   %rax,%rax
   2dbc5:	0f 84 ea 00 00 00    	je     2dcb5 <__MARSH_WRAP__e1000_down+0x600f>
   2dbcb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2dbcf:	4c 8d 40 0e          	lea    0xe(%rax),%r8
   2dbd3:	b9 02 00 00 00       	mov    $0x2,%ecx
   2dbd8:	48 89 da             	mov    %rbx,%rdx
   2dbdb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dbde: R_X86_64_32S	.rodata.str1.1+0x321c
   2dbe2:	e8 00 00 00 00       	callq  2dbe7 <__MARSH_WRAP__e1000_down+0x5f41>
			2dbe3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dbe7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dbeb:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2dbef:	b9 01 00 00 00       	mov    $0x1,%ecx
   2dbf4:	48 89 da             	mov    %rbx,%rdx
   2dbf7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dbfa: R_X86_64_32S	.rodata.str1.1+0x321c
   2dbfe:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dc05:	4c 8b 00             	mov    (%rax),%r8
   2dc08:	49 83 c0 0d          	add    $0xd,%r8
   2dc0c:	e8 00 00 00 00       	callq  2dc11 <__MARSH_WRAP__e1000_down+0x5f6b>
			2dc0d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dc11:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dc15:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2dc19:	b9 02 00 00 00       	mov    $0x2,%ecx
   2dc1e:	48 89 da             	mov    %rbx,%rdx
   2dc21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dc24: R_X86_64_32S	.rodata.str1.1+0x321c
   2dc28:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dc2f:	4c 8b 00             	mov    (%rax),%r8
   2dc32:	49 83 c0 0a          	add    $0xa,%r8
   2dc36:	e8 00 00 00 00       	callq  2dc3b <__MARSH_WRAP__e1000_down+0x5f95>
			2dc37: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dc3b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dc3f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2dc43:	b9 08 00 00 00       	mov    $0x8,%ecx
   2dc48:	48 89 da             	mov    %rbx,%rdx
   2dc4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dc4e: R_X86_64_32S	.rodata.str1.1+0x321c
   2dc52:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dc59:	4c 8b 00             	mov    (%rax),%r8
   2dc5c:	e8 00 00 00 00       	callq  2dc61 <__MARSH_WRAP__e1000_down+0x5fbb>
			2dc5d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dc61:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dc65:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2dc69:	b9 02 00 00 00       	mov    $0x2,%ecx
   2dc6e:	48 89 da             	mov    %rbx,%rdx
   2dc71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dc74: R_X86_64_32S	.rodata.str1.1+0x321c
   2dc78:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dc7f:	4c 8b 00             	mov    (%rax),%r8
   2dc82:	49 83 c0 08          	add    $0x8,%r8
   2dc86:	e8 00 00 00 00       	callq  2dc8b <__MARSH_WRAP__e1000_down+0x5fe5>
			2dc87: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dc8b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dc8f:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   2dc93:	b9 01 00 00 00       	mov    $0x1,%ecx
   2dc98:	48 89 da             	mov    %rbx,%rdx
   2dc9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dc9e: R_X86_64_32S	.rodata.str1.1+0x321c
   2dca2:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   2dca9:	4c 8b 00             	mov    (%rax),%r8
   2dcac:	49 83 c0 0c          	add    $0xc,%r8
   2dcb0:	e8 00 00 00 00       	callq  2dcb5 <__MARSH_WRAP__e1000_down+0x600f>
			2dcb1: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   2dcb5:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   2dcb9:	48 85 ff             	test   %rdi,%rdi
   2dcbc:	74 0d                	je     2dccb <__MARSH_WRAP__e1000_down+0x6025>
   2dcbe:	e8 00 00 00 00       	callq  2dcc3 <__MARSH_WRAP__e1000_down+0x601d>
			2dcbf: R_X86_64_PC32	kfree+0xfffffffffffffffc
   2dcc3:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   2dcca:	00 
   2dccb:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   2dccf:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2dcd3:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   2dcd7:	e8 00 00 00 00       	callq  2dcdc <__MARSH_WRAP__e1000_down+0x6036>
			2dcd8: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   2dcdc:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   2dce0:	4c 89 ea             	mov    %r13,%rdx
   2dce3:	4c 89 f6             	mov    %r14,%rsi
   2dce6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dce9: R_X86_64_32S	.rodata.str1.1+0x321c
   2dced:	c7 45 d4 00 00 00 00 	movl   $0x0,0xffffffffffffffd4(%rbp)
   2dcf4:	e8 00 00 00 00       	callq  2dcf9 <__MARSH_WRAP__e1000_down+0x6053>
			2dcf5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2dcf9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   2dcfd:	48 85 c0             	test   %rax,%rax
   2dd00:	0f 84 0a 46 00 00    	je     32310 <__MARSH_WRAP__e1000_down+0xa66a>
   2dd06:	48 8d 88 20 01 00 00 	lea    0x120(%rax),%rcx
   2dd0d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2dd13:	4c 89 ea             	mov    %r13,%rdx
   2dd16:	4c 89 f6             	mov    %r14,%rsi
   2dd19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dd1c: R_X86_64_32S	.rodata.str1.1+0x321c
   2dd20:	e8 00 00 00 00       	callq  2dd25 <__MARSH_WRAP__e1000_down+0x607f>
			2dd21: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dd25:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2dd29:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2dd2f:	4c 89 ea             	mov    %r13,%rdx
   2dd32:	4c 89 f6             	mov    %r14,%rsi
   2dd35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dd38: R_X86_64_32S	.rodata.str1.1+0x321c
   2dd3c:	48 81 c1 9c 00 00 00 	add    $0x9c,%rcx
   2dd43:	e8 00 00 00 00       	callq  2dd48 <__MARSH_WRAP__e1000_down+0x60a2>
			2dd44: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dd48:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2dd4c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2dd52:	4c 89 ea             	mov    %r13,%rdx
   2dd55:	4c 89 f6             	mov    %r14,%rsi
   2dd58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dd5b: R_X86_64_32S	.rodata.str1.1+0x321c
   2dd5f:	48 81 c1 a4 00 00 00 	add    $0xa4,%rcx
   2dd66:	e8 00 00 00 00       	callq  2dd6b <__MARSH_WRAP__e1000_down+0x60c5>
			2dd67: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dd6b:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2dd6f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2dd75:	4c 89 ea             	mov    %r13,%rdx
   2dd78:	4c 89 f6             	mov    %r14,%rsi
   2dd7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dd7e: R_X86_64_32S	.rodata.str1.1+0x321c
   2dd82:	48 81 c1 f4 01 00 00 	add    $0x1f4,%rcx
   2dd89:	e8 00 00 00 00       	callq  2dd8e <__MARSH_WRAP__e1000_down+0x60e8>
			2dd8a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dd8e:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2dd92:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2dd98:	4c 89 ea             	mov    %r13,%rdx
   2dd9b:	4c 89 f6             	mov    %r14,%rsi
   2dd9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dda1: R_X86_64_32S	.rodata.str1.1+0x321c
   2dda5:	48 81 c1 b0 00 00 00 	add    $0xb0,%rcx
   2ddac:	e8 00 00 00 00       	callq  2ddb1 <__MARSH_WRAP__e1000_down+0x610b>
			2ddad: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ddb1:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ddb5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ddbb:	4c 89 ea             	mov    %r13,%rdx
   2ddbe:	4c 89 f6             	mov    %r14,%rsi
   2ddc1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ddc4: R_X86_64_32S	.rodata.str1.1+0x321c
   2ddc8:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   2ddcf:	e8 00 00 00 00       	callq  2ddd4 <__MARSH_WRAP__e1000_down+0x612e>
			2ddd0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ddd4:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ddd8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ddde:	4c 89 ea             	mov    %r13,%rdx
   2dde1:	4c 89 f6             	mov    %r14,%rsi
   2dde4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dde7: R_X86_64_32S	.rodata.str1.1+0x321c
   2ddeb:	48 81 c1 28 07 00 00 	add    $0x728,%rcx
   2ddf2:	e8 00 00 00 00       	callq  2ddf7 <__MARSH_WRAP__e1000_down+0x6151>
			2ddf3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ddf7:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ddfb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2de01:	4c 89 ea             	mov    %r13,%rdx
   2de04:	4c 89 f6             	mov    %r14,%rsi
   2de07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2de0a: R_X86_64_32S	.rodata.str1.1+0x321c
   2de0e:	48 81 c1 c5 07 00 00 	add    $0x7c5,%rcx
   2de15:	e8 00 00 00 00       	callq  2de1a <__MARSH_WRAP__e1000_down+0x6174>
			2de16: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2de1a:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2de1e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2de24:	4c 89 ea             	mov    %r13,%rdx
   2de27:	4c 89 f6             	mov    %r14,%rsi
   2de2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2de2d: R_X86_64_32S	.rodata.str1.1+0x321c
   2de31:	48 81 c1 24 07 00 00 	add    $0x724,%rcx
   2de38:	e8 00 00 00 00       	callq  2de3d <__MARSH_WRAP__e1000_down+0x6197>
			2de39: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2de3d:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2de41:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2de47:	4c 89 ea             	mov    %r13,%rdx
   2de4a:	4c 89 f6             	mov    %r14,%rsi
   2de4d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2de50: R_X86_64_32S	.rodata.str1.1+0x321c
   2de54:	48 81 c1 20 07 00 00 	add    $0x720,%rcx
   2de5b:	e8 00 00 00 00       	callq  2de60 <__MARSH_WRAP__e1000_down+0x61ba>
			2de5c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2de60:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2de64:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2de6a:	4c 89 ea             	mov    %r13,%rdx
   2de6d:	4c 89 f6             	mov    %r14,%rsi
   2de70:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2de73: R_X86_64_32S	.rodata.str1.1+0x321c
   2de77:	48 81 c1 2c 01 00 00 	add    $0x12c,%rcx
   2de7e:	e8 00 00 00 00       	callq  2de83 <__MARSH_WRAP__e1000_down+0x61dd>
			2de7f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2de83:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2de87:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2de8d:	4c 89 ea             	mov    %r13,%rdx
   2de90:	4c 89 f6             	mov    %r14,%rsi
   2de93:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2de96: R_X86_64_32S	.rodata.str1.1+0x321c
   2de9a:	48 81 c1 c8 01 00 00 	add    $0x1c8,%rcx
   2dea1:	e8 00 00 00 00       	callq  2dea6 <__MARSH_WRAP__e1000_down+0x6200>
			2dea2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dea6:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2deaa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2deb0:	4c 89 ea             	mov    %r13,%rdx
   2deb3:	4c 89 f6             	mov    %r14,%rsi
   2deb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2deb9: R_X86_64_32S	.rodata.str1.1+0x321c
   2debd:	48 81 c1 c4 07 00 00 	add    $0x7c4,%rcx
   2dec4:	e8 00 00 00 00       	callq  2dec9 <__MARSH_WRAP__e1000_down+0x6223>
			2dec5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dec9:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2decd:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ded3:	4c 89 ea             	mov    %r13,%rdx
   2ded6:	4c 89 f6             	mov    %r14,%rsi
   2ded9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dedc: R_X86_64_32S	.rodata.str1.1+0x321c
   2dee0:	48 81 c1 b4 02 00 00 	add    $0x2b4,%rcx
   2dee7:	e8 00 00 00 00       	callq  2deec <__MARSH_WRAP__e1000_down+0x6246>
			2dee8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2deec:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2def0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2def6:	4c 89 ea             	mov    %r13,%rdx
   2def9:	4c 89 f6             	mov    %r14,%rsi
   2defc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2deff: R_X86_64_32S	.rodata.str1.1+0x321c
   2df03:	48 81 c1 d8 07 00 00 	add    $0x7d8,%rcx
   2df0a:	e8 00 00 00 00       	callq  2df0f <__MARSH_WRAP__e1000_down+0x6269>
			2df0b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2df0f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2df13:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2df19:	4c 89 ea             	mov    %r13,%rdx
   2df1c:	4c 89 f6             	mov    %r14,%rsi
   2df1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2df22: R_X86_64_32S	.rodata.str1.1+0x321c
   2df26:	48 81 c1 1c 01 00 00 	add    $0x11c,%rcx
   2df2d:	e8 00 00 00 00       	callq  2df32 <__MARSH_WRAP__e1000_down+0x628c>
			2df2e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2df32:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2df36:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2df3c:	4c 89 ea             	mov    %r13,%rdx
   2df3f:	4c 89 f6             	mov    %r14,%rsi
   2df42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2df45: R_X86_64_32S	.rodata.str1.1+0x321c
   2df49:	48 81 c1 c7 07 00 00 	add    $0x7c7,%rcx
   2df50:	e8 00 00 00 00       	callq  2df55 <__MARSH_WRAP__e1000_down+0x62af>
			2df51: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2df55:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2df59:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2df5f:	4c 89 ea             	mov    %r13,%rdx
   2df62:	4c 89 f6             	mov    %r14,%rsi
   2df65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2df68: R_X86_64_32S	.rodata.str1.1+0x321c
   2df6c:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   2df73:	e8 00 00 00 00       	callq  2df78 <__MARSH_WRAP__e1000_down+0x62d2>
			2df74: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2df78:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2df7c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2df82:	4c 89 ea             	mov    %r13,%rdx
   2df85:	4c 89 f6             	mov    %r14,%rsi
   2df88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2df8b: R_X86_64_32S	.rodata.str1.1+0x321c
   2df8f:	48 81 c1 b8 01 00 00 	add    $0x1b8,%rcx
   2df96:	e8 00 00 00 00       	callq  2df9b <__MARSH_WRAP__e1000_down+0x62f5>
			2df97: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2df9b:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2df9f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2dfa5:	4c 89 ea             	mov    %r13,%rdx
   2dfa8:	4c 89 f6             	mov    %r14,%rsi
   2dfab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dfae: R_X86_64_32S	.rodata.str1.1+0x321c
   2dfb2:	48 81 c1 c8 07 00 00 	add    $0x7c8,%rcx
   2dfb9:	e8 00 00 00 00       	callq  2dfbe <__MARSH_WRAP__e1000_down+0x6318>
			2dfba: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dfbe:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2dfc2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2dfc8:	4c 89 ea             	mov    %r13,%rdx
   2dfcb:	4c 89 f6             	mov    %r14,%rsi
   2dfce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dfd1: R_X86_64_32S	.rodata.str1.1+0x321c
   2dfd5:	48 81 c1 a8 01 00 00 	add    $0x1a8,%rcx
   2dfdc:	e8 00 00 00 00       	callq  2dfe1 <__MARSH_WRAP__e1000_down+0x633b>
			2dfdd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2dfe1:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2dfe5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2dfeb:	4c 89 ea             	mov    %r13,%rdx
   2dfee:	4c 89 f6             	mov    %r14,%rsi
   2dff1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2dff4: R_X86_64_32S	.rodata.str1.1+0x321c
   2dff8:	48 81 c3 d8 04 00 00 	add    $0x4d8,%rbx
   2dfff:	48 8d 4b 40          	lea    0x40(%rbx),%rcx
   2e003:	e8 00 00 00 00       	callq  2e008 <__MARSH_WRAP__e1000_down+0x6362>
			2e004: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e008:	48 8d 8b a0 01 00 00 	lea    0x1a0(%rbx),%rcx
   2e00f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e015:	4c 89 ea             	mov    %r13,%rdx
   2e018:	4c 89 f6             	mov    %r14,%rsi
   2e01b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e01e: R_X86_64_32S	.rodata.str1.1+0x321c
   2e022:	e8 00 00 00 00       	callq  2e027 <__MARSH_WRAP__e1000_down+0x6381>
			2e023: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e027:	48 8d 8b 18 02 00 00 	lea    0x218(%rbx),%rcx
   2e02e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e034:	4c 89 ea             	mov    %r13,%rdx
   2e037:	4c 89 f6             	mov    %r14,%rsi
   2e03a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e03d: R_X86_64_32S	.rodata.str1.1+0x321c
   2e041:	e8 00 00 00 00       	callq  2e046 <__MARSH_WRAP__e1000_down+0x63a0>
			2e042: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e046:	48 8d 8b f0 00 00 00 	lea    0xf0(%rbx),%rcx
   2e04d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e053:	4c 89 ea             	mov    %r13,%rdx
   2e056:	4c 89 f6             	mov    %r14,%rsi
   2e059:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e05c: R_X86_64_32S	.rodata.str1.1+0x321c
   2e060:	e8 00 00 00 00       	callq  2e065 <__MARSH_WRAP__e1000_down+0x63bf>
			2e061: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e065:	48 8d 8b 08 02 00 00 	lea    0x208(%rbx),%rcx
   2e06c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e072:	4c 89 ea             	mov    %r13,%rdx
   2e075:	4c 89 f6             	mov    %r14,%rsi
   2e078:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e07b: R_X86_64_32S	.rodata.str1.1+0x321c
   2e07f:	e8 00 00 00 00       	callq  2e084 <__MARSH_WRAP__e1000_down+0x63de>
			2e080: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e084:	48 8d 8b 50 01 00 00 	lea    0x150(%rbx),%rcx
   2e08b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e091:	4c 89 ea             	mov    %r13,%rdx
   2e094:	4c 89 f6             	mov    %r14,%rsi
   2e097:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e09a: R_X86_64_32S	.rodata.str1.1+0x321c
   2e09e:	e8 00 00 00 00       	callq  2e0a3 <__MARSH_WRAP__e1000_down+0x63fd>
			2e09f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e0a3:	48 8d 8b a0 00 00 00 	lea    0xa0(%rbx),%rcx
   2e0aa:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e0b0:	4c 89 ea             	mov    %r13,%rdx
   2e0b3:	4c 89 f6             	mov    %r14,%rsi
   2e0b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e0b9: R_X86_64_32S	.rodata.str1.1+0x321c
   2e0bd:	e8 00 00 00 00       	callq  2e0c2 <__MARSH_WRAP__e1000_down+0x641c>
			2e0be: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e0c2:	48 8d 4b 68          	lea    0x68(%rbx),%rcx
   2e0c6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e0cc:	4c 89 ea             	mov    %r13,%rdx
   2e0cf:	4c 89 f6             	mov    %r14,%rsi
   2e0d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e0d5: R_X86_64_32S	.rodata.str1.1+0x321c
   2e0d9:	e8 00 00 00 00       	callq  2e0de <__MARSH_WRAP__e1000_down+0x6438>
			2e0da: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e0de:	48 8d 8b f8 00 00 00 	lea    0xf8(%rbx),%rcx
   2e0e5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e0eb:	4c 89 ea             	mov    %r13,%rdx
   2e0ee:	4c 89 f6             	mov    %r14,%rsi
   2e0f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e0f4: R_X86_64_32S	.rodata.str1.1+0x321c
   2e0f8:	e8 00 00 00 00       	callq  2e0fd <__MARSH_WRAP__e1000_down+0x6457>
			2e0f9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e0fd:	48 8d 8b 60 01 00 00 	lea    0x160(%rbx),%rcx
   2e104:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e10a:	4c 89 ea             	mov    %r13,%rdx
   2e10d:	4c 89 f6             	mov    %r14,%rsi
   2e110:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e113: R_X86_64_32S	.rodata.str1.1+0x321c
   2e117:	e8 00 00 00 00       	callq  2e11c <__MARSH_WRAP__e1000_down+0x6476>
			2e118: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e11c:	48 8d 8b e8 01 00 00 	lea    0x1e8(%rbx),%rcx
   2e123:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e129:	4c 89 ea             	mov    %r13,%rdx
   2e12c:	4c 89 f6             	mov    %r14,%rsi
   2e12f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e132: R_X86_64_32S	.rodata.str1.1+0x321c
   2e136:	e8 00 00 00 00       	callq  2e13b <__MARSH_WRAP__e1000_down+0x6495>
			2e137: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e13b:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
   2e13f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e145:	4c 89 ea             	mov    %r13,%rdx
   2e148:	4c 89 f6             	mov    %r14,%rsi
   2e14b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e14e: R_X86_64_32S	.rodata.str1.1+0x321c
   2e152:	e8 00 00 00 00       	callq  2e157 <__MARSH_WRAP__e1000_down+0x64b1>
			2e153: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e157:	48 8d 8b 00 01 00 00 	lea    0x100(%rbx),%rcx
   2e15e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e164:	4c 89 ea             	mov    %r13,%rdx
   2e167:	4c 89 f6             	mov    %r14,%rsi
   2e16a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e16d: R_X86_64_32S	.rodata.str1.1+0x321c
   2e171:	e8 00 00 00 00       	callq  2e176 <__MARSH_WRAP__e1000_down+0x64d0>
			2e172: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e176:	48 8d 8b e8 00 00 00 	lea    0xe8(%rbx),%rcx
   2e17d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e183:	4c 89 ea             	mov    %r13,%rdx
   2e186:	4c 89 f6             	mov    %r14,%rsi
   2e189:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e18c: R_X86_64_32S	.rodata.str1.1+0x321c
   2e190:	e8 00 00 00 00       	callq  2e195 <__MARSH_WRAP__e1000_down+0x64ef>
			2e191: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e195:	48 8d 8b c0 00 00 00 	lea    0xc0(%rbx),%rcx
   2e19c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e1a2:	4c 89 ea             	mov    %r13,%rdx
   2e1a5:	4c 89 f6             	mov    %r14,%rsi
   2e1a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e1ab: R_X86_64_32S	.rodata.str1.1+0x321c
   2e1af:	e8 00 00 00 00       	callq  2e1b4 <__MARSH_WRAP__e1000_down+0x650e>
			2e1b0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e1b4:	48 8d 8b 68 01 00 00 	lea    0x168(%rbx),%rcx
   2e1bb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e1c1:	4c 89 ea             	mov    %r13,%rdx
   2e1c4:	4c 89 f6             	mov    %r14,%rsi
   2e1c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e1ca: R_X86_64_32S	.rodata.str1.1+0x321c
   2e1ce:	e8 00 00 00 00       	callq  2e1d3 <__MARSH_WRAP__e1000_down+0x652d>
			2e1cf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e1d3:	48 8d 8b d8 01 00 00 	lea    0x1d8(%rbx),%rcx
   2e1da:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e1e0:	4c 89 ea             	mov    %r13,%rdx
   2e1e3:	4c 89 f6             	mov    %r14,%rsi
   2e1e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e1e9: R_X86_64_32S	.rodata.str1.1+0x321c
   2e1ed:	e8 00 00 00 00       	callq  2e1f2 <__MARSH_WRAP__e1000_down+0x654c>
			2e1ee: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e1f2:	48 8d 8b 38 01 00 00 	lea    0x138(%rbx),%rcx
   2e1f9:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e1ff:	4c 89 ea             	mov    %r13,%rdx
   2e202:	4c 89 f6             	mov    %r14,%rsi
   2e205:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e208: R_X86_64_32S	.rodata.str1.1+0x321c
   2e20c:	e8 00 00 00 00       	callq  2e211 <__MARSH_WRAP__e1000_down+0x656b>
			2e20d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e211:	48 8d 4b 58          	lea    0x58(%rbx),%rcx
   2e215:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e21b:	4c 89 ea             	mov    %r13,%rdx
   2e21e:	4c 89 f6             	mov    %r14,%rsi
   2e221:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e224: R_X86_64_32S	.rodata.str1.1+0x321c
   2e228:	e8 00 00 00 00       	callq  2e22d <__MARSH_WRAP__e1000_down+0x6587>
			2e229: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e22d:	48 8d 8b 20 01 00 00 	lea    0x120(%rbx),%rcx
   2e234:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e23a:	4c 89 ea             	mov    %r13,%rdx
   2e23d:	4c 89 f6             	mov    %r14,%rsi
   2e240:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e243: R_X86_64_32S	.rodata.str1.1+0x321c
   2e247:	e8 00 00 00 00       	callq  2e24c <__MARSH_WRAP__e1000_down+0x65a6>
			2e248: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e24c:	48 8d 8b 70 01 00 00 	lea    0x170(%rbx),%rcx
   2e253:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e259:	4c 89 ea             	mov    %r13,%rdx
   2e25c:	4c 89 f6             	mov    %r14,%rsi
   2e25f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e262: R_X86_64_32S	.rodata.str1.1+0x321c
   2e266:	e8 00 00 00 00       	callq  2e26b <__MARSH_WRAP__e1000_down+0x65c5>
			2e267: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e26b:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   2e272:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e278:	4c 89 ea             	mov    %r13,%rdx
   2e27b:	4c 89 f6             	mov    %r14,%rsi
   2e27e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e281: R_X86_64_32S	.rodata.str1.1+0x321c
   2e285:	e8 00 00 00 00       	callq  2e28a <__MARSH_WRAP__e1000_down+0x65e4>
			2e286: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e28a:	48 8d 8b 18 01 00 00 	lea    0x118(%rbx),%rcx
   2e291:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e297:	4c 89 ea             	mov    %r13,%rdx
   2e29a:	4c 89 f6             	mov    %r14,%rsi
   2e29d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e2a0: R_X86_64_32S	.rodata.str1.1+0x321c
   2e2a4:	e8 00 00 00 00       	callq  2e2a9 <__MARSH_WRAP__e1000_down+0x6603>
			2e2a5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e2a9:	48 8d 8b 28 01 00 00 	lea    0x128(%rbx),%rcx
   2e2b0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e2b6:	4c 89 ea             	mov    %r13,%rdx
   2e2b9:	4c 89 f6             	mov    %r14,%rsi
   2e2bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e2bf: R_X86_64_32S	.rodata.str1.1+0x321c
   2e2c3:	e8 00 00 00 00       	callq  2e2c8 <__MARSH_WRAP__e1000_down+0x6622>
			2e2c4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e2c8:	48 8d 8b 48 01 00 00 	lea    0x148(%rbx),%rcx
   2e2cf:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e2d5:	4c 89 ea             	mov    %r13,%rdx
   2e2d8:	4c 89 f6             	mov    %r14,%rsi
   2e2db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e2de: R_X86_64_32S	.rodata.str1.1+0x321c
   2e2e2:	e8 00 00 00 00       	callq  2e2e7 <__MARSH_WRAP__e1000_down+0x6641>
			2e2e3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e2e7:	48 8d 8b c0 01 00 00 	lea    0x1c0(%rbx),%rcx
   2e2ee:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e2f4:	4c 89 ea             	mov    %r13,%rdx
   2e2f7:	4c 89 f6             	mov    %r14,%rsi
   2e2fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e2fd: R_X86_64_32S	.rodata.str1.1+0x321c
   2e301:	e8 00 00 00 00       	callq  2e306 <__MARSH_WRAP__e1000_down+0x6660>
			2e302: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e306:	48 8d 8b d0 00 00 00 	lea    0xd0(%rbx),%rcx
   2e30d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e313:	4c 89 ea             	mov    %r13,%rdx
   2e316:	4c 89 f6             	mov    %r14,%rsi
   2e319:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e31c: R_X86_64_32S	.rodata.str1.1+0x321c
   2e320:	e8 00 00 00 00       	callq  2e325 <__MARSH_WRAP__e1000_down+0x667f>
			2e321: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e325:	48 8d 8b b0 00 00 00 	lea    0xb0(%rbx),%rcx
   2e32c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e332:	4c 89 ea             	mov    %r13,%rdx
   2e335:	4c 89 f6             	mov    %r14,%rsi
   2e338:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e33b: R_X86_64_32S	.rodata.str1.1+0x321c
   2e33f:	e8 00 00 00 00       	callq  2e344 <__MARSH_WRAP__e1000_down+0x669e>
			2e340: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e344:	48 8d 8b f0 01 00 00 	lea    0x1f0(%rbx),%rcx
   2e34b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e351:	4c 89 ea             	mov    %r13,%rdx
   2e354:	4c 89 f6             	mov    %r14,%rsi
   2e357:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e35a: R_X86_64_32S	.rodata.str1.1+0x321c
   2e35e:	e8 00 00 00 00       	callq  2e363 <__MARSH_WRAP__e1000_down+0x66bd>
			2e35f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e363:	48 8d 8b 78 01 00 00 	lea    0x178(%rbx),%rcx
   2e36a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e370:	4c 89 ea             	mov    %r13,%rdx
   2e373:	4c 89 f6             	mov    %r14,%rsi
   2e376:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e379: R_X86_64_32S	.rodata.str1.1+0x321c
   2e37d:	e8 00 00 00 00       	callq  2e382 <__MARSH_WRAP__e1000_down+0x66dc>
			2e37e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e382:	48 8d 4b 48          	lea    0x48(%rbx),%rcx
   2e386:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e38c:	4c 89 ea             	mov    %r13,%rdx
   2e38f:	4c 89 f6             	mov    %r14,%rsi
   2e392:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e395: R_X86_64_32S	.rodata.str1.1+0x321c
   2e399:	e8 00 00 00 00       	callq  2e39e <__MARSH_WRAP__e1000_down+0x66f8>
			2e39a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e39e:	48 8d 4b 70          	lea    0x70(%rbx),%rcx
   2e3a2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e3a8:	4c 89 ea             	mov    %r13,%rdx
   2e3ab:	4c 89 f6             	mov    %r14,%rsi
   2e3ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e3b1: R_X86_64_32S	.rodata.str1.1+0x321c
   2e3b5:	e8 00 00 00 00       	callq  2e3ba <__MARSH_WRAP__e1000_down+0x6714>
			2e3b6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e3ba:	48 8d 8b b8 01 00 00 	lea    0x1b8(%rbx),%rcx
   2e3c1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e3c7:	4c 89 ea             	mov    %r13,%rdx
   2e3ca:	4c 89 f6             	mov    %r14,%rsi
   2e3cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e3d0: R_X86_64_32S	.rodata.str1.1+0x321c
   2e3d4:	e8 00 00 00 00       	callq  2e3d9 <__MARSH_WRAP__e1000_down+0x6733>
			2e3d5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e3d9:	48 8d 8b e0 00 00 00 	lea    0xe0(%rbx),%rcx
   2e3e0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e3e6:	4c 89 ea             	mov    %r13,%rdx
   2e3e9:	4c 89 f6             	mov    %r14,%rsi
   2e3ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e3ef: R_X86_64_32S	.rodata.str1.1+0x321c
   2e3f3:	e8 00 00 00 00       	callq  2e3f8 <__MARSH_WRAP__e1000_down+0x6752>
			2e3f4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e3f8:	48 8d 4b 78          	lea    0x78(%rbx),%rcx
   2e3fc:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e402:	4c 89 ea             	mov    %r13,%rdx
   2e405:	4c 89 f6             	mov    %r14,%rsi
   2e408:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e40b: R_X86_64_32S	.rodata.str1.1+0x321c
   2e40f:	e8 00 00 00 00       	callq  2e414 <__MARSH_WRAP__e1000_down+0x676e>
			2e410: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e414:	48 8d 8b e0 01 00 00 	lea    0x1e0(%rbx),%rcx
   2e41b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e421:	4c 89 ea             	mov    %r13,%rdx
   2e424:	4c 89 f6             	mov    %r14,%rsi
   2e427:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e42a: R_X86_64_32S	.rodata.str1.1+0x321c
   2e42e:	e8 00 00 00 00       	callq  2e433 <__MARSH_WRAP__e1000_down+0x678d>
			2e42f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e433:	48 8d 8b 98 00 00 00 	lea    0x98(%rbx),%rcx
   2e43a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e440:	4c 89 ea             	mov    %r13,%rdx
   2e443:	4c 89 f6             	mov    %r14,%rsi
   2e446:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e449: R_X86_64_32S	.rodata.str1.1+0x321c
   2e44d:	e8 00 00 00 00       	callq  2e452 <__MARSH_WRAP__e1000_down+0x67ac>
			2e44e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e452:	48 8d 8b b8 00 00 00 	lea    0xb8(%rbx),%rcx
   2e459:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e45f:	4c 89 ea             	mov    %r13,%rdx
   2e462:	4c 89 f6             	mov    %r14,%rsi
   2e465:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e468: R_X86_64_32S	.rodata.str1.1+0x321c
   2e46c:	e8 00 00 00 00       	callq  2e471 <__MARSH_WRAP__e1000_down+0x67cb>
			2e46d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e471:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
   2e475:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e47b:	4c 89 ea             	mov    %r13,%rdx
   2e47e:	4c 89 f6             	mov    %r14,%rsi
   2e481:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e484: R_X86_64_32S	.rodata.str1.1+0x321c
   2e488:	e8 00 00 00 00       	callq  2e48d <__MARSH_WRAP__e1000_down+0x67e7>
			2e489: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e48d:	48 8d 8b 58 01 00 00 	lea    0x158(%rbx),%rcx
   2e494:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e49a:	4c 89 ea             	mov    %r13,%rdx
   2e49d:	4c 89 f6             	mov    %r14,%rsi
   2e4a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e4a3: R_X86_64_32S	.rodata.str1.1+0x321c
   2e4a7:	e8 00 00 00 00       	callq  2e4ac <__MARSH_WRAP__e1000_down+0x6806>
			2e4a8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e4ac:	48 8d 8b 88 01 00 00 	lea    0x188(%rbx),%rcx
   2e4b3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e4b9:	4c 89 ea             	mov    %r13,%rdx
   2e4bc:	4c 89 f6             	mov    %r14,%rsi
   2e4bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e4c2: R_X86_64_32S	.rodata.str1.1+0x321c
   2e4c6:	e8 00 00 00 00       	callq  2e4cb <__MARSH_WRAP__e1000_down+0x6825>
			2e4c7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e4cb:	48 8d 8b f8 01 00 00 	lea    0x1f8(%rbx),%rcx
   2e4d2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e4d8:	4c 89 ea             	mov    %r13,%rdx
   2e4db:	4c 89 f6             	mov    %r14,%rsi
   2e4de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e4e1: R_X86_64_32S	.rodata.str1.1+0x321c
   2e4e5:	e8 00 00 00 00       	callq  2e4ea <__MARSH_WRAP__e1000_down+0x6844>
			2e4e6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e4ea:	48 8d 8b a8 01 00 00 	lea    0x1a8(%rbx),%rcx
   2e4f1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e4f7:	4c 89 ea             	mov    %r13,%rdx
   2e4fa:	4c 89 f6             	mov    %r14,%rsi
   2e4fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e500: R_X86_64_32S	.rodata.str1.1+0x321c
   2e504:	e8 00 00 00 00       	callq  2e509 <__MARSH_WRAP__e1000_down+0x6863>
			2e505: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e509:	48 8d 8b 80 01 00 00 	lea    0x180(%rbx),%rcx
   2e510:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e516:	4c 89 ea             	mov    %r13,%rdx
   2e519:	4c 89 f6             	mov    %r14,%rsi
   2e51c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e51f: R_X86_64_32S	.rodata.str1.1+0x321c
   2e523:	e8 00 00 00 00       	callq  2e528 <__MARSH_WRAP__e1000_down+0x6882>
			2e524: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e528:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   2e52c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e532:	4c 89 ea             	mov    %r13,%rdx
   2e535:	4c 89 f6             	mov    %r14,%rsi
   2e538:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e53b: R_X86_64_32S	.rodata.str1.1+0x321c
   2e53f:	e8 00 00 00 00       	callq  2e544 <__MARSH_WRAP__e1000_down+0x689e>
			2e540: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e544:	48 8d 8b d0 01 00 00 	lea    0x1d0(%rbx),%rcx
   2e54b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e551:	4c 89 ea             	mov    %r13,%rdx
   2e554:	4c 89 f6             	mov    %r14,%rsi
   2e557:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e55a: R_X86_64_32S	.rodata.str1.1+0x321c
   2e55e:	e8 00 00 00 00       	callq  2e563 <__MARSH_WRAP__e1000_down+0x68bd>
			2e55f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e563:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e569:	48 89 d9             	mov    %rbx,%rcx
   2e56c:	4c 89 ea             	mov    %r13,%rdx
   2e56f:	4c 89 f6             	mov    %r14,%rsi
   2e572:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e575: R_X86_64_32S	.rodata.str1.1+0x321c
   2e579:	e8 00 00 00 00       	callq  2e57e <__MARSH_WRAP__e1000_down+0x68d8>
			2e57a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e57e:	48 8d 8b c8 01 00 00 	lea    0x1c8(%rbx),%rcx
   2e585:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e58b:	4c 89 ea             	mov    %r13,%rdx
   2e58e:	4c 89 f6             	mov    %r14,%rsi
   2e591:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e594: R_X86_64_32S	.rodata.str1.1+0x321c
   2e598:	e8 00 00 00 00       	callq  2e59d <__MARSH_WRAP__e1000_down+0x68f7>
			2e599: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e59d:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
   2e5a1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e5a7:	4c 89 ea             	mov    %r13,%rdx
   2e5aa:	4c 89 f6             	mov    %r14,%rsi
   2e5ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e5b0: R_X86_64_32S	.rodata.str1.1+0x321c
   2e5b4:	e8 00 00 00 00       	callq  2e5b9 <__MARSH_WRAP__e1000_down+0x6913>
			2e5b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e5b9:	48 8d 8b 30 01 00 00 	lea    0x130(%rbx),%rcx
   2e5c0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e5c6:	4c 89 ea             	mov    %r13,%rdx
   2e5c9:	4c 89 f6             	mov    %r14,%rsi
   2e5cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e5cf: R_X86_64_32S	.rodata.str1.1+0x321c
   2e5d3:	e8 00 00 00 00       	callq  2e5d8 <__MARSH_WRAP__e1000_down+0x6932>
			2e5d4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e5d8:	48 8d 8b 08 01 00 00 	lea    0x108(%rbx),%rcx
   2e5df:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e5e5:	4c 89 ea             	mov    %r13,%rdx
   2e5e8:	4c 89 f6             	mov    %r14,%rsi
   2e5eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e5ee: R_X86_64_32S	.rodata.str1.1+0x321c
   2e5f2:	e8 00 00 00 00       	callq  2e5f7 <__MARSH_WRAP__e1000_down+0x6951>
			2e5f3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e5f7:	48 8d 8b 40 01 00 00 	lea    0x140(%rbx),%rcx
   2e5fe:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e604:	4c 89 ea             	mov    %r13,%rdx
   2e607:	4c 89 f6             	mov    %r14,%rsi
   2e60a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e60d: R_X86_64_32S	.rodata.str1.1+0x321c
   2e611:	e8 00 00 00 00       	callq  2e616 <__MARSH_WRAP__e1000_down+0x6970>
			2e612: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e616:	48 8d 8b c8 00 00 00 	lea    0xc8(%rbx),%rcx
   2e61d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e623:	4c 89 ea             	mov    %r13,%rdx
   2e626:	4c 89 f6             	mov    %r14,%rsi
   2e629:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e62c: R_X86_64_32S	.rodata.str1.1+0x321c
   2e630:	e8 00 00 00 00       	callq  2e635 <__MARSH_WRAP__e1000_down+0x698f>
			2e631: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e635:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   2e639:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e63f:	4c 89 ea             	mov    %r13,%rdx
   2e642:	4c 89 f6             	mov    %r14,%rsi
   2e645:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e648: R_X86_64_32S	.rodata.str1.1+0x321c
   2e64c:	e8 00 00 00 00       	callq  2e651 <__MARSH_WRAP__e1000_down+0x69ab>
			2e64d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e651:	48 8d 8b d8 00 00 00 	lea    0xd8(%rbx),%rcx
   2e658:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e65e:	4c 89 ea             	mov    %r13,%rdx
   2e661:	4c 89 f6             	mov    %r14,%rsi
   2e664:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e667: R_X86_64_32S	.rodata.str1.1+0x321c
   2e66b:	e8 00 00 00 00       	callq  2e670 <__MARSH_WRAP__e1000_down+0x69ca>
			2e66c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e670:	48 8d 8b a8 00 00 00 	lea    0xa8(%rbx),%rcx
   2e677:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e67d:	4c 89 ea             	mov    %r13,%rdx
   2e680:	4c 89 f6             	mov    %r14,%rsi
   2e683:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e686: R_X86_64_32S	.rodata.str1.1+0x321c
   2e68a:	e8 00 00 00 00       	callq  2e68f <__MARSH_WRAP__e1000_down+0x69e9>
			2e68b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e68f:	48 8d 4b 60          	lea    0x60(%rbx),%rcx
   2e693:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e699:	4c 89 ea             	mov    %r13,%rdx
   2e69c:	4c 89 f6             	mov    %r14,%rsi
   2e69f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e6a2: R_X86_64_32S	.rodata.str1.1+0x321c
   2e6a6:	e8 00 00 00 00       	callq  2e6ab <__MARSH_WRAP__e1000_down+0x6a05>
			2e6a7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e6ab:	48 8d 8b 00 02 00 00 	lea    0x200(%rbx),%rcx
   2e6b2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e6b8:	4c 89 ea             	mov    %r13,%rdx
   2e6bb:	4c 89 f6             	mov    %r14,%rsi
   2e6be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e6c1: R_X86_64_32S	.rodata.str1.1+0x321c
   2e6c5:	e8 00 00 00 00       	callq  2e6ca <__MARSH_WRAP__e1000_down+0x6a24>
			2e6c6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e6ca:	48 8d 8b 98 01 00 00 	lea    0x198(%rbx),%rcx
   2e6d1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e6d7:	4c 89 ea             	mov    %r13,%rdx
   2e6da:	4c 89 f6             	mov    %r14,%rsi
   2e6dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e6e0: R_X86_64_32S	.rodata.str1.1+0x321c
   2e6e4:	e8 00 00 00 00       	callq  2e6e9 <__MARSH_WRAP__e1000_down+0x6a43>
			2e6e5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e6e9:	48 8d 8b 10 01 00 00 	lea    0x110(%rbx),%rcx
   2e6f0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e6f6:	4c 89 ea             	mov    %r13,%rdx
   2e6f9:	4c 89 f6             	mov    %r14,%rsi
   2e6fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e6ff: R_X86_64_32S	.rodata.str1.1+0x321c
   2e703:	e8 00 00 00 00       	callq  2e708 <__MARSH_WRAP__e1000_down+0x6a62>
			2e704: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e708:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2e70c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e712:	4c 89 ea             	mov    %r13,%rdx
   2e715:	4c 89 f6             	mov    %r14,%rsi
   2e718:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e71b: R_X86_64_32S	.rodata.str1.1+0x321c
   2e71f:	e8 00 00 00 00       	callq  2e724 <__MARSH_WRAP__e1000_down+0x6a7e>
			2e720: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e724:	48 8d 8b b0 01 00 00 	lea    0x1b0(%rbx),%rcx
   2e72b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e731:	4c 89 ea             	mov    %r13,%rdx
   2e734:	4c 89 f6             	mov    %r14,%rsi
   2e737:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e73a: R_X86_64_32S	.rodata.str1.1+0x321c
   2e73e:	e8 00 00 00 00       	callq  2e743 <__MARSH_WRAP__e1000_down+0x6a9d>
			2e73f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e743:	48 8d 8b 90 00 00 00 	lea    0x90(%rbx),%rcx
   2e74a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e750:	4c 89 ea             	mov    %r13,%rdx
   2e753:	4c 89 f6             	mov    %r14,%rsi
   2e756:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e759: R_X86_64_32S	.rodata.str1.1+0x321c
   2e75d:	e8 00 00 00 00       	callq  2e762 <__MARSH_WRAP__e1000_down+0x6abc>
			2e75e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e762:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
   2e766:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e76c:	4c 89 ea             	mov    %r13,%rdx
   2e76f:	4c 89 f6             	mov    %r14,%rsi
   2e772:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e775: R_X86_64_32S	.rodata.str1.1+0x321c
   2e779:	e8 00 00 00 00       	callq  2e77e <__MARSH_WRAP__e1000_down+0x6ad8>
			2e77a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e77e:	48 8d 8b 10 02 00 00 	lea    0x210(%rbx),%rcx
   2e785:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e78b:	4c 89 ea             	mov    %r13,%rdx
   2e78e:	4c 89 f6             	mov    %r14,%rsi
   2e791:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e794: R_X86_64_32S	.rodata.str1.1+0x321c
   2e798:	e8 00 00 00 00       	callq  2e79d <__MARSH_WRAP__e1000_down+0x6af7>
			2e799: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e79d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
   2e7a1:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e7a7:	4c 89 ea             	mov    %r13,%rdx
   2e7aa:	4c 89 f6             	mov    %r14,%rsi
   2e7ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e7b0: R_X86_64_32S	.rodata.str1.1+0x321c
   2e7b4:	e8 00 00 00 00       	callq  2e7b9 <__MARSH_WRAP__e1000_down+0x6b13>
			2e7b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e7b9:	48 8d 8b 20 02 00 00 	lea    0x220(%rbx),%rcx
   2e7c0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e7c6:	4c 89 ea             	mov    %r13,%rdx
   2e7c9:	4c 89 f6             	mov    %r14,%rsi
   2e7cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e7cf: R_X86_64_32S	.rodata.str1.1+0x321c
   2e7d3:	e8 00 00 00 00       	callq  2e7d8 <__MARSH_WRAP__e1000_down+0x6b32>
			2e7d4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e7d8:	48 8d 8b 90 01 00 00 	lea    0x190(%rbx),%rcx
   2e7df:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e7e5:	4c 89 ea             	mov    %r13,%rdx
   2e7e8:	4c 89 f6             	mov    %r14,%rsi
   2e7eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e7ee: R_X86_64_32S	.rodata.str1.1+0x321c
   2e7f2:	e8 00 00 00 00       	callq  2e7f7 <__MARSH_WRAP__e1000_down+0x6b51>
			2e7f3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e7f7:	48 8d 8b 88 00 00 00 	lea    0x88(%rbx),%rcx
   2e7fe:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e804:	4c 89 ea             	mov    %r13,%rdx
   2e807:	4c 89 f6             	mov    %r14,%rsi
   2e80a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e80d: R_X86_64_32S	.rodata.str1.1+0x321c
   2e811:	e8 00 00 00 00       	callq  2e816 <__MARSH_WRAP__e1000_down+0x6b70>
			2e812: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e816:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e81a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2e820:	4c 89 ea             	mov    %r13,%rdx
   2e823:	4c 89 f6             	mov    %r14,%rsi
   2e826:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e829: R_X86_64_32S	.rodata.str1.1+0x321c
   2e82d:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   2e834:	e8 00 00 00 00       	callq  2e839 <__MARSH_WRAP__e1000_down+0x6b93>
			2e835: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e839:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e83d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e843:	4c 89 ea             	mov    %r13,%rdx
   2e846:	4c 89 f6             	mov    %r14,%rsi
   2e849:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e84c: R_X86_64_32S	.rodata.str1.1+0x321c
   2e850:	48 81 c1 24 01 00 00 	add    $0x124,%rcx
   2e857:	e8 00 00 00 00       	callq  2e85c <__MARSH_WRAP__e1000_down+0x6bb6>
			2e858: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e85c:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e860:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2e866:	4c 89 ea             	mov    %r13,%rdx
   2e869:	4c 89 f6             	mov    %r14,%rsi
   2e86c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e86f: R_X86_64_32S	.rodata.str1.1+0x321c
   2e873:	48 81 c1 98 00 00 00 	add    $0x98,%rcx
   2e87a:	e8 00 00 00 00       	callq  2e87f <__MARSH_WRAP__e1000_down+0x6bd9>
			2e87b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e87f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e883:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e889:	4c 89 ea             	mov    %r13,%rdx
   2e88c:	4c 89 f6             	mov    %r14,%rsi
   2e88f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e892: R_X86_64_32S	.rodata.str1.1+0x321c
   2e896:	48 81 c1 d4 02 00 00 	add    $0x2d4,%rcx
   2e89d:	e8 00 00 00 00       	callq  2e8a2 <__MARSH_WRAP__e1000_down+0x6bfc>
			2e89e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e8a2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e8a6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e8ac:	4c 89 ea             	mov    %r13,%rdx
   2e8af:	4c 89 f6             	mov    %r14,%rsi
   2e8b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e8b5: R_X86_64_32S	.rodata.str1.1+0x321c
   2e8b9:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   2e8c0:	e8 00 00 00 00       	callq  2e8c5 <__MARSH_WRAP__e1000_down+0x6c1f>
			2e8c1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e8c5:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e8c9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e8cf:	4c 89 ea             	mov    %r13,%rdx
   2e8d2:	4c 89 f6             	mov    %r14,%rsi
   2e8d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e8d8: R_X86_64_32S	.rodata.str1.1+0x321c
   2e8dc:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   2e8e3:	e8 00 00 00 00       	callq  2e8e8 <__MARSH_WRAP__e1000_down+0x6c42>
			2e8e4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e8e8:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2e8ec:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e8f2:	4c 89 ea             	mov    %r13,%rdx
   2e8f5:	4c 89 f6             	mov    %r14,%rsi
   2e8f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e8fb: R_X86_64_32S	.rodata.str1.1+0x321c
   2e8ff:	48 81 c1 38 02 00 00 	add    $0x238,%rcx
   2e906:	e8 00 00 00 00       	callq  2e90b <__MARSH_WRAP__e1000_down+0x6c65>
			2e907: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e90b:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   2e90f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2e915:	4c 89 ea             	mov    %r13,%rdx
   2e918:	4c 89 f6             	mov    %r14,%rsi
   2e91b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e91e: R_X86_64_32S	.rodata.str1.1+0x321c
   2e922:	49 81 c4 30 07 00 00 	add    $0x730,%r12
   2e929:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
   2e92e:	e8 00 00 00 00       	callq  2e933 <__MARSH_WRAP__e1000_down+0x6c8d>
			2e92f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e933:	49 8d 4c 24 14       	lea    0x14(%r12),%rcx
   2e938:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e93e:	4c 89 ea             	mov    %r13,%rdx
   2e941:	4c 89 f6             	mov    %r14,%rsi
   2e944:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e947: R_X86_64_32S	.rodata.str1.1+0x321c
   2e94b:	e8 00 00 00 00       	callq  2e950 <__MARSH_WRAP__e1000_down+0x6caa>
			2e94c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e950:	49 8d 4c 24 18       	lea    0x18(%r12),%rcx
   2e955:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e95b:	4c 89 ea             	mov    %r13,%rdx
   2e95e:	4c 89 f6             	mov    %r14,%rsi
   2e961:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e964: R_X86_64_32S	.rodata.str1.1+0x321c
   2e968:	e8 00 00 00 00       	callq  2e96d <__MARSH_WRAP__e1000_down+0x6cc7>
			2e969: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e96d:	49 8d 4c 24 5c       	lea    0x5c(%r12),%rcx
   2e972:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2e978:	4c 89 ea             	mov    %r13,%rdx
   2e97b:	4c 89 f6             	mov    %r14,%rsi
   2e97e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e981: R_X86_64_32S	.rodata.str1.1+0x321c
   2e985:	e8 00 00 00 00       	callq  2e98a <__MARSH_WRAP__e1000_down+0x6ce4>
			2e986: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e98a:	49 8d 4c 24 10       	lea    0x10(%r12),%rcx
   2e98f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e995:	4c 89 ea             	mov    %r13,%rdx
   2e998:	4c 89 f6             	mov    %r14,%rsi
   2e99b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e99e: R_X86_64_32S	.rodata.str1.1+0x321c
   2e9a2:	e8 00 00 00 00       	callq  2e9a7 <__MARSH_WRAP__e1000_down+0x6d01>
			2e9a3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e9a7:	49 8d 4c 24 5a       	lea    0x5a(%r12),%rcx
   2e9ac:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2e9b2:	4c 89 ea             	mov    %r13,%rdx
   2e9b5:	4c 89 f6             	mov    %r14,%rsi
   2e9b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e9bb: R_X86_64_32S	.rodata.str1.1+0x321c
   2e9bf:	e8 00 00 00 00       	callq  2e9c4 <__MARSH_WRAP__e1000_down+0x6d1e>
			2e9c0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e9c4:	49 8d 4c 24 58       	lea    0x58(%r12),%rcx
   2e9c9:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2e9cf:	4c 89 ea             	mov    %r13,%rdx
   2e9d2:	4c 89 f6             	mov    %r14,%rsi
   2e9d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e9d8: R_X86_64_32S	.rodata.str1.1+0x321c
   2e9dc:	e8 00 00 00 00       	callq  2e9e1 <__MARSH_WRAP__e1000_down+0x6d3b>
			2e9dd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e9e1:	49 8d 4c 24 1c       	lea    0x1c(%r12),%rcx
   2e9e6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2e9ec:	4c 89 ea             	mov    %r13,%rdx
   2e9ef:	4c 89 f6             	mov    %r14,%rsi
   2e9f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e9f5: R_X86_64_32S	.rodata.str1.1+0x321c
   2e9f9:	e8 00 00 00 00       	callq  2e9fe <__MARSH_WRAP__e1000_down+0x6d58>
			2e9fa: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2e9fe:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   2ea03:	4c 89 ea             	mov    %r13,%rdx
   2ea06:	4c 89 f6             	mov    %r14,%rsi
   2ea09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ea0c: R_X86_64_32S	.rodata.str1.1+0x321c
   2ea10:	e8 00 00 00 00       	callq  2ea15 <__MARSH_WRAP__e1000_down+0x6d6f>
			2ea11: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ea15:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ea1a:	48 85 c0             	test   %rax,%rax
   2ea1d:	0f 84 3d 03 00 00    	je     2ed60 <__MARSH_WRAP__e1000_down+0x70ba>
   2ea23:	48 8d 48 18          	lea    0x18(%rax),%rcx
   2ea27:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ea2d:	4c 89 ea             	mov    %r13,%rdx
   2ea30:	4c 89 f6             	mov    %r14,%rsi
   2ea33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ea36: R_X86_64_32S	.rodata.str1.1+0x321c
   2ea3a:	e8 00 00 00 00       	callq  2ea3f <__MARSH_WRAP__e1000_down+0x6d99>
			2ea3b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ea3f:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ea44:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ea4a:	4c 89 ea             	mov    %r13,%rdx
   2ea4d:	4c 89 f6             	mov    %r14,%rsi
   2ea50:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ea53: R_X86_64_32S	.rodata.str1.1+0x321c
   2ea57:	48 83 c1 10          	add    $0x10,%rcx
   2ea5b:	e8 00 00 00 00       	callq  2ea60 <__MARSH_WRAP__e1000_down+0x6dba>
			2ea5c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ea60:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ea65:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ea6b:	4c 89 ea             	mov    %r13,%rdx
   2ea6e:	4c 89 f6             	mov    %r14,%rsi
   2ea71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ea74: R_X86_64_32S	.rodata.str1.1+0x321c
   2ea78:	48 83 c1 1a          	add    $0x1a,%rcx
   2ea7c:	e8 00 00 00 00       	callq  2ea81 <__MARSH_WRAP__e1000_down+0x6ddb>
			2ea7d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ea81:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ea86:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ea8c:	4c 89 ea             	mov    %r13,%rdx
   2ea8f:	4c 89 f6             	mov    %r14,%rsi
   2ea92:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ea95: R_X86_64_32S	.rodata.str1.1+0x321c
   2ea99:	48 83 c1 08          	add    $0x8,%rcx
   2ea9d:	e8 00 00 00 00       	callq  2eaa2 <__MARSH_WRAP__e1000_down+0x6dfc>
			2ea9e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eaa2:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2eaa7:	4c 89 ea             	mov    %r13,%rdx
   2eaaa:	4c 89 f6             	mov    %r14,%rsi
   2eaad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eab0: R_X86_64_32S	.rodata.str1.1+0x321c
   2eab4:	e8 00 00 00 00       	callq  2eab9 <__MARSH_WRAP__e1000_down+0x6e13>
			2eab5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2eab9:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2eabe:	48 8b 00             	mov    (%rax),%rax
   2eac1:	48 85 c0             	test   %rax,%rax
   2eac4:	0f 84 96 02 00 00    	je     2ed60 <__MARSH_WRAP__e1000_down+0x70ba>
   2eaca:	8a 40 7d             	mov    0x7d(%rax),%al
   2eacd:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   2ead1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ead7:	4c 89 ea             	mov    %r13,%rdx
   2eada:	4c 89 f6             	mov    %r14,%rsi
   2eadd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eae0: R_X86_64_32S	.rodata.str1.1+0x321c
   2eae4:	48 89 d9             	mov    %rbx,%rcx
   2eae7:	83 e0 07             	and    $0x7,%eax
   2eaea:	0f b6 c0             	movzbl %al,%eax
   2eaed:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   2eaf0:	e8 00 00 00 00       	callq  2eaf5 <__MARSH_WRAP__e1000_down+0x6e4f>
			2eaf1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eaf5:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2eafa:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2eb00:	4c 89 ea             	mov    %r13,%rdx
   2eb03:	4c 89 f6             	mov    %r14,%rsi
   2eb06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eb09: R_X86_64_32S	.rodata.str1.1+0x321c
   2eb0d:	48 8b 08             	mov    (%rax),%rcx
   2eb10:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   2eb17:	e8 00 00 00 00       	callq  2eb1c <__MARSH_WRAP__e1000_down+0x6e76>
			2eb18: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eb1c:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2eb21:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2eb27:	4c 89 ea             	mov    %r13,%rdx
   2eb2a:	4c 89 f6             	mov    %r14,%rsi
   2eb2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eb30: R_X86_64_32S	.rodata.str1.1+0x321c
   2eb34:	48 8b 08             	mov    (%rax),%rcx
   2eb37:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   2eb3e:	e8 00 00 00 00       	callq  2eb43 <__MARSH_WRAP__e1000_down+0x6e9d>
			2eb3f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eb43:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2eb48:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2eb4e:	48 89 d9             	mov    %rbx,%rcx
   2eb51:	4c 89 ea             	mov    %r13,%rdx
   2eb54:	4c 89 f6             	mov    %r14,%rsi
   2eb57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eb5a: R_X86_64_32S	.rodata.str1.1+0x321c
   2eb5e:	48 8b 00             	mov    (%rax),%rax
   2eb61:	8a 40 7c             	mov    0x7c(%rax),%al
   2eb64:	c0 e8 02             	shr    $0x2,%al
   2eb67:	83 e0 03             	and    $0x3,%eax
   2eb6a:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   2eb6d:	e8 00 00 00 00       	callq  2eb72 <__MARSH_WRAP__e1000_down+0x6ecc>
			2eb6e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eb72:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2eb77:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2eb7d:	4c 89 ea             	mov    %r13,%rdx
   2eb80:	4c 89 f6             	mov    %r14,%rsi
   2eb83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eb86: R_X86_64_32S	.rodata.str1.1+0x321c
   2eb8a:	48 8b 08             	mov    (%rax),%rcx
   2eb8d:	48 83 c1 6c          	add    $0x6c,%rcx
   2eb91:	e8 00 00 00 00       	callq  2eb96 <__MARSH_WRAP__e1000_down+0x6ef0>
			2eb92: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eb96:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2eb9b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2eba1:	4c 89 ea             	mov    %r13,%rdx
   2eba4:	4c 89 f6             	mov    %r14,%rsi
   2eba7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ebaa: R_X86_64_32S	.rodata.str1.1+0x321c
   2ebae:	48 8b 08             	mov    (%rax),%rcx
   2ebb1:	48 83 c1 74          	add    $0x74,%rcx
   2ebb5:	e8 00 00 00 00       	callq  2ebba <__MARSH_WRAP__e1000_down+0x6f14>
			2ebb6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ebba:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ebbf:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ebc5:	4c 89 ea             	mov    %r13,%rdx
   2ebc8:	4c 89 f6             	mov    %r14,%rsi
   2ebcb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ebce: R_X86_64_32S	.rodata.str1.1+0x321c
   2ebd2:	48 8b 08             	mov    (%rax),%rcx
   2ebd5:	48 83 c1 68          	add    $0x68,%rcx
   2ebd9:	e8 00 00 00 00       	callq  2ebde <__MARSH_WRAP__e1000_down+0x6f38>
			2ebda: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ebde:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ebe3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ebe9:	4c 89 ea             	mov    %r13,%rdx
   2ebec:	4c 89 f6             	mov    %r14,%rsi
   2ebef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ebf2: R_X86_64_32S	.rodata.str1.1+0x321c
   2ebf6:	48 8b 08             	mov    (%rax),%rcx
   2ebf9:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   2ec00:	e8 00 00 00 00       	callq  2ec05 <__MARSH_WRAP__e1000_down+0x6f5f>
			2ec01: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ec05:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ec0a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ec10:	4c 89 ea             	mov    %r13,%rdx
   2ec13:	4c 89 f6             	mov    %r14,%rsi
   2ec16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ec19: R_X86_64_32S	.rodata.str1.1+0x321c
   2ec1d:	48 8b 08             	mov    (%rax),%rcx
   2ec20:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   2ec27:	e8 00 00 00 00       	callq  2ec2c <__MARSH_WRAP__e1000_down+0x6f86>
			2ec28: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ec2c:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ec31:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ec37:	4c 89 ea             	mov    %r13,%rdx
   2ec3a:	4c 89 f6             	mov    %r14,%rsi
   2ec3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ec40: R_X86_64_32S	.rodata.str1.1+0x321c
   2ec44:	48 8b 08             	mov    (%rax),%rcx
   2ec47:	48 83 c1 7e          	add    $0x7e,%rcx
   2ec4b:	e8 00 00 00 00       	callq  2ec50 <__MARSH_WRAP__e1000_down+0x6faa>
			2ec4c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ec50:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ec55:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ec5b:	4c 89 ea             	mov    %r13,%rdx
   2ec5e:	4c 89 f6             	mov    %r14,%rsi
   2ec61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ec64: R_X86_64_32S	.rodata.str1.1+0x321c
   2ec68:	48 8b 08             	mov    (%rax),%rcx
   2ec6b:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   2ec72:	e8 00 00 00 00       	callq  2ec77 <__MARSH_WRAP__e1000_down+0x6fd1>
			2ec73: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ec77:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ec7c:	4c 89 ea             	mov    %r13,%rdx
   2ec7f:	4c 89 f6             	mov    %r14,%rsi
   2ec82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ec85: R_X86_64_32S	.rodata.str1.1+0x321c
   2ec89:	48 8b 08             	mov    (%rax),%rcx
   2ec8c:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   2ec93:	e8 00 00 00 00       	callq  2ec98 <__MARSH_WRAP__e1000_down+0x6ff2>
			2ec94: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ec98:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ec9d:	48 8b 00             	mov    (%rax),%rax
   2eca0:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   2eca7:	00 
   2eca8:	74 61                	je     2ed0b <__MARSH_WRAP__e1000_down+0x7065>
   2ecaa:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   2ecb0:	31 db                	xor    %ebx,%ebx
   2ecb2:	e8 00 00 00 00       	callq  2ecb7 <__MARSH_WRAP__e1000_down+0x7011>
			2ecb3: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   2ecb7:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   2ecbb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ecc1:	4c 89 ea             	mov    %r13,%rdx
   2ecc4:	4c 89 f6             	mov    %r14,%rsi
   2ecc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ecca: R_X86_64_32S	.rodata.str1.1+0x321c
   2ecce:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   2ecd1:	e8 00 00 00 00       	callq  2ecd6 <__MARSH_WRAP__e1000_down+0x7030>
			2ecd2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ecd6:	eb 2e                	jmp    2ed06 <__MARSH_WRAP__e1000_down+0x7060>
   2ecd8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ecdd:	48 63 cb             	movslq %ebx,%rcx
   2ece0:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   2ece4:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   2ece8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ecee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ecf1: R_X86_64_32S	.rodata.str1.1+0x321c
   2ecf5:	ff c3                	inc    %ebx
   2ecf7:	48 8b 00             	mov    (%rax),%rax
   2ecfa:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   2ed01:	e8 00 00 00 00       	callq  2ed06 <__MARSH_WRAP__e1000_down+0x7060>
			2ed02: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ed06:	3b 5d cc             	cmp    0xffffffffffffffcc(%rbp),%ebx
   2ed09:	7c cd                	jl     2ecd8 <__MARSH_WRAP__e1000_down+0x7032>
   2ed0b:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ed10:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   2ed14:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   2ed18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ed1b: R_X86_64_32S	.rodata.str1.1+0x321c
   2ed1f:	48 89 da             	mov    %rbx,%rdx
   2ed22:	4c 89 ee             	mov    %r13,%rsi
   2ed25:	48 8b 08             	mov    (%rax),%rcx
   2ed28:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   2ed2f:	e8 00 00 00 00       	callq  2ed34 <__MARSH_WRAP__e1000_down+0x708e>
			2ed30: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ed34:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ed39:	48 8b 00             	mov    (%rax),%rax
   2ed3c:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   2ed43:	48 85 c9             	test   %rcx,%rcx
   2ed46:	74 18                	je     2ed60 <__MARSH_WRAP__e1000_down+0x70ba>
   2ed48:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ed4e:	48 89 da             	mov    %rbx,%rdx
   2ed51:	4c 89 ee             	mov    %r13,%rsi
   2ed54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ed57: R_X86_64_32S	.rodata.str1.1+0x321c
   2ed5b:	e8 00 00 00 00       	callq  2ed60 <__MARSH_WRAP__e1000_down+0x70ba>
			2ed5c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ed60:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2ed64:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   2ed68:	4c 89 e1             	mov    %r12,%rcx
   2ed6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ed6e: R_X86_64_32S	.rodata.str1.1+0x321c
   2ed72:	4c 89 ea             	mov    %r13,%rdx
   2ed75:	4c 89 f6             	mov    %r14,%rsi
   2ed78:	e8 00 00 00 00       	callq  2ed7d <__MARSH_WRAP__e1000_down+0x70d7>
			2ed79: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ed7d:	49 8b 04 24          	mov    (%r12),%rax
   2ed81:	48 85 c0             	test   %rax,%rax
   2ed84:	0f 84 98 00 00 00    	je     2ee22 <__MARSH_WRAP__e1000_down+0x717c>
   2ed8a:	48 8d 48 0e          	lea    0xe(%rax),%rcx
   2ed8e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ed94:	4c 89 ea             	mov    %r13,%rdx
   2ed97:	4c 89 f6             	mov    %r14,%rsi
   2ed9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ed9d: R_X86_64_32S	.rodata.str1.1+0x321c
   2eda1:	e8 00 00 00 00       	callq  2eda6 <__MARSH_WRAP__e1000_down+0x7100>
			2eda2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eda6:	49 8b 0c 24          	mov    (%r12),%rcx
   2edaa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2edb0:	4c 89 ea             	mov    %r13,%rdx
   2edb3:	4c 89 f6             	mov    %r14,%rsi
   2edb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2edb9: R_X86_64_32S	.rodata.str1.1+0x321c
   2edbd:	48 83 c1 0d          	add    $0xd,%rcx
   2edc1:	e8 00 00 00 00       	callq  2edc6 <__MARSH_WRAP__e1000_down+0x7120>
			2edc2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2edc6:	49 8b 0c 24          	mov    (%r12),%rcx
   2edca:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2edd0:	4c 89 ea             	mov    %r13,%rdx
   2edd3:	4c 89 f6             	mov    %r14,%rsi
   2edd6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2edd9: R_X86_64_32S	.rodata.str1.1+0x321c
   2eddd:	48 83 c1 0a          	add    $0xa,%rcx
   2ede1:	e8 00 00 00 00       	callq  2ede6 <__MARSH_WRAP__e1000_down+0x7140>
			2ede2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ede6:	49 8b 0c 24          	mov    (%r12),%rcx
   2edea:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2edf0:	4c 89 ea             	mov    %r13,%rdx
   2edf3:	4c 89 f6             	mov    %r14,%rsi
   2edf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2edf9: R_X86_64_32S	.rodata.str1.1+0x321c
   2edfd:	e8 00 00 00 00       	callq  2ee02 <__MARSH_WRAP__e1000_down+0x715c>
			2edfe: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ee02:	49 8b 0c 24          	mov    (%r12),%rcx
   2ee06:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ee0c:	4c 89 ea             	mov    %r13,%rdx
   2ee0f:	4c 89 f6             	mov    %r14,%rsi
   2ee12:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee15: R_X86_64_32S	.rodata.str1.1+0x321c
   2ee19:	48 83 c1 0c          	add    $0xc,%rcx
   2ee1d:	e8 00 00 00 00       	callq  2ee22 <__MARSH_WRAP__e1000_down+0x717c>
			2ee1e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ee22:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ee26:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ee2c:	4c 89 ea             	mov    %r13,%rdx
   2ee2f:	4c 89 f6             	mov    %r14,%rsi
   2ee32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee35: R_X86_64_32S	.rodata.str1.1+0x321c
   2ee39:	48 81 c1 cc 01 00 00 	add    $0x1cc,%rcx
   2ee40:	e8 00 00 00 00       	callq  2ee45 <__MARSH_WRAP__e1000_down+0x719f>
			2ee41: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ee45:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ee49:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ee4f:	4c 89 ea             	mov    %r13,%rdx
   2ee52:	4c 89 f6             	mov    %r14,%rsi
   2ee55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee58: R_X86_64_32S	.rodata.str1.1+0x321c
   2ee5c:	48 81 c1 18 01 00 00 	add    $0x118,%rcx
   2ee63:	e8 00 00 00 00       	callq  2ee68 <__MARSH_WRAP__e1000_down+0x71c2>
			2ee64: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ee68:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ee6c:	4c 89 ea             	mov    %r13,%rdx
   2ee6f:	4c 89 f6             	mov    %r14,%rsi
   2ee72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee75: R_X86_64_32S	.rodata.str1.1+0x321c
   2ee79:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   2ee80:	e8 00 00 00 00       	callq  2ee85 <__MARSH_WRAP__e1000_down+0x71df>
			2ee81: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ee85:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ee89:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ee8f:	4c 89 ea             	mov    %r13,%rdx
   2ee92:	4c 89 f6             	mov    %r14,%rsi
   2ee95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee98: R_X86_64_32S	.rodata.str1.1+0x321c
   2ee9c:	48 81 c1 b0 02 00 00 	add    $0x2b0,%rcx
   2eea3:	e8 00 00 00 00       	callq  2eea8 <__MARSH_WRAP__e1000_down+0x7202>
			2eea4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eea8:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2eeac:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2eeb2:	4c 89 ea             	mov    %r13,%rdx
   2eeb5:	4c 89 f6             	mov    %r14,%rsi
   2eeb8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eebb: R_X86_64_32S	.rodata.str1.1+0x321c
   2eebf:	48 81 c1 28 01 00 00 	add    $0x128,%rcx
   2eec6:	e8 00 00 00 00       	callq  2eecb <__MARSH_WRAP__e1000_down+0x7225>
			2eec7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eecb:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2eecf:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2eed5:	4c 89 ea             	mov    %r13,%rdx
   2eed8:	4c 89 f6             	mov    %r14,%rsi
   2eedb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eede: R_X86_64_32S	.rodata.str1.1+0x321c
   2eee2:	48 81 c3 78 01 00 00 	add    $0x178,%rbx
   2eee9:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   2eeed:	e8 00 00 00 00       	callq  2eef2 <__MARSH_WRAP__e1000_down+0x724c>
			2eeee: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2eef2:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
   2eef6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2eefc:	4c 89 ea             	mov    %r13,%rdx
   2eeff:	4c 89 f6             	mov    %r14,%rsi
   2ef02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef05: R_X86_64_32S	.rodata.str1.1+0x321c
   2ef09:	e8 00 00 00 00       	callq  2ef0e <__MARSH_WRAP__e1000_down+0x7268>
			2ef0a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ef0e:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2ef12:	4c 89 ea             	mov    %r13,%rdx
   2ef15:	4c 89 f6             	mov    %r14,%rsi
   2ef18:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef1b: R_X86_64_32S	.rodata.str1.1+0x321c
   2ef1f:	e8 00 00 00 00       	callq  2ef24 <__MARSH_WRAP__e1000_down+0x727e>
			2ef20: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ef24:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ef28:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ef2e:	4c 89 ea             	mov    %r13,%rdx
   2ef31:	4c 89 f6             	mov    %r14,%rsi
   2ef34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef37: R_X86_64_32S	.rodata.str1.1+0x321c
   2ef3b:	48 81 c1 e8 02 00 00 	add    $0x2e8,%rcx
   2ef42:	e8 00 00 00 00       	callq  2ef47 <__MARSH_WRAP__e1000_down+0x72a1>
			2ef43: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ef47:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2ef4b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2ef51:	4c 89 ea             	mov    %r13,%rdx
   2ef54:	4c 89 f6             	mov    %r14,%rsi
   2ef57:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef5a: R_X86_64_32S	.rodata.str1.1+0x321c
   2ef5e:	48 81 c1 dc 02 00 00 	add    $0x2dc,%rcx
   2ef65:	e8 00 00 00 00       	callq  2ef6a <__MARSH_WRAP__e1000_down+0x72c4>
			2ef66: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ef6a:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2ef6e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ef74:	4c 89 ea             	mov    %r13,%rdx
   2ef77:	4c 89 f6             	mov    %r14,%rsi
   2ef7a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef7d: R_X86_64_32S	.rodata.str1.1+0x321c
   2ef81:	48 83 c3 60          	add    $0x60,%rbx
   2ef85:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   2ef89:	e8 00 00 00 00       	callq  2ef8e <__MARSH_WRAP__e1000_down+0x72e8>
			2ef8a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ef8e:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
   2ef92:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ef98:	4c 89 ea             	mov    %r13,%rdx
   2ef9b:	4c 89 f6             	mov    %r14,%rsi
   2ef9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2efa1: R_X86_64_32S	.rodata.str1.1+0x321c
   2efa5:	e8 00 00 00 00       	callq  2efaa <__MARSH_WRAP__e1000_down+0x7304>
			2efa6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2efaa:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2efae:	4c 89 ea             	mov    %r13,%rdx
   2efb1:	4c 89 f6             	mov    %r14,%rsi
   2efb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2efb7: R_X86_64_32S	.rodata.str1.1+0x321c
   2efbb:	e8 00 00 00 00       	callq  2efc0 <__MARSH_WRAP__e1000_down+0x731a>
			2efbc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2efc0:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2efc4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2efca:	4c 89 ea             	mov    %r13,%rdx
   2efcd:	4c 89 f6             	mov    %r14,%rsi
   2efd0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2efd3: R_X86_64_32S	.rodata.str1.1+0x321c
   2efd7:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   2efde:	e8 00 00 00 00       	callq  2efe3 <__MARSH_WRAP__e1000_down+0x733d>
			2efdf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2efe3:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2efe7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2efed:	4c 89 ea             	mov    %r13,%rdx
   2eff0:	4c 89 f6             	mov    %r14,%rsi
   2eff3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2eff6: R_X86_64_32S	.rodata.str1.1+0x321c
   2effa:	48 81 c1 d4 01 00 00 	add    $0x1d4,%rcx
   2f001:	e8 00 00 00 00       	callq  2f006 <__MARSH_WRAP__e1000_down+0x7360>
			2f002: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f006:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   2f00a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f010:	4c 89 ea             	mov    %r13,%rdx
   2f013:	4c 89 f6             	mov    %r14,%rsi
   2f016:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f019: R_X86_64_32S	.rodata.str1.1+0x321c
   2f01d:	49 81 c4 b8 03 00 00 	add    $0x3b8,%r12
   2f024:	49 8d 8c 24 cf 00 00 	lea    0xcf(%r12),%rcx
   2f02b:	00 
   2f02c:	49 8d 9c 24 fa 00 00 	lea    0xfa(%r12),%rbx
   2f033:	00 
   2f034:	e8 00 00 00 00       	callq  2f039 <__MARSH_WRAP__e1000_down+0x7393>
			2f035: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f039:	49 8d 8c 24 84 00 00 	lea    0x84(%r12),%rcx
   2f040:	00 
   2f041:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f047:	4c 89 ea             	mov    %r13,%rdx
   2f04a:	4c 89 f6             	mov    %r14,%rsi
   2f04d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f050: R_X86_64_32S	.rodata.str1.1+0x321c
   2f054:	e8 00 00 00 00       	callq  2f059 <__MARSH_WRAP__e1000_down+0x73b3>
			2f055: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f059:	49 8d 8c 24 0e 01 00 	lea    0x10e(%r12),%rcx
   2f060:	00 
   2f061:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f067:	4c 89 ea             	mov    %r13,%rdx
   2f06a:	4c 89 f6             	mov    %r14,%rsi
   2f06d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f070: R_X86_64_32S	.rodata.str1.1+0x321c
   2f074:	e8 00 00 00 00       	callq  2f079 <__MARSH_WRAP__e1000_down+0x73d3>
			2f075: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f079:	49 8d 4c 24 14       	lea    0x14(%r12),%rcx
   2f07e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f084:	4c 89 ea             	mov    %r13,%rdx
   2f087:	4c 89 f6             	mov    %r14,%rsi
   2f08a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f08d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f091:	e8 00 00 00 00       	callq  2f096 <__MARSH_WRAP__e1000_down+0x73f0>
			2f092: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f096:	49 8d 8c 24 ef 00 00 	lea    0xef(%r12),%rcx
   2f09d:	00 
   2f09e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f0a4:	4c 89 ea             	mov    %r13,%rdx
   2f0a7:	4c 89 f6             	mov    %r14,%rsi
   2f0aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f0ad: R_X86_64_32S	.rodata.str1.1+0x321c
   2f0b1:	e8 00 00 00 00       	callq  2f0b6 <__MARSH_WRAP__e1000_down+0x7410>
			2f0b2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f0b6:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   2f0bd:	00 
   2f0be:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f0c4:	4c 89 ea             	mov    %r13,%rdx
   2f0c7:	4c 89 f6             	mov    %r14,%rsi
   2f0ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f0cd: R_X86_64_32S	.rodata.str1.1+0x321c
   2f0d1:	e8 00 00 00 00       	callq  2f0d6 <__MARSH_WRAP__e1000_down+0x7430>
			2f0d2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f0d6:	49 8d 8c 24 b8 00 00 	lea    0xb8(%r12),%rcx
   2f0dd:	00 
   2f0de:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f0e4:	4c 89 ea             	mov    %r13,%rdx
   2f0e7:	4c 89 f6             	mov    %r14,%rsi
   2f0ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f0ed: R_X86_64_32S	.rodata.str1.1+0x321c
   2f0f1:	e8 00 00 00 00       	callq  2f0f6 <__MARSH_WRAP__e1000_down+0x7450>
			2f0f2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f0f6:	49 8d 4c 24 38       	lea    0x38(%r12),%rcx
   2f0fb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f101:	4c 89 ea             	mov    %r13,%rdx
   2f104:	4c 89 f6             	mov    %r14,%rsi
   2f107:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f10a: R_X86_64_32S	.rodata.str1.1+0x321c
   2f10e:	45 31 ff             	xor    %r15d,%r15d
   2f111:	e8 00 00 00 00       	callq  2f116 <__MARSH_WRAP__e1000_down+0x7470>
			2f112: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f116:	49 8d 8c 24 d2 00 00 	lea    0xd2(%r12),%rcx
   2f11d:	00 
   2f11e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f124:	4c 89 ea             	mov    %r13,%rdx
   2f127:	4c 89 f6             	mov    %r14,%rsi
   2f12a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f12d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f131:	e8 00 00 00 00       	callq  2f136 <__MARSH_WRAP__e1000_down+0x7490>
			2f132: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f136:	49 8d 8c 24 d0 00 00 	lea    0xd0(%r12),%rcx
   2f13d:	00 
   2f13e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f144:	4c 89 ea             	mov    %r13,%rdx
   2f147:	4c 89 f6             	mov    %r14,%rsi
   2f14a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f14d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f151:	e8 00 00 00 00       	callq  2f156 <__MARSH_WRAP__e1000_down+0x74b0>
			2f152: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f156:	49 8d 8c 24 b4 00 00 	lea    0xb4(%r12),%rcx
   2f15d:	00 
   2f15e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f164:	4c 89 ea             	mov    %r13,%rdx
   2f167:	4c 89 f6             	mov    %r14,%rsi
   2f16a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f16d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f171:	e8 00 00 00 00       	callq  2f176 <__MARSH_WRAP__e1000_down+0x74d0>
			2f172: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f176:	49 8d 8c 24 ee 00 00 	lea    0xee(%r12),%rcx
   2f17d:	00 
   2f17e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f184:	4c 89 ea             	mov    %r13,%rdx
   2f187:	4c 89 f6             	mov    %r14,%rsi
   2f18a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f18d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f191:	e8 00 00 00 00       	callq  2f196 <__MARSH_WRAP__e1000_down+0x74f0>
			2f192: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f196:	49 8d 8c 24 d6 00 00 	lea    0xd6(%r12),%rcx
   2f19d:	00 
   2f19e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f1a4:	4c 89 ea             	mov    %r13,%rdx
   2f1a7:	4c 89 f6             	mov    %r14,%rsi
   2f1aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f1ad: R_X86_64_32S	.rodata.str1.1+0x321c
   2f1b1:	e8 00 00 00 00       	callq  2f1b6 <__MARSH_WRAP__e1000_down+0x7510>
			2f1b2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f1b6:	49 8d 8c 24 e8 00 00 	lea    0xe8(%r12),%rcx
   2f1bd:	00 
   2f1be:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f1c4:	4c 89 ea             	mov    %r13,%rdx
   2f1c7:	4c 89 f6             	mov    %r14,%rsi
   2f1ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f1cd: R_X86_64_32S	.rodata.str1.1+0x321c
   2f1d1:	e8 00 00 00 00       	callq  2f1d6 <__MARSH_WRAP__e1000_down+0x7530>
			2f1d2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f1d6:	49 8d 8c 24 f0 00 00 	lea    0xf0(%r12),%rcx
   2f1dd:	00 
   2f1de:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f1e4:	4c 89 ea             	mov    %r13,%rdx
   2f1e7:	4c 89 f6             	mov    %r14,%rsi
   2f1ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f1ed: R_X86_64_32S	.rodata.str1.1+0x321c
   2f1f1:	e8 00 00 00 00       	callq  2f1f6 <__MARSH_WRAP__e1000_down+0x7550>
			2f1f2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f1f6:	49 8d 8c 24 e0 00 00 	lea    0xe0(%r12),%rcx
   2f1fd:	00 
   2f1fe:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f204:	4c 89 ea             	mov    %r13,%rdx
   2f207:	4c 89 f6             	mov    %r14,%rsi
   2f20a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f20d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f211:	e8 00 00 00 00       	callq  2f216 <__MARSH_WRAP__e1000_down+0x7570>
			2f212: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f216:	49 8d 8c 24 e2 00 00 	lea    0xe2(%r12),%rcx
   2f21d:	00 
   2f21e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f224:	4c 89 ea             	mov    %r13,%rdx
   2f227:	4c 89 f6             	mov    %r14,%rsi
   2f22a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f22d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f231:	e8 00 00 00 00       	callq  2f236 <__MARSH_WRAP__e1000_down+0x7590>
			2f232: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f236:	49 8d 4c 24 10       	lea    0x10(%r12),%rcx
   2f23b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f241:	4c 89 ea             	mov    %r13,%rdx
   2f244:	4c 89 f6             	mov    %r14,%rsi
   2f247:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f24a: R_X86_64_32S	.rodata.str1.1+0x321c
   2f24e:	e8 00 00 00 00       	callq  2f253 <__MARSH_WRAP__e1000_down+0x75ad>
			2f24f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f253:	49 8d 4c 24 70       	lea    0x70(%r12),%rcx
   2f258:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f25e:	4c 89 ea             	mov    %r13,%rdx
   2f261:	4c 89 f6             	mov    %r14,%rsi
   2f264:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f267: R_X86_64_32S	.rodata.str1.1+0x321c
   2f26b:	e8 00 00 00 00       	callq  2f270 <__MARSH_WRAP__e1000_down+0x75ca>
			2f26c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f270:	49 8d 4c 24 78       	lea    0x78(%r12),%rcx
   2f275:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2f27b:	4c 89 ea             	mov    %r13,%rdx
   2f27e:	4c 89 f6             	mov    %r14,%rsi
   2f281:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f284: R_X86_64_32S	.rodata.str1.1+0x321c
   2f288:	e8 00 00 00 00       	callq  2f28d <__MARSH_WRAP__e1000_down+0x75e7>
			2f289: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f28d:	49 8d 8c 24 d8 00 00 	lea    0xd8(%r12),%rcx
   2f294:	00 
   2f295:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f29b:	4c 89 ea             	mov    %r13,%rdx
   2f29e:	4c 89 f6             	mov    %r14,%rsi
   2f2a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f2a4: R_X86_64_32S	.rodata.str1.1+0x321c
   2f2a8:	e8 00 00 00 00       	callq  2f2ad <__MARSH_WRAP__e1000_down+0x7607>
			2f2a9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f2ad:	49 8d 4c 24 5c       	lea    0x5c(%r12),%rcx
   2f2b2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f2b8:	4c 89 ea             	mov    %r13,%rdx
   2f2bb:	4c 89 f6             	mov    %r14,%rsi
   2f2be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f2c1: R_X86_64_32S	.rodata.str1.1+0x321c
   2f2c5:	e8 00 00 00 00       	callq  2f2ca <__MARSH_WRAP__e1000_down+0x7624>
			2f2c6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f2ca:	49 8d 4c 24 6c       	lea    0x6c(%r12),%rcx
   2f2cf:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f2d5:	4c 89 ea             	mov    %r13,%rdx
   2f2d8:	4c 89 f6             	mov    %r14,%rsi
   2f2db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f2de: R_X86_64_32S	.rodata.str1.1+0x321c
   2f2e2:	e8 00 00 00 00       	callq  2f2e7 <__MARSH_WRAP__e1000_down+0x7641>
			2f2e3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f2e7:	49 8d 4c 24 40       	lea    0x40(%r12),%rcx
   2f2ec:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f2f2:	4c 89 ea             	mov    %r13,%rdx
   2f2f5:	4c 89 f6             	mov    %r14,%rsi
   2f2f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f2fb: R_X86_64_32S	.rodata.str1.1+0x321c
   2f2ff:	e8 00 00 00 00       	callq  2f304 <__MARSH_WRAP__e1000_down+0x765e>
			2f300: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f304:	49 8d 8c 24 10 01 00 	lea    0x110(%r12),%rcx
   2f30b:	00 
   2f30c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f312:	4c 89 ea             	mov    %r13,%rdx
   2f315:	4c 89 f6             	mov    %r14,%rsi
   2f318:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f31b: R_X86_64_32S	.rodata.str1.1+0x321c
   2f31f:	e8 00 00 00 00       	callq  2f324 <__MARSH_WRAP__e1000_down+0x767e>
			2f320: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f324:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2f328:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   2f32c:	48 89 d9             	mov    %rbx,%rcx
   2f32f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f335:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f338: R_X86_64_32S	.rodata.str1.1+0x321c
   2f33c:	49 ff c7             	inc    %r15
   2f33f:	4c 89 ea             	mov    %r13,%rdx
   2f342:	4c 89 f6             	mov    %r14,%rsi
   2f345:	48 ff c3             	inc    %rbx
   2f348:	e8 00 00 00 00       	callq  2f34d <__MARSH_WRAP__e1000_down+0x76a7>
			2f349: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f34d:	49 83 ff 06          	cmp    $0x6,%r15
   2f351:	75 d1                	jne    2f324 <__MARSH_WRAP__e1000_down+0x767e>
   2f353:	49 8d 8c 24 a8 00 00 	lea    0xa8(%r12),%rcx
   2f35a:	00 
   2f35b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f361:	4c 89 ea             	mov    %r13,%rdx
   2f364:	4c 89 f6             	mov    %r14,%rsi
   2f367:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f36a: R_X86_64_32S	.rodata.str1.1+0x321c
   2f36e:	49 8d 5c 24 48       	lea    0x48(%r12),%rbx
   2f373:	e8 00 00 00 00       	callq  2f378 <__MARSH_WRAP__e1000_down+0x76d2>
			2f374: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f378:	49 8d 4c 24 3c       	lea    0x3c(%r12),%rcx
   2f37d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f383:	4c 89 ea             	mov    %r13,%rdx
   2f386:	4c 89 f6             	mov    %r14,%rsi
   2f389:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f38c: R_X86_64_32S	.rodata.str1.1+0x321c
   2f390:	e8 00 00 00 00       	callq  2f395 <__MARSH_WRAP__e1000_down+0x76ef>
			2f391: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f395:	49 8d 8c 24 de 00 00 	lea    0xde(%r12),%rcx
   2f39c:	00 
   2f39d:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f3a3:	4c 89 ea             	mov    %r13,%rdx
   2f3a6:	4c 89 f6             	mov    %r14,%rsi
   2f3a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f3ac: R_X86_64_32S	.rodata.str1.1+0x321c
   2f3b0:	e8 00 00 00 00       	callq  2f3b5 <__MARSH_WRAP__e1000_down+0x770f>
			2f3b1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f3b5:	49 8d 4c 24 52       	lea    0x52(%r12),%rcx
   2f3ba:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f3c0:	4c 89 ea             	mov    %r13,%rdx
   2f3c3:	4c 89 f6             	mov    %r14,%rsi
   2f3c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f3c9: R_X86_64_32S	.rodata.str1.1+0x321c
   2f3cd:	e8 00 00 00 00       	callq  2f3d2 <__MARSH_WRAP__e1000_down+0x772c>
			2f3ce: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f3d2:	49 8d 4c 24 4e       	lea    0x4e(%r12),%rcx
   2f3d7:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f3dd:	4c 89 ea             	mov    %r13,%rdx
   2f3e0:	4c 89 f6             	mov    %r14,%rsi
   2f3e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f3e6: R_X86_64_32S	.rodata.str1.1+0x321c
   2f3ea:	e8 00 00 00 00       	callq  2f3ef <__MARSH_WRAP__e1000_down+0x7749>
			2f3eb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f3ef:	49 8d 4c 24 4c       	lea    0x4c(%r12),%rcx
   2f3f4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f3fa:	4c 89 ea             	mov    %r13,%rdx
   2f3fd:	4c 89 f6             	mov    %r14,%rsi
   2f400:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f403: R_X86_64_32S	.rodata.str1.1+0x321c
   2f407:	e8 00 00 00 00       	callq  2f40c <__MARSH_WRAP__e1000_down+0x7766>
			2f408: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f40c:	48 89 d9             	mov    %rbx,%rcx
   2f40f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f415:	4c 89 ea             	mov    %r13,%rdx
   2f418:	4c 89 f6             	mov    %r14,%rsi
   2f41b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f41e: R_X86_64_32S	.rodata.str1.1+0x321c
   2f422:	49 8d 9c 24 f4 00 00 	lea    0xf4(%r12),%rbx
   2f429:	00 
   2f42a:	e8 00 00 00 00       	callq  2f42f <__MARSH_WRAP__e1000_down+0x7789>
			2f42b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f42f:	49 8d 4c 24 56       	lea    0x56(%r12),%rcx
   2f434:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f43a:	4c 89 ea             	mov    %r13,%rdx
   2f43d:	4c 89 f6             	mov    %r14,%rsi
   2f440:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f443: R_X86_64_32S	.rodata.str1.1+0x321c
   2f447:	e8 00 00 00 00       	callq  2f44c <__MARSH_WRAP__e1000_down+0x77a6>
			2f448: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f44c:	49 8d 4c 24 50       	lea    0x50(%r12),%rcx
   2f451:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f457:	4c 89 ea             	mov    %r13,%rdx
   2f45a:	4c 89 f6             	mov    %r14,%rsi
   2f45d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f460: R_X86_64_32S	.rodata.str1.1+0x321c
   2f464:	e8 00 00 00 00       	callq  2f469 <__MARSH_WRAP__e1000_down+0x77c3>
			2f465: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f469:	49 8d 4c 24 54       	lea    0x54(%r12),%rcx
   2f46e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f474:	4c 89 ea             	mov    %r13,%rdx
   2f477:	4c 89 f6             	mov    %r14,%rsi
   2f47a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f47d: R_X86_64_32S	.rodata.str1.1+0x321c
   2f481:	e8 00 00 00 00       	callq  2f486 <__MARSH_WRAP__e1000_down+0x77e0>
			2f482: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f486:	49 8d 4c 24 57       	lea    0x57(%r12),%rcx
   2f48b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f491:	4c 89 ea             	mov    %r13,%rdx
   2f494:	4c 89 f6             	mov    %r14,%rsi
   2f497:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f49a: R_X86_64_32S	.rodata.str1.1+0x321c
   2f49e:	e8 00 00 00 00       	callq  2f4a3 <__MARSH_WRAP__e1000_down+0x77fd>
			2f49f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f4a3:	49 8d 8c 24 11 01 00 	lea    0x111(%r12),%rcx
   2f4aa:	00 
   2f4ab:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f4b1:	4c 89 ea             	mov    %r13,%rdx
   2f4b4:	4c 89 f6             	mov    %r14,%rsi
   2f4b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f4ba: R_X86_64_32S	.rodata.str1.1+0x321c
   2f4be:	e8 00 00 00 00       	callq  2f4c3 <__MARSH_WRAP__e1000_down+0x781d>
			2f4bf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f4c3:	49 8d 8c 24 08 01 00 	lea    0x108(%r12),%rcx
   2f4ca:	00 
   2f4cb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f4d1:	4c 89 ea             	mov    %r13,%rdx
   2f4d4:	4c 89 f6             	mov    %r14,%rsi
   2f4d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f4da: R_X86_64_32S	.rodata.str1.1+0x321c
   2f4de:	e8 00 00 00 00       	callq  2f4e3 <__MARSH_WRAP__e1000_down+0x783d>
			2f4df: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f4e3:	49 8d 8c 24 1e 01 00 	lea    0x11e(%r12),%rcx
   2f4ea:	00 
   2f4eb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f4f1:	4c 89 ea             	mov    %r13,%rdx
   2f4f4:	4c 89 f6             	mov    %r14,%rsi
   2f4f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f4fa: R_X86_64_32S	.rodata.str1.1+0x321c
   2f4fe:	e8 00 00 00 00       	callq  2f503 <__MARSH_WRAP__e1000_down+0x785d>
			2f4ff: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f503:	49 8d 8c 24 90 00 00 	lea    0x90(%r12),%rcx
   2f50a:	00 
   2f50b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f511:	4c 89 ea             	mov    %r13,%rdx
   2f514:	4c 89 f6             	mov    %r14,%rsi
   2f517:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f51a: R_X86_64_32S	.rodata.str1.1+0x321c
   2f51e:	e8 00 00 00 00       	callq  2f523 <__MARSH_WRAP__e1000_down+0x787d>
			2f51f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f523:	49 8d 8c 24 f2 00 00 	lea    0xf2(%r12),%rcx
   2f52a:	00 
   2f52b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f531:	4c 89 ea             	mov    %r13,%rdx
   2f534:	4c 89 f6             	mov    %r14,%rsi
   2f537:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f53a: R_X86_64_32S	.rodata.str1.1+0x321c
   2f53e:	e8 00 00 00 00       	callq  2f543 <__MARSH_WRAP__e1000_down+0x789d>
			2f53f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f543:	49 8d 4c 24 60       	lea    0x60(%r12),%rcx
   2f548:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f54e:	4c 89 ea             	mov    %r13,%rdx
   2f551:	4c 89 f6             	mov    %r14,%rsi
   2f554:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f557: R_X86_64_32S	.rodata.str1.1+0x321c
   2f55b:	e8 00 00 00 00       	callq  2f560 <__MARSH_WRAP__e1000_down+0x78ba>
			2f55c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f560:	49 8d 8c 24 da 00 00 	lea    0xda(%r12),%rcx
   2f567:	00 
   2f568:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f56e:	4c 89 ea             	mov    %r13,%rdx
   2f571:	4c 89 f6             	mov    %r14,%rsi
   2f574:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f577: R_X86_64_32S	.rodata.str1.1+0x321c
   2f57b:	e8 00 00 00 00       	callq  2f580 <__MARSH_WRAP__e1000_down+0x78da>
			2f57c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f580:	49 8d 8c 24 f1 00 00 	lea    0xf1(%r12),%rcx
   2f587:	00 
   2f588:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f58e:	4c 89 ea             	mov    %r13,%rdx
   2f591:	4c 89 f6             	mov    %r14,%rsi
   2f594:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f597: R_X86_64_32S	.rodata.str1.1+0x321c
   2f59b:	e8 00 00 00 00       	callq  2f5a0 <__MARSH_WRAP__e1000_down+0x78fa>
			2f59c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f5a0:	49 8d 4c 24 34       	lea    0x34(%r12),%rcx
   2f5a5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f5ab:	4c 89 ea             	mov    %r13,%rdx
   2f5ae:	4c 89 f6             	mov    %r14,%rsi
   2f5b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f5b4: R_X86_64_32S	.rodata.str1.1+0x321c
   2f5b8:	e8 00 00 00 00       	callq  2f5bd <__MARSH_WRAP__e1000_down+0x7917>
			2f5b9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f5bd:	49 8d 8c 24 9c 00 00 	lea    0x9c(%r12),%rcx
   2f5c4:	00 
   2f5c5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f5cb:	4c 89 ea             	mov    %r13,%rdx
   2f5ce:	4c 89 f6             	mov    %r14,%rsi
   2f5d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f5d4: R_X86_64_32S	.rodata.str1.1+0x321c
   2f5d8:	e8 00 00 00 00       	callq  2f5dd <__MARSH_WRAP__e1000_down+0x7937>
			2f5d9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f5dd:	49 8d 8c 24 13 01 00 	lea    0x113(%r12),%rcx
   2f5e4:	00 
   2f5e5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f5eb:	4c 89 ea             	mov    %r13,%rdx
   2f5ee:	4c 89 f6             	mov    %r14,%rsi
   2f5f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f5f4: R_X86_64_32S	.rodata.str1.1+0x321c
   2f5f8:	e8 00 00 00 00       	callq  2f5fd <__MARSH_WRAP__e1000_down+0x7957>
			2f5f9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f5fd:	49 8d 8c 24 ec 00 00 	lea    0xec(%r12),%rcx
   2f604:	00 
   2f605:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f60b:	4c 89 ea             	mov    %r13,%rdx
   2f60e:	4c 89 f6             	mov    %r14,%rsi
   2f611:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f614: R_X86_64_32S	.rodata.str1.1+0x321c
   2f618:	e8 00 00 00 00       	callq  2f61d <__MARSH_WRAP__e1000_down+0x7977>
			2f619: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f61d:	49 8d 4c 24 44       	lea    0x44(%r12),%rcx
   2f622:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f628:	4c 89 ea             	mov    %r13,%rdx
   2f62b:	4c 89 f6             	mov    %r14,%rsi
   2f62e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f631: R_X86_64_32S	.rodata.str1.1+0x321c
   2f635:	e8 00 00 00 00       	callq  2f63a <__MARSH_WRAP__e1000_down+0x7994>
			2f636: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f63a:	49 8d 8c 24 1b 01 00 	lea    0x11b(%r12),%rcx
   2f641:	00 
   2f642:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f648:	4c 89 ea             	mov    %r13,%rdx
   2f64b:	4c 89 f6             	mov    %r14,%rsi
   2f64e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f651: R_X86_64_32S	.rodata.str1.1+0x321c
   2f655:	e8 00 00 00 00       	callq  2f65a <__MARSH_WRAP__e1000_down+0x79b4>
			2f656: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f65a:	49 8d 8c 24 98 00 00 	lea    0x98(%r12),%rcx
   2f661:	00 
   2f662:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f668:	4c 89 ea             	mov    %r13,%rdx
   2f66b:	4c 89 f6             	mov    %r14,%rsi
   2f66e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f671: R_X86_64_32S	.rodata.str1.1+0x321c
   2f675:	e8 00 00 00 00       	callq  2f67a <__MARSH_WRAP__e1000_down+0x79d4>
			2f676: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f67a:	49 8d 8c 24 18 01 00 	lea    0x118(%r12),%rcx
   2f681:	00 
   2f682:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f688:	4c 89 ea             	mov    %r13,%rdx
   2f68b:	4c 89 f6             	mov    %r14,%rsi
   2f68e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f691: R_X86_64_32S	.rodata.str1.1+0x321c
   2f695:	e8 00 00 00 00       	callq  2f69a <__MARSH_WRAP__e1000_down+0x79f4>
			2f696: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f69a:	49 8d 8c 24 e6 00 00 	lea    0xe6(%r12),%rcx
   2f6a1:	00 
   2f6a2:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f6a8:	4c 89 ea             	mov    %r13,%rdx
   2f6ab:	4c 89 f6             	mov    %r14,%rsi
   2f6ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f6b1: R_X86_64_32S	.rodata.str1.1+0x321c
   2f6b5:	e8 00 00 00 00       	callq  2f6ba <__MARSH_WRAP__e1000_down+0x7a14>
			2f6b6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f6ba:	49 8d 8c 24 dc 00 00 	lea    0xdc(%r12),%rcx
   2f6c1:	00 
   2f6c2:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f6c8:	4c 89 ea             	mov    %r13,%rdx
   2f6cb:	4c 89 f6             	mov    %r14,%rsi
   2f6ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f6d1: R_X86_64_32S	.rodata.str1.1+0x321c
   2f6d5:	e8 00 00 00 00       	callq  2f6da <__MARSH_WRAP__e1000_down+0x7a34>
			2f6d6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f6da:	49 8d 8c 24 80 00 00 	lea    0x80(%r12),%rcx
   2f6e1:	00 
   2f6e2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f6e8:	4c 89 ea             	mov    %r13,%rdx
   2f6eb:	4c 89 f6             	mov    %r14,%rsi
   2f6ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f6f1: R_X86_64_32S	.rodata.str1.1+0x321c
   2f6f5:	e8 00 00 00 00       	callq  2f6fa <__MARSH_WRAP__e1000_down+0x7a54>
			2f6f6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f6fa:	49 8d 4c 24 18       	lea    0x18(%r12),%rcx
   2f6ff:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f705:	4c 89 ea             	mov    %r13,%rdx
   2f708:	4c 89 f6             	mov    %r14,%rsi
   2f70b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f70e: R_X86_64_32S	.rodata.str1.1+0x321c
   2f712:	e8 00 00 00 00       	callq  2f717 <__MARSH_WRAP__e1000_down+0x7a71>
			2f713: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f717:	49 8d 8c 24 bc 00 00 	lea    0xbc(%r12),%rcx
   2f71e:	00 
   2f71f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f725:	4c 89 ea             	mov    %r13,%rdx
   2f728:	4c 89 f6             	mov    %r14,%rsi
   2f72b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f72e: R_X86_64_32S	.rodata.str1.1+0x321c
   2f732:	e8 00 00 00 00       	callq  2f737 <__MARSH_WRAP__e1000_down+0x7a91>
			2f733: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f737:	49 8d 8c 24 01 01 00 	lea    0x101(%r12),%rcx
   2f73e:	00 
   2f73f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f745:	4c 89 ea             	mov    %r13,%rdx
   2f748:	4c 89 f6             	mov    %r14,%rsi
   2f74b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f74e: R_X86_64_32S	.rodata.str1.1+0x321c
   2f752:	e8 00 00 00 00       	callq  2f757 <__MARSH_WRAP__e1000_down+0x7ab1>
			2f753: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f757:	49 8d 8c 24 16 01 00 	lea    0x116(%r12),%rcx
   2f75e:	00 
   2f75f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f765:	4c 89 ea             	mov    %r13,%rdx
   2f768:	4c 89 f6             	mov    %r14,%rsi
   2f76b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f76e: R_X86_64_32S	.rodata.str1.1+0x321c
   2f772:	e8 00 00 00 00       	callq  2f777 <__MARSH_WRAP__e1000_down+0x7ad1>
			2f773: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f777:	49 8d 8c 24 e4 00 00 	lea    0xe4(%r12),%rcx
   2f77e:	00 
   2f77f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f785:	4c 89 ea             	mov    %r13,%rdx
   2f788:	4c 89 f6             	mov    %r14,%rsi
   2f78b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f78e: R_X86_64_32S	.rodata.str1.1+0x321c
   2f792:	45 30 ff             	xor    %r15b,%r15b
   2f795:	e8 00 00 00 00       	callq  2f79a <__MARSH_WRAP__e1000_down+0x7af4>
			2f796: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f79a:	49 8d 4c 24 58       	lea    0x58(%r12),%rcx
   2f79f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f7a5:	4c 89 ea             	mov    %r13,%rdx
   2f7a8:	4c 89 f6             	mov    %r14,%rsi
   2f7ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f7ae: R_X86_64_32S	.rodata.str1.1+0x321c
   2f7b2:	e8 00 00 00 00       	callq  2f7b7 <__MARSH_WRAP__e1000_down+0x7b11>
			2f7b3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f7b7:	49 8d 8c 24 ea 00 00 	lea    0xea(%r12),%rcx
   2f7be:	00 
   2f7bf:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f7c5:	4c 89 ea             	mov    %r13,%rdx
   2f7c8:	4c 89 f6             	mov    %r14,%rsi
   2f7cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f7ce: R_X86_64_32S	.rodata.str1.1+0x321c
   2f7d2:	e8 00 00 00 00       	callq  2f7d7 <__MARSH_WRAP__e1000_down+0x7b31>
			2f7d3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f7d7:	49 8d 4c 24 1c       	lea    0x1c(%r12),%rcx
   2f7dc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f7e2:	4c 89 ea             	mov    %r13,%rdx
   2f7e5:	4c 89 f6             	mov    %r14,%rsi
   2f7e8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f7eb: R_X86_64_32S	.rodata.str1.1+0x321c
   2f7ef:	e8 00 00 00 00       	callq  2f7f4 <__MARSH_WRAP__e1000_down+0x7b4e>
			2f7f0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f7f4:	49 8d 4c 24 64       	lea    0x64(%r12),%rcx
   2f7f9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f7ff:	4c 89 ea             	mov    %r13,%rdx
   2f802:	4c 89 f6             	mov    %r14,%rsi
   2f805:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f808: R_X86_64_32S	.rodata.str1.1+0x321c
   2f80c:	e8 00 00 00 00       	callq  2f811 <__MARSH_WRAP__e1000_down+0x7b6b>
			2f80d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f811:	49 8d 8c 24 00 01 00 	lea    0x100(%r12),%rcx
   2f818:	00 
   2f819:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f81f:	4c 89 ea             	mov    %r13,%rdx
   2f822:	4c 89 f6             	mov    %r14,%rsi
   2f825:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f828: R_X86_64_32S	.rodata.str1.1+0x321c
   2f82c:	e8 00 00 00 00       	callq  2f831 <__MARSH_WRAP__e1000_down+0x7b8b>
			2f82d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f831:	49 8d 8c 24 1d 01 00 	lea    0x11d(%r12),%rcx
   2f838:	00 
   2f839:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f83f:	4c 89 ea             	mov    %r13,%rdx
   2f842:	4c 89 f6             	mov    %r14,%rsi
   2f845:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f848: R_X86_64_32S	.rodata.str1.1+0x321c
   2f84c:	e8 00 00 00 00       	callq  2f851 <__MARSH_WRAP__e1000_down+0x7bab>
			2f84d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f851:	49 8d 8c 24 d4 00 00 	lea    0xd4(%r12),%rcx
   2f858:	00 
   2f859:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2f85f:	4c 89 ea             	mov    %r13,%rdx
   2f862:	4c 89 f6             	mov    %r14,%rsi
   2f865:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f868: R_X86_64_32S	.rodata.str1.1+0x321c
   2f86c:	e8 00 00 00 00       	callq  2f871 <__MARSH_WRAP__e1000_down+0x7bcb>
			2f86d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f871:	49 8d 4c 24 30       	lea    0x30(%r12),%rcx
   2f876:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f87c:	4c 89 ea             	mov    %r13,%rdx
   2f87f:	4c 89 f6             	mov    %r14,%rsi
   2f882:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f885: R_X86_64_32S	.rodata.str1.1+0x321c
   2f889:	e8 00 00 00 00       	callq  2f88e <__MARSH_WRAP__e1000_down+0x7be8>
			2f88a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f88e:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   2f892:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   2f896:	48 89 d9             	mov    %rbx,%rcx
   2f899:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f89f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f8a2: R_X86_64_32S	.rodata.str1.1+0x321c
   2f8a6:	49 ff c7             	inc    %r15
   2f8a9:	4c 89 ea             	mov    %r13,%rdx
   2f8ac:	4c 89 f6             	mov    %r14,%rsi
   2f8af:	48 ff c3             	inc    %rbx
   2f8b2:	e8 00 00 00 00       	callq  2f8b7 <__MARSH_WRAP__e1000_down+0x7c11>
			2f8b3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f8b7:	49 83 ff 06          	cmp    $0x6,%r15
   2f8bb:	75 d1                	jne    2f88e <__MARSH_WRAP__e1000_down+0x7be8>
   2f8bd:	49 8d 8c 24 1f 01 00 	lea    0x11f(%r12),%rcx
   2f8c4:	00 
   2f8c5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f8cb:	4c 89 ea             	mov    %r13,%rdx
   2f8ce:	4c 89 f6             	mov    %r14,%rsi
   2f8d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f8d4: R_X86_64_32S	.rodata.str1.1+0x321c
   2f8d8:	e8 00 00 00 00       	callq  2f8dd <__MARSH_WRAP__e1000_down+0x7c37>
			2f8d9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f8dd:	49 8d 8c 24 0d 01 00 	lea    0x10d(%r12),%rcx
   2f8e4:	00 
   2f8e5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f8eb:	4c 89 ea             	mov    %r13,%rdx
   2f8ee:	4c 89 f6             	mov    %r14,%rsi
   2f8f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f8f4: R_X86_64_32S	.rodata.str1.1+0x321c
   2f8f8:	e8 00 00 00 00       	callq  2f8fd <__MARSH_WRAP__e1000_down+0x7c57>
			2f8f9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f8fd:	49 8d 4c 24 68       	lea    0x68(%r12),%rcx
   2f902:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f908:	4c 89 ea             	mov    %r13,%rdx
   2f90b:	4c 89 f6             	mov    %r14,%rsi
   2f90e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f911: R_X86_64_32S	.rodata.str1.1+0x321c
   2f915:	e8 00 00 00 00       	callq  2f91a <__MARSH_WRAP__e1000_down+0x7c74>
			2f916: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f91a:	49 8d 8c 24 94 00 00 	lea    0x94(%r12),%rcx
   2f921:	00 
   2f922:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f928:	4c 89 ea             	mov    %r13,%rdx
   2f92b:	4c 89 f6             	mov    %r14,%rsi
   2f92e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f931: R_X86_64_32S	.rodata.str1.1+0x321c
   2f935:	e8 00 00 00 00       	callq  2f93a <__MARSH_WRAP__e1000_down+0x7c94>
			2f936: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f93a:	49 8d 8c 24 0c 01 00 	lea    0x10c(%r12),%rcx
   2f941:	00 
   2f942:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f948:	4c 89 ea             	mov    %r13,%rdx
   2f94b:	4c 89 f6             	mov    %r14,%rsi
   2f94e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f951: R_X86_64_32S	.rodata.str1.1+0x321c
   2f955:	e8 00 00 00 00       	callq  2f95a <__MARSH_WRAP__e1000_down+0x7cb4>
			2f956: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f95a:	49 8d 8c 24 0f 01 00 	lea    0x10f(%r12),%rcx
   2f961:	00 
   2f962:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f968:	4c 89 ea             	mov    %r13,%rdx
   2f96b:	4c 89 f6             	mov    %r14,%rsi
   2f96e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f971: R_X86_64_32S	.rodata.str1.1+0x321c
   2f975:	e8 00 00 00 00       	callq  2f97a <__MARSH_WRAP__e1000_down+0x7cd4>
			2f976: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f97a:	49 8d 8c 24 1c 01 00 	lea    0x11c(%r12),%rcx
   2f981:	00 
   2f982:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f988:	4c 89 ea             	mov    %r13,%rdx
   2f98b:	4c 89 f6             	mov    %r14,%rsi
   2f98e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f991: R_X86_64_32S	.rodata.str1.1+0x321c
   2f995:	e8 00 00 00 00       	callq  2f99a <__MARSH_WRAP__e1000_down+0x7cf4>
			2f996: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f99a:	49 8d 8c 24 8c 00 00 	lea    0x8c(%r12),%rcx
   2f9a1:	00 
   2f9a2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f9a8:	4c 89 ea             	mov    %r13,%rdx
   2f9ab:	4c 89 f6             	mov    %r14,%rsi
   2f9ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f9b1: R_X86_64_32S	.rodata.str1.1+0x321c
   2f9b5:	e8 00 00 00 00       	callq  2f9ba <__MARSH_WRAP__e1000_down+0x7d14>
			2f9b6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f9ba:	49 8d 8c 24 ac 00 00 	lea    0xac(%r12),%rcx
   2f9c1:	00 
   2f9c2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2f9c8:	4c 89 ea             	mov    %r13,%rdx
   2f9cb:	4c 89 f6             	mov    %r14,%rsi
   2f9ce:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f9d1: R_X86_64_32S	.rodata.str1.1+0x321c
   2f9d5:	e8 00 00 00 00       	callq  2f9da <__MARSH_WRAP__e1000_down+0x7d34>
			2f9d6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2f9da:	4c 89 e1             	mov    %r12,%rcx
   2f9dd:	4c 89 ea             	mov    %r13,%rdx
   2f9e0:	4c 89 f6             	mov    %r14,%rsi
   2f9e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2f9e6: R_X86_64_32S	.rodata.str1.1+0x321c
   2f9ea:	e8 00 00 00 00       	callq  2f9ef <__MARSH_WRAP__e1000_down+0x7d49>
			2f9eb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2f9ef:	49 8b 0c 24          	mov    (%r12),%rcx
   2f9f3:	48 85 c9             	test   %rcx,%rcx
   2f9f6:	74 18                	je     2fa10 <__MARSH_WRAP__e1000_down+0x7d6a>
   2f9f8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2f9fe:	4c 89 ea             	mov    %r13,%rdx
   2fa01:	4c 89 f6             	mov    %r14,%rsi
   2fa04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa07: R_X86_64_32S	.rodata.str1.1+0x321c
   2fa0b:	e8 00 00 00 00       	callq  2fa10 <__MARSH_WRAP__e1000_down+0x7d6a>
			2fa0c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fa10:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
   2fa15:	4c 89 ea             	mov    %r13,%rdx
   2fa18:	4c 89 f6             	mov    %r14,%rsi
   2fa1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa1e: R_X86_64_32S	.rodata.str1.1+0x321c
   2fa22:	e8 00 00 00 00       	callq  2fa27 <__MARSH_WRAP__e1000_down+0x7d81>
			2fa23: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2fa27:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   2fa2c:	48 85 c9             	test   %rcx,%rcx
   2fa2f:	74 39                	je     2fa6a <__MARSH_WRAP__e1000_down+0x7dc4>
   2fa31:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2fa37:	4c 89 ea             	mov    %r13,%rdx
   2fa3a:	4c 89 f6             	mov    %r14,%rsi
   2fa3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa40: R_X86_64_32S	.rodata.str1.1+0x321c
   2fa44:	e8 00 00 00 00       	callq  2fa49 <__MARSH_WRAP__e1000_down+0x7da3>
			2fa45: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fa49:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   2fa4e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2fa54:	4c 89 ea             	mov    %r13,%rdx
   2fa57:	4c 89 f6             	mov    %r14,%rsi
   2fa5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa5d: R_X86_64_32S	.rodata.str1.1+0x321c
   2fa61:	48 83 c1 02          	add    $0x2,%rcx
   2fa65:	e8 00 00 00 00       	callq  2fa6a <__MARSH_WRAP__e1000_down+0x7dc4>
			2fa66: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fa6a:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
   2fa6f:	4c 89 ea             	mov    %r13,%rdx
   2fa72:	4c 89 f6             	mov    %r14,%rsi
   2fa75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa78: R_X86_64_32S	.rodata.str1.1+0x321c
   2fa7c:	e8 00 00 00 00       	callq  2fa81 <__MARSH_WRAP__e1000_down+0x7ddb>
			2fa7d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2fa81:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   2fa86:	48 85 c9             	test   %rcx,%rcx
   2fa89:	74 18                	je     2faa3 <__MARSH_WRAP__e1000_down+0x7dfd>
   2fa8b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2fa91:	4c 89 ea             	mov    %r13,%rdx
   2fa94:	4c 89 f6             	mov    %r14,%rsi
   2fa97:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fa9a: R_X86_64_32S	.rodata.str1.1+0x321c
   2fa9e:	e8 00 00 00 00       	callq  2faa3 <__MARSH_WRAP__e1000_down+0x7dfd>
			2fa9f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2faa3:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2faa7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2faad:	4c 89 ea             	mov    %r13,%rdx
   2fab0:	4c 89 f6             	mov    %r14,%rsi
   2fab3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fab6: R_X86_64_32S	.rodata.str1.1+0x321c
   2faba:	48 81 c1 c0 07 00 00 	add    $0x7c0,%rcx
   2fac1:	e8 00 00 00 00       	callq  2fac6 <__MARSH_WRAP__e1000_down+0x7e20>
			2fac2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fac6:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2faca:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2fad0:	4c 89 ea             	mov    %r13,%rdx
   2fad3:	4c 89 f6             	mov    %r14,%rsi
   2fad6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fad9: R_X86_64_32S	.rodata.str1.1+0x321c
   2fadd:	48 81 c1 32 01 00 00 	add    $0x132,%rcx
   2fae4:	e8 00 00 00 00       	callq  2fae9 <__MARSH_WRAP__e1000_down+0x7e43>
			2fae5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fae9:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2faed:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2faf3:	4c 89 ea             	mov    %r13,%rdx
   2faf6:	4c 89 f6             	mov    %r14,%rsi
   2faf9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fafc: R_X86_64_32S	.rodata.str1.1+0x321c
   2fb00:	48 81 c1 d4 07 00 00 	add    $0x7d4,%rcx
   2fb07:	e8 00 00 00 00       	callq  2fb0c <__MARSH_WRAP__e1000_down+0x7e66>
			2fb08: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fb0c:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fb10:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fb16:	4c 89 ea             	mov    %r13,%rdx
   2fb19:	4c 89 f6             	mov    %r14,%rsi
   2fb1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fb1f: R_X86_64_32S	.rodata.str1.1+0x321c
   2fb23:	48 81 c1 d0 01 00 00 	add    $0x1d0,%rcx
   2fb2a:	e8 00 00 00 00       	callq  2fb2f <__MARSH_WRAP__e1000_down+0x7e89>
			2fb2b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fb2f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fb33:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fb39:	4c 89 ea             	mov    %r13,%rdx
   2fb3c:	4c 89 f6             	mov    %r14,%rsi
   2fb3f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fb42: R_X86_64_32S	.rodata.str1.1+0x321c
   2fb46:	48 81 c1 b8 02 00 00 	add    $0x2b8,%rcx
   2fb4d:	e8 00 00 00 00       	callq  2fb52 <__MARSH_WRAP__e1000_down+0x7eac>
			2fb4e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fb52:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fb56:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2fb5c:	4c 89 ea             	mov    %r13,%rdx
   2fb5f:	4c 89 f6             	mov    %r14,%rsi
   2fb62:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fb65: R_X86_64_32S	.rodata.str1.1+0x321c
   2fb69:	48 81 c1 00 02 00 00 	add    $0x200,%rcx
   2fb70:	e8 00 00 00 00       	callq  2fb75 <__MARSH_WRAP__e1000_down+0x7ecf>
			2fb71: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fb75:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fb79:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fb7f:	4c 89 ea             	mov    %r13,%rdx
   2fb82:	4c 89 f6             	mov    %r14,%rsi
   2fb85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fb88: R_X86_64_32S	.rodata.str1.1+0x321c
   2fb8c:	48 81 c1 d0 07 00 00 	add    $0x7d0,%rcx
   2fb93:	e8 00 00 00 00       	callq  2fb98 <__MARSH_WRAP__e1000_down+0x7ef2>
			2fb94: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fb98:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fb9c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fba2:	4c 89 ea             	mov    %r13,%rdx
   2fba5:	4c 89 f6             	mov    %r14,%rsi
   2fba8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fbab: R_X86_64_32S	.rodata.str1.1+0x321c
   2fbaf:	48 81 c1 d8 02 00 00 	add    $0x2d8,%rcx
   2fbb6:	e8 00 00 00 00       	callq  2fbbb <__MARSH_WRAP__e1000_down+0x7f15>
			2fbb7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fbbb:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fbbf:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fbc5:	4c 89 ea             	mov    %r13,%rdx
   2fbc8:	4c 89 f6             	mov    %r14,%rsi
   2fbcb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fbce: R_X86_64_32S	.rodata.str1.1+0x321c
   2fbd2:	48 81 c1 c0 01 00 00 	add    $0x1c0,%rcx
   2fbd9:	e8 00 00 00 00       	callq  2fbde <__MARSH_WRAP__e1000_down+0x7f38>
			2fbda: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fbde:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fbe2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fbe8:	4c 89 ea             	mov    %r13,%rdx
   2fbeb:	4c 89 f6             	mov    %r14,%rsi
   2fbee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fbf1: R_X86_64_32S	.rodata.str1.1+0x321c
   2fbf5:	48 81 c1 c0 02 00 00 	add    $0x2c0,%rcx
   2fbfc:	e8 00 00 00 00       	callq  2fc01 <__MARSH_WRAP__e1000_down+0x7f5b>
			2fbfd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fc01:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   2fc05:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fc0b:	4c 89 ea             	mov    %r13,%rdx
   2fc0e:	4c 89 f6             	mov    %r14,%rsi
   2fc11:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fc14: R_X86_64_32S	.rodata.str1.1+0x321c
   2fc18:	48 81 c3 00 03 00 00 	add    $0x300,%rbx
   2fc1f:	48 8d 4b 48          	lea    0x48(%rbx),%rcx
   2fc23:	e8 00 00 00 00       	callq  2fc28 <__MARSH_WRAP__e1000_down+0x7f82>
			2fc24: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fc28:	48 8d 4b 68          	lea    0x68(%rbx),%rcx
   2fc2c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fc32:	4c 89 ea             	mov    %r13,%rdx
   2fc35:	4c 89 f6             	mov    %r14,%rsi
   2fc38:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fc3b: R_X86_64_32S	.rodata.str1.1+0x321c
   2fc3f:	e8 00 00 00 00       	callq  2fc44 <__MARSH_WRAP__e1000_down+0x7f9e>
			2fc40: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fc44:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   2fc48:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fc4e:	4c 89 ea             	mov    %r13,%rdx
   2fc51:	4c 89 f6             	mov    %r14,%rsi
   2fc54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fc57: R_X86_64_32S	.rodata.str1.1+0x321c
   2fc5b:	e8 00 00 00 00       	callq  2fc60 <__MARSH_WRAP__e1000_down+0x7fba>
			2fc5c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fc60:	48 8d 8b 88 00 00 00 	lea    0x88(%rbx),%rcx
   2fc67:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fc6d:	4c 89 ea             	mov    %r13,%rdx
   2fc70:	4c 89 f6             	mov    %r14,%rsi
   2fc73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fc76: R_X86_64_32S	.rodata.str1.1+0x321c
   2fc7a:	e8 00 00 00 00       	callq  2fc7f <__MARSH_WRAP__e1000_down+0x7fd9>
			2fc7b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fc7f:	48 8d 4b 40          	lea    0x40(%rbx),%rcx
   2fc83:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fc89:	4c 89 ea             	mov    %r13,%rdx
   2fc8c:	4c 89 f6             	mov    %r14,%rsi
   2fc8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fc92: R_X86_64_32S	.rodata.str1.1+0x321c
   2fc96:	e8 00 00 00 00       	callq  2fc9b <__MARSH_WRAP__e1000_down+0x7ff5>
			2fc97: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fc9b:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   2fc9f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fca5:	4c 89 ea             	mov    %r13,%rdx
   2fca8:	4c 89 f6             	mov    %r14,%rsi
   2fcab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fcae: R_X86_64_32S	.rodata.str1.1+0x321c
   2fcb2:	e8 00 00 00 00       	callq  2fcb7 <__MARSH_WRAP__e1000_down+0x8011>
			2fcb3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fcb7:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fcbd:	48 89 d9             	mov    %rbx,%rcx
   2fcc0:	4c 89 ea             	mov    %r13,%rdx
   2fcc3:	4c 89 f6             	mov    %r14,%rsi
   2fcc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fcc9: R_X86_64_32S	.rodata.str1.1+0x321c
   2fccd:	e8 00 00 00 00       	callq  2fcd2 <__MARSH_WRAP__e1000_down+0x802c>
			2fcce: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fcd2:	48 8d 4b 78          	lea    0x78(%rbx),%rcx
   2fcd6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fcdc:	4c 89 ea             	mov    %r13,%rdx
   2fcdf:	4c 89 f6             	mov    %r14,%rsi
   2fce2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fce5: R_X86_64_32S	.rodata.str1.1+0x321c
   2fce9:	e8 00 00 00 00       	callq  2fcee <__MARSH_WRAP__e1000_down+0x8048>
			2fcea: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fcee:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   2fcf2:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fcf8:	4c 89 ea             	mov    %r13,%rdx
   2fcfb:	4c 89 f6             	mov    %r14,%rsi
   2fcfe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd01: R_X86_64_32S	.rodata.str1.1+0x321c
   2fd05:	e8 00 00 00 00       	callq  2fd0a <__MARSH_WRAP__e1000_down+0x8064>
			2fd06: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fd0a:	48 8d 4b 60          	lea    0x60(%rbx),%rcx
   2fd0e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fd14:	4c 89 ea             	mov    %r13,%rdx
   2fd17:	4c 89 f6             	mov    %r14,%rsi
   2fd1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd1d: R_X86_64_32S	.rodata.str1.1+0x321c
   2fd21:	e8 00 00 00 00       	callq  2fd26 <__MARSH_WRAP__e1000_down+0x8080>
			2fd22: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fd26:	48 8d 8b 80 00 00 00 	lea    0x80(%rbx),%rcx
   2fd2d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fd33:	4c 89 ea             	mov    %r13,%rdx
   2fd36:	4c 89 f6             	mov    %r14,%rsi
   2fd39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd3c: R_X86_64_32S	.rodata.str1.1+0x321c
   2fd40:	e8 00 00 00 00       	callq  2fd45 <__MARSH_WRAP__e1000_down+0x809f>
			2fd41: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fd45:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
   2fd49:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fd4f:	4c 89 ea             	mov    %r13,%rdx
   2fd52:	4c 89 f6             	mov    %r14,%rsi
   2fd55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd58: R_X86_64_32S	.rodata.str1.1+0x321c
   2fd5c:	e8 00 00 00 00       	callq  2fd61 <__MARSH_WRAP__e1000_down+0x80bb>
			2fd5d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fd61:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
   2fd65:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fd6b:	4c 89 ea             	mov    %r13,%rdx
   2fd6e:	4c 89 f6             	mov    %r14,%rsi
   2fd71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd74: R_X86_64_32S	.rodata.str1.1+0x321c
   2fd78:	e8 00 00 00 00       	callq  2fd7d <__MARSH_WRAP__e1000_down+0x80d7>
			2fd79: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fd7d:	48 8d 8b a0 00 00 00 	lea    0xa0(%rbx),%rcx
   2fd84:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fd8a:	4c 89 ea             	mov    %r13,%rdx
   2fd8d:	4c 89 f6             	mov    %r14,%rsi
   2fd90:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fd93: R_X86_64_32S	.rodata.str1.1+0x321c
   2fd97:	e8 00 00 00 00       	callq  2fd9c <__MARSH_WRAP__e1000_down+0x80f6>
			2fd98: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fd9c:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
   2fda0:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fda6:	4c 89 ea             	mov    %r13,%rdx
   2fda9:	4c 89 f6             	mov    %r14,%rsi
   2fdac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fdaf: R_X86_64_32S	.rodata.str1.1+0x321c
   2fdb3:	e8 00 00 00 00       	callq  2fdb8 <__MARSH_WRAP__e1000_down+0x8112>
			2fdb4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fdb8:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fdbc:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2fdc2:	4c 89 ea             	mov    %r13,%rdx
   2fdc5:	4c 89 f6             	mov    %r14,%rsi
   2fdc8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fdcb: R_X86_64_32S	.rodata.str1.1+0x321c
   2fdcf:	48 81 c1 30 01 00 00 	add    $0x130,%rcx
   2fdd6:	e8 00 00 00 00       	callq  2fddb <__MARSH_WRAP__e1000_down+0x8135>
			2fdd7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fddb:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fddf:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fde5:	4c 89 ea             	mov    %r13,%rdx
   2fde8:	4c 89 f6             	mov    %r14,%rsi
   2fdeb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fdee: R_X86_64_32S	.rodata.str1.1+0x321c
   2fdf2:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
   2fdf9:	e8 00 00 00 00       	callq  2fdfe <__MARSH_WRAP__e1000_down+0x8158>
			2fdfa: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fdfe:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fe02:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2fe08:	4c 89 ea             	mov    %r13,%rdx
   2fe0b:	4c 89 f6             	mov    %r14,%rsi
   2fe0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fe11: R_X86_64_32S	.rodata.str1.1+0x321c
   2fe15:	48 81 c1 b2 00 00 00 	add    $0xb2,%rcx
   2fe1c:	e8 00 00 00 00       	callq  2fe21 <__MARSH_WRAP__e1000_down+0x817b>
			2fe1d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fe21:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fe25:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2fe2b:	4c 89 ea             	mov    %r13,%rdx
   2fe2e:	4c 89 f6             	mov    %r14,%rsi
   2fe31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fe34: R_X86_64_32S	.rodata.str1.1+0x321c
   2fe38:	48 81 c1 c6 07 00 00 	add    $0x7c6,%rcx
   2fe3f:	e8 00 00 00 00       	callq  2fe44 <__MARSH_WRAP__e1000_down+0x819e>
			2fe40: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fe44:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   2fe48:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   2fe4e:	4c 89 ea             	mov    %r13,%rdx
   2fe51:	4c 89 f6             	mov    %r14,%rsi
   2fe54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fe57: R_X86_64_32S	.rodata.str1.1+0x321c
   2fe5b:	48 81 c1 08 02 00 00 	add    $0x208,%rcx
   2fe62:	e8 00 00 00 00       	callq  2fe67 <__MARSH_WRAP__e1000_down+0x81c1>
			2fe63: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fe67:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   2fe6b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fe71:	4c 89 ea             	mov    %r13,%rdx
   2fe74:	4c 89 f6             	mov    %r14,%rsi
   2fe77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fe7a: R_X86_64_32S	.rodata.str1.1+0x321c
   2fe7e:	49 81 c4 90 07 00 00 	add    $0x790,%r12
   2fe85:	49 8d 4c 24 14       	lea    0x14(%r12),%rcx
   2fe8a:	e8 00 00 00 00       	callq  2fe8f <__MARSH_WRAP__e1000_down+0x81e9>
			2fe8b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fe8f:	49 8d 4c 24 10       	lea    0x10(%r12),%rcx
   2fe94:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fe9a:	4c 89 ea             	mov    %r13,%rdx
   2fe9d:	4c 89 f6             	mov    %r14,%rsi
   2fea0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fea3: R_X86_64_32S	.rodata.str1.1+0x321c
   2fea7:	e8 00 00 00 00       	callq  2feac <__MARSH_WRAP__e1000_down+0x8206>
			2fea8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2feac:	49 8d 4c 24 2e       	lea    0x2e(%r12),%rcx
   2feb1:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2feb7:	4c 89 ea             	mov    %r13,%rdx
   2feba:	4c 89 f6             	mov    %r14,%rsi
   2febd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fec0: R_X86_64_32S	.rodata.str1.1+0x321c
   2fec4:	e8 00 00 00 00       	callq  2fec9 <__MARSH_WRAP__e1000_down+0x8223>
			2fec5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fec9:	49 8d 4c 24 1c       	lea    0x1c(%r12),%rcx
   2fece:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2fed4:	4c 89 ea             	mov    %r13,%rdx
   2fed7:	4c 89 f6             	mov    %r14,%rsi
   2feda:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fedd: R_X86_64_32S	.rodata.str1.1+0x321c
   2fee1:	e8 00 00 00 00       	callq  2fee6 <__MARSH_WRAP__e1000_down+0x8240>
			2fee2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2fee6:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
   2feeb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2fef1:	4c 89 ea             	mov    %r13,%rdx
   2fef4:	4c 89 f6             	mov    %r14,%rsi
   2fef7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fefa: R_X86_64_32S	.rodata.str1.1+0x321c
   2fefe:	e8 00 00 00 00       	callq  2ff03 <__MARSH_WRAP__e1000_down+0x825d>
			2feff: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ff03:	49 8d 4c 24 2c       	lea    0x2c(%r12),%rcx
   2ff08:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ff0e:	4c 89 ea             	mov    %r13,%rdx
   2ff11:	4c 89 f6             	mov    %r14,%rsi
   2ff14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ff17: R_X86_64_32S	.rodata.str1.1+0x321c
   2ff1b:	e8 00 00 00 00       	callq  2ff20 <__MARSH_WRAP__e1000_down+0x827a>
			2ff1c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ff20:	49 8d 4c 24 18       	lea    0x18(%r12),%rcx
   2ff25:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   2ff2b:	4c 89 ea             	mov    %r13,%rdx
   2ff2e:	4c 89 f6             	mov    %r14,%rsi
   2ff31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ff34: R_X86_64_32S	.rodata.str1.1+0x321c
   2ff38:	e8 00 00 00 00       	callq  2ff3d <__MARSH_WRAP__e1000_down+0x8297>
			2ff39: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ff3d:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   2ff42:	4c 89 ea             	mov    %r13,%rdx
   2ff45:	4c 89 f6             	mov    %r14,%rsi
   2ff48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ff4b: R_X86_64_32S	.rodata.str1.1+0x321c
   2ff4f:	e8 00 00 00 00       	callq  2ff54 <__MARSH_WRAP__e1000_down+0x82ae>
			2ff50: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2ff54:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2ff59:	48 85 c0             	test   %rax,%rax
   2ff5c:	0f 84 3d 03 00 00    	je     3029f <__MARSH_WRAP__e1000_down+0x85f9>
   2ff62:	48 8d 48 18          	lea    0x18(%rax),%rcx
   2ff66:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ff6c:	4c 89 ea             	mov    %r13,%rdx
   2ff6f:	4c 89 f6             	mov    %r14,%rsi
   2ff72:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ff75: R_X86_64_32S	.rodata.str1.1+0x321c
   2ff79:	e8 00 00 00 00       	callq  2ff7e <__MARSH_WRAP__e1000_down+0x82d8>
			2ff7a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ff7e:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ff83:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ff89:	4c 89 ea             	mov    %r13,%rdx
   2ff8c:	4c 89 f6             	mov    %r14,%rsi
   2ff8f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ff92: R_X86_64_32S	.rodata.str1.1+0x321c
   2ff96:	48 83 c1 10          	add    $0x10,%rcx
   2ff9a:	e8 00 00 00 00       	callq  2ff9f <__MARSH_WRAP__e1000_down+0x82f9>
			2ff9b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ff9f:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ffa4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   2ffaa:	4c 89 ea             	mov    %r13,%rdx
   2ffad:	4c 89 f6             	mov    %r14,%rsi
   2ffb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ffb3: R_X86_64_32S	.rodata.str1.1+0x321c
   2ffb7:	48 83 c1 1a          	add    $0x1a,%rcx
   2ffbb:	e8 00 00 00 00       	callq  2ffc0 <__MARSH_WRAP__e1000_down+0x831a>
			2ffbc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ffc0:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ffc5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   2ffcb:	4c 89 ea             	mov    %r13,%rdx
   2ffce:	4c 89 f6             	mov    %r14,%rsi
   2ffd1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ffd4: R_X86_64_32S	.rodata.str1.1+0x321c
   2ffd8:	48 83 c1 08          	add    $0x8,%rcx
   2ffdc:	e8 00 00 00 00       	callq  2ffe1 <__MARSH_WRAP__e1000_down+0x833b>
			2ffdd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   2ffe1:	49 8b 4c 24 20       	mov    0x20(%r12),%rcx
   2ffe6:	4c 89 ea             	mov    %r13,%rdx
   2ffe9:	4c 89 f6             	mov    %r14,%rsi
   2ffec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ffef: R_X86_64_32S	.rodata.str1.1+0x321c
   2fff3:	e8 00 00 00 00       	callq  2fff8 <__MARSH_WRAP__e1000_down+0x8352>
			2fff4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   2fff8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   2fffd:	48 8b 00             	mov    (%rax),%rax
   30000:	48 85 c0             	test   %rax,%rax
   30003:	0f 84 96 02 00 00    	je     3029f <__MARSH_WRAP__e1000_down+0x85f9>
   30009:	8a 40 7d             	mov    0x7d(%rax),%al
   3000c:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   30010:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30016:	4c 89 ea             	mov    %r13,%rdx
   30019:	4c 89 f6             	mov    %r14,%rsi
   3001c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3001f: R_X86_64_32S	.rodata.str1.1+0x321c
   30023:	48 89 d9             	mov    %rbx,%rcx
   30026:	83 e0 07             	and    $0x7,%eax
   30029:	0f b6 c0             	movzbl %al,%eax
   3002c:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   3002f:	e8 00 00 00 00       	callq  30034 <__MARSH_WRAP__e1000_down+0x838e>
			30030: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30034:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30039:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3003f:	4c 89 ea             	mov    %r13,%rdx
   30042:	4c 89 f6             	mov    %r14,%rsi
   30045:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30048: R_X86_64_32S	.rodata.str1.1+0x321c
   3004c:	48 8b 08             	mov    (%rax),%rcx
   3004f:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   30056:	e8 00 00 00 00       	callq  3005b <__MARSH_WRAP__e1000_down+0x83b5>
			30057: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3005b:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30060:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30066:	4c 89 ea             	mov    %r13,%rdx
   30069:	4c 89 f6             	mov    %r14,%rsi
   3006c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3006f: R_X86_64_32S	.rodata.str1.1+0x321c
   30073:	48 8b 08             	mov    (%rax),%rcx
   30076:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   3007d:	e8 00 00 00 00       	callq  30082 <__MARSH_WRAP__e1000_down+0x83dc>
			3007e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30082:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30087:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3008d:	48 89 d9             	mov    %rbx,%rcx
   30090:	4c 89 ea             	mov    %r13,%rdx
   30093:	4c 89 f6             	mov    %r14,%rsi
   30096:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30099: R_X86_64_32S	.rodata.str1.1+0x321c
   3009d:	48 8b 00             	mov    (%rax),%rax
   300a0:	8a 40 7c             	mov    0x7c(%rax),%al
   300a3:	c0 e8 02             	shr    $0x2,%al
   300a6:	83 e0 03             	and    $0x3,%eax
   300a9:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   300ac:	e8 00 00 00 00       	callq  300b1 <__MARSH_WRAP__e1000_down+0x840b>
			300ad: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   300b1:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   300b6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   300bc:	4c 89 ea             	mov    %r13,%rdx
   300bf:	4c 89 f6             	mov    %r14,%rsi
   300c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			300c5: R_X86_64_32S	.rodata.str1.1+0x321c
   300c9:	48 8b 08             	mov    (%rax),%rcx
   300cc:	48 83 c1 6c          	add    $0x6c,%rcx
   300d0:	e8 00 00 00 00       	callq  300d5 <__MARSH_WRAP__e1000_down+0x842f>
			300d1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   300d5:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   300da:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   300e0:	4c 89 ea             	mov    %r13,%rdx
   300e3:	4c 89 f6             	mov    %r14,%rsi
   300e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			300e9: R_X86_64_32S	.rodata.str1.1+0x321c
   300ed:	48 8b 08             	mov    (%rax),%rcx
   300f0:	48 83 c1 74          	add    $0x74,%rcx
   300f4:	e8 00 00 00 00       	callq  300f9 <__MARSH_WRAP__e1000_down+0x8453>
			300f5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   300f9:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   300fe:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30104:	4c 89 ea             	mov    %r13,%rdx
   30107:	4c 89 f6             	mov    %r14,%rsi
   3010a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3010d: R_X86_64_32S	.rodata.str1.1+0x321c
   30111:	48 8b 08             	mov    (%rax),%rcx
   30114:	48 83 c1 68          	add    $0x68,%rcx
   30118:	e8 00 00 00 00       	callq  3011d <__MARSH_WRAP__e1000_down+0x8477>
			30119: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3011d:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30122:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30128:	4c 89 ea             	mov    %r13,%rdx
   3012b:	4c 89 f6             	mov    %r14,%rsi
   3012e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30131: R_X86_64_32S	.rodata.str1.1+0x321c
   30135:	48 8b 08             	mov    (%rax),%rcx
   30138:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   3013f:	e8 00 00 00 00       	callq  30144 <__MARSH_WRAP__e1000_down+0x849e>
			30140: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30144:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30149:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3014f:	4c 89 ea             	mov    %r13,%rdx
   30152:	4c 89 f6             	mov    %r14,%rsi
   30155:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30158: R_X86_64_32S	.rodata.str1.1+0x321c
   3015c:	48 8b 08             	mov    (%rax),%rcx
   3015f:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   30166:	e8 00 00 00 00       	callq  3016b <__MARSH_WRAP__e1000_down+0x84c5>
			30167: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3016b:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30170:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   30176:	4c 89 ea             	mov    %r13,%rdx
   30179:	4c 89 f6             	mov    %r14,%rsi
   3017c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3017f: R_X86_64_32S	.rodata.str1.1+0x321c
   30183:	48 8b 08             	mov    (%rax),%rcx
   30186:	48 83 c1 7e          	add    $0x7e,%rcx
   3018a:	e8 00 00 00 00       	callq  3018f <__MARSH_WRAP__e1000_down+0x84e9>
			3018b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3018f:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30194:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3019a:	4c 89 ea             	mov    %r13,%rdx
   3019d:	4c 89 f6             	mov    %r14,%rsi
   301a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			301a3: R_X86_64_32S	.rodata.str1.1+0x321c
   301a7:	48 8b 08             	mov    (%rax),%rcx
   301aa:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   301b1:	e8 00 00 00 00       	callq  301b6 <__MARSH_WRAP__e1000_down+0x8510>
			301b2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   301b6:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   301bb:	4c 89 ea             	mov    %r13,%rdx
   301be:	4c 89 f6             	mov    %r14,%rsi
   301c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			301c4: R_X86_64_32S	.rodata.str1.1+0x321c
   301c8:	48 8b 08             	mov    (%rax),%rcx
   301cb:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   301d2:	e8 00 00 00 00       	callq  301d7 <__MARSH_WRAP__e1000_down+0x8531>
			301d3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   301d7:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   301dc:	48 8b 00             	mov    (%rax),%rax
   301df:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   301e6:	00 
   301e7:	74 61                	je     3024a <__MARSH_WRAP__e1000_down+0x85a4>
   301e9:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   301ef:	31 db                	xor    %ebx,%ebx
   301f1:	e8 00 00 00 00       	callq  301f6 <__MARSH_WRAP__e1000_down+0x8550>
			301f2: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   301f6:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   301fa:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30200:	4c 89 ea             	mov    %r13,%rdx
   30203:	4c 89 f6             	mov    %r14,%rsi
   30206:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30209: R_X86_64_32S	.rodata.str1.1+0x321c
   3020d:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   30210:	e8 00 00 00 00       	callq  30215 <__MARSH_WRAP__e1000_down+0x856f>
			30211: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30215:	eb 2e                	jmp    30245 <__MARSH_WRAP__e1000_down+0x859f>
   30217:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   3021c:	48 63 cb             	movslq %ebx,%rcx
   3021f:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   30223:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   30227:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3022d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30230: R_X86_64_32S	.rodata.str1.1+0x321c
   30234:	ff c3                	inc    %ebx
   30236:	48 8b 00             	mov    (%rax),%rax
   30239:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   30240:	e8 00 00 00 00       	callq  30245 <__MARSH_WRAP__e1000_down+0x859f>
			30241: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30245:	3b 5d c8             	cmp    0xffffffffffffffc8(%rbp),%ebx
   30248:	7c cd                	jl     30217 <__MARSH_WRAP__e1000_down+0x8571>
   3024a:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   3024f:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   30253:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   30257:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3025a: R_X86_64_32S	.rodata.str1.1+0x321c
   3025e:	48 89 da             	mov    %rbx,%rdx
   30261:	4c 89 ee             	mov    %r13,%rsi
   30264:	48 8b 08             	mov    (%rax),%rcx
   30267:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   3026e:	e8 00 00 00 00       	callq  30273 <__MARSH_WRAP__e1000_down+0x85cd>
			3026f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30273:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   30278:	48 8b 00             	mov    (%rax),%rax
   3027b:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   30282:	48 85 c9             	test   %rcx,%rcx
   30285:	74 18                	je     3029f <__MARSH_WRAP__e1000_down+0x85f9>
   30287:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3028d:	48 89 da             	mov    %rbx,%rdx
   30290:	4c 89 ee             	mov    %r13,%rsi
   30293:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30296: R_X86_64_32S	.rodata.str1.1+0x321c
   3029a:	e8 00 00 00 00       	callq  3029f <__MARSH_WRAP__e1000_down+0x85f9>
			3029b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3029f:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   302a3:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   302a7:	4c 89 e1             	mov    %r12,%rcx
   302aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			302ad: R_X86_64_32S	.rodata.str1.1+0x321c
   302b1:	4c 89 ea             	mov    %r13,%rdx
   302b4:	4c 89 f6             	mov    %r14,%rsi
   302b7:	e8 00 00 00 00       	callq  302bc <__MARSH_WRAP__e1000_down+0x8616>
			302b8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   302bc:	49 8b 04 24          	mov    (%r12),%rax
   302c0:	48 85 c0             	test   %rax,%rax
   302c3:	0f 84 98 00 00 00    	je     30361 <__MARSH_WRAP__e1000_down+0x86bb>
   302c9:	48 8d 48 0e          	lea    0xe(%rax),%rcx
   302cd:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   302d3:	4c 89 ea             	mov    %r13,%rdx
   302d6:	4c 89 f6             	mov    %r14,%rsi
   302d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			302dc: R_X86_64_32S	.rodata.str1.1+0x321c
   302e0:	e8 00 00 00 00       	callq  302e5 <__MARSH_WRAP__e1000_down+0x863f>
			302e1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   302e5:	49 8b 0c 24          	mov    (%r12),%rcx
   302e9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   302ef:	4c 89 ea             	mov    %r13,%rdx
   302f2:	4c 89 f6             	mov    %r14,%rsi
   302f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			302f8: R_X86_64_32S	.rodata.str1.1+0x321c
   302fc:	48 83 c1 0d          	add    $0xd,%rcx
   30300:	e8 00 00 00 00       	callq  30305 <__MARSH_WRAP__e1000_down+0x865f>
			30301: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30305:	49 8b 0c 24          	mov    (%r12),%rcx
   30309:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3030f:	4c 89 ea             	mov    %r13,%rdx
   30312:	4c 89 f6             	mov    %r14,%rsi
   30315:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30318: R_X86_64_32S	.rodata.str1.1+0x321c
   3031c:	48 83 c1 0a          	add    $0xa,%rcx
   30320:	e8 00 00 00 00       	callq  30325 <__MARSH_WRAP__e1000_down+0x867f>
			30321: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30325:	49 8b 0c 24          	mov    (%r12),%rcx
   30329:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   3032f:	4c 89 ea             	mov    %r13,%rdx
   30332:	4c 89 f6             	mov    %r14,%rsi
   30335:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30338: R_X86_64_32S	.rodata.str1.1+0x321c
   3033c:	e8 00 00 00 00       	callq  30341 <__MARSH_WRAP__e1000_down+0x869b>
			3033d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30341:	49 8b 0c 24          	mov    (%r12),%rcx
   30345:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3034b:	4c 89 ea             	mov    %r13,%rdx
   3034e:	4c 89 f6             	mov    %r14,%rsi
   30351:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30354: R_X86_64_32S	.rodata.str1.1+0x321c
   30358:	48 83 c1 0c          	add    $0xc,%rcx
   3035c:	e8 00 00 00 00       	callq  30361 <__MARSH_WRAP__e1000_down+0x86bb>
			3035d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30361:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   30365:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3036b:	4c 89 ea             	mov    %r13,%rdx
   3036e:	4c 89 f6             	mov    %r14,%rsi
   30371:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30374: R_X86_64_32S	.rodata.str1.1+0x321c
   30378:	48 81 c3 00 07 00 00 	add    $0x700,%rbx
   3037f:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   30383:	e8 00 00 00 00       	callq  30388 <__MARSH_WRAP__e1000_down+0x86e2>
			30384: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30388:	48 89 d9             	mov    %rbx,%rcx
   3038b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30391:	4c 89 ea             	mov    %r13,%rdx
   30394:	4c 89 f6             	mov    %r14,%rsi
   30397:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3039a: R_X86_64_32S	.rodata.str1.1+0x321c
   3039e:	e8 00 00 00 00       	callq  303a3 <__MARSH_WRAP__e1000_down+0x86fd>
			3039f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   303a3:	48 8d 4b 1c          	lea    0x1c(%rbx),%rcx
   303a7:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   303ad:	4c 89 ea             	mov    %r13,%rdx
   303b0:	4c 89 f6             	mov    %r14,%rsi
   303b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			303b6: R_X86_64_32S	.rodata.str1.1+0x321c
   303ba:	e8 00 00 00 00       	callq  303bf <__MARSH_WRAP__e1000_down+0x8719>
			303bb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   303bf:	48 8d 4b 14          	lea    0x14(%rbx),%rcx
   303c3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   303c9:	4c 89 ea             	mov    %r13,%rdx
   303cc:	4c 89 f6             	mov    %r14,%rsi
   303cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			303d2: R_X86_64_32S	.rodata.str1.1+0x321c
   303d6:	e8 00 00 00 00       	callq  303db <__MARSH_WRAP__e1000_down+0x8735>
			303d7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   303db:	48 8d 4b 04          	lea    0x4(%rbx),%rcx
   303df:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   303e5:	4c 89 ea             	mov    %r13,%rdx
   303e8:	4c 89 f6             	mov    %r14,%rsi
   303eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			303ee: R_X86_64_32S	.rodata.str1.1+0x321c
   303f2:	e8 00 00 00 00       	callq  303f7 <__MARSH_WRAP__e1000_down+0x8751>
			303f3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   303f7:	48 8d 4b 0c          	lea    0xc(%rbx),%rcx
   303fb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30401:	4c 89 ea             	mov    %r13,%rdx
   30404:	4c 89 f6             	mov    %r14,%rsi
   30407:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3040a: R_X86_64_32S	.rodata.str1.1+0x321c
   3040e:	e8 00 00 00 00       	callq  30413 <__MARSH_WRAP__e1000_down+0x876d>
			3040f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30413:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   30417:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3041d:	4c 89 ea             	mov    %r13,%rdx
   30420:	4c 89 f6             	mov    %r14,%rsi
   30423:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30426: R_X86_64_32S	.rodata.str1.1+0x321c
   3042a:	e8 00 00 00 00       	callq  3042f <__MARSH_WRAP__e1000_down+0x8789>
			3042b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3042f:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
   30433:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30439:	4c 89 ea             	mov    %r13,%rdx
   3043c:	4c 89 f6             	mov    %r14,%rsi
   3043f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30442: R_X86_64_32S	.rodata.str1.1+0x321c
   30446:	e8 00 00 00 00       	callq  3044b <__MARSH_WRAP__e1000_down+0x87a5>
			30447: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3044b:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3044f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30455:	4c 89 ea             	mov    %r13,%rdx
   30458:	4c 89 f6             	mov    %r14,%rsi
   3045b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3045e: R_X86_64_32S	.rodata.str1.1+0x321c
   30462:	48 81 c1 d0 02 00 00 	add    $0x2d0,%rcx
   30469:	e8 00 00 00 00       	callq  3046e <__MARSH_WRAP__e1000_down+0x87c8>
			3046a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3046e:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   30472:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30478:	4c 89 ea             	mov    %r13,%rdx
   3047b:	4c 89 f6             	mov    %r14,%rsi
   3047e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30481: R_X86_64_32S	.rodata.str1.1+0x321c
   30485:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   3048c:	e8 00 00 00 00       	callq  30491 <__MARSH_WRAP__e1000_down+0x87eb>
			3048d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30491:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   30495:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3049b:	4c 89 ea             	mov    %r13,%rdx
   3049e:	4c 89 f6             	mov    %r14,%rsi
   304a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			304a4: R_X86_64_32S	.rodata.str1.1+0x321c
   304a8:	48 81 c1 09 02 00 00 	add    $0x209,%rcx
   304af:	e8 00 00 00 00       	callq  304b4 <__MARSH_WRAP__e1000_down+0x880e>
			304b0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   304b4:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   304b8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   304be:	4c 89 ea             	mov    %r13,%rdx
   304c1:	4c 89 f6             	mov    %r14,%rsi
   304c4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			304c7: R_X86_64_32S	.rodata.str1.1+0x321c
   304cb:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   304cf:	e8 00 00 00 00       	callq  304d4 <__MARSH_WRAP__e1000_down+0x882e>
			304d0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   304d4:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
   304d8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   304de:	4c 89 ea             	mov    %r13,%rdx
   304e1:	4c 89 f6             	mov    %r14,%rsi
   304e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			304e7: R_X86_64_32S	.rodata.str1.1+0x321c
   304eb:	e8 00 00 00 00       	callq  304f0 <__MARSH_WRAP__e1000_down+0x884a>
			304ec: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   304f0:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   304f4:	4c 89 ea             	mov    %r13,%rdx
   304f7:	4c 89 f6             	mov    %r14,%rsi
   304fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			304fd: R_X86_64_32S	.rodata.str1.1+0x321c
   30501:	e8 00 00 00 00       	callq  30506 <__MARSH_WRAP__e1000_down+0x8860>
			30502: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30506:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3050a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30510:	4c 89 ea             	mov    %r13,%rdx
   30513:	4c 89 f6             	mov    %r14,%rsi
   30516:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30519: R_X86_64_32S	.rodata.str1.1+0x321c
   3051d:	48 81 c1 f8 01 00 00 	add    $0x1f8,%rcx
   30524:	e8 00 00 00 00       	callq  30529 <__MARSH_WRAP__e1000_down+0x8883>
			30525: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30529:	48 8b 5d b8          	mov    0xffffffffffffffb8(%rbp),%rbx
   3052d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30533:	4c 89 ea             	mov    %r13,%rdx
   30536:	4c 89 f6             	mov    %r14,%rsi
   30539:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3053c: R_X86_64_32S	.rodata.str1.1+0x321c
   30540:	48 83 c3 30          	add    $0x30,%rbx
   30544:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   30548:	e8 00 00 00 00       	callq  3054d <__MARSH_WRAP__e1000_down+0x88a7>
			30549: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3054d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
   30551:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30557:	4c 89 ea             	mov    %r13,%rdx
   3055a:	4c 89 f6             	mov    %r14,%rsi
   3055d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30560: R_X86_64_32S	.rodata.str1.1+0x321c
   30564:	e8 00 00 00 00       	callq  30569 <__MARSH_WRAP__e1000_down+0x88c3>
			30565: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30569:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   3056d:	4c 89 ea             	mov    %r13,%rdx
   30570:	4c 89 f6             	mov    %r14,%rsi
   30573:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30576: R_X86_64_32S	.rodata.str1.1+0x321c
   3057a:	e8 00 00 00 00       	callq  3057f <__MARSH_WRAP__e1000_down+0x88d9>
			3057b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3057f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   30583:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30589:	4c 89 ea             	mov    %r13,%rdx
   3058c:	4c 89 f6             	mov    %r14,%rsi
   3058f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30592: R_X86_64_32S	.rodata.str1.1+0x321c
   30596:	48 81 c1 e0 02 00 00 	add    $0x2e0,%rcx
   3059d:	e8 00 00 00 00       	callq  305a2 <__MARSH_WRAP__e1000_down+0x88fc>
			3059e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   305a2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   305a6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   305ac:	4c 89 ea             	mov    %r13,%rdx
   305af:	4c 89 f6             	mov    %r14,%rsi
   305b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			305b5: R_X86_64_32S	.rodata.str1.1+0x321c
   305b9:	48 81 c1 fc 01 00 00 	add    $0x1fc,%rcx
   305c0:	e8 00 00 00 00       	callq  305c5 <__MARSH_WRAP__e1000_down+0x891f>
			305c1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   305c5:	4c 8b 65 b8          	mov    0xffffffffffffffb8(%rbp),%r12
   305c9:	4c 89 ea             	mov    %r13,%rdx
   305cc:	4c 89 f6             	mov    %r14,%rsi
   305cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			305d2: R_X86_64_32S	.rodata.str1.1+0x321c
   305d6:	49 81 c4 f0 02 00 00 	add    $0x2f0,%r12
   305dd:	4c 89 e1             	mov    %r12,%rcx
   305e0:	e8 00 00 00 00       	callq  305e5 <__MARSH_WRAP__e1000_down+0x893f>
			305e1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   305e5:	49 8b 04 24          	mov    (%r12),%rax
   305e9:	48 85 c0             	test   %rax,%rax
   305ec:	0f 84 08 07 00 00    	je     30cfa <__MARSH_WRAP__e1000_down+0x9054>
   305f2:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   305f9:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   305ff:	4c 89 ea             	mov    %r13,%rdx
   30602:	4c 89 f6             	mov    %r14,%rsi
   30605:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30608: R_X86_64_32S	.rodata.str1.1+0x321c
   3060c:	31 db                	xor    %ebx,%ebx
   3060e:	e8 00 00 00 00       	callq  30613 <__MARSH_WRAP__e1000_down+0x896d>
			3060f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30613:	49 8b 0c 24          	mov    (%r12),%rcx
   30617:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3061d:	4c 89 ea             	mov    %r13,%rdx
   30620:	4c 89 f6             	mov    %r14,%rsi
   30623:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30626: R_X86_64_32S	.rodata.str1.1+0x321c
   3062a:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   30631:	e8 00 00 00 00       	callq  30636 <__MARSH_WRAP__e1000_down+0x8990>
			30632: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30636:	49 8b 0c 24          	mov    (%r12),%rcx
   3063a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30640:	4c 89 ea             	mov    %r13,%rdx
   30643:	4c 89 f6             	mov    %r14,%rsi
   30646:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30649: R_X86_64_32S	.rodata.str1.1+0x321c
   3064d:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   30654:	e8 00 00 00 00       	callq  30659 <__MARSH_WRAP__e1000_down+0x89b3>
			30655: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30659:	49 8b 0c 24          	mov    (%r12),%rcx
   3065d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30663:	4c 89 ea             	mov    %r13,%rdx
   30666:	4c 89 f6             	mov    %r14,%rsi
   30669:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3066c: R_X86_64_32S	.rodata.str1.1+0x321c
   30670:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   30677:	e8 00 00 00 00       	callq  3067c <__MARSH_WRAP__e1000_down+0x89d6>
			30678: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3067c:	49 8b 0c 24          	mov    (%r12),%rcx
   30680:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30686:	4c 89 ea             	mov    %r13,%rdx
   30689:	4c 89 f6             	mov    %r14,%rsi
   3068c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3068f: R_X86_64_32S	.rodata.str1.1+0x321c
   30693:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   3069a:	e8 00 00 00 00       	callq  3069f <__MARSH_WRAP__e1000_down+0x89f9>
			3069b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3069f:	49 8b 0c 24          	mov    (%r12),%rcx
   306a3:	4c 89 ea             	mov    %r13,%rdx
   306a6:	4c 89 f6             	mov    %r14,%rsi
   306a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			306ac: R_X86_64_32S	.rodata.str1.1+0x321c
   306b0:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   306b7:	e8 00 00 00 00       	callq  306bc <__MARSH_WRAP__e1000_down+0x8a16>
			306b8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   306bc:	49 8b 0c 24          	mov    (%r12),%rcx
   306c0:	4c 89 ea             	mov    %r13,%rdx
   306c3:	4c 89 f6             	mov    %r14,%rsi
   306c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			306c9: R_X86_64_32S	.rodata.str1.1+0x321c
   306cd:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   306d4:	e8 00 00 00 00       	callq  306d9 <__MARSH_WRAP__e1000_down+0x8a33>
			306d5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   306d9:	49 8b 0c 24          	mov    (%r12),%rcx
   306dd:	4c 89 ea             	mov    %r13,%rdx
   306e0:	4c 89 f6             	mov    %r14,%rsi
   306e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			306e6: R_X86_64_32S	.rodata.str1.1+0x321c
   306ea:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   306f1:	e8 00 00 00 00       	callq  306f6 <__MARSH_WRAP__e1000_down+0x8a50>
			306f2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   306f6:	49 8b 0c 24          	mov    (%r12),%rcx
   306fa:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   306fe:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   30702:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30708:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3070b: R_X86_64_32S	.rodata.str1.1+0x321c
   3070f:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   30716:	48 01 d9             	add    %rbx,%rcx
   30719:	48 ff c3             	inc    %rbx
   3071c:	e8 00 00 00 00       	callq  30721 <__MARSH_WRAP__e1000_down+0x8a7b>
			3071d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30721:	48 83 fb 20          	cmp    $0x20,%rbx
   30725:	75 cf                	jne    306f6 <__MARSH_WRAP__e1000_down+0x8a50>
   30727:	30 db                	xor    %bl,%bl
   30729:	49 8b 0c 24          	mov    (%r12),%rcx
   3072d:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   30731:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   30735:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3073b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3073e: R_X86_64_32S	.rodata.str1.1+0x321c
   30742:	4c 89 ea             	mov    %r13,%rdx
   30745:	4c 89 f6             	mov    %r14,%rsi
   30748:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   3074f:	48 01 d9             	add    %rbx,%rcx
   30752:	48 ff c3             	inc    %rbx
   30755:	e8 00 00 00 00       	callq  3075a <__MARSH_WRAP__e1000_down+0x8ab4>
			30756: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3075a:	48 83 fb 20          	cmp    $0x20,%rbx
   3075e:	75 c9                	jne    30729 <__MARSH_WRAP__e1000_down+0x8a83>
   30760:	49 8b 0c 24          	mov    (%r12),%rcx
   30764:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3076a:	4c 89 ea             	mov    %r13,%rdx
   3076d:	4c 89 f6             	mov    %r14,%rsi
   30770:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30773: R_X86_64_32S	.rodata.str1.1+0x321c
   30777:	30 db                	xor    %bl,%bl
   30779:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   30780:	e8 00 00 00 00       	callq  30785 <__MARSH_WRAP__e1000_down+0x8adf>
			30781: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30785:	49 8b 0c 24          	mov    (%r12),%rcx
   30789:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   3078f:	4c 89 ea             	mov    %r13,%rdx
   30792:	4c 89 f6             	mov    %r14,%rsi
   30795:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30798: R_X86_64_32S	.rodata.str1.1+0x321c
   3079c:	48 83 c1 48          	add    $0x48,%rcx
   307a0:	e8 00 00 00 00       	callq  307a5 <__MARSH_WRAP__e1000_down+0x8aff>
			307a1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   307a5:	49 8b 0c 24          	mov    (%r12),%rcx
   307a9:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   307ad:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   307b1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   307b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			307ba: R_X86_64_32S	.rodata.str1.1+0x321c
   307be:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   307c5:	48 01 d9             	add    %rbx,%rcx
   307c8:	48 ff c3             	inc    %rbx
   307cb:	e8 00 00 00 00       	callq  307d0 <__MARSH_WRAP__e1000_down+0x8b2a>
			307cc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   307d0:	48 83 fb 20          	cmp    $0x20,%rbx
   307d4:	75 cf                	jne    307a5 <__MARSH_WRAP__e1000_down+0x8aff>
   307d6:	30 db                	xor    %bl,%bl
   307d8:	48 89 d9             	mov    %rbx,%rcx
   307db:	49 03 0c 24          	add    (%r12),%rcx
   307df:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   307e3:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   307e7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   307ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			307f0: R_X86_64_32S	.rodata.str1.1+0x321c
   307f4:	4c 89 ea             	mov    %r13,%rdx
   307f7:	48 ff c3             	inc    %rbx
   307fa:	4c 89 f6             	mov    %r14,%rsi
   307fd:	e8 00 00 00 00       	callq  30802 <__MARSH_WRAP__e1000_down+0x8b5c>
			307fe: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30802:	48 83 fb 10          	cmp    $0x10,%rbx
   30806:	75 d0                	jne    307d8 <__MARSH_WRAP__e1000_down+0x8b32>
   30808:	49 8b 0c 24          	mov    (%r12),%rcx
   3080c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30812:	4c 89 ea             	mov    %r13,%rdx
   30815:	4c 89 f6             	mov    %r14,%rsi
   30818:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3081b: R_X86_64_32S	.rodata.str1.1+0x321c
   3081f:	30 db                	xor    %bl,%bl
   30821:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   30828:	e8 00 00 00 00       	callq  3082d <__MARSH_WRAP__e1000_down+0x8b87>
			30829: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3082d:	49 8b 0c 24          	mov    (%r12),%rcx
   30831:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   30835:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   30839:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3083f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30842: R_X86_64_32S	.rodata.str1.1+0x321c
   30846:	4c 89 ea             	mov    %r13,%rdx
   30849:	4c 89 f6             	mov    %r14,%rsi
   3084c:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
   30853:	48 01 d9             	add    %rbx,%rcx
   30856:	48 ff c3             	inc    %rbx
   30859:	e8 00 00 00 00       	callq  3085e <__MARSH_WRAP__e1000_down+0x8bb8>
			3085a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3085e:	48 83 fb 14          	cmp    $0x14,%rbx
   30862:	75 c9                	jne    3082d <__MARSH_WRAP__e1000_down+0x8b87>
   30864:	49 8b 04 24          	mov    (%r12),%rax
   30868:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   3086c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30872:	4c 89 ea             	mov    %r13,%rdx
   30875:	4c 89 f6             	mov    %r14,%rsi
   30878:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3087b: R_X86_64_32S	.rodata.str1.1+0x321c
   3087f:	48 89 d9             	mov    %rbx,%rcx
   30882:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   30888:	83 e0 01             	and    $0x1,%eax
   3088b:	0f b6 c0             	movzbl %al,%eax
   3088e:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   30891:	e8 00 00 00 00       	callq  30896 <__MARSH_WRAP__e1000_down+0x8bf0>
			30892: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30896:	49 8b 04 24          	mov    (%r12),%rax
   3089a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   308a0:	48 89 d9             	mov    %rbx,%rcx
   308a3:	4c 89 ea             	mov    %r13,%rdx
   308a6:	4c 89 f6             	mov    %r14,%rsi
   308a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			308ac: R_X86_64_32S	.rodata.str1.1+0x321c
   308b0:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   308b6:	d0 e8                	shr    %al
   308b8:	83 e0 01             	and    $0x1,%eax
   308bb:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   308be:	e8 00 00 00 00       	callq  308c3 <__MARSH_WRAP__e1000_down+0x8c1d>
			308bf: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   308c3:	49 8b 0c 24          	mov    (%r12),%rcx
   308c7:	4c 89 ea             	mov    %r13,%rdx
   308ca:	4c 89 f6             	mov    %r14,%rsi
   308cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			308d0: R_X86_64_32S	.rodata.str1.1+0x321c
   308d4:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   308db:	e8 00 00 00 00       	callq  308e0 <__MARSH_WRAP__e1000_down+0x8c3a>
			308dc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   308e0:	49 8b 04 24          	mov    (%r12),%rax
   308e4:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   308eb:	48 85 c0             	test   %rax,%rax
   308ee:	0f 84 bb 00 00 00    	je     309af <__MARSH_WRAP__e1000_down+0x8d09>
   308f4:	48 8d 48 18          	lea    0x18(%rax),%rcx
   308f8:	4c 89 ea             	mov    %r13,%rdx
   308fb:	4c 89 f6             	mov    %r14,%rsi
   308fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30901: R_X86_64_32S	.rodata.str1.1+0x321c
   30905:	e8 00 00 00 00       	callq  3090a <__MARSH_WRAP__e1000_down+0x8c64>
			30906: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3090a:	49 8b 04 24          	mov    (%r12),%rax
   3090e:	4c 89 ea             	mov    %r13,%rdx
   30911:	4c 89 f6             	mov    %r14,%rsi
   30914:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30917: R_X86_64_32S	.rodata.str1.1+0x321c
   3091b:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   30922:	48 83 c1 20          	add    $0x20,%rcx
   30926:	e8 00 00 00 00       	callq  3092b <__MARSH_WRAP__e1000_down+0x8c85>
			30927: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3092b:	49 8b 04 24          	mov    (%r12),%rax
   3092f:	4c 89 ea             	mov    %r13,%rdx
   30932:	4c 89 f6             	mov    %r14,%rsi
   30935:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30938: R_X86_64_32S	.rodata.str1.1+0x321c
   3093c:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   30943:	48 83 c1 30          	add    $0x30,%rcx
   30947:	e8 00 00 00 00       	callq  3094c <__MARSH_WRAP__e1000_down+0x8ca6>
			30948: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3094c:	49 8b 04 24          	mov    (%r12),%rax
   30950:	4c 89 ea             	mov    %r13,%rdx
   30953:	4c 89 f6             	mov    %r14,%rsi
   30956:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30959: R_X86_64_32S	.rodata.str1.1+0x321c
   3095d:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   30964:	48 83 c1 10          	add    $0x10,%rcx
   30968:	e8 00 00 00 00       	callq  3096d <__MARSH_WRAP__e1000_down+0x8cc7>
			30969: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3096d:	49 8b 04 24          	mov    (%r12),%rax
   30971:	4c 89 ea             	mov    %r13,%rdx
   30974:	4c 89 f6             	mov    %r14,%rsi
   30977:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3097a: R_X86_64_32S	.rodata.str1.1+0x321c
   3097e:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   30985:	48 83 c1 28          	add    $0x28,%rcx
   30989:	e8 00 00 00 00       	callq  3098e <__MARSH_WRAP__e1000_down+0x8ce8>
			3098a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3098e:	49 8b 04 24          	mov    (%r12),%rax
   30992:	4c 89 ea             	mov    %r13,%rdx
   30995:	4c 89 f6             	mov    %r14,%rsi
   30998:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3099b: R_X86_64_32S	.rodata.str1.1+0x321c
   3099f:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   309a6:	48 83 c1 08          	add    $0x8,%rcx
   309aa:	e8 00 00 00 00       	callq  309af <__MARSH_WRAP__e1000_down+0x8d09>
			309ab: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   309af:	49 8b 0c 24          	mov    (%r12),%rcx
   309b3:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   309b9:	4c 89 ea             	mov    %r13,%rdx
   309bc:	4c 89 f6             	mov    %r14,%rsi
   309bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			309c2: R_X86_64_32S	.rodata.str1.1+0x321c
   309c6:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
   309cd:	e8 00 00 00 00       	callq  309d2 <__MARSH_WRAP__e1000_down+0x8d2c>
			309ce: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   309d2:	49 8b 0c 24          	mov    (%r12),%rcx
   309d6:	4c 89 ea             	mov    %r13,%rdx
   309d9:	4c 89 f6             	mov    %r14,%rsi
   309dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			309df: R_X86_64_32S	.rodata.str1.1+0x321c
   309e3:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   309ea:	e8 00 00 00 00       	callq  309ef <__MARSH_WRAP__e1000_down+0x8d49>
			309eb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   309ef:	49 8b 0c 24          	mov    (%r12),%rcx
   309f3:	4c 89 ea             	mov    %r13,%rdx
   309f6:	4c 89 f6             	mov    %r14,%rsi
   309f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			309fc: R_X86_64_32S	.rodata.str1.1+0x321c
   30a00:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   30a07:	e8 00 00 00 00       	callq  30a0c <__MARSH_WRAP__e1000_down+0x8d66>
			30a08: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30a0c:	49 8b 0c 24          	mov    (%r12),%rcx
   30a10:	4c 89 ea             	mov    %r13,%rdx
   30a13:	4c 89 f6             	mov    %r14,%rsi
   30a16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30a19: R_X86_64_32S	.rodata.str1.1+0x321c
   30a1d:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   30a24:	e8 00 00 00 00       	callq  30a29 <__MARSH_WRAP__e1000_down+0x8d83>
			30a25: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30a29:	49 8b 04 24          	mov    (%r12),%rax
   30a2d:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
   30a34:	48 85 c9             	test   %rcx,%rcx
   30a37:	74 18                	je     30a51 <__MARSH_WRAP__e1000_down+0x8dab>
   30a39:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30a3f:	4c 89 ea             	mov    %r13,%rdx
   30a42:	4c 89 f6             	mov    %r14,%rsi
   30a45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30a48: R_X86_64_32S	.rodata.str1.1+0x321c
   30a4c:	e8 00 00 00 00       	callq  30a51 <__MARSH_WRAP__e1000_down+0x8dab>
			30a4d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30a51:	49 8b 0c 24          	mov    (%r12),%rcx
   30a55:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30a5b:	4c 89 ea             	mov    %r13,%rdx
   30a5e:	4c 89 f6             	mov    %r14,%rsi
   30a61:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30a64: R_X86_64_32S	.rodata.str1.1+0x321c
   30a68:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   30a6f:	e8 00 00 00 00       	callq  30a74 <__MARSH_WRAP__e1000_down+0x8dce>
			30a70: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30a74:	49 8b 0c 24          	mov    (%r12),%rcx
   30a78:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30a7e:	4c 89 ea             	mov    %r13,%rdx
   30a81:	4c 89 f6             	mov    %r14,%rsi
   30a84:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30a87: R_X86_64_32S	.rodata.str1.1+0x321c
   30a8b:	48 83 c1 70          	add    $0x70,%rcx
   30a8f:	e8 00 00 00 00       	callq  30a94 <__MARSH_WRAP__e1000_down+0x8dee>
			30a90: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30a94:	49 8b 0c 24          	mov    (%r12),%rcx
   30a98:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30a9e:	4c 89 ea             	mov    %r13,%rdx
   30aa1:	4c 89 f6             	mov    %r14,%rsi
   30aa4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30aa7: R_X86_64_32S	.rodata.str1.1+0x321c
   30aab:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   30ab2:	e8 00 00 00 00       	callq  30ab7 <__MARSH_WRAP__e1000_down+0x8e11>
			30ab3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30ab7:	49 8b 0c 24          	mov    (%r12),%rcx
   30abb:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30ac1:	4c 89 ea             	mov    %r13,%rdx
   30ac4:	4c 89 f6             	mov    %r14,%rsi
   30ac7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30aca: R_X86_64_32S	.rodata.str1.1+0x321c
   30ace:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   30ad5:	e8 00 00 00 00       	callq  30ada <__MARSH_WRAP__e1000_down+0x8e34>
			30ad6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30ada:	49 8b 0c 24          	mov    (%r12),%rcx
   30ade:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30ae4:	4c 89 ea             	mov    %r13,%rdx
   30ae7:	4c 89 f6             	mov    %r14,%rsi
   30aea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30aed: R_X86_64_32S	.rodata.str1.1+0x321c
   30af1:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   30af8:	e8 00 00 00 00       	callq  30afd <__MARSH_WRAP__e1000_down+0x8e57>
			30af9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30afd:	49 8b 0c 24          	mov    (%r12),%rcx
   30b01:	4c 89 ea             	mov    %r13,%rdx
   30b04:	4c 89 f6             	mov    %r14,%rsi
   30b07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30b0a: R_X86_64_32S	.rodata.str1.1+0x321c
   30b0e:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   30b15:	e8 00 00 00 00       	callq  30b1a <__MARSH_WRAP__e1000_down+0x8e74>
			30b16: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30b1a:	49 8b 04 24          	mov    (%r12),%rax
   30b1e:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   30b25:	00 
   30b26:	74 5a                	je     30b82 <__MARSH_WRAP__e1000_down+0x8edc>
   30b28:	31 db                	xor    %ebx,%ebx
   30b2a:	49 8b 04 24          	mov    (%r12),%rax
   30b2e:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   30b32:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   30b36:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30b3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30b3f: R_X86_64_32S	.rodata.str1.1+0x321c
   30b43:	4c 89 ea             	mov    %r13,%rdx
   30b46:	4c 89 f6             	mov    %r14,%rsi
   30b49:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   30b50:	48 83 c1 08          	add    $0x8,%rcx
   30b54:	48 01 d9             	add    %rbx,%rcx
   30b57:	48 ff c3             	inc    %rbx
   30b5a:	e8 00 00 00 00       	callq  30b5f <__MARSH_WRAP__e1000_down+0x8eb9>
			30b5b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30b5f:	48 83 fb 20          	cmp    $0x20,%rbx
   30b63:	75 c5                	jne    30b2a <__MARSH_WRAP__e1000_down+0x8e84>
   30b65:	49 8b 04 24          	mov    (%r12),%rax
   30b69:	4c 89 ea             	mov    %r13,%rdx
   30b6c:	4c 89 f6             	mov    %r14,%rsi
   30b6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30b72: R_X86_64_32S	.rodata.str1.1+0x321c
   30b76:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   30b7d:	e8 00 00 00 00       	callq  30b82 <__MARSH_WRAP__e1000_down+0x8edc>
			30b7e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30b82:	49 8b 0c 24          	mov    (%r12),%rcx
   30b86:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   30b8a:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   30b8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30b91: R_X86_64_32S	.rodata.str1.1+0x321c
   30b95:	48 89 da             	mov    %rbx,%rdx
   30b98:	4c 89 ee             	mov    %r13,%rsi
   30b9b:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   30ba2:	e8 00 00 00 00       	callq  30ba7 <__MARSH_WRAP__e1000_down+0x8f01>
			30ba3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30ba7:	49 8b 0c 24          	mov    (%r12),%rcx
   30bab:	48 89 da             	mov    %rbx,%rdx
   30bae:	4c 89 ee             	mov    %r13,%rsi
   30bb1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30bb4: R_X86_64_32S	.rodata.str1.1+0x321c
   30bb8:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   30bbf:	e8 00 00 00 00       	callq  30bc4 <__MARSH_WRAP__e1000_down+0x8f1e>
			30bc0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30bc4:	49 8b 04 24          	mov    (%r12),%rax
   30bc8:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   30bcf:	48 85 c0             	test   %rax,%rax
   30bd2:	74 37                	je     30c0b <__MARSH_WRAP__e1000_down+0x8f65>
   30bd4:	48 8d 48 60          	lea    0x60(%rax),%rcx
   30bd8:	48 89 da             	mov    %rbx,%rdx
   30bdb:	4c 89 ee             	mov    %r13,%rsi
   30bde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30be1: R_X86_64_32S	.rodata.str1.1+0x321c
   30be5:	e8 00 00 00 00       	callq  30bea <__MARSH_WRAP__e1000_down+0x8f44>
			30be6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30bea:	49 8b 04 24          	mov    (%r12),%rax
   30bee:	48 89 da             	mov    %rbx,%rdx
   30bf1:	4c 89 ee             	mov    %r13,%rsi
   30bf4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30bf7: R_X86_64_32S	.rodata.str1.1+0x321c
   30bfb:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   30c02:	48 83 c1 58          	add    $0x58,%rcx
   30c06:	e8 00 00 00 00       	callq  30c0b <__MARSH_WRAP__e1000_down+0x8f65>
			30c07: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30c0b:	49 8b 0c 24          	mov    (%r12),%rcx
   30c0f:	48 89 da             	mov    %rbx,%rdx
   30c12:	4c 89 ee             	mov    %r13,%rsi
   30c15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30c18: R_X86_64_32S	.rodata.str1.1+0x321c
   30c1c:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   30c23:	e8 00 00 00 00       	callq  30c28 <__MARSH_WRAP__e1000_down+0x8f82>
			30c24: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30c28:	49 8b 04 24          	mov    (%r12),%rax
   30c2c:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   30c33:	48 85 c0             	test   %rax,%rax
   30c36:	74 3d                	je     30c75 <__MARSH_WRAP__e1000_down+0x8fcf>
   30c38:	48 8d 48 10          	lea    0x10(%rax),%rcx
   30c3c:	48 89 da             	mov    %rbx,%rdx
   30c3f:	4c 89 ee             	mov    %r13,%rsi
   30c42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30c45: R_X86_64_32S	.rodata.str1.1+0x321c
   30c49:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30c4f:	e8 00 00 00 00       	callq  30c54 <__MARSH_WRAP__e1000_down+0x8fae>
			30c50: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30c54:	49 8b 04 24          	mov    (%r12),%rax
   30c58:	48 89 da             	mov    %rbx,%rdx
   30c5b:	4c 89 ee             	mov    %r13,%rsi
   30c5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30c61: R_X86_64_32S	.rodata.str1.1+0x321c
   30c65:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   30c6c:	48 83 c1 08          	add    $0x8,%rcx
   30c70:	e8 00 00 00 00       	callq  30c75 <__MARSH_WRAP__e1000_down+0x8fcf>
			30c71: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30c75:	49 8b 0c 24          	mov    (%r12),%rcx
   30c79:	48 89 da             	mov    %rbx,%rdx
   30c7c:	4c 89 ee             	mov    %r13,%rsi
   30c7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30c82: R_X86_64_32S	.rodata.str1.1+0x321c
   30c86:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   30c8d:	e8 00 00 00 00       	callq  30c92 <__MARSH_WRAP__e1000_down+0x8fec>
			30c8e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30c92:	49 8b 04 24          	mov    (%r12),%rax
   30c96:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   30c9d:	00 
   30c9e:	74 5a                	je     30cfa <__MARSH_WRAP__e1000_down+0x9054>
   30ca0:	31 db                	xor    %ebx,%ebx
   30ca2:	49 8b 04 24          	mov    (%r12),%rax
   30ca6:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   30caa:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   30cae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30cb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30cb7: R_X86_64_32S	.rodata.str1.1+0x321c
   30cbb:	4c 89 ea             	mov    %r13,%rdx
   30cbe:	4c 89 f6             	mov    %r14,%rsi
   30cc1:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   30cc8:	48 83 c1 08          	add    $0x8,%rcx
   30ccc:	48 01 d9             	add    %rbx,%rcx
   30ccf:	48 ff c3             	inc    %rbx
   30cd2:	e8 00 00 00 00       	callq  30cd7 <__MARSH_WRAP__e1000_down+0x9031>
			30cd3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30cd7:	48 83 fb 20          	cmp    $0x20,%rbx
   30cdb:	75 c5                	jne    30ca2 <__MARSH_WRAP__e1000_down+0x8ffc>
   30cdd:	49 8b 04 24          	mov    (%r12),%rax
   30ce1:	4c 89 ea             	mov    %r13,%rdx
   30ce4:	4c 89 f6             	mov    %r14,%rsi
   30ce7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30cea: R_X86_64_32S	.rodata.str1.1+0x321c
   30cee:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   30cf5:	e8 00 00 00 00       	callq  30cfa <__MARSH_WRAP__e1000_down+0x9054>
			30cf6: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30cfa:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   30cfe:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   30d02:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   30d06:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30d09: R_X86_64_32S	.rodata.str1.1+0x321c
   30d0d:	4c 89 e2             	mov    %r12,%rdx
   30d10:	4c 89 ee             	mov    %r13,%rsi
   30d13:	48 81 c1 20 02 00 00 	add    $0x220,%rcx
   30d1a:	e8 00 00 00 00       	callq  30d1f <__MARSH_WRAP__e1000_down+0x9079>
			30d1b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30d1f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30d23:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30d2a:	48 85 c0             	test   %rax,%rax
   30d2d:	0f 84 40 06 00 00    	je     31373 <__MARSH_WRAP__e1000_down+0x96cd>
   30d33:	48 8d 48 14          	lea    0x14(%rax),%rcx
   30d37:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30d3d:	4c 89 e2             	mov    %r12,%rdx
   30d40:	4c 89 ee             	mov    %r13,%rsi
   30d43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30d46: R_X86_64_32S	.rodata.str1.1+0x321c
   30d4a:	e8 00 00 00 00       	callq  30d4f <__MARSH_WRAP__e1000_down+0x90a9>
			30d4b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30d4f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30d53:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30d59:	4c 89 e2             	mov    %r12,%rdx
   30d5c:	4c 89 ee             	mov    %r13,%rsi
   30d5f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30d62: R_X86_64_32S	.rodata.str1.1+0x321c
   30d66:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30d6d:	48 83 c1 10          	add    $0x10,%rcx
   30d71:	e8 00 00 00 00       	callq  30d76 <__MARSH_WRAP__e1000_down+0x90d0>
			30d72: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30d76:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30d7a:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   30d80:	4c 89 e2             	mov    %r12,%rdx
   30d83:	4c 89 ee             	mov    %r13,%rsi
   30d86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30d89: R_X86_64_32S	.rodata.str1.1+0x321c
   30d8d:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30d94:	48 83 c1 2e          	add    $0x2e,%rcx
   30d98:	e8 00 00 00 00       	callq  30d9d <__MARSH_WRAP__e1000_down+0x90f7>
			30d99: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30d9d:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30da1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30da7:	4c 89 e2             	mov    %r12,%rdx
   30daa:	4c 89 ee             	mov    %r13,%rsi
   30dad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30db0: R_X86_64_32S	.rodata.str1.1+0x321c
   30db4:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30dbb:	48 83 c1 1c          	add    $0x1c,%rcx
   30dbf:	e8 00 00 00 00       	callq  30dc4 <__MARSH_WRAP__e1000_down+0x911e>
			30dc0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30dc4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30dc8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30dce:	4c 89 e2             	mov    %r12,%rdx
   30dd1:	4c 89 ee             	mov    %r13,%rsi
   30dd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30dd7: R_X86_64_32S	.rodata.str1.1+0x321c
   30ddb:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30de2:	48 83 c1 08          	add    $0x8,%rcx
   30de6:	e8 00 00 00 00       	callq  30deb <__MARSH_WRAP__e1000_down+0x9145>
			30de7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30deb:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30def:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   30df5:	4c 89 e2             	mov    %r12,%rdx
   30df8:	4c 89 ee             	mov    %r13,%rsi
   30dfb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30dfe: R_X86_64_32S	.rodata.str1.1+0x321c
   30e02:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30e09:	48 83 c1 2c          	add    $0x2c,%rcx
   30e0d:	e8 00 00 00 00       	callq  30e12 <__MARSH_WRAP__e1000_down+0x916c>
			30e0e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30e12:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30e16:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30e1c:	4c 89 e2             	mov    %r12,%rdx
   30e1f:	4c 89 ee             	mov    %r13,%rsi
   30e22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30e25: R_X86_64_32S	.rodata.str1.1+0x321c
   30e29:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30e30:	48 83 c1 18          	add    $0x18,%rcx
   30e34:	e8 00 00 00 00       	callq  30e39 <__MARSH_WRAP__e1000_down+0x9193>
			30e35: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30e39:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30e3d:	4c 89 e2             	mov    %r12,%rdx
   30e40:	4c 89 ee             	mov    %r13,%rsi
   30e43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30e46: R_X86_64_32S	.rodata.str1.1+0x321c
   30e4a:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   30e51:	48 83 c1 20          	add    $0x20,%rcx
   30e55:	e8 00 00 00 00       	callq  30e5a <__MARSH_WRAP__e1000_down+0x91b4>
			30e56: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30e5a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30e5e:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30e65:	48 8b 40 20          	mov    0x20(%rax),%rax
   30e69:	48 85 c0             	test   %rax,%rax
   30e6c:	0f 84 05 04 00 00    	je     31277 <__MARSH_WRAP__e1000_down+0x95d1>
   30e72:	48 8d 48 18          	lea    0x18(%rax),%rcx
   30e76:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   30e7c:	4c 89 e2             	mov    %r12,%rdx
   30e7f:	4c 89 ee             	mov    %r13,%rsi
   30e82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30e85: R_X86_64_32S	.rodata.str1.1+0x321c
   30e89:	e8 00 00 00 00       	callq  30e8e <__MARSH_WRAP__e1000_down+0x91e8>
			30e8a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30e8e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30e92:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30e98:	4c 89 e2             	mov    %r12,%rdx
   30e9b:	4c 89 ee             	mov    %r13,%rsi
   30e9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30ea1: R_X86_64_32S	.rodata.str1.1+0x321c
   30ea5:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30eac:	48 8b 48 20          	mov    0x20(%rax),%rcx
   30eb0:	48 83 c1 10          	add    $0x10,%rcx
   30eb4:	e8 00 00 00 00       	callq  30eb9 <__MARSH_WRAP__e1000_down+0x9213>
			30eb5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30eb9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30ebd:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   30ec3:	4c 89 e2             	mov    %r12,%rdx
   30ec6:	4c 89 ee             	mov    %r13,%rsi
   30ec9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30ecc: R_X86_64_32S	.rodata.str1.1+0x321c
   30ed0:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30ed7:	48 8b 48 20          	mov    0x20(%rax),%rcx
   30edb:	48 83 c1 1a          	add    $0x1a,%rcx
   30edf:	e8 00 00 00 00       	callq  30ee4 <__MARSH_WRAP__e1000_down+0x923e>
			30ee0: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30ee4:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30ee8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   30eee:	4c 89 e2             	mov    %r12,%rdx
   30ef1:	4c 89 ee             	mov    %r13,%rsi
   30ef4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30ef7: R_X86_64_32S	.rodata.str1.1+0x321c
   30efb:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30f02:	48 8b 48 20          	mov    0x20(%rax),%rcx
   30f06:	48 83 c1 08          	add    $0x8,%rcx
   30f0a:	e8 00 00 00 00       	callq  30f0f <__MARSH_WRAP__e1000_down+0x9269>
			30f0b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30f0f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30f13:	4c 89 e2             	mov    %r12,%rdx
   30f16:	4c 89 ee             	mov    %r13,%rsi
   30f19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30f1c: R_X86_64_32S	.rodata.str1.1+0x321c
   30f20:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30f27:	48 8b 48 20          	mov    0x20(%rax),%rcx
   30f2b:	e8 00 00 00 00       	callq  30f30 <__MARSH_WRAP__e1000_down+0x928a>
			30f2c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   30f30:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30f34:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30f3b:	48 8b 40 20          	mov    0x20(%rax),%rax
   30f3f:	48 8b 00             	mov    (%rax),%rax
   30f42:	48 85 c0             	test   %rax,%rax
   30f45:	0f 84 2c 03 00 00    	je     31277 <__MARSH_WRAP__e1000_down+0x95d1>
   30f4b:	8a 40 7d             	mov    0x7d(%rax),%al
   30f4e:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   30f52:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30f58:	4c 89 e2             	mov    %r12,%rdx
   30f5b:	4c 89 ee             	mov    %r13,%rsi
   30f5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30f61: R_X86_64_32S	.rodata.str1.1+0x321c
   30f65:	48 89 d9             	mov    %rbx,%rcx
   30f68:	83 e0 07             	and    $0x7,%eax
   30f6b:	0f b6 c0             	movzbl %al,%eax
   30f6e:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   30f71:	e8 00 00 00 00       	callq  30f76 <__MARSH_WRAP__e1000_down+0x92d0>
			30f72: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30f76:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30f7a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30f80:	4c 89 e2             	mov    %r12,%rdx
   30f83:	4c 89 ee             	mov    %r13,%rsi
   30f86:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30f89: R_X86_64_32S	.rodata.str1.1+0x321c
   30f8d:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30f94:	48 8b 40 20          	mov    0x20(%rax),%rax
   30f98:	48 8b 08             	mov    (%rax),%rcx
   30f9b:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   30fa2:	e8 00 00 00 00       	callq  30fa7 <__MARSH_WRAP__e1000_down+0x9301>
			30fa3: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30fa7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30fab:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   30fb1:	4c 89 e2             	mov    %r12,%rdx
   30fb4:	4c 89 ee             	mov    %r13,%rsi
   30fb7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30fba: R_X86_64_32S	.rodata.str1.1+0x321c
   30fbe:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30fc5:	48 8b 40 20          	mov    0x20(%rax),%rax
   30fc9:	48 8b 08             	mov    (%rax),%rcx
   30fcc:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   30fd3:	e8 00 00 00 00       	callq  30fd8 <__MARSH_WRAP__e1000_down+0x9332>
			30fd4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   30fd8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   30fdc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   30fe2:	48 89 d9             	mov    %rbx,%rcx
   30fe5:	4c 89 e2             	mov    %r12,%rdx
   30fe8:	4c 89 ee             	mov    %r13,%rsi
   30feb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30fee: R_X86_64_32S	.rodata.str1.1+0x321c
   30ff2:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   30ff9:	48 8b 40 20          	mov    0x20(%rax),%rax
   30ffd:	48 8b 00             	mov    (%rax),%rax
   31000:	8a 40 7c             	mov    0x7c(%rax),%al
   31003:	c0 e8 02             	shr    $0x2,%al
   31006:	83 e0 03             	and    $0x3,%eax
   31009:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   3100c:	e8 00 00 00 00       	callq  31011 <__MARSH_WRAP__e1000_down+0x936b>
			3100d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31011:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31015:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3101b:	4c 89 e2             	mov    %r12,%rdx
   3101e:	4c 89 ee             	mov    %r13,%rsi
   31021:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31024: R_X86_64_32S	.rodata.str1.1+0x321c
   31028:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   3102f:	48 8b 40 20          	mov    0x20(%rax),%rax
   31033:	48 8b 08             	mov    (%rax),%rcx
   31036:	48 83 c1 6c          	add    $0x6c,%rcx
   3103a:	e8 00 00 00 00       	callq  3103f <__MARSH_WRAP__e1000_down+0x9399>
			3103b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3103f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31043:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31049:	4c 89 e2             	mov    %r12,%rdx
   3104c:	4c 89 ee             	mov    %r13,%rsi
   3104f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31052: R_X86_64_32S	.rodata.str1.1+0x321c
   31056:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   3105d:	48 8b 40 20          	mov    0x20(%rax),%rax
   31061:	48 8b 08             	mov    (%rax),%rcx
   31064:	48 83 c1 74          	add    $0x74,%rcx
   31068:	e8 00 00 00 00       	callq  3106d <__MARSH_WRAP__e1000_down+0x93c7>
			31069: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3106d:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31071:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31077:	4c 89 e2             	mov    %r12,%rdx
   3107a:	4c 89 ee             	mov    %r13,%rsi
   3107d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31080: R_X86_64_32S	.rodata.str1.1+0x321c
   31084:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   3108b:	48 8b 40 20          	mov    0x20(%rax),%rax
   3108f:	48 8b 08             	mov    (%rax),%rcx
   31092:	48 83 c1 68          	add    $0x68,%rcx
   31096:	e8 00 00 00 00       	callq  3109b <__MARSH_WRAP__e1000_down+0x93f5>
			31097: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3109b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3109f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   310a5:	4c 89 e2             	mov    %r12,%rdx
   310a8:	4c 89 ee             	mov    %r13,%rsi
   310ab:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			310ae: R_X86_64_32S	.rodata.str1.1+0x321c
   310b2:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   310b9:	48 8b 40 20          	mov    0x20(%rax),%rax
   310bd:	48 8b 08             	mov    (%rax),%rcx
   310c0:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   310c7:	e8 00 00 00 00       	callq  310cc <__MARSH_WRAP__e1000_down+0x9426>
			310c8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   310cc:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   310d0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   310d6:	4c 89 e2             	mov    %r12,%rdx
   310d9:	4c 89 ee             	mov    %r13,%rsi
   310dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			310df: R_X86_64_32S	.rodata.str1.1+0x321c
   310e3:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   310ea:	48 8b 40 20          	mov    0x20(%rax),%rax
   310ee:	48 8b 08             	mov    (%rax),%rcx
   310f1:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   310f8:	e8 00 00 00 00       	callq  310fd <__MARSH_WRAP__e1000_down+0x9457>
			310f9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   310fd:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31101:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31107:	4c 89 e2             	mov    %r12,%rdx
   3110a:	4c 89 ee             	mov    %r13,%rsi
   3110d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31110: R_X86_64_32S	.rodata.str1.1+0x321c
   31114:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   3111b:	48 8b 40 20          	mov    0x20(%rax),%rax
   3111f:	48 8b 08             	mov    (%rax),%rcx
   31122:	48 83 c1 7e          	add    $0x7e,%rcx
   31126:	e8 00 00 00 00       	callq  3112b <__MARSH_WRAP__e1000_down+0x9485>
			31127: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3112b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3112f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31135:	4c 89 e2             	mov    %r12,%rdx
   31138:	4c 89 ee             	mov    %r13,%rsi
   3113b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3113e: R_X86_64_32S	.rodata.str1.1+0x321c
   31142:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   31149:	48 8b 40 20          	mov    0x20(%rax),%rax
   3114d:	48 8b 08             	mov    (%rax),%rcx
   31150:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   31157:	e8 00 00 00 00       	callq  3115c <__MARSH_WRAP__e1000_down+0x94b6>
			31158: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3115c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31160:	4c 89 e2             	mov    %r12,%rdx
   31163:	4c 89 ee             	mov    %r13,%rsi
   31166:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31169: R_X86_64_32S	.rodata.str1.1+0x321c
   3116d:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   31174:	48 8b 40 20          	mov    0x20(%rax),%rax
   31178:	48 8b 08             	mov    (%rax),%rcx
   3117b:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   31182:	e8 00 00 00 00       	callq  31187 <__MARSH_WRAP__e1000_down+0x94e1>
			31183: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31187:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3118b:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   31192:	48 8b 40 20          	mov    0x20(%rax),%rax
   31196:	48 8b 00             	mov    (%rax),%rax
   31199:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   311a0:	00 
   311a1:	74 6b                	je     3120e <__MARSH_WRAP__e1000_down+0x9568>
   311a3:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   311a9:	31 db                	xor    %ebx,%ebx
   311ab:	e8 00 00 00 00       	callq  311b0 <__MARSH_WRAP__e1000_down+0x950a>
			311ac: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   311b0:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   311b4:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   311ba:	4c 89 e2             	mov    %r12,%rdx
   311bd:	4c 89 ee             	mov    %r13,%rsi
   311c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			311c3: R_X86_64_32S	.rodata.str1.1+0x321c
   311c7:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   311ca:	e8 00 00 00 00       	callq  311cf <__MARSH_WRAP__e1000_down+0x9529>
			311cb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   311cf:	eb 38                	jmp    31209 <__MARSH_WRAP__e1000_down+0x9563>
   311d1:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   311d5:	48 63 cb             	movslq %ebx,%rcx
   311d8:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   311dc:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   311e0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   311e6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			311e9: R_X86_64_32S	.rodata.str1.1+0x321c
   311ed:	ff c3                	inc    %ebx
   311ef:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   311f6:	48 8b 40 20          	mov    0x20(%rax),%rax
   311fa:	48 8b 00             	mov    (%rax),%rax
   311fd:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   31204:	e8 00 00 00 00       	callq  31209 <__MARSH_WRAP__e1000_down+0x9563>
			31205: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31209:	3b 5d c4             	cmp    0xffffffffffffffc4(%rbp),%ebx
   3120c:	7c c3                	jl     311d1 <__MARSH_WRAP__e1000_down+0x952b>
   3120e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31212:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   31216:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   3121a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3121d: R_X86_64_32S	.rodata.str1.1+0x321c
   31221:	48 89 da             	mov    %rbx,%rdx
   31224:	4c 89 e6             	mov    %r12,%rsi
   31227:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   3122e:	48 8b 40 20          	mov    0x20(%rax),%rax
   31232:	48 8b 08             	mov    (%rax),%rcx
   31235:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   3123c:	e8 00 00 00 00       	callq  31241 <__MARSH_WRAP__e1000_down+0x959b>
			3123d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31241:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31245:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   3124c:	48 8b 40 20          	mov    0x20(%rax),%rax
   31250:	48 8b 00             	mov    (%rax),%rax
   31253:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   3125a:	48 85 c9             	test   %rcx,%rcx
   3125d:	74 18                	je     31277 <__MARSH_WRAP__e1000_down+0x95d1>
   3125f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31265:	48 89 da             	mov    %rbx,%rdx
   31268:	4c 89 e6             	mov    %r12,%rsi
   3126b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3126e: R_X86_64_32S	.rodata.str1.1+0x321c
   31272:	e8 00 00 00 00       	callq  31277 <__MARSH_WRAP__e1000_down+0x95d1>
			31273: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31277:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3127b:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   3127f:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   31283:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31286: R_X86_64_32S	.rodata.str1.1+0x321c
   3128a:	48 89 da             	mov    %rbx,%rdx
   3128d:	4c 89 e6             	mov    %r12,%rsi
   31290:	48 8b 88 20 02 00 00 	mov    0x220(%rax),%rcx
   31297:	e8 00 00 00 00       	callq  3129c <__MARSH_WRAP__e1000_down+0x95f6>
			31298: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3129c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   312a0:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   312a7:	48 8b 00             	mov    (%rax),%rax
   312aa:	48 85 c0             	test   %rax,%rax
   312ad:	0f 84 c0 00 00 00    	je     31373 <__MARSH_WRAP__e1000_down+0x96cd>
   312b3:	48 8d 48 0e          	lea    0xe(%rax),%rcx
   312b7:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   312bd:	48 89 da             	mov    %rbx,%rdx
   312c0:	4c 89 e6             	mov    %r12,%rsi
   312c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			312c6: R_X86_64_32S	.rodata.str1.1+0x321c
   312ca:	e8 00 00 00 00       	callq  312cf <__MARSH_WRAP__e1000_down+0x9629>
			312cb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   312cf:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   312d3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   312d9:	48 89 da             	mov    %rbx,%rdx
   312dc:	4c 89 e6             	mov    %r12,%rsi
   312df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			312e2: R_X86_64_32S	.rodata.str1.1+0x321c
   312e6:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   312ed:	48 8b 08             	mov    (%rax),%rcx
   312f0:	48 83 c1 0d          	add    $0xd,%rcx
   312f4:	e8 00 00 00 00       	callq  312f9 <__MARSH_WRAP__e1000_down+0x9653>
			312f5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   312f9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   312fd:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31303:	48 89 da             	mov    %rbx,%rdx
   31306:	4c 89 e6             	mov    %r12,%rsi
   31309:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3130c: R_X86_64_32S	.rodata.str1.1+0x321c
   31310:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   31317:	48 8b 08             	mov    (%rax),%rcx
   3131a:	48 83 c1 0a          	add    $0xa,%rcx
   3131e:	e8 00 00 00 00       	callq  31323 <__MARSH_WRAP__e1000_down+0x967d>
			3131f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31323:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31327:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   3132d:	48 89 da             	mov    %rbx,%rdx
   31330:	4c 89 e6             	mov    %r12,%rsi
   31333:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31336: R_X86_64_32S	.rodata.str1.1+0x321c
   3133a:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   31341:	48 8b 08             	mov    (%rax),%rcx
   31344:	e8 00 00 00 00       	callq  31349 <__MARSH_WRAP__e1000_down+0x96a3>
			31345: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31349:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3134d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31353:	48 89 da             	mov    %rbx,%rdx
   31356:	4c 89 e6             	mov    %r12,%rsi
   31359:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3135c: R_X86_64_32S	.rodata.str1.1+0x321c
   31360:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
   31367:	48 8b 08             	mov    (%rax),%rcx
   3136a:	48 83 c1 0c          	add    $0xc,%rcx
   3136e:	e8 00 00 00 00       	callq  31373 <__MARSH_WRAP__e1000_down+0x96cd>
			3136f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31373:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   31377:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   3137b:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   3137f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31382: R_X86_64_32S	.rodata.str1.1+0x321c
   31386:	48 89 da             	mov    %rbx,%rdx
   31389:	4c 89 e6             	mov    %r12,%rsi
   3138c:	48 81 c1 90 00 00 00 	add    $0x90,%rcx
   31393:	e8 00 00 00 00       	callq  31398 <__MARSH_WRAP__e1000_down+0x96f2>
			31394: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31398:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3139c:	48 89 da             	mov    %rbx,%rdx
   3139f:	4c 89 e6             	mov    %r12,%rsi
   313a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			313a5: R_X86_64_32S	.rodata.str1.1+0x321c
   313a9:	48 81 c1 10 02 00 00 	add    $0x210,%rcx
   313b0:	e8 00 00 00 00       	callq  313b5 <__MARSH_WRAP__e1000_down+0x970f>
			313b1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   313b5:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   313b9:	48 89 da             	mov    %rbx,%rdx
   313bc:	4c 89 e6             	mov    %r12,%rsi
   313bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			313c2: R_X86_64_32S	.rodata.str1.1+0x321c
   313c6:	48 81 c1 18 02 00 00 	add    $0x218,%rcx
   313cd:	e8 00 00 00 00       	callq  313d2 <__MARSH_WRAP__e1000_down+0x972c>
			313ce: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   313d2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   313d6:	48 89 da             	mov    %rbx,%rdx
   313d9:	4c 89 e6             	mov    %r12,%rsi
   313dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			313df: R_X86_64_32S	.rodata.str1.1+0x321c
   313e3:	48 81 c1 f8 02 00 00 	add    $0x2f8,%rcx
   313ea:	e8 00 00 00 00       	callq  313ef <__MARSH_WRAP__e1000_down+0x9749>
			313eb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   313ef:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   313f3:	48 8b 80 f8 02 00 00 	mov    0x2f8(%rax),%rax
   313fa:	48 85 c0             	test   %rax,%rax
   313fd:	0f 84 6d 08 00 00    	je     31c70 <__MARSH_WRAP__e1000_down+0x9fca>
   31403:	48 8d 48 38          	lea    0x38(%rax),%rcx
   31407:	48 89 da             	mov    %rbx,%rdx
   3140a:	4c 89 e6             	mov    %r12,%rsi
   3140d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31413:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31416: R_X86_64_32S	.rodata.str1.1+0x321c
   3141a:	45 31 ff             	xor    %r15d,%r15d
   3141d:	e8 00 00 00 00       	callq  31422 <__MARSH_WRAP__e1000_down+0x977c>
			3141e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31422:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31426:	48 89 da             	mov    %rbx,%rdx
   31429:	4c 89 e6             	mov    %r12,%rsi
   3142c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31432:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31435: R_X86_64_32S	.rodata.str1.1+0x321c
   31439:	48 8b 88 f8 02 00 00 	mov    0x2f8(%rax),%rcx
   31440:	48 83 c1 7c          	add    $0x7c,%rcx
   31444:	e8 00 00 00 00       	callq  31449 <__MARSH_WRAP__e1000_down+0x97a3>
			31445: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31449:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3144d:	48 89 da             	mov    %rbx,%rdx
   31450:	4c 89 e6             	mov    %r12,%rsi
   31453:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31459:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3145c: R_X86_64_32S	.rodata.str1.1+0x321c
   31460:	48 8b 88 f8 02 00 00 	mov    0x2f8(%rax),%rcx
   31467:	48 81 c1 fc 02 00 00 	add    $0x2fc,%rcx
   3146e:	e8 00 00 00 00       	callq  31473 <__MARSH_WRAP__e1000_down+0x97cd>
			3146f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31473:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31477:	48 89 da             	mov    %rbx,%rdx
   3147a:	4c 89 e6             	mov    %r12,%rsi
   3147d:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31483:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31486: R_X86_64_32S	.rodata.str1.1+0x321c
   3148a:	48 8b 88 f8 02 00 00 	mov    0x2f8(%rax),%rcx
   31491:	48 83 c1 3e          	add    $0x3e,%rcx
   31495:	e8 00 00 00 00       	callq  3149a <__MARSH_WRAP__e1000_down+0x97f4>
			31496: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3149a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3149e:	4c 8b a0 f8 02 00 00 	mov    0x2f8(%rax),%r12
   314a5:	49 83 ec 80          	sub    $0xffffffffffffff80,%r12
   314a9:	49 8d 9c 24 f8 00 00 	lea    0xf8(%r12),%rbx
   314b0:	00 
   314b1:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   314b5:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   314b9:	48 89 d9             	mov    %rbx,%rcx
   314bc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   314c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			314c5: R_X86_64_32S	.rodata.str1.1+0x321c
   314c9:	49 ff c7             	inc    %r15
   314cc:	4c 89 ea             	mov    %r13,%rdx
   314cf:	4c 89 f6             	mov    %r14,%rsi
   314d2:	48 ff c3             	inc    %rbx
   314d5:	e8 00 00 00 00       	callq  314da <__MARSH_WRAP__e1000_down+0x9834>
			314d6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   314da:	49 83 ff 14          	cmp    $0x14,%r15
   314de:	75 d1                	jne    314b1 <__MARSH_WRAP__e1000_down+0x980b>
   314e0:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   314e7:	00 
   314e8:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   314ec:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   314f2:	4c 89 ea             	mov    %r13,%rdx
   314f5:	4c 89 f6             	mov    %r14,%rsi
   314f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			314fb: R_X86_64_32S	.rodata.str1.1+0x321c
   314ff:	48 89 d9             	mov    %rbx,%rcx
   31502:	83 e0 01             	and    $0x1,%eax
   31505:	0f b6 c0             	movzbl %al,%eax
   31508:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   3150b:	e8 00 00 00 00       	callq  31510 <__MARSH_WRAP__e1000_down+0x986a>
			3150c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31510:	41 8a 84 24 8c 01 00 	mov    0x18c(%r12),%al
   31517:	00 
   31518:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3151e:	48 89 d9             	mov    %rbx,%rcx
   31521:	4c 89 ea             	mov    %r13,%rdx
   31524:	4c 89 f6             	mov    %r14,%rsi
   31527:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3152a: R_X86_64_32S	.rodata.str1.1+0x321c
   3152e:	d0 e8                	shr    %al
   31530:	83 e0 01             	and    $0x1,%eax
   31533:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   31536:	e8 00 00 00 00       	callq  3153b <__MARSH_WRAP__e1000_down+0x9895>
			31537: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3153b:	49 8d 8c 24 e8 01 00 	lea    0x1e8(%r12),%rcx
   31542:	00 
   31543:	4c 89 ea             	mov    %r13,%rdx
   31546:	4c 89 f6             	mov    %r14,%rsi
   31549:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3154c: R_X86_64_32S	.rodata.str1.1+0x321c
   31550:	e8 00 00 00 00       	callq  31555 <__MARSH_WRAP__e1000_down+0x98af>
			31551: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31555:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   3155c:	00 
   3155d:	48 85 c0             	test   %rax,%rax
   31560:	0f 84 ac 00 00 00    	je     31612 <__MARSH_WRAP__e1000_down+0x996c>
   31566:	48 8d 48 18          	lea    0x18(%rax),%rcx
   3156a:	4c 89 ea             	mov    %r13,%rdx
   3156d:	4c 89 f6             	mov    %r14,%rsi
   31570:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31573: R_X86_64_32S	.rodata.str1.1+0x321c
   31577:	e8 00 00 00 00       	callq  3157c <__MARSH_WRAP__e1000_down+0x98d6>
			31578: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3157c:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   31583:	00 
   31584:	4c 89 ea             	mov    %r13,%rdx
   31587:	4c 89 f6             	mov    %r14,%rsi
   3158a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3158d: R_X86_64_32S	.rodata.str1.1+0x321c
   31591:	48 83 c1 20          	add    $0x20,%rcx
   31595:	e8 00 00 00 00       	callq  3159a <__MARSH_WRAP__e1000_down+0x98f4>
			31596: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3159a:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   315a1:	00 
   315a2:	4c 89 ea             	mov    %r13,%rdx
   315a5:	4c 89 f6             	mov    %r14,%rsi
   315a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			315ab: R_X86_64_32S	.rodata.str1.1+0x321c
   315af:	48 83 c1 30          	add    $0x30,%rcx
   315b3:	e8 00 00 00 00       	callq  315b8 <__MARSH_WRAP__e1000_down+0x9912>
			315b4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   315b8:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   315bf:	00 
   315c0:	4c 89 ea             	mov    %r13,%rdx
   315c3:	4c 89 f6             	mov    %r14,%rsi
   315c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			315c9: R_X86_64_32S	.rodata.str1.1+0x321c
   315cd:	48 83 c1 10          	add    $0x10,%rcx
   315d1:	e8 00 00 00 00       	callq  315d6 <__MARSH_WRAP__e1000_down+0x9930>
			315d2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   315d6:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   315dd:	00 
   315de:	4c 89 ea             	mov    %r13,%rdx
   315e1:	4c 89 f6             	mov    %r14,%rsi
   315e4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			315e7: R_X86_64_32S	.rodata.str1.1+0x321c
   315eb:	48 83 c1 28          	add    $0x28,%rcx
   315ef:	e8 00 00 00 00       	callq  315f4 <__MARSH_WRAP__e1000_down+0x994e>
			315f0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   315f4:	49 8b 8c 24 e8 01 00 	mov    0x1e8(%r12),%rcx
   315fb:	00 
   315fc:	4c 89 ea             	mov    %r13,%rdx
   315ff:	4c 89 f6             	mov    %r14,%rsi
   31602:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31605: R_X86_64_32S	.rodata.str1.1+0x321c
   31609:	48 83 c1 08          	add    $0x8,%rcx
   3160d:	e8 00 00 00 00       	callq  31612 <__MARSH_WRAP__e1000_down+0x996c>
			3160e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31612:	49 8d 8c 24 b8 01 00 	lea    0x1b8(%r12),%rcx
   31619:	00 
   3161a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31620:	4c 89 ea             	mov    %r13,%rdx
   31623:	4c 89 f6             	mov    %r14,%rsi
   31626:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31629: R_X86_64_32S	.rodata.str1.1+0x321c
   3162d:	e8 00 00 00 00       	callq  31632 <__MARSH_WRAP__e1000_down+0x998c>
			3162e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31632:	49 8d 8c 24 78 01 00 	lea    0x178(%r12),%rcx
   31639:	00 
   3163a:	4c 89 ea             	mov    %r13,%rdx
   3163d:	4c 89 f6             	mov    %r14,%rsi
   31640:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31643: R_X86_64_32S	.rodata.str1.1+0x321c
   31647:	e8 00 00 00 00       	callq  3164c <__MARSH_WRAP__e1000_down+0x99a6>
			31648: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3164c:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31653:	00 
   31654:	48 85 c0             	test   %rax,%rax
   31657:	0f 84 6a 05 00 00    	je     31bc7 <__MARSH_WRAP__e1000_down+0x9f21>
   3165d:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   31664:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   3166a:	4c 89 ea             	mov    %r13,%rdx
   3166d:	4c 89 f6             	mov    %r14,%rsi
   31670:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31673: R_X86_64_32S	.rodata.str1.1+0x321c
   31677:	31 db                	xor    %ebx,%ebx
   31679:	e8 00 00 00 00       	callq  3167e <__MARSH_WRAP__e1000_down+0x99d8>
			3167a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3167e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31685:	00 
   31686:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3168c:	4c 89 ea             	mov    %r13,%rdx
   3168f:	4c 89 f6             	mov    %r14,%rsi
   31692:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31695: R_X86_64_32S	.rodata.str1.1+0x321c
   31699:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   316a0:	e8 00 00 00 00       	callq  316a5 <__MARSH_WRAP__e1000_down+0x99ff>
			316a1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   316a5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   316ac:	00 
   316ad:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   316b3:	4c 89 ea             	mov    %r13,%rdx
   316b6:	4c 89 f6             	mov    %r14,%rsi
   316b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			316bc: R_X86_64_32S	.rodata.str1.1+0x321c
   316c0:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   316c7:	e8 00 00 00 00       	callq  316cc <__MARSH_WRAP__e1000_down+0x9a26>
			316c8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   316cc:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   316d3:	00 
   316d4:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   316da:	4c 89 ea             	mov    %r13,%rdx
   316dd:	4c 89 f6             	mov    %r14,%rsi
   316e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			316e3: R_X86_64_32S	.rodata.str1.1+0x321c
   316e7:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   316ee:	e8 00 00 00 00       	callq  316f3 <__MARSH_WRAP__e1000_down+0x9a4d>
			316ef: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   316f3:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   316fa:	00 
   316fb:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31701:	4c 89 ea             	mov    %r13,%rdx
   31704:	4c 89 f6             	mov    %r14,%rsi
   31707:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3170a: R_X86_64_32S	.rodata.str1.1+0x321c
   3170e:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   31715:	e8 00 00 00 00       	callq  3171a <__MARSH_WRAP__e1000_down+0x9a74>
			31716: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3171a:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31721:	00 
   31722:	4c 89 ea             	mov    %r13,%rdx
   31725:	4c 89 f6             	mov    %r14,%rsi
   31728:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3172b: R_X86_64_32S	.rodata.str1.1+0x321c
   3172f:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   31736:	e8 00 00 00 00       	callq  3173b <__MARSH_WRAP__e1000_down+0x9a95>
			31737: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3173b:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31742:	00 
   31743:	4c 89 ea             	mov    %r13,%rdx
   31746:	4c 89 f6             	mov    %r14,%rsi
   31749:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3174c: R_X86_64_32S	.rodata.str1.1+0x321c
   31750:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   31757:	e8 00 00 00 00       	callq  3175c <__MARSH_WRAP__e1000_down+0x9ab6>
			31758: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3175c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31763:	00 
   31764:	4c 89 ea             	mov    %r13,%rdx
   31767:	4c 89 f6             	mov    %r14,%rsi
   3176a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3176d: R_X86_64_32S	.rodata.str1.1+0x321c
   31771:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   31778:	e8 00 00 00 00       	callq  3177d <__MARSH_WRAP__e1000_down+0x9ad7>
			31779: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3177d:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31784:	00 
   31785:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   31789:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   3178d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31793:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31796: R_X86_64_32S	.rodata.str1.1+0x321c
   3179a:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   317a1:	48 01 d9             	add    %rbx,%rcx
   317a4:	48 ff c3             	inc    %rbx
   317a7:	e8 00 00 00 00       	callq  317ac <__MARSH_WRAP__e1000_down+0x9b06>
			317a8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   317ac:	48 83 fb 20          	cmp    $0x20,%rbx
   317b0:	75 cb                	jne    3177d <__MARSH_WRAP__e1000_down+0x9ad7>
   317b2:	30 db                	xor    %bl,%bl
   317b4:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   317bb:	00 
   317bc:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   317c0:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   317c4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   317ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			317cd: R_X86_64_32S	.rodata.str1.1+0x321c
   317d1:	4c 89 ea             	mov    %r13,%rdx
   317d4:	4c 89 f6             	mov    %r14,%rsi
   317d7:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   317de:	48 01 d9             	add    %rbx,%rcx
   317e1:	48 ff c3             	inc    %rbx
   317e4:	e8 00 00 00 00       	callq  317e9 <__MARSH_WRAP__e1000_down+0x9b43>
			317e5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   317e9:	48 83 fb 20          	cmp    $0x20,%rbx
   317ed:	75 c5                	jne    317b4 <__MARSH_WRAP__e1000_down+0x9b0e>
   317ef:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   317f6:	00 
   317f7:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   317fd:	4c 89 ea             	mov    %r13,%rdx
   31800:	4c 89 f6             	mov    %r14,%rsi
   31803:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31806: R_X86_64_32S	.rodata.str1.1+0x321c
   3180a:	30 db                	xor    %bl,%bl
   3180c:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   31813:	e8 00 00 00 00       	callq  31818 <__MARSH_WRAP__e1000_down+0x9b72>
			31814: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31818:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   3181f:	00 
   31820:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31826:	4c 89 ea             	mov    %r13,%rdx
   31829:	4c 89 f6             	mov    %r14,%rsi
   3182c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3182f: R_X86_64_32S	.rodata.str1.1+0x321c
   31833:	48 83 c1 48          	add    $0x48,%rcx
   31837:	e8 00 00 00 00       	callq  3183c <__MARSH_WRAP__e1000_down+0x9b96>
			31838: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3183c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31843:	00 
   31844:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   31848:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   3184c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31852:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31855: R_X86_64_32S	.rodata.str1.1+0x321c
   31859:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   31860:	48 01 d9             	add    %rbx,%rcx
   31863:	48 ff c3             	inc    %rbx
   31866:	e8 00 00 00 00       	callq  3186b <__MARSH_WRAP__e1000_down+0x9bc5>
			31867: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3186b:	48 83 fb 20          	cmp    $0x20,%rbx
   3186f:	75 cb                	jne    3183c <__MARSH_WRAP__e1000_down+0x9b96>
   31871:	30 db                	xor    %bl,%bl
   31873:	48 89 d9             	mov    %rbx,%rcx
   31876:	49 03 8c 24 78 01 00 	add    0x178(%r12),%rcx
   3187d:	00 
   3187e:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   31882:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   31886:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3188c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3188f: R_X86_64_32S	.rodata.str1.1+0x321c
   31893:	4c 89 ea             	mov    %r13,%rdx
   31896:	48 ff c3             	inc    %rbx
   31899:	4c 89 f6             	mov    %r14,%rsi
   3189c:	e8 00 00 00 00       	callq  318a1 <__MARSH_WRAP__e1000_down+0x9bfb>
			3189d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   318a1:	48 83 fb 10          	cmp    $0x10,%rbx
   318a5:	75 cc                	jne    31873 <__MARSH_WRAP__e1000_down+0x9bcd>
   318a7:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   318ae:	00 
   318af:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   318b5:	4c 89 ea             	mov    %r13,%rdx
   318b8:	4c 89 f6             	mov    %r14,%rsi
   318bb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			318be: R_X86_64_32S	.rodata.str1.1+0x321c
   318c2:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   318c9:	e8 00 00 00 00       	callq  318ce <__MARSH_WRAP__e1000_down+0x9c28>
			318ca: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   318ce:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   318d5:	00 
   318d6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   318dc:	4c 89 ea             	mov    %r13,%rdx
   318df:	4c 89 f6             	mov    %r14,%rsi
   318e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			318e5: R_X86_64_32S	.rodata.str1.1+0x321c
   318e9:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   318f0:	e8 00 00 00 00       	callq  318f5 <__MARSH_WRAP__e1000_down+0x9c4f>
			318f1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   318f5:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   318fc:	00 
   318fd:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31903:	4c 89 ea             	mov    %r13,%rdx
   31906:	4c 89 f6             	mov    %r14,%rsi
   31909:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3190c: R_X86_64_32S	.rodata.str1.1+0x321c
   31910:	48 83 c1 70          	add    $0x70,%rcx
   31914:	e8 00 00 00 00       	callq  31919 <__MARSH_WRAP__e1000_down+0x9c73>
			31915: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31919:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31920:	00 
   31921:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31927:	4c 89 ea             	mov    %r13,%rdx
   3192a:	4c 89 f6             	mov    %r14,%rsi
   3192d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31930: R_X86_64_32S	.rodata.str1.1+0x321c
   31934:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   3193b:	e8 00 00 00 00       	callq  31940 <__MARSH_WRAP__e1000_down+0x9c9a>
			3193c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31940:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31947:	00 
   31948:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   3194e:	4c 89 ea             	mov    %r13,%rdx
   31951:	4c 89 f6             	mov    %r14,%rsi
   31954:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31957: R_X86_64_32S	.rodata.str1.1+0x321c
   3195b:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   31962:	e8 00 00 00 00       	callq  31967 <__MARSH_WRAP__e1000_down+0x9cc1>
			31963: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31967:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   3196e:	00 
   3196f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31975:	4c 89 ea             	mov    %r13,%rdx
   31978:	4c 89 f6             	mov    %r14,%rsi
   3197b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3197e: R_X86_64_32S	.rodata.str1.1+0x321c
   31982:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   31989:	e8 00 00 00 00       	callq  3198e <__MARSH_WRAP__e1000_down+0x9ce8>
			3198a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3198e:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31995:	00 
   31996:	4c 89 ea             	mov    %r13,%rdx
   31999:	4c 89 f6             	mov    %r14,%rsi
   3199c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3199f: R_X86_64_32S	.rodata.str1.1+0x321c
   319a3:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   319aa:	e8 00 00 00 00       	callq  319af <__MARSH_WRAP__e1000_down+0x9d09>
			319ab: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   319af:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   319b6:	00 
   319b7:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   319be:	00 
   319bf:	74 62                	je     31a23 <__MARSH_WRAP__e1000_down+0x9d7d>
   319c1:	30 db                	xor    %bl,%bl
   319c3:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   319ca:	00 
   319cb:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   319cf:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   319d3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   319d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			319dc: R_X86_64_32S	.rodata.str1.1+0x321c
   319e0:	4c 89 ea             	mov    %r13,%rdx
   319e3:	4c 89 f6             	mov    %r14,%rsi
   319e6:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   319ed:	48 83 c1 08          	add    $0x8,%rcx
   319f1:	48 01 d9             	add    %rbx,%rcx
   319f4:	48 ff c3             	inc    %rbx
   319f7:	e8 00 00 00 00       	callq  319fc <__MARSH_WRAP__e1000_down+0x9d56>
			319f8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   319fc:	48 83 fb 20          	cmp    $0x20,%rbx
   31a00:	75 c1                	jne    319c3 <__MARSH_WRAP__e1000_down+0x9d1d>
   31a02:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31a09:	00 
   31a0a:	4c 89 ea             	mov    %r13,%rdx
   31a0d:	4c 89 f6             	mov    %r14,%rsi
   31a10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31a13: R_X86_64_32S	.rodata.str1.1+0x321c
   31a17:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   31a1e:	e8 00 00 00 00       	callq  31a23 <__MARSH_WRAP__e1000_down+0x9d7d>
			31a1f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31a23:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31a2a:	00 
   31a2b:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   31a2f:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   31a33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31a36: R_X86_64_32S	.rodata.str1.1+0x321c
   31a3a:	48 89 da             	mov    %rbx,%rdx
   31a3d:	4c 89 ee             	mov    %r13,%rsi
   31a40:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   31a47:	e8 00 00 00 00       	callq  31a4c <__MARSH_WRAP__e1000_down+0x9da6>
			31a48: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31a4c:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31a53:	00 
   31a54:	48 89 da             	mov    %rbx,%rdx
   31a57:	4c 89 ee             	mov    %r13,%rsi
   31a5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31a5d: R_X86_64_32S	.rodata.str1.1+0x321c
   31a61:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   31a68:	e8 00 00 00 00       	callq  31a6d <__MARSH_WRAP__e1000_down+0x9dc7>
			31a69: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31a6d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31a74:	00 
   31a75:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   31a7c:	48 85 c0             	test   %rax,%rax
   31a7f:	74 3b                	je     31abc <__MARSH_WRAP__e1000_down+0x9e16>
   31a81:	48 8d 48 60          	lea    0x60(%rax),%rcx
   31a85:	48 89 da             	mov    %rbx,%rdx
   31a88:	4c 89 ee             	mov    %r13,%rsi
   31a8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31a8e: R_X86_64_32S	.rodata.str1.1+0x321c
   31a92:	e8 00 00 00 00       	callq  31a97 <__MARSH_WRAP__e1000_down+0x9df1>
			31a93: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31a97:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31a9e:	00 
   31a9f:	48 89 da             	mov    %rbx,%rdx
   31aa2:	4c 89 ee             	mov    %r13,%rsi
   31aa5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31aa8: R_X86_64_32S	.rodata.str1.1+0x321c
   31aac:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   31ab3:	48 83 c1 58          	add    $0x58,%rcx
   31ab7:	e8 00 00 00 00       	callq  31abc <__MARSH_WRAP__e1000_down+0x9e16>
			31ab8: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31abc:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31ac3:	00 
   31ac4:	48 89 da             	mov    %rbx,%rdx
   31ac7:	4c 89 ee             	mov    %r13,%rsi
   31aca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31acd: R_X86_64_32S	.rodata.str1.1+0x321c
   31ad1:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   31ad8:	e8 00 00 00 00       	callq  31add <__MARSH_WRAP__e1000_down+0x9e37>
			31ad9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31add:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31ae4:	00 
   31ae5:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   31aec:	48 85 c0             	test   %rax,%rax
   31aef:	74 41                	je     31b32 <__MARSH_WRAP__e1000_down+0x9e8c>
   31af1:	48 8d 48 10          	lea    0x10(%rax),%rcx
   31af5:	48 89 da             	mov    %rbx,%rdx
   31af8:	4c 89 ee             	mov    %r13,%rsi
   31afb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31afe: R_X86_64_32S	.rodata.str1.1+0x321c
   31b02:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31b08:	e8 00 00 00 00       	callq  31b0d <__MARSH_WRAP__e1000_down+0x9e67>
			31b09: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31b0d:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31b14:	00 
   31b15:	48 89 da             	mov    %rbx,%rdx
   31b18:	4c 89 ee             	mov    %r13,%rsi
   31b1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31b1e: R_X86_64_32S	.rodata.str1.1+0x321c
   31b22:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   31b29:	48 83 c1 08          	add    $0x8,%rcx
   31b2d:	e8 00 00 00 00       	callq  31b32 <__MARSH_WRAP__e1000_down+0x9e8c>
			31b2e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31b32:	49 8b 8c 24 78 01 00 	mov    0x178(%r12),%rcx
   31b39:	00 
   31b3a:	48 89 da             	mov    %rbx,%rdx
   31b3d:	4c 89 ee             	mov    %r13,%rsi
   31b40:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31b43: R_X86_64_32S	.rodata.str1.1+0x321c
   31b47:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   31b4e:	e8 00 00 00 00       	callq  31b53 <__MARSH_WRAP__e1000_down+0x9ead>
			31b4f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31b53:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31b5a:	00 
   31b5b:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   31b62:	00 
   31b63:	74 62                	je     31bc7 <__MARSH_WRAP__e1000_down+0x9f21>
   31b65:	31 db                	xor    %ebx,%ebx
   31b67:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31b6e:	00 
   31b6f:	4c 8d 6d d4          	lea    0xffffffffffffffd4(%rbp),%r13
   31b73:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
   31b77:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31b7d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31b80: R_X86_64_32S	.rodata.str1.1+0x321c
   31b84:	4c 89 ea             	mov    %r13,%rdx
   31b87:	4c 89 f6             	mov    %r14,%rsi
   31b8a:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   31b91:	48 83 c1 08          	add    $0x8,%rcx
   31b95:	48 01 d9             	add    %rbx,%rcx
   31b98:	48 ff c3             	inc    %rbx
   31b9b:	e8 00 00 00 00       	callq  31ba0 <__MARSH_WRAP__e1000_down+0x9efa>
			31b9c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31ba0:	48 83 fb 20          	cmp    $0x20,%rbx
   31ba4:	75 c1                	jne    31b67 <__MARSH_WRAP__e1000_down+0x9ec1>
   31ba6:	49 8b 84 24 78 01 00 	mov    0x178(%r12),%rax
   31bad:	00 
   31bae:	4c 89 ea             	mov    %r13,%rdx
   31bb1:	4c 89 f6             	mov    %r14,%rsi
   31bb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31bb7: R_X86_64_32S	.rodata.str1.1+0x321c
   31bbb:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   31bc2:	e8 00 00 00 00       	callq  31bc7 <__MARSH_WRAP__e1000_down+0x9f21>
			31bc3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31bc7:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   31bcb:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   31bcf:	49 8d 8c 24 b0 00 00 	lea    0xb0(%r12),%rcx
   31bd6:	00 
   31bd7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31bda: R_X86_64_32S	.rodata.str1.1+0x321c
   31bde:	48 89 da             	mov    %rbx,%rdx
   31be1:	4c 89 ee             	mov    %r13,%rsi
   31be4:	e8 00 00 00 00       	callq  31be9 <__MARSH_WRAP__e1000_down+0x9f43>
			31be5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31be9:	49 8d 8c 24 b0 01 00 	lea    0x1b0(%r12),%rcx
   31bf0:	00 
   31bf1:	48 89 da             	mov    %rbx,%rdx
   31bf4:	4c 89 ee             	mov    %r13,%rsi
   31bf7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31bfa: R_X86_64_32S	.rodata.str1.1+0x321c
   31bfe:	e8 00 00 00 00       	callq  31c03 <__MARSH_WRAP__e1000_down+0x9f5d>
			31bff: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31c03:	49 8b 8c 24 b0 01 00 	mov    0x1b0(%r12),%rcx
   31c0a:	00 
   31c0b:	48 85 c9             	test   %rcx,%rcx
   31c0e:	74 18                	je     31c28 <__MARSH_WRAP__e1000_down+0x9f82>
   31c10:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31c16:	48 89 da             	mov    %rbx,%rdx
   31c19:	4c 89 ee             	mov    %r13,%rsi
   31c1c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31c1f: R_X86_64_32S	.rodata.str1.1+0x321c
   31c23:	e8 00 00 00 00       	callq  31c28 <__MARSH_WRAP__e1000_down+0x9f82>
			31c24: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31c28:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31c2c:	48 89 da             	mov    %rbx,%rdx
   31c2f:	4c 89 ee             	mov    %r13,%rsi
   31c32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31c35: R_X86_64_32S	.rodata.str1.1+0x321c
   31c39:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31c3f:	48 8b 88 f8 02 00 00 	mov    0x2f8(%rax),%rcx
   31c46:	48 83 c1 3c          	add    $0x3c,%rcx
   31c4a:	e8 00 00 00 00       	callq  31c4f <__MARSH_WRAP__e1000_down+0x9fa9>
			31c4b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31c4f:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31c53:	48 89 da             	mov    %rbx,%rdx
   31c56:	4c 89 ee             	mov    %r13,%rsi
   31c59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31c5c: R_X86_64_32S	.rodata.str1.1+0x321c
   31c60:	48 8b 88 f8 02 00 00 	mov    0x2f8(%rax),%rcx
   31c67:	48 83 c1 10          	add    $0x10,%rcx
   31c6b:	e8 00 00 00 00       	callq  31c70 <__MARSH_WRAP__e1000_down+0x9fca>
			31c6c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31c70:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   31c74:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   31c78:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   31c7c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31c7f: R_X86_64_32S	.rodata.str1.1+0x321c
   31c83:	4c 89 e2             	mov    %r12,%rdx
   31c86:	4c 89 ee             	mov    %r13,%rsi
   31c89:	48 81 c1 b0 01 00 00 	add    $0x1b0,%rcx
   31c90:	e8 00 00 00 00       	callq  31c95 <__MARSH_WRAP__e1000_down+0x9fef>
			31c91: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31c95:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31c99:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31ca0:	48 85 c0             	test   %rax,%rax
   31ca3:	0f 84 67 06 00 00    	je     32310 <__MARSH_WRAP__e1000_down+0xa66a>
   31ca9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   31cad:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31cb3:	4c 89 e2             	mov    %r12,%rdx
   31cb6:	4c 89 ee             	mov    %r13,%rsi
   31cb9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31cbc: R_X86_64_32S	.rodata.str1.1+0x321c
   31cc0:	e8 00 00 00 00       	callq  31cc5 <__MARSH_WRAP__e1000_down+0xa01f>
			31cc1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31cc5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31cc9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31ccf:	4c 89 e2             	mov    %r12,%rdx
   31cd2:	4c 89 ee             	mov    %r13,%rsi
   31cd5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31cd8: R_X86_64_32S	.rodata.str1.1+0x321c
   31cdc:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31ce3:	48 83 c1 14          	add    $0x14,%rcx
   31ce7:	e8 00 00 00 00       	callq  31cec <__MARSH_WRAP__e1000_down+0xa046>
			31ce8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31cec:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31cf0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31cf6:	4c 89 e2             	mov    %r12,%rdx
   31cf9:	4c 89 ee             	mov    %r13,%rsi
   31cfc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31cff: R_X86_64_32S	.rodata.str1.1+0x321c
   31d03:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31d0a:	48 83 c1 18          	add    $0x18,%rcx
   31d0e:	e8 00 00 00 00       	callq  31d13 <__MARSH_WRAP__e1000_down+0xa06d>
			31d0f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31d13:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31d17:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31d1d:	4c 89 e2             	mov    %r12,%rdx
   31d20:	4c 89 ee             	mov    %r13,%rsi
   31d23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31d26: R_X86_64_32S	.rodata.str1.1+0x321c
   31d2a:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31d31:	48 83 c1 5c          	add    $0x5c,%rcx
   31d35:	e8 00 00 00 00       	callq  31d3a <__MARSH_WRAP__e1000_down+0xa094>
			31d36: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31d3a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31d3e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31d44:	4c 89 e2             	mov    %r12,%rdx
   31d47:	4c 89 ee             	mov    %r13,%rsi
   31d4a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31d4d: R_X86_64_32S	.rodata.str1.1+0x321c
   31d51:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31d58:	48 83 c1 10          	add    $0x10,%rcx
   31d5c:	e8 00 00 00 00       	callq  31d61 <__MARSH_WRAP__e1000_down+0xa0bb>
			31d5d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31d61:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31d65:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31d6b:	4c 89 e2             	mov    %r12,%rdx
   31d6e:	4c 89 ee             	mov    %r13,%rsi
   31d71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31d74: R_X86_64_32S	.rodata.str1.1+0x321c
   31d78:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31d7f:	48 83 c1 5a          	add    $0x5a,%rcx
   31d83:	e8 00 00 00 00       	callq  31d88 <__MARSH_WRAP__e1000_down+0xa0e2>
			31d84: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31d88:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31d8c:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31d92:	4c 89 e2             	mov    %r12,%rdx
   31d95:	4c 89 ee             	mov    %r13,%rsi
   31d98:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31d9b: R_X86_64_32S	.rodata.str1.1+0x321c
   31d9f:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31da6:	48 83 c1 58          	add    $0x58,%rcx
   31daa:	e8 00 00 00 00       	callq  31daf <__MARSH_WRAP__e1000_down+0xa109>
			31dab: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31daf:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31db3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31db9:	4c 89 e2             	mov    %r12,%rdx
   31dbc:	4c 89 ee             	mov    %r13,%rsi
   31dbf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31dc2: R_X86_64_32S	.rodata.str1.1+0x321c
   31dc6:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31dcd:	48 83 c1 1c          	add    $0x1c,%rcx
   31dd1:	e8 00 00 00 00       	callq  31dd6 <__MARSH_WRAP__e1000_down+0xa130>
			31dd2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31dd6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31dda:	4c 89 e2             	mov    %r12,%rdx
   31ddd:	4c 89 ee             	mov    %r13,%rsi
   31de0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31de3: R_X86_64_32S	.rodata.str1.1+0x321c
   31de7:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   31dee:	48 83 c1 20          	add    $0x20,%rcx
   31df2:	e8 00 00 00 00       	callq  31df7 <__MARSH_WRAP__e1000_down+0xa151>
			31df3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31df7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31dfb:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31e02:	48 8b 40 20          	mov    0x20(%rax),%rax
   31e06:	48 85 c0             	test   %rax,%rax
   31e09:	0f 84 05 04 00 00    	je     32214 <__MARSH_WRAP__e1000_down+0xa56e>
   31e0f:	48 8d 48 18          	lea    0x18(%rax),%rcx
   31e13:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31e19:	4c 89 e2             	mov    %r12,%rdx
   31e1c:	4c 89 ee             	mov    %r13,%rsi
   31e1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31e22: R_X86_64_32S	.rodata.str1.1+0x321c
   31e26:	e8 00 00 00 00       	callq  31e2b <__MARSH_WRAP__e1000_down+0xa185>
			31e27: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31e2b:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31e2f:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31e35:	4c 89 e2             	mov    %r12,%rdx
   31e38:	4c 89 ee             	mov    %r13,%rsi
   31e3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31e3e: R_X86_64_32S	.rodata.str1.1+0x321c
   31e42:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31e49:	48 8b 48 20          	mov    0x20(%rax),%rcx
   31e4d:	48 83 c1 10          	add    $0x10,%rcx
   31e51:	e8 00 00 00 00       	callq  31e56 <__MARSH_WRAP__e1000_down+0xa1b0>
			31e52: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31e56:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31e5a:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31e60:	4c 89 e2             	mov    %r12,%rdx
   31e63:	4c 89 ee             	mov    %r13,%rsi
   31e66:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31e69: R_X86_64_32S	.rodata.str1.1+0x321c
   31e6d:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31e74:	48 8b 48 20          	mov    0x20(%rax),%rcx
   31e78:	48 83 c1 1a          	add    $0x1a,%rcx
   31e7c:	e8 00 00 00 00       	callq  31e81 <__MARSH_WRAP__e1000_down+0xa1db>
			31e7d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31e81:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31e85:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   31e8b:	4c 89 e2             	mov    %r12,%rdx
   31e8e:	4c 89 ee             	mov    %r13,%rsi
   31e91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31e94: R_X86_64_32S	.rodata.str1.1+0x321c
   31e98:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31e9f:	48 8b 48 20          	mov    0x20(%rax),%rcx
   31ea3:	48 83 c1 08          	add    $0x8,%rcx
   31ea7:	e8 00 00 00 00       	callq  31eac <__MARSH_WRAP__e1000_down+0xa206>
			31ea8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31eac:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31eb0:	4c 89 e2             	mov    %r12,%rdx
   31eb3:	4c 89 ee             	mov    %r13,%rsi
   31eb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31eb9: R_X86_64_32S	.rodata.str1.1+0x321c
   31ebd:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31ec4:	48 8b 48 20          	mov    0x20(%rax),%rcx
   31ec8:	e8 00 00 00 00       	callq  31ecd <__MARSH_WRAP__e1000_down+0xa227>
			31ec9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   31ecd:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31ed1:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31ed8:	48 8b 40 20          	mov    0x20(%rax),%rax
   31edc:	48 8b 00             	mov    (%rax),%rax
   31edf:	48 85 c0             	test   %rax,%rax
   31ee2:	0f 84 2c 03 00 00    	je     32214 <__MARSH_WRAP__e1000_down+0xa56e>
   31ee8:	8a 40 7d             	mov    0x7d(%rax),%al
   31eeb:	48 8d 5d d0          	lea    0xffffffffffffffd0(%rbp),%rbx
   31eef:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31ef5:	4c 89 e2             	mov    %r12,%rdx
   31ef8:	4c 89 ee             	mov    %r13,%rsi
   31efb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31efe: R_X86_64_32S	.rodata.str1.1+0x321c
   31f02:	48 89 d9             	mov    %rbx,%rcx
   31f05:	83 e0 07             	and    $0x7,%eax
   31f08:	0f b6 c0             	movzbl %al,%eax
   31f0b:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   31f0e:	e8 00 00 00 00       	callq  31f13 <__MARSH_WRAP__e1000_down+0xa26d>
			31f0f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31f13:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31f17:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31f1d:	4c 89 e2             	mov    %r12,%rdx
   31f20:	4c 89 ee             	mov    %r13,%rsi
   31f23:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31f26: R_X86_64_32S	.rodata.str1.1+0x321c
   31f2a:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31f31:	48 8b 40 20          	mov    0x20(%rax),%rax
   31f35:	48 8b 08             	mov    (%rax),%rcx
   31f38:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   31f3f:	e8 00 00 00 00       	callq  31f44 <__MARSH_WRAP__e1000_down+0xa29e>
			31f40: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31f44:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31f48:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31f4e:	4c 89 e2             	mov    %r12,%rdx
   31f51:	4c 89 ee             	mov    %r13,%rsi
   31f54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31f57: R_X86_64_32S	.rodata.str1.1+0x321c
   31f5b:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31f62:	48 8b 40 20          	mov    0x20(%rax),%rax
   31f66:	48 8b 08             	mov    (%rax),%rcx
   31f69:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   31f70:	e8 00 00 00 00       	callq  31f75 <__MARSH_WRAP__e1000_down+0xa2cf>
			31f71: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31f75:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31f79:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31f7f:	48 89 d9             	mov    %rbx,%rcx
   31f82:	4c 89 e2             	mov    %r12,%rdx
   31f85:	4c 89 ee             	mov    %r13,%rsi
   31f88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31f8b: R_X86_64_32S	.rodata.str1.1+0x321c
   31f8f:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31f96:	48 8b 40 20          	mov    0x20(%rax),%rax
   31f9a:	48 8b 00             	mov    (%rax),%rax
   31f9d:	8a 40 7c             	mov    0x7c(%rax),%al
   31fa0:	c0 e8 02             	shr    $0x2,%al
   31fa3:	83 e0 03             	and    $0x3,%eax
   31fa6:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   31fa9:	e8 00 00 00 00       	callq  31fae <__MARSH_WRAP__e1000_down+0xa308>
			31faa: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31fae:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31fb2:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31fb8:	4c 89 e2             	mov    %r12,%rdx
   31fbb:	4c 89 ee             	mov    %r13,%rsi
   31fbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31fc1: R_X86_64_32S	.rodata.str1.1+0x321c
   31fc5:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31fcc:	48 8b 40 20          	mov    0x20(%rax),%rax
   31fd0:	48 8b 08             	mov    (%rax),%rcx
   31fd3:	48 83 c1 6c          	add    $0x6c,%rcx
   31fd7:	e8 00 00 00 00       	callq  31fdc <__MARSH_WRAP__e1000_down+0xa336>
			31fd8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   31fdc:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   31fe0:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31fe6:	4c 89 e2             	mov    %r12,%rdx
   31fe9:	4c 89 ee             	mov    %r13,%rsi
   31fec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31fef: R_X86_64_32S	.rodata.str1.1+0x321c
   31ff3:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   31ffa:	48 8b 40 20          	mov    0x20(%rax),%rax
   31ffe:	48 8b 08             	mov    (%rax),%rcx
   32001:	48 83 c1 74          	add    $0x74,%rcx
   32005:	e8 00 00 00 00       	callq  3200a <__MARSH_WRAP__e1000_down+0xa364>
			32006: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3200a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3200e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   32014:	4c 89 e2             	mov    %r12,%rdx
   32017:	4c 89 ee             	mov    %r13,%rsi
   3201a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3201d: R_X86_64_32S	.rodata.str1.1+0x321c
   32021:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32028:	48 8b 40 20          	mov    0x20(%rax),%rax
   3202c:	48 8b 08             	mov    (%rax),%rcx
   3202f:	48 83 c1 68          	add    $0x68,%rcx
   32033:	e8 00 00 00 00       	callq  32038 <__MARSH_WRAP__e1000_down+0xa392>
			32034: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   32038:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3203c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   32042:	4c 89 e2             	mov    %r12,%rdx
   32045:	4c 89 ee             	mov    %r13,%rsi
   32048:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3204b: R_X86_64_32S	.rodata.str1.1+0x321c
   3204f:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32056:	48 8b 40 20          	mov    0x20(%rax),%rax
   3205a:	48 8b 08             	mov    (%rax),%rcx
   3205d:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   32064:	e8 00 00 00 00       	callq  32069 <__MARSH_WRAP__e1000_down+0xa3c3>
			32065: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   32069:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3206d:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   32073:	4c 89 e2             	mov    %r12,%rdx
   32076:	4c 89 ee             	mov    %r13,%rsi
   32079:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3207c: R_X86_64_32S	.rodata.str1.1+0x321c
   32080:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32087:	48 8b 40 20          	mov    0x20(%rax),%rax
   3208b:	48 8b 08             	mov    (%rax),%rcx
   3208e:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   32095:	e8 00 00 00 00       	callq  3209a <__MARSH_WRAP__e1000_down+0xa3f4>
			32096: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3209a:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3209e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   320a4:	4c 89 e2             	mov    %r12,%rdx
   320a7:	4c 89 ee             	mov    %r13,%rsi
   320aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			320ad: R_X86_64_32S	.rodata.str1.1+0x321c
   320b1:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   320b8:	48 8b 40 20          	mov    0x20(%rax),%rax
   320bc:	48 8b 08             	mov    (%rax),%rcx
   320bf:	48 83 c1 7e          	add    $0x7e,%rcx
   320c3:	e8 00 00 00 00       	callq  320c8 <__MARSH_WRAP__e1000_down+0xa422>
			320c4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   320c8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   320cc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   320d2:	4c 89 e2             	mov    %r12,%rdx
   320d5:	4c 89 ee             	mov    %r13,%rsi
   320d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			320db: R_X86_64_32S	.rodata.str1.1+0x321c
   320df:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   320e6:	48 8b 40 20          	mov    0x20(%rax),%rax
   320ea:	48 8b 08             	mov    (%rax),%rcx
   320ed:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   320f4:	e8 00 00 00 00       	callq  320f9 <__MARSH_WRAP__e1000_down+0xa453>
			320f5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   320f9:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   320fd:	4c 89 e2             	mov    %r12,%rdx
   32100:	4c 89 ee             	mov    %r13,%rsi
   32103:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32106: R_X86_64_32S	.rodata.str1.1+0x321c
   3210a:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32111:	48 8b 40 20          	mov    0x20(%rax),%rax
   32115:	48 8b 08             	mov    (%rax),%rcx
   32118:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   3211f:	e8 00 00 00 00       	callq  32124 <__MARSH_WRAP__e1000_down+0xa47e>
			32120: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   32124:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   32128:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   3212f:	48 8b 40 20          	mov    0x20(%rax),%rax
   32133:	48 8b 00             	mov    (%rax),%rax
   32136:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   3213d:	00 
   3213e:	74 6b                	je     321ab <__MARSH_WRAP__e1000_down+0xa505>
   32140:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   32146:	31 db                	xor    %ebx,%ebx
   32148:	e8 00 00 00 00       	callq  3214d <__MARSH_WRAP__e1000_down+0xa4a7>
			32149: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   3214d:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   32151:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   32157:	4c 89 e2             	mov    %r12,%rdx
   3215a:	4c 89 ee             	mov    %r13,%rsi
   3215d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32160: R_X86_64_32S	.rodata.str1.1+0x321c
   32164:	89 45 c0             	mov    %eax,0xffffffffffffffc0(%rbp)
   32167:	e8 00 00 00 00       	callq  3216c <__MARSH_WRAP__e1000_down+0xa4c6>
			32168: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3216c:	eb 38                	jmp    321a6 <__MARSH_WRAP__e1000_down+0xa500>
   3216e:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   32172:	48 63 cb             	movslq %ebx,%rcx
   32175:	48 8d 55 d4          	lea    0xffffffffffffffd4(%rbp),%rdx
   32179:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   3217d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   32183:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32186: R_X86_64_32S	.rodata.str1.1+0x321c
   3218a:	ff c3                	inc    %ebx
   3218c:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32193:	48 8b 40 20          	mov    0x20(%rax),%rax
   32197:	48 8b 00             	mov    (%rax),%rax
   3219a:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   321a1:	e8 00 00 00 00       	callq  321a6 <__MARSH_WRAP__e1000_down+0xa500>
			321a2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   321a6:	3b 5d c0             	cmp    0xffffffffffffffc0(%rbp),%ebx
   321a9:	7c c3                	jl     3216e <__MARSH_WRAP__e1000_down+0xa4c8>
   321ab:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   321af:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   321b3:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   321b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			321ba: R_X86_64_32S	.rodata.str1.1+0x321c
   321be:	48 89 da             	mov    %rbx,%rdx
   321c1:	4c 89 e6             	mov    %r12,%rsi
   321c4:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   321cb:	48 8b 40 20          	mov    0x20(%rax),%rax
   321cf:	48 8b 08             	mov    (%rax),%rcx
   321d2:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   321d9:	e8 00 00 00 00       	callq  321de <__MARSH_WRAP__e1000_down+0xa538>
			321da: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   321de:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   321e2:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   321e9:	48 8b 40 20          	mov    0x20(%rax),%rax
   321ed:	48 8b 00             	mov    (%rax),%rax
   321f0:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   321f7:	48 85 c9             	test   %rcx,%rcx
   321fa:	74 18                	je     32214 <__MARSH_WRAP__e1000_down+0xa56e>
   321fc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   32202:	48 89 da             	mov    %rbx,%rdx
   32205:	4c 89 e6             	mov    %r12,%rsi
   32208:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3220b: R_X86_64_32S	.rodata.str1.1+0x321c
   3220f:	e8 00 00 00 00       	callq  32214 <__MARSH_WRAP__e1000_down+0xa56e>
			32210: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   32214:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   32218:	48 8d 5d d4          	lea    0xffffffffffffffd4(%rbp),%rbx
   3221c:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   32220:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32223: R_X86_64_32S	.rodata.str1.1+0x321c
   32227:	48 89 da             	mov    %rbx,%rdx
   3222a:	4c 89 e6             	mov    %r12,%rsi
   3222d:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   32234:	e8 00 00 00 00       	callq  32239 <__MARSH_WRAP__e1000_down+0xa593>
			32235: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   32239:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3223d:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32244:	48 8b 00             	mov    (%rax),%rax
   32247:	48 85 c0             	test   %rax,%rax
   3224a:	0f 84 c0 00 00 00    	je     32310 <__MARSH_WRAP__e1000_down+0xa66a>
   32250:	48 8d 48 0e          	lea    0xe(%rax),%rcx
   32254:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3225a:	48 89 da             	mov    %rbx,%rdx
   3225d:	4c 89 e6             	mov    %r12,%rsi
   32260:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32263: R_X86_64_32S	.rodata.str1.1+0x321c
   32267:	e8 00 00 00 00       	callq  3226c <__MARSH_WRAP__e1000_down+0xa5c6>
			32268: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3226c:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   32270:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   32276:	48 89 da             	mov    %rbx,%rdx
   32279:	4c 89 e6             	mov    %r12,%rsi
   3227c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3227f: R_X86_64_32S	.rodata.str1.1+0x321c
   32283:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   3228a:	48 8b 08             	mov    (%rax),%rcx
   3228d:	48 83 c1 0d          	add    $0xd,%rcx
   32291:	e8 00 00 00 00       	callq  32296 <__MARSH_WRAP__e1000_down+0xa5f0>
			32292: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   32296:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3229a:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   322a0:	48 89 da             	mov    %rbx,%rdx
   322a3:	4c 89 e6             	mov    %r12,%rsi
   322a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			322a9: R_X86_64_32S	.rodata.str1.1+0x321c
   322ad:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   322b4:	48 8b 08             	mov    (%rax),%rcx
   322b7:	48 83 c1 0a          	add    $0xa,%rcx
   322bb:	e8 00 00 00 00       	callq  322c0 <__MARSH_WRAP__e1000_down+0xa61a>
			322bc: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   322c0:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   322c4:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   322ca:	48 89 da             	mov    %rbx,%rdx
   322cd:	4c 89 e6             	mov    %r12,%rsi
   322d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			322d3: R_X86_64_32S	.rodata.str1.1+0x321c
   322d7:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   322de:	48 8b 08             	mov    (%rax),%rcx
   322e1:	e8 00 00 00 00       	callq  322e6 <__MARSH_WRAP__e1000_down+0xa640>
			322e2: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   322e6:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   322ea:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   322f0:	48 89 da             	mov    %rbx,%rdx
   322f3:	4c 89 e6             	mov    %r12,%rsi
   322f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			322f9: R_X86_64_32S	.rodata.str1.1+0x321c
   322fd:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
   32304:	48 8b 08             	mov    (%rax),%rcx
   32307:	48 83 c1 0c          	add    $0xc,%rcx
   3230b:	e8 00 00 00 00       	callq  32310 <__MARSH_WRAP__e1000_down+0xa66a>
			3230c: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   32310:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   32314:	48 8b 55 98          	mov    0xffffffffffffff98(%rbp),%rdx
   32318:	48 89 02             	mov    %rax,(%rdx)
   3231b:	8b 45 d4             	mov    0xffffffffffffffd4(%rbp),%eax
   3231e:	89 42 08             	mov    %eax,0x8(%rdx)
   32321:	48 83 c4 68          	add    $0x68,%rsp
   32325:	5b                   	pop    %rbx
   32326:	41 5c                	pop    %r12
   32328:	41 5d                	pop    %r13
   3232a:	41 5e                	pop    %r14
   3232c:	41 5f                	pop    %r15
   3232e:	c9                   	leaveq 
   3232f:	c3                   	retq   

0000000000032330 <disp_user>:
   32330:	55                   	push   %rbp
   32331:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32334: R_X86_64_32S	.rodata.str1.1+0x3259
   32338:	48 89 e5             	mov    %rsp,%rbp
   3233b:	53                   	push   %rbx
   3233c:	48 89 f3             	mov    %rsi,%rbx
   3233f:	48 83 ec 18          	sub    $0x18,%rsp
   32343:	e8 00 00 00 00       	callq  32348 <disp_user+0x18>
			32344: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32348:	48 8b 13             	mov    (%rbx),%rdx
   3234b:	48 c7 45 e0 00 00 00 	movq   $0x0,0xffffffffffffffe0(%rbp)
   32352:	00 
   32353:	48 81 fa c3 04 00 00 	cmp    $0x4c3,%rdx
   3235a:	75 0f                	jne    3236b <disp_user+0x3b>
   3235c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   32360:	48 8d 75 e0          	lea    0xffffffffffffffe0(%rbp),%rsi
   32364:	e8 00 00 00 00       	callq  32369 <disp_user+0x39>
			32365: R_X86_64_PC32	__MARSH_WRAP__e1000_down+0xfffffffffffffffc
   32369:	eb 1b                	jmp    32386 <disp_user+0x56>
   3236b:	48 81 fa 72 05 00 00 	cmp    $0x572,%rdx
   32372:	b8 01 00 00 00       	mov    $0x1,%eax
   32377:	75 1d                	jne    32396 <disp_user+0x66>
   32379:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   3237d:	48 8d 75 e0          	lea    0xffffffffffffffe0(%rbp),%rsi
   32381:	e8 00 00 00 00       	callq  32386 <disp_user+0x56>
			32382: R_X86_64_PC32	__MARSH_WRAP__e1000_set_spd_dplx+0xfffffffffffffffc
   32386:	48 8b 45 e0          	mov    0xffffffffffffffe0(%rbp),%rax
   3238a:	48 89 43 10          	mov    %rax,0x10(%rbx)
   3238e:	8b 45 e8             	mov    0xffffffffffffffe8(%rbp),%eax
   32391:	89 43 08             	mov    %eax,0x8(%rbx)
   32394:	31 c0                	xor    %eax,%eax
   32396:	48 83 c4 18          	add    $0x18,%rsp
   3239a:	5b                   	pop    %rbx
   3239b:	c9                   	leaveq 
   3239c:	c3                   	retq   

000000000003239d <e1000_suspend>:
   3239d:	55                   	push   %rbp
   3239e:	48 89 e5             	mov    %rsp,%rbp
   323a1:	41 57                	push   %r15
   323a3:	41 56                	push   %r14
   323a5:	41 55                	push   %r13
   323a7:	41 54                	push   %r12
   323a9:	53                   	push   %rbx
   323aa:	48 83 ec 58          	sub    $0x58,%rsp
   323ae:	48 89 7d 80          	mov    %rdi,0xffffffffffffff80(%rbp)
   323b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			323b5: R_X86_64_32S	.rodata.str1.1+0x3263
   323b9:	e8 00 00 00 00       	callq  323be <e1000_suspend+0x21>
			323ba: R_X86_64_PC32	record_function+0xfffffffffffffffc
   323be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			323c1: R_X86_64_32S	.rodata.str1.1+0x2d9d
   323c5:	e8 00 00 00 00       	callq  323ca <e1000_suspend+0x2d>
			323c6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   323ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			323cd: R_X86_64_32S	.rodata.str1.1+0x2dad
   323d1:	e8 00 00 00 00       	callq  323d6 <e1000_suspend+0x39>
			323d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   323d6:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   323da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			323dd: R_X86_64_32S	.rodata.str1.1+0x1be
   323e1:	48 8b 80 f8 01 00 00 	mov    0x1f8(%rax),%rax
   323e8:	48 89 45 88          	mov    %rax,0xffffffffffffff88(%rbp)
   323ec:	e8 00 00 00 00       	callq  323f1 <e1000_suspend+0x54>
			323ed: R_X86_64_PC32	record_function+0xfffffffffffffffc
   323f1:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   323f5:	48 8b 7d 88          	mov    0xffffffffffffff88(%rbp),%rdi
   323f9:	4c 8b 7d 88          	mov    0xffffffffffffff88(%rbp),%r15
   323fd:	48 05 00 08 00 00    	add    $0x800,%rax
   32403:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   32407:	44 8b b0 a4 00 00 00 	mov    0xa4(%rax),%r14d
   3240e:	49 81 c7 b8 0b 00 00 	add    $0xbb8,%r15
   32415:	e8 6a 79 fd ff       	callq  9d84 <netif_device_detach>
   3241a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3241d: R_X86_64_32S	.rodata.str1.1+0x15c6
   32421:	e8 00 00 00 00       	callq  32426 <e1000_suspend+0x89>
			32422: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32426:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32429: R_X86_64_32S	.rodata.str1.1+0x15d4
   3242d:	e8 00 00 00 00       	callq  32432 <e1000_suspend+0x95>
			3242e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32432:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   32436:	f6 40 48 01          	testb  $0x1,0x48(%rax)
   3243a:	74 37                	je     32473 <e1000_suspend+0xd6>
   3243c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3243f: R_X86_64_32S	.rodata.str1.1+0x15d4
   32443:	e8 00 00 00 00       	callq  32448 <e1000_suspend+0xab>
			32444: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32448:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3244c:	f6 80 c8 0f 00 00 02 	testb  $0x2,0xfc8(%rax)
   32453:	74 15                	je     3246a <e1000_suspend+0xcd>
   32455:	31 d2                	xor    %edx,%edx
   32457:	be 4b 12 00 00       	mov    $0x124b,%esi
   3245c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3245f: R_X86_64_32S	str_888237591
   32463:	31 c0                	xor    %eax,%eax
   32465:	e8 00 00 00 00       	callq  3246a <e1000_suspend+0xcd>
			32466: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   3246a:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   3246e:	e8 00 00 00 00       	callq  32473 <e1000_suspend+0xd6>
			3246f: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   32473:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32476: R_X86_64_32S	.rodata.str1.1+0x3271
   3247a:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
   3247e:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   32482:	e8 00 00 00 00       	callq  32487 <e1000_suspend+0xea>
			32483: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32487:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   3248b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3248e: R_X86_64_32S	.rodata.str1.1+0x3280
   32492:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   32499:	00 
   3249a:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   324a1:	00 
   324a2:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   324a9:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   324ad:	e8 00 00 00 00       	callq  324b2 <e1000_suspend+0x115>
			324ae: R_X86_64_PC32	record_function+0xfffffffffffffffc
   324b2:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   324b6:	4c 89 e1             	mov    %r12,%rcx
   324b9:	4c 89 ee             	mov    %r13,%rsi
   324bc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			324bf: R_X86_64_32S	.rodata.str1.1+0x3271
   324c3:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   324ca:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   324d1:	00 
   324d2:	e8 00 00 00 00       	callq  324d7 <e1000_suspend+0x13a>
			324d3: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   324d7:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   324db:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   324df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			324e2: R_X86_64_32S	.rodata.str1.1+0x3271
   324e6:	48 c7 45 a0 20 06 00 	movq   $0x620,0xffffffffffffffa0(%rbp)
   324ed:	00 
   324ee:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   324f2:	8b 45 c0             	mov    0xffffffffffffffc0(%rbp),%eax
   324f5:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   324f8:	e8 00 00 00 00       	callq  324fd <e1000_suspend+0x160>
			324f9: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   324fd:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   32501:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32504: R_X86_64_32S	.rodata.str1.1+0x329d
   32508:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   3250c:	e8 00 00 00 00       	callq  32511 <e1000_suspend+0x174>
			3250d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32511:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   32515:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   3251b:	4c 89 e9             	mov    %r13,%rcx
   3251e:	4c 89 e2             	mov    %r12,%rdx
   32521:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32524: R_X86_64_32S	.rodata.str1.1+0x3271
   32528:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   3252f:	48 89 de             	mov    %rbx,%rsi
   32532:	e8 00 00 00 00       	callq  32537 <e1000_suspend+0x19a>
			32533: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   32537:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   3253b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3253e: R_X86_64_32S	.rodata.str1.1+0x3271
   32542:	b9 04 00 00 00       	mov    $0x4,%ecx
   32547:	4c 89 e2             	mov    %r12,%rdx
   3254a:	48 89 de             	mov    %rbx,%rsi
   3254d:	e8 00 00 00 00       	callq  32552 <e1000_suspend+0x1b5>
			3254e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   32552:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   32556:	8b 45 c0             	mov    0xffffffffffffffc0(%rbp),%eax
   32559:	48 85 ff             	test   %rdi,%rdi
   3255c:	89 45 9c             	mov    %eax,0xffffffffffffff9c(%rbp)
   3255f:	74 0d                	je     3256e <e1000_suspend+0x1d1>
   32561:	e8 00 00 00 00       	callq  32566 <e1000_suspend+0x1c9>
			32562: R_X86_64_PC32	kfree+0xfffffffffffffffc
   32566:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   3256d:	00 
   3256e:	83 7d 9c 00          	cmpl   $0x0,0xffffffffffffff9c(%rbp)
   32572:	0f 85 e9 03 00 00    	jne    32961 <e1000_suspend+0x5c4>
   32578:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3257b: R_X86_64_32S	.rodata.str1.1+0xae
   3257f:	49 8b 1f             	mov    (%r15),%rbx
   32582:	e8 00 00 00 00       	callq  32587 <e1000_suspend+0x1ea>
			32583: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32587:	8b 43 08             	mov    0x8(%rbx),%eax
   3258a:	44 89 f2             	mov    %r14d,%edx
   3258d:	83 e2 fe             	and    $0xfffffffffffffffe,%edx
   32590:	a8 02                	test   $0x2,%al
   32592:	44 0f 45 f2          	cmovne %edx,%r14d
   32596:	45 85 f6             	test   %r14d,%r14d
   32599:	0f 84 0f 01 00 00    	je     326ae <e1000_suspend+0x311>
   3259f:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   325a3:	e8 ee e8 fc ff       	callq  e96 <e1000_setup_rctl>
   325a8:	48 8b 7d 88          	mov    0xffffffffffffff88(%rbp),%rdi
   325ac:	e8 fe 13 ff ff       	callq  239af <e1000_set_rx_mode>
   325b1:	41 f6 c6 08          	test   $0x8,%r14b
   325b5:	74 33                	je     325ea <e1000_suspend+0x24d>
   325b7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			325ba: R_X86_64_32S	.rodata.str1.1+0xae
   325be:	49 8b 1f             	mov    (%r15),%rbx
   325c1:	e8 00 00 00 00       	callq  325c6 <e1000_suspend+0x229>
			325c2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   325c6:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   325cd:	49 8b 1f             	mov    (%r15),%rbx
   325d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			325d3: R_X86_64_32S	.rodata.str1.1+0xb4
   325d7:	41 83 cc 10          	or     $0x10,%r12d
   325db:	e8 00 00 00 00       	callq  325e0 <e1000_suspend+0x243>
			325dc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   325e0:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   325e7:	44 89 23             	mov    %r12d,(%rbx)
   325ea:	41 83 7f 10 04       	cmpl   $0x4,0x10(%r15)
   325ef:	76 2a                	jbe    3261b <e1000_suspend+0x27e>
   325f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			325f4: R_X86_64_32S	.rodata.str1.1+0xae
   325f8:	49 8b 1f             	mov    (%r15),%rbx
   325fb:	e8 00 00 00 00       	callq  32600 <e1000_suspend+0x263>
			325fc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32600:	8b 1b                	mov    (%rbx),%ebx
   32602:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32605: R_X86_64_32S	.rodata.str1.1+0xb4
   32609:	4d 8b 27             	mov    (%r15),%r12
   3260c:	81 cb 00 00 30 00    	or     $0x300000,%ebx
   32612:	e8 00 00 00 00       	callq  32617 <e1000_suspend+0x27a>
			32613: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32617:	41 89 1c 24          	mov    %ebx,(%r12)
   3261b:	41 8b 47 1c          	mov    0x1c(%r15),%eax
   3261f:	83 f8 01             	cmp    $0x1,%eax
   32622:	74 05                	je     32629 <e1000_suspend+0x28c>
   32624:	83 f8 02             	cmp    $0x2,%eax
   32627:	75 2d                	jne    32656 <e1000_suspend+0x2b9>
   32629:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3262c: R_X86_64_32S	.rodata.str1.1+0xae
   32630:	49 8b 1f             	mov    (%r15),%rbx
   32633:	e8 00 00 00 00       	callq  32638 <e1000_suspend+0x29b>
			32634: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32638:	44 8b 63 18          	mov    0x18(%rbx),%r12d
   3263c:	49 8b 1f             	mov    (%r15),%rbx
   3263f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32642: R_X86_64_32S	.rodata.str1.1+0xb4
   32646:	41 80 cc 80          	or     $0x80,%r12b
   3264a:	e8 00 00 00 00       	callq  3264f <e1000_suspend+0x2b2>
			3264b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3264f:	48 83 c3 18          	add    $0x18,%rbx
   32653:	44 89 23             	mov    %r12d,(%rbx)
   32656:	4c 89 ff             	mov    %r15,%rdi
   32659:	e8 be 2c fd ff       	callq  531c <e1000_disable_pciex_master>
   3265e:	49 8b 1f             	mov    (%r15),%rbx
   32661:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32664: R_X86_64_32S	.rodata.str1.1+0xb4
   32668:	e8 00 00 00 00       	callq  3266d <e1000_suspend+0x2d0>
			32669: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3266d:	b8 02 00 00 00       	mov    $0x2,%eax
   32672:	48 81 c3 00 58 00 00 	add    $0x5800,%rbx
   32679:	89 03                	mov    %eax,(%rbx)
   3267b:	49 8b 1f             	mov    (%r15),%rbx
   3267e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32681: R_X86_64_32S	.rodata.str1.1+0xb4
   32685:	e8 00 00 00 00       	callq  3268a <e1000_suspend+0x2ed>
			32686: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3268a:	48 81 c3 08 58 00 00 	add    $0x5808,%rbx
   32691:	44 89 33             	mov    %r14d,(%rbx)
   32694:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   32698:	ba 01 00 00 00       	mov    $0x1,%edx
   3269d:	be 03 00 00 00       	mov    $0x3,%esi
   326a2:	e8 0b 4c fd ff       	callq  72b2 <pci_enable_wake>
   326a7:	ba 01 00 00 00       	mov    $0x1,%edx
   326ac:	eb 47                	jmp    326f5 <e1000_suspend+0x358>
   326ae:	49 8b 1f             	mov    (%r15),%rbx
   326b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			326b4: R_X86_64_32S	.rodata.str1.1+0xb4
   326b8:	45 31 e4             	xor    %r12d,%r12d
   326bb:	e8 00 00 00 00       	callq  326c0 <e1000_suspend+0x323>
			326bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   326c0:	48 81 c3 00 58 00 00 	add    $0x5800,%rbx
   326c7:	44 89 23             	mov    %r12d,(%rbx)
   326ca:	49 8b 1f             	mov    (%r15),%rbx
   326cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			326d0: R_X86_64_32S	.rodata.str1.1+0xb4
   326d4:	e8 00 00 00 00       	callq  326d9 <e1000_suspend+0x33c>
			326d5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   326d9:	48 81 c3 08 58 00 00 	add    $0x5808,%rbx
   326e0:	44 89 23             	mov    %r12d,(%rbx)
   326e3:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   326e7:	31 d2                	xor    %edx,%edx
   326e9:	be 03 00 00 00       	mov    $0x3,%esi
   326ee:	e8 bf 4b fd ff       	callq  72b2 <pci_enable_wake>
   326f3:	31 d2                	xor    %edx,%edx
   326f5:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   326f9:	be 04 00 00 00       	mov    $0x4,%esi
   326fe:	e8 af 4b fd ff       	callq  72b2 <pci_enable_wake>
   32703:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   32707:	e8 de e8 fc ff       	callq  fea <e1000_release_manageability>
   3270c:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
   32710:	83 b8 ac 00 00 00 00 	cmpl   $0x0,0xac(%rax)
   32717:	74 26                	je     3273f <e1000_suspend+0x3a2>
   32719:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   3271d:	ba 01 00 00 00       	mov    $0x1,%edx
   32722:	be 03 00 00 00       	mov    $0x3,%esi
   32727:	e8 86 4b fd ff       	callq  72b2 <pci_enable_wake>
   3272c:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   32730:	ba 01 00 00 00       	mov    $0x1,%edx
   32735:	be 04 00 00 00       	mov    $0x4,%esi
   3273a:	e8 73 4b fd ff       	callq  72b2 <pci_enable_wake>
   3273f:	41 83 7f 14 04       	cmpl   $0x4,0x14(%r15)
   32744:	0f 85 d5 00 00 00    	jne    3281f <e1000_suspend+0x482>
   3274a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3274d: R_X86_64_32S	.rodata.str1.1+0x32ba
   32751:	e8 00 00 00 00       	callq  32756 <e1000_suspend+0x3b9>
			32752: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32756:	41 83 7f 14 04       	cmpl   $0x4,0x14(%r15)
   3275b:	0f 85 be 00 00 00    	jne    3281f <e1000_suspend+0x482>
   32761:	45 31 ed             	xor    %r13d,%r13d
   32764:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32767: R_X86_64_32S	.rodata.str1.1+0xae
   3276b:	49 8b 1f             	mov    (%r15),%rbx
   3276e:	e8 00 00 00 00       	callq  32773 <e1000_suspend+0x3d6>
			3276f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32773:	44 8b a3 10 0f 00 00 	mov    0xf10(%rbx),%r12d
   3277a:	49 8b 1f             	mov    (%r15),%rbx
   3277d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32780: R_X86_64_32S	.rodata.str1.1+0xb4
   32784:	41 83 cc 48          	or     $0x48,%r12d
   32788:	e8 00 00 00 00       	callq  3278d <e1000_suspend+0x3f0>
			32789: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3278d:	48 81 c3 10 0f 00 00 	add    $0xf10,%rbx
   32794:	44 89 23             	mov    %r12d,(%rbx)
   32797:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
   3279b:	be 12 61 00 00       	mov    $0x6112,%esi
   327a0:	4c 89 ff             	mov    %r15,%rdi
   327a3:	48 89 da             	mov    %rbx,%rdx
   327a6:	e8 2e 39 fd ff       	callq  60d9 <e1000_read_phy_reg>
   327ab:	8b 55 c0             	mov    0xffffffffffffffc0(%rbp),%edx
   327ae:	be 12 61 00 00       	mov    $0x6112,%esi
   327b3:	4c 89 ff             	mov    %r15,%rdi
   327b6:	80 ce 02             	or     $0x2,%dh
   327b9:	80 e6 fe             	and    $0xfe,%dh
   327bc:	66 89 55 c0          	mov    %dx,0xffffffffffffffc0(%rbp)
   327c0:	0f b7 d2             	movzwl %dx,%edx
   327c3:	e8 bf 36 fd ff       	callq  5e87 <e1000_write_phy_reg>
   327c8:	48 89 da             	mov    %rbx,%rdx
   327cb:	be 12 61 00 00       	mov    $0x6112,%esi
   327d0:	4c 89 ff             	mov    %r15,%rdi
   327d3:	e8 01 39 fd ff       	callq  60d9 <e1000_read_phy_reg>
   327d8:	0f b7 45 c0          	movzwl 0xffffffffffffffc0(%rbp),%eax
   327dc:	25 00 03 00 00       	and    $0x300,%eax
   327e1:	3d 00 02 00 00       	cmp    $0x200,%eax
   327e6:	74 37                	je     3281f <e1000_suspend+0x482>
   327e8:	45 85 ed             	test   %r13d,%r13d
   327eb:	75 32                	jne    3281f <e1000_suspend+0x482>
   327ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			327f0: R_X86_64_32S	.rodata.str1.1+0xae
   327f4:	49 8b 1f             	mov    (%r15),%rbx
   327f7:	e8 00 00 00 00       	callq  327fc <e1000_suspend+0x45f>
			327f8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   327fc:	8b 1b                	mov    (%rbx),%ebx
   327fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32801: R_X86_64_32S	.rodata.str1.1+0xb4
   32805:	4d 8b 27             	mov    (%r15),%r12
   32808:	81 cb 00 00 00 80    	or     $0x80000000,%ebx
   3280e:	e8 00 00 00 00       	callq  32813 <e1000_suspend+0x476>
			3280f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32813:	41 89 1c 24          	mov    %ebx,(%r12)
   32817:	41 b5 01             	mov    $0x1,%r13b
   3281a:	e9 45 ff ff ff       	jmpq   32764 <e1000_suspend+0x3c7>
   3281f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32822: R_X86_64_32S	.rodata.str1.1+0x15c6
   32826:	e8 00 00 00 00       	callq  3282b <e1000_suspend+0x48e>
			32827: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3282b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3282e: R_X86_64_32S	.rodata.str1.1+0x15d4
   32832:	e8 00 00 00 00       	callq  32837 <e1000_suspend+0x49a>
			32833: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32837:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3283b:	f6 40 48 01          	testb  $0x1,0x48(%rax)
   3283f:	74 09                	je     3284a <e1000_suspend+0x4ad>
   32841:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   32845:	e8 22 8a fd ff       	callq  b26c <e1000_free_irq>
   3284a:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   3284e:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
   32852:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   32856:	4c 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%r15
   3285a:	e8 87 e9 fc ff       	callq  11e6 <e1000_release_hw_control>
   3285f:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   32863:	e8 6f 0d fd ff       	callq  35d7 <pci_disable_device>
   32868:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3286b: R_X86_64_32S	.rodata.str1.1+0x32d9
   3286f:	e8 00 00 00 00       	callq  32874 <e1000_suspend+0x4d7>
			32870: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32874:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   32878:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3287b: R_X86_64_32S	.rodata.str1.1+0x32ea
   3287f:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   32886:	00 
   32887:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   3288e:	00 
   3288f:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   32896:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   3289a:	e8 00 00 00 00       	callq  3289f <e1000_suspend+0x502>
			3289b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3289f:	4c 89 e9             	mov    %r13,%rcx
   328a2:	4c 89 fa             	mov    %r15,%rdx
   328a5:	4c 89 e6             	mov    %r12,%rsi
   328a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			328ab: R_X86_64_32S	.rodata.str1.1+0x32d9
   328af:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   328b6:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   328bd:	00 
   328be:	e8 00 00 00 00       	callq  328c3 <e1000_suspend+0x526>
			328bf: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   328c3:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
   328c7:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   328cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			328ce: R_X86_64_32S	.rodata.str1.1+0x32d9
   328d2:	48 c7 45 a0 0b 06 00 	movq   $0x60b,0xffffffffffffffa0(%rbp)
   328d9:	00 
   328da:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   328de:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   328e1:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   328e4:	e8 00 00 00 00       	callq  328e9 <e1000_suspend+0x54c>
			328e5: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   328e9:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   328ed:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			328f0: R_X86_64_32S	.rodata.str1.1+0x3309
   328f4:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   328f8:	e8 00 00 00 00       	callq  328fd <e1000_suspend+0x560>
			328f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   328fd:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   32901:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   32907:	4c 89 e9             	mov    %r13,%rcx
   3290a:	4c 89 e2             	mov    %r12,%rdx
   3290d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32910: R_X86_64_32S	.rodata.str1.1+0x32d9
   32914:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   3291b:	48 89 de             	mov    %rbx,%rsi
   3291e:	e8 00 00 00 00       	callq  32923 <e1000_suspend+0x586>
			3291f: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   32923:	48 89 de             	mov    %rbx,%rsi
   32926:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32929: R_X86_64_32S	.rodata.str1.1+0x32d9
   3292d:	4d 89 f8             	mov    %r15,%r8
   32930:	b9 04 00 00 00       	mov    $0x4,%ecx
   32935:	4c 89 e2             	mov    %r12,%rdx
   32938:	e8 00 00 00 00       	callq  3293d <e1000_suspend+0x5a0>
			32939: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3293d:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   32941:	8b 5d c8             	mov    0xffffffffffffffc8(%rbp),%ebx
   32944:	48 85 ff             	test   %rdi,%rdi
   32947:	74 0d                	je     32956 <e1000_suspend+0x5b9>
   32949:	e8 00 00 00 00       	callq  3294e <e1000_suspend+0x5b1>
			3294a: R_X86_64_PC32	kfree+0xfffffffffffffffc
   3294e:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   32955:	00 
   32956:	48 8b 7d 80          	mov    0xffffffffffffff80(%rbp),%rdi
   3295a:	89 de                	mov    %ebx,%esi
   3295c:	e8 69 72 fd ff       	callq  9bca <pci_set_power_state>
   32961:	8b 45 9c             	mov    0xffffffffffffff9c(%rbp),%eax
   32964:	48 83 c4 58          	add    $0x58,%rsp
   32968:	5b                   	pop    %rbx
   32969:	41 5c                	pop    %r12
   3296b:	41 5d                	pop    %r13
   3296d:	41 5e                	pop    %r14
   3296f:	41 5f                	pop    %r15
   32971:	c9                   	leaveq 
   32972:	c3                   	retq   

0000000000032973 <e1000_shutdown>:
   32973:	55                   	push   %rbp
   32974:	48 89 e5             	mov    %rsp,%rbp
   32977:	53                   	push   %rbx
   32978:	48 89 fb             	mov    %rdi,%rbx
   3297b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3297e: R_X86_64_32S	.rodata.str1.1+0x3328
   32982:	48 83 ec 08          	sub    $0x8,%rsp
   32986:	e8 00 00 00 00       	callq  3298b <e1000_shutdown+0x18>
			32987: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3298b:	48 89 df             	mov    %rbx,%rdi
   3298e:	be 02 00 00 00       	mov    $0x2,%esi
   32993:	e8 05 fa ff ff       	callq  3239d <e1000_suspend>
   32998:	58                   	pop    %rax
   32999:	5b                   	pop    %rbx
   3299a:	c9                   	leaveq 
   3299b:	c3                   	retq   

000000000003299c <e1000_reinit_locked>:
   3299c:	55                   	push   %rbp
   3299d:	48 89 e5             	mov    %rsp,%rbp
   329a0:	53                   	push   %rbx
   329a1:	48 89 fb             	mov    %rdi,%rbx
   329a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			329a7: R_X86_64_32S	.rodata.str1.1+0x3337
   329ab:	48 83 ec 08          	sub    $0x8,%rsp
   329af:	e8 00 00 00 00       	callq  329b4 <e1000_reinit_locked+0x18>
			329b0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   329b4:	48 89 df             	mov    %rbx,%rdi
   329b7:	e8 00 00 00 00       	callq  329bc <e1000_reinit_locked+0x20>
			329b8: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   329bc:	48 89 df             	mov    %rbx,%rdi
   329bf:	e8 2f 1a ff ff       	callq  243f3 <e1000_up>
   329c4:	58                   	pop    %rax
   329c5:	5b                   	pop    %rbx
   329c6:	c9                   	leaveq 
   329c7:	c3                   	retq   

00000000000329c8 <e1000_ioctl>:
   329c8:	55                   	push   %rbp
   329c9:	48 89 e5             	mov    %rsp,%rbp
   329cc:	41 57                	push   %r15
   329ce:	41 56                	push   %r14
   329d0:	41 55                	push   %r13
   329d2:	41 54                	push   %r12
   329d4:	49 89 fc             	mov    %rdi,%r12
   329d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			329da: R_X86_64_32S	.rodata.str1.1+0x334b
   329de:	53                   	push   %rbx
   329df:	89 d3                	mov    %edx,%ebx
   329e1:	48 83 ec 18          	sub    $0x18,%rsp
   329e5:	48 89 75 c8          	mov    %rsi,0xffffffffffffffc8(%rbp)
   329e9:	e8 00 00 00 00       	callq  329ee <e1000_ioctl+0x26>
			329ea: R_X86_64_PC32	record_function+0xfffffffffffffffc
   329ee:	81 fb 47 89 00 00    	cmp    $0x8947,%ebx
   329f4:	74 14                	je     32a0a <e1000_ioctl+0x42>
   329f6:	81 fb 48 89 00 00    	cmp    $0x8948,%ebx
   329fc:	74 0c                	je     32a0a <e1000_ioctl+0x42>
   329fe:	81 fb 49 89 00 00    	cmp    $0x8949,%ebx
   32a04:	0f 85 23 02 00 00    	jne    32c2d <e1000_ioctl+0x265>
   32a0a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32a0d: R_X86_64_32S	.rodata.str1.1+0x3357
   32a11:	4d 8d ac 24 b8 0b 00 	lea    0xbb8(%r12),%r13
   32a18:	00 
   32a19:	4d 8d bc 24 00 08 00 	lea    0x800(%r12),%r15
   32a20:	00 
   32a21:	e8 00 00 00 00       	callq  32a26 <e1000_ioctl+0x5e>
			32a22: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32a26:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32a29: R_X86_64_32S	.rodata.str1.1+0x1be
   32a2d:	e8 00 00 00 00       	callq  32a32 <e1000_ioctl+0x6a>
			32a2e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32a32:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32a35: R_X86_64_32S	.rodata.str1.1+0x3367
   32a39:	e8 00 00 00 00       	callq  32a3e <e1000_ioctl+0x76>
			32a3a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32a3e:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   32a43:	0f 85 e4 01 00 00    	jne    32c2d <e1000_ioctl+0x265>
   32a49:	4c 8b 75 c8          	mov    0xffffffffffffffc8(%rbp),%r14
   32a4d:	49 83 c6 10          	add    $0x10,%r14
   32a51:	81 fb 47 89 00 00    	cmp    $0x8947,%ebx
   32a57:	74 16                	je     32a6f <e1000_ioctl+0xa7>
   32a59:	81 fb 48 89 00 00    	cmp    $0x8948,%ebx
   32a5f:	74 22                	je     32a83 <e1000_ioctl+0xbb>
   32a61:	81 fb 49 89 00 00    	cmp    $0x8949,%ebx
   32a67:	0f 85 c0 01 00 00    	jne    32c2d <e1000_ioctl+0x265>
   32a6d:	eb 6b                	jmp    32ada <e1000_ioctl+0x112>
   32a6f:	41 8b 85 88 00 00 00 	mov    0x88(%r13),%eax
   32a76:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   32a7a:	66 89 42 10          	mov    %ax,0x10(%rdx)
   32a7e:	e9 b1 01 00 00       	jmpq   32c34 <e1000_ioctl+0x26c>
   32a83:	bf 0c 00 00 00       	mov    $0xc,%edi
   32a88:	e8 5f 18 fd ff       	callq  42ec <capable>
   32a8d:	85 c0                	test   %eax,%eax
   32a8f:	0f 84 93 01 00 00    	je     32c28 <e1000_ioctl+0x260>
   32a95:	49 8d 9c 24 b8 08 00 	lea    0x8b8(%r12),%rbx
   32a9c:	00 
   32a9d:	48 89 df             	mov    %rbx,%rdi
   32aa0:	e8 00 00 00 00       	callq  32aa5 <e1000_ioctl+0xdd>
			32aa1: R_X86_64_PC32	.spinlock.text+0x1c0
   32aa5:	41 0f b7 76 02       	movzwl 0x2(%r14),%esi
   32aaa:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   32aae:	4c 89 ef             	mov    %r13,%rdi
   32ab1:	49 89 c4             	mov    %rax,%r12
   32ab4:	48 83 c2 16          	add    $0x16,%rdx
   32ab8:	83 e6 1f             	and    $0x1f,%esi
   32abb:	e8 19 36 fd ff       	callq  60d9 <e1000_read_phy_reg>
   32ac0:	85 c0                	test   %eax,%eax
   32ac2:	4c 89 e6             	mov    %r12,%rsi
   32ac5:	48 89 df             	mov    %rbx,%rdi
   32ac8:	75 69                	jne    32b33 <e1000_ioctl+0x16b>
   32aca:	4c 89 e6             	mov    %r12,%rsi
   32acd:	48 89 df             	mov    %rbx,%rdi
   32ad0:	e8 00 00 00 00       	callq  32ad5 <e1000_ioctl+0x10d>
			32ad1: R_X86_64_PC32	.spinlock.text+0x3d8
   32ad5:	e9 5a 01 00 00       	jmpq   32c34 <e1000_ioctl+0x26c>
   32ada:	bf 0c 00 00 00       	mov    $0xc,%edi
   32adf:	e8 08 18 fd ff       	callq  42ec <capable>
   32ae4:	85 c0                	test   %eax,%eax
   32ae6:	0f 84 3c 01 00 00    	je     32c28 <e1000_ioctl+0x260>
   32aec:	41 0f b7 46 02       	movzwl 0x2(%r14),%eax
   32af1:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
   32af6:	a9 e0 ff 00 00       	test   $0xffe0,%eax
   32afb:	0f 85 35 01 00 00    	jne    32c36 <e1000_ioctl+0x26e>
   32b01:	49 81 c4 b8 08 00 00 	add    $0x8b8,%r12
   32b08:	41 0f b7 5e 04       	movzwl 0x4(%r14),%ebx
   32b0d:	4c 89 e7             	mov    %r12,%rdi
   32b10:	e8 00 00 00 00       	callq  32b15 <e1000_ioctl+0x14d>
			32b11: R_X86_64_PC32	.spinlock.text+0x1c0
   32b15:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   32b19:	41 0f b7 76 02       	movzwl 0x2(%r14),%esi
   32b1e:	4c 89 ef             	mov    %r13,%rdi
   32b21:	89 da                	mov    %ebx,%edx
   32b23:	e8 5f 33 fd ff       	callq  5e87 <e1000_write_phy_reg>
   32b28:	85 c0                	test   %eax,%eax
   32b2a:	74 16                	je     32b42 <e1000_ioctl+0x17a>
   32b2c:	48 8b 75 d0          	mov    0xffffffffffffffd0(%rbp),%rsi
   32b30:	4c 89 e7             	mov    %r12,%rdi
   32b33:	e8 00 00 00 00       	callq  32b38 <e1000_ioctl+0x170>
			32b34: R_X86_64_PC32	.spinlock.text+0x3d8
   32b38:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
   32b3d:	e9 f4 00 00 00       	jmpq   32c36 <e1000_ioctl+0x26e>
   32b42:	48 8b 75 d0          	mov    0xffffffffffffffd0(%rbp),%rsi
   32b46:	4c 89 e7             	mov    %r12,%rdi
   32b49:	e8 00 00 00 00       	callq  32b4e <e1000_ioctl+0x186>
			32b4a: R_X86_64_PC32	.spinlock.text+0x3d8
   32b4e:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   32b53:	0f 85 89 00 00 00    	jne    32be2 <e1000_ioctl+0x21a>
   32b59:	66 41 8b 46 02       	mov    0x2(%r14),%ax
   32b5e:	66 85 c0             	test   %ax,%ax
   32b61:	74 12                	je     32b75 <e1000_ioctl+0x1ad>
   32b63:	66 83 f8 10          	cmp    $0x10,%ax
   32b67:	74 66                	je     32bcf <e1000_ioctl+0x207>
   32b69:	66 83 f8 14          	cmp    $0x14,%ax
   32b6d:	0f 85 c1 00 00 00    	jne    32c34 <e1000_ioctl+0x26c>
   32b73:	eb 5a                	jmp    32bcf <e1000_ioctl+0x207>
   32b75:	f6 c7 08             	test   $0x8,%bh
   32b78:	0f 85 b6 00 00 00    	jne    32c34 <e1000_ioctl+0x26c>
   32b7e:	f6 c7 10             	test   $0x10,%bh
   32b81:	74 14                	je     32b97 <e1000_ioctl+0x1cf>
   32b83:	41 c6 85 ef 00 00 00 	movb   $0x1,0xef(%r13)
   32b8a:	01 
   32b8b:	66 41 c7 85 d2 00 00 	movw   $0x2f,0xd2(%r13)
   32b92:	00 2f 00 
   32b95:	eb 58                	jmp    32bef <e1000_ioctl+0x227>
   32b97:	f6 c3 40             	test   $0x40,%bl
   32b9a:	b8 e8 03 00 00       	mov    $0x3e8,%eax
   32b9f:	75 12                	jne    32bb3 <e1000_ioctl+0x1eb>
   32ba1:	89 d8                	mov    %ebx,%eax
   32ba3:	25 00 20 00 00       	and    $0x2000,%eax
   32ba8:	83 f8 01             	cmp    $0x1,%eax
   32bab:	19 c0                	sbb    %eax,%eax
   32bad:	83 e0 a6             	and    $0xffffffffffffffa6,%eax
   32bb0:	83 c0 64             	add    $0x64,%eax
   32bb3:	c1 eb 08             	shr    $0x8,%ebx
   32bb6:	4c 89 ff             	mov    %r15,%rdi
   32bb9:	83 e3 01             	and    $0x1,%ebx
   32bbc:	8d 34 18             	lea    (%rax,%rbx,1),%esi
   32bbf:	0f b7 f6             	movzwl %si,%esi
   32bc2:	e8 00 00 00 00       	callq  32bc7 <e1000_ioctl+0x1ff>
			32bc3: R_X86_64_PC32	e1000_set_spd_dplx+0xfffffffffffffffc
   32bc7:	85 c0                	test   %eax,%eax
   32bc9:	89 c2                	mov    %eax,%edx
   32bcb:	75 69                	jne    32c36 <e1000_ioctl+0x26e>
   32bcd:	eb 20                	jmp    32bef <e1000_ioctl+0x227>
   32bcf:	4c 89 ef             	mov    %r13,%rdi
   32bd2:	e8 67 b1 fe ff       	callq  1dd3e <e1000_phy_reset>
   32bd7:	85 c0                	test   %eax,%eax
   32bd9:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
   32bde:	75 56                	jne    32c36 <e1000_ioctl+0x26e>
   32be0:	eb 52                	jmp    32c34 <e1000_ioctl+0x26c>
   32be2:	66 41 83 7e 02 00    	cmpw   $0x0,0x2(%r14)
   32be8:	75 4a                	jne    32c34 <e1000_ioctl+0x26c>
   32bea:	80 e7 08             	and    $0x8,%bh
   32bed:	75 45                	jne    32c34 <e1000_ioctl+0x26c>
   32bef:	49 8b 9f f0 02 00 00 	mov    0x2f0(%r15),%rbx
   32bf6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32bf9: R_X86_64_32S	.rodata.str1.1+0x15c6
   32bfd:	e8 00 00 00 00       	callq  32c02 <e1000_ioctl+0x23a>
			32bfe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32c02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32c05: R_X86_64_32S	.rodata.str1.1+0x15d4
   32c09:	e8 00 00 00 00       	callq  32c0e <e1000_ioctl+0x246>
			32c0a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32c0e:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   32c12:	74 0a                	je     32c1e <e1000_ioctl+0x256>
   32c14:	4c 89 ff             	mov    %r15,%rdi
   32c17:	e8 80 fd ff ff       	callq  3299c <e1000_reinit_locked>
   32c1c:	eb 16                	jmp    32c34 <e1000_ioctl+0x26c>
   32c1e:	4c 89 ff             	mov    %r15,%rdi
   32c21:	e8 50 e8 fe ff       	callq  21476 <e1000_reset>
   32c26:	eb 0c                	jmp    32c34 <e1000_ioctl+0x26c>
   32c28:	83 ca ff             	or     $0xffffffffffffffff,%edx
   32c2b:	eb 09                	jmp    32c36 <e1000_ioctl+0x26e>
   32c2d:	ba a1 ff ff ff       	mov    $0xffffffa1,%edx
   32c32:	eb 02                	jmp    32c36 <e1000_ioctl+0x26e>
   32c34:	31 d2                	xor    %edx,%edx
   32c36:	48 83 c4 18          	add    $0x18,%rsp
   32c3a:	89 d0                	mov    %edx,%eax
   32c3c:	5b                   	pop    %rbx
   32c3d:	41 5c                	pop    %r12
   32c3f:	41 5d                	pop    %r13
   32c41:	41 5e                	pop    %r14
   32c43:	41 5f                	pop    %r15
   32c45:	c9                   	leaveq 
   32c46:	c3                   	retq   

0000000000032c47 <e1000_reset_task>:
   32c47:	55                   	push   %rbp
   32c48:	48 89 e5             	mov    %rsp,%rbp
   32c4b:	53                   	push   %rbx
   32c4c:	48 89 fb             	mov    %rdi,%rbx
   32c4f:	48 81 eb 38 01 00 00 	sub    $0x138,%rbx
   32c56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32c59: R_X86_64_32S	.rodata.str1.1+0x336e
   32c5d:	48 83 ec 08          	sub    $0x8,%rsp
   32c61:	e8 00 00 00 00       	callq  32c66 <e1000_reset_task+0x1f>
			32c62: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32c66:	48 89 df             	mov    %rbx,%rdi
   32c69:	e8 2e fd ff ff       	callq  3299c <e1000_reinit_locked>
   32c6e:	58                   	pop    %rax
   32c6f:	5b                   	pop    %rbx
   32c70:	c9                   	leaveq 
   32c71:	c3                   	retq   

0000000000032c72 <e1000_get_pauseparam>:
   32c72:	55                   	push   %rbp
   32c73:	48 89 e5             	mov    %rsp,%rbp
   32c76:	41 54                	push   %r12
   32c78:	49 89 fc             	mov    %rdi,%r12
   32c7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32c7e: R_X86_64_32S	.rodata.str1.1+0x337f
   32c82:	53                   	push   %rbx
   32c83:	48 89 f3             	mov    %rsi,%rbx
   32c86:	e8 00 00 00 00       	callq  32c8b <e1000_get_pauseparam+0x19>
			32c87: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32c8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32c8e: R_X86_64_32S	.rodata.str1.1+0x1be
   32c92:	e8 00 00 00 00       	callq  32c97 <e1000_get_pauseparam+0x25>
			32c93: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32c97:	49 8d 94 24 00 08 00 	lea    0x800(%r12),%rdx
   32c9e:	00 
   32c9f:	31 c0                	xor    %eax,%eax
   32ca1:	80 ba 70 01 00 00 00 	cmpb   $0x0,0x170(%rdx)
   32ca8:	0f 95 c0             	setne  %al
   32cab:	89 43 04             	mov    %eax,0x4(%rbx)
   32cae:	8b 82 f0 03 00 00    	mov    0x3f0(%rdx),%eax
   32cb4:	83 f8 01             	cmp    $0x1,%eax
   32cb7:	75 09                	jne    32cc2 <e1000_get_pauseparam+0x50>
   32cb9:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx)
   32cc0:	eb 18                	jmp    32cda <e1000_get_pauseparam+0x68>
   32cc2:	83 f8 02             	cmp    $0x2,%eax
   32cc5:	74 0c                	je     32cd3 <e1000_get_pauseparam+0x61>
   32cc7:	83 f8 03             	cmp    $0x3,%eax
   32cca:	75 0e                	jne    32cda <e1000_get_pauseparam+0x68>
   32ccc:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx)
   32cd3:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%rbx)
   32cda:	5b                   	pop    %rbx
   32cdb:	41 5c                	pop    %r12
   32cdd:	c9                   	leaveq 
   32cde:	c3                   	retq   

0000000000032cdf <e1000_get_rx_csum>:
   32cdf:	55                   	push   %rbp
   32ce0:	48 89 e5             	mov    %rsp,%rbp
   32ce3:	53                   	push   %rbx
   32ce4:	48 89 fb             	mov    %rdi,%rbx
   32ce7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32cea: R_X86_64_32S	.rodata.str1.1+0x3394
   32cee:	48 83 ec 08          	sub    $0x8,%rsp
   32cf2:	e8 00 00 00 00       	callq  32cf7 <e1000_get_rx_csum+0x18>
			32cf3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32cf7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32cfa: R_X86_64_32S	.rodata.str1.1+0x1be
   32cfe:	e8 00 00 00 00       	callq  32d03 <e1000_get_rx_csum+0x24>
			32cff: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32d03:	0f b6 83 dc 0a 00 00 	movzbl 0xadc(%rbx),%eax
   32d0a:	5a                   	pop    %rdx
   32d0b:	5b                   	pop    %rbx
   32d0c:	c9                   	leaveq 
   32d0d:	c3                   	retq   

0000000000032d0e <e1000_set_rx_csum>:
   32d0e:	55                   	push   %rbp
   32d0f:	48 89 e5             	mov    %rsp,%rbp
   32d12:	41 55                	push   %r13
   32d14:	41 54                	push   %r12
   32d16:	49 89 fc             	mov    %rdi,%r12
   32d19:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32d1c: R_X86_64_32S	.rodata.str1.1+0x33a6
   32d20:	4d 8d ac 24 00 08 00 	lea    0x800(%r12),%r13
   32d27:	00 
   32d28:	53                   	push   %rbx
   32d29:	89 f3                	mov    %esi,%ebx
   32d2b:	48 83 ec 08          	sub    $0x8,%rsp
   32d2f:	e8 00 00 00 00       	callq  32d34 <e1000_set_rx_csum+0x26>
			32d30: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32d34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32d37: R_X86_64_32S	.rodata.str1.1+0x1be
   32d3b:	e8 00 00 00 00       	callq  32d40 <e1000_set_rx_csum+0x32>
			32d3c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32d40:	85 db                	test   %ebx,%ebx
   32d42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32d45: R_X86_64_32S	.rodata.str1.1+0x15c6
   32d49:	41 0f 95 85 dc 02 00 	setne  0x2dc(%r13)
   32d50:	00 
   32d51:	e8 00 00 00 00       	callq  32d56 <e1000_set_rx_csum+0x48>
			32d52: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32d56:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32d59: R_X86_64_32S	.rodata.str1.1+0x15d4
   32d5d:	e8 00 00 00 00       	callq  32d62 <e1000_set_rx_csum+0x54>
			32d5e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32d62:	41 f6 44 24 48 01    	testb  $0x1,0x48(%r12)
   32d68:	74 0a                	je     32d74 <e1000_set_rx_csum+0x66>
   32d6a:	4c 89 ef             	mov    %r13,%rdi
   32d6d:	e8 2a fc ff ff       	callq  3299c <e1000_reinit_locked>
   32d72:	eb 08                	jmp    32d7c <e1000_set_rx_csum+0x6e>
   32d74:	4c 89 ef             	mov    %r13,%rdi
   32d77:	e8 fa e6 fe ff       	callq  21476 <e1000_reset>
   32d7c:	59                   	pop    %rcx
   32d7d:	5b                   	pop    %rbx
   32d7e:	41 5c                	pop    %r12
   32d80:	41 5d                	pop    %r13
   32d82:	c9                   	leaveq 
   32d83:	31 c0                	xor    %eax,%eax
   32d85:	c3                   	retq   

0000000000032d86 <e1000_set_tx_csum>:
   32d86:	55                   	push   %rbp
   32d87:	48 89 e5             	mov    %rsp,%rbp
   32d8a:	41 54                	push   %r12
   32d8c:	41 89 f4             	mov    %esi,%r12d
   32d8f:	53                   	push   %rbx
   32d90:	48 89 fb             	mov    %rdi,%rbx
   32d93:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32d96: R_X86_64_32S	.rodata.str1.1+0x33b8
   32d9a:	e8 00 00 00 00       	callq  32d9f <e1000_set_tx_csum+0x19>
			32d9b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32d9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32da2: R_X86_64_32S	.rodata.str1.1+0x1be
   32da6:	e8 00 00 00 00       	callq  32dab <e1000_set_tx_csum+0x25>
			32da7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32dab:	83 bb c8 0b 00 00 02 	cmpl   $0x2,0xbc8(%rbx)
   32db2:	77 0b                	ja     32dbf <e1000_set_tx_csum+0x39>
   32db4:	41 83 fc 01          	cmp    $0x1,%r12d
   32db8:	19 c0                	sbb    %eax,%eax
   32dba:	83 e0 ea             	and    $0xffffffffffffffea,%eax
   32dbd:	eb 17                	jmp    32dd6 <e1000_set_tx_csum+0x50>
   32dbf:	45 85 e4             	test   %r12d,%r12d
   32dc2:	74 07                	je     32dcb <e1000_set_tx_csum+0x45>
   32dc4:	48 83 4b 70 08       	orq    $0x8,0x70(%rbx)
   32dc9:	eb 09                	jmp    32dd4 <e1000_set_tx_csum+0x4e>
   32dcb:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   32dd0:	48 21 43 70          	and    %rax,0x70(%rbx)
   32dd4:	31 c0                	xor    %eax,%eax
   32dd6:	5b                   	pop    %rbx
   32dd7:	41 5c                	pop    %r12
   32dd9:	c9                   	leaveq 
   32dda:	c3                   	retq   

0000000000032ddb <e1000_set_tso>:
   32ddb:	55                   	push   %rbp
   32ddc:	48 89 e5             	mov    %rsp,%rbp
   32ddf:	41 55                	push   %r13
   32de1:	41 89 f5             	mov    %esi,%r13d
   32de4:	41 54                	push   %r12
   32de6:	53                   	push   %rbx
   32de7:	48 89 fb             	mov    %rdi,%rbx
   32dea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32ded: R_X86_64_32S	.rodata.str1.1+0x33ca
   32df1:	4c 8d a3 00 08 00 00 	lea    0x800(%rbx),%r12
   32df8:	48 83 ec 08          	sub    $0x8,%rsp
   32dfc:	e8 00 00 00 00       	callq  32e01 <e1000_set_tso+0x26>
			32dfd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32e01:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32e04: R_X86_64_32S	.rodata.str1.1+0x1be
   32e08:	e8 00 00 00 00       	callq  32e0d <e1000_set_tso+0x32>
			32e09: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32e0d:	41 8b 84 24 c8 03 00 	mov    0x3c8(%r12),%eax
   32e14:	00 
   32e15:	83 f8 03             	cmp    $0x3,%eax
   32e18:	76 05                	jbe    32e1f <e1000_set_tso+0x44>
   32e1a:	83 f8 0c             	cmp    $0xc,%eax
   32e1d:	75 10                	jne    32e2f <e1000_set_tso+0x54>
   32e1f:	41 83 fd 01          	cmp    $0x1,%r13d
   32e23:	19 c0                	sbb    %eax,%eax
   32e25:	f7 d0                	not    %eax
   32e27:	83 e0 ea             	and    $0xffffffffffffffea,%eax
   32e2a:	e9 8c 00 00 00       	jmpq   32ebb <e1000_set_tso+0xe0>
   32e2f:	45 85 ed             	test   %r13d,%r13d
   32e32:	74 1e                	je     32e52 <e1000_set_tso+0x77>
   32e34:	48 8b 53 70          	mov    0x70(%rbx),%rdx
   32e38:	48 89 d0             	mov    %rdx,%rax
   32e3b:	48 0d 00 00 01 00    	or     $0x10000,%rax
   32e41:	48 89 43 70          	mov    %rax,0x70(%rbx)
   32e45:	41 83 bc 24 c8 03 00 	cmpl   $0xd,0x3c8(%r12)
   32e4c:	00 0d 
   32e4e:	77 0c                	ja     32e5c <e1000_set_tso+0x81>
   32e50:	eb 17                	jmp    32e69 <e1000_set_tso+0x8e>
   32e52:	48 81 63 70 ff ff ee 	andq   $0xffffffffffeeffff,0x70(%rbx)
   32e59:	ff 
   32e5a:	eb 17                	jmp    32e73 <e1000_set_tso+0x98>
   32e5c:	48 81 ca 00 00 11 00 	or     $0x110000,%rdx
   32e63:	48 89 53 70          	mov    %rdx,0x70(%rbx)
   32e67:	eb 0a                	jmp    32e73 <e1000_set_tso+0x98>
   32e69:	48 25 ff ff ef ff    	and    $0xffffffffffefffff,%rax
   32e6f:	48 89 43 70          	mov    %rax,0x70(%rbx)
   32e73:	41 f6 84 24 c0 07 00 	testb  $0x2,0x7c0(%r12)
   32e7a:	00 02 
   32e7c:	74 32                	je     32eb0 <e1000_set_tso+0xd5>
   32e7e:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
   32e85:	00 
   32e86:	45 85 ed             	test   %r13d,%r13d
   32e89:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			32e8c: R_X86_64_32S	str_522950204
   32e90:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			32e93: R_X86_64_32S	str_310665533
   32e97:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			32e9a: R_X86_64_32S	str_321443716
   32e9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32ea1: R_X86_64_32S	str_166765844
   32ea5:	48 0f 44 c8          	cmove  %rax,%rcx
   32ea9:	31 c0                	xor    %eax,%eax
   32eab:	e8 00 00 00 00       	callq  32eb0 <e1000_set_tso+0xd5>
			32eac: R_X86_64_PC32	printk+0xfffffffffffffffc
   32eb0:	41 c6 84 24 c5 07 00 	movb   $0x1,0x7c5(%r12)
   32eb7:	00 01 
   32eb9:	31 c0                	xor    %eax,%eax
   32ebb:	5e                   	pop    %rsi
   32ebc:	5b                   	pop    %rbx
   32ebd:	41 5c                	pop    %r12
   32ebf:	41 5d                	pop    %r13
   32ec1:	c9                   	leaveq 
   32ec2:	c3                   	retq   

0000000000032ec3 <e1000_get_msglevel>:
   32ec3:	55                   	push   %rbp
   32ec4:	48 89 e5             	mov    %rsp,%rbp
   32ec7:	53                   	push   %rbx
   32ec8:	48 89 fb             	mov    %rdi,%rbx
   32ecb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32ece: R_X86_64_32S	.rodata.str1.1+0x33d8
   32ed2:	48 83 ec 08          	sub    $0x8,%rsp
   32ed6:	e8 00 00 00 00       	callq  32edb <e1000_get_msglevel+0x18>
			32ed7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32edb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32ede: R_X86_64_32S	.rodata.str1.1+0x1be
   32ee2:	e8 00 00 00 00       	callq  32ee7 <e1000_get_msglevel+0x24>
			32ee3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32ee7:	8b 83 c0 0f 00 00    	mov    0xfc0(%rbx),%eax
   32eed:	5f                   	pop    %rdi
   32eee:	5b                   	pop    %rbx
   32eef:	c9                   	leaveq 
   32ef0:	c3                   	retq   

0000000000032ef1 <e1000_set_msglevel>:
   32ef1:	55                   	push   %rbp
   32ef2:	48 89 e5             	mov    %rsp,%rbp
   32ef5:	41 54                	push   %r12
   32ef7:	49 89 fc             	mov    %rdi,%r12
   32efa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32efd: R_X86_64_32S	.rodata.str1.1+0x33eb
   32f01:	53                   	push   %rbx
   32f02:	89 f3                	mov    %esi,%ebx
   32f04:	e8 00 00 00 00       	callq  32f09 <e1000_set_msglevel+0x18>
			32f05: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32f09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32f0c: R_X86_64_32S	.rodata.str1.1+0x1be
   32f10:	e8 00 00 00 00       	callq  32f15 <e1000_set_msglevel+0x24>
			32f11: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32f15:	41 89 9c 24 c0 0f 00 	mov    %ebx,0xfc0(%r12)
   32f1c:	00 
   32f1d:	5b                   	pop    %rbx
   32f1e:	41 5c                	pop    %r12
   32f20:	c9                   	leaveq 
   32f21:	c3                   	retq   

0000000000032f22 <e1000_set_eeprom>:
   32f22:	55                   	push   %rbp
   32f23:	48 89 e5             	mov    %rsp,%rbp
   32f26:	41 57                	push   %r15
   32f28:	41 56                	push   %r14
   32f2a:	41 55                	push   %r13
   32f2c:	49 89 f5             	mov    %rsi,%r13
   32f2f:	41 54                	push   %r12
   32f31:	49 89 fc             	mov    %rdi,%r12
   32f34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32f37: R_X86_64_32S	.rodata.str1.1+0x33fe
   32f3b:	53                   	push   %rbx
   32f3c:	bb a1 ff ff ff       	mov    $0xffffffa1,%ebx
   32f41:	48 83 ec 18          	sub    $0x18,%rsp
   32f45:	48 89 55 c0          	mov    %rdx,0xffffffffffffffc0(%rbp)
   32f49:	e8 00 00 00 00       	callq  32f4e <e1000_set_eeprom+0x2c>
			32f4a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32f4e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32f51: R_X86_64_32S	.rodata.str1.1+0x1be
   32f55:	e8 00 00 00 00       	callq  32f5a <e1000_set_eeprom+0x38>
			32f56: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32f5a:	41 8b 45 0c          	mov    0xc(%r13),%eax
   32f5e:	85 c0                	test   %eax,%eax
   32f60:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   32f63:	0f 84 3a 01 00 00    	je     330a3 <e1000_set_eeprom+0x181>
   32f69:	49 81 c4 b8 0b 00 00 	add    $0xbb8,%r12
   32f70:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
   32f75:	41 0f b7 84 24 e6 00 	movzwl 0xe6(%r12),%eax
   32f7c:	00 00 
   32f7e:	41 0f b7 94 24 e8 00 	movzwl 0xe8(%r12),%edx
   32f85:	00 00 
   32f87:	c1 e0 10             	shl    $0x10,%eax
   32f8a:	09 d0                	or     %edx,%eax
   32f8c:	41 39 45 04          	cmp    %eax,0x4(%r13)
   32f90:	0f 85 0d 01 00 00    	jne    330a3 <e1000_set_eeprom+0x181>
   32f96:	41 8b 4d 08          	mov    0x8(%r13),%ecx
   32f9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32f9d: R_X86_64_32S	.rodata.str1.1+0x3139
   32fa1:	89 4d d0             	mov    %ecx,0xffffffffffffffd0(%rbp)
   32fa4:	41 0f b7 44 24 4c    	movzwl 0x4c(%r12),%eax
   32faa:	01 c0                	add    %eax,%eax
   32fac:	48 63 d8             	movslq %eax,%rbx
   32faf:	e8 00 00 00 00       	callq  32fb4 <e1000_set_eeprom+0x92>
			32fb0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   32fb4:	48 89 df             	mov    %rbx,%rdi
   32fb7:	be d0 00 00 00       	mov    $0xd0,%esi
   32fbc:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
   32fc1:	e8 00 00 00 00       	callq  32fc6 <e1000_set_eeprom+0xa4>
			32fc2: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   32fc6:	48 85 c0             	test   %rax,%rax
   32fc9:	49 89 c6             	mov    %rax,%r14
   32fcc:	0f 84 d1 00 00 00    	je     330a3 <e1000_set_eeprom+0x181>
   32fd2:	8b 45 d0             	mov    0xffffffffffffffd0(%rbp),%eax
   32fd5:	31 d2                	xor    %edx,%edx
   32fd7:	4d 89 f7             	mov    %r14,%r15
   32fda:	d1 e8                	shr    %eax
   32fdc:	41 f6 45 08 01       	testb  $0x1,0x8(%r13)
   32fe1:	89 45 d4             	mov    %eax,0xffffffffffffffd4(%rbp)
   32fe4:	74 16                	je     32ffc <e1000_set_eeprom+0xda>
   32fe6:	b2 01                	mov    $0x1,%dl
   32fe8:	0f b7 f0             	movzwl %ax,%esi
   32feb:	4c 89 f1             	mov    %r14,%rcx
   32fee:	4c 89 e7             	mov    %r12,%rdi
   32ff1:	4d 8d 7e 01          	lea    0x1(%r14),%r15
   32ff5:	e8 15 97 fe ff       	callq  1c70f <e1000_read_eeprom>
   32ffa:	89 c2                	mov    %eax,%edx
   32ffc:	8b 45 d0             	mov    0xffffffffffffffd0(%rbp),%eax
   32fff:	8b 4d cc             	mov    0xffffffffffffffcc(%rbp),%ecx
   33002:	8d 5c 01 ff          	lea    0xffffffffffffffff(%rcx,%rax,1),%ebx
   33006:	41 8b 45 08          	mov    0x8(%r13),%eax
   3300a:	41 03 45 0c          	add    0xc(%r13),%eax
   3300e:	d1 eb                	shr    %ebx
   33010:	a8 01                	test   $0x1,%al
   33012:	74 1d                	je     33031 <e1000_set_eeprom+0x10f>
   33014:	85 d2                	test   %edx,%edx
   33016:	75 19                	jne    33031 <e1000_set_eeprom+0x10f>
   33018:	89 d9                	mov    %ebx,%ecx
   3301a:	2b 4d d4             	sub    0xffffffffffffffd4(%rbp),%ecx
   3301d:	0f b7 f3             	movzwl %bx,%esi
   33020:	b2 01                	mov    $0x1,%dl
   33022:	4c 89 e7             	mov    %r12,%rdi
   33025:	48 63 c9             	movslq %ecx,%rcx
   33028:	49 8d 0c 4e          	lea    (%r14,%rcx,2),%rcx
   3302c:	e8 de 96 fe ff       	callq  1c70f <e1000_read_eeprom>
   33031:	31 c9                	xor    %ecx,%ecx
   33033:	b8 01 00 00 00       	mov    $0x1,%eax
   33038:	2b 45 d4             	sub    0xffffffffffffffd4(%rbp),%eax
   3303b:	0f b7 d1             	movzwl %cx,%edx
   3303e:	ff c1                	inc    %ecx
   33040:	44 8d 04 18          	lea    (%rax,%rbx,1),%r8d
   33044:	44 39 c2             	cmp    %r8d,%edx
   33047:	7c ea                	jl     33033 <e1000_set_eeprom+0x111>
   33049:	41 8b 4d 0c          	mov    0xc(%r13),%ecx
   3304d:	4c 89 ff             	mov    %r15,%rdi
   33050:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
   33054:	fc                   	cld    
   33055:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   33057:	31 d2                	xor    %edx,%edx
   33059:	89 d0                	mov    %edx,%eax
   3305b:	ff c2                	inc    %edx
   3305d:	0f b7 c0             	movzwl %ax,%eax
   33060:	44 39 c0             	cmp    %r8d,%eax
   33063:	7c f4                	jl     33059 <e1000_set_eeprom+0x137>
   33065:	89 da                	mov    %ebx,%edx
   33067:	66 2b 55 d4          	sub    0xffffffffffffffd4(%rbp),%dx
   3306b:	0f b7 75 d4          	movzwl 0xffffffffffffffd4(%rbp),%esi
   3306f:	4c 89 f1             	mov    %r14,%rcx
   33072:	4c 89 e7             	mov    %r12,%rdi
   33075:	ff c2                	inc    %edx
   33077:	0f b7 d2             	movzwl %dx,%edx
   3307a:	e8 f9 ca fe ff       	callq  1fb78 <e1000_write_eeprom>
   3307f:	85 c0                	test   %eax,%eax
   33081:	89 c3                	mov    %eax,%ebx
   33083:	75 16                	jne    3309b <e1000_set_eeprom+0x179>
   33085:	83 7d d4 3f          	cmpl   $0x3f,0xffffffffffffffd4(%rbp)
   33089:	7e 08                	jle    33093 <e1000_set_eeprom+0x171>
   3308b:	41 83 7c 24 10 10    	cmpl   $0x10,0x10(%r12)
   33091:	75 08                	jne    3309b <e1000_set_eeprom+0x179>
   33093:	4c 89 e7             	mov    %r12,%rdi
   33096:	e8 22 cf fe ff       	callq  1ffbd <e1000_update_eeprom_checksum>
   3309b:	4c 89 f7             	mov    %r14,%rdi
   3309e:	e8 00 00 00 00       	callq  330a3 <e1000_set_eeprom+0x181>
			3309f: R_X86_64_PC32	kfree+0xfffffffffffffffc
   330a3:	48 83 c4 18          	add    $0x18,%rsp
   330a7:	89 d8                	mov    %ebx,%eax
   330a9:	5b                   	pop    %rbx
   330aa:	41 5c                	pop    %r12
   330ac:	41 5d                	pop    %r13
   330ae:	41 5e                	pop    %r14
   330b0:	41 5f                	pop    %r15
   330b2:	c9                   	leaveq 
   330b3:	c3                   	retq   

00000000000330b4 <e1000_get_drvinfo>:
   330b4:	55                   	push   %rbp
   330b5:	48 89 e5             	mov    %rsp,%rbp
   330b8:	41 56                	push   %r14
   330ba:	41 55                	push   %r13
   330bc:	49 89 fd             	mov    %rdi,%r13
   330bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			330c2: R_X86_64_32S	.rodata.str1.1+0x340f
   330c6:	4d 8d b5 00 08 00 00 	lea    0x800(%r13),%r14
   330cd:	41 54                	push   %r12
   330cf:	49 89 f4             	mov    %rsi,%r12
   330d2:	53                   	push   %rbx
   330d3:	49 8d 9d b8 0b 00 00 	lea    0xbb8(%r13),%rbx
   330da:	48 83 ec 30          	sub    $0x30,%rsp
   330de:	e8 00 00 00 00       	callq  330e3 <e1000_get_drvinfo+0x2f>
			330df: R_X86_64_PC32	record_function+0xfffffffffffffffc
   330e3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			330e6: R_X86_64_32S	.rodata.str1.1+0x1be
   330ea:	e8 00 00 00 00       	callq  330ef <e1000_get_drvinfo+0x3b>
			330eb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   330ef:	49 8d 7c 24 04       	lea    0x4(%r12),%rdi
   330f4:	ba 20 00 00 00       	mov    $0x20,%edx
   330f9:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			330fc: R_X86_64_32S	e1000_driver_name
   33100:	e8 00 00 00 00       	callq  33105 <e1000_get_drvinfo+0x51>
			33101: R_X86_64_PC32	strncpy+0xfffffffffffffffc
   33105:	49 8d 7c 24 24       	lea    0x24(%r12),%rdi
   3310a:	ba 20 00 00 00       	mov    $0x20,%edx
   3310f:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			33112: R_X86_64_32S	e1000_driver_version
   33116:	e8 00 00 00 00       	callq  3311b <e1000_get_drvinfo+0x67>
			33117: R_X86_64_PC32	strncpy+0xfffffffffffffffc
   3311b:	48 8d 4d de          	lea    0xffffffffffffffde(%rbp),%rcx
   3311f:	ba 01 00 00 00       	mov    $0x1,%edx
   33124:	be 05 00 00 00       	mov    $0x5,%esi
   33129:	48 89 df             	mov    %rbx,%rdi
   3312c:	e8 de 95 fe ff       	callq  1c70f <e1000_read_eeprom>
   33131:	8b 43 10             	mov    0x10(%rbx),%eax
   33134:	83 f8 0e             	cmp    $0xe,%eax
   33137:	74 14                	je     3314d <e1000_get_drvinfo+0x99>
   33139:	83 f8 0f             	cmp    $0xf,%eax
   3313c:	74 0f                	je     3314d <e1000_get_drvinfo+0x99>
   3313e:	83 f8 10             	cmp    $0x10,%eax
   33141:	74 0a                	je     3314d <e1000_get_drvinfo+0x99>
   33143:	83 f8 11             	cmp    $0x11,%eax
   33146:	74 05                	je     3314d <e1000_get_drvinfo+0x99>
   33148:	83 f8 12             	cmp    $0x12,%eax
   3314b:	75 2f                	jne    3317c <e1000_get_drvinfo+0xc8>
   3314d:	44 0f b7 45 de       	movzwl 0xffffffffffffffde(%rbp),%r8d
   33152:	48 8d 7d b0          	lea    0xffffffffffffffb0(%rbp),%rdi
   33156:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			33159: R_X86_64_32S	str_316303982
   3315d:	31 c0                	xor    %eax,%eax
   3315f:	44 89 c1             	mov    %r8d,%ecx
   33162:	44 89 c2             	mov    %r8d,%edx
   33165:	41 83 e0 0f          	and    $0xf,%r8d
   33169:	81 e1 f0 0f 00 00    	and    $0xff0,%ecx
   3316f:	c1 ea 0c             	shr    $0xc,%edx
   33172:	c1 f9 04             	sar    $0x4,%ecx
   33175:	e8 00 00 00 00       	callq  3317a <e1000_get_drvinfo+0xc6>
			33176: R_X86_64_PC32	sprintf+0xfffffffffffffffc
   3317a:	eb 12                	jmp    3318e <e1000_get_drvinfo+0xda>
   3317c:	48 8d 7d b0          	lea    0xffffffffffffffb0(%rbp),%rdi
   33180:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			33183: R_X86_64_32S	str_29116
   33187:	31 c0                	xor    %eax,%eax
   33189:	e8 00 00 00 00       	callq  3318e <e1000_get_drvinfo+0xda>
			3318a: R_X86_64_PC32	sprintf+0xfffffffffffffffc
   3318e:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   33192:	49 8d 7c 24 44       	lea    0x44(%r12),%rdi
   33197:	ba 20 00 00 00       	mov    $0x20,%edx
   3319c:	e8 00 00 00 00       	callq  331a1 <e1000_get_drvinfo+0xed>
			3319d: R_X86_64_PC32	strncpy+0xfffffffffffffffc
   331a1:	49 8b 9e f8 02 00 00 	mov    0x2f8(%r14),%rbx
   331a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			331ab: R_X86_64_32S	.rodata.str1.1+0x3421
   331af:	e8 00 00 00 00       	callq  331b4 <e1000_get_drvinfo+0x100>
			331b0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   331b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			331b7: R_X86_64_32S	.rodata.str1.1+0x342a
   331bb:	e8 00 00 00 00       	callq  331c0 <e1000_get_drvinfo+0x10c>
			331bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   331c0:	48 8d b3 78 01 00 00 	lea    0x178(%rbx),%rsi
   331c7:	49 8d 7c 24 64       	lea    0x64(%r12),%rdi
   331cc:	ba 20 00 00 00       	mov    $0x20,%edx
   331d1:	e8 00 00 00 00       	callq  331d6 <e1000_get_drvinfo+0x122>
			331d2: R_X86_64_PC32	strncpy+0xfffffffffffffffc
   331d6:	4c 89 ef             	mov    %r13,%rdi
   331d9:	e8 f6 ea fc ff       	callq  1cd4 <e1000_get_regs_len>
   331de:	4c 89 ef             	mov    %r13,%rdi
   331e1:	41 89 84 24 c0 00 00 	mov    %eax,0xc0(%r12)
   331e8:	00 
   331e9:	e8 b5 ea fc ff       	callq  1ca3 <e1000_get_eeprom_len>
   331ee:	41 89 84 24 bc 00 00 	mov    %eax,0xbc(%r12)
   331f5:	00 
   331f6:	48 83 c4 30          	add    $0x30,%rsp
   331fa:	5b                   	pop    %rbx
   331fb:	41 5c                	pop    %r12
   331fd:	41 5d                	pop    %r13
   331ff:	41 5e                	pop    %r14
   33201:	c9                   	leaveq 
   33202:	c3                   	retq   

0000000000033203 <e1000_get_ringparam>:
   33203:	55                   	push   %rbp
   33204:	48 89 e5             	mov    %rsp,%rbp
   33207:	41 54                	push   %r12
   33209:	49 89 fc             	mov    %rdi,%r12
   3320c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3320f: R_X86_64_32S	.rodata.str1.1+0x3433
   33213:	53                   	push   %rbx
   33214:	48 89 f3             	mov    %rsi,%rbx
   33217:	e8 00 00 00 00       	callq  3321c <e1000_get_ringparam+0x19>
			33218: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3321c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3321f: R_X86_64_32S	.rodata.str1.1+0x1be
   33223:	e8 00 00 00 00       	callq  33228 <e1000_get_ringparam+0x25>
			33224: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33228:	49 8d 84 24 00 08 00 	lea    0x800(%r12),%rax
   3322f:	00 
   33230:	83 b8 c8 03 00 00 03 	cmpl   $0x3,0x3c8(%rax)
   33237:	48 8b 88 b0 01 00 00 	mov    0x1b0(%rax),%rcx
   3323e:	48 8b 90 20 02 00 00 	mov    0x220(%rax),%rdx
   33245:	77 10                	ja     33257 <e1000_get_ringparam+0x54>
   33247:	c7 43 04 00 01 00 00 	movl   $0x100,0x4(%rbx)
   3324e:	c7 43 10 00 01 00 00 	movl   $0x100,0x10(%rbx)
   33255:	eb 0e                	jmp    33265 <e1000_get_ringparam+0x62>
   33257:	c7 43 04 00 10 00 00 	movl   $0x1000,0x4(%rbx)
   3325e:	c7 43 10 00 10 00 00 	movl   $0x1000,0x10(%rbx)
   33265:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   3326c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%rbx)
   33273:	8b 42 14             	mov    0x14(%rdx),%eax
   33276:	89 43 14             	mov    %eax,0x14(%rbx)
   33279:	8b 41 14             	mov    0x14(%rcx),%eax
   3327c:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   33283:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%rbx)
   3328a:	89 43 20             	mov    %eax,0x20(%rbx)
   3328d:	5b                   	pop    %rbx
   3328e:	41 5c                	pop    %r12
   33290:	c9                   	leaveq 
   33291:	c3                   	retq   

0000000000033292 <e1000_nway_reset>:
   33292:	55                   	push   %rbp
   33293:	48 89 e5             	mov    %rsp,%rbp
   33296:	53                   	push   %rbx
   33297:	48 89 fb             	mov    %rdi,%rbx
   3329a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3329d: R_X86_64_32S	.rodata.str1.1+0x3447
   332a1:	48 83 ec 08          	sub    $0x8,%rsp
   332a5:	e8 00 00 00 00       	callq  332aa <e1000_nway_reset+0x18>
			332a6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   332aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			332ad: R_X86_64_32S	.rodata.str1.1+0x1be
   332b1:	e8 00 00 00 00       	callq  332b6 <e1000_nway_reset+0x24>
			332b2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   332b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			332b9: R_X86_64_32S	.rodata.str1.1+0x15c6
   332bd:	e8 00 00 00 00       	callq  332c2 <e1000_nway_reset+0x30>
			332be: R_X86_64_PC32	record_function+0xfffffffffffffffc
   332c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			332c5: R_X86_64_32S	.rodata.str1.1+0x15d4
   332c9:	e8 00 00 00 00       	callq  332ce <e1000_nway_reset+0x3c>
			332ca: R_X86_64_PC32	record_function+0xfffffffffffffffc
   332ce:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   332d2:	74 0c                	je     332e0 <e1000_nway_reset+0x4e>
   332d4:	48 8d bb 00 08 00 00 	lea    0x800(%rbx),%rdi
   332db:	e8 bc f6 ff ff       	callq  3299c <e1000_reinit_locked>
   332e0:	41 58                	pop    %r8
   332e2:	5b                   	pop    %rbx
   332e3:	c9                   	leaveq 
   332e4:	31 c0                	xor    %eax,%eax
   332e6:	c3                   	retq   

00000000000332e7 <e1000_get_ethtool_stats>:
   332e7:	55                   	push   %rbp
   332e8:	48 89 e5             	mov    %rsp,%rbp
   332eb:	41 54                	push   %r12
   332ed:	49 89 d4             	mov    %rdx,%r12
   332f0:	53                   	push   %rbx
   332f1:	48 89 fb             	mov    %rdi,%rbx
   332f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			332f7: R_X86_64_32S	.rodata.str1.1+0x3458
   332fb:	48 81 c3 00 08 00 00 	add    $0x800,%rbx
   33302:	e8 00 00 00 00       	callq  33307 <e1000_get_ethtool_stats+0x20>
			33303: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33307:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3330a: R_X86_64_32S	.rodata.str1.1+0x1be
   3330e:	e8 00 00 00 00       	callq  33313 <e1000_get_ethtool_stats+0x2c>
			3330f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33313:	48 89 df             	mov    %rbx,%rdi
   33316:	e8 0c 5d fd ff       	callq  9027 <e1000_update_stats>
   3331b:	4c 89 e2             	mov    %r12,%rdx
   3331e:	31 c9                	xor    %ecx,%ecx
   33320:	48 63 81 00 00 00 00 	movslq 0x0(%rcx),%rax
			33323: R_X86_64_32S	.data+0x3e2c4
   33327:	83 b9 00 00 00 00 08 	cmpl   $0x8,0x0(%rcx)
			33329: R_X86_64_32S	.data+0x3e2c0
   3332e:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax
   33332:	75 05                	jne    33339 <e1000_get_ethtool_stats+0x52>
   33334:	48 8b 00             	mov    (%rax),%rax
   33337:	eb 02                	jmp    3333b <e1000_get_ethtool_stats+0x54>
   33339:	8b 00                	mov    (%rax),%eax
   3333b:	48 83 c1 28          	add    $0x28,%rcx
   3333f:	48 89 02             	mov    %rax,(%rdx)
   33342:	48 83 c2 08          	add    $0x8,%rdx
   33346:	48 81 f9 58 07 00 00 	cmp    $0x758,%rcx
   3334d:	75 d1                	jne    33320 <e1000_get_ethtool_stats+0x39>
   3334f:	5b                   	pop    %rbx
   33350:	41 5c                	pop    %r12
   33352:	c9                   	leaveq 
   33353:	c3                   	retq   

0000000000033354 <e1000_set_mac>:
   33354:	55                   	push   %rbp
   33355:	48 89 e5             	mov    %rsp,%rbp
   33358:	41 56                	push   %r14
   3335a:	41 55                	push   %r13
   3335c:	49 89 fd             	mov    %rdi,%r13
   3335f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33362: R_X86_64_32S	.rodata.str1.1+0x351e
   33366:	41 54                	push   %r12
   33368:	49 89 f4             	mov    %rsi,%r12
   3336b:	53                   	push   %rbx
   3336c:	49 8d 5c 24 02       	lea    0x2(%r12),%rbx
   33371:	48 83 ec 10          	sub    $0x10,%rsp
   33375:	e8 00 00 00 00       	callq  3337a <e1000_set_mac+0x26>
			33376: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3337a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3337d: R_X86_64_32S	.rodata.str1.1+0x1be
   33381:	e8 00 00 00 00       	callq  33386 <e1000_set_mac+0x32>
			33382: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33386:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33389: R_X86_64_32S	.rodata.str1.1+0x352c
   3338d:	e8 00 00 00 00       	callq  33392 <e1000_set_mac+0x3e>
			3338e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33392:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33395: R_X86_64_32S	.rodata.str1.1+0x3540
   33399:	e8 00 00 00 00       	callq  3339e <e1000_set_mac+0x4a>
			3339a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3339e:	41 f6 44 24 02 01    	testb  $0x1,0x2(%r12)
   333a4:	0f 85 9b 00 00 00    	jne    33445 <e1000_set_mac+0xf1>
   333aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			333ad: R_X86_64_32S	.rodata.str1.1+0x3558
   333b1:	e8 00 00 00 00       	callq  333b6 <e1000_set_mac+0x62>
			333b2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   333b6:	8a 43 02             	mov    0x2(%rbx),%al
   333b9:	0a 43 01             	or     0x1(%rbx),%al
   333bc:	41 0a 44 24 02       	or     0x2(%r12),%al
   333c1:	0a 43 03             	or     0x3(%rbx),%al
   333c4:	0a 43 04             	or     0x4(%rbx),%al
   333c7:	0a 43 05             	or     0x5(%rbx),%al
   333ca:	74 79                	je     33445 <e1000_set_mac+0xf1>
   333cc:	eb 7e                	jmp    3344c <e1000_set_mac+0xf8>
   333ce:	4c 89 f7             	mov    %r14,%rdi
   333d1:	e8 21 05 ff ff       	callq  238f7 <e1000_enter_82542_rst>
   333d6:	49 8d 44 24 02       	lea    0x2(%r12),%rax
   333db:	41 0f b6 8d a0 01 00 	movzbl 0x1a0(%r13),%ecx
   333e2:	00 
   333e3:	49 8d bd 40 02 00 00 	lea    0x240(%r13),%rdi
   333ea:	fc                   	cld    
   333eb:	48 89 c6             	mov    %rax,%rsi
   333ee:	4c 8d a3 f4 00 00 00 	lea    0xf4(%rbx),%r12
   333f5:	31 d2                	xor    %edx,%edx
   333f7:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   333f9:	48 89 c6             	mov    %rax,%rsi
   333fc:	4c 89 e7             	mov    %r12,%rdi
   333ff:	41 0f b6 8d a0 01 00 	movzbl 0x1a0(%r13),%ecx
   33406:	00 
   33407:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   33409:	4c 89 e6             	mov    %r12,%rsi
   3340c:	48 89 df             	mov    %rbx,%rdi
   3340f:	e8 7a cf fc ff       	callq  38e <e1000_rar_set>
   33414:	83 7b 10 0e          	cmpl   $0xe,0x10(%rbx)
   33418:	75 17                	jne    33431 <e1000_set_mac+0xdd>
   3341a:	c6 83 10 01 00 00 01 	movb   $0x1,0x110(%rbx)
   33421:	ba 0e 00 00 00       	mov    $0xe,%edx
   33426:	4c 89 e6             	mov    %r12,%rsi
   33429:	48 89 df             	mov    %rbx,%rdi
   3342c:	e8 5d cf fc ff       	callq  38e <e1000_rar_set>
   33431:	31 c0                	xor    %eax,%eax
   33433:	83 7b 10 01          	cmpl   $0x1,0x10(%rbx)
   33437:	75 30                	jne    33469 <e1000_set_mac+0x115>
   33439:	4c 89 f7             	mov    %r14,%rdi
   3343c:	e8 79 3c fd ff       	callq  70ba <e1000_leave_82542_rst>
   33441:	31 c0                	xor    %eax,%eax
   33443:	eb 24                	jmp    33469 <e1000_set_mac+0x115>
   33445:	b8 9d ff ff ff       	mov    $0xffffff9d,%eax
   3344a:	eb 1d                	jmp    33469 <e1000_set_mac+0x115>
   3344c:	49 8d 9d b8 0b 00 00 	lea    0xbb8(%r13),%rbx
   33453:	4d 8d b5 00 08 00 00 	lea    0x800(%r13),%r14
   3345a:	83 7b 10 01          	cmpl   $0x1,0x10(%rbx)
   3345e:	0f 85 72 ff ff ff    	jne    333d6 <e1000_set_mac+0x82>
   33464:	e9 65 ff ff ff       	jmpq   333ce <e1000_set_mac+0x7a>
   33469:	41 59                	pop    %r9
   3346b:	41 5a                	pop    %r10
   3346d:	5b                   	pop    %rbx
   3346e:	41 5c                	pop    %r12
   33470:	41 5d                	pop    %r13
   33472:	41 5e                	pop    %r14
   33474:	c9                   	leaveq 
   33475:	c3                   	retq   

0000000000033476 <e1000_xmit_frame>:
   33476:	55                   	push   %rbp
   33477:	48 89 e5             	mov    %rsp,%rbp
   3347a:	41 57                	push   %r15
   3347c:	49 89 ff             	mov    %rdi,%r15
   3347f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33482: R_X86_64_32S	.rodata.str1.1+0x356b
   33486:	41 56                	push   %r14
   33488:	41 55                	push   %r13
   3348a:	41 54                	push   %r12
   3348c:	53                   	push   %rbx
   3348d:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   33494:	48 89 b5 d8 fe ff ff 	mov    %rsi,0xfffffffffffffed8(%rbp)
   3349b:	e8 00 00 00 00       	callq  334a0 <e1000_xmit_frame+0x2a>
			3349c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   334a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			334a3: R_X86_64_32S	.rodata.str1.1+0x1be
   334a7:	e8 00 00 00 00       	callq  334ac <e1000_xmit_frame+0x36>
			334a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   334ac:	48 8b 95 d8 fe ff ff 	mov    0xfffffffffffffed8(%rbp),%rdx
   334b3:	48 8b 85 d8 fe ff ff 	mov    0xfffffffffffffed8(%rbp),%rax
   334ba:	41 8b 4f 6c          	mov    0x6c(%r15),%ecx
   334be:	48 81 c2 b8 0b 00 00 	add    $0xbb8,%rdx
   334c5:	48 05 00 08 00 00    	add    $0x800,%rax
   334cb:	48 89 95 f0 fe ff ff 	mov    %rdx,0xfffffffffffffef0(%rbp)
   334d2:	41 8b 57 68          	mov    0x68(%r15),%edx
   334d6:	48 89 85 e8 fe ff ff 	mov    %rax,0xfffffffffffffee8(%rbp)
   334dd:	48 8b 98 b0 01 00 00 	mov    0x1b0(%rax),%rbx
   334e4:	85 d2                	test   %edx,%edx
   334e6:	48 89 9d f8 fe ff ff 	mov    %rbx,0xfffffffffffffef8(%rbp)
   334ed:	0f 84 3f 08 00 00    	je     33d32 <e1000_xmit_frame+0x8bc>
   334f3:	48 8b 9d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rbx
   334fa:	41 89 d5             	mov    %edx,%r13d
   334fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33500: R_X86_64_32S	.rodata.str1.1+0x28b8
   33504:	8b 43 10             	mov    0x10(%rbx),%eax
   33507:	83 f8 0e             	cmp    $0xe,%eax
   3350a:	19 c0                	sbb    %eax,%eax
   3350c:	41 29 cd             	sub    %ecx,%r13d
   3350f:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   33514:	05 00 20 00 00       	add    $0x2000,%eax
   33519:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   3351c:	e8 00 00 00 00       	callq  33521 <e1000_xmit_frame+0xab>
			3351d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33521:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   33528:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   3352f:	66 8b 40 06          	mov    0x6(%rax),%ax
   33533:	66 85 c0             	test   %ax,%ax
   33536:	66 89 85 e4 fe ff ff 	mov    %ax,0xfffffffffffffee4(%rbp)
   3353d:	0f 84 09 08 00 00    	je     33d4c <e1000_xmit_frame+0x8d6>
   33543:	0f b7 c0             	movzwl %ax,%eax
   33546:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33549: R_X86_64_32S	.rodata.str1.1+0x357c
   3354d:	c1 e0 02             	shl    $0x2,%eax
   33550:	39 45 88             	cmp    %eax,0xffffffffffffff88(%rbp)
   33553:	0f 46 45 88          	cmovbe 0xffffffffffffff88(%rbp),%eax
   33557:	89 85 18 ff ff ff    	mov    %eax,0xffffffffffffff18(%rbp)
   3355d:	e8 00 00 00 00       	callq  33562 <e1000_xmit_frame+0xec>
			3355e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33562:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33565: R_X86_64_32S	.rodata.str1.1+0x2929
   33569:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   3356c:	0f bd 95 18 ff ff ff 	bsr    0xffffffffffffff18(%rbp),%edx
   33573:	0f 44 d0             	cmove  %eax,%edx
   33576:	89 95 1c ff ff ff    	mov    %edx,0xffffffffffffff1c(%rbp)
   3357c:	e8 00 00 00 00       	callq  33581 <e1000_xmit_frame+0x10b>
			3357d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33581:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33584: R_X86_64_32S	.rodata.str1.1+0x293e
   33588:	e8 00 00 00 00       	callq  3358d <e1000_xmit_frame+0x117>
			33589: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3358d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33590: R_X86_64_32S	.rodata.str1.1+0x2953
   33594:	4d 8b b7 c0 00 00 00 	mov    0xc0(%r15),%r14
   3359b:	45 8b a7 a8 00 00 00 	mov    0xa8(%r15),%r12d
   335a2:	49 8b 9f c8 00 00 00 	mov    0xc8(%r15),%rbx
   335a9:	e8 00 00 00 00       	callq  335ae <e1000_xmit_frame+0x138>
			335aa: R_X86_64_PC32	record_function+0xfffffffffffffffc
   335ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			335b1: R_X86_64_32S	.rodata.str1.1+0x295e
   335b5:	e8 00 00 00 00       	callq  335ba <e1000_xmit_frame+0x144>
			335b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   335ba:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			335bd: R_X86_64_32S	.rodata.str1.1+0x293e
   335c1:	e8 00 00 00 00       	callq  335c6 <e1000_xmit_frame+0x150>
			335c2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   335c6:	41 8b 87 a8 00 00 00 	mov    0xa8(%r15),%eax
   335cd:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   335d4:	8a 50 0c             	mov    0xc(%rax),%dl
   335d7:	c0 ea 04             	shr    $0x4,%dl
   335da:	41 83 7f 6c 00       	cmpl   $0x0,0x6c(%r15)
   335df:	0f 84 7f 14 00 00    	je     34a64 <e1000_xmit_frame+0x15ee>
   335e5:	43 8d 04 34          	lea    (%r12,%r14,1),%eax
   335e9:	29 d8                	sub    %ebx,%eax
   335eb:	8d 04 90             	lea    (%rax,%rdx,4),%eax
   335ee:	0f b6 d8             	movzbl %al,%ebx
   335f1:	44 39 eb             	cmp    %r13d,%ebx
   335f4:	0f 85 6a 14 00 00    	jne    34a64 <e1000_xmit_frame+0x15ee>
   335fa:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   33601:	8b 41 10             	mov    0x10(%rcx),%eax
   33604:	83 f8 04             	cmp    $0x4,%eax
   33607:	74 14                	je     3361d <e1000_xmit_frame+0x1a7>
   33609:	83 f8 0e             	cmp    $0xe,%eax
   3360c:	74 34                	je     33642 <e1000_xmit_frame+0x1cc>
   3360e:	83 f8 0f             	cmp    $0xf,%eax
   33611:	74 2f                	je     33642 <e1000_xmit_frame+0x1cc>
   33613:	83 f8 10             	cmp    $0x10,%eax
   33616:	74 2a                	je     33642 <e1000_xmit_frame+0x1cc>
   33618:	83 f8 12             	cmp    $0x12,%eax
   3361b:	eb 1f                	jmp    3363c <e1000_xmit_frame+0x1c6>
   3361d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33620: R_X86_64_32S	.rodata.str1.1+0x3580
   33624:	e8 00 00 00 00       	callq  33629 <e1000_xmit_frame+0x1b3>
			33625: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33629:	41 8b 87 b4 00 00 00 	mov    0xb4(%r15),%eax
   33630:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   33637:	48 ff c8             	dec    %rax
   3363a:	a8 04                	test   $0x4,%al
   3363c:	0f 85 25 14 00 00    	jne    34a67 <e1000_xmit_frame+0x15f1>
   33642:	41 8b 47 6c          	mov    0x6c(%r15),%eax
   33646:	c7 85 20 ff ff ff 04 	movl   $0x4,0xffffffffffffff20(%rbp)
   3364d:	00 00 00 
   33650:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33653: R_X86_64_32S	.rodata.str1.1+0x3591
   33657:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   3365b:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   3365f:	83 f8 04             	cmp    $0x4,%eax
   33662:	0f 47 85 20 ff ff ff 	cmova  0xffffffffffffff20(%rbp),%eax
   33669:	89 85 20 ff ff ff    	mov    %eax,0xffffffffffffff20(%rbp)
   3366f:	e8 00 00 00 00       	callq  33674 <e1000_xmit_frame+0x1fe>
			33670: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33674:	8b 9d 20 ff ff ff    	mov    0xffffffffffffff20(%rbp),%ebx
   3367a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3367d: R_X86_64_32S	.rodata.str1.1+0x35a2
   33681:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   33688:	00 
   33689:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   33690:	00 
   33691:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   33698:	4c 89 7d b0          	mov    %r15,0xffffffffffffffb0(%rbp)
   3369c:	89 5d c0             	mov    %ebx,0xffffffffffffffc0(%rbp)
   3369f:	e8 00 00 00 00       	callq  336a4 <e1000_xmit_frame+0x22e>
			336a0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   336a4:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   336a8:	4c 89 e2             	mov    %r12,%rdx
   336ab:	4c 89 ee             	mov    %r13,%rsi
   336ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			336b1: R_X86_64_32S	.rodata.str1.1+0x3591
   336b5:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   336bc:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   336c3:	00 
   336c4:	e8 00 00 00 00       	callq  336c9 <e1000_xmit_frame+0x253>
			336c5: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   336c9:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   336cd:	48 85 c0             	test   %rax,%rax
   336d0:	0f 84 c7 02 00 00    	je     3399d <e1000_xmit_frame+0x527>
   336d6:	8a 40 7d             	mov    0x7d(%rax),%al
   336d9:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   336dd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   336e3:	4c 89 e2             	mov    %r12,%rdx
   336e6:	4c 89 ee             	mov    %r13,%rsi
   336e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			336ec: R_X86_64_32S	.rodata.str1.1+0x3591
   336f0:	48 89 d9             	mov    %rbx,%rcx
   336f3:	83 e0 07             	and    $0x7,%eax
   336f6:	0f b6 c0             	movzbl %al,%eax
   336f9:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   336fc:	e8 00 00 00 00       	callq  33701 <e1000_xmit_frame+0x28b>
			336fd: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33701:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33705:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3370b:	4c 89 e2             	mov    %r12,%rdx
   3370e:	4c 89 ee             	mov    %r13,%rsi
   33711:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33714: R_X86_64_32S	.rodata.str1.1+0x3591
   33718:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   3371f:	e8 00 00 00 00       	callq  33724 <e1000_xmit_frame+0x2ae>
			33720: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33724:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33728:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3372e:	4c 89 e2             	mov    %r12,%rdx
   33731:	4c 89 ee             	mov    %r13,%rsi
   33734:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33737: R_X86_64_32S	.rodata.str1.1+0x3591
   3373b:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   33742:	e8 00 00 00 00       	callq  33747 <e1000_xmit_frame+0x2d1>
			33743: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33747:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   3374b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   33751:	48 89 d9             	mov    %rbx,%rcx
   33754:	4c 89 e2             	mov    %r12,%rdx
   33757:	4c 89 ee             	mov    %r13,%rsi
   3375a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3375d: R_X86_64_32S	.rodata.str1.1+0x3591
   33761:	8a 40 7c             	mov    0x7c(%rax),%al
   33764:	c0 e8 02             	shr    $0x2,%al
   33767:	83 e0 03             	and    $0x3,%eax
   3376a:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   3376d:	e8 00 00 00 00       	callq  33772 <e1000_xmit_frame+0x2fc>
			3376e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33772:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33776:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3377c:	4c 89 e2             	mov    %r12,%rdx
   3377f:	4c 89 ee             	mov    %r13,%rsi
   33782:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33785: R_X86_64_32S	.rodata.str1.1+0x3591
   33789:	48 83 c1 6c          	add    $0x6c,%rcx
   3378d:	e8 00 00 00 00       	callq  33792 <e1000_xmit_frame+0x31c>
			3378e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33792:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33796:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3379c:	4c 89 e2             	mov    %r12,%rdx
   3379f:	4c 89 ee             	mov    %r13,%rsi
   337a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			337a5: R_X86_64_32S	.rodata.str1.1+0x3591
   337a9:	48 81 c1 a4 00 00 00 	add    $0xa4,%rcx
   337b0:	e8 00 00 00 00       	callq  337b5 <e1000_xmit_frame+0x33f>
			337b1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   337b5:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   337b9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   337bf:	48 89 d9             	mov    %rbx,%rcx
   337c2:	4c 89 e2             	mov    %r12,%rdx
   337c5:	4c 89 ee             	mov    %r13,%rsi
   337c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			337cb: R_X86_64_32S	.rodata.str1.1+0x3591
   337cf:	8a 40 7c             	mov    0x7c(%rax),%al
   337d2:	d0 e8                	shr    %al
   337d4:	83 e0 01             	and    $0x1,%eax
   337d7:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   337da:	e8 00 00 00 00       	callq  337df <e1000_xmit_frame+0x369>
			337db: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   337df:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   337e3:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   337e9:	4c 89 e2             	mov    %r12,%rdx
   337ec:	4c 89 ee             	mov    %r13,%rsi
   337ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			337f2: R_X86_64_32S	.rodata.str1.1+0x3591
   337f6:	48 83 c1 76          	add    $0x76,%rcx
   337fa:	e8 00 00 00 00       	callq  337ff <e1000_xmit_frame+0x389>
			337fb: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   337ff:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33803:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   33809:	4c 89 e2             	mov    %r12,%rdx
   3380c:	4c 89 ee             	mov    %r13,%rsi
   3380f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33812: R_X86_64_32S	.rodata.str1.1+0x3591
   33816:	48 83 c1 74          	add    $0x74,%rcx
   3381a:	e8 00 00 00 00       	callq  3381f <e1000_xmit_frame+0x3a9>
			3381b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3381f:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33823:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   33829:	4c 89 e2             	mov    %r12,%rdx
   3382c:	4c 89 ee             	mov    %r13,%rsi
   3382f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33832: R_X86_64_32S	.rodata.str1.1+0x3591
   33836:	48 83 c1 68          	add    $0x68,%rcx
   3383a:	e8 00 00 00 00       	callq  3383f <e1000_xmit_frame+0x3c9>
			3383b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3383f:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33843:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   33849:	4c 89 e2             	mov    %r12,%rdx
   3384c:	4c 89 ee             	mov    %r13,%rsi
   3384f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33852: R_X86_64_32S	.rodata.str1.1+0x3591
   33856:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   3385d:	e8 00 00 00 00       	callq  33862 <e1000_xmit_frame+0x3ec>
			3385e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33862:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33866:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3386c:	4c 89 e2             	mov    %r12,%rdx
   3386f:	4c 89 ee             	mov    %r13,%rsi
   33872:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33875: R_X86_64_32S	.rodata.str1.1+0x3591
   33879:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   33880:	e8 00 00 00 00       	callq  33885 <e1000_xmit_frame+0x40f>
			33881: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   33885:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33889:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3388f:	4c 89 e2             	mov    %r12,%rdx
   33892:	4c 89 ee             	mov    %r13,%rsi
   33895:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33898: R_X86_64_32S	.rodata.str1.1+0x3591
   3389c:	48 83 c1 7e          	add    $0x7e,%rcx
   338a0:	e8 00 00 00 00       	callq  338a5 <e1000_xmit_frame+0x42f>
			338a1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   338a5:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   338a9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   338af:	4c 89 e2             	mov    %r12,%rdx
   338b2:	4c 89 ee             	mov    %r13,%rsi
   338b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			338b8: R_X86_64_32S	.rodata.str1.1+0x3591
   338bc:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   338c3:	e8 00 00 00 00       	callq  338c8 <e1000_xmit_frame+0x452>
			338c4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   338c8:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   338cc:	4c 89 e2             	mov    %r12,%rdx
   338cf:	4c 89 ee             	mov    %r13,%rsi
   338d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			338d5: R_X86_64_32S	.rodata.str1.1+0x3591
   338d9:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   338e0:	e8 00 00 00 00       	callq  338e5 <e1000_xmit_frame+0x46f>
			338e1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   338e5:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   338e9:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   338f0:	00 
   338f1:	74 5d                	je     33950 <e1000_xmit_frame+0x4da>
   338f3:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   338f9:	31 db                	xor    %ebx,%ebx
   338fb:	e8 00 00 00 00       	callq  33900 <e1000_xmit_frame+0x48a>
			338fc: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   33900:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   33904:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3390a:	4c 89 e2             	mov    %r12,%rdx
   3390d:	4c 89 ee             	mov    %r13,%rsi
   33910:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33913: R_X86_64_32S	.rodata.str1.1+0x3591
   33917:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   3391a:	e8 00 00 00 00       	callq  3391f <e1000_xmit_frame+0x4a9>
			3391b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3391f:	eb 2a                	jmp    3394b <e1000_xmit_frame+0x4d5>
   33921:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   33925:	48 63 cb             	movslq %ebx,%rcx
   33928:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   3392c:	48 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%rsi
   33930:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   33936:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33939: R_X86_64_32S	.rodata.str1.1+0x3591
   3393d:	ff c3                	inc    %ebx
   3393f:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   33946:	e8 00 00 00 00       	callq  3394b <e1000_xmit_frame+0x4d5>
			33947: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3394b:	3b 5d cc             	cmp    0xffffffffffffffcc(%rbp),%ebx
   3394e:	7c d1                	jl     33921 <e1000_xmit_frame+0x4ab>
   33950:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   33954:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   33958:	4c 8d 65 b8          	lea    0xffffffffffffffb8(%rbp),%r12
   3395c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3395f: R_X86_64_32S	.rodata.str1.1+0x3591
   33963:	48 89 da             	mov    %rbx,%rdx
   33966:	4c 89 e6             	mov    %r12,%rsi
   33969:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   33970:	e8 00 00 00 00       	callq  33975 <e1000_xmit_frame+0x4ff>
			33971: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   33975:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   33979:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   33980:	48 85 c9             	test   %rcx,%rcx
   33983:	74 18                	je     3399d <e1000_xmit_frame+0x527>
   33985:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3398b:	48 89 da             	mov    %rbx,%rdx
   3398e:	4c 89 e6             	mov    %r12,%rsi
   33991:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33994: R_X86_64_32S	.rodata.str1.1+0x3591
   33998:	e8 00 00 00 00       	callq  3399d <e1000_xmit_frame+0x527>
			33999: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3399d:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   339a1:	4c 8d 75 c4          	lea    0xffffffffffffffc4(%rbp),%r14
   339a5:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   339a9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   339af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			339b2: R_X86_64_32S	.rodata.str1.1+0x3591
   339b6:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   339ba:	4c 89 f2             	mov    %r14,%rdx
   339bd:	48 89 de             	mov    %rbx,%rsi
   339c0:	e8 00 00 00 00       	callq  339c5 <e1000_xmit_frame+0x54f>
			339c1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   339c5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   339c9:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   339cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			339d0: R_X86_64_32S	.rodata.str1.1+0x3591
   339d4:	48 c7 45 90 5d 04 00 	movq   $0x45d,0xffffffffffffff90(%rbp)
   339db:	00 
   339dc:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   339e0:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
   339e3:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   339e6:	e8 00 00 00 00       	callq  339eb <e1000_xmit_frame+0x575>
			339e7: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   339eb:	8b 85 20 ff ff ff    	mov    0xffffffffffffff20(%rbp),%eax
   339f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			339f4: R_X86_64_32S	.rodata.str1.1+0x35c1
   339f8:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
   339fc:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   339ff:	e8 00 00 00 00       	callq  33a04 <e1000_xmit_frame+0x58e>
			33a00: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33a04:	4c 8b 65 a0          	mov    0xffffffffffffffa0(%rbp),%r12
   33a08:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   33a0e:	48 89 d9             	mov    %rbx,%rcx
   33a11:	4c 89 ea             	mov    %r13,%rdx
   33a14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33a17: R_X86_64_32S	.rodata.str1.1+0x3591
   33a1b:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   33a22:	4c 89 e6             	mov    %r12,%rsi
   33a25:	e8 00 00 00 00       	callq  33a2a <e1000_xmit_frame+0x5b4>
			33a26: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   33a2a:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
   33a2f:	0f 84 72 02 00 00    	je     33ca7 <e1000_xmit_frame+0x831>
   33a35:	4d 89 f0             	mov    %r14,%r8
   33a38:	b9 01 00 00 00       	mov    $0x1,%ecx
   33a3d:	4c 89 ea             	mov    %r13,%rdx
   33a40:	4c 89 e6             	mov    %r12,%rsi
   33a43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33a46: R_X86_64_32S	.rodata.str1.1+0x3591
   33a4a:	e8 00 00 00 00       	callq  33a4f <e1000_xmit_frame+0x5d9>
			33a4b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33a4f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   33a53:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   33a56:	4c 89 e6             	mov    %r12,%rsi
   33a59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33a5c: R_X86_64_32S	.rodata.str1.1+0x3591
   33a60:	8a 41 7d             	mov    0x7d(%rcx),%al
   33a63:	83 e2 07             	and    $0x7,%edx
   33a66:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   33a69:	09 d0                	or     %edx,%eax
   33a6b:	4c 89 ea             	mov    %r13,%rdx
   33a6e:	88 41 7d             	mov    %al,0x7d(%rcx)
   33a71:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33a75:	b9 04 00 00 00       	mov    $0x4,%ecx
   33a7a:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   33a81:	e8 00 00 00 00       	callq  33a86 <e1000_xmit_frame+0x610>
			33a82: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33a86:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33a8a:	b9 04 00 00 00       	mov    $0x4,%ecx
   33a8f:	4c 89 ea             	mov    %r13,%rdx
   33a92:	4c 89 e6             	mov    %r12,%rsi
   33a95:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33a98: R_X86_64_32S	.rodata.str1.1+0x3591
   33a9c:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   33aa3:	e8 00 00 00 00       	callq  33aa8 <e1000_xmit_frame+0x632>
			33aa4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33aa8:	4d 89 f0             	mov    %r14,%r8
   33aab:	b9 01 00 00 00       	mov    $0x1,%ecx
   33ab0:	4c 89 ea             	mov    %r13,%rdx
   33ab3:	4c 89 e6             	mov    %r12,%rsi
   33ab6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33ab9: R_X86_64_32S	.rodata.str1.1+0x3591
   33abd:	e8 00 00 00 00       	callq  33ac2 <e1000_xmit_frame+0x64c>
			33abe: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33ac2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   33ac6:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   33ac9:	4c 89 e6             	mov    %r12,%rsi
   33acc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33acf: R_X86_64_32S	.rodata.str1.1+0x3591
   33ad3:	8a 41 7c             	mov    0x7c(%rcx),%al
   33ad6:	83 e2 03             	and    $0x3,%edx
   33ad9:	c1 e2 02             	shl    $0x2,%edx
   33adc:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   33adf:	09 d0                	or     %edx,%eax
   33ae1:	4c 89 ea             	mov    %r13,%rdx
   33ae4:	88 41 7c             	mov    %al,0x7c(%rcx)
   33ae7:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33aeb:	b9 04 00 00 00       	mov    $0x4,%ecx
   33af0:	49 83 c0 6c          	add    $0x6c,%r8
   33af4:	e8 00 00 00 00       	callq  33af9 <e1000_xmit_frame+0x683>
			33af5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33af9:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33afd:	b9 04 00 00 00       	mov    $0x4,%ecx
   33b02:	4c 89 ea             	mov    %r13,%rdx
   33b05:	4c 89 e6             	mov    %r12,%rsi
   33b08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33b0b: R_X86_64_32S	.rodata.str1.1+0x3591
   33b0f:	49 83 c0 74          	add    $0x74,%r8
   33b13:	e8 00 00 00 00       	callq  33b18 <e1000_xmit_frame+0x6a2>
			33b14: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33b18:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33b1c:	b9 04 00 00 00       	mov    $0x4,%ecx
   33b21:	4c 89 ea             	mov    %r13,%rdx
   33b24:	4c 89 e6             	mov    %r12,%rsi
   33b27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33b2a: R_X86_64_32S	.rodata.str1.1+0x3591
   33b2e:	49 83 c0 68          	add    $0x68,%r8
   33b32:	e8 00 00 00 00       	callq  33b37 <e1000_xmit_frame+0x6c1>
			33b33: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33b37:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33b3b:	b9 04 00 00 00       	mov    $0x4,%ecx
   33b40:	4c 89 ea             	mov    %r13,%rdx
   33b43:	4c 89 e6             	mov    %r12,%rsi
   33b46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33b49: R_X86_64_32S	.rodata.str1.1+0x3591
   33b4d:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   33b54:	e8 00 00 00 00       	callq  33b59 <e1000_xmit_frame+0x6e3>
			33b55: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33b59:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33b5d:	b9 04 00 00 00       	mov    $0x4,%ecx
   33b62:	4c 89 ea             	mov    %r13,%rdx
   33b65:	4c 89 e6             	mov    %r12,%rsi
   33b68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33b6b: R_X86_64_32S	.rodata.str1.1+0x3591
   33b6f:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   33b76:	e8 00 00 00 00       	callq  33b7b <e1000_xmit_frame+0x705>
			33b77: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33b7b:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33b7f:	b9 02 00 00 00       	mov    $0x2,%ecx
   33b84:	4c 89 ea             	mov    %r13,%rdx
   33b87:	4c 89 e6             	mov    %r12,%rsi
   33b8a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33b8d: R_X86_64_32S	.rodata.str1.1+0x3591
   33b91:	49 83 c0 7e          	add    $0x7e,%r8
   33b95:	e8 00 00 00 00       	callq  33b9a <e1000_xmit_frame+0x724>
			33b96: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33b9a:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   33b9e:	b9 04 00 00 00       	mov    $0x4,%ecx
   33ba3:	4c 89 ea             	mov    %r13,%rdx
   33ba6:	4c 89 e6             	mov    %r12,%rsi
   33ba9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33bac: R_X86_64_32S	.rodata.str1.1+0x3591
   33bb0:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   33bb7:	e8 00 00 00 00       	callq  33bbc <e1000_xmit_frame+0x746>
			33bb8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33bbc:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   33bc0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   33bc6:	4c 89 ea             	mov    %r13,%rdx
   33bc9:	4c 89 e6             	mov    %r12,%rsi
   33bcc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33bcf: R_X86_64_32S	.rodata.str1.1+0x3591
   33bd3:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   33bda:	e8 00 00 00 00       	callq  33bdf <e1000_xmit_frame+0x769>
			33bdb: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   33bdf:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   33be3:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   33bea:	00 
   33beb:	74 69                	je     33c56 <e1000_xmit_frame+0x7e0>
   33bed:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   33bf1:	b9 04 00 00 00       	mov    $0x4,%ecx
   33bf6:	4c 89 ea             	mov    %r13,%rdx
   33bf9:	4c 89 e6             	mov    %r12,%rsi
   33bfc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33bff: R_X86_64_32S	.rodata.str1.1+0x3591
   33c03:	31 db                	xor    %ebx,%ebx
   33c05:	e8 00 00 00 00       	callq  33c0a <e1000_xmit_frame+0x794>
			33c06: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33c0a:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   33c0e:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
   33c11:	b9 01 00 00 00       	mov    $0x1,%ecx
   33c16:	ba 01 00 00 00       	mov    $0x1,%edx
   33c1b:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   33c22:	e8 00 00 00 00       	callq  33c27 <e1000_xmit_frame+0x7b1>
			33c23: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   33c27:	eb 28                	jmp    33c51 <e1000_xmit_frame+0x7db>
   33c29:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   33c2d:	4c 63 c3             	movslq %ebx,%r8
   33c30:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   33c34:	b9 01 00 00 00       	mov    $0x1,%ecx
   33c39:	4c 89 e6             	mov    %r12,%rsi
   33c3c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33c3f: R_X86_64_32S	.rodata.str1.1+0x3591
   33c43:	ff c3                	inc    %ebx
   33c45:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   33c4c:	e8 00 00 00 00       	callq  33c51 <e1000_xmit_frame+0x7db>
			33c4d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33c51:	3b 5d c0             	cmp    0xffffffffffffffc0(%rbp),%ebx
   33c54:	7c d3                	jl     33c29 <e1000_xmit_frame+0x7b3>
   33c56:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   33c5a:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   33c5e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   33c64:	4c 89 e6             	mov    %r12,%rsi
   33c67:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33c6a: R_X86_64_32S	.rodata.str1.1+0x3591
   33c6e:	48 89 da             	mov    %rbx,%rdx
   33c71:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   33c78:	e8 00 00 00 00       	callq  33c7d <e1000_xmit_frame+0x807>
			33c79: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   33c7d:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   33c81:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   33c88:	48 85 c0             	test   %rax,%rax
   33c8b:	74 1a                	je     33ca7 <e1000_xmit_frame+0x831>
   33c8d:	49 89 c0             	mov    %rax,%r8
   33c90:	b9 01 00 00 00       	mov    $0x1,%ecx
   33c95:	48 89 da             	mov    %rbx,%rdx
   33c98:	4c 89 e6             	mov    %r12,%rsi
   33c9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33c9e: R_X86_64_32S	.rodata.str1.1+0x3591
   33ca2:	e8 00 00 00 00       	callq  33ca7 <e1000_xmit_frame+0x831>
			33ca3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33ca7:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   33cab:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   33caf:	b9 04 00 00 00       	mov    $0x4,%ecx
   33cb4:	4c 89 e6             	mov    %r12,%rsi
   33cb7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33cba: R_X86_64_32S	.rodata.str1.1+0x3591
   33cbe:	48 89 da             	mov    %rbx,%rdx
   33cc1:	e8 00 00 00 00       	callq  33cc6 <e1000_xmit_frame+0x850>
			33cc2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33cc6:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   33cca:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   33cd0:	48 89 da             	mov    %rbx,%rdx
   33cd3:	4c 89 e6             	mov    %r12,%rsi
   33cd6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33cd9: R_X86_64_32S	.rodata.str1.1+0x3591
   33cdd:	e8 00 00 00 00       	callq  33ce2 <e1000_xmit_frame+0x86c>
			33cde: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   33ce2:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   33ce6:	48 85 c0             	test   %rax,%rax
   33ce9:	74 1a                	je     33d05 <e1000_xmit_frame+0x88f>
   33ceb:	49 89 c0             	mov    %rax,%r8
   33cee:	b9 01 00 00 00       	mov    $0x1,%ecx
   33cf3:	48 89 da             	mov    %rbx,%rdx
   33cf6:	4c 89 e6             	mov    %r12,%rsi
   33cf9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33cfc: R_X86_64_32S	.rodata.str1.1+0x3591
   33d00:	e8 00 00 00 00       	callq  33d05 <e1000_xmit_frame+0x88f>
			33d01: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   33d05:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   33d09:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   33d0d:	48 85 ff             	test   %rdi,%rdi
   33d10:	74 0d                	je     33d1f <e1000_xmit_frame+0x8a9>
   33d12:	e8 00 00 00 00       	callq  33d17 <e1000_xmit_frame+0x8a1>
			33d13: R_X86_64_PC32	kfree+0xfffffffffffffffc
   33d17:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   33d1e:	00 
   33d1f:	48 85 db             	test   %rbx,%rbx
   33d22:	75 1b                	jne    33d3f <e1000_xmit_frame+0x8c9>
   33d24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33d27: R_X86_64_32S	str_714699084
   33d2b:	31 c0                	xor    %eax,%eax
   33d2d:	e8 00 00 00 00       	callq  33d32 <e1000_xmit_frame+0x8bc>
			33d2e: R_X86_64_PC32	printk+0xfffffffffffffffc
   33d32:	4c 89 ff             	mov    %r15,%rdi
   33d35:	e8 00 00 00 00       	callq  33d3a <e1000_xmit_frame+0x8c4>
			33d36: R_X86_64_PC32	dev_kfree_skb_any+0xfffffffffffffffc
   33d3a:	e9 21 0d 00 00       	jmpq   34a60 <e1000_xmit_frame+0x15ea>
   33d3f:	41 8b 5f 68          	mov    0x68(%r15),%ebx
   33d43:	41 2b 5f 6c          	sub    0x6c(%r15),%ebx
   33d47:	e9 1b 0d 00 00       	jmpq   34a67 <e1000_xmit_frame+0x15f1>
   33d4c:	41 8a 47 7c          	mov    0x7c(%r15),%al
   33d50:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   33d56:	41 be 0c 00 00 00    	mov    $0xc,%r14d
   33d5c:	83 e0 0c             	and    $0xc,%eax
   33d5f:	3c 0c                	cmp    $0xc,%al
   33d61:	74 03                	je     33d66 <e1000_xmit_frame+0x8f0>
   33d63:	45 30 e4             	xor    %r12b,%r12b
   33d66:	41 83 7f 6c 00       	cmpl   $0x0,0x6c(%r15)
   33d6b:	41 8d 5c 24 01       	lea    0x1(%r12),%ebx
   33d70:	75 40                	jne    33db2 <e1000_xmit_frame+0x93c>
   33d72:	48 8b 95 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdx
   33d79:	80 7a 5c 00          	cmpb   $0x0,0x5c(%rdx)
   33d7d:	74 33                	je     33db2 <e1000_xmit_frame+0x93c>
   33d7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33d82: R_X86_64_32S	.rodata.str1.1+0x28ad
   33d86:	e8 00 00 00 00       	callq  33d8b <e1000_xmit_frame+0x915>
			33d87: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33d8b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33d8e: R_X86_64_32S	.rodata.str1.1+0x28b8
   33d92:	e8 00 00 00 00       	callq  33d97 <e1000_xmit_frame+0x921>
			33d93: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33d97:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   33d9e:	41 8d 54 24 02       	lea    0x2(%r12),%edx
   33da3:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   33daa:	66 83 78 06 00       	cmpw   $0x0,0x6(%rax)
   33daf:	0f 44 da             	cmove  %edx,%ebx
   33db2:	44 89 e8             	mov    %r13d,%eax
   33db5:	44 88 f1             	mov    %r14b,%cl
   33db8:	d3 e8                	shr    %cl,%eax
   33dba:	8d 44 18 01          	lea    0x1(%rax,%rbx,1),%eax
   33dbe:	48 8b 9d e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rbx
   33dc5:	89 45 80             	mov    %eax,0xffffffffffffff80(%rbp)
   33dc8:	8a 83 08 02 00 00    	mov    0x208(%rbx),%al
   33dce:	3c 01                	cmp    $0x1,%al
   33dd0:	48 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rax
   33dd7:	83 5d 80 ff          	sbbl   $0xffffffffffffffff,0xffffffffffffff80(%rbp)
   33ddb:	83 78 44 02          	cmpl   $0x2,0x44(%rax)
   33ddf:	75 13                	jne    33df4 <e1000_xmit_frame+0x97e>
   33de1:	31 c0                	xor    %eax,%eax
   33de3:	41 81 fd df 07 00 00 	cmp    $0x7df,%r13d
   33dea:	0f 97 c0             	seta   %al
   33ded:	83 f8 01             	cmp    $0x1,%eax
   33df0:	83 5d 80 ff          	sbbl   $0xffffffffffffffff,0xffffffffffffff80(%rbp)
   33df4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33df7: R_X86_64_32S	.rodata.str1.1+0x28b8
   33dfb:	31 db                	xor    %ebx,%ebx
   33dfd:	e8 00 00 00 00       	callq  33e02 <e1000_xmit_frame+0x98c>
			33dfe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33e02:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   33e09:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   33e10:	8b 40 04             	mov    0x4(%rax),%eax
   33e13:	0f b7 d0             	movzwl %ax,%edx
   33e16:	66 89 85 e6 fe ff ff 	mov    %ax,0xfffffffffffffee6(%rbp)
   33e1d:	89 95 14 ff ff ff    	mov    %edx,0xffffffffffffff14(%rbp)
   33e23:	0f b7 8d e6 fe ff ff 	movzwl 0xfffffffffffffee6(%rbp),%ecx
   33e2a:	41 89 dc             	mov    %ebx,%r12d
   33e2d:	48 ff c3             	inc    %rbx
   33e30:	48 89 c8             	mov    %rcx,%rax
   33e33:	48 89 8d 68 ff ff ff 	mov    %rcx,0xffffffffffffff68(%rbp)
   33e3a:	48 ff c0             	inc    %rax
   33e3d:	48 39 c3             	cmp    %rax,%rbx
   33e40:	74 36                	je     33e78 <e1000_xmit_frame+0xa02>
   33e42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33e45: R_X86_64_32S	.rodata.str1.1+0x28b8
   33e49:	e8 00 00 00 00       	callq  33e4e <e1000_xmit_frame+0x9d8>
			33e4a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33e4e:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   33e55:	44 89 e2             	mov    %r12d,%edx
   33e58:	44 88 f1             	mov    %r14b,%cl
   33e5b:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   33e62:	48 c1 e2 04          	shl    $0x4,%rdx
   33e66:	8b 44 02 2c          	mov    0x2c(%rdx,%rax,1),%eax
   33e6a:	8b 55 80             	mov    0xffffffffffffff80(%rbp),%edx
   33e6d:	d3 e8                	shr    %cl,%eax
   33e6f:	8d 54 10 01          	lea    0x1(%rax,%rdx,1),%edx
   33e73:	89 55 80             	mov    %edx,0xffffffffffffff80(%rbp)
   33e76:	eb ab                	jmp    33e23 <e1000_xmit_frame+0x9ad>
   33e78:	48 8b 8d e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rcx
   33e7f:	8b 45 80             	mov    0xffffffffffffff80(%rbp),%eax
   33e82:	03 85 14 ff ff ff    	add    0xffffffffffffff14(%rbp),%eax
   33e88:	48 8b 9d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rbx
   33e8f:	80 b9 08 02 00 00 00 	cmpb   $0x0,0x208(%rcx)
   33e96:	0f 44 45 80          	cmove  0xffffffffffffff80(%rbp),%eax
   33e9a:	89 45 80             	mov    %eax,0xffffffffffffff80(%rbp)
   33e9d:	80 bb bc 00 00 00 00 	cmpb   $0x0,0xbc(%rbx)
   33ea4:	0f 84 f1 02 00 00    	je     3419b <e1000_xmit_frame+0xd25>
   33eaa:	83 7b 10 10          	cmpl   $0x10,0x10(%rbx)
   33eae:	0f 85 e7 02 00 00    	jne    3419b <e1000_xmit_frame+0xd25>
   33eb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33eb7: R_X86_64_32S	.rodata.str1.1+0x35e0
   33ebb:	e8 00 00 00 00       	callq  33ec0 <e1000_xmit_frame+0xa4a>
			33ebc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33ec0:	4c 8b b5 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%r14
   33ec7:	41 8b 87 a4 00 00 00 	mov    0xa4(%r15),%eax
   33ece:	49 81 c6 b8 03 00 00 	add    $0x3b8,%r14
   33ed5:	66 85 c0             	test   %ax,%ax
   33ed8:	74 1c                	je     33ef6 <e1000_xmit_frame+0xa80>
   33eda:	66 41 3b 86 c6 00 00 	cmp    0xc6(%r14),%ax
   33ee1:	00 
   33ee2:	0f 85 b3 02 00 00    	jne    3419b <e1000_xmit_frame+0xd25>
   33ee8:	41 f6 86 c4 00 00 00 	testb  $0x2,0xc4(%r14)
   33eef:	02 
   33ef0:	0f 84 a5 02 00 00    	je     3419b <e1000_xmit_frame+0xd25>
   33ef6:	41 81 7f 68 1a 01 00 	cmpl   $0x11a,0x68(%r15)
   33efd:	00 
   33efe:	0f 86 97 02 00 00    	jbe    3419b <e1000_xmit_frame+0xd25>
   33f04:	49 8b 87 c8 00 00 00 	mov    0xc8(%r15),%rax
   33f0b:	66 44 8b 60 0c       	mov    0xc(%rax),%r12w
   33f10:	66 41 83 fc 08       	cmp    $0x8,%r12w
   33f15:	0f 85 80 02 00 00    	jne    3419b <e1000_xmit_frame+0xd25>
   33f1b:	48 8d 50 0e          	lea    0xe(%rax),%rdx
   33f1f:	80 7a 09 11          	cmpb   $0x11,0x9(%rdx)
   33f23:	0f 85 72 02 00 00    	jne    3419b <e1000_xmit_frame+0xd25>
   33f29:	8a 40 0e             	mov    0xe(%rax),%al
   33f2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33f2f: R_X86_64_32S	.rodata.str1.1+0x2ae1
   33f33:	83 e0 0f             	and    $0xf,%eax
   33f36:	48 c1 e0 02          	shl    $0x2,%rax
   33f3a:	83 e0 3c             	and    $0x3c,%eax
   33f3d:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
   33f41:	41 0f b7 5d 02       	movzwl 0x2(%r13),%ebx
   33f46:	e8 00 00 00 00       	callq  33f4b <e1000_xmit_frame+0xad5>
			33f47: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33f4b:	89 d8                	mov    %ebx,%eax
   33f4d:	c1 e3 08             	shl    $0x8,%ebx
   33f50:	c1 e8 08             	shr    $0x8,%eax
   33f53:	09 c3                	or     %eax,%ebx
   33f55:	66 83 fb 43          	cmp    $0x43,%bx
   33f59:	0f 85 3c 02 00 00    	jne    3419b <e1000_xmit_frame+0xd25>
   33f5f:	66 45 2b a7 c8 00 00 	sub    0xc8(%r15),%r12w
   33f66:	00 
   33f67:	41 8b 5f 68          	mov    0x68(%r15),%ebx
   33f6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33f6e: R_X86_64_32S	.rodata.str1.1+0x35f9
   33f72:	43 8d 04 2c          	lea    (%r12,%r13,1),%eax
   33f76:	66 29 c3             	sub    %ax,%bx
   33f79:	0f b7 db             	movzwl %bx,%ebx
   33f7c:	e8 00 00 00 00       	callq  33f81 <e1000_xmit_frame+0xb0b>
			33f7d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33f81:	4c 89 f7             	mov    %r14,%rdi
   33f84:	c6 45 90 40          	movb   $0x40,0xffffffffffffff90(%rbp)
   33f88:	66 89 5d 96          	mov    %bx,0xffffffffffffff96(%rbp)
   33f8c:	66 c7 45 92 00 00    	movw   $0x0,0xffffffffffffff92(%rbp)
   33f92:	66 c7 45 94 00 00    	movw   $0x0,0xffffffffffffff94(%rbp)
   33f98:	c6 45 91 00          	movb   $0x0,0xffffffffffffff91(%rbp)
   33f9c:	e8 1b 14 fd ff       	callq  53bc <e1000_mng_enable_host_if>
   33fa1:	85 c0                	test   %eax,%eax
   33fa3:	0f 85 f2 01 00 00    	jne    3419b <e1000_xmit_frame+0xd25>
   33fa9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33fac: R_X86_64_32S	.rodata.str1.1+0x3613
   33fb0:	e8 00 00 00 00       	callq  33fb5 <e1000_xmit_frame+0xb3f>
			33fb1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   33fb5:	66 85 db             	test   %bx,%bx
   33fb8:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   33fbf:	0f 84 d6 01 00 00    	je     3419b <e1000_xmit_frame+0xd25>
   33fc5:	0f b7 c3             	movzwl %bx,%eax
   33fc8:	83 c0 08             	add    $0x8,%eax
   33fcb:	3d f8 06 00 00       	cmp    $0x6f8,%eax
   33fd0:	0f 8f c5 01 00 00    	jg     3419b <e1000_xmit_frame+0xd25>
   33fd6:	89 d8                	mov    %ebx,%eax
   33fd8:	49 83 c5 08          	add    $0x8,%r13
   33fdc:	66 c1 eb 02          	shr    $0x2,%bx
   33fe0:	83 e0 03             	and    $0x3,%eax
   33fe3:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   33fe7:	4c 89 ad 70 ff ff ff 	mov    %r13,0xffffffffffffff70(%rbp)
   33fee:	66 89 85 26 ff ff ff 	mov    %ax,0xffffffffffffff26(%rbp)
   33ff5:	66 89 9d 7e ff ff ff 	mov    %bx,0xffffffffffffff7e(%rbp)
   33ffc:	66 c7 85 24 ff ff ff 	movw   $0x0,0xffffffffffffff24(%rbp)
   34003:	00 00 
   34005:	c7 85 d4 fe ff ff 08 	movl   $0x8,0xfffffffffffffed4(%rbp)
   3400c:	00 00 00 
   3400f:	66 8b 95 7e ff ff ff 	mov    0xffffffffffffff7e(%rbp),%dx
   34016:	66 39 95 24 ff ff ff 	cmp    %dx,0xffffffffffffff24(%rbp)
   3401d:	74 67                	je     34086 <e1000_xmit_frame+0xc10>
   3401f:	4c 89 e8             	mov    %r13,%rax
   34022:	31 d2                	xor    %edx,%edx
   34024:	48 8d 48 01          	lea    0x1(%rax),%rcx
   34028:	8a 00                	mov    (%rax),%al
   3402a:	42 88 04 02          	mov    %al,(%rdx,%r8,1)
   3402e:	48 ff c2             	inc    %rdx
   34031:	00 45 91             	add    %al,0xffffffffffffff91(%rbp)
   34034:	48 83 fa 04          	cmp    $0x4,%rdx
   34038:	74 05                	je     3403f <e1000_xmit_frame+0xbc9>
   3403a:	48 89 c8             	mov    %rcx,%rax
   3403d:	eb e5                	jmp    34024 <e1000_xmit_frame+0xbae>
   3403f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34042: R_X86_64_32S	.rodata.str1.1+0xb4
   34046:	49 8b 1e             	mov    (%r14),%rbx
   34049:	44 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12d
   3404d:	4c 89 85 c8 fe ff ff 	mov    %r8,0xfffffffffffffec8(%rbp)
   34054:	49 83 c5 04          	add    $0x4,%r13
   34058:	e8 00 00 00 00       	callq  3405d <e1000_xmit_frame+0xbe7>
			34059: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3405d:	48 63 85 d4 fe ff ff 	movslq 0xfffffffffffffed4(%rbp),%rax
   34064:	48 8d 9c 03 00 88 00 	lea    0x8800(%rbx,%rax,1),%rbx
   3406b:	00 
   3406c:	44 89 23             	mov    %r12d,(%rbx)
   3406f:	66 ff 85 24 ff ff ff 	incw   0xffffffffffffff24(%rbp)
   34076:	83 85 d4 fe ff ff 04 	addl   $0x4,0xfffffffffffffed4(%rbp)
   3407d:	4c 8b 85 c8 fe ff ff 	mov    0xfffffffffffffec8(%rbp),%r8
   34084:	eb 89                	jmp    3400f <e1000_xmit_frame+0xb99>
   34086:	0f b7 85 7e ff ff ff 	movzwl 0xffffffffffffff7e(%rbp),%eax
   3408d:	66 83 bd 26 ff ff ff 	cmpw   $0x0,0xffffffffffffff26(%rbp)
   34094:	00 
   34095:	48 8b 9d 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rbx
   3409c:	48 8d 0c 83          	lea    (%rbx,%rax,4),%rcx
   340a0:	0f 84 df 09 00 00    	je     34a85 <e1000_xmit_frame+0x160f>
   340a6:	31 d2                	xor    %edx,%edx
   340a8:	66 39 95 26 ff ff ff 	cmp    %dx,0xffffffffffffff26(%rbp)
   340af:	76 0b                	jbe    340bc <e1000_xmit_frame+0xc46>
   340b1:	8a 01                	mov    (%rcx),%al
   340b3:	48 ff c1             	inc    %rcx
   340b6:	42 88 04 02          	mov    %al,(%rdx,%r8,1)
   340ba:	eb 05                	jmp    340c1 <e1000_xmit_frame+0xc4b>
   340bc:	42 c6 04 02 00       	movb   $0x0,(%rdx,%r8,1)
   340c1:	42 8a 04 02          	mov    (%rdx,%r8,1),%al
   340c5:	48 ff c2             	inc    %rdx
   340c8:	00 45 91             	add    %al,0xffffffffffffff91(%rbp)
   340cb:	48 83 fa 04          	cmp    $0x4,%rdx
   340cf:	75 d7                	jne    340a8 <e1000_xmit_frame+0xc32>
   340d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			340d4: R_X86_64_32S	.rodata.str1.1+0xb4
   340d8:	49 8b 1e             	mov    (%r14),%rbx
   340db:	44 8b 65 c0          	mov    0xffffffffffffffc0(%rbp),%r12d
   340df:	e8 00 00 00 00       	callq  340e4 <e1000_xmit_frame+0xc6e>
			340e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   340e4:	0f b7 85 7e ff ff ff 	movzwl 0xffffffffffffff7e(%rbp),%eax
   340eb:	8d 04 85 08 00 00 00 	lea    0x8(,%rax,4),%eax
   340f2:	48 8d 9c 03 00 88 00 	lea    0x8800(%rbx,%rax,1),%rbx
   340f9:	00 
   340fa:	44 89 23             	mov    %r12d,(%rbx)
   340fd:	e9 83 09 00 00       	jmpq   34a85 <e1000_xmit_frame+0x160f>
   34102:	0f b7 c2             	movzwl %dx,%eax
   34105:	ff ca                	dec    %edx
   34107:	02 0c 06             	add    (%rsi,%rax,1),%cl
   3410a:	66 83 fa ff          	cmp    $0xffffffffffffffff,%dx
   3410e:	75 f2                	jne    34102 <e1000_xmit_frame+0xc8c>
   34110:	f7 d9                	neg    %ecx
   34112:	45 31 ed             	xor    %r13d,%r13d
   34115:	88 4d 91             	mov    %cl,0xffffffffffffff91(%rbp)
   34118:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3411b: R_X86_64_32S	.rodata.str1.1+0xb4
   3411f:	49 8b 1e             	mov    (%r14),%rbx
   34122:	46 8b 64 ad 90       	mov    0xffffffffffffff90(%rbp,%r13,4),%r12d
   34127:	e8 00 00 00 00       	callq  3412c <e1000_xmit_frame+0xcb6>
			34128: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3412c:	42 8d 04 ad 00 00 00 	lea    0x0(,%r13,4),%eax
   34133:	00 
   34134:	48 98                	cltq   
   34136:	48 8d 9c 03 00 88 00 	lea    0x8800(%rbx,%rax,1),%rbx
   3413d:	00 
   3413e:	44 89 23             	mov    %r12d,(%rbx)
   34141:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34144: R_X86_64_32S	.rodata.str1.1+0xae
   34148:	49 8b 1e             	mov    (%r14),%rbx
   3414b:	e8 00 00 00 00       	callq  34150 <e1000_xmit_frame+0xcda>
			3414c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34150:	8b 43 08             	mov    0x8(%rbx),%eax
   34153:	49 ff c5             	inc    %r13
   34156:	49 83 fd 02          	cmp    $0x2,%r13
   3415a:	75 bc                	jne    34118 <e1000_xmit_frame+0xca2>
   3415c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3415f: R_X86_64_32S	.rodata.str1.1+0x362b
   34163:	e8 00 00 00 00       	callq  34168 <e1000_xmit_frame+0xcf2>
			34164: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34168:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3416b: R_X86_64_32S	.rodata.str1.1+0xae
   3416f:	49 8b 1e             	mov    (%r14),%rbx
   34172:	e8 00 00 00 00       	callq  34177 <e1000_xmit_frame+0xd01>
			34173: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34177:	44 8b a3 00 8f 00 00 	mov    0x8f00(%rbx),%r12d
   3417e:	49 8b 1e             	mov    (%r14),%rbx
   34181:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34184: R_X86_64_32S	.rodata.str1.1+0xb4
   34188:	41 83 cc 02          	or     $0x2,%r12d
   3418c:	e8 00 00 00 00       	callq  34191 <e1000_xmit_frame+0xd1b>
			3418d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34191:	48 81 c3 00 8f 00 00 	add    $0x8f00,%rbx
   34198:	44 89 23             	mov    %r12d,(%rbx)
   3419b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3419e: R_X86_64_32S	.rodata.str1.1+0x3642
   341a2:	e8 00 00 00 00       	callq  341a7 <e1000_xmit_frame+0xd31>
			341a3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   341a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			341aa: R_X86_64_32S	.rodata.str1.1+0x2df9
   341ae:	e8 00 00 00 00       	callq  341b3 <e1000_xmit_frame+0xd3d>
			341af: R_X86_64_PC32	record_function+0xfffffffffffffffc
   341b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			341b6: R_X86_64_32S	.rodata.str1.1+0x2e10
   341ba:	e8 00 00 00 00       	callq  341bf <e1000_xmit_frame+0xd49>
			341bb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   341bf:	9c                   	pushfq 
   341c0:	8f 85 08 ff ff ff    	popq   0xffffffffffffff08(%rbp)
   341c6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			341c9: R_X86_64_32S	.rodata.str1.1+0x3657
   341cd:	e8 00 00 00 00       	callq  341d2 <e1000_xmit_frame+0xd5c>
			341ce: R_X86_64_PC32	record_function+0xfffffffffffffffc
   341d2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			341d5: R_X86_64_32S	.rodata.str1.1+0x366d
   341d9:	e8 00 00 00 00       	callq  341de <e1000_xmit_frame+0xd68>
			341da: R_X86_64_PC32	record_function+0xfffffffffffffffc
   341de:	fa                   	cli    
   341df:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   341e6:	48 83 c3 28          	add    $0x28,%rbx
   341ea:	48 89 df             	mov    %rbx,%rdi
   341ed:	e8 00 00 00 00       	callq  341f2 <e1000_xmit_frame+0xd7c>
			341ee: R_X86_64_PC32	.spinlock.text+0x2cd
   341f2:	85 c0                	test   %eax,%eax
   341f4:	75 33                	jne    34229 <e1000_xmit_frame+0xdb3>
   341f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			341f9: R_X86_64_32S	.rodata.str1.1+0x2e1f
   341fd:	e8 00 00 00 00       	callq  34202 <e1000_xmit_frame+0xd8c>
			341fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34202:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34205: R_X86_64_32S	.rodata.str1.1+0x3680
   34209:	e8 00 00 00 00       	callq  3420e <e1000_xmit_frame+0xd98>
			3420a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3420e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34211: R_X86_64_32S	.rodata.str1.1+0x3696
   34215:	e8 00 00 00 00       	callq  3421a <e1000_xmit_frame+0xda4>
			34216: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3421a:	ff b5 08 ff ff ff    	pushq  0xffffffffffffff08(%rbp)
   34220:	9d                   	popfq  
   34221:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   34224:	e9 7d 08 00 00       	jmpq   34aa6 <e1000_xmit_frame+0x1630>
   34229:	8b 55 80             	mov    0xffffffffffffff80(%rbp),%edx
   3422c:	48 8b b5 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rsi
   34233:	48 8b bd d8 fe ff ff 	mov    0xfffffffffffffed8(%rbp),%rdi
   3423a:	83 c2 02             	add    $0x2,%edx
   3423d:	e8 c1 f0 fe ff       	callq  23303 <e1000_maybe_stop_tx>
   34242:	85 c0                	test   %eax,%eax
   34244:	74 0f                	je     34255 <e1000_xmit_frame+0xddf>
   34246:	48 8b b5 08 ff ff ff 	mov    0xffffffffffffff08(%rbp),%rsi
   3424d:	48 89 df             	mov    %rbx,%rdi
   34250:	e9 06 01 00 00       	jmpq   3435b <e1000_xmit_frame+0xee5>
   34255:	48 8b 85 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rax
   3425c:	83 78 10 0c          	cmpl   $0xc,0x10(%rax)
   34260:	0f 85 04 01 00 00    	jne    3436a <e1000_xmit_frame+0xef4>
   34266:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34269: R_X86_64_32S	.rodata.str1.1+0x36a8
   3426d:	e8 00 00 00 00       	callq  34272 <e1000_xmit_frame+0xdfc>
			3426e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34272:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   34279:	48 8b 9d e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rbx
   34280:	8b 8a fc 01 00 00    	mov    0x1fc(%rdx),%ecx
   34286:	8b b2 f4 01 00 00    	mov    0x1f4(%rdx),%esi
   3428c:	41 8b 57 68          	mov    0x68(%r15),%edx
   34290:	83 c2 1f             	add    $0x1f,%edx
   34293:	83 e2 f0             	and    $0xfffffffffffffff0,%edx
   34296:	66 83 bb b2 00 00 00 	cmpw   $0x1,0xb2(%rbx)
   3429d:	01 
   3429e:	75 22                	jne    342c2 <e1000_xmit_frame+0xe4c>
   342a0:	8b 83 04 02 00 00    	mov    0x204(%rbx),%eax
   342a6:	85 c0                	test   %eax,%eax
   342a8:	75 45                	jne    342ef <e1000_xmit_frame+0xe79>
   342aa:	8d 81 e0 03 00 00    	lea    0x3e0(%rcx),%eax
   342b0:	29 f0                	sub    %esi,%eax
   342b2:	39 c2                	cmp    %eax,%edx
   342b4:	72 0c                	jb     342c2 <e1000_xmit_frame+0xe4c>
   342b6:	c7 83 04 02 00 00 01 	movl   $0x1,0x204(%rbx)
   342bd:	00 00 00 
   342c0:	eb 2d                	jmp    342ef <e1000_xmit_frame+0xe79>
   342c2:	48 8b 8d e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rcx
   342c9:	89 d0                	mov    %edx,%eax
   342cb:	03 81 f4 01 00 00    	add    0x1f4(%rcx),%eax
   342d1:	8b 91 fc 01 00 00    	mov    0x1fc(%rcx),%edx
   342d7:	39 d0                	cmp    %edx,%eax
   342d9:	89 81 f4 01 00 00    	mov    %eax,0x1f4(%rcx)
   342df:	0f 82 85 00 00 00    	jb     3436a <e1000_xmit_frame+0xef4>
   342e5:	29 d0                	sub    %edx,%eax
   342e7:	89 81 f4 01 00 00    	mov    %eax,0x1f4(%rcx)
   342ed:	eb 7b                	jmp    3436a <e1000_xmit_frame+0xef4>
   342ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			342f2: R_X86_64_32S	.rodata.str1.1+0x2ba1
   342f6:	e8 00 00 00 00       	callq  342fb <e1000_xmit_frame+0xe85>
			342f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   342fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			342fe: R_X86_64_32S	.rodata.str1.1+0x2bb2
   34302:	e8 00 00 00 00       	callq  34307 <e1000_xmit_frame+0xe91>
			34303: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34307:	48 8b 85 d8 fe ff ff 	mov    0xfffffffffffffed8(%rbp),%rax
   3430e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34311: R_X86_64_32S	.rodata.str1.1+0x2bc6
   34315:	48 8b 98 00 03 00 00 	mov    0x300(%rax),%rbx
   3431c:	e8 00 00 00 00       	callq  34321 <e1000_xmit_frame+0xeab>
			3431d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34321:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34324: R_X86_64_32S	.rodata.str1.1+0x2ac7
   34328:	e8 00 00 00 00       	callq  3432d <e1000_xmit_frame+0xeb7>
			34329: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3432d:	f0 0f ba 6b 10 00    	lock btsl $0x0,0x10(%rbx)
   34333:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 3433a <e1000_xmit_frame+0xec4>
			34336: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   3433a:	48 8b bd e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdi
   34341:	48 ff c6             	inc    %rsi
   34344:	e8 2a 32 fd ff       	callq  7573 <mod_timer>
   34349:	48 8b bd f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdi
   34350:	48 8b b5 08 ff ff ff 	mov    0xffffffffffffff08(%rbp),%rsi
   34357:	48 83 c7 28          	add    $0x28,%rdi
   3435b:	e8 00 00 00 00       	callq  34360 <e1000_xmit_frame+0xeea>
			3435c: R_X86_64_PC32	.spinlock.text+0x3d8
   34360:	b8 01 00 00 00       	mov    $0x1,%eax
   34365:	e9 3c 07 00 00       	jmpq   34aa6 <e1000_xmit_frame+0x1630>
   3436a:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   34371:	48 83 ba 90 00 00 00 	cmpq   $0x0,0x90(%rdx)
   34378:	00 
   34379:	74 0c                	je     34387 <e1000_xmit_frame+0xf11>
   3437b:	41 8b 87 a4 00 00 00 	mov    0xa4(%r15),%eax
   34382:	66 85 c0             	test   %ax,%ax
   34385:	75 0c                	jne    34393 <e1000_xmit_frame+0xf1d>
   34387:	c7 85 04 ff ff ff 00 	movl   $0x0,0xffffffffffffff04(%rbp)
   3438e:	00 00 00 
   34391:	eb 0e                	jmp    343a1 <e1000_xmit_frame+0xf2b>
   34393:	89 c1                	mov    %eax,%ecx
   34395:	c1 e1 10             	shl    $0x10,%ecx
   34398:	83 c9 02             	or     $0x2,%ecx
   3439b:	89 8d 04 ff ff ff    	mov    %ecx,0xffffffffffffff04(%rbp)
   343a1:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   343a8:	48 8b b5 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rsi
   343af:	4c 89 fa             	mov    %r15,%rdx
   343b2:	48 8b bd e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdi
   343b9:	8b 5b 18             	mov    0x18(%rbx),%ebx
   343bc:	89 9d 00 ff ff ff    	mov    %ebx,0xffffffffffffff00(%rbp)
   343c2:	e8 ad d4 fe ff       	callq  21874 <e1000_tso>
   343c7:	83 f8 00             	cmp    $0x0,%eax
   343ca:	7d 0d                	jge    343d9 <e1000_xmit_frame+0xf63>
   343cc:	4c 89 ff             	mov    %r15,%rdi
   343cf:	e8 00 00 00 00       	callq  343d4 <e1000_xmit_frame+0xf5e>
			343d0: R_X86_64_PC32	dev_kfree_skb_any+0xfffffffffffffffc
   343d4:	e9 70 06 00 00       	jmpq   34a49 <e1000_xmit_frame+0x15d3>
   343d9:	74 14                	je     343ef <e1000_xmit_frame+0xf79>
   343db:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   343e2:	c6 40 5c 01          	movb   $0x1,0x5c(%rax)
   343e6:	83 8d 04 ff ff ff 04 	orl    $0x4,0xffffffffffffff04(%rbp)
   343ed:	eb 2e                	jmp    3441d <e1000_xmit_frame+0xfa7>
   343ef:	48 8b b5 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rsi
   343f6:	48 8b bd e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdi
   343fd:	4c 89 fa             	mov    %r15,%rdx
   34400:	e8 2c f0 fe ff       	callq  23431 <e1000_tx_csum>
   34405:	8b 95 04 ff ff ff    	mov    0xffffffffffffff04(%rbp),%edx
   3440b:	83 ca 01             	or     $0x1,%edx
   3440e:	84 c0                	test   %al,%al
   34410:	0f 44 95 04 ff ff ff 	cmove  0xffffffffffffff04(%rbp),%edx
   34417:	89 95 04 ff ff ff    	mov    %edx,0xffffffffffffff04(%rbp)
   3441d:	8b 85 04 ff ff ff    	mov    0xffffffffffffff04(%rbp),%eax
   34423:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34426: R_X86_64_32S	.rodata.str1.1+0x36c4
   3442a:	83 c8 08             	or     $0x8,%eax
   3442d:	66 41 83 7f 7e 08    	cmpw   $0x8,0x7e(%r15)
   34433:	0f 45 85 04 ff ff ff 	cmovne 0xffffffffffffff04(%rbp),%eax
   3443a:	89 85 04 ff ff ff    	mov    %eax,0xffffffffffffff04(%rbp)
   34440:	e8 00 00 00 00       	callq  34445 <e1000_xmit_frame+0xfcf>
			34441: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34445:	48 8b 95 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdx
   3444c:	45 8b 77 68          	mov    0x68(%r15),%r14d
   34450:	45 2b 77 6c          	sub    0x6c(%r15),%r14d
   34454:	8b 52 18             	mov    0x18(%rdx),%edx
   34457:	c7 85 4c ff ff ff 00 	movl   $0x0,0xffffffffffffff4c(%rbp)
   3445e:	00 00 00 
   34461:	48 c7 85 60 ff ff ff 	movq   $0x0,0xffffffffffffff60(%rbp)
   34468:	00 00 00 00 
   3446c:	89 95 44 ff ff ff    	mov    %edx,0xffffffffffffff44(%rbp)
   34472:	eb 11                	jmp    34485 <e1000_xmit_frame+0x100f>
   34474:	44 01 a5 4c ff ff ff 	add    %r12d,0xffffffffffffff4c(%rbp)
   3447b:	48 ff 85 60 ff ff ff 	incq   0xffffffffffffff60(%rbp)
   34482:	45 29 e6             	sub    %r12d,%r14d
   34485:	45 85 f6             	test   %r14d,%r14d
   34488:	0f 84 1b 02 00 00    	je     346a9 <e1000_xmit_frame+0x1233>
   3448e:	44 8b ad 44 ff ff ff 	mov    0xffffffffffffff44(%rbp),%r13d
   34495:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   3449c:	44 8b 65 88          	mov    0xffffffffffffff88(%rbp),%r12d
   344a0:	49 c1 e5 05          	shl    $0x5,%r13
   344a4:	4c 03 69 20          	add    0x20(%rcx),%r13
   344a8:	44 3b 75 88          	cmp    0xffffffffffffff88(%rbp),%r14d
   344ac:	45 0f 46 e6          	cmovbe %r14d,%r12d
   344b0:	41 83 7f 6c 00       	cmpl   $0x0,0x6c(%r15)
   344b5:	75 42                	jne    344f9 <e1000_xmit_frame+0x1083>
   344b7:	80 79 5c 00          	cmpb   $0x0,0x5c(%rcx)
   344bb:	74 3c                	je     344f9 <e1000_xmit_frame+0x1083>
   344bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			344c0: R_X86_64_32S	.rodata.str1.1+0x28ad
   344c4:	e8 00 00 00 00       	callq  344c9 <e1000_xmit_frame+0x1053>
			344c5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   344c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			344cc: R_X86_64_32S	.rodata.str1.1+0x28b8
   344d0:	e8 00 00 00 00       	callq  344d5 <e1000_xmit_frame+0x105f>
			344d1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   344d5:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
   344dc:	49 03 87 c0 00 00 00 	add    0xc0(%r15),%rax
   344e3:	66 83 78 06 00       	cmpw   $0x0,0x6(%rax)
   344e8:	75 0f                	jne    344f9 <e1000_xmit_frame+0x1083>
   344ea:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   344f1:	41 83 ec 04          	sub    $0x4,%r12d
   344f5:	c6 43 5c 00          	movb   $0x0,0x5c(%rbx)
   344f9:	66 83 bd e4 fe ff ff 	cmpw   $0x0,0xfffffffffffffee4(%rbp)
   34500:	00 
   34501:	74 21                	je     34524 <e1000_xmit_frame+0x10ae>
   34503:	66 83 bd e6 fe ff ff 	cmpw   $0x0,0xfffffffffffffee6(%rbp)
   3450a:	00 
   3450b:	75 17                	jne    34524 <e1000_xmit_frame+0x10ae>
   3450d:	45 39 f4             	cmp    %r14d,%r12d
   34510:	75 12                	jne    34524 <e1000_xmit_frame+0x10ae>
   34512:	41 83 fc 08          	cmp    $0x8,%r12d
   34516:	41 8d 54 24 fc       	lea    0xfffffffffffffffc(%r12),%edx
   3451b:	0f 97 c0             	seta   %al
   3451e:	a8 01                	test   $0x1,%al
   34520:	44 0f 45 e2          	cmovne %edx,%r12d
   34524:	48 8b 85 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rax
   3452b:	83 b8 fc 03 00 00 02 	cmpl   $0x2,0x3fc(%rax)
   34532:	75 1e                	jne    34552 <e1000_xmit_frame+0x10dc>
   34534:	41 81 fc df 07 00 00 	cmp    $0x7df,%r12d
   3453b:	76 15                	jbe    34552 <e1000_xmit_frame+0x10dc>
   3453d:	83 bd 60 ff ff ff 00 	cmpl   $0x0,0xffffffffffffff60(%rbp)
   34544:	0f 94 c0             	sete   %al
   34547:	a8 01                	test   $0x1,%al
   34549:	b8 df 07 00 00       	mov    $0x7df,%eax
   3454e:	44 0f 45 e0          	cmovne %eax,%r12d
   34552:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   34559:	80 ba 08 02 00 00 00 	cmpb   $0x0,0x208(%rdx)
   34560:	74 2b                	je     3458d <e1000_xmit_frame+0x1117>
   34562:	8b 85 4c ff ff ff    	mov    0xffffffffffffff4c(%rbp),%eax
   34568:	44 89 e2             	mov    %r12d,%edx
   3456b:	49 03 87 c8 00 00 00 	add    0xc8(%r15),%rax
   34572:	48 8d 44 10 ff       	lea    0xffffffffffffffff(%rax,%rdx,1),%rax
   34577:	a8 04                	test   $0x4,%al
   34579:	75 12                	jne    3458d <e1000_xmit_frame+0x1117>
   3457b:	41 83 fc 04          	cmp    $0x4,%r12d
   3457f:	41 8d 54 24 fc       	lea    0xfffffffffffffffc(%r12),%edx
   34584:	0f 97 c0             	seta   %al
   34587:	a8 01                	test   $0x1,%al
   34589:	44 0f 45 e2          	cmovne %edx,%r12d
   3458d:	66 45 89 65 18       	mov    %r12w,0x18(%r13)
   34592:	49 8b 8f c8 00 00 00 	mov    0xc8(%r15),%rcx
   34599:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3459c: R_X86_64_32S	.rodata.str1.1+0x2edf
   345a0:	48 8b 85 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rax
   345a7:	48 89 8d 50 ff ff ff 	mov    %rcx,0xffffffffffffff50(%rbp)
   345ae:	48 8b 98 f8 02 00 00 	mov    0x2f8(%rax),%rbx
   345b5:	e8 00 00 00 00       	callq  345ba <e1000_xmit_frame+0x1144>
			345b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   345ba:	48 c7 85 30 ff ff ff 	movq   $0x0,0xffffffffffffff30(%rbp)
   345c1:	00 00 00 00 
   345c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			345c8: R_X86_64_32S	.rodata.str1.1+0x2eee
   345cc:	48 85 db             	test   %rbx,%rbx
   345cf:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   345d6:	48 0f 44 85 30 ff ff 	cmove  0xffffffffffffff30(%rbp),%rax
   345dd:	ff 
   345de:	48 89 85 30 ff ff ff 	mov    %rax,0xffffffffffffff30(%rbp)
   345e5:	e8 00 00 00 00       	callq  345ea <e1000_xmit_frame+0x1174>
			345e6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   345ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			345ed: R_X86_64_32S	.rodata.str1.1+0x2ca6
   345f1:	e8 00 00 00 00       	callq  345f6 <e1000_xmit_frame+0x1180>
			345f2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   345f6:	48 83 bd 30 ff ff ff 	cmpq   $0x0,0xffffffffffffff30(%rbp)
   345fd:	00 
   345fe:	75 09                	jne    34609 <e1000_xmit_frame+0x1193>
   34600:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 34607 <e1000_xmit_frame+0x1191>
			34603: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   34607:	eb 1c                	jmp    34625 <e1000_xmit_frame+0x11af>
   34609:	48 8b 95 30 ff ff ff 	mov    0xffffffffffffff30(%rbp),%rdx
   34610:	48 8b 82 e8 01 00 00 	mov    0x1e8(%rdx),%rax
   34617:	48 85 c0             	test   %rax,%rax
   3461a:	48 89 c3             	mov    %rax,%rbx
   3461d:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 34625 <e1000_xmit_frame+0x11af>
   34624:	00 
			34621: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   34625:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34628: R_X86_64_32S	.rodata.str1.1+0x2cb2
   3462c:	e8 00 00 00 00       	callq  34631 <e1000_xmit_frame+0x11bb>
			3462d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34631:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34634: R_X86_64_32S	.rodata.str1.1+0x2efd
   34638:	e8 00 00 00 00       	callq  3463d <e1000_xmit_frame+0x11c7>
			34639: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3463d:	8b bd 4c ff ff ff    	mov    0xffffffffffffff4c(%rbp),%edi
   34643:	48 03 bd 50 ff ff ff 	add    0xffffffffffffff50(%rbp),%rdi
   3464a:	e8 7a 3f fd ff       	callq  85c9 <__phys_addr>
   3464f:	b9 01 00 00 00       	mov    $0x1,%ecx
   34654:	48 89 c6             	mov    %rax,%rsi
   34657:	44 89 e2             	mov    %r12d,%edx
   3465a:	48 8b bd 30 ff ff ff 	mov    0xffffffffffffff30(%rbp),%rdi
   34661:	ff 53 18             	callq  *0x18(%rbx)
   34664:	49 89 45 08          	mov    %rax,0x8(%r13)
   34668:	48 8b 05 00 00 00 00 	mov    0(%rip),%rax        # 3466f <e1000_xmit_frame+0x11f9>
			3466b: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   3466f:	49 89 45 10          	mov    %rax,0x10(%r13)
   34673:	8b 8d 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%ecx
   34679:	66 41 89 4d 1a       	mov    %cx,0x1a(%r13)
   3467e:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   34685:	ff 85 44 ff ff ff    	incl   0xffffffffffffff44(%rbp)
   3468b:	8b 85 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%eax
   34691:	3b 43 14             	cmp    0x14(%rbx),%eax
   34694:	0f 85 da fd ff ff    	jne    34474 <e1000_xmit_frame+0xffe>
   3469a:	c7 85 44 ff ff ff 00 	movl   $0x0,0xffffffffffffff44(%rbp)
   346a1:	00 00 00 
   346a4:	e9 cb fd ff ff       	jmpq   34474 <e1000_xmit_frame+0xffe>
   346a9:	8b 95 60 ff ff ff    	mov    0xffffffffffffff60(%rbp),%edx
   346af:	48 c7 85 58 ff ff ff 	movq   $0x0,0xffffffffffffff58(%rbp)
   346b6:	00 00 00 00 
   346ba:	89 95 48 ff ff ff    	mov    %edx,0xffffffffffffff48(%rbp)
   346c0:	48 8b 9d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rbx
   346c7:	48 39 9d 58 ff ff ff 	cmp    %rbx,0xffffffffffffff58(%rbp)
   346ce:	8b 8d 58 ff ff ff    	mov    0xffffffffffffff58(%rbp),%ecx
   346d4:	89 8d 40 ff ff ff    	mov    %ecx,0xffffffffffffff40(%rbp)
   346da:	0f 84 f5 01 00 00    	je     348d5 <e1000_xmit_frame+0x145f>
   346e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			346e3: R_X86_64_32S	.rodata.str1.1+0x28b8
   346e7:	e8 00 00 00 00       	callq  346ec <e1000_xmit_frame+0x1276>
			346e8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   346ec:	41 8b 97 b8 00 00 00 	mov    0xb8(%r15),%edx
   346f3:	8b 85 40 ff ff ff    	mov    0xffffffffffffff40(%rbp),%eax
   346f9:	49 03 97 c0 00 00 00 	add    0xc0(%r15),%rdx
   34700:	48 c1 e0 04          	shl    $0x4,%rax
   34704:	48 8d 44 10 20       	lea    0x20(%rax,%rdx,1),%rax
   34709:	48 89 85 38 ff ff ff 	mov    %rax,0xffffffffffffff38(%rbp)
   34710:	8b 40 0c             	mov    0xc(%rax),%eax
   34713:	48 8b 95 38 ff ff ff 	mov    0xffffffffffffff38(%rbp),%rdx
   3471a:	89 45 84             	mov    %eax,0xffffffffffffff84(%rbp)
   3471d:	8b 52 08             	mov    0x8(%rdx),%edx
   34720:	89 55 8c             	mov    %edx,0xffffffffffffff8c(%rbp)
   34723:	eb 0e                	jmp    34733 <e1000_xmit_frame+0x12bd>
   34725:	44 29 65 84          	sub    %r12d,0xffffffffffffff84(%rbp)
   34729:	44 01 65 8c          	add    %r12d,0xffffffffffffff8c(%rbp)
   3472d:	ff 85 48 ff ff ff    	incl   0xffffffffffffff48(%rbp)
   34733:	83 7d 84 00          	cmpl   $0x0,0xffffffffffffff84(%rbp)
   34737:	0f 84 8c 01 00 00    	je     348c9 <e1000_xmit_frame+0x1453>
   3473d:	44 8b ad 44 ff ff ff 	mov    0xffffffffffffff44(%rbp),%r13d
   34744:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   3474b:	8b 5d 88             	mov    0xffffffffffffff88(%rbp),%ebx
   3474e:	49 c1 e5 05          	shl    $0x5,%r13
   34752:	4c 03 69 20          	add    0x20(%rcx),%r13
   34756:	39 5d 84             	cmp    %ebx,0xffffffffffffff84(%rbp)
   34759:	41 89 dc             	mov    %ebx,%r12d
   3475c:	44 0f 46 65 84       	cmovbe 0xffffffffffffff84(%rbp),%r12d
   34761:	66 83 bd e4 fe ff ff 	cmpw   $0x0,0xfffffffffffffee4(%rbp)
   34768:	00 
   34769:	74 28                	je     34793 <e1000_xmit_frame+0x131d>
   3476b:	8b 85 14 ff ff ff    	mov    0xffffffffffffff14(%rbp),%eax
   34771:	ff c8                	dec    %eax
   34773:	39 85 40 ff ff ff    	cmp    %eax,0xffffffffffffff40(%rbp)
   34779:	75 18                	jne    34793 <e1000_xmit_frame+0x131d>
   3477b:	44 3b 65 84          	cmp    0xffffffffffffff84(%rbp),%r12d
   3477f:	75 12                	jne    34793 <e1000_xmit_frame+0x131d>
   34781:	41 83 fc 08          	cmp    $0x8,%r12d
   34785:	41 8d 54 24 fc       	lea    0xfffffffffffffffc(%r12),%edx
   3478a:	0f 97 c0             	seta   %al
   3478d:	a8 01                	test   $0x1,%al
   3478f:	44 0f 45 e2          	cmovne %edx,%r12d
   34793:	48 8b 85 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rax
   3479a:	80 b8 08 02 00 00 00 	cmpb   $0x0,0x208(%rax)
   347a1:	74 1e                	je     347c1 <e1000_xmit_frame+0x134b>
   347a3:	48 8b 95 38 ff ff ff 	mov    0xffffffffffffff38(%rbp),%rdx
   347aa:	f6 02 04             	testb  $0x4,(%rdx)
   347ad:	75 12                	jne    347c1 <e1000_xmit_frame+0x134b>
   347af:	41 83 fc 04          	cmp    $0x4,%r12d
   347b3:	41 8d 54 24 fc       	lea    0xfffffffffffffffc(%r12),%edx
   347b8:	0f 97 c0             	seta   %al
   347bb:	a8 01                	test   $0x1,%al
   347bd:	44 0f 45 e2          	cmovne %edx,%r12d
   347c1:	66 45 89 65 18       	mov    %r12w,0x18(%r13)
   347c6:	48 8b 8d 38 ff ff ff 	mov    0xffffffffffffff38(%rbp),%rcx
   347cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			347d0: R_X86_64_32S	.rodata.str1.1+0x36d1
   347d4:	48 8b 85 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rax
   347db:	45 31 f6             	xor    %r14d,%r14d
   347de:	48 8b 09             	mov    (%rcx),%rcx
   347e1:	48 89 8d 28 ff ff ff 	mov    %rcx,0xffffffffffffff28(%rbp)
   347e8:	48 8b 98 f8 02 00 00 	mov    0x2f8(%rax),%rbx
   347ef:	e8 00 00 00 00       	callq  347f4 <e1000_xmit_frame+0x137e>
			347f0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   347f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			347f7: R_X86_64_32S	.rodata.str1.1+0x36de
   347fb:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   34802:	48 85 db             	test   %rbx,%rbx
   34805:	4c 0f 45 f0          	cmovne %rax,%r14
   34809:	e8 00 00 00 00       	callq  3480e <e1000_xmit_frame+0x1398>
			3480a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3480e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34811: R_X86_64_32S	.rodata.str1.1+0x2ca6
   34815:	e8 00 00 00 00       	callq  3481a <e1000_xmit_frame+0x13a4>
			34816: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3481a:	4d 85 f6             	test   %r14,%r14
   3481d:	75 09                	jne    34828 <e1000_xmit_frame+0x13b2>
   3481f:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 34826 <e1000_xmit_frame+0x13b0>
			34822: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   34826:	eb 15                	jmp    3483d <e1000_xmit_frame+0x13c7>
   34828:	49 8b 86 e8 01 00 00 	mov    0x1e8(%r14),%rax
   3482f:	48 85 c0             	test   %rax,%rax
   34832:	48 89 c3             	mov    %rax,%rbx
   34835:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 3483d <e1000_xmit_frame+0x13c7>
   3483c:	00 
			34839: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   3483d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34840: R_X86_64_32S	.rodata.str1.1+0x2cb2
   34844:	e8 00 00 00 00       	callq  34849 <e1000_xmit_frame+0x13d3>
			34845: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34849:	48 b8 00 00 00 00 00 	mov    $0x1e0000000000,%rax
   34850:	1e 00 00 
   34853:	48 03 85 28 ff ff ff 	add    0xffffffffffffff28(%rbp),%rax
   3485a:	48 b9 a3 8b 2e ba e8 	mov    $0x2e8ba2e8ba2e8ba3,%rcx
   34861:	a2 8b 2e 
   34864:	8b 75 8c             	mov    0xffffffffffffff8c(%rbp),%esi
   34867:	44 89 e2             	mov    %r12d,%edx
   3486a:	4c 89 f7             	mov    %r14,%rdi
   3486d:	48 c1 f8 03          	sar    $0x3,%rax
   34871:	48 0f af c1          	imul   %rcx,%rax
   34875:	b9 01 00 00 00       	mov    $0x1,%ecx
   3487a:	48 c1 e0 0c          	shl    $0xc,%rax
   3487e:	48 01 c6             	add    %rax,%rsi
   34881:	ff 53 18             	callq  *0x18(%rbx)
   34884:	49 89 45 08          	mov    %rax,0x8(%r13)
   34888:	48 8b 05 00 00 00 00 	mov    0(%rip),%rax        # 3488f <e1000_xmit_frame+0x1419>
			3488b: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   3488f:	49 89 45 10          	mov    %rax,0x10(%r13)
   34893:	8b 95 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%edx
   34899:	66 41 89 55 1a       	mov    %dx,0x1a(%r13)
   3489e:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   348a5:	ff 85 44 ff ff ff    	incl   0xffffffffffffff44(%rbp)
   348ab:	8b 9d 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%ebx
   348b1:	3b 59 14             	cmp    0x14(%rcx),%ebx
   348b4:	0f 85 6b fe ff ff    	jne    34725 <e1000_xmit_frame+0x12af>
   348ba:	c7 85 44 ff ff ff 00 	movl   $0x0,0xffffffffffffff44(%rbp)
   348c1:	00 00 00 
   348c4:	e9 5c fe ff ff       	jmpq   34725 <e1000_xmit_frame+0x12af>
   348c9:	48 ff 85 58 ff ff ff 	incq   0xffffffffffffff58(%rbp)
   348d0:	e9 eb fd ff ff       	jmpq   346c0 <e1000_xmit_frame+0x124a>
   348d5:	83 bd 44 ff ff ff 00 	cmpl   $0x0,0xffffffffffffff44(%rbp)
   348dc:	75 0c                	jne    348ea <e1000_xmit_frame+0x1474>
   348de:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   348e5:	8b 50 14             	mov    0x14(%rax),%edx
   348e8:	eb 06                	jmp    348f0 <e1000_xmit_frame+0x147a>
   348ea:	8b 95 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%edx
   348f0:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   348f7:	ff ca                	dec    %edx
   348f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			348fc: R_X86_64_32S	.rodata.str1.1+0x36eb
   34900:	89 d0                	mov    %edx,%eax
   34902:	48 c1 e0 05          	shl    $0x5,%rax
   34906:	48 03 41 20          	add    0x20(%rcx),%rax
   3490a:	4c 89 38             	mov    %r15,(%rax)
   3490d:	8b 85 00 ff ff ff    	mov    0xffffffffffffff00(%rbp),%eax
   34913:	48 c1 e0 05          	shl    $0x5,%rax
   34917:	48 03 41 20          	add    0x20(%rcx),%rax
   3491b:	66 89 50 1a          	mov    %dx,0x1a(%rax)
   3491f:	e8 00 00 00 00       	callq  34924 <e1000_xmit_frame+0x14ae>
			34920: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34924:	45 31 c0             	xor    %r8d,%r8d
   34927:	f6 85 04 ff ff ff 04 	testb  $0x4,0xffffffffffffff04(%rbp)
   3492e:	bf 00 00 00 02       	mov    $0x2000000,%edi
   34933:	74 18                	je     3494d <e1000_xmit_frame+0x14d7>
   34935:	f6 85 04 ff ff ff 08 	testb  $0x8,0xffffffffffffff04(%rbp)
   3493c:	66 41 b8 00 03       	mov    $0x300,%r8w
   34941:	bf 00 00 10 26       	mov    $0x26100000,%edi
   34946:	75 05                	jne    3494d <e1000_xmit_frame+0x14d7>
   34948:	66 41 b8 00 02       	mov    $0x200,%r8w
   3494d:	f6 85 04 ff ff ff 01 	testb  $0x1,0xffffffffffffff04(%rbp)
   34954:	74 0d                	je     34963 <e1000_xmit_frame+0x14ed>
   34956:	81 cf 00 00 10 20    	or     $0x20100000,%edi
   3495c:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
   34963:	f6 85 04 ff ff ff 02 	testb  $0x2,0xffffffffffffff04(%rbp)
   3496a:	74 16                	je     34982 <e1000_xmit_frame+0x150c>
   3496c:	66 c7 85 04 ff ff ff 	movw   $0x0,0xffffffffffffff04(%rbp)
   34973:	00 00 
   34975:	44 0b 85 04 ff ff ff 	or     0xffffffffffffff04(%rbp),%r8d
   3497c:	81 cf 00 00 00 40    	or     $0x40000000,%edi
   34982:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   34989:	8b b5 48 ff ff ff    	mov    0xffffffffffffff48(%rbp),%esi
   3498f:	31 c9                	xor    %ecx,%ecx
   34991:	44 8b 6b 18          	mov    0x18(%rbx),%r13d
   34995:	ff ce                	dec    %esi
   34997:	83 fe ff             	cmp    $0xffffffffffffffff,%esi
   3499a:	74 48                	je     349e4 <e1000_xmit_frame+0x156e>
   3499c:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   349a3:	44 89 e8             	mov    %r13d,%eax
   349a6:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   349ad:	48 89 c2             	mov    %rax,%rdx
   349b0:	41 ff c5             	inc    %r13d
   349b3:	48 c1 e2 05          	shl    $0x5,%rdx
   349b7:	48 03 51 20          	add    0x20(%rcx),%rdx
   349bb:	48 89 c1             	mov    %rax,%rcx
   349be:	48 c1 e1 04          	shl    $0x4,%rcx
   349c2:	48 03 0b             	add    (%rbx),%rcx
   349c5:	48 8b 42 08          	mov    0x8(%rdx),%rax
   349c9:	48 89 01             	mov    %rax,(%rcx)
   349cc:	0f b7 42 18          	movzwl 0x18(%rdx),%eax
   349d0:	44 89 41 0c          	mov    %r8d,0xc(%rcx)
   349d4:	09 f8                	or     %edi,%eax
   349d6:	89 41 08             	mov    %eax,0x8(%rcx)
   349d9:	44 3b 6b 14          	cmp    0x14(%rbx),%r13d
   349dd:	75 b6                	jne    34995 <e1000_xmit_frame+0x151f>
   349df:	45 31 ed             	xor    %r13d,%r13d
   349e2:	eb b1                	jmp    34995 <e1000_xmit_frame+0x151f>
   349e4:	48 8b 95 e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rdx
   349eb:	8b 82 c8 01 00 00    	mov    0x1c8(%rdx),%eax
   349f1:	09 41 08             	or     %eax,0x8(%rcx)
   349f4:	0f ae f8             	sfence 
   349f7:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   349fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34a01: R_X86_64_32S	.rodata.str1.1+0xb4
   34a05:	0f b7 59 5a          	movzwl 0x5a(%rcx),%ebx
   34a09:	44 89 69 18          	mov    %r13d,0x18(%rcx)
   34a0d:	4c 8b a2 b8 03 00 00 	mov    0x3b8(%rdx),%r12
   34a14:	e8 00 00 00 00       	callq  34a19 <e1000_xmit_frame+0x15a3>
			34a15: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34a19:	49 01 dc             	add    %rbx,%r12
   34a1c:	45 89 2c 24          	mov    %r13d,(%r12)
   34a20:	48 8b 05 00 00 00 00 	mov    0(%rip),%rax        # 34a27 <e1000_xmit_frame+0x15b1>
			34a23: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   34a27:	48 8b 9d d8 fe ff ff 	mov    0xfffffffffffffed8(%rbp),%rbx
   34a2e:	ba 14 00 00 00       	mov    $0x14,%edx
   34a33:	48 89 83 48 03 00 00 	mov    %rax,0x348(%rbx)
   34a3a:	48 8b b5 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rsi
   34a41:	48 89 df             	mov    %rbx,%rdi
   34a44:	e8 ba e8 fe ff       	callq  23303 <e1000_maybe_stop_tx>
   34a49:	48 8b bd f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdi
   34a50:	48 8b b5 08 ff ff ff 	mov    0xffffffffffffff08(%rbp),%rsi
   34a57:	48 83 c7 28          	add    $0x28,%rdi
   34a5b:	e8 00 00 00 00       	callq  34a60 <e1000_xmit_frame+0x15ea>
			34a5c: R_X86_64_PC32	.spinlock.text+0x3d8
   34a60:	31 c0                	xor    %eax,%eax
   34a62:	eb 42                	jmp    34aa6 <e1000_xmit_frame+0x1630>
   34a64:	44 89 eb             	mov    %r13d,%ebx
   34a67:	8b 85 18 ff ff ff    	mov    0xffffffffffffff18(%rbp),%eax
   34a6d:	44 8b b5 1c ff ff ff 	mov    0xffffffffffffff1c(%rbp),%r14d
   34a74:	41 89 dd             	mov    %ebx,%r13d
   34a77:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   34a7d:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   34a80:	e9 e1 f2 ff ff       	jmpq   33d66 <e1000_xmit_frame+0x8f0>
   34a85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34a88: R_X86_64_32S	.rodata.str1.1+0x36fa
   34a8c:	e8 00 00 00 00       	callq  34a91 <e1000_xmit_frame+0x161b>
			34a8d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34a91:	8a 4d 91             	mov    0xffffffffffffff91(%rbp),%cl
   34a94:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   34a98:	ba 07 00 00 00       	mov    $0x7,%edx
   34a9d:	c6 45 91 00          	movb   $0x0,0xffffffffffffff91(%rbp)
   34aa1:	e9 5c f6 ff ff       	jmpq   34102 <e1000_xmit_frame+0xc8c>
   34aa6:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   34aad:	5b                   	pop    %rbx
   34aae:	41 5c                	pop    %r12
   34ab0:	41 5d                	pop    %r13
   34ab2:	41 5e                	pop    %r14
   34ab4:	41 5f                	pop    %r15
   34ab6:	c9                   	leaveq 
   34ab7:	c3                   	retq   

0000000000034ab8 <e1000_tx_timeout>:
   34ab8:	55                   	push   %rbp
   34ab9:	48 89 e5             	mov    %rsp,%rbp
   34abc:	53                   	push   %rbx
   34abd:	48 89 fb             	mov    %rdi,%rbx
   34ac0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34ac3: R_X86_64_32S	.rodata.str1.1+0x3715
   34ac7:	48 83 ec 08          	sub    $0x8,%rsp
   34acb:	e8 00 00 00 00       	callq  34ad0 <e1000_tx_timeout+0x18>
			34acc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34ad0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34ad3: R_X86_64_32S	.rodata.str1.1+0x1be
   34ad7:	e8 00 00 00 00       	callq  34adc <e1000_tx_timeout+0x24>
			34ad8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34adc:	ff 83 f0 09 00 00    	incl   0x9f0(%rbx)
   34ae2:	48 81 c3 38 09 00 00 	add    $0x938,%rbx
   34ae9:	48 89 df             	mov    %rbx,%rdi
   34aec:	e8 ae ee fc ff       	callq  399f <schedule_work>
   34af1:	41 5b                	pop    %r11
   34af3:	5b                   	pop    %rbx
   34af4:	c9                   	leaveq 
   34af5:	c3                   	retq   

0000000000034af6 <e1000_get_stats>:
   34af6:	55                   	push   %rbp
   34af7:	48 89 e5             	mov    %rsp,%rbp
   34afa:	53                   	push   %rbx
   34afb:	48 89 fb             	mov    %rdi,%rbx
   34afe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34b01: R_X86_64_32S	.rodata.str1.1+0x3726
   34b05:	48 83 ec 08          	sub    $0x8,%rsp
   34b09:	e8 00 00 00 00       	callq  34b0e <e1000_get_stats+0x18>
			34b0a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34b0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34b11: R_X86_64_32S	.rodata.str1.1+0x1be
   34b15:	e8 00 00 00 00       	callq  34b1a <e1000_get_stats+0x24>
			34b16: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34b1a:	48 8d 83 00 0b 00 00 	lea    0xb00(%rbx),%rax
   34b21:	5b                   	pop    %rbx
   34b22:	5b                   	pop    %rbx
   34b23:	c9                   	leaveq 
   34b24:	c3                   	retq   

0000000000034b25 <e1000_change_mtu>:
   34b25:	55                   	push   %rbp
   34b26:	48 89 e5             	mov    %rsp,%rbp
   34b29:	41 57                	push   %r15
   34b2b:	41 89 f7             	mov    %esi,%r15d
   34b2e:	41 56                	push   %r14
   34b30:	49 89 fe             	mov    %rdi,%r14
   34b33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34b36: R_X86_64_32S	.rodata.str1.1+0x3736
   34b3a:	41 55                	push   %r13
   34b3c:	41 54                	push   %r12
   34b3e:	53                   	push   %rbx
   34b3f:	41 8d 5f 12          	lea    0x12(%r15),%ebx
   34b43:	48 83 ec 18          	sub    $0x18,%rsp
   34b47:	e8 00 00 00 00       	callq  34b4c <e1000_change_mtu+0x27>
			34b48: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34b4c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34b4f: R_X86_64_32S	.rodata.str1.1+0x1be
   34b53:	e8 00 00 00 00       	callq  34b58 <e1000_change_mtu+0x33>
			34b54: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34b58:	83 fb 3f             	cmp    $0x3f,%ebx
   34b5b:	66 c7 45 d6 00 00    	movw   $0x0,0xffffffffffffffd6(%rbp)
   34b61:	7e 08                	jle    34b6b <e1000_change_mtu+0x46>
   34b63:	81 fb 00 3f 00 00    	cmp    $0x3f00,%ebx
   34b69:	7e 09                	jle    34b74 <e1000_change_mtu+0x4f>
   34b6b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34b6e: R_X86_64_32S	str_377117285
   34b72:	eb 4a                	jmp    34bbe <e1000_change_mtu+0x99>
   34b74:	4d 8d ae b8 0b 00 00 	lea    0xbb8(%r14),%r13
   34b7b:	4d 8d a6 00 08 00 00 	lea    0x800(%r14),%r12
   34b82:	41 8b 45 10          	mov    0x10(%r13),%eax
   34b86:	85 c0                	test   %eax,%eax
   34b88:	74 25                	je     34baf <e1000_change_mtu+0x8a>
   34b8a:	83 f8 01             	cmp    $0x1,%eax
   34b8d:	74 20                	je     34baf <e1000_change_mtu+0x8a>
   34b8f:	83 f8 02             	cmp    $0x2,%eax
   34b92:	74 1b                	je     34baf <e1000_change_mtu+0x8a>
   34b94:	83 f8 12             	cmp    $0x12,%eax
   34b97:	74 16                	je     34baf <e1000_change_mtu+0x8a>
   34b99:	83 f8 10             	cmp    $0x10,%eax
   34b9c:	74 31                	je     34bcf <e1000_change_mtu+0xaa>
   34b9e:	83 f8 0e             	cmp    $0xe,%eax
   34ba1:	74 56                	je     34bf9 <e1000_change_mtu+0xd4>
   34ba3:	83 f8 0f             	cmp    $0xf,%eax
   34ba6:	74 51                	je     34bf9 <e1000_change_mtu+0xd4>
   34ba8:	83 f8 11             	cmp    $0x11,%eax
   34bab:	75 5b                	jne    34c08 <e1000_change_mtu+0xe3>
   34bad:	eb 4a                	jmp    34bf9 <e1000_change_mtu+0xd4>
   34baf:	81 fb ee 05 00 00    	cmp    $0x5ee,%ebx
   34bb5:	7e 51                	jle    34c08 <e1000_change_mtu+0xe3>
   34bb7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34bba: R_X86_64_32S	str_404563736
   34bbe:	31 c0                	xor    %eax,%eax
   34bc0:	e8 00 00 00 00       	callq  34bc5 <e1000_change_mtu+0xa0>
			34bc1: R_X86_64_PC32	printk+0xfffffffffffffffc
   34bc5:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
   34bca:	e9 21 01 00 00       	jmpq   34cf0 <e1000_change_mtu+0x1cb>
   34bcf:	48 8d 4d d6          	lea    0xffffffffffffffd6(%rbp),%rcx
   34bd3:	ba 01 00 00 00       	mov    $0x1,%edx
   34bd8:	be 1a 00 00 00       	mov    $0x1a,%esi
   34bdd:	4c 89 ef             	mov    %r13,%rdi
   34be0:	e8 2a 7b fe ff       	callq  1c70f <e1000_read_eeprom>
   34be5:	66 41 81 bd e6 00 00 	cmpw   $0x109a,0xe6(%r13)
   34bec:	00 9a 10 
   34bef:	75 be                	jne    34baf <e1000_change_mtu+0x8a>
   34bf1:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   34bf5:	a8 0c                	test   $0xc,%al
   34bf7:	75 b6                	jne    34baf <e1000_change_mtu+0x8a>
   34bf9:	81 fb 12 24 00 00    	cmp    $0x2412,%ebx
   34bff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34c02: R_X86_64_32S	str_950265491
   34c06:	7f b6                	jg     34bbe <e1000_change_mtu+0x99>
   34c08:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
   34c0e:	7f 0e                	jg     34c1e <e1000_change_mtu+0xf9>
   34c10:	41 c7 84 24 a0 00 00 	movl   $0x100,0xa0(%r12)
   34c17:	00 00 01 00 00 
   34c1c:	eb 73                	jmp    34c91 <e1000_change_mtu+0x16c>
   34c1e:	81 fb 00 02 00 00    	cmp    $0x200,%ebx
   34c24:	7f 0e                	jg     34c34 <e1000_change_mtu+0x10f>
   34c26:	41 c7 84 24 a0 00 00 	movl   $0x200,0xa0(%r12)
   34c2d:	00 00 02 00 00 
   34c32:	eb 5d                	jmp    34c91 <e1000_change_mtu+0x16c>
   34c34:	81 fb 00 04 00 00    	cmp    $0x400,%ebx
   34c3a:	7f 0e                	jg     34c4a <e1000_change_mtu+0x125>
   34c3c:	41 c7 84 24 a0 00 00 	movl   $0x400,0xa0(%r12)
   34c43:	00 00 04 00 00 
   34c48:	eb 47                	jmp    34c91 <e1000_change_mtu+0x16c>
   34c4a:	81 fb 00 08 00 00    	cmp    $0x800,%ebx
   34c50:	7f 0e                	jg     34c60 <e1000_change_mtu+0x13b>
   34c52:	41 c7 84 24 a0 00 00 	movl   $0x800,0xa0(%r12)
   34c59:	00 00 08 00 00 
   34c5e:	eb 31                	jmp    34c91 <e1000_change_mtu+0x16c>
   34c60:	81 fb 00 10 00 00    	cmp    $0x1000,%ebx
   34c66:	7f 0e                	jg     34c76 <e1000_change_mtu+0x151>
   34c68:	41 c7 84 24 a0 00 00 	movl   $0x1000,0xa0(%r12)
   34c6f:	00 00 10 00 00 
   34c74:	eb 1b                	jmp    34c91 <e1000_change_mtu+0x16c>
   34c76:	b8 00 20 00 00       	mov    $0x2000,%eax
   34c7b:	81 fb 00 20 00 00    	cmp    $0x2000,%ebx
   34c81:	ba 00 40 00 00       	mov    $0x4000,%edx
   34c86:	0f 4f c2             	cmovg  %edx,%eax
   34c89:	41 89 84 24 a0 00 00 	mov    %eax,0xa0(%r12)
   34c90:	00 
   34c91:	41 80 bd 0f 01 00 00 	cmpb   $0x0,0x10f(%r13)
   34c98:	00 
   34c99:	75 1c                	jne    34cb7 <e1000_change_mtu+0x192>
   34c9b:	81 fb ee 05 00 00    	cmp    $0x5ee,%ebx
   34ca1:	74 08                	je     34cab <e1000_change_mtu+0x186>
   34ca3:	81 fb f2 05 00 00    	cmp    $0x5f2,%ebx
   34ca9:	75 0c                	jne    34cb7 <e1000_change_mtu+0x192>
   34cab:	41 c7 84 24 a0 00 00 	movl   $0x5f2,0xa0(%r12)
   34cb2:	00 f2 05 00 00 
   34cb7:	45 89 be 6c 01 00 00 	mov    %r15d,0x16c(%r14)
   34cbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34cc1: R_X86_64_32S	.rodata.str1.1+0x15c6
   34cc5:	41 89 9d 98 00 00 00 	mov    %ebx,0x98(%r13)
   34ccc:	e8 00 00 00 00       	callq  34cd1 <e1000_change_mtu+0x1ac>
			34ccd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34cd1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34cd4: R_X86_64_32S	.rodata.str1.1+0x15d4
   34cd8:	e8 00 00 00 00       	callq  34cdd <e1000_change_mtu+0x1b8>
			34cd9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34cdd:	31 c0                	xor    %eax,%eax
   34cdf:	41 f6 46 48 01       	testb  $0x1,0x48(%r14)
   34ce4:	74 0a                	je     34cf0 <e1000_change_mtu+0x1cb>
   34ce6:	4c 89 e7             	mov    %r12,%rdi
   34ce9:	e8 ae dc ff ff       	callq  3299c <e1000_reinit_locked>
   34cee:	31 c0                	xor    %eax,%eax
   34cf0:	48 83 c4 18          	add    $0x18,%rsp
   34cf4:	5b                   	pop    %rbx
   34cf5:	41 5c                	pop    %r12
   34cf7:	41 5d                	pop    %r13
   34cf9:	41 5e                	pop    %r14
   34cfb:	41 5f                	pop    %r15
   34cfd:	c9                   	leaveq 
   34cfe:	c3                   	retq   

0000000000034cff <e1000_clean>:
   34cff:	55                   	push   %rbp
   34d00:	48 89 e5             	mov    %rsp,%rbp
   34d03:	41 57                	push   %r15
   34d05:	41 56                	push   %r14
   34d07:	41 55                	push   %r13
   34d09:	41 54                	push   %r12
   34d0b:	53                   	push   %rbx
   34d0c:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   34d13:	48 89 bd 48 ff ff ff 	mov    %rdi,0xffffffffffffff48(%rbp)
   34d1a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34d1d: R_X86_64_32S	.rodata.str1.1+0x3747
   34d21:	89 b5 44 ff ff ff    	mov    %esi,0xffffffffffffff44(%rbp)
   34d27:	e8 00 00 00 00       	callq  34d2c <e1000_clean+0x2d>
			34d28: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34d2c:	48 8b 85 48 ff ff ff 	mov    0xffffffffffffff48(%rbp),%rax
   34d33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34d36: R_X86_64_32S	.rodata.str1.1+0x1be
   34d3a:	48 8b 98 c8 00 00 00 	mov    0xc8(%rax),%rbx
   34d41:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   34d48:	e8 00 00 00 00       	callq  34d4d <e1000_clean+0x4e>
			34d49: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34d4d:	48 8d bb e8 08 00 00 	lea    0x8e8(%rbx),%rdi
   34d54:	4c 8d bb 00 08 00 00 	lea    0x800(%rbx),%r15
   34d5b:	e8 00 00 00 00       	callq  34d60 <e1000_clean+0x61>
			34d5c: R_X86_64_PC32	.spinlock.text+0x2cd
   34d60:	85 c0                	test   %eax,%eax
   34d62:	0f 84 89 07 00 00    	je     354f1 <e1000_clean+0x7f2>
   34d68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34d6b: R_X86_64_32S	.rodata.str1.1+0x3753
   34d6f:	48 81 c3 b8 0b 00 00 	add    $0xbb8,%rbx
   34d76:	4d 8b b7 b0 01 00 00 	mov    0x1b0(%r15),%r14
   34d7d:	e8 00 00 00 00       	callq  34d82 <e1000_clean+0x83>
			34d7e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34d82:	48 89 9d 78 ff ff ff 	mov    %rbx,0xffffffffffffff78(%rbp)
   34d89:	49 8b 97 f0 02 00 00 	mov    0x2f0(%r15),%rdx
   34d90:	48 89 95 50 ff ff ff 	mov    %rdx,0xffffffffffffff50(%rbp)
   34d97:	45 8b 66 1c          	mov    0x1c(%r14),%r12d
   34d9b:	44 89 e0             	mov    %r12d,%eax
   34d9e:	48 c1 e0 05          	shl    $0x5,%rax
   34da2:	49 03 46 20          	add    0x20(%r14),%rax
   34da6:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
   34daa:	89 85 64 ff ff ff    	mov    %eax,0xffffffffffffff64(%rbp)
   34db0:	89 c0                	mov    %eax,%eax
   34db2:	48 c1 e0 04          	shl    $0x4,%rax
   34db6:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   34dbd:	49 8b 16             	mov    (%r14),%rdx
   34dc0:	c7 85 58 ff ff ff 00 	movl   $0x0,0xffffffffffffff58(%rbp)
   34dc7:	00 00 00 
   34dca:	c6 45 9f 00          	movb   $0x0,0xffffffffffffff9f(%rbp)
   34dce:	c7 85 60 ff ff ff 00 	movl   $0x0,0xffffffffffffff60(%rbp)
   34dd5:	00 00 00 
   34dd8:	c7 85 5c ff ff ff 00 	movl   $0x0,0xffffffffffffff5c(%rbp)
   34ddf:	00 00 00 
   34de2:	48 01 d0             	add    %rdx,%rax
   34de5:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   34dec:	48 8b 85 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rax
   34df3:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   34df7:	75 0f                	jne    34e08 <e1000_clean+0x109>
   34df9:	e9 21 01 00 00       	jmpq   34f1f <e1000_clean+0x220>
   34dfe:	80 7d 9f 00          	cmpb   $0x0,0xffffffffffffff9f(%rbp)
   34e02:	0f 85 d0 00 00 00    	jne    34ed8 <e1000_clean+0x1d9>
   34e08:	49 8b 16             	mov    (%r14),%rdx
   34e0b:	44 89 e0             	mov    %r12d,%eax
   34e0e:	48 89 45 88          	mov    %rax,0xffffffffffffff88(%rbp)
   34e12:	48 c1 e0 05          	shl    $0x5,%rax
   34e16:	48 89 85 68 ff ff ff 	mov    %rax,0xffffffffffffff68(%rbp)
   34e1d:	48 89 55 90          	mov    %rdx,0xffffffffffffff90(%rbp)
   34e21:	49 8b 56 20          	mov    0x20(%r14),%rdx
   34e25:	48 01 d0             	add    %rdx,%rax
   34e28:	44 3b a5 64 ff ff ff 	cmp    0xffffffffffffff64(%rbp),%r12d
   34e2f:	48 89 85 68 ff ff ff 	mov    %rax,0xffffffffffffff68(%rbp)
   34e36:	0f 94 45 9f          	sete   0xffffffffffffff9f(%rbp)
   34e3a:	80 7d 9f 00          	cmpb   $0x0,0xffffffffffffff9f(%rbp)
   34e3e:	74 5f                	je     34e9f <e1000_clean+0x1a0>
   34e40:	48 8b 18             	mov    (%rax),%rbx
   34e43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34e46: R_X86_64_32S	.rodata.str1.1+0x28b8
   34e4a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   34e50:	e8 00 00 00 00       	callq  34e55 <e1000_clean+0x156>
			34e51: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34e55:	8b 83 b8 00 00 00    	mov    0xb8(%rbx),%eax
   34e5b:	48 03 83 c0 00 00 00 	add    0xc0(%rbx),%rax
   34e62:	8b 40 08             	mov    0x8(%rax),%eax
   34e65:	66 85 c0             	test   %ax,%ax
   34e68:	74 04                	je     34e6e <e1000_clean+0x16f>
   34e6a:	44 0f b7 e8          	movzwl %ax,%r13d
   34e6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34e71: R_X86_64_32S	.rodata.str1.1+0x3766
   34e75:	e8 00 00 00 00       	callq  34e7a <e1000_clean+0x17b>
			34e76: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34e7a:	8b 43 68             	mov    0x68(%rbx),%eax
   34e7d:	8b 8d 60 ff ff ff    	mov    0xffffffffffffff60(%rbp),%ecx
   34e83:	41 8d 55 ff          	lea    0xffffffffffffffff(%r13),%edx
   34e87:	44 01 ad 5c ff ff ff 	add    %r13d,0xffffffffffffff5c(%rbp)
   34e8e:	01 c1                	add    %eax,%ecx
   34e90:	2b 43 6c             	sub    0x6c(%rbx),%eax
   34e93:	0f af d0             	imul   %eax,%edx
   34e96:	8d 14 11             	lea    (%rcx,%rdx,1),%edx
   34e99:	89 95 60 ff ff ff    	mov    %edx,0xffffffffffffff60(%rbp)
   34e9f:	48 8b b5 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rsi
   34ea6:	4c 89 ff             	mov    %r15,%rdi
   34ea9:	41 ff c4             	inc    %r12d
   34eac:	e8 41 13 ff ff       	callq  261f2 <e1000_unmap_and_free_tx_resource>
   34eb1:	48 c1 65 88 04       	shlq   $0x4,0xffffffffffffff88(%rbp)
   34eb6:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
   34eba:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   34ebe:	c7 44 10 0c 00 00 00 	movl   $0x0,0xc(%rax,%rdx,1)
   34ec5:	00 
   34ec6:	45 3b 66 14          	cmp    0x14(%r14),%r12d
   34eca:	0f 85 2e ff ff ff    	jne    34dfe <e1000_clean+0xff>
   34ed0:	45 31 e4             	xor    %r12d,%r12d
   34ed3:	e9 26 ff ff ff       	jmpq   34dfe <e1000_clean+0xff>
   34ed8:	44 89 e0             	mov    %r12d,%eax
   34edb:	48 c1 e0 05          	shl    $0x5,%rax
   34edf:	49 03 46 20          	add    0x20(%r14),%rax
   34ee3:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
   34ee7:	89 85 64 ff ff ff    	mov    %eax,0xffffffffffffff64(%rbp)
   34eed:	89 c0                	mov    %eax,%eax
   34eef:	48 c1 e0 04          	shl    $0x4,%rax
   34ef3:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   34efa:	49 8b 16             	mov    (%r14),%rdx
   34efd:	48 01 d0             	add    %rdx,%rax
   34f00:	83 bd 58 ff ff ff 40 	cmpl   $0x40,0xffffffffffffff58(%rbp)
   34f07:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   34f0e:	0f 84 bf 05 00 00    	je     354d3 <e1000_clean+0x7d4>
   34f14:	ff 85 58 ff ff ff    	incl   0xffffffffffffff58(%rbp)
   34f1a:	e9 cd fe ff ff       	jmpq   34dec <e1000_clean+0xed>
   34f1f:	45 89 66 1c          	mov    %r12d,0x1c(%r14)
   34f23:	80 7d 9f 00          	cmpb   $0x0,0xffffffffffffff9f(%rbp)
   34f27:	0f 84 05 01 00 00    	je     35032 <e1000_clean+0x333>
   34f2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34f30: R_X86_64_32S	.rodata.str1.1+0x2b02
   34f34:	e8 00 00 00 00       	callq  34f39 <e1000_clean+0x23a>
			34f35: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34f39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34f3c: R_X86_64_32S	.rodata.str1.1+0x15d4
   34f40:	e8 00 00 00 00       	callq  34f45 <e1000_clean+0x246>
			34f41: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34f45:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   34f4c:	f6 40 48 04          	testb  $0x4,0x48(%rax)
   34f50:	0f 85 dc 00 00 00    	jne    35032 <e1000_clean+0x333>
   34f56:	e9 81 05 00 00       	jmpq   354dc <e1000_clean+0x7dd>
   34f5b:	41 8b 56 14          	mov    0x14(%r14),%edx
   34f5f:	41 8b 46 1c          	mov    0x1c(%r14),%eax
   34f63:	ff c8                	dec    %eax
   34f65:	41 2b 46 18          	sub    0x18(%r14),%eax
   34f69:	01 d0                	add    %edx,%eax
   34f6b:	83 f8 1f             	cmp    $0x1f,%eax
   34f6e:	0f 86 be 00 00 00    	jbe    35032 <e1000_clean+0x333>
   34f74:	0f ae f0             	mfence 
   34f77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34f7a: R_X86_64_32S	.rodata.str1.1+0x3772
   34f7e:	e8 00 00 00 00       	callq  34f83 <e1000_clean+0x284>
			34f7f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34f83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34f86: R_X86_64_32S	.rodata.str1.1+0x2bb2
   34f8a:	e8 00 00 00 00       	callq  34f8f <e1000_clean+0x290>
			34f8b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34f8f:	48 8b 95 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rdx
   34f96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34f99: R_X86_64_32S	.rodata.str1.1+0x3786
   34f9d:	48 8b 9a 00 03 00 00 	mov    0x300(%rdx),%rbx
   34fa4:	e8 00 00 00 00       	callq  34fa9 <e1000_clean+0x2aa>
			34fa5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34fa9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34fac: R_X86_64_32S	.rodata.str1.1+0x15d4
   34fb0:	e8 00 00 00 00       	callq  34fb5 <e1000_clean+0x2b6>
			34fb1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34fb5:	f6 43 10 01          	testb  $0x1,0x10(%rbx)
   34fb9:	74 77                	je     35032 <e1000_clean+0x333>
   34fbb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34fbe: R_X86_64_32S	.rodata.str1.1+0x379d
   34fc2:	e8 00 00 00 00       	callq  34fc7 <e1000_clean+0x2c8>
			34fc3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34fc7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34fca: R_X86_64_32S	.rodata.str1.1+0x2bb2
   34fce:	e8 00 00 00 00       	callq  34fd3 <e1000_clean+0x2d4>
			34fcf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34fd3:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   34fda:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34fdd: R_X86_64_32S	.rodata.str1.1+0x37ae
   34fe1:	48 8b 98 00 03 00 00 	mov    0x300(%rax),%rbx
   34fe8:	e8 00 00 00 00       	callq  34fed <e1000_clean+0x2ee>
			34fe9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   34fed:	e8 b8 ea fc ff       	callq  3aaa <netpoll_trap>
   34ff2:	85 c0                	test   %eax,%eax
   34ff4:	74 14                	je     3500a <e1000_clean+0x30b>
   34ff6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			34ff9: R_X86_64_32S	.rodata.str1.1+0x2c01
   34ffd:	e8 00 00 00 00       	callq  35002 <e1000_clean+0x303>
			34ffe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35002:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   35008:	eb 21                	jmp    3502b <e1000_clean+0x32c>
   3500a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3500d: R_X86_64_32S	.rodata.str1.1+0x37c2
   35011:	e8 00 00 00 00       	callq  35016 <e1000_clean+0x317>
			35012: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35016:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   3501c:	19 c0                	sbb    %eax,%eax
   3501e:	85 c0                	test   %eax,%eax
   35020:	74 09                	je     3502b <e1000_clean+0x32c>
   35022:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   35026:	e8 ca e4 fc ff       	callq  34f5 <__netif_schedule>
   3502b:	41 ff 87 b8 01 00 00 	incl   0x1b8(%r15)
   35032:	41 80 bf 09 02 00 00 	cmpb   $0x0,0x209(%r15)
   35039:	00 
   3503a:	0f 84 72 01 00 00    	je     351b2 <e1000_clean+0x4b3>
   35040:	41 c6 87 09 02 00 00 	movb   $0x0,0x209(%r15)
   35047:	00 
   35048:	8b 95 64 ff ff ff    	mov    0xffffffffffffff64(%rbp),%edx
   3504e:	48 c1 e2 05          	shl    $0x5,%rdx
   35052:	48 89 55 80          	mov    %rdx,0xffffffffffffff80(%rbp)
   35056:	48 89 d1             	mov    %rdx,%rcx
   35059:	49 03 4e 20          	add    0x20(%r14),%rcx
   3505d:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
   35062:	0f 84 4a 01 00 00    	je     351b2 <e1000_clean+0x4b3>
   35068:	41 0f b6 87 00 02 00 	movzbl 0x200(%r15),%eax
   3506f:	00 
   35070:	48 8b 15 00 00 00 00 	mov    0(%rip),%rdx        # 35077 <e1000_clean+0x378>
			35073: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   35077:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
   3507e:	48 03 41 10          	add    0x10(%rcx),%rax
   35082:	48 39 d0             	cmp    %rdx,%rax
   35085:	0f 89 27 01 00 00    	jns    351b2 <e1000_clean+0x4b3>
   3508b:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
   35092:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35095: R_X86_64_32S	.rodata.str1.1+0xae
   35099:	48 8b 18             	mov    (%rax),%rbx
   3509c:	e8 00 00 00 00       	callq  350a1 <e1000_clean+0x3a2>
			3509d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   350a1:	8b 43 08             	mov    0x8(%rbx),%eax
   350a4:	a8 10                	test   $0x10,%al
   350a6:	0f 85 06 01 00 00    	jne    351b2 <e1000_clean+0x4b3>
   350ac:	48 8b 95 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rdx
   350b3:	41 0f b7 5e 5a       	movzwl 0x5a(%r14),%ebx
   350b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			350bb: R_X86_64_32S	.rodata.str1.1+0xae
   350bf:	4c 8b 22             	mov    (%rdx),%r12
   350c2:	e8 00 00 00 00       	callq  350c7 <e1000_clean+0x3c8>
			350c3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   350c7:	49 01 dc             	add    %rbx,%r12
   350ca:	45 8b 2c 24          	mov    (%r12),%r13d
   350ce:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
   350d5:	41 0f b7 5e 58       	movzwl 0x58(%r14),%ebx
   350da:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			350dd: R_X86_64_32S	.rodata.str1.1+0xae
   350e1:	4c 8b 20             	mov    (%rax),%r12
   350e4:	e8 00 00 00 00       	callq  350e9 <e1000_clean+0x3ea>
			350e5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   350e9:	49 01 dc             	add    %rbx,%r12
   350ec:	45 8b 14 24          	mov    (%r12),%r10d
   350f0:	49 8b 56 20          	mov    0x20(%r14),%rdx
   350f4:	48 01 55 80          	add    %rdx,0xffffffffffffff80(%rbp)
   350f8:	be 60 00 00 00       	mov    $0x60,%esi
   350fd:	45 8b 4e 1c          	mov    0x1c(%r14),%r9d
   35101:	45 8b 46 18          	mov    0x18(%r14),%r8d
   35105:	31 d2                	xor    %edx,%edx
   35107:	4d 2b b7 b0 01 00 00 	sub    0x1b0(%r15),%r14
   3510e:	48 8b 45 80          	mov    0xffffffffffffff80(%rbp),%rax
   35112:	48 8b 0d 00 00 00 00 	mov    0(%rip),%rcx        # 35119 <e1000_clean+0x41a>
			35115: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   35119:	48 8b 78 10          	mov    0x10(%rax),%rdi
   3511d:	48 b8 ab aa aa aa aa 	mov    $0xaaaaaaaaaaaaaaab,%rax
   35124:	aa aa aa 
   35127:	49 c1 fe 05          	sar    $0x5,%r14
   3512b:	4c 0f af f0          	imul   %rax,%r14
   3512f:	4c 89 f0             	mov    %r14,%rax
   35132:	48 f7 f6             	div    %rsi
   35135:	48 8b 95 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdx
   3513c:	48 89 c6             	mov    %rax,%rsi
   3513f:	0f b6 42 0c          	movzbl 0xc(%rdx),%eax
   35143:	44 89 d2             	mov    %r10d,%edx
   35146:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   3514b:	48 89 3c 24          	mov    %rdi,(%rsp)
   3514f:	44 89 e9             	mov    %r13d,%ecx
   35152:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35155: R_X86_64_32S	str_885150258
   35159:	89 44 24 18          	mov    %eax,0x18(%rsp)
   3515d:	8b 85 64 ff ff ff    	mov    0xffffffffffffff64(%rbp),%eax
   35163:	89 44 24 08          	mov    %eax,0x8(%rsp)
   35167:	31 c0                	xor    %eax,%eax
   35169:	e8 00 00 00 00       	callq  3516e <e1000_clean+0x46f>
			3516a: R_X86_64_PC32	printk+0xfffffffffffffffc
   3516e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35171: R_X86_64_32S	.rodata.str1.1+0x2ba1
   35175:	e8 00 00 00 00       	callq  3517a <e1000_clean+0x47b>
			35176: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3517a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3517d: R_X86_64_32S	.rodata.str1.1+0x2bb2
   35181:	e8 00 00 00 00       	callq  35186 <e1000_clean+0x487>
			35182: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35186:	48 8b 95 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rdx
   3518d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35190: R_X86_64_32S	.rodata.str1.1+0x2bc6
   35194:	48 8b 9a 00 03 00 00 	mov    0x300(%rdx),%rbx
   3519b:	e8 00 00 00 00       	callq  351a0 <e1000_clean+0x4a1>
			3519c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   351a0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			351a3: R_X86_64_32S	.rodata.str1.1+0x2ac7
   351a7:	e8 00 00 00 00       	callq  351ac <e1000_clean+0x4ad>
			351a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   351ac:	f0 0f ba 6b 10 00    	lock btsl $0x0,0x10(%rbx)
   351b2:	8b 85 60 ff ff ff    	mov    0xffffffffffffff60(%rbp),%eax
   351b8:	41 01 87 18 01 00 00 	add    %eax,0x118(%r15)
   351bf:	49 8d bf e8 00 00 00 	lea    0xe8(%r15),%rdi
   351c6:	8b 95 5c ff ff ff    	mov    0xffffffffffffff5c(%rbp),%edx
   351cc:	41 01 97 1c 01 00 00 	add    %edx,0x11c(%r15)
   351d3:	8b 85 60 ff ff ff    	mov    0xffffffffffffff60(%rbp),%eax
   351d9:	49 01 87 18 03 00 00 	add    %rax,0x318(%r15)
   351e0:	89 d0                	mov    %edx,%eax
   351e2:	49 01 87 08 03 00 00 	add    %rax,0x308(%r15)
   351e9:	e8 00 00 00 00       	callq  351ee <e1000_clean+0x4ef>
			351ea: R_X86_64_PC32	.spinlock.text+0xfffffffffffffffc
   351ee:	49 8b b7 20 02 00 00 	mov    0x220(%r15),%rsi
   351f5:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   351f9:	8b 8d 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%ecx
   351ff:	4c 89 ff             	mov    %r15,%rdi
   35202:	41 ff 97 10 02 00 00 	callq  *0x210(%r15)
   35209:	80 7d 9f 00          	cmpb   $0x0,0xffffffffffffff9f(%rbp)
   3520d:	74 0e                	je     3521d <e1000_clean+0x51e>
   3520f:	8b 85 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%eax
   35215:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   35218:	e9 f4 02 00 00       	jmpq   35511 <e1000_clean+0x812>
   3521d:	8b 95 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%edx
   35223:	39 55 cc             	cmp    %edx,0xffffffffffffffcc(%rbp)
   35226:	0f 8d e5 02 00 00    	jge    35511 <e1000_clean+0x812>
   3522c:	41 f6 87 2c 01 00 00 	testb  $0x3,0x12c(%r15)
   35233:	03 
   35234:	0f 84 47 01 00 00    	je     35381 <e1000_clean+0x682>
   3523a:	49 8d 9f b8 03 00 00 	lea    0x3b8(%r15),%rbx
   35241:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35244: R_X86_64_32S	.rodata.str1.1+0x37d5
   35248:	e8 00 00 00 00       	callq  3524d <e1000_clean+0x54e>
			35249: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3524d:	83 7b 10 04          	cmpl   $0x4,0x10(%rbx)
   35251:	45 8b af 28 01 00 00 	mov    0x128(%r15),%r13d
   35258:	0f 86 23 01 00 00    	jbe    35381 <e1000_clean+0x682>
   3525e:	66 41 81 bf b0 00 00 	cmpw   $0x3e8,0xb0(%r15)
   35265:	00 e8 03 
   35268:	0f 85 bb 00 00 00    	jne    35329 <e1000_clean+0x62a>
   3526e:	41 0f b7 b7 30 01 00 	movzwl 0x130(%r15),%esi
   35275:	00 
   35276:	41 8b 8f 18 01 00 00 	mov    0x118(%r15),%ecx
   3527d:	4c 89 ff             	mov    %r15,%rdi
   35280:	41 8b 97 1c 01 00 00 	mov    0x11c(%r15),%edx
   35287:	e8 a5 e3 fe ff       	callq  23631 <e1000_update_itr>
   3528c:	41 83 bf 2c 01 00 00 	cmpl   $0x3,0x12c(%r15)
   35293:	03 
   35294:	66 41 89 87 30 01 00 	mov    %ax,0x130(%r15)
   3529b:	00 
   3529c:	75 0f                	jne    352ad <e1000_clean+0x5ae>
   3529e:	66 85 c0             	test   %ax,%ax
   352a1:	75 0a                	jne    352ad <e1000_clean+0x5ae>
   352a3:	66 41 c7 87 30 01 00 	movw   $0x1,0x130(%r15)
   352aa:	00 01 00 
   352ad:	41 0f b7 b7 32 01 00 	movzwl 0x132(%r15),%esi
   352b4:	00 
   352b5:	41 8b 8f 20 01 00 00 	mov    0x120(%r15),%ecx
   352bc:	4c 89 ff             	mov    %r15,%rdi
   352bf:	41 8b 97 24 01 00 00 	mov    0x124(%r15),%edx
   352c6:	e8 66 e3 fe ff       	callq  23631 <e1000_update_itr>
   352cb:	41 83 bf 2c 01 00 00 	cmpl   $0x3,0x12c(%r15)
   352d2:	03 
   352d3:	66 41 89 87 32 01 00 	mov    %ax,0x132(%r15)
   352da:	00 
   352db:	75 0f                	jne    352ec <e1000_clean+0x5ed>
   352dd:	66 85 c0             	test   %ax,%ax
   352e0:	75 0a                	jne    352ec <e1000_clean+0x5ed>
   352e2:	66 41 c7 87 32 01 00 	movw   $0x1,0x132(%r15)
   352e9:	00 01 00 
   352ec:	66 41 8b 97 32 01 00 	mov    0x132(%r15),%dx
   352f3:	00 
   352f4:	41 8b 87 30 01 00 00 	mov    0x130(%r15),%eax
   352fb:	66 39 c2             	cmp    %ax,%dx
   352fe:	76 05                	jbe    35305 <e1000_clean+0x606>
   35300:	0f b7 c2             	movzwl %dx,%eax
   35303:	eb 03                	jmp    35308 <e1000_clean+0x609>
   35305:	0f b7 c0             	movzwl %ax,%eax
   35308:	66 85 c0             	test   %ax,%ax
   3530b:	75 08                	jne    35315 <e1000_clean+0x616>
   3530d:	41 bd 70 11 01 00    	mov    $0x11170,%r13d
   35313:	eb 1a                	jmp    3532f <e1000_clean+0x630>
   35315:	66 83 f8 01          	cmp    $0x1,%ax
   35319:	75 08                	jne    35323 <e1000_clean+0x624>
   3531b:	41 bd 20 4e 00 00    	mov    $0x4e20,%r13d
   35321:	eb 0c                	jmp    3532f <e1000_clean+0x630>
   35323:	66 83 f8 02          	cmp    $0x2,%ax
   35327:	75 06                	jne    3532f <e1000_clean+0x630>
   35329:	41 bd a0 0f 00 00    	mov    $0xfa0,%r13d
   3532f:	41 8b 97 28 01 00 00 	mov    0x128(%r15),%edx
   35336:	41 39 d5             	cmp    %edx,%r13d
   35339:	74 46                	je     35381 <e1000_clean+0x682>
   3533b:	76 0f                	jbe    3534c <e1000_clean+0x64d>
   3533d:	44 89 e8             	mov    %r13d,%eax
   35340:	c1 e8 02             	shr    $0x2,%eax
   35343:	01 d0                	add    %edx,%eax
   35345:	41 39 c5             	cmp    %eax,%r13d
   35348:	44 0f 47 e8          	cmova  %eax,%r13d
   3534c:	41 bc 00 ca 9a 3b    	mov    $0x3b9aca00,%r12d
   35352:	45 89 af 28 01 00 00 	mov    %r13d,0x128(%r15)
   35359:	31 d2                	xor    %edx,%edx
   3535b:	41 c1 e5 08          	shl    $0x8,%r13d
   3535f:	44 89 e0             	mov    %r12d,%eax
   35362:	48 8b 1b             	mov    (%rbx),%rbx
   35365:	41 f7 f5             	div    %r13d
   35368:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3536b: R_X86_64_32S	.rodata.str1.1+0xb4
   3536f:	48 81 c3 c4 00 00 00 	add    $0xc4,%rbx
   35376:	41 89 c4             	mov    %eax,%r12d
   35379:	e8 00 00 00 00       	callq  3537e <e1000_clean+0x67f>
			3537a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3537e:	44 89 23             	mov    %r12d,(%rbx)
   35381:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35384: R_X86_64_32S	.rodata.str1.1+0x37e3
   35388:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   3538c:	4c 8d 65 b8          	lea    0xffffffffffffffb8(%rbp),%r12
   35390:	e8 00 00 00 00       	callq  35395 <e1000_clean+0x696>
			35391: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35395:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35398: R_X86_64_32S	.rodata.str1.1+0x37f5
   3539c:	e8 00 00 00 00       	callq  353a1 <e1000_clean+0x6a2>
			3539d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   353a1:	48 8b 95 48 ff ff ff 	mov    0xffffffffffffff48(%rbp),%rdx
   353a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			353ab: R_X86_64_32S	.rodata.str1.1+0x3803
   353af:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   353b6:	00 
   353b7:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   353be:	00 
   353bf:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   353c6:	48 89 55 c0          	mov    %rdx,0xffffffffffffffc0(%rbp)
   353ca:	e8 00 00 00 00       	callq  353cf <e1000_clean+0x6d0>
			353cb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   353cf:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   353d3:	4c 89 ea             	mov    %r13,%rdx
   353d6:	4c 89 e6             	mov    %r12,%rsi
   353d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			353dc: R_X86_64_32S	.rodata.str1.1+0x37f5
   353e0:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   353e7:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   353ee:	00 
   353ef:	e8 00 00 00 00       	callq  353f4 <e1000_clean+0x6f5>
			353f0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   353f4:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
   353f8:	48 85 c0             	test   %rax,%rax
   353fb:	74 1c                	je     35419 <e1000_clean+0x71a>
   353fd:	48 8d 48 10          	lea    0x10(%rax),%rcx
   35401:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   35407:	4c 89 ea             	mov    %r13,%rdx
   3540a:	4c 89 e6             	mov    %r12,%rsi
   3540d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35410: R_X86_64_32S	.rodata.str1.1+0x37f5
   35414:	e8 00 00 00 00       	callq  35419 <e1000_clean+0x71a>
			35415: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   35419:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3541d:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   35421:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35424: R_X86_64_32S	.rodata.str1.1+0x37f5
   35428:	48 c7 45 a0 d5 05 00 	movq   $0x5d5,0xffffffffffffffa0(%rbp)
   3542f:	00 
   35430:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   35434:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
   35437:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   3543a:	e8 00 00 00 00       	callq  3543f <e1000_clean+0x740>
			3543b: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   3543f:	48 8b 85 48 ff ff ff 	mov    0xffffffffffffff48(%rbp),%rax
   35446:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35449: R_X86_64_32S	.rodata.str1.1+0x381f
   3544d:	48 89 45 b8          	mov    %rax,0xffffffffffffffb8(%rbp)
   35451:	e8 00 00 00 00       	callq  35456 <e1000_clean+0x757>
			35452: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35456:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   3545a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3545d: R_X86_64_32S	.rodata.str1.1+0x37f5
   35461:	41 b8 88 00 00 00    	mov    $0x88,%r8d
   35467:	4c 89 e1             	mov    %r12,%rcx
   3546a:	4c 89 ea             	mov    %r13,%rdx
   3546d:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   35474:	48 89 de             	mov    %rbx,%rsi
   35477:	e8 00 00 00 00       	callq  3547c <e1000_clean+0x77d>
			35478: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3547c:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
   35480:	48 85 ff             	test   %rdi,%rdi
   35483:	74 2e                	je     354b3 <e1000_clean+0x7b4>
   35485:	ba 08 00 00 00       	mov    $0x8,%edx
   3548a:	be 10 00 00 00       	mov    $0x10,%esi
   3548f:	e8 00 00 00 00       	callq  35494 <e1000_clean+0x795>
			35490: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
   35494:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
   35498:	b9 08 00 00 00       	mov    $0x8,%ecx
   3549d:	4c 89 ea             	mov    %r13,%rdx
   354a0:	48 89 de             	mov    %rbx,%rsi
   354a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			354a6: R_X86_64_32S	.rodata.str1.1+0x37f5
   354aa:	49 83 c0 10          	add    $0x10,%r8
   354ae:	e8 00 00 00 00       	callq  354b3 <e1000_clean+0x7b4>
			354af: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   354b3:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   354b7:	48 85 ff             	test   %rdi,%rdi
   354ba:	74 0d                	je     354c9 <e1000_clean+0x7ca>
   354bc:	e8 00 00 00 00       	callq  354c1 <e1000_clean+0x7c2>
			354bd: R_X86_64_PC32	kfree+0xfffffffffffffffc
   354c1:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   354c8:	00 
   354c9:	4c 89 ff             	mov    %r15,%rdi
   354cc:	e8 c8 bd fc ff       	callq  1299 <e1000_irq_enable>
   354d1:	eb 3e                	jmp    35511 <e1000_clean+0x812>
   354d3:	45 89 66 1c          	mov    %r12d,0x1c(%r14)
   354d7:	e9 51 fa ff ff       	jmpq   34f2d <e1000_clean+0x22e>
   354dc:	41 8b 46 18          	mov    0x18(%r14),%eax
   354e0:	31 d2                	xor    %edx,%edx
   354e2:	41 39 46 1c          	cmp    %eax,0x1c(%r14)
   354e6:	0f 87 73 fa ff ff    	ja     34f5f <e1000_clean+0x260>
   354ec:	e9 6a fa ff ff       	jmpq   34f5b <e1000_clean+0x25c>
   354f1:	49 8b b7 20 02 00 00 	mov    0x220(%r15),%rsi
   354f8:	8b 8d 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%ecx
   354fe:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   35502:	4c 89 ff             	mov    %r15,%rdi
   35505:	41 ff 97 10 02 00 00 	callq  *0x210(%r15)
   3550c:	e9 0c fd ff ff       	jmpq   3521d <e1000_clean+0x51e>
   35511:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   35514:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   3551b:	5b                   	pop    %rbx
   3551c:	41 5c                	pop    %r12
   3551e:	41 5d                	pop    %r13
   35520:	41 5e                	pop    %r14
   35522:	41 5f                	pop    %r15
   35524:	c9                   	leaveq 
   35525:	c3                   	retq   

0000000000035526 <e1000_netpoll>:
   35526:	55                   	push   %rbp
   35527:	48 89 e5             	mov    %rsp,%rbp
   3552a:	41 57                	push   %r15
   3552c:	49 89 ff             	mov    %rdi,%r15
   3552f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35532: R_X86_64_32S	.rodata.str1.1+0x383b
   35536:	41 56                	push   %r14
   35538:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
   3553c:	41 55                	push   %r13
   3553e:	4c 8d 6d cc          	lea    0xffffffffffffffcc(%rbp),%r13
   35542:	41 54                	push   %r12
   35544:	4d 8d a7 00 08 00 00 	lea    0x800(%r15),%r12
   3554b:	53                   	push   %rbx
   3554c:	48 83 ec 38          	sub    $0x38,%rsp
   35550:	e8 00 00 00 00       	callq  35555 <e1000_netpoll+0x2f>
			35551: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35555:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35558: R_X86_64_32S	.rodata.str1.1+0x1be
   3555c:	e8 00 00 00 00       	callq  35561 <e1000_netpoll+0x3b>
			3555d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35561:	49 8b 84 24 f8 02 00 	mov    0x2f8(%r12),%rax
   35568:	00 
   35569:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3556c: R_X86_64_32S	.rodata.str1.1+0x3849
   35570:	8b 98 fc 02 00 00    	mov    0x2fc(%rax),%ebx
   35576:	e8 00 00 00 00       	callq  3557b <e1000_netpoll+0x55>
			35577: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3557b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3557e: R_X86_64_32S	.rodata.str1.1+0x3855
   35582:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   35589:	00 
   3558a:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   35591:	00 
   35592:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   35599:	89 5d c8             	mov    %ebx,0xffffffffffffffc8(%rbp)
   3559c:	e8 00 00 00 00       	callq  355a1 <e1000_netpoll+0x7b>
			3559d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   355a1:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
   355a5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   355ab:	4c 89 f1             	mov    %r14,%rcx
   355ae:	4c 89 ea             	mov    %r13,%rdx
   355b1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			355b4: R_X86_64_32S	.rodata.str1.1+0x3849
   355b8:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   355bf:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   355c6:	00 
   355c7:	e8 00 00 00 00       	callq  355cc <e1000_netpoll+0xa6>
			355c8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   355cc:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
   355d0:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   355d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			355d7: R_X86_64_32S	.rodata.str1.1+0x3849
   355db:	48 c7 45 a0 81 04 00 	movq   $0x481,0xffffffffffffffa0(%rbp)
   355e2:	00 
   355e3:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   355e7:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   355ea:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   355ed:	e8 00 00 00 00       	callq  355f2 <e1000_netpoll+0xcc>
			355ee: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   355f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			355f5: R_X86_64_32S	.rodata.str1.1+0x386f
   355f9:	89 5d cc             	mov    %ebx,0xffffffffffffffcc(%rbp)
   355fc:	e8 00 00 00 00       	callq  35601 <e1000_netpoll+0xdb>
			355fd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35601:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   35605:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35608: R_X86_64_32S	.rodata.str1.1+0x3849
   3560c:	4d 89 e8             	mov    %r13,%r8
   3560f:	b9 04 00 00 00       	mov    $0x4,%ecx
   35614:	4c 89 f2             	mov    %r14,%rdx
   35617:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   3561e:	e8 00 00 00 00       	callq  35623 <e1000_netpoll+0xfd>
			3561f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   35623:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   35627:	48 85 ff             	test   %rdi,%rdi
   3562a:	74 0d                	je     35639 <e1000_netpoll+0x113>
   3562c:	e8 00 00 00 00       	callq  35631 <e1000_netpoll+0x10b>
			3562d: R_X86_64_PC32	kfree+0xfffffffffffffffc
   35631:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   35638:	00 
   35639:	49 8b 84 24 f8 02 00 	mov    0x2f8(%r12),%rax
   35640:	00 
   35641:	4c 89 fe             	mov    %r15,%rsi
   35644:	8b b8 fc 02 00 00    	mov    0x2fc(%rax),%edi
   3564a:	e8 a1 da fe ff       	callq  230f0 <e1000_intr>
   3564f:	49 8b 84 24 f8 02 00 	mov    0x2f8(%r12),%rax
   35656:	00 
   35657:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3565a: R_X86_64_32S	.rodata.str1.1+0x3889
   3565e:	8b 98 fc 02 00 00    	mov    0x2fc(%rax),%ebx
   35664:	e8 00 00 00 00       	callq  35669 <e1000_netpoll+0x143>
			35665: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35669:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3566c: R_X86_64_32S	.rodata.str1.1+0x3894
   35670:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   35677:	00 
   35678:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   3567f:	00 
   35680:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   35687:	89 5d c8             	mov    %ebx,0xffffffffffffffc8(%rbp)
   3568a:	e8 00 00 00 00       	callq  3568f <e1000_netpoll+0x169>
			3568b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3568f:	48 8d 75 c0          	lea    0xffffffffffffffc0(%rbp),%rsi
   35693:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   35699:	4c 89 f1             	mov    %r14,%rcx
   3569c:	4c 89 ea             	mov    %r13,%rdx
   3569f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			356a2: R_X86_64_32S	.rodata.str1.1+0x3889
   356a6:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   356ad:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
   356b4:	00 
   356b5:	e8 00 00 00 00       	callq  356ba <e1000_netpoll+0x194>
			356b6: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   356ba:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
   356be:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   356c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			356c5: R_X86_64_32S	.rodata.str1.1+0x3889
   356c9:	48 c7 45 a0 b5 05 00 	movq   $0x5b5,0xffffffffffffffa0(%rbp)
   356d0:	00 
   356d1:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   356d5:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   356d8:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   356db:	e8 00 00 00 00       	callq  356e0 <e1000_netpoll+0x1ba>
			356dc: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   356e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			356e3: R_X86_64_32S	.rodata.str1.1+0x38ad
   356e7:	89 5d cc             	mov    %ebx,0xffffffffffffffcc(%rbp)
   356ea:	e8 00 00 00 00       	callq  356ef <e1000_netpoll+0x1c9>
			356eb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   356ef:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   356f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			356f6: R_X86_64_32S	.rodata.str1.1+0x3889
   356fa:	4d 89 e8             	mov    %r13,%r8
   356fd:	b9 04 00 00 00       	mov    $0x4,%ecx
   35702:	4c 89 f2             	mov    %r14,%rdx
   35705:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   3570c:	e8 00 00 00 00       	callq  35711 <e1000_netpoll+0x1eb>
			3570d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   35711:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   35715:	48 85 ff             	test   %rdi,%rdi
   35718:	74 05                	je     3571f <e1000_netpoll+0x1f9>
   3571a:	e8 00 00 00 00       	callq  3571f <e1000_netpoll+0x1f9>
			3571b: R_X86_64_PC32	kfree+0xfffffffffffffffc
   3571f:	48 83 c4 38          	add    $0x38,%rsp
   35723:	5b                   	pop    %rbx
   35724:	41 5c                	pop    %r12
   35726:	41 5d                	pop    %r13
   35728:	41 5e                	pop    %r14
   3572a:	41 5f                	pop    %r15
   3572c:	c9                   	leaveq 
   3572d:	c3                   	retq   

000000000003572e <e1000_io_error_detected>:
   3572e:	55                   	push   %rbp
   3572f:	48 89 e5             	mov    %rsp,%rbp
   35732:	41 54                	push   %r12
   35734:	49 89 fc             	mov    %rdi,%r12
   35737:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3573a: R_X86_64_32S	.rodata.str1.1+0x38c6
   3573e:	53                   	push   %rbx
   3573f:	e8 00 00 00 00       	callq  35744 <e1000_io_error_detected+0x16>
			35740: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35744:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35747: R_X86_64_32S	.rodata.str1.1+0x2d9d
   3574b:	e8 00 00 00 00       	callq  35750 <e1000_io_error_detected+0x22>
			3574c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35750:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35753: R_X86_64_32S	.rodata.str1.1+0x2dad
   35757:	e8 00 00 00 00       	callq  3575c <e1000_io_error_detected+0x2e>
			35758: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3575c:	49 8b 9c 24 f8 01 00 	mov    0x1f8(%r12),%rbx
   35763:	00 
   35764:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35767: R_X86_64_32S	.rodata.str1.1+0x1be
   3576b:	e8 00 00 00 00       	callq  35770 <e1000_io_error_detected+0x42>
			3576c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35770:	48 89 df             	mov    %rbx,%rdi
   35773:	e8 0c 46 fd ff       	callq  9d84 <netif_device_detach>
   35778:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3577b: R_X86_64_32S	.rodata.str1.1+0x15c6
   3577f:	e8 00 00 00 00       	callq  35784 <e1000_io_error_detected+0x56>
			35780: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35784:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35787: R_X86_64_32S	.rodata.str1.1+0x15d4
   3578b:	e8 00 00 00 00       	callq  35790 <e1000_io_error_detected+0x62>
			3578c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35790:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   35794:	74 0c                	je     357a2 <e1000_io_error_detected+0x74>
   35796:	48 8d bb 00 08 00 00 	lea    0x800(%rbx),%rdi
   3579d:	e8 00 00 00 00       	callq  357a2 <e1000_io_error_detected+0x74>
			3579e: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   357a2:	4c 89 e7             	mov    %r12,%rdi
   357a5:	e8 2d de fc ff       	callq  35d7 <pci_disable_device>
   357aa:	5b                   	pop    %rbx
   357ab:	41 5c                	pop    %r12
   357ad:	c9                   	leaveq 
   357ae:	b8 03 00 00 00       	mov    $0x3,%eax
   357b3:	c3                   	retq   

00000000000357b4 <e1000_io_slot_reset>:
   357b4:	55                   	push   %rbp
   357b5:	48 89 e5             	mov    %rsp,%rbp
   357b8:	41 55                	push   %r13
   357ba:	41 54                	push   %r12
   357bc:	49 89 fc             	mov    %rdi,%r12
   357bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			357c2: R_X86_64_32S	.rodata.str1.1+0x38de
   357c6:	53                   	push   %rbx
   357c7:	48 83 ec 08          	sub    $0x8,%rsp
   357cb:	e8 00 00 00 00       	callq  357d0 <e1000_io_slot_reset+0x1c>
			357cc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   357d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			357d3: R_X86_64_32S	.rodata.str1.1+0x2d9d
   357d7:	e8 00 00 00 00       	callq  357dc <e1000_io_slot_reset+0x28>
			357d8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   357dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			357df: R_X86_64_32S	.rodata.str1.1+0x2dad
   357e3:	e8 00 00 00 00       	callq  357e8 <e1000_io_slot_reset+0x34>
			357e4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   357e8:	49 8b 9c 24 f8 01 00 	mov    0x1f8(%r12),%rbx
   357ef:	00 
   357f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			357f3: R_X86_64_32S	.rodata.str1.1+0x1be
   357f7:	e8 00 00 00 00       	callq  357fc <e1000_io_slot_reset+0x48>
			357f8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   357fc:	4c 8d ab 00 08 00 00 	lea    0x800(%rbx),%r13
   35803:	48 81 c3 b8 0b 00 00 	add    $0xbb8,%rbx
   3580a:	41 83 bd d8 07 00 00 	cmpl   $0x0,0x7d8(%r13)
   35811:	00 
   35812:	74 0a                	je     3581e <e1000_io_slot_reset+0x6a>
   35814:	4c 89 e7             	mov    %r12,%rdi
   35817:	e8 78 e0 fc ff       	callq  3894 <pci_enable_device>
   3581c:	eb 08                	jmp    35826 <e1000_io_slot_reset+0x72>
   3581e:	4c 89 e7             	mov    %r12,%rdi
   35821:	e8 47 30 fe ff       	callq  1886d <pci_enable_device_mem>
   35826:	85 c0                	test   %eax,%eax
   35828:	74 15                	je     3583f <e1000_io_slot_reset+0x8b>
   3582a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3582d: R_X86_64_32S	str_840319956
   35831:	31 c0                	xor    %eax,%eax
   35833:	e8 00 00 00 00       	callq  35838 <e1000_io_slot_reset+0x84>
			35834: R_X86_64_PC32	printk+0xfffffffffffffffc
   35838:	b8 04 00 00 00       	mov    $0x4,%eax
   3583d:	eb 4e                	jmp    3588d <e1000_io_slot_reset+0xd9>
   3583f:	4c 89 e7             	mov    %r12,%rdi
   35842:	e8 cc db fc ff       	callq  3413 <pci_set_master>
   35847:	31 d2                	xor    %edx,%edx
   35849:	4c 89 e7             	mov    %r12,%rdi
   3584c:	be 03 00 00 00       	mov    $0x3,%esi
   35851:	e8 5c 1a fd ff       	callq  72b2 <pci_enable_wake>
   35856:	31 d2                	xor    %edx,%edx
   35858:	be 04 00 00 00       	mov    $0x4,%esi
   3585d:	4c 89 e7             	mov    %r12,%rdi
   35860:	e8 4d 1a fd ff       	callq  72b2 <pci_enable_wake>
   35865:	4c 89 ef             	mov    %r13,%rdi
   35868:	e8 09 bc fe ff       	callq  21476 <e1000_reset>
   3586d:	48 8b 1b             	mov    (%rbx),%rbx
   35870:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35873: R_X86_64_32S	.rodata.str1.1+0xb4
   35877:	e8 00 00 00 00       	callq  3587c <e1000_io_slot_reset+0xc8>
			35878: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3587c:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   3587f:	48 81 c3 10 58 00 00 	add    $0x5810,%rbx
   35886:	89 03                	mov    %eax,(%rbx)
   35888:	b8 05 00 00 00       	mov    $0x5,%eax
   3588d:	41 5c                	pop    %r12
   3588f:	5b                   	pop    %rbx
   35890:	41 5c                	pop    %r12
   35892:	41 5d                	pop    %r13
   35894:	c9                   	leaveq 
   35895:	c3                   	retq   

0000000000035896 <e1000_resume>:
   35896:	55                   	push   %rbp
   35897:	48 89 e5             	mov    %rsp,%rbp
   3589a:	41 57                	push   %r15
   3589c:	49 89 ff             	mov    %rdi,%r15
   3589f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			358a2: R_X86_64_32S	.rodata.str1.1+0x38f2
   358a6:	41 56                	push   %r14
   358a8:	41 55                	push   %r13
   358aa:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   358ae:	41 54                	push   %r12
   358b0:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
   358b4:	53                   	push   %rbx
   358b5:	48 83 ec 48          	sub    $0x48,%rsp
   358b9:	e8 00 00 00 00       	callq  358be <e1000_resume+0x28>
			358ba: R_X86_64_PC32	record_function+0xfffffffffffffffc
   358be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			358c1: R_X86_64_32S	.rodata.str1.1+0x2d9d
   358c5:	e8 00 00 00 00       	callq  358ca <e1000_resume+0x34>
			358c6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   358ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			358cd: R_X86_64_32S	.rodata.str1.1+0x2dad
   358d1:	e8 00 00 00 00       	callq  358d6 <e1000_resume+0x40>
			358d2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   358d6:	49 8b 87 f8 01 00 00 	mov    0x1f8(%r15),%rax
   358dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			358e0: R_X86_64_32S	.rodata.str1.1+0x1be
   358e4:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   358e8:	e8 00 00 00 00       	callq  358ed <e1000_resume+0x57>
			358e9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   358ed:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
   358f1:	31 f6                	xor    %esi,%esi
   358f3:	4c 89 ff             	mov    %r15,%rdi
   358f6:	4c 8b 75 90          	mov    0xffffffffffffff90(%rbp),%r14
   358fa:	48 05 b8 0b 00 00    	add    $0xbb8,%rax
   35900:	48 89 45 98          	mov    %rax,0xffffffffffffff98(%rbp)
   35904:	49 81 c6 00 08 00 00 	add    $0x800,%r14
   3590b:	e8 ba 42 fd ff       	callq  9bca <pci_set_power_state>
   35910:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35913: R_X86_64_32S	.rodata.str1.1+0x38ff
   35917:	e8 00 00 00 00       	callq  3591c <e1000_resume+0x86>
			35918: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3591c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3591f: R_X86_64_32S	.rodata.str1.1+0x3911
   35923:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   3592a:	00 
   3592b:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   35932:	00 
   35933:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   3593a:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
   3593e:	e8 00 00 00 00       	callq  35943 <e1000_resume+0xad>
			3593f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35943:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   35947:	4c 89 e1             	mov    %r12,%rcx
   3594a:	4c 89 ee             	mov    %r13,%rsi
   3594d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35950: R_X86_64_32S	.rodata.str1.1+0x38ff
   35954:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   3595b:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
   35962:	00 
   35963:	e8 00 00 00 00       	callq  35968 <e1000_resume+0xd2>
			35964: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   35968:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3596c:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
   35970:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35973: R_X86_64_32S	.rodata.str1.1+0x38ff
   35977:	48 c7 45 a0 1f 06 00 	movq   $0x61f,0xffffffffffffffa0(%rbp)
   3597e:	00 
   3597f:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   35983:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   35986:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
   35989:	e8 00 00 00 00       	callq  3598e <e1000_resume+0xf8>
			3598a: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   3598e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35991: R_X86_64_32S	.rodata.str1.1+0x3931
   35995:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
   35999:	e8 00 00 00 00       	callq  3599e <e1000_resume+0x108>
			3599a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3599e:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
   359a2:	41 b8 d8 06 00 00    	mov    $0x6d8,%r8d
   359a8:	4c 89 e9             	mov    %r13,%rcx
   359ab:	4c 89 e2             	mov    %r12,%rdx
   359ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			359b1: R_X86_64_32S	.rodata.str1.1+0x38ff
   359b5:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   359bc:	48 89 de             	mov    %rbx,%rsi
   359bf:	e8 00 00 00 00       	callq  359c4 <e1000_resume+0x12e>
			359c0: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   359c4:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   359c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			359cb: R_X86_64_32S	.rodata.str1.1+0x38ff
   359cf:	b9 04 00 00 00       	mov    $0x4,%ecx
   359d4:	4c 89 e2             	mov    %r12,%rdx
   359d7:	48 89 de             	mov    %rbx,%rsi
   359da:	e8 00 00 00 00       	callq  359df <e1000_resume+0x149>
			359db: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   359df:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   359e3:	48 85 ff             	test   %rdi,%rdi
   359e6:	74 0d                	je     359f5 <e1000_resume+0x15f>
   359e8:	e8 00 00 00 00       	callq  359ed <e1000_resume+0x157>
			359e9: R_X86_64_PC32	kfree+0xfffffffffffffffc
   359ed:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   359f4:	00 
   359f5:	41 83 be d8 07 00 00 	cmpl   $0x0,0x7d8(%r14)
   359fc:	00 
   359fd:	74 0a                	je     35a09 <e1000_resume+0x173>
   359ff:	4c 89 ff             	mov    %r15,%rdi
   35a02:	e8 8d de fc ff       	callq  3894 <pci_enable_device>
   35a07:	eb 08                	jmp    35a11 <e1000_resume+0x17b>
   35a09:	4c 89 ff             	mov    %r15,%rdi
   35a0c:	e8 5c 2e fe ff       	callq  1886d <pci_enable_device_mem>
   35a11:	85 c0                	test   %eax,%eax
   35a13:	89 c3                	mov    %eax,%ebx
   35a15:	74 15                	je     35a2c <e1000_resume+0x196>
   35a17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35a1a: R_X86_64_32S	str_207784759
   35a1e:	31 c0                	xor    %eax,%eax
   35a20:	e8 00 00 00 00       	callq  35a25 <e1000_resume+0x18f>
			35a21: R_X86_64_PC32	printk+0xfffffffffffffffc
   35a25:	89 da                	mov    %ebx,%edx
   35a27:	e9 e7 00 00 00       	jmpq   35b13 <e1000_resume+0x27d>
   35a2c:	4c 89 ff             	mov    %r15,%rdi
   35a2f:	e8 df d9 fc ff       	callq  3413 <pci_set_master>
   35a34:	31 d2                	xor    %edx,%edx
   35a36:	be 03 00 00 00       	mov    $0x3,%esi
   35a3b:	4c 89 ff             	mov    %r15,%rdi
   35a3e:	e8 6f 18 fd ff       	callq  72b2 <pci_enable_wake>
   35a43:	31 d2                	xor    %edx,%edx
   35a45:	be 04 00 00 00       	mov    $0x4,%esi
   35a4a:	4c 89 ff             	mov    %r15,%rdi
   35a4d:	e8 60 18 fd ff       	callq  72b2 <pci_enable_wake>
   35a52:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35a55: R_X86_64_32S	.rodata.str1.1+0x15c6
   35a59:	e8 00 00 00 00       	callq  35a5e <e1000_resume+0x1c8>
			35a5a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35a5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35a61: R_X86_64_32S	.rodata.str1.1+0x15d4
   35a65:	e8 00 00 00 00       	callq  35a6a <e1000_resume+0x1d4>
			35a66: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35a6a:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
   35a6e:	f6 40 48 01          	testb  $0x1,0x48(%rax)
   35a72:	74 12                	je     35a86 <e1000_resume+0x1f0>
   35a74:	4c 89 f7             	mov    %r14,%rdi
   35a77:	e8 af a5 fd ff       	callq  1002b <e1000_request_irq>
   35a7c:	85 c0                	test   %eax,%eax
   35a7e:	89 c2                	mov    %eax,%edx
   35a80:	0f 85 8d 00 00 00    	jne    35b13 <e1000_resume+0x27d>
   35a86:	4c 89 f7             	mov    %r14,%rdi
   35a89:	e8 52 15 fd ff       	callq  6fe0 <e1000_power_up_phy>
   35a8e:	4c 89 f7             	mov    %r14,%rdi
   35a91:	e8 e0 b9 fe ff       	callq  21476 <e1000_reset>
   35a96:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   35a9a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35a9d: R_X86_64_32S	.rodata.str1.1+0xb4
   35aa1:	48 8b 18             	mov    (%rax),%rbx
   35aa4:	e8 00 00 00 00       	callq  35aa9 <e1000_resume+0x213>
			35aa5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35aa9:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   35aac:	48 81 c3 10 58 00 00 	add    $0x5810,%rbx
   35ab3:	89 03                	mov    %eax,(%rbx)
   35ab5:	4c 89 f7             	mov    %r14,%rdi
   35ab8:	e8 b3 b5 fc ff       	callq  1070 <e1000_init_manageability>
   35abd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35ac0: R_X86_64_32S	.rodata.str1.1+0x15c6
   35ac4:	e8 00 00 00 00       	callq  35ac9 <e1000_resume+0x233>
			35ac5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35ac9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35acc: R_X86_64_32S	.rodata.str1.1+0x15d4
   35ad0:	e8 00 00 00 00       	callq  35ad5 <e1000_resume+0x23f>
			35ad1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35ad5:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
   35ad9:	f6 40 48 01          	testb  $0x1,0x48(%rax)
   35add:	74 08                	je     35ae7 <e1000_resume+0x251>
   35adf:	4c 89 f7             	mov    %r14,%rdi
   35ae2:	e8 0c e9 fe ff       	callq  243f3 <e1000_up>
   35ae7:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   35aeb:	e8 c6 57 fd ff       	callq  b2b6 <netif_device_attach>
   35af0:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   35af4:	83 78 10 10          	cmpl   $0x10,0x10(%rax)
   35af8:	75 0f                	jne    35b09 <e1000_resume+0x273>
   35afa:	48 8b 7d 98          	mov    0xffffffffffffff98(%rbp),%rdi
   35afe:	e8 ec a6 fc ff       	callq  1ef <e1000_check_mng_mode>
   35b03:	31 d2                	xor    %edx,%edx
   35b05:	84 c0                	test   %al,%al
   35b07:	75 0a                	jne    35b13 <e1000_resume+0x27d>
   35b09:	4c 89 f7             	mov    %r14,%rdi
   35b0c:	e8 22 b6 fc ff       	callq  1133 <e1000_get_hw_control>
   35b11:	31 d2                	xor    %edx,%edx
   35b13:	48 83 c4 48          	add    $0x48,%rsp
   35b17:	89 d0                	mov    %edx,%eax
   35b19:	5b                   	pop    %rbx
   35b1a:	41 5c                	pop    %r12
   35b1c:	41 5d                	pop    %r13
   35b1e:	41 5e                	pop    %r14
   35b20:	41 5f                	pop    %r15
   35b22:	c9                   	leaveq 
   35b23:	c3                   	retq   

0000000000035b24 <e1000_get_settings>:
   35b24:	55                   	push   %rbp
   35b25:	48 89 e5             	mov    %rsp,%rbp
   35b28:	41 56                	push   %r14
   35b2a:	41 55                	push   %r13
   35b2c:	41 54                	push   %r12
   35b2e:	49 89 f4             	mov    %rsi,%r12
   35b31:	53                   	push   %rbx
   35b32:	48 89 fb             	mov    %rdi,%rbx
   35b35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35b38: R_X86_64_32S	.rodata.str1.1+0x3951
   35b3c:	4c 8d ab b8 0b 00 00 	lea    0xbb8(%rbx),%r13
   35b43:	4c 8d b3 00 08 00 00 	lea    0x800(%rbx),%r14
   35b4a:	e8 00 00 00 00       	callq  35b4f <e1000_get_settings+0x2b>
			35b4b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35b4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35b52: R_X86_64_32S	.rodata.str1.1+0x1be
   35b56:	e8 00 00 00 00       	callq  35b5b <e1000_get_settings+0x37>
			35b57: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35b5b:	41 83 7d 1c 00       	cmpl   $0x0,0x1c(%r13)
   35b60:	75 63                	jne    35bc5 <e1000_get_settings+0xa1>
   35b62:	41 c7 44 24 04 ef 00 	movl   $0xef,0x4(%r12)
   35b69:	00 00 
   35b6b:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
   35b70:	75 09                	jne    35b7b <e1000_get_settings+0x57>
   35b72:	41 c7 44 24 04 cf 00 	movl   $0xcf,0x4(%r12)
   35b79:	00 00 
   35b7b:	41 c7 44 24 08 80 00 	movl   $0x80,0x8(%r12)
   35b82:	00 00 
   35b84:	41 80 bd ef 00 00 00 	cmpb   $0x1,0xef(%r13)
   35b8b:	01 
   35b8c:	75 18                	jne    35ba6 <e1000_get_settings+0x82>
   35b8e:	41 c7 44 24 08 c0 00 	movl   $0xc0,0x8(%r12)
   35b95:	00 00 
   35b97:	41 0f b7 85 d2 00 00 	movzwl 0xd2(%r13),%eax
   35b9e:	00 
   35b9f:	0c c0                	or     $0xc0,%al
   35ba1:	41 89 44 24 08       	mov    %eax,0x8(%r12)
   35ba6:	41 c6 44 24 0f 00    	movb   $0x0,0xf(%r12)
   35bac:	41 8b 85 88 00 00 00 	mov    0x88(%r13),%eax
   35bb3:	41 88 44 24 10       	mov    %al,0x10(%r12)
   35bb8:	41 83 7d 10 03       	cmpl   $0x3,0x10(%r13)
   35bbd:	41 0f 94 44 24 11    	sete   0x11(%r12)
   35bc3:	eb 23                	jmp    35be8 <e1000_get_settings+0xc4>
   35bc5:	41 c7 44 24 04 60 04 	movl   $0x460,0x4(%r12)
   35bcc:	00 00 
   35bce:	41 c7 44 24 08 60 04 	movl   $0x460,0x8(%r12)
   35bd5:	00 00 
   35bd7:	41 c6 44 24 0f 03    	movb   $0x3,0xf(%r12)
   35bdd:	41 83 7d 10 05       	cmpl   $0x5,0x10(%r13)
   35be2:	41 0f 96 44 24 11    	setbe  0x11(%r12)
   35be8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35beb: R_X86_64_32S	.rodata.str1.1+0xae
   35bef:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   35bf3:	e8 00 00 00 00       	callq  35bf8 <e1000_get_settings+0xd4>
			35bf4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35bf8:	8b 43 08             	mov    0x8(%rbx),%eax
   35bfb:	a8 02                	test   $0x2,%al
   35bfd:	74 34                	je     35c33 <e1000_get_settings+0x10f>
   35bff:	49 8d 96 b2 00 00 00 	lea    0xb2(%r14),%rdx
   35c06:	49 8d b6 b0 00 00 00 	lea    0xb0(%r14),%rsi
   35c0d:	4c 89 ef             	mov    %r13,%rdi
   35c10:	e8 cd 72 fe ff       	callq  1cee2 <e1000_get_speed_and_duplex>
   35c15:	41 8b 86 b0 00 00 00 	mov    0xb0(%r14),%eax
   35c1c:	66 41 89 44 24 0c    	mov    %ax,0xc(%r12)
   35c22:	66 41 83 be b2 00 00 	cmpw   $0x2,0xb2(%r14)
   35c29:	00 02 
   35c2b:	41 0f 94 44 24 0e    	sete   0xe(%r12)
   35c31:	eb 0e                	jmp    35c41 <e1000_get_settings+0x11d>
   35c33:	66 41 c7 44 24 0c ff 	movw   $0xffff,0xc(%r12)
   35c3a:	ff 
   35c3b:	41 c6 44 24 0e ff    	movb   $0xff,0xe(%r12)
   35c41:	41 83 7d 1c 01       	cmpl   $0x1,0x1c(%r13)
   35c46:	75 08                	jne    35c50 <e1000_get_settings+0x12c>
   35c48:	41 c6 44 24 12 01    	movb   $0x1,0x12(%r12)
   35c4e:	eb 0e                	jmp    35c5e <e1000_get_settings+0x13a>
   35c50:	41 80 bd ef 00 00 00 	cmpb   $0x0,0xef(%r13)
   35c57:	00 
   35c58:	41 0f 95 44 24 12    	setne  0x12(%r12)
   35c5e:	5b                   	pop    %rbx
   35c5f:	41 5c                	pop    %r12
   35c61:	41 5d                	pop    %r13
   35c63:	41 5e                	pop    %r14
   35c65:	c9                   	leaveq 
   35c66:	31 c0                	xor    %eax,%eax
   35c68:	c3                   	retq   

0000000000035c69 <e1000_get_regs>:
   35c69:	55                   	push   %rbp
   35c6a:	48 89 e5             	mov    %rsp,%rbp
   35c6d:	41 57                	push   %r15
   35c6f:	41 56                	push   %r14
   35c71:	49 89 d6             	mov    %rdx,%r14
   35c74:	41 55                	push   %r13
   35c76:	49 89 fd             	mov    %rdi,%r13
   35c79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35c7c: R_X86_64_32S	.rodata.str1.1+0x3964
   35c80:	4d 8d bd b8 0b 00 00 	lea    0xbb8(%r13),%r15
   35c87:	41 54                	push   %r12
   35c89:	53                   	push   %rbx
   35c8a:	48 89 f3             	mov    %rsi,%rbx
   35c8d:	48 83 ec 18          	sub    $0x18,%rsp
   35c91:	e8 00 00 00 00       	callq  35c96 <e1000_get_regs+0x2d>
			35c92: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35c96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35c99: R_X86_64_32S	.rodata.str1.1+0x1be
   35c9d:	e8 00 00 00 00       	callq  35ca2 <e1000_get_regs+0x39>
			35c9e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35ca2:	49 8d 85 00 08 00 00 	lea    0x800(%r13),%rax
   35ca9:	31 f6                	xor    %esi,%esi
   35cab:	4c 89 f7             	mov    %r14,%rdi
   35cae:	ba 80 00 00 00       	mov    $0x80,%edx
   35cb3:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   35cb7:	e8 ef 1b fd ff       	callq  78ab <memset>
   35cbc:	41 0f b7 97 e6 00 00 	movzwl 0xe6(%r15),%edx
   35cc3:	00 
   35cc4:	41 0f b6 87 ee 00 00 	movzbl 0xee(%r15),%eax
   35ccb:	00 
   35ccc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35ccf: R_X86_64_32S	.rodata.str1.1+0xae
   35cd3:	c1 e0 10             	shl    $0x10,%eax
   35cd6:	81 ca 00 00 00 01    	or     $0x1000000,%edx
   35cdc:	09 c2                	or     %eax,%edx
   35cde:	89 53 04             	mov    %edx,0x4(%rbx)
   35ce1:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
   35ce8:	e8 00 00 00 00       	callq  35ced <e1000_get_regs+0x84>
			35ce9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35ced:	8b 03                	mov    (%rbx),%eax
   35cef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35cf2: R_X86_64_32S	.rodata.str1.1+0xae
   35cf6:	41 89 06             	mov    %eax,(%r14)
   35cf9:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
   35d00:	e8 00 00 00 00       	callq  35d05 <e1000_get_regs+0x9c>
			35d01: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35d05:	8b 43 08             	mov    0x8(%rbx),%eax
   35d08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35d0b: R_X86_64_32S	.rodata.str1.1+0xae
   35d0f:	41 89 46 04          	mov    %eax,0x4(%r14)
   35d13:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
   35d1a:	e8 00 00 00 00       	callq  35d1f <e1000_get_regs+0xb6>
			35d1b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35d1f:	8b 83 00 01 00 00    	mov    0x100(%rbx),%eax
   35d25:	41 89 46 08          	mov    %eax,0x8(%r14)
   35d29:	41 8b 47 10          	mov    0x10(%r15),%eax
   35d2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35d30: R_X86_64_32S	.rodata.str1.1+0xae
   35d34:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35d3b:	83 f8 03             	cmp    $0x3,%eax
   35d3e:	19 db                	sbb    %ebx,%ebx
   35d40:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   35d46:	81 c3 08 28 00 00    	add    $0x2808,%ebx
   35d4c:	48 63 db             	movslq %ebx,%rbx
   35d4f:	e8 00 00 00 00       	callq  35d54 <e1000_get_regs+0xeb>
			35d50: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35d54:	49 01 dc             	add    %rbx,%r12
   35d57:	41 8b 04 24          	mov    (%r12),%eax
   35d5b:	41 89 46 0c          	mov    %eax,0xc(%r14)
   35d5f:	41 8b 47 10          	mov    0x10(%r15),%eax
   35d63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35d66: R_X86_64_32S	.rodata.str1.1+0xae
   35d6a:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35d71:	83 f8 03             	cmp    $0x3,%eax
   35d74:	19 db                	sbb    %ebx,%ebx
   35d76:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   35d7c:	81 c3 10 28 00 00    	add    $0x2810,%ebx
   35d82:	48 63 db             	movslq %ebx,%rbx
   35d85:	e8 00 00 00 00       	callq  35d8a <e1000_get_regs+0x121>
			35d86: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35d8a:	49 01 dc             	add    %rbx,%r12
   35d8d:	41 8b 04 24          	mov    (%r12),%eax
   35d91:	41 89 46 10          	mov    %eax,0x10(%r14)
   35d95:	41 8b 47 10          	mov    0x10(%r15),%eax
   35d99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35d9c: R_X86_64_32S	.rodata.str1.1+0xae
   35da0:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35da7:	83 f8 03             	cmp    $0x3,%eax
   35daa:	19 db                	sbb    %ebx,%ebx
   35dac:	81 e3 10 d9 ff ff    	and    $0xffffd910,%ebx
   35db2:	81 c3 18 28 00 00    	add    $0x2818,%ebx
   35db8:	48 63 db             	movslq %ebx,%rbx
   35dbb:	e8 00 00 00 00       	callq  35dc0 <e1000_get_regs+0x157>
			35dbc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35dc0:	49 01 dc             	add    %rbx,%r12
   35dc3:	41 8b 04 24          	mov    (%r12),%eax
   35dc7:	41 89 46 14          	mov    %eax,0x14(%r14)
   35dcb:	41 8b 47 10          	mov    0x10(%r15),%eax
   35dcf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35dd2: R_X86_64_32S	.rodata.str1.1+0xae
   35dd6:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35ddd:	83 f8 03             	cmp    $0x3,%eax
   35de0:	19 db                	sbb    %ebx,%ebx
   35de2:	81 e3 e8 d8 ff ff    	and    $0xffffd8e8,%ebx
   35de8:	81 c3 20 28 00 00    	add    $0x2820,%ebx
   35dee:	48 63 db             	movslq %ebx,%rbx
   35df1:	e8 00 00 00 00       	callq  35df6 <e1000_get_regs+0x18d>
			35df2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35df6:	49 01 dc             	add    %rbx,%r12
   35df9:	41 8b 04 24          	mov    (%r12),%eax
   35dfd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35e00: R_X86_64_32S	.rodata.str1.1+0xae
   35e04:	41 89 46 18          	mov    %eax,0x18(%r14)
   35e08:	49 8b 9d b8 0b 00 00 	mov    0xbb8(%r13),%rbx
   35e0f:	e8 00 00 00 00       	callq  35e14 <e1000_get_regs+0x1ab>
			35e10: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35e14:	8b 83 00 04 00 00    	mov    0x400(%rbx),%eax
   35e1a:	41 89 46 1c          	mov    %eax,0x1c(%r14)
   35e1e:	41 8b 47 10          	mov    0x10(%r15),%eax
   35e22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35e25: R_X86_64_32S	.rodata.str1.1+0xae
   35e29:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35e30:	83 f8 03             	cmp    $0x3,%eax
   35e33:	19 db                	sbb    %ebx,%ebx
   35e35:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   35e3b:	81 c3 08 38 00 00    	add    $0x3808,%ebx
   35e41:	48 63 db             	movslq %ebx,%rbx
   35e44:	e8 00 00 00 00       	callq  35e49 <e1000_get_regs+0x1e0>
			35e45: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35e49:	49 01 dc             	add    %rbx,%r12
   35e4c:	41 8b 04 24          	mov    (%r12),%eax
   35e50:	41 89 46 20          	mov    %eax,0x20(%r14)
   35e54:	41 8b 47 10          	mov    0x10(%r15),%eax
   35e58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35e5b: R_X86_64_32S	.rodata.str1.1+0xae
   35e5f:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35e66:	83 f8 03             	cmp    $0x3,%eax
   35e69:	19 db                	sbb    %ebx,%ebx
   35e6b:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   35e71:	81 c3 10 38 00 00    	add    $0x3810,%ebx
   35e77:	48 63 db             	movslq %ebx,%rbx
   35e7a:	e8 00 00 00 00       	callq  35e7f <e1000_get_regs+0x216>
			35e7b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35e7f:	49 01 dc             	add    %rbx,%r12
   35e82:	41 8b 04 24          	mov    (%r12),%eax
   35e86:	41 89 46 24          	mov    %eax,0x24(%r14)
   35e8a:	41 8b 47 10          	mov    0x10(%r15),%eax
   35e8e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35e91: R_X86_64_32S	.rodata.str1.1+0xae
   35e95:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35e9c:	83 f8 03             	cmp    $0x3,%eax
   35e9f:	19 db                	sbb    %ebx,%ebx
   35ea1:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   35ea7:	81 c3 18 38 00 00    	add    $0x3818,%ebx
   35ead:	48 63 db             	movslq %ebx,%rbx
   35eb0:	e8 00 00 00 00       	callq  35eb5 <e1000_get_regs+0x24c>
			35eb1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35eb5:	49 01 dc             	add    %rbx,%r12
   35eb8:	41 8b 04 24          	mov    (%r12),%eax
   35ebc:	41 89 46 28          	mov    %eax,0x28(%r14)
   35ec0:	41 8b 47 10          	mov    0x10(%r15),%eax
   35ec4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35ec7: R_X86_64_32S	.rodata.str1.1+0xae
   35ecb:	4d 8b a5 b8 0b 00 00 	mov    0xbb8(%r13),%r12
   35ed2:	83 f8 03             	cmp    $0x3,%eax
   35ed5:	19 db                	sbb    %ebx,%ebx
   35ed7:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   35edd:	81 c3 20 38 00 00    	add    $0x3820,%ebx
   35ee3:	48 63 db             	movslq %ebx,%rbx
   35ee6:	e8 00 00 00 00       	callq  35eeb <e1000_get_regs+0x282>
			35ee7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   35eeb:	49 01 dc             	add    %rbx,%r12
   35eee:	41 8b 04 24          	mov    (%r12),%eax
   35ef2:	41 89 46 2c          	mov    %eax,0x2c(%r14)
   35ef6:	41 8b 47 14          	mov    0x14(%r15),%eax
   35efa:	48 8d 5d d6          	lea    0xffffffffffffffd6(%rbp),%rbx
   35efe:	41 89 46 30          	mov    %eax,0x30(%r14)
   35f02:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   35f07:	0f 85 2a 01 00 00    	jne    36037 <e1000_get_regs+0x3ce>
   35f0d:	4c 89 ff             	mov    %r15,%rdi
   35f10:	ba 72 11 00 00       	mov    $0x1172,%edx
   35f15:	be 1f 00 00 00       	mov    $0x1f,%esi
   35f1a:	e8 68 ff fc ff       	callq  5e87 <e1000_write_phy_reg>
   35f1f:	48 89 da             	mov    %rbx,%rdx
   35f22:	4c 89 ff             	mov    %r15,%rdi
   35f25:	be 12 00 00 00       	mov    $0x12,%esi
   35f2a:	e8 aa 01 fd ff       	callq  60d9 <e1000_read_phy_reg>
   35f2f:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   35f33:	4c 89 ff             	mov    %r15,%rdi
   35f36:	ba 72 12 00 00       	mov    $0x1272,%edx
   35f3b:	be 1f 00 00 00       	mov    $0x1f,%esi
   35f40:	41 89 46 34          	mov    %eax,0x34(%r14)
   35f44:	e8 3e ff fc ff       	callq  5e87 <e1000_write_phy_reg>
   35f49:	48 89 da             	mov    %rbx,%rdx
   35f4c:	4c 89 ff             	mov    %r15,%rdi
   35f4f:	be 12 00 00 00       	mov    $0x12,%esi
   35f54:	e8 80 01 fd ff       	callq  60d9 <e1000_read_phy_reg>
   35f59:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   35f5d:	4c 89 ff             	mov    %r15,%rdi
   35f60:	ba 72 14 00 00       	mov    $0x1472,%edx
   35f65:	be 1f 00 00 00       	mov    $0x1f,%esi
   35f6a:	41 89 46 38          	mov    %eax,0x38(%r14)
   35f6e:	e8 14 ff fc ff       	callq  5e87 <e1000_write_phy_reg>
   35f73:	48 89 da             	mov    %rbx,%rdx
   35f76:	4c 89 ff             	mov    %r15,%rdi
   35f79:	be 12 00 00 00       	mov    $0x12,%esi
   35f7e:	e8 56 01 fd ff       	callq  60d9 <e1000_read_phy_reg>
   35f83:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   35f87:	4c 89 ff             	mov    %r15,%rdi
   35f8a:	ba 72 18 00 00       	mov    $0x1872,%edx
   35f8f:	be 1f 00 00 00       	mov    $0x1f,%esi
   35f94:	41 89 46 3c          	mov    %eax,0x3c(%r14)
   35f98:	e8 ea fe fc ff       	callq  5e87 <e1000_write_phy_reg>
   35f9d:	48 89 da             	mov    %rbx,%rdx
   35fa0:	4c 89 ff             	mov    %r15,%rdi
   35fa3:	be 12 00 00 00       	mov    $0x12,%esi
   35fa8:	e8 2c 01 fd ff       	callq  60d9 <e1000_read_phy_reg>
   35fad:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   35fb1:	31 d2                	xor    %edx,%edx
   35fb3:	4c 89 ff             	mov    %r15,%rdi
   35fb6:	41 c7 46 44 00 00 00 	movl   $0x0,0x44(%r14)
   35fbd:	00 
   35fbe:	be 1f 00 00 00       	mov    $0x1f,%esi
   35fc3:	41 89 46 40          	mov    %eax,0x40(%r14)
   35fc7:	e8 bb fe fc ff       	callq  5e87 <e1000_write_phy_reg>
   35fcc:	48 89 da             	mov    %rbx,%rdx
   35fcf:	4c 89 ff             	mov    %r15,%rdi
   35fd2:	be 11 00 00 00       	mov    $0x11,%esi
   35fd7:	e8 fd 00 fd ff       	callq  60d9 <e1000_read_phy_reg>
   35fdc:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   35fe0:	4c 89 ff             	mov    %r15,%rdi
   35fe3:	ba b4 00 00 00       	mov    $0xb4,%edx
   35fe8:	be 1f 00 00 00       	mov    $0x1f,%esi
   35fed:	41 89 46 48          	mov    %eax,0x48(%r14)
   35ff1:	e8 91 fe fc ff       	callq  5e87 <e1000_write_phy_reg>
   35ff6:	48 89 da             	mov    %rbx,%rdx
   35ff9:	4c 89 ff             	mov    %r15,%rdi
   35ffc:	be 14 00 00 00       	mov    $0x14,%esi
   36001:	e8 d3 00 fd ff       	callq  60d9 <e1000_read_phy_reg>
   36006:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   3600a:	41 c7 46 50 00 00 00 	movl   $0x0,0x50(%r14)
   36011:	00 
   36012:	31 d2                	xor    %edx,%edx
   36014:	41 c7 46 58 00 00 00 	movl   $0x0,0x58(%r14)
   3601b:	00 
   3601c:	be 1f 00 00 00       	mov    $0x1f,%esi
   36021:	4c 89 ff             	mov    %r15,%rdi
   36024:	41 89 46 4c          	mov    %eax,0x4c(%r14)
   36028:	41 8b 46 48          	mov    0x48(%r14),%eax
   3602c:	41 89 46 5c          	mov    %eax,0x5c(%r14)
   36030:	e8 52 fe fc ff       	callq  5e87 <e1000_write_phy_reg>
   36035:	eb 6e                	jmp    360a5 <e1000_get_regs+0x43c>
   36037:	48 89 da             	mov    %rbx,%rdx
   3603a:	be 11 00 00 00       	mov    $0x11,%esi
   3603f:	4c 89 ff             	mov    %r15,%rdi
   36042:	e8 92 00 fd ff       	callq  60d9 <e1000_read_phy_reg>
   36047:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   3604b:	48 89 da             	mov    %rbx,%rdx
   3604e:	41 c7 46 38 00 00 00 	movl   $0x0,0x38(%r14)
   36055:	00 
   36056:	41 c7 46 3c 00 00 00 	movl   $0x0,0x3c(%r14)
   3605d:	00 
   3605e:	41 c7 46 40 00 00 00 	movl   $0x0,0x40(%r14)
   36065:	00 
   36066:	be 10 00 00 00       	mov    $0x10,%esi
   3606b:	4c 89 ff             	mov    %r15,%rdi
   3606e:	41 89 46 34          	mov    %eax,0x34(%r14)
   36072:	e8 62 00 fd ff       	callq  60d9 <e1000_read_phy_reg>
   36077:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   3607b:	41 8b 56 34          	mov    0x34(%r14),%edx
   3607f:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   36083:	41 c7 46 4c 00 00 00 	movl   $0x0,0x4c(%r14)
   3608a:	00 
   3608b:	41 89 56 48          	mov    %edx,0x48(%r14)
   3608f:	41 89 46 44          	mov    %eax,0x44(%r14)
   36093:	41 89 46 50          	mov    %eax,0x50(%r14)
   36097:	8b 81 24 07 00 00    	mov    0x724(%rcx),%eax
   3609d:	41 89 56 5c          	mov    %edx,0x5c(%r14)
   360a1:	41 89 46 58          	mov    %eax,0x58(%r14)
   360a5:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   360a9:	be 0a 00 00 00       	mov    $0xa,%esi
   360ae:	4c 89 ff             	mov    %r15,%rdi
   360b1:	8b 82 20 07 00 00    	mov    0x720(%rdx),%eax
   360b7:	48 8d 55 d6          	lea    0xffffffffffffffd6(%rbp),%rdx
   360bb:	41 89 46 54          	mov    %eax,0x54(%r14)
   360bf:	e8 15 00 fd ff       	callq  60d9 <e1000_read_phy_reg>
   360c4:	0f b7 45 d6          	movzwl 0xffffffffffffffd6(%rbp),%eax
   360c8:	41 89 46 60          	mov    %eax,0x60(%r14)
   360cc:	41 89 46 64          	mov    %eax,0x64(%r14)
   360d0:	41 8b 47 10          	mov    0x10(%r15),%eax
   360d4:	83 f8 04             	cmp    $0x4,%eax
   360d7:	76 25                	jbe    360fe <e1000_get_regs+0x495>
   360d9:	83 f8 0d             	cmp    $0xd,%eax
   360dc:	77 20                	ja     360fe <e1000_get_regs+0x495>
   360de:	41 83 7f 1c 00       	cmpl   $0x0,0x1c(%r15)
   360e3:	75 19                	jne    360fe <e1000_get_regs+0x495>
   360e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			360e8: R_X86_64_32S	.rodata.str1.1+0xae
   360ec:	49 8b 1f             	mov    (%r15),%rbx
   360ef:	e8 00 00 00 00       	callq  360f4 <e1000_get_regs+0x48b>
			360f0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   360f4:	8b 83 20 58 00 00    	mov    0x5820(%rbx),%eax
   360fa:	41 89 46 68          	mov    %eax,0x68(%r14)
   360fe:	48 83 c4 18          	add    $0x18,%rsp
   36102:	5b                   	pop    %rbx
   36103:	41 5c                	pop    %r12
   36105:	41 5d                	pop    %r13
   36107:	41 5e                	pop    %r14
   36109:	41 5f                	pop    %r15
   3610b:	c9                   	leaveq 
   3610c:	c3                   	retq   

000000000003610d <e1000_test_intr>:
   3610d:	55                   	push   %rbp
   3610e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36111: R_X86_64_32S	.rodata.str1.1+0x3973
   36115:	48 89 e5             	mov    %rsp,%rbp
   36118:	41 54                	push   %r12
   3611a:	53                   	push   %rbx
   3611b:	48 89 f3             	mov    %rsi,%rbx
   3611e:	4c 8d a3 00 08 00 00 	lea    0x800(%rbx),%r12
   36125:	e8 00 00 00 00       	callq  3612a <e1000_test_intr+0x1d>
			36126: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3612a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3612d: R_X86_64_32S	.rodata.str1.1+0x1be
   36131:	e8 00 00 00 00       	callq  36136 <e1000_test_intr+0x29>
			36132: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36136:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36139: R_X86_64_32S	.rodata.str1.1+0xae
   3613d:	48 8b 9b b8 0b 00 00 	mov    0xbb8(%rbx),%rbx
   36144:	e8 00 00 00 00       	callq  36149 <e1000_test_intr+0x3c>
			36145: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36149:	8b 83 c0 00 00 00    	mov    0xc0(%rbx),%eax
   3614f:	41 09 84 24 28 07 00 	or     %eax,0x728(%r12)
   36156:	00 
   36157:	b8 01 00 00 00       	mov    $0x1,%eax
   3615c:	5b                   	pop    %rbx
   3615d:	41 5c                	pop    %r12
   3615f:	c9                   	leaveq 
   36160:	c3                   	retq   

0000000000036161 <e1000_watchdog>:
   36161:	55                   	push   %rbp
   36162:	48 89 e5             	mov    %rsp,%rbp
   36165:	41 57                	push   %r15
   36167:	41 56                	push   %r14
   36169:	41 55                	push   %r13
   3616b:	49 89 fd             	mov    %rdi,%r13
   3616e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36171: R_X86_64_32S	.rodata.str1.1+0x3a9b
   36175:	4d 8d b5 b8 03 00 00 	lea    0x3b8(%r13),%r14
   3617c:	41 54                	push   %r12
   3617e:	53                   	push   %rbx
   3617f:	48 83 ec 18          	sub    $0x18,%rsp
   36183:	e8 00 00 00 00       	callq  36188 <e1000_watchdog+0x27>
			36184: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36188:	49 8b 85 b0 01 00 00 	mov    0x1b0(%r13),%rax
   3618f:	4c 89 f7             	mov    %r14,%rdi
   36192:	4d 8b bd f0 02 00 00 	mov    0x2f0(%r13),%r15
   36199:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   3619d:	e8 d3 75 fe ff       	callq  1d775 <e1000_check_for_link>
   361a2:	83 f8 02             	cmp    $0x2,%eax
   361a5:	75 2e                	jne    361d5 <e1000_watchdog+0x74>
   361a7:	41 83 7e 14 04       	cmpl   $0x4,0x14(%r14)
   361ac:	75 27                	jne    361d5 <e1000_watchdog+0x74>
   361ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			361b1: R_X86_64_32S	.rodata.str1.1+0xae
   361b5:	49 8b 9d b8 03 00 00 	mov    0x3b8(%r13),%rbx
   361bc:	e8 00 00 00 00       	callq  361c1 <e1000_watchdog+0x60>
			361bd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   361c1:	8b 03                	mov    (%rbx),%eax
   361c3:	a8 40                	test   $0x40,%al
   361c5:	74 0e                	je     361d5 <e1000_watchdog+0x74>
   361c7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			361ca: R_X86_64_32S	str_950501272
   361ce:	31 c0                	xor    %eax,%eax
   361d0:	e8 00 00 00 00       	callq  361d5 <e1000_watchdog+0x74>
			361d1: R_X86_64_PC32	printk+0xfffffffffffffffc
   361d5:	41 83 7e 10 10       	cmpl   $0x10,0x10(%r14)
   361da:	75 22                	jne    361fe <e1000_watchdog+0x9d>
   361dc:	4c 89 f7             	mov    %r14,%rdi
   361df:	e8 7b f2 fc ff       	callq  545f <e1000_enable_tx_pkt_filtering>
   361e4:	66 41 8b 86 c6 00 00 	mov    0xc6(%r14),%ax
   361eb:	00 
   361ec:	66 41 39 85 98 00 00 	cmp    %ax,0x98(%r13)
   361f3:	00 
   361f4:	74 08                	je     361fe <e1000_watchdog+0x9d>
   361f6:	4c 89 ef             	mov    %r13,%rdi
   361f9:	e8 44 2a fd ff       	callq  8c42 <e1000_update_mng_vlan>
   361fe:	41 83 7e 1c 02       	cmpl   $0x2,0x1c(%r14)
   36203:	75 28                	jne    3622d <e1000_watchdog+0xcc>
   36205:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36208: R_X86_64_32S	.rodata.str1.1+0xae
   3620c:	49 8b 1e             	mov    (%r14),%rbx
   3620f:	e8 00 00 00 00       	callq  36214 <e1000_watchdog+0xb3>
			36210: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36214:	8b 83 78 01 00 00    	mov    0x178(%rbx),%eax
   3621a:	85 c0                	test   %eax,%eax
   3621c:	78 0f                	js     3622d <e1000_watchdog+0xcc>
   3621e:	41 8a 86 0d 01 00 00 	mov    0x10d(%r14),%al
   36225:	83 f0 01             	xor    $0x1,%eax
   36228:	0f b6 c0             	movzbl %al,%eax
   3622b:	eb 15                	jmp    36242 <e1000_watchdog+0xe1>
   3622d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36230: R_X86_64_32S	.rodata.str1.1+0xae
   36234:	49 8b 1e             	mov    (%r14),%rbx
   36237:	e8 00 00 00 00       	callq  3623c <e1000_watchdog+0xdb>
			36238: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3623c:	8b 43 08             	mov    0x8(%rbx),%eax
   3623f:	83 e0 02             	and    $0x2,%eax
   36242:	85 c0                	test   %eax,%eax
   36244:	0f 84 a1 02 00 00    	je     364eb <e1000_watchdog+0x38a>
   3624a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3624d: R_X86_64_32S	.rodata.str1.1+0x2b02
   36251:	e8 00 00 00 00       	callq  36256 <e1000_watchdog+0xf5>
			36252: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36256:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36259: R_X86_64_32S	.rodata.str1.1+0x15d4
   3625d:	e8 00 00 00 00       	callq  36262 <e1000_watchdog+0x101>
			3625e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36262:	41 f6 47 48 04       	testb  $0x4,0x48(%r15)
   36267:	0f 84 64 06 00 00    	je     368d1 <e1000_watchdog+0x770>
   3626d:	49 8d 95 b2 00 00 00 	lea    0xb2(%r13),%rdx
   36274:	49 8d b5 b0 00 00 00 	lea    0xb0(%r13),%rsi
   3627b:	4c 89 f7             	mov    %r14,%rdi
   3627e:	e8 5f 6c fe ff       	callq  1cee2 <e1000_get_speed_and_duplex>
   36283:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36286: R_X86_64_32S	.rodata.str1.1+0xae
   3628a:	49 8b 1e             	mov    (%r14),%rbx
   3628d:	e8 00 00 00 00       	callq  36292 <e1000_watchdog+0x131>
			3628e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36292:	8b 03                	mov    (%rbx),%eax
   36294:	a9 00 00 00 10       	test   $0x10000000,%eax
   36299:	75 3a                	jne    362d5 <e1000_watchdog+0x174>
   3629b:	eb 4d                	jmp    362ea <e1000_watchdog+0x189>
   3629d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			362a0: R_X86_64_32S	.rodata.str1.1+0xae
   362a4:	49 8b 1e             	mov    (%r14),%rbx
   362a7:	e8 00 00 00 00       	callq  362ac <e1000_watchdog+0x14b>
			362a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   362ac:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   362b3:	49 8b 1e             	mov    (%r14),%rbx
   362b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			362b9: R_X86_64_32S	.rodata.str1.1+0xb4
   362bd:	41 83 cc 02          	or     $0x2,%r12d
   362c1:	e8 00 00 00 00       	callq  362c6 <e1000_watchdog+0x165>
			362c2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   362c6:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   362cd:	44 89 23             	mov    %r12d,(%rbx)
   362d0:	e9 c7 03 00 00       	jmpq   3669c <e1000_watchdog+0x53b>
   362d5:	a9 00 00 00 08       	test   $0x8000000,%eax
   362da:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
			362dd: R_X86_64_32S	str_1684
   362e1:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			362e4: R_X86_64_32S	str_11308565
   362e8:	eb 13                	jmp    362fd <e1000_watchdog+0x19c>
   362ea:	a9 00 00 00 08       	test   $0x8000000,%eax
   362ef:	49 c7 c0 00 00 00 00 	mov    $0x0,%r8
			362f2: R_X86_64_32S	str_577264
   362f6:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			362f9: R_X86_64_32S	str_1646
   362fd:	4c 0f 45 c0          	cmovne %rax,%r8
   36301:	66 41 83 bd b2 00 00 	cmpw   $0x2,0xb2(%r13)
   36308:	00 02 
   3630a:	41 0f b7 95 b0 00 00 	movzwl 0xb0(%r13),%edx
   36311:	00 
   36312:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			36315: R_X86_64_32S	str_887445197
   36319:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			3631c: R_X86_64_32S	str_372932505
   36320:	4c 89 fe             	mov    %r15,%rsi
   36323:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36326: R_X86_64_32S	str_507147481
   3632a:	48 0f 45 c8          	cmovne %rax,%rcx
   3632e:	31 c0                	xor    %eax,%eax
   36330:	e8 00 00 00 00       	callq  36335 <e1000_watchdog+0x1d4>
			36331: R_X86_64_PC32	printk+0xfffffffffffffffc
   36335:	49 8b 85 c0 01 00 00 	mov    0x1c0(%r13),%rax
   3633c:	49 89 87 10 03 00 00 	mov    %rax,0x310(%r15)
   36343:	41 8b 85 b0 00 00 00 	mov    0xb0(%r13),%eax
   3634a:	41 c6 85 00 02 00 00 	movb   $0x1,0x200(%r13)
   36351:	01 
   36352:	66 83 f8 0a          	cmp    $0xa,%ax
   36356:	74 0a                	je     36362 <e1000_watchdog+0x201>
   36358:	66 83 f8 64          	cmp    $0x64,%ax
   3635c:	b2 01                	mov    $0x1,%dl
   3635e:	75 24                	jne    36384 <e1000_watchdog+0x223>
   36360:	eb 15                	jmp    36377 <e1000_watchdog+0x216>
   36362:	49 c7 87 10 03 00 00 	movq   $0xa,0x310(%r15)
   36369:	0a 00 00 00 
   3636d:	41 c6 85 00 02 00 00 	movb   $0x8,0x200(%r13)
   36374:	08 
   36375:	eb 0b                	jmp    36382 <e1000_watchdog+0x221>
   36377:	49 c7 87 10 03 00 00 	movq   $0x64,0x310(%r15)
   3637e:	64 00 00 00 
   36382:	31 d2                	xor    %edx,%edx
   36384:	41 8b 46 10          	mov    0x10(%r14),%eax
   36388:	83 f8 0e             	cmp    $0xe,%eax
   3638b:	74 05                	je     36392 <e1000_watchdog+0x231>
   3638d:	83 f8 0f             	cmp    $0xf,%eax
   36390:	75 3a                	jne    363cc <e1000_watchdog+0x26b>
   36392:	84 d2                	test   %dl,%dl
   36394:	75 36                	jne    363cc <e1000_watchdog+0x26b>
   36396:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36399: R_X86_64_32S	.rodata.str1.1+0xae
   3639d:	49 8b 1e             	mov    (%r14),%rbx
   363a0:	e8 00 00 00 00       	callq  363a5 <e1000_watchdog+0x244>
			363a1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   363a5:	44 8b a3 40 38 00 00 	mov    0x3840(%rbx),%r12d
   363ac:	49 8b 1e             	mov    (%r14),%rbx
   363af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			363b2: R_X86_64_32S	.rodata.str1.1+0xb4
   363b6:	41 81 e4 ff ff df ff 	and    $0xffdfffff,%r12d
   363bd:	e8 00 00 00 00       	callq  363c2 <e1000_watchdog+0x261>
			363be: R_X86_64_PC32	record_function+0xfffffffffffffffc
   363c2:	48 81 c3 40 38 00 00 	add    $0x3840,%rbx
   363c9:	44 89 23             	mov    %r12d,(%rbx)
   363cc:	41 80 bd c5 07 00 00 	cmpb   $0x0,0x7c5(%r13)
   363d3:	00 
   363d4:	75 42                	jne    36418 <e1000_watchdog+0x2b7>
   363d6:	41 83 7e 44 03       	cmpl   $0x3,0x44(%r14)
   363db:	75 3b                	jne    36418 <e1000_watchdog+0x2b7>
   363dd:	41 8b 85 b0 00 00 00 	mov    0xb0(%r13),%eax
   363e4:	66 83 f8 0a          	cmp    $0xa,%ax
   363e8:	74 0e                	je     363f8 <e1000_watchdog+0x297>
   363ea:	66 83 f8 64          	cmp    $0x64,%ax
   363ee:	74 08                	je     363f8 <e1000_watchdog+0x297>
   363f0:	66 3d e8 03          	cmp    $0x3e8,%ax
   363f4:	75 22                	jne    36418 <e1000_watchdog+0x2b7>
   363f6:	eb 18                	jmp    36410 <e1000_watchdog+0x2af>
   363f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			363fb: R_X86_64_32S	str_966975743
   363ff:	31 c0                	xor    %eax,%eax
   36401:	e8 00 00 00 00       	callq  36406 <e1000_watchdog+0x2a5>
			36402: R_X86_64_PC32	printk+0xfffffffffffffffc
   36406:	49 81 67 70 ff ff ee 	andq   $0xffffffffffeeffff,0x70(%r15)
   3640d:	ff 
   3640e:	eb 08                	jmp    36418 <e1000_watchdog+0x2b7>
   36410:	49 81 4f 70 00 00 11 	orq    $0x110000,0x70(%r15)
   36417:	00 
   36418:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3641b: R_X86_64_32S	.rodata.str1.1+0xae
   3641f:	49 8b 1e             	mov    (%r14),%rbx
   36422:	e8 00 00 00 00       	callq  36427 <e1000_watchdog+0x2c6>
			36423: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36427:	44 8b a3 00 04 00 00 	mov    0x400(%rbx),%r12d
   3642e:	49 8b 1e             	mov    (%r14),%rbx
   36431:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36434: R_X86_64_32S	.rodata.str1.1+0xb4
   36438:	41 83 cc 02          	or     $0x2,%r12d
   3643c:	e8 00 00 00 00       	callq  36441 <e1000_watchdog+0x2e0>
			3643d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36441:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   36448:	44 89 23             	mov    %r12d,(%rbx)
   3644b:	4c 89 ff             	mov    %r15,%rdi
   3644e:	e8 77 7a fd ff       	callq  deca <netif_carrier_on>
   36453:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36456: R_X86_64_32S	.rodata.str1.1+0x379d
   3645a:	e8 00 00 00 00       	callq  3645f <e1000_watchdog+0x2fe>
			3645b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3645f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36462: R_X86_64_32S	.rodata.str1.1+0x2bb2
   36466:	e8 00 00 00 00       	callq  3646b <e1000_watchdog+0x30a>
			36467: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3646b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3646e: R_X86_64_32S	.rodata.str1.1+0x37ae
   36472:	49 8b 9f 00 03 00 00 	mov    0x300(%r15),%rbx
   36479:	e8 00 00 00 00       	callq  3647e <e1000_watchdog+0x31d>
			3647a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3647e:	e8 27 d6 fc ff       	callq  3aaa <netpoll_trap>
   36483:	85 c0                	test   %eax,%eax
   36485:	74 14                	je     3649b <e1000_watchdog+0x33a>
   36487:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3648a: R_X86_64_32S	.rodata.str1.1+0x2c01
   3648e:	e8 00 00 00 00       	callq  36493 <e1000_watchdog+0x332>
			3648f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36493:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   36499:	eb 21                	jmp    364bc <e1000_watchdog+0x35b>
   3649b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3649e: R_X86_64_32S	.rodata.str1.1+0x37c2
   364a2:	e8 00 00 00 00       	callq  364a7 <e1000_watchdog+0x346>
			364a3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   364a7:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   364ad:	19 c0                	sbb    %eax,%eax
   364af:	85 c0                	test   %eax,%eax
   364b1:	74 09                	je     364bc <e1000_watchdog+0x35b>
   364b3:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   364b7:	e8 39 d0 fc ff       	callq  34f5 <__netif_schedule>
   364bc:	48 8b 3d 00 00 00 00 	mov    0(%rip),%rdi        # 364c3 <e1000_watchdog+0x362>
			364bf: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   364c3:	48 81 c7 d0 07 00 00 	add    $0x7d0,%rdi
   364ca:	e8 d9 23 fd ff       	callq  88a8 <round_jiffies>
   364cf:	49 8d 7d 60          	lea    0x60(%r13),%rdi
   364d3:	48 89 c6             	mov    %rax,%rsi
   364d6:	e8 98 10 fd ff       	callq  7573 <mod_timer>
   364db:	41 c7 85 a8 00 00 00 	movl   $0x0,0xa8(%r13)
   364e2:	00 00 00 00 
   364e6:	e9 b1 01 00 00       	jmpq   3669c <e1000_watchdog+0x53b>
   364eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			364ee: R_X86_64_32S	.rodata.str1.1+0x2b02
   364f2:	e8 00 00 00 00       	callq  364f7 <e1000_watchdog+0x396>
			364f3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   364f7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			364fa: R_X86_64_32S	.rodata.str1.1+0x15d4
   364fe:	e8 00 00 00 00       	callq  36503 <e1000_watchdog+0x3a2>
			364ff: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36503:	41 f6 47 48 04       	testb  $0x4,0x48(%r15)
   36508:	75 11                	jne    3651b <e1000_watchdog+0x3ba>
   3650a:	e9 d5 03 00 00       	jmpq   368e4 <e1000_watchdog+0x783>
   3650f:	49 8d bd 38 01 00 00 	lea    0x138(%r13),%rdi
   36516:	e8 84 d4 fc ff       	callq  399f <schedule_work>
   3651b:	49 8d 9d b8 03 00 00 	lea    0x3b8(%r13),%rbx
   36522:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36525: R_X86_64_32S	.rodata.str1.1+0x3aaa
   36529:	e8 00 00 00 00       	callq  3652e <e1000_watchdog+0x3cd>
			3652a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3652e:	83 7b 14 01          	cmpl   $0x1,0x14(%rbx)
   36532:	0f 85 64 01 00 00    	jne    3669c <e1000_watchdog+0x53b>
   36538:	80 bb ef 00 00 00 00 	cmpb   $0x0,0xef(%rbx)
   3653f:	0f 84 57 01 00 00    	je     3669c <e1000_watchdog+0x53b>
   36545:	f6 83 d2 00 00 00 20 	testb  $0x20,0xd2(%rbx)
   3654c:	0f 84 4a 01 00 00    	je     3669c <e1000_watchdog+0x53b>
   36552:	41 8b 85 a8 00 00 00 	mov    0xa8(%r13),%eax
   36559:	85 c0                	test   %eax,%eax
   3655b:	0f 85 bb 00 00 00    	jne    3661c <e1000_watchdog+0x4bb>
   36561:	4c 8d 65 d6          	lea    0xffffffffffffffd6(%rbp),%r12
   36565:	be 0a 00 00 00       	mov    $0xa,%esi
   3656a:	48 89 df             	mov    %rbx,%rdi
   3656d:	4c 89 e2             	mov    %r12,%rdx
   36570:	e8 64 fb fc ff       	callq  60d9 <e1000_read_phy_reg>
   36575:	66 83 7d d6 00       	cmpw   $0x0,0xffffffffffffffd6(%rbp)
   3657a:	0f 89 1c 01 00 00    	jns    3669c <e1000_watchdog+0x53b>
   36580:	4c 89 e2             	mov    %r12,%rdx
   36583:	be 0a 00 00 00       	mov    $0xa,%esi
   36588:	48 89 df             	mov    %rbx,%rdi
   3658b:	e8 49 fb fc ff       	callq  60d9 <e1000_read_phy_reg>
   36590:	66 83 7d d6 00       	cmpw   $0x0,0xffffffffffffffd6(%rbp)
   36595:	0f 89 01 01 00 00    	jns    3669c <e1000_watchdog+0x53b>
   3659b:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   3659f:	be 09 00 00 00       	mov    $0x9,%esi
   365a4:	48 89 df             	mov    %rbx,%rdi
   365a7:	4c 89 e2             	mov    %r12,%rdx
   365aa:	e8 2a fb fc ff       	callq  60d9 <e1000_read_phy_reg>
   365af:	8b 45 d4             	mov    0xffffffffffffffd4(%rbp),%eax
   365b2:	f6 c4 10             	test   $0x10,%ah
   365b5:	0f 84 e1 00 00 00    	je     3669c <e1000_watchdog+0x53b>
   365bb:	89 c2                	mov    %eax,%edx
   365bd:	be 09 00 00 00       	mov    $0x9,%esi
   365c2:	48 89 df             	mov    %rbx,%rdi
   365c5:	80 e6 ef             	and    $0xef,%dh
   365c8:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   365cc:	0f b7 d2             	movzwl %dx,%edx
   365cf:	e8 b3 f8 fc ff       	callq  5e87 <e1000_write_phy_reg>
   365d4:	41 ff 85 a8 00 00 00 	incl   0xa8(%r13)
   365db:	48 89 df             	mov    %rbx,%rdi
   365de:	e8 e3 08 fd ff       	callq  6ec6 <e1000_phy_setup_autoneg>
   365e3:	85 c0                	test   %eax,%eax
   365e5:	0f 85 b1 00 00 00    	jne    3669c <e1000_watchdog+0x53b>
   365eb:	31 f6                	xor    %esi,%esi
   365ed:	4c 89 e2             	mov    %r12,%rdx
   365f0:	48 89 df             	mov    %rbx,%rdi
   365f3:	e8 e1 fa fc ff       	callq  60d9 <e1000_read_phy_reg>
   365f8:	85 c0                	test   %eax,%eax
   365fa:	0f 85 9c 00 00 00    	jne    3669c <e1000_watchdog+0x53b>
   36600:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   36603:	31 f6                	xor    %esi,%esi
   36605:	48 89 df             	mov    %rbx,%rdi
   36608:	80 ce 12             	or     $0x12,%dh
   3660b:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   3660f:	0f b7 d2             	movzwl %dx,%edx
   36612:	e8 70 f8 fc ff       	callq  5e87 <e1000_write_phy_reg>
   36617:	e9 80 00 00 00       	jmpq   3669c <e1000_watchdog+0x53b>
   3661c:	83 f8 03             	cmp    $0x3,%eax
   3661f:	75 62                	jne    36683 <e1000_watchdog+0x522>
   36621:	4c 8d 65 d4          	lea    0xffffffffffffffd4(%rbp),%r12
   36625:	be 09 00 00 00       	mov    $0x9,%esi
   3662a:	48 89 df             	mov    %rbx,%rdi
   3662d:	4c 89 e2             	mov    %r12,%rdx
   36630:	e8 a4 fa fc ff       	callq  60d9 <e1000_read_phy_reg>
   36635:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   36638:	be 09 00 00 00       	mov    $0x9,%esi
   3663d:	48 89 df             	mov    %rbx,%rdi
   36640:	80 ce 10             	or     $0x10,%dh
   36643:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   36647:	0f b7 d2             	movzwl %dx,%edx
   3664a:	e8 38 f8 fc ff       	callq  5e87 <e1000_write_phy_reg>
   3664f:	48 89 df             	mov    %rbx,%rdi
   36652:	e8 6f 08 fd ff       	callq  6ec6 <e1000_phy_setup_autoneg>
   36657:	85 c0                	test   %eax,%eax
   36659:	75 28                	jne    36683 <e1000_watchdog+0x522>
   3665b:	31 f6                	xor    %esi,%esi
   3665d:	4c 89 e2             	mov    %r12,%rdx
   36660:	48 89 df             	mov    %rbx,%rdi
   36663:	e8 71 fa fc ff       	callq  60d9 <e1000_read_phy_reg>
   36668:	85 c0                	test   %eax,%eax
   3666a:	75 17                	jne    36683 <e1000_watchdog+0x522>
   3666c:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   3666f:	31 f6                	xor    %esi,%esi
   36671:	48 89 df             	mov    %rbx,%rdi
   36674:	80 ce 12             	or     $0x12,%dh
   36677:	66 89 55 d4          	mov    %dx,0xffffffffffffffd4(%rbp)
   3667b:	0f b7 d2             	movzwl %dx,%edx
   3667e:	e8 04 f8 fc ff       	callq  5e87 <e1000_write_phy_reg>
   36683:	41 8b 85 a8 00 00 00 	mov    0xa8(%r13),%eax
   3668a:	31 d2                	xor    %edx,%edx
   3668c:	8d 48 01             	lea    0x1(%rax),%ecx
   3668f:	83 f8 0f             	cmp    $0xf,%eax
   36692:	0f 45 d1             	cmovne %ecx,%edx
   36695:	41 89 95 a8 00 00 00 	mov    %edx,0xa8(%r13)
   3669c:	4c 89 ef             	mov    %r13,%rdi
   3669f:	e8 83 29 fd ff       	callq  9027 <e1000_update_stats>
   366a4:	49 8b 85 60 06 00 00 	mov    0x660(%r13),%rax
   366ab:	41 2b 85 e0 01 00 00 	sub    0x1e0(%r13),%eax
   366b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			366b5: R_X86_64_32S	.rodata.str1.1+0x3abb
   366b9:	41 89 86 ac 00 00 00 	mov    %eax,0xac(%r14)
   366c0:	49 8b 85 60 06 00 00 	mov    0x660(%r13),%rax
   366c7:	49 89 85 e0 01 00 00 	mov    %rax,0x1e0(%r13)
   366ce:	49 8b 85 28 05 00 00 	mov    0x528(%r13),%rax
   366d5:	41 2b 85 e8 01 00 00 	sub    0x1e8(%r13),%eax
   366dc:	41 89 86 a8 00 00 00 	mov    %eax,0xa8(%r14)
   366e3:	49 8b 95 d0 05 00 00 	mov    0x5d0(%r13),%rdx
   366ea:	49 8b 85 28 05 00 00 	mov    0x528(%r13),%rax
   366f1:	49 89 85 e8 01 00 00 	mov    %rax,0x1e8(%r13)
   366f8:	89 d0                	mov    %edx,%eax
   366fa:	41 2b 85 e8 02 00 00 	sub    0x2e8(%r13),%eax
   36701:	49 89 95 e8 02 00 00 	mov    %rdx,0x2e8(%r13)
   36708:	49 8b 95 e0 05 00 00 	mov    0x5e0(%r13),%rdx
   3670f:	41 89 85 e0 02 00 00 	mov    %eax,0x2e0(%r13)
   36716:	89 d0                	mov    %edx,%eax
   36718:	41 2b 85 d8 01 00 00 	sub    0x1d8(%r13),%eax
   3671f:	49 89 95 d8 01 00 00 	mov    %rdx,0x1d8(%r13)
   36726:	41 89 85 d4 01 00 00 	mov    %eax,0x1d4(%r13)
   3672d:	e8 00 00 00 00       	callq  36732 <e1000_watchdog+0x5d1>
			3672e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36732:	41 80 be 16 01 00 00 	cmpb   $0x0,0x116(%r14)
   36739:	00 
   3673a:	0f 84 c4 00 00 00    	je     36804 <e1000_watchdog+0x6a3>
   36740:	41 0f b7 86 e4 00 00 	movzwl 0xe4(%r14),%eax
   36747:	00 
   36748:	41 8b 96 ac 00 00 00 	mov    0xac(%r14),%edx
   3674f:	41 0f af 86 a8 00 00 	imul   0xa8(%r14),%eax
   36756:	00 
   36757:	39 d0                	cmp    %edx,%eax
   36759:	76 6b                	jbe    367c6 <e1000_watchdog+0x665>
   3675b:	81 fa e8 03 00 00    	cmp    $0x3e8,%edx
   36761:	0f 86 9d 00 00 00    	jbe    36804 <e1000_watchdog+0x6a3>
   36767:	41 8b 86 dc 00 00 00 	mov    0xdc(%r14),%eax
   3676e:	66 41 3b 86 e0 00 00 	cmp    0xe0(%r14),%ax
   36775:	00 
   36776:	41 c6 86 18 01 00 00 	movb   $0x1,0x118(%r14)
   3677d:	01 
   3677e:	0f 83 80 00 00 00    	jae    36804 <e1000_watchdog+0x6a3>
   36784:	66 85 c0             	test   %ax,%ax
   36787:	75 0a                	jne    36793 <e1000_watchdog+0x632>
   36789:	66 41 8b 86 de 00 00 	mov    0xde(%r14),%ax
   36790:	00 
   36791:	eb 08                	jmp    3679b <e1000_watchdog+0x63a>
   36793:	66 41 03 86 e2 00 00 	add    0xe2(%r14),%ax
   3679a:	00 
   3679b:	49 8b 1e             	mov    (%r14),%rbx
   3679e:	66 41 89 86 dc 00 00 	mov    %ax,0xdc(%r14)
   367a5:	00 
   367a6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			367a9: R_X86_64_32S	.rodata.str1.1+0xb4
   367ad:	45 0f b7 a6 dc 00 00 	movzwl 0xdc(%r14),%r12d
   367b4:	00 
   367b5:	e8 00 00 00 00       	callq  367ba <e1000_watchdog+0x659>
			367b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   367ba:	48 81 c3 58 04 00 00 	add    $0x458,%rbx
   367c1:	44 89 23             	mov    %r12d,(%rbx)
   367c4:	eb 3e                	jmp    36804 <e1000_watchdog+0x6a3>
   367c6:	41 80 be 18 01 00 00 	cmpb   $0x0,0x118(%r14)
   367cd:	00 
   367ce:	74 34                	je     36804 <e1000_watchdog+0x6a3>
   367d0:	81 fa e8 03 00 00    	cmp    $0x3e8,%edx
   367d6:	77 2c                	ja     36804 <e1000_watchdog+0x6a3>
   367d8:	49 8b 1e             	mov    (%r14),%rbx
   367db:	66 41 c7 86 dc 00 00 	movw   $0x0,0xdc(%r14)
   367e2:	00 00 00 
   367e5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			367e8: R_X86_64_32S	.rodata.str1.1+0xb4
   367ec:	41 c6 86 18 01 00 00 	movb   $0x0,0x118(%r14)
   367f3:	00 
   367f4:	e8 00 00 00 00       	callq  367f9 <e1000_watchdog+0x698>
			367f5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   367f9:	48 81 c3 58 04 00 00 	add    $0x458,%rbx
   36800:	31 c0                	xor    %eax,%eax
   36802:	89 03                	mov    %eax,(%rbx)
   36804:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36807: R_X86_64_32S	.rodata.str1.1+0x2b02
   3680b:	e8 00 00 00 00       	callq  36810 <e1000_watchdog+0x6af>
			3680c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36810:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36813: R_X86_64_32S	.rodata.str1.1+0x15d4
   36817:	e8 00 00 00 00       	callq  3681c <e1000_watchdog+0x6bb>
			36818: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3681c:	41 f6 47 48 04       	testb  $0x4,0x48(%r15)
   36821:	74 39                	je     3685c <e1000_watchdog+0x6fb>
   36823:	48 8b 55 c0          	mov    0xffffffffffffffc0(%rbp),%rdx
   36827:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   3682b:	8b 42 18             	mov    0x18(%rdx),%eax
   3682e:	31 d2                	xor    %edx,%edx
   36830:	39 41 1c             	cmp    %eax,0x1c(%rcx)
   36833:	77 03                	ja     36838 <e1000_watchdog+0x6d7>
   36835:	8b 51 14             	mov    0x14(%rcx),%edx
   36838:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
   3683c:	8b 41 1c             	mov    0x1c(%rcx),%eax
   3683f:	2b 41 18             	sub    0x18(%rcx),%eax
   36842:	01 d0                	add    %edx,%eax
   36844:	3b 41 14             	cmp    0x14(%rcx),%eax
   36847:	73 13                	jae    3685c <e1000_watchdog+0x6fb>
   36849:	41 ff 85 f0 01 00 00 	incl   0x1f0(%r13)
   36850:	49 8d bd 38 01 00 00 	lea    0x138(%r13),%rdi
   36857:	e8 43 d1 fc ff       	callq  399f <schedule_work>
   3685c:	49 8b 1e             	mov    (%r14),%rbx
   3685f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36862: R_X86_64_32S	.rodata.str1.1+0xb4
   36866:	e8 00 00 00 00       	callq  3686b <e1000_watchdog+0x70a>
			36867: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3686b:	b8 10 00 00 00       	mov    $0x10,%eax
   36870:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   36877:	89 03                	mov    %eax,(%rbx)
   36879:	41 c6 85 09 02 00 00 	movb   $0x1,0x209(%r13)
   36880:	01 
   36881:	41 83 7e 10 0e       	cmpl   $0xe,0x10(%r14)
   36886:	75 1b                	jne    368a3 <e1000_watchdog+0x742>
   36888:	41 80 be 10 01 00 00 	cmpb   $0x0,0x110(%r14)
   3688f:	00 
   36890:	74 11                	je     368a3 <e1000_watchdog+0x742>
   36892:	49 8d b6 f4 00 00 00 	lea    0xf4(%r14),%rsi
   36899:	31 d2                	xor    %edx,%edx
   3689b:	4c 89 f7             	mov    %r14,%rdi
   3689e:	e8 eb 9a fc ff       	callq  38e <e1000_rar_set>
   368a3:	48 8b 3d 00 00 00 00 	mov    0(%rip),%rdi        # 368aa <e1000_watchdog+0x749>
			368a6: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   368aa:	48 81 c7 d0 07 00 00 	add    $0x7d0,%rdi
   368b1:	e8 f2 1f fd ff       	callq  88a8 <round_jiffies>
   368b6:	49 8d 7d 30          	lea    0x30(%r13),%rdi
   368ba:	48 89 c6             	mov    %rax,%rsi
   368bd:	e8 b1 0c fd ff       	callq  7573 <mod_timer>
   368c2:	48 83 c4 18          	add    $0x18,%rsp
   368c6:	5b                   	pop    %rbx
   368c7:	41 5c                	pop    %r12
   368c9:	41 5d                	pop    %r13
   368cb:	41 5e                	pop    %r14
   368cd:	41 5f                	pop    %r15
   368cf:	c9                   	leaveq 
   368d0:	c3                   	retq   
   368d1:	41 80 be 1e 01 00 00 	cmpb   $0x0,0x11e(%r14)
   368d8:	00 
   368d9:	0f 84 bd fd ff ff    	je     3669c <e1000_watchdog+0x53b>
   368df:	e9 b9 f9 ff ff       	jmpq   3629d <e1000_watchdog+0x13c>
   368e4:	4c 89 fe             	mov    %r15,%rsi
   368e7:	66 41 c7 85 b0 00 00 	movw   $0x0,0xb0(%r13)
   368ee:	00 00 00 
   368f1:	66 41 c7 85 b2 00 00 	movw   $0x0,0xb2(%r13)
   368f8:	00 00 00 
   368fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			368fe: R_X86_64_32S	str_398866888
   36902:	31 c0                	xor    %eax,%eax
   36904:	e8 00 00 00 00       	callq  36909 <e1000_watchdog+0x7a8>
			36905: R_X86_64_PC32	printk+0xfffffffffffffffc
   36909:	4c 89 ff             	mov    %r15,%rdi
   3690c:	e8 0a fa fd ff       	callq  1631b <netif_carrier_off>
   36911:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36914: R_X86_64_32S	.rodata.str1.1+0x2ba1
   36918:	e8 00 00 00 00       	callq  3691d <e1000_watchdog+0x7bc>
			36919: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3691d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36920: R_X86_64_32S	.rodata.str1.1+0x2bb2
   36924:	e8 00 00 00 00       	callq  36929 <e1000_watchdog+0x7c8>
			36925: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36929:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3692c: R_X86_64_32S	.rodata.str1.1+0x2bc6
   36930:	49 8b 9f 00 03 00 00 	mov    0x300(%r15),%rbx
   36937:	e8 00 00 00 00       	callq  3693c <e1000_watchdog+0x7db>
			36938: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3693c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3693f: R_X86_64_32S	.rodata.str1.1+0x2ac7
   36943:	e8 00 00 00 00       	callq  36948 <e1000_watchdog+0x7e7>
			36944: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36948:	f0 0f ba 6b 10 00    	lock btsl $0x0,0x10(%rbx)
   3694e:	48 8b 3d 00 00 00 00 	mov    0(%rip),%rdi        # 36955 <e1000_watchdog+0x7f4>
			36951: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   36955:	48 81 c7 d0 07 00 00 	add    $0x7d0,%rdi
   3695c:	e8 47 1f fd ff       	callq  88a8 <round_jiffies>
   36961:	49 8d 7d 60          	lea    0x60(%r13),%rdi
   36965:	48 89 c6             	mov    %rax,%rsi
   36968:	e8 06 0c fd ff       	callq  7573 <mod_timer>
   3696d:	41 83 7e 10 11       	cmpl   $0x11,0x10(%r14)
   36972:	0f 85 a3 fb ff ff    	jne    3651b <e1000_watchdog+0x3ba>
   36978:	e9 92 fb ff ff       	jmpq   3650f <e1000_watchdog+0x3ae>

000000000003697d <e1000_intr_msi>:
   3697d:	55                   	push   %rbp
   3697e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36981: R_X86_64_32S	.rodata.str1.1+0x3ad1
   36985:	48 89 e5             	mov    %rsp,%rbp
   36988:	41 56                	push   %r14
   3698a:	41 55                	push   %r13
   3698c:	41 54                	push   %r12
   3698e:	49 89 f4             	mov    %rsi,%r12
   36991:	4d 8d ac 24 00 08 00 	lea    0x800(%r12),%r13
   36998:	00 
   36999:	4d 8d b4 24 b8 0b 00 	lea    0xbb8(%r12),%r14
   369a0:	00 
   369a1:	53                   	push   %rbx
   369a2:	e8 00 00 00 00       	callq  369a7 <e1000_intr_msi+0x2a>
			369a3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   369a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			369aa: R_X86_64_32S	.rodata.str1.1+0x1be
   369ae:	e8 00 00 00 00       	callq  369b3 <e1000_intr_msi+0x36>
			369af: R_X86_64_PC32	record_function+0xfffffffffffffffc
   369b3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			369b6: R_X86_64_32S	.rodata.str1.1+0xae
   369ba:	49 8b 9c 24 b8 0b 00 	mov    0xbb8(%r12),%rbx
   369c1:	00 
   369c2:	e8 00 00 00 00       	callq  369c7 <e1000_intr_msi+0x4a>
			369c3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   369c7:	8b 83 c0 00 00 00    	mov    0xc0(%rbx),%eax
   369cd:	a8 0c                	test   $0xc,%al
   369cf:	0f 84 89 00 00 00    	je     36a5e <e1000_intr_msi+0xe1>
   369d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			369d8: R_X86_64_32S	.rodata.str1.1+0x2b02
   369dc:	41 c6 86 0c 01 00 00 	movb   $0x1,0x10c(%r14)
   369e3:	01 
   369e4:	e8 00 00 00 00       	callq  369e9 <e1000_intr_msi+0x6c>
			369e5: R_X86_64_PC32	record_function+0xfffffffffffffffc
   369e9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			369ec: R_X86_64_32S	.rodata.str1.1+0x15d4
   369f0:	e8 00 00 00 00       	callq  369f5 <e1000_intr_msi+0x78>
			369f1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   369f5:	41 f6 44 24 48 04    	testb  $0x4,0x48(%r12)
   369fb:	75 38                	jne    36a35 <e1000_intr_msi+0xb8>
   369fd:	e9 05 01 00 00       	jmpq   36b07 <e1000_intr_msi+0x18a>
   36a02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a05: R_X86_64_32S	.rodata.str1.1+0xae
   36a09:	49 8b 1e             	mov    (%r14),%rbx
   36a0c:	e8 00 00 00 00       	callq  36a11 <e1000_intr_msi+0x94>
			36a0d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a11:	44 8b a3 00 01 00 00 	mov    0x100(%rbx),%r12d
   36a18:	49 8b 1e             	mov    (%r14),%rbx
   36a1b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a1e: R_X86_64_32S	.rodata.str1.1+0xb4
   36a22:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
   36a26:	e8 00 00 00 00       	callq  36a2b <e1000_intr_msi+0xae>
			36a27: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a2b:	48 81 c3 00 01 00 00 	add    $0x100,%rbx
   36a32:	44 89 23             	mov    %r12d,(%rbx)
   36a35:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a38: R_X86_64_32S	.rodata.str1.1+0x15d4
   36a3c:	e8 00 00 00 00       	callq  36a41 <e1000_intr_msi+0xc4>
			36a3d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a41:	41 f6 85 c8 07 00 00 	testb  $0x4,0x7c8(%r13)
   36a48:	04 
   36a49:	75 13                	jne    36a5e <e1000_intr_msi+0xe1>
   36a4b:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 36a52 <e1000_intr_msi+0xd5>
			36a4e: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   36a52:	49 8d 7d 30          	lea    0x30(%r13),%rdi
   36a56:	48 ff c6             	inc    %rsi
   36a59:	e8 15 0b fd ff       	callq  7573 <mod_timer>
   36a5e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a61: R_X86_64_32S	.rodata.str1.1+0x2b13
   36a65:	e8 00 00 00 00       	callq  36a6a <e1000_intr_msi+0xed>
			36a66: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a6d: R_X86_64_32S	.rodata.str1.1+0x2b2a
   36a71:	e8 00 00 00 00       	callq  36a76 <e1000_intr_msi+0xf9>
			36a72: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a79: R_X86_64_32S	.rodata.str1.1+0x2b3d
   36a7d:	e8 00 00 00 00       	callq  36a82 <e1000_intr_msi+0x105>
			36a7e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a85: R_X86_64_32S	.rodata.str1.1+0x15d4
   36a89:	e8 00 00 00 00       	callq  36a8e <e1000_intr_msi+0x111>
			36a8a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36a8e:	41 f6 85 38 02 00 00 	testb  $0x2,0x238(%r13)
   36a95:	02 
   36a96:	75 65                	jne    36afd <e1000_intr_msi+0x180>
   36a98:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36a9b: R_X86_64_32S	.rodata.str1.1+0x2b52
   36a9f:	e8 00 00 00 00       	callq  36aa4 <e1000_intr_msi+0x127>
			36aa0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36aa4:	f0 41 0f ba ad 38 02 	lock btsl $0x0,0x238(%r13)
   36aab:	00 00 00 
   36aae:	19 c0                	sbb    %eax,%eax
   36ab0:	85 c0                	test   %eax,%eax
   36ab2:	75 49                	jne    36afd <e1000_intr_msi+0x180>
   36ab4:	49 8d 9d 28 02 00 00 	lea    0x228(%r13),%rbx
   36abb:	41 c7 85 18 01 00 00 	movl   $0x0,0x118(%r13)
   36ac2:	00 00 00 00 
   36ac6:	41 c7 85 1c 01 00 00 	movl   $0x0,0x11c(%r13)
   36acd:	00 00 00 00 
   36ad1:	41 c7 85 20 01 00 00 	movl   $0x0,0x120(%r13)
   36ad8:	00 00 00 00 
   36adc:	41 c7 85 24 01 00 00 	movl   $0x0,0x124(%r13)
   36ae3:	00 00 00 00 
   36ae7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36aea: R_X86_64_32S	.rodata.str1.1+0x2b63
   36aee:	e8 00 00 00 00       	callq  36af3 <e1000_intr_msi+0x176>
			36aef: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36af3:	48 89 df             	mov    %rbx,%rdi
   36af6:	e8 c5 a9 fd ff       	callq  114c0 <__napi_schedule>
   36afb:	eb 1a                	jmp    36b17 <e1000_intr_msi+0x19a>
   36afd:	4c 89 ef             	mov    %r13,%rdi
   36b00:	e8 94 a7 fc ff       	callq  1299 <e1000_irq_enable>
   36b05:	eb 10                	jmp    36b17 <e1000_intr_msi+0x19a>
   36b07:	41 83 7e 10 11       	cmpl   $0x11,0x10(%r14)
   36b0c:	0f 85 23 ff ff ff    	jne    36a35 <e1000_intr_msi+0xb8>
   36b12:	e9 eb fe ff ff       	jmpq   36a02 <e1000_intr_msi+0x85>
   36b17:	5b                   	pop    %rbx
   36b18:	41 5c                	pop    %r12
   36b1a:	41 5d                	pop    %r13
   36b1c:	41 5e                	pop    %r14
   36b1e:	c9                   	leaveq 
   36b1f:	b8 01 00 00 00       	mov    $0x1,%eax
   36b24:	c3                   	retq   

0000000000036b25 <e1000_set_wol>:
   36b25:	55                   	push   %rbp
   36b26:	48 89 e5             	mov    %rsp,%rbp
   36b29:	41 55                	push   %r13
   36b2b:	49 89 f5             	mov    %rsi,%r13
   36b2e:	41 54                	push   %r12
   36b30:	53                   	push   %rbx
   36b31:	48 89 fb             	mov    %rdi,%rbx
   36b34:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36b37: R_X86_64_32S	.rodata.str1.1+0x3ae0
   36b3b:	48 83 ec 08          	sub    $0x8,%rsp
   36b3f:	e8 00 00 00 00       	callq  36b44 <e1000_set_wol+0x1f>
			36b40: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36b44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36b47: R_X86_64_32S	.rodata.str1.1+0x1be
   36b4b:	e8 00 00 00 00       	callq  36b50 <e1000_set_wol+0x2b>
			36b4c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36b50:	41 f6 45 08 51       	testb  $0x51,0x8(%r13)
   36b55:	0f 85 15 01 00 00    	jne    36c70 <e1000_set_wol+0x14b>
   36b5b:	4c 8d a3 00 08 00 00 	lea    0x800(%rbx),%r12
   36b62:	4c 89 ee             	mov    %r13,%rsi
   36b65:	4c 89 e7             	mov    %r12,%rdi
   36b68:	e8 d1 af fc ff       	callq  1b3e <e1000_wol_exclusion>
   36b6d:	85 c0                	test   %eax,%eax
   36b6f:	75 1d                	jne    36b8e <e1000_set_wol+0x69>
   36b71:	49 8b 9c 24 f8 02 00 	mov    0x2f8(%r12),%rbx
   36b78:	00 
   36b79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36b7c: R_X86_64_32S	.rodata.str1.1+0x3aee
   36b80:	e8 00 00 00 00       	callq  36b85 <e1000_set_wol+0x60>
			36b81: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36b85:	f6 83 0c 02 00 00 01 	testb  $0x1,0x20c(%rbx)
   36b8c:	75 12                	jne    36ba0 <e1000_set_wol+0x7b>
   36b8e:	31 c0                	xor    %eax,%eax
   36b90:	41 83 7d 08 00       	cmpl   $0x0,0x8(%r13)
   36b95:	0f 84 da 00 00 00    	je     36c75 <e1000_set_wol+0x150>
   36b9b:	e9 d0 00 00 00       	jmpq   36c70 <e1000_set_wol+0x14b>
   36ba0:	66 41 81 bc 24 9e 04 	cmpw   $0x10b5,0x49e(%r12)
   36ba7:	00 00 b5 10 
   36bab:	75 38                	jne    36be5 <e1000_set_wol+0xc0>
   36bad:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
   36bb2:	74 31                	je     36be5 <e1000_set_wol+0xc0>
   36bb4:	41 f6 84 24 c0 07 00 	testb  $0x1,0x7c0(%r12)
   36bbb:	00 01 
   36bbd:	0f 84 ad 00 00 00    	je     36c70 <e1000_set_wol+0x14b>
   36bc3:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
   36bca:	00 
   36bcb:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			36bce: R_X86_64_32S	str_321444720
   36bd2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36bd5: R_X86_64_32S	str_187861529
   36bd9:	31 c0                	xor    %eax,%eax
   36bdb:	e8 00 00 00 00       	callq  36be0 <e1000_set_wol+0xbb>
			36bdc: R_X86_64_PC32	printk+0xfffffffffffffffc
   36be0:	e9 8b 00 00 00       	jmpq   36c70 <e1000_set_wol+0x14b>
   36be5:	41 c7 84 24 a4 00 00 	movl   $0x0,0xa4(%r12)
   36bec:	00 00 00 00 00 
   36bf1:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
   36bf6:	74 0c                	je     36c04 <e1000_set_wol+0xdf>
   36bf8:	41 c7 84 24 a4 00 00 	movl   $0x4,0xa4(%r12)
   36bff:	00 04 00 00 00 
   36c04:	41 f6 45 08 04       	testb  $0x4,0x8(%r13)
   36c09:	74 09                	je     36c14 <e1000_set_wol+0xef>
   36c0b:	41 83 8c 24 a4 00 00 	orl    $0x8,0xa4(%r12)
   36c12:	00 08 
   36c14:	41 f6 45 08 08       	testb  $0x8,0x8(%r13)
   36c19:	74 09                	je     36c24 <e1000_set_wol+0xff>
   36c1b:	41 83 8c 24 a4 00 00 	orl    $0x10,0xa4(%r12)
   36c22:	00 10 
   36c24:	41 f6 45 08 20       	testb  $0x20,0x8(%r13)
   36c29:	74 09                	je     36c34 <e1000_set_wol+0x10f>
   36c2b:	41 83 8c 24 a4 00 00 	orl    $0x2,0xa4(%r12)
   36c32:	00 02 
   36c34:	41 8b 9c 24 a4 00 00 	mov    0xa4(%r12),%ebx
   36c3b:	00 
   36c3c:	4d 8b a4 24 f8 02 00 	mov    0x2f8(%r12),%r12
   36c43:	00 
   36c44:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36c47: R_X86_64_32S	.rodata.str1.1+0x3a82
   36c4b:	e8 00 00 00 00       	callq  36c50 <e1000_set_wol+0x12b>
			36c4c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36c50:	41 8a 84 24 0c 02 00 	mov    0x20c(%r12),%al
   36c57:	00 
   36c58:	85 db                	test   %ebx,%ebx
   36c5a:	0f 95 c2             	setne  %dl
   36c5d:	01 d2                	add    %edx,%edx
   36c5f:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
   36c62:	09 d0                	or     %edx,%eax
   36c64:	41 88 84 24 0c 02 00 	mov    %al,0x20c(%r12)
   36c6b:	00 
   36c6c:	31 c0                	xor    %eax,%eax
   36c6e:	eb 05                	jmp    36c75 <e1000_set_wol+0x150>
   36c70:	b8 a1 ff ff ff       	mov    $0xffffffa1,%eax
   36c75:	41 5d                	pop    %r13
   36c77:	5b                   	pop    %rbx
   36c78:	41 5c                	pop    %r12
   36c7a:	41 5d                	pop    %r13
   36c7c:	c9                   	leaveq 
   36c7d:	c3                   	retq   

0000000000036c7e <e1000_get_wol>:
   36c7e:	55                   	push   %rbp
   36c7f:	48 89 e5             	mov    %rsp,%rbp
   36c82:	41 55                	push   %r13
   36c84:	41 54                	push   %r12
   36c86:	49 89 f4             	mov    %rsi,%r12
   36c89:	53                   	push   %rbx
   36c8a:	48 89 fb             	mov    %rdi,%rbx
   36c8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36c90: R_X86_64_32S	.rodata.str1.1+0x3b00
   36c94:	4c 8d ab 00 08 00 00 	lea    0x800(%rbx),%r13
   36c9b:	48 83 ec 08          	sub    $0x8,%rsp
   36c9f:	e8 00 00 00 00       	callq  36ca4 <e1000_get_wol+0x26>
			36ca0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36ca4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36ca7: R_X86_64_32S	.rodata.str1.1+0x1be
   36cab:	e8 00 00 00 00       	callq  36cb0 <e1000_get_wol+0x32>
			36cac: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36cb0:	41 c7 44 24 04 2e 00 	movl   $0x2e,0x4(%r12)
   36cb7:	00 00 
   36cb9:	41 c7 44 24 08 00 00 	movl   $0x0,0x8(%r12)
   36cc0:	00 00 
   36cc2:	4c 89 e6             	mov    %r12,%rsi
   36cc5:	4c 89 ef             	mov    %r13,%rdi
   36cc8:	e8 71 ae fc ff       	callq  1b3e <e1000_wol_exclusion>
   36ccd:	85 c0                	test   %eax,%eax
   36ccf:	0f 85 a2 00 00 00    	jne    36d77 <e1000_get_wol+0xf9>
   36cd5:	49 8b 9d f8 02 00 00 	mov    0x2f8(%r13),%rbx
   36cdc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36cdf: R_X86_64_32S	.rodata.str1.1+0x3aee
   36ce3:	e8 00 00 00 00       	callq  36ce8 <e1000_get_wol+0x6a>
			36ce4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36ce8:	f6 83 0c 02 00 00 01 	testb  $0x1,0x20c(%rbx)
   36cef:	0f 84 82 00 00 00    	je     36d77 <e1000_get_wol+0xf9>
   36cf5:	66 41 81 bd 9e 04 00 	cmpw   $0x10b5,0x49e(%r13)
   36cfc:	00 b5 10 
   36cff:	75 36                	jne    36d37 <e1000_get_wol+0xb9>
   36d01:	41 83 64 24 04 fd    	andl   $0xfffffffffffffffd,0x4(%r12)
   36d07:	41 f6 85 a4 00 00 00 	testb  $0x4,0xa4(%r13)
   36d0e:	04 
   36d0f:	74 36                	je     36d47 <e1000_get_wol+0xc9>
   36d11:	41 f6 85 c0 07 00 00 	testb  $0x1,0x7c0(%r13)
   36d18:	01 
   36d19:	74 26                	je     36d41 <e1000_get_wol+0xc3>
   36d1b:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
   36d22:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			36d25: R_X86_64_32S	str_830635972
   36d29:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36d2c: R_X86_64_32S	str_187861529
   36d30:	31 c0                	xor    %eax,%eax
   36d32:	e8 00 00 00 00       	callq  36d37 <e1000_get_wol+0xb9>
			36d33: R_X86_64_PC32	printk+0xfffffffffffffffc
   36d37:	41 f6 85 a4 00 00 00 	testb  $0x4,0xa4(%r13)
   36d3e:	04 
   36d3f:	74 06                	je     36d47 <e1000_get_wol+0xc9>
   36d41:	41 83 4c 24 08 02    	orl    $0x2,0x8(%r12)
   36d47:	41 f6 85 a4 00 00 00 	testb  $0x8,0xa4(%r13)
   36d4e:	08 
   36d4f:	74 06                	je     36d57 <e1000_get_wol+0xd9>
   36d51:	41 83 4c 24 08 04    	orl    $0x4,0x8(%r12)
   36d57:	41 f6 85 a4 00 00 00 	testb  $0x10,0xa4(%r13)
   36d5e:	10 
   36d5f:	74 06                	je     36d67 <e1000_get_wol+0xe9>
   36d61:	41 83 4c 24 08 08    	orl    $0x8,0x8(%r12)
   36d67:	41 f6 85 a4 00 00 00 	testb  $0x2,0xa4(%r13)
   36d6e:	02 
   36d6f:	74 06                	je     36d77 <e1000_get_wol+0xf9>
   36d71:	41 83 4c 24 08 20    	orl    $0x20,0x8(%r12)
   36d77:	58                   	pop    %rax
   36d78:	5b                   	pop    %rbx
   36d79:	41 5c                	pop    %r12
   36d7b:	41 5d                	pop    %r13
   36d7d:	c9                   	leaveq 
   36d7e:	c3                   	retq   

0000000000036d7f <e1000_open>:
   36d7f:	55                   	push   %rbp
   36d80:	48 89 e5             	mov    %rsp,%rbp
   36d83:	41 57                	push   %r15
   36d85:	49 89 ff             	mov    %rdi,%r15
   36d88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36d8b: R_X86_64_32S	.rodata.str1.1+0x3b0e
   36d8f:	41 56                	push   %r14
   36d91:	4d 8d b7 b8 0b 00 00 	lea    0xbb8(%r15),%r14
   36d98:	41 55                	push   %r13
   36d9a:	41 bd f0 ff ff ff    	mov    $0xfffffff0,%r13d
   36da0:	41 54                	push   %r12
   36da2:	53                   	push   %rbx
   36da3:	49 8d 9f 00 08 00 00 	lea    0x800(%r15),%rbx
   36daa:	48 83 ec 08          	sub    $0x8,%rsp
   36dae:	e8 00 00 00 00       	callq  36db3 <e1000_open+0x34>
			36daf: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36db3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36db6: R_X86_64_32S	.rodata.str1.1+0x1be
   36dba:	e8 00 00 00 00       	callq  36dbf <e1000_open+0x40>
			36dbb: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36dbf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36dc2: R_X86_64_32S	.rodata.str1.1+0x15d4
   36dc6:	e8 00 00 00 00       	callq  36dcb <e1000_open+0x4c>
			36dc7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36dcb:	41 f6 87 c8 0f 00 00 	testb  $0x1,0xfc8(%r15)
   36dd2:	01 
   36dd3:	0f 85 60 01 00 00    	jne    36f39 <e1000_open+0x1ba>
   36dd9:	48 89 df             	mov    %rbx,%rdi
   36ddc:	e8 2b f7 fe ff       	callq  2650c <e1000_setup_all_tx_resources>
   36de1:	85 c0                	test   %eax,%eax
   36de3:	41 89 c5             	mov    %eax,%r13d
   36de6:	0f 85 45 01 00 00    	jne    36f31 <e1000_open+0x1b2>
   36dec:	48 89 df             	mov    %rbx,%rdi
   36def:	e8 23 ed fe ff       	callq  25b17 <e1000_setup_all_rx_resources>
   36df4:	85 c0                	test   %eax,%eax
   36df6:	41 89 c5             	mov    %eax,%r13d
   36df9:	0f 85 2a 01 00 00    	jne    36f29 <e1000_open+0x1aa>
   36dff:	48 89 df             	mov    %rbx,%rdi
   36e02:	e8 d9 01 fd ff       	callq  6fe0 <e1000_power_up_phy>
   36e07:	66 c7 83 98 00 00 00 	movw   $0xffff,0x98(%rbx)
   36e0e:	ff ff 
   36e10:	41 f6 86 c4 00 00 00 	testb  $0x2,0xc4(%r14)
   36e17:	02 
   36e18:	74 08                	je     36e22 <e1000_open+0xa3>
   36e1a:	48 89 df             	mov    %rbx,%rdi
   36e1d:	e8 20 1e fd ff       	callq  8c42 <e1000_update_mng_vlan>
   36e22:	41 83 7e 10 10       	cmpl   $0x10,0x10(%r14)
   36e27:	75 14                	jne    36e3d <e1000_open+0xbe>
   36e29:	4c 89 f7             	mov    %r14,%rdi
   36e2c:	e8 be 93 fc ff       	callq  1ef <e1000_check_mng_mode>
   36e31:	84 c0                	test   %al,%al
   36e33:	74 08                	je     36e3d <e1000_open+0xbe>
   36e35:	48 89 df             	mov    %rbx,%rdi
   36e38:	e8 f6 a2 fc ff       	callq  1133 <e1000_get_hw_control>
   36e3d:	48 89 df             	mov    %rbx,%rdi
   36e40:	e8 b7 d0 fe ff       	callq  23efc <e1000_configure>
   36e45:	48 89 df             	mov    %rbx,%rdi
   36e48:	e8 de 91 fd ff       	callq  1002b <e1000_request_irq>
   36e4d:	85 c0                	test   %eax,%eax
   36e4f:	41 89 c5             	mov    %eax,%r13d
   36e52:	0f 85 b9 00 00 00    	jne    36f11 <e1000_open+0x192>
   36e58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36e5b: R_X86_64_32S	.rodata.str1.1+0x2c01
   36e5f:	e8 00 00 00 00       	callq  36e64 <e1000_open+0xe5>
			36e60: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36e64:	f0 0f ba b3 c8 07 00 	lock btrl $0x2,0x7c8(%rbx)
   36e6b:	00 02 
   36e6d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36e70: R_X86_64_32S	.rodata.str1.1+0x2d67
   36e74:	4c 8d a3 28 02 00 00 	lea    0x228(%rbx),%r12
   36e7b:	e8 00 00 00 00       	callq  36e80 <e1000_open+0x101>
			36e7c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36e80:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36e83: R_X86_64_32S	.rodata.str1.1+0x15d4
   36e87:	e8 00 00 00 00       	callq  36e8c <e1000_open+0x10d>
			36e88: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36e8c:	f6 83 38 02 00 00 01 	testb  $0x1,0x238(%rbx)
   36e93:	75 04                	jne    36e99 <e1000_open+0x11a>
   36e95:	0f 0b                	ud2a   
   36e97:	eb fe                	jmp    36e97 <e1000_open+0x118>
   36e99:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36e9c: R_X86_64_32S	.rodata.str1.1+0x2c01
   36ea0:	e8 00 00 00 00       	callq  36ea5 <e1000_open+0x126>
			36ea1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36ea5:	f0 41 0f ba 74 24 10 	lock btrl $0x0,0x10(%r12)
   36eac:	00 
   36ead:	48 89 df             	mov    %rbx,%rdi
   36eb0:	e8 e4 a3 fc ff       	callq  1299 <e1000_irq_enable>
   36eb5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36eb8: R_X86_64_32S	.rodata.str1.1+0x2bda
   36ebc:	e8 00 00 00 00       	callq  36ec1 <e1000_open+0x142>
			36ebd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36ec1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36ec4: R_X86_64_32S	.rodata.str1.1+0x2bb2
   36ec8:	e8 00 00 00 00       	callq  36ecd <e1000_open+0x14e>
			36ec9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36ecd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36ed0: R_X86_64_32S	.rodata.str1.1+0x2bec
   36ed4:	49 8b 9f 00 03 00 00 	mov    0x300(%r15),%rbx
   36edb:	e8 00 00 00 00       	callq  36ee0 <e1000_open+0x161>
			36edc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36ee0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36ee3: R_X86_64_32S	.rodata.str1.1+0x2c01
   36ee7:	e8 00 00 00 00       	callq  36eec <e1000_open+0x16d>
			36ee8: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36eec:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   36ef2:	49 8b 1e             	mov    (%r14),%rbx
   36ef5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36ef8: R_X86_64_32S	.rodata.str1.1+0xb4
   36efc:	e8 00 00 00 00       	callq  36f01 <e1000_open+0x182>
			36efd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36f01:	b8 04 00 00 00       	mov    $0x4,%eax
   36f06:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   36f0d:	89 03                	mov    %eax,(%rbx)
   36f0f:	eb 28                	jmp    36f39 <e1000_open+0x1ba>
   36f11:	48 89 df             	mov    %rbx,%rdi
   36f14:	e8 cd a2 fc ff       	callq  11e6 <e1000_release_hw_control>
   36f19:	48 89 df             	mov    %rbx,%rdi
   36f1c:	e8 92 02 fd ff       	callq  71b3 <e1000_power_down_phy>
   36f21:	48 89 df             	mov    %rbx,%rdi
   36f24:	e8 ac eb fe ff       	callq  25ad5 <e1000_free_all_rx_resources>
   36f29:	48 89 df             	mov    %rbx,%rdi
   36f2c:	e8 99 f5 fe ff       	callq  264ca <e1000_free_all_tx_resources>
   36f31:	48 89 df             	mov    %rbx,%rdi
   36f34:	e8 3d a5 fe ff       	callq  21476 <e1000_reset>
   36f39:	5a                   	pop    %rdx
   36f3a:	5b                   	pop    %rbx
   36f3b:	41 5c                	pop    %r12
   36f3d:	44 89 e8             	mov    %r13d,%eax
   36f40:	41 5d                	pop    %r13
   36f42:	41 5e                	pop    %r14
   36f44:	41 5f                	pop    %r15
   36f46:	c9                   	leaveq 
   36f47:	c3                   	retq   

0000000000036f48 <e1000_close>:
   36f48:	55                   	push   %rbp
   36f49:	48 89 e5             	mov    %rsp,%rbp
   36f4c:	41 57                	push   %r15
   36f4e:	41 56                	push   %r14
   36f50:	49 89 fe             	mov    %rdi,%r14
   36f53:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36f56: R_X86_64_32S	.rodata.str1.1+0x3b19
   36f5a:	4d 8d be b8 0b 00 00 	lea    0xbb8(%r14),%r15
   36f61:	41 55                	push   %r13
   36f63:	41 54                	push   %r12
   36f65:	53                   	push   %rbx
   36f66:	49 8d 9e 00 08 00 00 	lea    0x800(%r14),%rbx
   36f6d:	48 83 ec 08          	sub    $0x8,%rsp
   36f71:	e8 00 00 00 00       	callq  36f76 <e1000_close+0x2e>
			36f72: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36f76:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36f79: R_X86_64_32S	.rodata.str1.1+0x1be
   36f7d:	e8 00 00 00 00       	callq  36f82 <e1000_close+0x3a>
			36f7e: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36f82:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36f85: R_X86_64_32S	.rodata.str1.1+0x15d4
   36f89:	e8 00 00 00 00       	callq  36f8e <e1000_close+0x46>
			36f8a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   36f8e:	f6 83 c8 07 00 00 02 	testb  $0x2,0x7c8(%rbx)
   36f95:	74 15                	je     36fac <e1000_close+0x64>
   36f97:	31 d2                	xor    %edx,%edx
   36f99:	be 10 06 00 00       	mov    $0x610,%esi
   36f9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36fa1: R_X86_64_32S	str_888237591
   36fa5:	31 c0                	xor    %eax,%eax
   36fa7:	e8 00 00 00 00       	callq  36fac <e1000_close+0x64>
			36fa8: R_X86_64_PC32	warn_slowpath+0xfffffffffffffffc
   36fac:	48 89 df             	mov    %rbx,%rdi
   36faf:	e8 00 00 00 00       	callq  36fb4 <e1000_close+0x6c>
			36fb0: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   36fb4:	48 89 df             	mov    %rbx,%rdi
   36fb7:	e8 f7 01 fd ff       	callq  71b3 <e1000_power_down_phy>
   36fbc:	48 89 df             	mov    %rbx,%rdi
   36fbf:	e8 a8 42 fd ff       	callq  b26c <e1000_free_irq>
   36fc4:	48 89 df             	mov    %rbx,%rdi
   36fc7:	e8 fe f4 fe ff       	callq  264ca <e1000_free_all_tx_resources>
   36fcc:	48 89 df             	mov    %rbx,%rdi
   36fcf:	e8 01 eb fe ff       	callq  25ad5 <e1000_free_all_rx_resources>
   36fd4:	41 f6 87 c4 00 00 00 	testb  $0x2,0xc4(%r15)
   36fdb:	02 
   36fdc:	74 54                	je     37032 <e1000_close+0xea>
   36fde:	4c 8b ab 90 00 00 00 	mov    0x90(%rbx),%r13
   36fe5:	0f b7 b3 98 00 00 00 	movzwl 0x98(%rbx),%esi
   36fec:	4d 85 ed             	test   %r13,%r13
   36fef:	74 39                	je     3702a <e1000_close+0xe2>
   36ff1:	41 89 f4             	mov    %esi,%r12d
   36ff4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36ff7: R_X86_64_32S	.rodata.str1.1+0x19d5
   36ffb:	e8 00 00 00 00       	callq  37000 <e1000_close+0xb8>
			36ffc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37000:	44 89 e0             	mov    %r12d,%eax
   37003:	66 c1 e8 09          	shr    $0x9,%ax
   37007:	0f b7 c0             	movzwl %ax,%eax
   3700a:	49 8b 54 c5 20       	mov    0x20(%r13,%rax,8),%rdx
   3700f:	48 85 d2             	test   %rdx,%rdx
   37012:	74 0f                	je     37023 <e1000_close+0xdb>
   37014:	4c 89 e0             	mov    %r12,%rax
   37017:	25 ff 01 00 00       	and    $0x1ff,%eax
   3701c:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
   37021:	75 0f                	jne    37032 <e1000_close+0xea>
   37023:	0f b7 b3 98 00 00 00 	movzwl 0x98(%rbx),%esi
   3702a:	4c 89 f7             	mov    %r14,%rdi
   3702d:	e8 c1 1a fd ff       	callq  8af3 <e1000_vlan_rx_kill_vid>
   37032:	41 83 7f 10 10       	cmpl   $0x10,0x10(%r15)
   37037:	75 14                	jne    3704d <e1000_close+0x105>
   37039:	4c 89 ff             	mov    %r15,%rdi
   3703c:	e8 ae 91 fc ff       	callq  1ef <e1000_check_mng_mode>
   37041:	84 c0                	test   %al,%al
   37043:	74 08                	je     3704d <e1000_close+0x105>
   37045:	48 89 df             	mov    %rbx,%rdi
   37048:	e8 99 a1 fc ff       	callq  11e6 <e1000_release_hw_control>
   3704d:	59                   	pop    %rcx
   3704e:	5b                   	pop    %rbx
   3704f:	41 5c                	pop    %r12
   37051:	41 5d                	pop    %r13
   37053:	41 5e                	pop    %r14
   37055:	41 5f                	pop    %r15
   37057:	c9                   	leaveq 
   37058:	31 c0                	xor    %eax,%eax
   3705a:	c3                   	retq   

000000000003705b <e1000_set_settings>:
   3705b:	55                   	push   %rbp
   3705c:	48 89 e5             	mov    %rsp,%rbp
   3705f:	41 55                	push   %r13
   37061:	49 89 f5             	mov    %rsi,%r13
   37064:	41 54                	push   %r12
   37066:	53                   	push   %rbx
   37067:	48 89 fb             	mov    %rdi,%rbx
   3706a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3706d: R_X86_64_32S	.rodata.str1.1+0x3b25
   37071:	4c 8d a3 00 08 00 00 	lea    0x800(%rbx),%r12
   37078:	48 81 c3 b8 0b 00 00 	add    $0xbb8,%rbx
   3707f:	48 83 ec 08          	sub    $0x8,%rsp
   37083:	e8 00 00 00 00       	callq  37088 <e1000_set_settings+0x2d>
			37084: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37088:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3708b: R_X86_64_32S	.rodata.str1.1+0x1be
   3708f:	e8 00 00 00 00       	callq  37094 <e1000_set_settings+0x39>
			37090: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37094:	48 89 df             	mov    %rbx,%rdi
   37097:	e8 78 90 fc ff       	callq  114 <e1000_check_phy_reset_block>
   3709c:	85 c0                	test   %eax,%eax
   3709e:	74 36                	je     370d6 <e1000_set_settings+0x7b>
   370a0:	41 f6 84 24 c0 07 00 	testb  $0x1,0x7c0(%r12)
   370a7:	00 01 
   370a9:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
   370ae:	0f 84 14 01 00 00    	je     371c8 <e1000_set_settings+0x16d>
   370b4:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
   370bb:	00 
   370bc:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			370bf: R_X86_64_32S	str_927547631
   370c3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			370c6: R_X86_64_32S	str_498869265
   370ca:	31 c0                	xor    %eax,%eax
   370cc:	e8 00 00 00 00       	callq  370d1 <e1000_set_settings+0x76>
			370cd: R_X86_64_PC32	printk+0xfffffffffffffffc
   370d1:	e9 92 00 00 00       	jmpq   37168 <e1000_set_settings+0x10d>
   370d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			370d9: R_X86_64_32S	.rodata.str1.1+0x2b52
   370dd:	e8 00 00 00 00       	callq  370e2 <e1000_set_settings+0x87>
			370de: R_X86_64_PC32	record_function+0xfffffffffffffffc
   370e2:	f0 41 0f ba ac 24 c8 	lock btsl $0x1,0x7c8(%r12)
   370e9:	07 00 00 01 
   370ed:	19 c0                	sbb    %eax,%eax
   370ef:	85 c0                	test   %eax,%eax
   370f1:	74 0c                	je     370ff <e1000_set_settings+0xa4>
   370f3:	bf 01 00 00 00       	mov    $0x1,%edi
   370f8:	e8 53 0a fd ff       	callq  7b50 <msleep>
   370fd:	eb d7                	jmp    370d6 <e1000_set_settings+0x7b>
   370ff:	41 80 7d 12 01       	cmpb   $0x1,0x12(%r13)
   37104:	75 32                	jne    37138 <e1000_set_settings+0xdd>
   37106:	83 7b 1c 01          	cmpl   $0x1,0x1c(%rbx)
   3710a:	c6 83 ef 00 00 00 01 	movb   $0x1,0xef(%rbx)
   37111:	75 0b                	jne    3711e <e1000_set_settings+0xc3>
   37113:	66 c7 83 d2 00 00 00 	movw   $0x460,0xd2(%rbx)
   3711a:	60 04 
   3711c:	eb 0d                	jmp    3712b <e1000_set_settings+0xd0>
   3711e:	41 8b 45 08          	mov    0x8(%r13),%eax
   37122:	0c c0                	or     $0xc0,%al
   37124:	66 89 83 d2 00 00 00 	mov    %ax,0xd2(%rbx)
   3712b:	0f b7 83 d2 00 00 00 	movzwl 0xd2(%rbx),%eax
   37132:	41 89 45 08          	mov    %eax,0x8(%r13)
   37136:	eb 37                	jmp    3716f <e1000_set_settings+0x114>
   37138:	66 41 0f b6 75 0e    	movzbw 0xe(%r13),%si
   3713e:	4c 89 e7             	mov    %r12,%rdi
   37141:	41 03 75 0c          	add    0xc(%r13),%esi
   37145:	0f b7 f6             	movzwl %si,%esi
   37148:	e8 00 00 00 00       	callq  3714d <e1000_set_settings+0xf2>
			37149: R_X86_64_PC32	e1000_set_spd_dplx+0xfffffffffffffffc
   3714d:	85 c0                	test   %eax,%eax
   3714f:	74 1e                	je     3716f <e1000_set_settings+0x114>
   37151:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37154: R_X86_64_32S	.rodata.str1.1+0x2c01
   37158:	e8 00 00 00 00       	callq  3715d <e1000_set_settings+0x102>
			37159: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3715d:	f0 41 0f ba b4 24 c8 	lock btrl $0x1,0x7c8(%r12)
   37164:	07 00 00 01 
   37168:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
   3716d:	eb 59                	jmp    371c8 <e1000_set_settings+0x16d>
   3716f:	49 8b 9c 24 f0 02 00 	mov    0x2f0(%r12),%rbx
   37176:	00 
   37177:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3717a: R_X86_64_32S	.rodata.str1.1+0x15c6
   3717e:	e8 00 00 00 00       	callq  37183 <e1000_set_settings+0x128>
			3717f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37183:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37186: R_X86_64_32S	.rodata.str1.1+0x15d4
   3718a:	e8 00 00 00 00       	callq  3718f <e1000_set_settings+0x134>
			3718b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3718f:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   37193:	74 12                	je     371a7 <e1000_set_settings+0x14c>
   37195:	4c 89 e7             	mov    %r12,%rdi
   37198:	e8 00 00 00 00       	callq  3719d <e1000_set_settings+0x142>
			37199: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   3719d:	4c 89 e7             	mov    %r12,%rdi
   371a0:	e8 4e d2 fe ff       	callq  243f3 <e1000_up>
   371a5:	eb 08                	jmp    371af <e1000_set_settings+0x154>
   371a7:	4c 89 e7             	mov    %r12,%rdi
   371aa:	e8 c7 a2 fe ff       	callq  21476 <e1000_reset>
   371af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			371b2: R_X86_64_32S	.rodata.str1.1+0x2c01
   371b6:	e8 00 00 00 00       	callq  371bb <e1000_set_settings+0x160>
			371b7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   371bb:	f0 41 0f ba b4 24 c8 	lock btrl $0x1,0x7c8(%r12)
   371c2:	07 00 00 01 
   371c6:	31 c0                	xor    %eax,%eax
   371c8:	5e                   	pop    %rsi
   371c9:	5b                   	pop    %rbx
   371ca:	41 5c                	pop    %r12
   371cc:	41 5d                	pop    %r13
   371ce:	c9                   	leaveq 
   371cf:	c3                   	retq   

00000000000371d0 <e1000_set_pauseparam>:
   371d0:	55                   	push   %rbp
   371d1:	48 89 e5             	mov    %rsp,%rbp
   371d4:	41 55                	push   %r13
   371d6:	41 54                	push   %r12
   371d8:	49 89 f4             	mov    %rsi,%r12
   371db:	53                   	push   %rbx
   371dc:	48 89 fb             	mov    %rdi,%rbx
   371df:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			371e2: R_X86_64_32S	.rodata.str1.1+0x3b38
   371e6:	4c 8d ab 00 08 00 00 	lea    0x800(%rbx),%r13
   371ed:	48 81 c3 b8 0b 00 00 	add    $0xbb8,%rbx
   371f4:	48 83 ec 08          	sub    $0x8,%rsp
   371f8:	e8 00 00 00 00       	callq  371fd <e1000_set_pauseparam+0x2d>
			371f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
   371fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37200: R_X86_64_32S	.rodata.str1.1+0x1be
   37204:	e8 00 00 00 00       	callq  37209 <e1000_set_pauseparam+0x39>
			37205: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37209:	41 8b 44 24 04       	mov    0x4(%r12),%eax
   3720e:	41 88 85 70 01 00 00 	mov    %al,0x170(%r13)
   37215:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37218: R_X86_64_32S	.rodata.str1.1+0x2b52
   3721c:	e8 00 00 00 00       	callq  37221 <e1000_set_pauseparam+0x51>
			3721d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37221:	f0 41 0f ba ad c8 07 	lock btsl $0x1,0x7c8(%r13)
   37228:	00 00 01 
   3722b:	19 c0                	sbb    %eax,%eax
   3722d:	85 c0                	test   %eax,%eax
   3722f:	74 0c                	je     3723d <e1000_set_pauseparam+0x6d>
   37231:	bf 01 00 00 00       	mov    $0x1,%edi
   37236:	e8 15 09 fd ff       	callq  7b50 <msleep>
   3723b:	eb d8                	jmp    37215 <e1000_set_pauseparam+0x45>
   3723d:	41 83 7c 24 08 00    	cmpl   $0x0,0x8(%r12)
   37243:	74 11                	je     37256 <e1000_set_pauseparam+0x86>
   37245:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   3724b:	74 09                	je     37256 <e1000_set_pauseparam+0x86>
   3724d:	c7 43 38 03 00 00 00 	movl   $0x3,0x38(%rbx)
   37254:	eb 49                	jmp    3729f <e1000_set_pauseparam+0xcf>
   37256:	41 83 7c 24 08 00    	cmpl   $0x0,0x8(%r12)
   3725c:	74 11                	je     3726f <e1000_set_pauseparam+0x9f>
   3725e:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   37264:	75 09                	jne    3726f <e1000_set_pauseparam+0x9f>
   37266:	c7 43 38 01 00 00 00 	movl   $0x1,0x38(%rbx)
   3726d:	eb 30                	jmp    3729f <e1000_set_pauseparam+0xcf>
   3726f:	41 83 7c 24 08 00    	cmpl   $0x0,0x8(%r12)
   37275:	75 11                	jne    37288 <e1000_set_pauseparam+0xb8>
   37277:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   3727d:	74 09                	je     37288 <e1000_set_pauseparam+0xb8>
   3727f:	c7 43 38 02 00 00 00 	movl   $0x2,0x38(%rbx)
   37286:	eb 17                	jmp    3729f <e1000_set_pauseparam+0xcf>
   37288:	41 83 7c 24 08 00    	cmpl   $0x0,0x8(%r12)
   3728e:	75 0f                	jne    3729f <e1000_set_pauseparam+0xcf>
   37290:	41 83 7c 24 0c 00    	cmpl   $0x0,0xc(%r12)
   37296:	75 07                	jne    3729f <e1000_set_pauseparam+0xcf>
   37298:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   3729f:	8b 43 38             	mov    0x38(%rbx),%eax
   372a2:	89 83 8c 00 00 00    	mov    %eax,0x8c(%rbx)
   372a8:	41 80 bd 70 01 00 00 	cmpb   $0x1,0x170(%r13)
   372af:	01 
   372b0:	75 43                	jne    372f5 <e1000_set_pauseparam+0x125>
   372b2:	49 8b 9d f0 02 00 00 	mov    0x2f0(%r13),%rbx
   372b9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			372bc: R_X86_64_32S	.rodata.str1.1+0x15c6
   372c0:	e8 00 00 00 00       	callq  372c5 <e1000_set_pauseparam+0xf5>
			372c1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   372c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			372c8: R_X86_64_32S	.rodata.str1.1+0x15d4
   372cc:	e8 00 00 00 00       	callq  372d1 <e1000_set_pauseparam+0x101>
			372cd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   372d1:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   372d5:	74 12                	je     372e9 <e1000_set_pauseparam+0x119>
   372d7:	4c 89 ef             	mov    %r13,%rdi
   372da:	e8 00 00 00 00       	callq  372df <e1000_set_pauseparam+0x10f>
			372db: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   372df:	4c 89 ef             	mov    %r13,%rdi
   372e2:	e8 0c d1 fe ff       	callq  243f3 <e1000_up>
   372e7:	eb 08                	jmp    372f1 <e1000_set_pauseparam+0x121>
   372e9:	4c 89 ef             	mov    %r13,%rdi
   372ec:	e8 85 a1 fe ff       	callq  21476 <e1000_reset>
   372f1:	31 db                	xor    %ebx,%ebx
   372f3:	eb 1a                	jmp    3730f <e1000_set_pauseparam+0x13f>
   372f5:	83 7b 1c 01          	cmpl   $0x1,0x1c(%rbx)
   372f9:	75 0a                	jne    37305 <e1000_set_pauseparam+0x135>
   372fb:	48 89 df             	mov    %rbx,%rdi
   372fe:	e8 c0 8e fe ff       	callq  201c3 <e1000_setup_link>
   37303:	eb 08                	jmp    3730d <e1000_set_pauseparam+0x13d>
   37305:	48 89 df             	mov    %rbx,%rdi
   37308:	e8 03 92 fc ff       	callq  510 <e1000_force_mac_fc>
   3730d:	89 c3                	mov    %eax,%ebx
   3730f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37312: R_X86_64_32S	.rodata.str1.1+0x2c01
   37316:	e8 00 00 00 00       	callq  3731b <e1000_set_pauseparam+0x14b>
			37317: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3731b:	f0 41 0f ba b5 c8 07 	lock btrl $0x1,0x7c8(%r13)
   37322:	00 00 01 
   37325:	5f                   	pop    %rdi
   37326:	89 d8                	mov    %ebx,%eax
   37328:	5b                   	pop    %rbx
   37329:	41 5c                	pop    %r12
   3732b:	41 5d                	pop    %r13
   3732d:	c9                   	leaveq 
   3732e:	c3                   	retq   

000000000003732f <e1000_diag_test>:
   3732f:	55                   	push   %rbp
   37330:	48 89 e5             	mov    %rsp,%rbp
   37333:	41 57                	push   %r15
   37335:	41 56                	push   %r14
   37337:	49 89 d6             	mov    %rdx,%r14
   3733a:	41 55                	push   %r13
   3733c:	41 54                	push   %r12
   3733e:	53                   	push   %rbx
   3733f:	48 83 ec 78          	sub    $0x78,%rsp
   37343:	48 89 bd 68 ff ff ff 	mov    %rdi,0xffffffffffffff68(%rbp)
   3734a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3734d: R_X86_64_32S	.rodata.str1.1+0x3b4d
   37351:	48 89 b5 60 ff ff ff 	mov    %rsi,0xffffffffffffff60(%rbp)
   37358:	e8 00 00 00 00       	callq  3735d <e1000_diag_test+0x2e>
			37359: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3735d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37360: R_X86_64_32S	.rodata.str1.1+0x1be
   37364:	e8 00 00 00 00       	callq  37369 <e1000_diag_test+0x3a>
			37365: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37369:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   37370:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37373: R_X86_64_32S	.rodata.str1.1+0x15c6
   37377:	4c 8b ad 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%r13
   3737e:	48 05 b8 0b 00 00    	add    $0xbb8,%rax
   37384:	49 81 c5 00 08 00 00 	add    $0x800,%r13
   3738b:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   37392:	e8 00 00 00 00       	callq  37397 <e1000_diag_test+0x68>
			37393: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37397:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3739a: R_X86_64_32S	.rodata.str1.1+0x15d4
   3739e:	e8 00 00 00 00       	callq  373a3 <e1000_diag_test+0x74>
			3739f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   373a3:	48 8b 95 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdx
   373aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			373ad: R_X86_64_32S	.rodata.str1.1+0x2ac7
   373b1:	48 8b 5a 48          	mov    0x48(%rdx),%rbx
   373b5:	e8 00 00 00 00       	callq  373ba <e1000_diag_test+0x8b>
			373b6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   373ba:	48 8b 8d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rcx
   373c1:	f0 0f ba a9 c8 0f 00 	lock btsl $0x0,0xfc8(%rcx)
   373c8:	00 00 
   373ca:	48 8b 85 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rax
   373d1:	83 78 04 01          	cmpl   $0x1,0x4(%rax)
   373d5:	41 8b 85 c0 07 00 00 	mov    0x7c0(%r13),%eax
   373dc:	0f 85 c4 0a 00 00    	jne    37ea6 <e1000_diag_test+0xb77>
   373e2:	48 8b 95 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdx
   373e9:	48 8b 8d 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rcx
   373f0:	f6 c4 20             	test   $0x20,%ah
   373f3:	66 8b 92 d2 00 00 00 	mov    0xd2(%rdx),%dx
   373fa:	66 89 55 80          	mov    %dx,0xffffffffffffff80(%rbp)
   373fe:	48 8b 95 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdx
   37405:	8a 89 f1 00 00 00    	mov    0xf1(%rcx),%cl
   3740b:	88 4d 82             	mov    %cl,0xffffffffffffff82(%rbp)
   3740e:	8a 92 ef 00 00 00    	mov    0xef(%rdx),%dl
   37414:	88 55 83             	mov    %dl,0xffffffffffffff83(%rbp)
   37417:	74 1c                	je     37435 <e1000_diag_test+0x106>
   37419:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
   37420:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			37423: R_X86_64_32S	str_351640327
   37427:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3742a: R_X86_64_32S	str_469340471
   3742e:	31 c0                	xor    %eax,%eax
   37430:	e8 00 00 00 00       	callq  37435 <e1000_diag_test+0x106>
			37431: R_X86_64_PC32	printk+0xfffffffffffffffc
   37435:	49 8d 76 20          	lea    0x20(%r14),%rsi
   37439:	4c 89 ef             	mov    %r13,%rdi
   3743c:	e8 4a 68 fe ff       	callq  1dc8b <e1000_link_test>
   37441:	85 c0                	test   %eax,%eax
   37443:	74 0b                	je     37450 <e1000_diag_test+0x121>
   37445:	48 8b 8d 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rcx
   3744c:	83 49 04 02          	orl    $0x2,0x4(%rcx)
   37450:	88 d8                	mov    %bl,%al
   37452:	24 01                	and    $0x1,%al
   37454:	88 85 7f ff ff ff    	mov    %al,0xffffffffffffff7f(%rbp)
   3745a:	74 0e                	je     3746a <e1000_diag_test+0x13b>
   3745c:	48 8b bd 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdi
   37463:	e8 cd 27 fe ff       	callq  19c35 <dev_close>
   37468:	eb 08                	jmp    37472 <e1000_diag_test+0x143>
   3746a:	4c 89 ef             	mov    %r13,%rdi
   3746d:	e8 04 a0 fe ff       	callq  21476 <e1000_reset>
   37472:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37475: R_X86_64_32S	.rodata.str1.1+0x3b5d
   37479:	e8 00 00 00 00       	callq  3747e <e1000_diag_test+0x14f>
			3747a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3747e:	49 8d 95 b8 03 00 00 	lea    0x3b8(%r13),%rdx
   37485:	48 89 55 88          	mov    %rdx,0xffffffffffffff88(%rbp)
   37489:	8b 42 10             	mov    0x10(%rdx),%eax
   3748c:	83 f8 0e             	cmp    $0xe,%eax
   3748f:	74 1c                	je     374ad <e1000_diag_test+0x17e>
   37491:	83 f8 0f             	cmp    $0xf,%eax
   37494:	74 17                	je     374ad <e1000_diag_test+0x17e>
   37496:	83 f8 11             	cmp    $0x11,%eax
   37499:	74 12                	je     374ad <e1000_diag_test+0x17e>
   3749b:	83 f8 10             	cmp    $0x10,%eax
   3749e:	74 15                	je     374b5 <e1000_diag_test+0x186>
   374a0:	83 f8 12             	cmp    $0x12,%eax
   374a3:	41 bf 33 f8 ff ff    	mov    $0xfffff833,%r15d
   374a9:	75 10                	jne    374bb <e1000_diag_test+0x18c>
   374ab:	eb 08                	jmp    374b5 <e1000_diag_test+0x186>
   374ad:	41 bf ff f3 ff 7f    	mov    $0x7ffff3ff,%r15d
   374b3:	eb 06                	jmp    374bb <e1000_diag_test+0x18c>
   374b5:	41 bf 33 f0 ff 7f    	mov    $0x7ffff033,%r15d
   374bb:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   374bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			374c2: R_X86_64_32S	.rodata.str1.1+0xae
   374c6:	48 8b 19             	mov    (%rcx),%rbx
   374c9:	e8 00 00 00 00       	callq  374ce <e1000_diag_test+0x19f>
			374ca: R_X86_64_PC32	record_function+0xfffffffffffffffc
   374ce:	8b 43 08             	mov    0x8(%rbx),%eax
   374d1:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   374d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			374d8: R_X86_64_32S	.rodata.str1.1+0xae
   374dc:	89 45 84             	mov    %eax,0xffffffffffffff84(%rbp)
   374df:	48 8b 1a             	mov    (%rdx),%rbx
   374e2:	e8 00 00 00 00       	callq  374e7 <e1000_diag_test+0x1b8>
			374e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   374e7:	44 8b 63 08          	mov    0x8(%rbx),%r12d
   374eb:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   374ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			374f2: R_X86_64_32S	.rodata.str1.1+0xb4
   374f6:	45 21 fc             	and    %r15d,%r12d
   374f9:	48 8b 19             	mov    (%rcx),%rbx
   374fc:	e8 00 00 00 00       	callq  37501 <e1000_diag_test+0x1d2>
			374fd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37501:	48 83 c3 08          	add    $0x8,%rbx
   37505:	44 89 3b             	mov    %r15d,(%rbx)
   37508:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3750c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3750f: R_X86_64_32S	.rodata.str1.1+0xae
   37513:	48 8b 18             	mov    (%rax),%rbx
   37516:	e8 00 00 00 00       	callq  3751b <e1000_diag_test+0x1ec>
			37517: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3751b:	8b 4b 08             	mov    0x8(%rbx),%ecx
   3751e:	44 21 f9             	and    %r15d,%ecx
   37521:	41 39 cc             	cmp    %ecx,%r12d
   37524:	74 35                	je     3755b <e1000_diag_test+0x22c>
   37526:	41 f6 85 c0 07 00 00 	testb  $0x1,0x7c0(%r13)
   3752d:	01 
   3752e:	74 1f                	je     3754f <e1000_diag_test+0x220>
   37530:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
   37537:	45 89 e0             	mov    %r12d,%r8d
   3753a:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			3753d: R_X86_64_32S	str_886397420
   37541:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37544: R_X86_64_32S	str_265127551
   37548:	31 c0                	xor    %eax,%eax
   3754a:	e8 00 00 00 00       	callq  3754f <e1000_diag_test+0x220>
			3754b: R_X86_64_PC32	printk+0xfffffffffffffffc
   3754f:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   37556:	e9 8b 05 00 00       	jmpq   37ae6 <e1000_diag_test+0x7b7>
   3755b:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   3755f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37562: R_X86_64_32S	.rodata.str1.1+0xb4
   37566:	48 8b 1a             	mov    (%rdx),%rbx
   37569:	e8 00 00 00 00       	callq  3756e <e1000_diag_test+0x23f>
			3756a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3756e:	8b 4d 84             	mov    0xffffffffffffff84(%rbp),%ecx
   37571:	48 83 c3 08          	add    $0x8,%rbx
   37575:	89 0b                	mov    %ecx,(%rbx)
   37577:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3757b:	83 78 10 12          	cmpl   $0x12,0x10(%rax)
   3757f:	0f 84 82 00 00 00    	je     37607 <e1000_diag_test+0x2d8>
   37585:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37589:	ba 28 00 00 00       	mov    $0x28,%edx
   3758e:	4c 89 f6             	mov    %r14,%rsi
   37591:	44 89 c1             	mov    %r8d,%ecx
   37594:	4c 89 ef             	mov    %r13,%rdi
   37597:	e8 9e c7 fc ff       	callq  3d3a <reg_pattern_test>
   3759c:	84 c0                	test   %al,%al
   3759e:	0f 85 42 05 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   375a4:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   375a8:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   375ad:	ba 2c 00 00 00       	mov    $0x2c,%edx
   375b2:	4c 89 f6             	mov    %r14,%rsi
   375b5:	4c 89 ef             	mov    %r13,%rdi
   375b8:	e8 7d c7 fc ff       	callq  3d3a <reg_pattern_test>
   375bd:	84 c0                	test   %al,%al
   375bf:	0f 85 21 05 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   375c5:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   375c9:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   375ce:	ba 30 00 00 00       	mov    $0x30,%edx
   375d3:	4c 89 f6             	mov    %r14,%rsi
   375d6:	4c 89 ef             	mov    %r13,%rdi
   375d9:	e8 5c c7 fc ff       	callq  3d3a <reg_pattern_test>
   375de:	84 c0                	test   %al,%al
   375e0:	0f 85 00 05 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   375e6:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   375ea:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   375ef:	ba 38 00 00 00       	mov    $0x38,%edx
   375f4:	4c 89 f6             	mov    %r14,%rsi
   375f7:	4c 89 ef             	mov    %r13,%rdi
   375fa:	e8 3b c7 fc ff       	callq  3d3a <reg_pattern_test>
   375ff:	84 c0                	test   %al,%al
   37601:	0f 85 df 04 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37607:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   3760b:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   37610:	4c 89 f6             	mov    %r14,%rsi
   37613:	4c 89 ef             	mov    %r13,%rdi
   37616:	8b 42 10             	mov    0x10(%rdx),%eax
   37619:	83 f8 03             	cmp    $0x3,%eax
   3761c:	19 d2                	sbb    %edx,%edx
   3761e:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37622:	81 e2 e8 d8 ff ff    	and    $0xffffd8e8,%edx
   37628:	81 c2 20 28 00 00    	add    $0x2820,%edx
   3762e:	e8 07 c7 fc ff       	callq  3d3a <reg_pattern_test>
   37633:	84 c0                	test   %al,%al
   37635:	0f 85 ab 04 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   3763b:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   3763f:	4c 89 f6             	mov    %r14,%rsi
   37642:	4c 89 ef             	mov    %r13,%rdi
   37645:	8b 41 10             	mov    0x10(%rcx),%eax
   37648:	83 f8 03             	cmp    $0x3,%eax
   3764b:	19 d2                	sbb    %edx,%edx
   3764d:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37651:	81 e2 10 d9 ff ff    	and    $0xffffd910,%edx
   37657:	44 89 c1             	mov    %r8d,%ecx
   3765a:	81 c2 04 28 00 00    	add    $0x2804,%edx
   37660:	e8 d5 c6 fc ff       	callq  3d3a <reg_pattern_test>
   37665:	84 c0                	test   %al,%al
   37667:	0f 85 79 04 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   3766d:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   37671:	41 b8 ff ff 0f 00    	mov    $0xfffff,%r8d
   37677:	b9 80 ff 0f 00       	mov    $0xfff80,%ecx
   3767c:	4c 89 f6             	mov    %r14,%rsi
   3767f:	4c 89 ef             	mov    %r13,%rdi
   37682:	8b 42 10             	mov    0x10(%rdx),%eax
   37685:	83 f8 03             	cmp    $0x3,%eax
   37688:	19 d2                	sbb    %edx,%edx
   3768a:	81 e2 10 d9 ff ff    	and    $0xffffd910,%edx
   37690:	81 c2 08 28 00 00    	add    $0x2808,%edx
   37696:	e8 9f c6 fc ff       	callq  3d3a <reg_pattern_test>
   3769b:	84 c0                	test   %al,%al
   3769d:	0f 85 43 04 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   376a3:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   376a7:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
   376ad:	4c 89 f6             	mov    %r14,%rsi
   376b0:	4c 89 ef             	mov    %r13,%rdi
   376b3:	8b 41 10             	mov    0x10(%rcx),%eax
   376b6:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   376bb:	83 f8 03             	cmp    $0x3,%eax
   376be:	19 d2                	sbb    %edx,%edx
   376c0:	81 e2 10 d9 ff ff    	and    $0xffffd910,%edx
   376c6:	81 c2 10 28 00 00    	add    $0x2810,%edx
   376cc:	e8 69 c6 fc ff       	callq  3d3a <reg_pattern_test>
   376d1:	84 c0                	test   %al,%al
   376d3:	0f 85 0d 04 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   376d9:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   376dd:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
   376e3:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   376e8:	4c 89 f6             	mov    %r14,%rsi
   376eb:	4c 89 ef             	mov    %r13,%rdi
   376ee:	8b 42 10             	mov    0x10(%rdx),%eax
   376f1:	83 f8 03             	cmp    $0x3,%eax
   376f4:	19 d2                	sbb    %edx,%edx
   376f6:	81 e2 10 d9 ff ff    	and    $0xffffd910,%edx
   376fc:	81 c2 18 28 00 00    	add    $0x2818,%edx
   37702:	e8 33 c6 fc ff       	callq  3d3a <reg_pattern_test>
   37707:	84 c0                	test   %al,%al
   37709:	0f 85 d7 03 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   3770f:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   37713:	41 b8 f8 ff 00 00    	mov    $0xfff8,%r8d
   37719:	4c 89 f6             	mov    %r14,%rsi
   3771c:	4c 89 ef             	mov    %r13,%rdi
   3771f:	8b 41 10             	mov    0x10(%rcx),%eax
   37722:	b9 f8 ff 00 00       	mov    $0xfff8,%ecx
   37727:	83 f8 03             	cmp    $0x3,%eax
   3772a:	19 d2                	sbb    %edx,%edx
   3772c:	81 e2 f8 df ff ff    	and    $0xffffdff8,%edx
   37732:	81 c2 68 21 00 00    	add    $0x2168,%edx
   37738:	e8 fd c5 fc ff       	callq  3d3a <reg_pattern_test>
   3773d:	84 c0                	test   %al,%al
   3773f:	0f 85 a1 03 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37745:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
   3774b:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   37750:	ba 70 01 00 00       	mov    $0x170,%edx
   37755:	4c 89 f6             	mov    %r14,%rsi
   37758:	4c 89 ef             	mov    %r13,%rdi
   3775b:	e8 da c5 fc ff       	callq  3d3a <reg_pattern_test>
   37760:	84 c0                	test   %al,%al
   37762:	0f 85 7e 03 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37768:	41 b8 ff ff ff 3f    	mov    $0x3fffffff,%r8d
   3776e:	b9 ff ff ff 3f       	mov    $0x3fffffff,%ecx
   37773:	ba 10 04 00 00       	mov    $0x410,%edx
   37778:	4c 89 f6             	mov    %r14,%rsi
   3777b:	4c 89 ef             	mov    %r13,%rdi
   3777e:	e8 b7 c5 fc ff       	callq  3d3a <reg_pattern_test>
   37783:	84 c0                	test   %al,%al
   37785:	0f 85 5b 03 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   3778b:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   3778f:	4c 89 f6             	mov    %r14,%rsi
   37792:	4c 89 ef             	mov    %r13,%rdi
   37795:	8b 42 10             	mov    0x10(%rdx),%eax
   37798:	83 f8 03             	cmp    $0x3,%eax
   3779b:	19 d2                	sbb    %edx,%edx
   3779d:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   377a1:	81 e2 20 cc ff ff    	and    $0xffffcc20,%edx
   377a7:	44 89 c1             	mov    %r8d,%ecx
   377aa:	81 c2 04 38 00 00    	add    $0x3804,%edx
   377b0:	e8 85 c5 fc ff       	callq  3d3a <reg_pattern_test>
   377b5:	84 c0                	test   %al,%al
   377b7:	0f 85 29 03 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   377bd:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   377c1:	41 b8 ff ff 0f 00    	mov    $0xfffff,%r8d
   377c7:	4c 89 f6             	mov    %r14,%rsi
   377ca:	4c 89 ef             	mov    %r13,%rdi
   377cd:	8b 41 10             	mov    0x10(%rcx),%eax
   377d0:	b9 80 ff 0f 00       	mov    $0xfff80,%ecx
   377d5:	83 f8 03             	cmp    $0x3,%eax
   377d8:	19 d2                	sbb    %edx,%edx
   377da:	81 e2 20 cc ff ff    	and    $0xffffcc20,%edx
   377e0:	81 c2 08 38 00 00    	add    $0x3808,%edx
   377e6:	e8 4f c5 fc ff       	callq  3d3a <reg_pattern_test>
   377eb:	84 c0                	test   %al,%al
   377ed:	0f 85 f3 02 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   377f3:	45 31 c0             	xor    %r8d,%r8d
   377f6:	83 c9 ff             	or     $0xffffffffffffffff,%ecx
   377f9:	ba 00 01 00 00       	mov    $0x100,%edx
   377fe:	4c 89 f6             	mov    %r14,%rsi
   37801:	4c 89 ef             	mov    %r13,%rdi
   37804:	e8 84 c4 fc ff       	callq  3c8d <reg_set_and_check>
   37809:	84 c0                	test   %al,%al
   3780b:	0f 85 d5 02 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37811:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   37815:	bb 3e b3 c3 06       	mov    $0x6c3b33e,%ebx
   3781a:	41 b8 fb ff 3f 00    	mov    $0x3ffffb,%r8d
   37820:	ba 00 01 00 00       	mov    $0x100,%edx
   37825:	4c 89 f6             	mov    %r14,%rsi
   37828:	4c 89 ef             	mov    %r13,%rdi
   3782b:	83 78 10 12          	cmpl   $0x12,0x10(%rax)
   3782f:	b8 fe b3 df 06       	mov    $0x6dfb3fe,%eax
   37834:	0f 45 d8             	cmovne %eax,%ebx
   37837:	89 d9                	mov    %ebx,%ecx
   37839:	e8 4f c4 fc ff       	callq  3c8d <reg_set_and_check>
   3783e:	84 c0                	test   %al,%al
   37840:	0f 85 a0 02 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37846:	45 31 c0             	xor    %r8d,%r8d
   37849:	83 c9 ff             	or     $0xffffffffffffffff,%ecx
   3784c:	ba 00 04 00 00       	mov    $0x400,%edx
   37851:	4c 89 f6             	mov    %r14,%rsi
   37854:	4c 89 ef             	mov    %r13,%rdi
   37857:	e8 31 c4 fc ff       	callq  3c8d <reg_set_and_check>
   3785c:	84 c0                	test   %al,%al
   3785e:	0f 85 82 02 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37864:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   37868:	83 7a 10 02          	cmpl   $0x2,0x10(%rdx)
   3786c:	0f 86 57 01 00 00    	jbe    379c9 <e1000_diag_test+0x69a>
   37872:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37876:	89 d9                	mov    %ebx,%ecx
   37878:	ba 00 01 00 00       	mov    $0x100,%edx
   3787d:	4c 89 f6             	mov    %r14,%rsi
   37880:	4c 89 ef             	mov    %r13,%rdi
   37883:	e8 05 c4 fc ff       	callq  3c8d <reg_set_and_check>
   37888:	84 c0                	test   %al,%al
   3788a:	0f 85 56 02 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37890:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   37894:	4c 89 f6             	mov    %r14,%rsi
   37897:	4c 89 ef             	mov    %r13,%rdi
   3789a:	8b 41 10             	mov    0x10(%rcx),%eax
   3789d:	b9 f0 ff ff ff       	mov    $0xfffffff0,%ecx
   378a2:	83 f8 03             	cmp    $0x3,%eax
   378a5:	19 d2                	sbb    %edx,%edx
   378a7:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   378ab:	81 e2 10 d9 ff ff    	and    $0xffffd910,%edx
   378b1:	81 c2 00 28 00 00    	add    $0x2800,%edx
   378b7:	e8 7e c4 fc ff       	callq  3d3a <reg_pattern_test>
   378bc:	84 c0                	test   %al,%al
   378be:	0f 85 22 02 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   378c4:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   378c8:	83 78 10 12          	cmpl   $0x12,0x10(%rax)
   378cc:	74 23                	je     378f1 <e1000_diag_test+0x5c2>
   378ce:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
   378d4:	b9 ff ff 00 c0       	mov    $0xc000ffff,%ecx
   378d9:	ba 78 01 00 00       	mov    $0x178,%edx
   378de:	4c 89 f6             	mov    %r14,%rsi
   378e1:	4c 89 ef             	mov    %r13,%rdi
   378e4:	e8 51 c4 fc ff       	callq  3d3a <reg_pattern_test>
   378e9:	84 c0                	test   %al,%al
   378eb:	0f 85 f5 01 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   378f1:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   378f5:	b9 f0 ff ff ff       	mov    $0xfffffff0,%ecx
   378fa:	4c 89 f6             	mov    %r14,%rsi
   378fd:	4c 89 ef             	mov    %r13,%rdi
   37900:	8b 42 10             	mov    0x10(%rdx),%eax
   37903:	83 f8 03             	cmp    $0x3,%eax
   37906:	19 d2                	sbb    %edx,%edx
   37908:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   3790c:	81 e2 20 cc ff ff    	and    $0xffffcc20,%edx
   37912:	81 c2 00 38 00 00    	add    $0x3800,%edx
   37918:	e8 1d c4 fc ff       	callq  3d3a <reg_pattern_test>
   3791d:	84 c0                	test   %al,%al
   3791f:	0f 85 c1 01 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37925:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   37929:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
   3792f:	4c 89 f6             	mov    %r14,%rsi
   37932:	4c 89 ef             	mov    %r13,%rdi
   37935:	8b 41 10             	mov    0x10(%rcx),%eax
   37938:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   3793d:	83 f8 03             	cmp    $0x3,%eax
   37940:	19 d2                	sbb    %edx,%edx
   37942:	81 e2 20 cc ff ff    	and    $0xffffcc20,%edx
   37948:	81 c2 20 38 00 00    	add    $0x3820,%edx
   3794e:	e8 e7 c3 fc ff       	callq  3d3a <reg_pattern_test>
   37953:	84 c0                	test   %al,%al
   37955:	0f 85 8b 01 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   3795b:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3795f:	31 db                	xor    %ebx,%ebx
   37961:	41 bf 04 00 00 00    	mov    $0x4,%r15d
   37967:	41 bc 04 00 00 00    	mov    $0x4,%r12d
   3796d:	83 78 10 12          	cmpl   $0x12,0x10(%rax)
   37971:	c7 45 94 00 00 00 00 	movl   $0x0,0xffffffffffffff94(%rbp)
   37978:	0f 95 c3             	setne  %bl
   3797b:	8d 5c db 06          	lea    0x6(%rbx,%rbx,8),%ebx
   3797f:	39 5d 94             	cmp    %ebx,0xffffffffffffff94(%rbp)
   37982:	0f 84 e9 00 00 00    	je     37a71 <e1000_diag_test+0x742>
   37988:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   3798c:	83 7a 10 02          	cmpl   $0x2,0x10(%rdx)
   37990:	76 0a                	jbe    3799c <e1000_diag_test+0x66d>
   37992:	41 8d 94 24 00 54 00 	lea    0x5400(%r12),%edx
   37999:	00 
   3799a:	eb 04                	jmp    379a0 <e1000_diag_test+0x671>
   3799c:	41 8d 57 40          	lea    0x40(%r15),%edx
   379a0:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   379a4:	b9 ff ff 03 80       	mov    $0x8003ffff,%ecx
   379a9:	4c 89 f6             	mov    %r14,%rsi
   379ac:	4c 89 ef             	mov    %r13,%rdi
   379af:	e8 86 c3 fc ff       	callq  3d3a <reg_pattern_test>
   379b4:	84 c0                	test   %al,%al
   379b6:	0f 85 2a 01 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   379bc:	ff 45 94             	incl   0xffffffffffffff94(%rbp)
   379bf:	41 83 c4 08          	add    $0x8,%r12d
   379c3:	41 83 c7 08          	add    $0x8,%r15d
   379c7:	eb b6                	jmp    3797f <e1000_diag_test+0x650>
   379c9:	83 c9 ff             	or     $0xffffffffffffffff,%ecx
   379cc:	41 b8 ff ff ff 01    	mov    $0x1ffffff,%r8d
   379d2:	ba 00 01 00 00       	mov    $0x100,%edx
   379d7:	4c 89 f6             	mov    %r14,%rsi
   379da:	4c 89 ef             	mov    %r13,%rdi
   379dd:	e8 ab c2 fc ff       	callq  3c8d <reg_set_and_check>
   379e2:	84 c0                	test   %al,%al
   379e4:	0f 85 fc 00 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   379ea:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   379ee:	4c 89 f6             	mov    %r14,%rsi
   379f1:	4c 89 ef             	mov    %r13,%rdi
   379f4:	8b 41 10             	mov    0x10(%rcx),%eax
   379f7:	b9 00 f0 ff ff       	mov    $0xfffff000,%ecx
   379fc:	83 f8 03             	cmp    $0x3,%eax
   379ff:	19 d2                	sbb    %edx,%edx
   37a01:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37a05:	81 e2 10 d9 ff ff    	and    $0xffffd910,%edx
   37a0b:	81 c2 00 28 00 00    	add    $0x2800,%edx
   37a11:	e8 24 c3 fc ff       	callq  3d3a <reg_pattern_test>
   37a16:	84 c0                	test   %al,%al
   37a18:	0f 85 c8 00 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37a1e:	41 b8 ff ff 00 00    	mov    $0xffff,%r8d
   37a24:	b9 ff ff 00 00       	mov    $0xffff,%ecx
   37a29:	ba 78 01 00 00       	mov    $0x178,%edx
   37a2e:	4c 89 f6             	mov    %r14,%rsi
   37a31:	4c 89 ef             	mov    %r13,%rdi
   37a34:	e8 01 c3 fc ff       	callq  3d3a <reg_pattern_test>
   37a39:	84 c0                	test   %al,%al
   37a3b:	0f 85 a5 00 00 00    	jne    37ae6 <e1000_diag_test+0x7b7>
   37a41:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   37a45:	b9 00 f0 ff ff       	mov    $0xfffff000,%ecx
   37a4a:	4c 89 f6             	mov    %r14,%rsi
   37a4d:	4c 89 ef             	mov    %r13,%rdi
   37a50:	8b 42 10             	mov    0x10(%rdx),%eax
   37a53:	83 f8 03             	cmp    $0x3,%eax
   37a56:	19 d2                	sbb    %edx,%edx
   37a58:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37a5c:	81 e2 20 cc ff ff    	and    $0xffffcc20,%edx
   37a62:	81 c2 00 38 00 00    	add    $0x3800,%edx
   37a68:	e8 cd c2 fc ff       	callq  3d3a <reg_pattern_test>
   37a6d:	84 c0                	test   %al,%al
   37a6f:	75 75                	jne    37ae6 <e1000_diag_test+0x7b7>
   37a71:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   37a75:	c7 45 c4 20 00 00 00 	movl   $0x20,0xffffffffffffffc4(%rbp)
   37a7c:	b8 80 00 00 00       	mov    $0x80,%eax
   37a81:	83 79 10 12          	cmpl   $0x12,0x10(%rcx)
   37a85:	0f 44 45 c4          	cmove  0xffffffffffffffc4(%rbp),%eax
   37a89:	45 31 ff             	xor    %r15d,%r15d
   37a8c:	45 31 e4             	xor    %r12d,%r12d
   37a8f:	31 db                	xor    %ebx,%ebx
   37a91:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   37a94:	44 3b 7d c4          	cmp    0xffffffffffffffc4(%rbp),%r15d
   37a98:	74 3a                	je     37ad4 <e1000_diag_test+0x7a5>
   37a9a:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   37a9e:	8d 93 00 52 00 00    	lea    0x5200(%rbx),%edx
   37aa4:	83 78 10 02          	cmpl   $0x2,0x10(%rax)
   37aa8:	77 08                	ja     37ab2 <e1000_diag_test+0x783>
   37aaa:	41 8d 94 24 00 02 00 	lea    0x200(%r12),%edx
   37ab1:	00 
   37ab2:	41 83 c8 ff          	or     $0xffffffffffffffff,%r8d
   37ab6:	4c 89 f6             	mov    %r14,%rsi
   37ab9:	4c 89 ef             	mov    %r13,%rdi
   37abc:	44 89 c1             	mov    %r8d,%ecx
   37abf:	e8 76 c2 fc ff       	callq  3d3a <reg_pattern_test>
   37ac4:	84 c0                	test   %al,%al
   37ac6:	75 1e                	jne    37ae6 <e1000_diag_test+0x7b7>
   37ac8:	41 ff c7             	inc    %r15d
   37acb:	83 c3 04             	add    $0x4,%ebx
   37ace:	41 83 c4 04          	add    $0x4,%r12d
   37ad2:	eb c0                	jmp    37a94 <e1000_diag_test+0x765>
   37ad4:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   37adb:	eb 14                	jmp    37af1 <e1000_diag_test+0x7c2>
   37add:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   37ae4:	eb 63                	jmp    37b49 <e1000_diag_test+0x81a>
   37ae6:	48 8b 95 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rdx
   37aed:	83 4a 04 02          	orl    $0x2,0x4(%rdx)
   37af1:	4c 89 ef             	mov    %r13,%rdi
   37af4:	49 8d 5e 08          	lea    0x8(%r14),%rbx
   37af8:	45 31 ff             	xor    %r15d,%r15d
   37afb:	e8 76 99 fe ff       	callq  21476 <e1000_reset>
   37b00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37b03: R_X86_64_32S	.rodata.str1.1+0x3b6c
   37b07:	45 31 e4             	xor    %r12d,%r12d
   37b0a:	e8 00 00 00 00       	callq  37b0f <e1000_diag_test+0x7e0>
			37b0b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37b0f:	49 8d 8d b8 03 00 00 	lea    0x3b8(%r13),%rcx
   37b16:	49 c7 46 08 00 00 00 	movq   $0x0,0x8(%r14)
   37b1d:	00 
   37b1e:	48 89 4d 98          	mov    %rcx,0xffffffffffffff98(%rbp)
   37b22:	48 8b 7d 98          	mov    0xffffffffffffff98(%rbp),%rdi
   37b26:	48 8d 4d d6          	lea    0xffffffffffffffd6(%rbp),%rcx
   37b2a:	ba 01 00 00 00       	mov    $0x1,%edx
   37b2f:	44 89 e6             	mov    %r12d,%esi
   37b32:	e8 d8 4b fe ff       	callq  1c70f <e1000_read_eeprom>
   37b37:	85 c0                	test   %eax,%eax
   37b39:	78 a2                	js     37add <e1000_diag_test+0x7ae>
   37b3b:	41 ff c4             	inc    %r12d
   37b3e:	66 44 03 7d d6       	add    0xffffffffffffffd6(%rbp),%r15w
   37b43:	41 83 fc 40          	cmp    $0x40,%r12d
   37b47:	75 d9                	jne    37b22 <e1000_diag_test+0x7f3>
   37b49:	66 41 81 ff ba ba    	cmp    $0xbaba,%r15w
   37b4f:	74 0d                	je     37b5e <e1000_diag_test+0x82f>
   37b51:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   37b55:	75 07                	jne    37b5e <e1000_diag_test+0x82f>
   37b57:	48 c7 03 02 00 00 00 	movq   $0x2,(%rbx)
   37b5e:	83 3b 00             	cmpl   $0x0,(%rbx)
   37b61:	74 0b                	je     37b6e <e1000_diag_test+0x83f>
   37b63:	48 8b 85 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rax
   37b6a:	83 48 04 02          	orl    $0x2,0x4(%rax)
   37b6e:	4c 89 ef             	mov    %r13,%rdi
   37b71:	4d 8d bd b8 03 00 00 	lea    0x3b8(%r13),%r15
   37b78:	e8 f9 98 fe ff       	callq  21476 <e1000_reset>
   37b7d:	49 8d 56 10          	lea    0x10(%r14),%rdx
   37b81:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37b84: R_X86_64_32S	.rodata.str1.1+0x3b7e
   37b88:	48 89 55 b8          	mov    %rdx,0xffffffffffffffb8(%rbp)
   37b8c:	e8 00 00 00 00       	callq  37b91 <e1000_diag_test+0x862>
			37b8d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37b91:	49 8b 8d f0 02 00 00 	mov    0x2f0(%r13),%rcx
   37b98:	ba 00 01 00 00       	mov    $0x100,%edx
   37b9d:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			37ba0: R_X86_64_32S	.text+0x3610d
   37ba4:	48 89 4d b0          	mov    %rcx,0xffffffffffffffb0(%rbp)
   37ba8:	49 8b 85 f8 02 00 00 	mov    0x2f8(%r13),%rax
   37baf:	49 89 c8             	mov    %rcx,%r8
   37bb2:	8b 80 fc 02 00 00    	mov    0x2fc(%rax),%eax
   37bb8:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   37bbf:	00 
   37bc0:	89 c7                	mov    %eax,%edi
   37bc2:	89 45 a4             	mov    %eax,0xffffffffffffffa4(%rbp)
   37bc5:	e8 0e cb fc ff       	callq  46d8 <request_irq>
   37bca:	85 c0                	test   %eax,%eax
   37bcc:	c6 45 ab 00          	movb   $0x0,0xffffffffffffffab(%rbp)
   37bd0:	74 30                	je     37c02 <e1000_diag_test+0x8d3>
   37bd2:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   37bd6:	8b 7d a4             	mov    0xffffffffffffffa4(%rbp),%edi
   37bd9:	ba 80 00 00 00       	mov    $0x80,%edx
   37bde:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			37be1: R_X86_64_32S	.text+0x3610d
   37be5:	4c 89 c1             	mov    %r8,%rcx
   37be8:	e8 eb ca fc ff       	callq  46d8 <request_irq>
   37bed:	85 c0                	test   %eax,%eax
   37bef:	c6 45 ab 01          	movb   $0x1,0xffffffffffffffab(%rbp)
   37bf3:	74 0d                	je     37c02 <e1000_diag_test+0x8d3>
   37bf5:	49 c7 46 10 01 00 00 	movq   $0x1,0x10(%r14)
   37bfc:	00 
   37bfd:	e9 df 01 00 00       	jmpq   37de1 <e1000_diag_test+0xab2>
   37c02:	41 f6 85 c1 07 00 00 	testb  $0x20,0x7c1(%r13)
   37c09:	20 
   37c0a:	74 32                	je     37c3e <e1000_diag_test+0x90f>
   37c0c:	80 7d ab 00          	cmpb   $0x0,0xffffffffffffffab(%rbp)
   37c10:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
   37c17:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			37c1a: R_X86_64_32S	str_535387590
   37c1e:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			37c21: R_X86_64_32S	str_299013265
   37c25:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			37c28: R_X86_64_32S	str_465609839
   37c2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37c2f: R_X86_64_32S	str_841212071
   37c33:	48 0f 44 c8          	cmove  %rax,%rcx
   37c37:	31 c0                	xor    %eax,%eax
   37c39:	e8 00 00 00 00       	callq  37c3e <e1000_diag_test+0x90f>
			37c3a: R_X86_64_PC32	printk+0xfffffffffffffffc
   37c3e:	49 8b 1f             	mov    (%r15),%rbx
   37c41:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37c44: R_X86_64_32S	.rodata.str1.1+0xb4
   37c48:	e8 00 00 00 00       	callq  37c4d <e1000_diag_test+0x91e>
			37c49: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37c4d:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   37c50:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
   37c57:	89 03                	mov    %eax,(%rbx)
   37c59:	bf 0a 00 00 00       	mov    $0xa,%edi
   37c5e:	e8 ed fe fc ff       	callq  7b50 <msleep>
   37c63:	c7 45 ac 00 00 00 00 	movl   $0x0,0xffffffffffffffac(%rbp)
   37c6a:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
   37c6f:	75 0a                	jne    37c7b <e1000_diag_test+0x94c>
   37c71:	83 7d ac 08          	cmpl   $0x8,0xffffffffffffffac(%rbp)
   37c75:	0f 84 bb 02 00 00    	je     37f36 <e1000_diag_test+0xc07>
   37c7b:	8a 4d ac             	mov    0xffffffffffffffac(%rbp),%cl
   37c7e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   37c84:	41 d3 e4             	shl    %cl,%r12d
   37c87:	80 7d ab 00          	cmpb   $0x0,0xffffffffffffffab(%rbp)
   37c8b:	75 54                	jne    37ce1 <e1000_diag_test+0x9b2>
   37c8d:	41 c7 85 28 07 00 00 	movl   $0x0,0x728(%r13)
   37c94:	00 00 00 00 
   37c98:	49 8b 1f             	mov    (%r15),%rbx
   37c9b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37c9e: R_X86_64_32S	.rodata.str1.1+0xb4
   37ca2:	e8 00 00 00 00       	callq  37ca7 <e1000_diag_test+0x978>
			37ca3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37ca7:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
   37cae:	44 89 23             	mov    %r12d,(%rbx)
   37cb1:	49 8b 1f             	mov    (%r15),%rbx
   37cb4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37cb7: R_X86_64_32S	.rodata.str1.1+0xb4
   37cbb:	e8 00 00 00 00       	callq  37cc0 <e1000_diag_test+0x991>
			37cbc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37cc0:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   37cc7:	44 89 23             	mov    %r12d,(%rbx)
   37cca:	bf 0a 00 00 00       	mov    $0xa,%edi
   37ccf:	e8 7c fe fc ff       	callq  7b50 <msleep>
   37cd4:	45 85 a5 28 07 00 00 	test   %r12d,0x728(%r13)
   37cdb:	0f 85 b5 01 00 00    	jne    37e96 <e1000_diag_test+0xb67>
   37ce1:	41 c7 85 28 07 00 00 	movl   $0x0,0x728(%r13)
   37ce8:	00 00 00 00 
   37cec:	49 8b 1f             	mov    (%r15),%rbx
   37cef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37cf2: R_X86_64_32S	.rodata.str1.1+0xb4
   37cf6:	e8 00 00 00 00       	callq  37cfb <e1000_diag_test+0x9cc>
			37cf7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37cfb:	48 81 c3 d0 00 00 00 	add    $0xd0,%rbx
   37d02:	44 89 23             	mov    %r12d,(%rbx)
   37d05:	49 8b 1f             	mov    (%r15),%rbx
   37d08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37d0b: R_X86_64_32S	.rodata.str1.1+0xb4
   37d0f:	e8 00 00 00 00       	callq  37d14 <e1000_diag_test+0x9e5>
			37d10: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37d14:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   37d1b:	44 89 23             	mov    %r12d,(%rbx)
   37d1e:	bf 0a 00 00 00       	mov    $0xa,%edi
   37d23:	e8 28 fe fc ff       	callq  7b50 <msleep>
   37d28:	45 85 a5 28 07 00 00 	test   %r12d,0x728(%r13)
   37d2f:	0f 84 51 01 00 00    	je     37e86 <e1000_diag_test+0xb57>
   37d35:	80 7d ab 00          	cmpb   $0x0,0xffffffffffffffab(%rbp)
   37d39:	75 5f                	jne    37d9a <e1000_diag_test+0xa6b>
   37d3b:	41 c7 85 28 07 00 00 	movl   $0x0,0x728(%r13)
   37d42:	00 00 00 00 
   37d46:	49 8b 1f             	mov    (%r15),%rbx
   37d49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37d4c: R_X86_64_32S	.rodata.str1.1+0xb4
   37d50:	41 f7 d4             	not    %r12d
   37d53:	41 81 e4 ff 7f 00 00 	and    $0x7fff,%r12d
   37d5a:	e8 00 00 00 00       	callq  37d5f <e1000_diag_test+0xa30>
			37d5b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37d5f:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
   37d66:	44 89 23             	mov    %r12d,(%rbx)
   37d69:	49 8b 1f             	mov    (%r15),%rbx
   37d6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37d6f: R_X86_64_32S	.rodata.str1.1+0xb4
   37d73:	e8 00 00 00 00       	callq  37d78 <e1000_diag_test+0xa49>
			37d74: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37d78:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
   37d7f:	44 89 23             	mov    %r12d,(%rbx)
   37d82:	bf 0a 00 00 00       	mov    $0xa,%edi
   37d87:	e8 c4 fd fc ff       	callq  7b50 <msleep>
   37d8c:	41 83 bd 28 07 00 00 	cmpl   $0x0,0x728(%r13)
   37d93:	00 
   37d94:	0f 85 dc 00 00 00    	jne    37e76 <e1000_diag_test+0xb47>
   37d9a:	ff 45 ac             	incl   0xffffffffffffffac(%rbp)
   37d9d:	83 7d ac 09          	cmpl   $0x9,0xffffffffffffffac(%rbp)
   37da1:	0f 86 c3 fe ff ff    	jbe    37c6a <e1000_diag_test+0x93b>
   37da7:	49 8b 1f             	mov    (%r15),%rbx
   37daa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37dad: R_X86_64_32S	.rodata.str1.1+0xb4
   37db1:	e8 00 00 00 00       	callq  37db6 <e1000_diag_test+0xa87>
			37db2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37db6:	83 c8 ff             	or     $0xffffffffffffffff,%eax
   37db9:	48 81 c3 d8 00 00 00 	add    $0xd8,%rbx
   37dc0:	89 03                	mov    %eax,(%rbx)
   37dc2:	bf 0a 00 00 00       	mov    $0xa,%edi
   37dc7:	e8 84 fd fc ff       	callq  7b50 <msleep>
   37dcc:	48 8b 75 b0          	mov    0xffffffffffffffb0(%rbp),%rsi
   37dd0:	8b 7d a4             	mov    0xffffffffffffffa4(%rbp),%edi
   37dd3:	e8 6d f6 fc ff       	callq  7445 <free_irq>
   37dd8:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   37ddc:	83 38 00             	cmpl   $0x0,(%rax)
   37ddf:	74 0b                	je     37dec <e1000_diag_test+0xabd>
   37de1:	48 8b 95 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rdx
   37de8:	83 4a 04 02          	orl    $0x2,0x4(%rdx)
   37dec:	4c 89 ef             	mov    %r13,%rdi
   37def:	e8 82 96 fe ff       	callq  21476 <e1000_reset>
   37df4:	4c 89 ef             	mov    %r13,%rdi
   37df7:	e8 e4 f1 fc ff       	callq  6fe0 <e1000_power_up_phy>
   37dfc:	49 8d 76 18          	lea    0x18(%r14),%rsi
   37e00:	4c 89 ef             	mov    %r13,%rdi
   37e03:	e8 5c cb fe ff       	callq  24964 <e1000_loopback_test>
   37e08:	85 c0                	test   %eax,%eax
   37e0a:	74 0b                	je     37e17 <e1000_diag_test+0xae8>
   37e0c:	48 8b 8d 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rcx
   37e13:	83 49 04 02          	orl    $0x2,0x4(%rcx)
   37e17:	8b 55 80             	mov    0xffffffffffffff80(%rbp),%edx
   37e1a:	48 8b 85 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rax
   37e21:	4c 89 ef             	mov    %r13,%rdi
   37e24:	66 89 90 d2 00 00 00 	mov    %dx,0xd2(%rax)
   37e2b:	8a 4d 82             	mov    0xffffffffffffff82(%rbp),%cl
   37e2e:	88 88 f1 00 00 00    	mov    %cl,0xf1(%rax)
   37e34:	8a 55 83             	mov    0xffffffffffffff83(%rbp),%dl
   37e37:	88 90 ef 00 00 00    	mov    %dl,0xef(%rax)
   37e3d:	e8 34 96 fe ff       	callq  21476 <e1000_reset>
   37e42:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37e45: R_X86_64_32S	.rodata.str1.1+0x2c01
   37e49:	e8 00 00 00 00       	callq  37e4e <e1000_diag_test+0xb1f>
			37e4a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37e4e:	f0 41 0f ba b5 c8 07 	lock btrl $0x0,0x7c8(%r13)
   37e55:	00 00 00 
   37e58:	80 bd 7f ff ff ff 00 	cmpb   $0x0,0xffffffffffffff7f(%rbp)
   37e5f:	0f 84 b8 00 00 00    	je     37f1d <e1000_diag_test+0xbee>
   37e65:	48 8b bd 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdi
   37e6c:	e8 7b d4 fd ff       	callq  152ec <dev_open>
   37e71:	e9 a7 00 00 00       	jmpq   37f1d <e1000_diag_test+0xbee>
   37e76:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   37e7a:	48 c7 01 05 00 00 00 	movq   $0x5,(%rcx)
   37e81:	e9 21 ff ff ff       	jmpq   37da7 <e1000_diag_test+0xa78>
   37e86:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   37e8a:	48 c7 00 04 00 00 00 	movq   $0x4,(%rax)
   37e91:	e9 11 ff ff ff       	jmpq   37da7 <e1000_diag_test+0xa78>
   37e96:	48 8b 55 b8          	mov    0xffffffffffffffb8(%rbp),%rdx
   37e9a:	48 c7 02 03 00 00 00 	movq   $0x3,(%rdx)
   37ea1:	e9 01 ff ff ff       	jmpq   37da7 <e1000_diag_test+0xa78>
   37ea6:	f6 c4 20             	test   $0x20,%ah
   37ea9:	74 1c                	je     37ec7 <e1000_diag_test+0xb98>
   37eab:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
   37eb2:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			37eb5: R_X86_64_32S	str_351640327
   37eb9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37ebc: R_X86_64_32S	str_159370975
   37ec0:	31 c0                	xor    %eax,%eax
   37ec2:	e8 00 00 00 00       	callq  37ec7 <e1000_diag_test+0xb98>
			37ec3: R_X86_64_PC32	printk+0xfffffffffffffffc
   37ec7:	49 8d 76 20          	lea    0x20(%r14),%rsi
   37ecb:	4c 89 ef             	mov    %r13,%rdi
   37ece:	e8 b8 5d fe ff       	callq  1dc8b <e1000_link_test>
   37ed3:	85 c0                	test   %eax,%eax
   37ed5:	74 0b                	je     37ee2 <e1000_diag_test+0xbb3>
   37ed7:	48 8b 8d 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rcx
   37ede:	83 49 04 02          	orl    $0x2,0x4(%rcx)
   37ee2:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   37ee9:	49 c7 46 08 00 00 00 	movq   $0x0,0x8(%r14)
   37ef0:	00 
   37ef1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37ef4: R_X86_64_32S	.rodata.str1.1+0x2c01
   37ef8:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   37eff:	00 
   37f00:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
   37f07:	00 
   37f08:	e8 00 00 00 00       	callq  37f0d <e1000_diag_test+0xbde>
			37f09: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37f0d:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   37f14:	f0 0f ba b0 c8 0f 00 	lock btrl $0x0,0xfc8(%rax)
   37f1b:	00 00 
   37f1d:	bf a0 0f 00 00       	mov    $0xfa0,%edi
   37f22:	e8 1a fb fc ff       	callq  7a41 <msleep_interruptible>
   37f27:	48 83 c4 78          	add    $0x78,%rsp
   37f2b:	5b                   	pop    %rbx
   37f2c:	41 5c                	pop    %r12
   37f2e:	41 5d                	pop    %r13
   37f30:	41 5e                	pop    %r14
   37f32:	41 5f                	pop    %r15
   37f34:	c9                   	leaveq 
   37f35:	c3                   	retq   
   37f36:	c7 45 ac 09 00 00 00 	movl   $0x9,0xffffffffffffffac(%rbp)
   37f3d:	e9 28 fd ff ff       	jmpq   37c6a <e1000_diag_test+0x93b>

0000000000037f42 <e1000_phys_id>:
   37f42:	55                   	push   %rbp
   37f43:	48 89 e5             	mov    %rsp,%rbp
   37f46:	41 57                	push   %r15
   37f48:	41 89 f7             	mov    %esi,%r15d
   37f4b:	41 56                	push   %r14
   37f4d:	41 55                	push   %r13
   37f4f:	41 54                	push   %r12
   37f51:	53                   	push   %rbx
   37f52:	48 89 fb             	mov    %rdi,%rbx
   37f55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37f58: R_X86_64_32S	.rodata.str1.1+0x3b8e
   37f5c:	4c 8d ab b8 0b 00 00 	lea    0xbb8(%rbx),%r13
   37f63:	4c 8d b3 00 08 00 00 	lea    0x800(%rbx),%r14
   37f6a:	48 83 ec 08          	sub    $0x8,%rsp
   37f6e:	e8 00 00 00 00       	callq  37f73 <e1000_phys_id+0x31>
			37f6f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37f73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37f76: R_X86_64_32S	.rodata.str1.1+0x1be
   37f7a:	e8 00 00 00 00       	callq  37f7f <e1000_phys_id+0x3d>
			37f7b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37f7f:	45 85 ff             	test   %r15d,%r15d
   37f82:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   37f87:	44 0f 44 f8          	cmove  %eax,%r15d
   37f8b:	41 83 7d 10 0d       	cmpl   $0xd,0x10(%r13)
   37f90:	0f 87 48 01 00 00    	ja     380de <e1000_phys_id+0x19c>
   37f96:	49 83 be 90 01 00 00 	cmpq   $0x0,0x190(%r14)
   37f9d:	00 
   37f9e:	75 1e                	jne    37fbe <e1000_phys_id+0x7c>
   37fa0:	48 8d bb 78 09 00 00 	lea    0x978(%rbx),%rdi
   37fa7:	e8 85 b3 fc ff       	callq  3331 <init_timer>
   37fac:	49 c7 86 90 01 00 00 	movq   $0x0,0x190(%r14)
   37fb3:	00 00 00 00 
			37fb3: R_X86_64_32S	.text+0x7786
   37fb7:	4d 89 b6 98 01 00 00 	mov    %r14,0x198(%r14)
   37fbe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37fc1: R_X86_64_32S	.rodata.str1.1+0x3b9c
   37fc5:	e8 00 00 00 00       	callq  37fca <e1000_phys_id+0x88>
			37fc6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   37fca:	41 8b 45 10          	mov    0x10(%r13),%eax
   37fce:	83 f8 01             	cmp    $0x1,%eax
   37fd1:	0f 84 d8 00 00 00    	je     380af <e1000_phys_id+0x16d>
   37fd7:	83 f8 02             	cmp    $0x2,%eax
   37fda:	0f 84 cf 00 00 00    	je     380af <e1000_phys_id+0x16d>
   37fe0:	83 f8 03             	cmp    $0x3,%eax
   37fe3:	0f 84 c6 00 00 00    	je     380af <e1000_phys_id+0x16d>
   37fe9:	83 f8 04             	cmp    $0x4,%eax
   37fec:	0f 84 bd 00 00 00    	je     380af <e1000_phys_id+0x16d>
   37ff2:	83 f8 0a             	cmp    $0xa,%eax
   37ff5:	74 0f                	je     38006 <e1000_phys_id+0xc4>
   37ff7:	83 f8 0c             	cmp    $0xc,%eax
   37ffa:	74 0a                	je     38006 <e1000_phys_id+0xc4>
   37ffc:	83 f8 0b             	cmp    $0xb,%eax
   37fff:	74 05                	je     38006 <e1000_phys_id+0xc4>
   38001:	83 f8 0d             	cmp    $0xd,%eax
   38004:	75 3b                	jne    38041 <e1000_phys_id+0xff>
   38006:	49 8d 95 d0 00 00 00 	lea    0xd0(%r13),%rdx
   3800d:	be 14 00 00 00       	mov    $0x14,%esi
   38012:	4c 89 ef             	mov    %r13,%rdi
   38015:	e8 bf e0 fc ff       	callq  60d9 <e1000_read_phy_reg>
   3801a:	85 c0                	test   %eax,%eax
   3801c:	0f 85 8d 00 00 00    	jne    380af <e1000_phys_id+0x16d>
   38022:	41 0f b7 95 d0 00 00 	movzwl 0xd0(%r13),%edx
   38029:	00 
   3802a:	be 14 00 00 00       	mov    $0x14,%esi
   3802f:	4c 89 ef             	mov    %r13,%rdi
   38032:	81 e2 df ff 00 00    	and    $0xffdf,%edx
   38038:	e8 4a de fc ff       	callq  5e87 <e1000_write_phy_reg>
   3803d:	85 c0                	test   %eax,%eax
   3803f:	75 6e                	jne    380af <e1000_phys_id+0x16d>
   38041:	41 8b 45 1c          	mov    0x1c(%r13),%eax
   38045:	83 f8 01             	cmp    $0x1,%eax
   38048:	75 40                	jne    3808a <e1000_phys_id+0x148>
   3804a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3804d: R_X86_64_32S	.rodata.str1.1+0xae
   38051:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   38055:	e8 00 00 00 00       	callq  3805a <e1000_phys_id+0x118>
			38056: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3805a:	8b 9b 00 0e 00 00    	mov    0xe00(%rbx),%ebx
   38060:	4d 8b 65 00          	mov    0x0(%r13),%r12
   38064:	41 89 9d b0 00 00 00 	mov    %ebx,0xb0(%r13)
   3806b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3806e: R_X86_64_32S	.rodata.str1.1+0xb4
   38072:	80 e3 30             	and    $0x30,%bl
   38075:	83 cb 0f             	or     $0xf,%ebx
   38078:	e8 00 00 00 00       	callq  3807d <e1000_phys_id+0x13b>
			38079: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3807d:	49 81 c4 00 0e 00 00 	add    $0xe00,%r12
   38084:	41 89 1c 24          	mov    %ebx,(%r12)
   38088:	eb 25                	jmp    380af <e1000_phys_id+0x16d>
   3808a:	85 c0                	test   %eax,%eax
   3808c:	75 21                	jne    380af <e1000_phys_id+0x16d>
   3808e:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   38092:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38095: R_X86_64_32S	.rodata.str1.1+0xb4
   38099:	45 8b a5 b4 00 00 00 	mov    0xb4(%r13),%r12d
   380a0:	e8 00 00 00 00       	callq  380a5 <e1000_phys_id+0x163>
			380a1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   380a5:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
   380ac:	44 89 23             	mov    %r12d,(%rbx)
   380af:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 380b6 <e1000_phys_id+0x174>
			380b2: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   380b6:	49 8d 9e 78 01 00 00 	lea    0x178(%r14),%rbx
   380bd:	48 89 df             	mov    %rbx,%rdi
   380c0:	e8 ae f4 fc ff       	callq  7573 <mod_timer>
   380c5:	41 69 ff e8 03 00 00 	imul   $0x3e8,%r15d,%edi
   380cc:	e8 70 f9 fc ff       	callq  7a41 <msleep_interruptible>
   380d1:	48 89 df             	mov    %rbx,%rdi
   380d4:	e8 02 06 fd ff       	callq  86db <del_timer_sync>
   380d9:	e9 d8 00 00 00       	jmpq   381b6 <e1000_phys_id+0x274>
   380de:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
   380e3:	75 63                	jne    38148 <e1000_phys_id+0x206>
   380e5:	49 83 be 90 01 00 00 	cmpq   $0x0,0x190(%r14)
   380ec:	00 
   380ed:	75 1e                	jne    3810d <e1000_phys_id+0x1cb>
   380ef:	48 8d bb 78 09 00 00 	lea    0x978(%rbx),%rdi
   380f6:	e8 36 b2 fc ff       	callq  3331 <init_timer>
   380fb:	49 c7 86 90 01 00 00 	movq   $0x0,0x190(%r14)
   38102:	00 00 00 00 
			38102: R_X86_64_32S	.text+0x7786
   38106:	4d 89 b6 98 01 00 00 	mov    %r14,0x198(%r14)
   3810d:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 38114 <e1000_phys_id+0x1d2>
			38110: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   38114:	48 81 c3 78 09 00 00 	add    $0x978,%rbx
   3811b:	48 89 df             	mov    %rbx,%rdi
   3811e:	e8 50 f4 fc ff       	callq  7573 <mod_timer>
   38123:	41 69 ff e8 03 00 00 	imul   $0x3e8,%r15d,%edi
   3812a:	e8 12 f9 fc ff       	callq  7a41 <msleep_interruptible>
   3812f:	48 89 df             	mov    %rbx,%rdi
   38132:	e8 a4 05 fd ff       	callq  86db <del_timer_sync>
   38137:	31 d2                	xor    %edx,%edx
   38139:	be 1b 00 00 00       	mov    $0x1b,%esi
   3813e:	4c 89 ef             	mov    %r13,%rdi
   38141:	e8 41 dd fc ff       	callq  5e87 <e1000_write_phy_reg>
   38146:	eb 6e                	jmp    381b6 <e1000_phys_id+0x274>
   38148:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3814b: R_X86_64_32S	.rodata.str1.1+0x3bac
   3814f:	e8 00 00 00 00       	callq  38154 <e1000_phys_id+0x212>
			38150: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38154:	41 83 7d 10 0d       	cmpl   $0xd,0x10(%r13)
   38159:	76 4f                	jbe    381aa <e1000_phys_id+0x268>
   3815b:	41 83 7d 1c 01       	cmpl   $0x1,0x1c(%r13)
   38160:	41 bc 8e 00 00 00    	mov    $0x8e,%r12d
   38166:	74 28                	je     38190 <e1000_phys_id+0x24e>
   38168:	45 8b a5 b8 00 00 00 	mov    0xb8(%r13),%r12d
   3816f:	31 c9                	xor    %ecx,%ecx
   38171:	41 8b 85 b8 00 00 00 	mov    0xb8(%r13),%eax
   38178:	d3 e8                	shr    %cl,%eax
   3817a:	3c 0e                	cmp    $0xe,%al
   3817c:	75 0a                	jne    38188 <e1000_phys_id+0x246>
   3817e:	b8 80 00 00 00       	mov    $0x80,%eax
   38183:	d3 e0                	shl    %cl,%eax
   38185:	41 09 c4             	or     %eax,%r12d
   38188:	83 c1 08             	add    $0x8,%ecx
   3818b:	83 f9 20             	cmp    $0x20,%ecx
   3818e:	75 e1                	jne    38171 <e1000_phys_id+0x22f>
   38190:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   38194:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38197: R_X86_64_32S	.rodata.str1.1+0xb4
   3819b:	e8 00 00 00 00       	callq  381a0 <e1000_phys_id+0x25e>
			3819c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   381a0:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
   381a7:	44 89 23             	mov    %r12d,(%rbx)
   381aa:	41 69 ff e8 03 00 00 	imul   $0x3e8,%r15d,%edi
   381b1:	e8 8b f8 fc ff       	callq  7a41 <msleep_interruptible>
   381b6:	4c 89 ef             	mov    %r13,%rdi
   381b9:	e8 d9 dd fc ff       	callq  5f97 <e1000_led_off>
   381be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			381c1: R_X86_64_32S	.rodata.str1.1+0x2c01
   381c5:	e8 00 00 00 00       	callq  381ca <e1000_phys_id+0x288>
			381c6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   381ca:	f0 41 0f ba b6 a8 01 	lock btrl $0x0,0x1a8(%r14)
   381d1:	00 00 00 
   381d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			381d7: R_X86_64_32S	.rodata.str1.1+0x3bc2
   381db:	e8 00 00 00 00       	callq  381e0 <e1000_phys_id+0x29e>
			381dc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   381e0:	41 8b 45 10          	mov    0x10(%r13),%eax
   381e4:	83 f8 01             	cmp    $0x1,%eax
   381e7:	74 75                	je     3825e <e1000_phys_id+0x31c>
   381e9:	83 f8 02             	cmp    $0x2,%eax
   381ec:	74 70                	je     3825e <e1000_phys_id+0x31c>
   381ee:	83 f8 03             	cmp    $0x3,%eax
   381f1:	74 6b                	je     3825e <e1000_phys_id+0x31c>
   381f3:	83 f8 04             	cmp    $0x4,%eax
   381f6:	74 66                	je     3825e <e1000_phys_id+0x31c>
   381f8:	83 f8 0a             	cmp    $0xa,%eax
   381fb:	74 0f                	je     3820c <e1000_phys_id+0x2ca>
   381fd:	83 f8 0c             	cmp    $0xc,%eax
   38200:	74 0a                	je     3820c <e1000_phys_id+0x2ca>
   38202:	83 f8 0b             	cmp    $0xb,%eax
   38205:	74 05                	je     3820c <e1000_phys_id+0x2ca>
   38207:	83 f8 0d             	cmp    $0xd,%eax
   3820a:	75 19                	jne    38225 <e1000_phys_id+0x2e3>
   3820c:	41 0f b7 95 d0 00 00 	movzwl 0xd0(%r13),%edx
   38213:	00 
   38214:	be 14 00 00 00       	mov    $0x14,%esi
   38219:	4c 89 ef             	mov    %r13,%rdi
   3821c:	e8 66 dc fc ff       	callq  5e87 <e1000_write_phy_reg>
   38221:	85 c0                	test   %eax,%eax
   38223:	75 39                	jne    3825e <e1000_phys_id+0x31c>
   38225:	41 83 7d 14 05       	cmpl   $0x5,0x14(%r13)
   3822a:	75 11                	jne    3823d <e1000_phys_id+0x2fb>
   3822c:	31 d2                	xor    %edx,%edx
   3822e:	be 1b 00 00 00       	mov    $0x1b,%esi
   38233:	4c 89 ef             	mov    %r13,%rdi
   38236:	e8 4c dc fc ff       	callq  5e87 <e1000_write_phy_reg>
   3823b:	eb 21                	jmp    3825e <e1000_phys_id+0x31c>
   3823d:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   38241:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38244: R_X86_64_32S	.rodata.str1.1+0xb4
   38248:	45 8b a5 b0 00 00 00 	mov    0xb0(%r13),%r12d
   3824f:	e8 00 00 00 00       	callq  38254 <e1000_phys_id+0x312>
			38250: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38254:	48 81 c3 00 0e 00 00 	add    $0xe00,%rbx
   3825b:	44 89 23             	mov    %r12d,(%rbx)
   3825e:	41 58                	pop    %r8
   38260:	5b                   	pop    %rbx
   38261:	41 5c                	pop    %r12
   38263:	41 5d                	pop    %r13
   38265:	41 5e                	pop    %r14
   38267:	41 5f                	pop    %r15
   38269:	c9                   	leaveq 
   3826a:	31 c0                	xor    %eax,%eax
   3826c:	c3                   	retq   

000000000003826d <e1000_82547_tx_fifo_stall>:
   3826d:	55                   	push   %rbp
   3826e:	48 89 e5             	mov    %rsp,%rbp
   38271:	41 57                	push   %r15
   38273:	49 89 ff             	mov    %rdi,%r15
   38276:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38279: R_X86_64_32S	.rodata.str1.1+0x3bd4
   3827d:	41 56                	push   %r14
   3827f:	41 55                	push   %r13
   38281:	41 54                	push   %r12
   38283:	53                   	push   %rbx
   38284:	48 83 ec 18          	sub    $0x18,%rsp
   38288:	e8 00 00 00 00       	callq  3828d <e1000_82547_tx_fifo_stall+0x20>
			38289: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3828d:	49 8d 87 b8 03 00 00 	lea    0x3b8(%r15),%rax
   38294:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   38298:	49 8b 97 f0 02 00 00 	mov    0x2f0(%r15),%rdx
   3829f:	48 89 55 d0          	mov    %rdx,0xffffffffffffffd0(%rbp)
   382a3:	41 8b 87 04 02 00 00 	mov    0x204(%r15),%eax
   382aa:	85 c0                	test   %eax,%eax
   382ac:	0f 84 ea 02 00 00    	je     3859c <e1000_82547_tx_fifo_stall+0x32f>
   382b2:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   382b6:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   382bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			382c0: R_X86_64_32S	.rodata.str1.1+0xae
   382c4:	8b 42 10             	mov    0x10(%rdx),%eax
   382c7:	83 f8 03             	cmp    $0x3,%eax
   382ca:	19 db                	sbb    %ebx,%ebx
   382cc:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   382d2:	81 c3 18 38 00 00    	add    $0x3818,%ebx
   382d8:	48 63 db             	movslq %ebx,%rbx
   382db:	e8 00 00 00 00       	callq  382e0 <e1000_82547_tx_fifo_stall+0x73>
			382dc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   382e0:	49 01 dc             	add    %rbx,%r12
   382e3:	45 8b 2c 24          	mov    (%r12),%r13d
   382e7:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   382eb:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   382f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			382f5: R_X86_64_32S	.rodata.str1.1+0xae
   382f9:	8b 42 10             	mov    0x10(%rdx),%eax
   382fc:	83 f8 03             	cmp    $0x3,%eax
   382ff:	19 db                	sbb    %ebx,%ebx
   38301:	81 e3 20 cc ff ff    	and    $0xffffcc20,%ebx
   38307:	81 c3 10 38 00 00    	add    $0x3810,%ebx
   3830d:	48 63 db             	movslq %ebx,%rbx
   38310:	e8 00 00 00 00       	callq  38315 <e1000_82547_tx_fifo_stall+0xa8>
			38311: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38315:	49 01 dc             	add    %rbx,%r12
   38318:	41 8b 04 24          	mov    (%r12),%eax
   3831c:	41 39 c5             	cmp    %eax,%r13d
   3831f:	0f 85 65 02 00 00    	jne    3858a <e1000_82547_tx_fifo_stall+0x31d>
   38325:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   38329:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   38330:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38333: R_X86_64_32S	.rodata.str1.1+0xae
   38337:	8b 42 10             	mov    0x10(%rdx),%eax
   3833a:	83 f8 03             	cmp    $0x3,%eax
   3833d:	19 db                	sbb    %ebx,%ebx
   3833f:	81 e3 00 4c 00 00    	and    $0x4c00,%ebx
   38345:	81 c3 18 34 00 00    	add    $0x3418,%ebx
   3834b:	48 63 db             	movslq %ebx,%rbx
   3834e:	e8 00 00 00 00       	callq  38353 <e1000_82547_tx_fifo_stall+0xe6>
			3834f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38353:	49 01 dc             	add    %rbx,%r12
   38356:	45 8b 2c 24          	mov    (%r12),%r13d
   3835a:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   3835e:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   38365:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38368: R_X86_64_32S	.rodata.str1.1+0xae
   3836c:	8b 42 10             	mov    0x10(%rdx),%eax
   3836f:	83 f8 03             	cmp    $0x3,%eax
   38372:	19 db                	sbb    %ebx,%ebx
   38374:	81 e3 00 4c 00 00    	and    $0x4c00,%ebx
   3837a:	81 c3 10 34 00 00    	add    $0x3410,%ebx
   38380:	48 63 db             	movslq %ebx,%rbx
   38383:	e8 00 00 00 00       	callq  38388 <e1000_82547_tx_fifo_stall+0x11b>
			38384: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38388:	49 01 dc             	add    %rbx,%r12
   3838b:	41 8b 04 24          	mov    (%r12),%eax
   3838f:	41 39 c5             	cmp    %eax,%r13d
   38392:	0f 85 f2 01 00 00    	jne    3858a <e1000_82547_tx_fifo_stall+0x31d>
   38398:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3839b: R_X86_64_32S	.rodata.str1.1+0xae
   3839f:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   383a6:	e8 00 00 00 00       	callq  383ab <e1000_82547_tx_fifo_stall+0x13e>
			383a7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   383ab:	44 8b a3 28 34 00 00 	mov    0x3428(%rbx),%r12d
   383b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			383b5: R_X86_64_32S	.rodata.str1.1+0xae
   383b9:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   383c0:	e8 00 00 00 00       	callq  383c5 <e1000_82547_tx_fifo_stall+0x158>
			383c1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   383c5:	8b 83 20 34 00 00    	mov    0x3420(%rbx),%eax
   383cb:	41 39 c4             	cmp    %eax,%r12d
   383ce:	0f 85 b6 01 00 00    	jne    3858a <e1000_82547_tx_fifo_stall+0x31d>
   383d4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			383d7: R_X86_64_32S	.rodata.str1.1+0xae
   383db:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   383e2:	e8 00 00 00 00       	callq  383e7 <e1000_82547_tx_fifo_stall+0x17a>
			383e3: R_X86_64_PC32	record_function+0xfffffffffffffffc
   383e7:	44 8b b3 00 04 00 00 	mov    0x400(%rbx),%r14d
   383ee:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   383f5:	45 89 f4             	mov    %r14d,%r12d
   383f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			383fb: R_X86_64_32S	.rodata.str1.1+0xb4
   383ff:	41 83 e4 fd          	and    $0xfffffffffffffffd,%r12d
   38403:	e8 00 00 00 00       	callq  38408 <e1000_82547_tx_fifo_stall+0x19b>
			38404: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38408:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   3840f:	44 89 23             	mov    %r12d,(%rbx)
   38412:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   38416:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   3841d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38420: R_X86_64_32S	.rodata.str1.1+0xb4
   38424:	45 8b af f8 01 00 00 	mov    0x1f8(%r15),%r13d
   3842b:	8b 42 10             	mov    0x10(%rdx),%eax
   3842e:	83 f8 03             	cmp    $0x3,%eax
   38431:	19 db                	sbb    %ebx,%ebx
   38433:	81 e3 00 4c 00 00    	and    $0x4c00,%ebx
   38439:	81 c3 18 34 00 00    	add    $0x3418,%ebx
   3843f:	48 63 db             	movslq %ebx,%rbx
   38442:	e8 00 00 00 00       	callq  38447 <e1000_82547_tx_fifo_stall+0x1da>
			38443: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38447:	49 01 dc             	add    %rbx,%r12
   3844a:	45 89 2c 24          	mov    %r13d,(%r12)
   3844e:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   38452:	4d 8b a7 b8 03 00 00 	mov    0x3b8(%r15),%r12
   38459:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3845c: R_X86_64_32S	.rodata.str1.1+0xb4
   38460:	45 8b af f8 01 00 00 	mov    0x1f8(%r15),%r13d
   38467:	8b 42 10             	mov    0x10(%rdx),%eax
   3846a:	83 f8 03             	cmp    $0x3,%eax
   3846d:	19 db                	sbb    %ebx,%ebx
   3846f:	81 e3 00 4c 00 00    	and    $0x4c00,%ebx
   38475:	81 c3 10 34 00 00    	add    $0x3410,%ebx
   3847b:	48 63 db             	movslq %ebx,%rbx
   3847e:	e8 00 00 00 00       	callq  38483 <e1000_82547_tx_fifo_stall+0x216>
			3847f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38483:	49 01 dc             	add    %rbx,%r12
   38486:	45 89 2c 24          	mov    %r13d,(%r12)
   3848a:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   38491:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38494: R_X86_64_32S	.rodata.str1.1+0xb4
   38498:	45 8b a7 f8 01 00 00 	mov    0x1f8(%r15),%r12d
   3849f:	e8 00 00 00 00       	callq  384a4 <e1000_82547_tx_fifo_stall+0x237>
			384a0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   384a4:	48 81 c3 28 34 00 00 	add    $0x3428,%rbx
   384ab:	44 89 23             	mov    %r12d,(%rbx)
   384ae:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   384b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			384b8: R_X86_64_32S	.rodata.str1.1+0xb4
   384bc:	45 8b a7 f8 01 00 00 	mov    0x1f8(%r15),%r12d
   384c3:	e8 00 00 00 00       	callq  384c8 <e1000_82547_tx_fifo_stall+0x25b>
			384c4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   384c8:	48 81 c3 20 34 00 00 	add    $0x3420,%rbx
   384cf:	44 89 23             	mov    %r12d,(%rbx)
   384d2:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   384d9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			384dc: R_X86_64_32S	.rodata.str1.1+0xb4
   384e0:	e8 00 00 00 00       	callq  384e5 <e1000_82547_tx_fifo_stall+0x278>
			384e1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   384e5:	48 81 c3 00 04 00 00 	add    $0x400,%rbx
   384ec:	44 89 33             	mov    %r14d,(%rbx)
   384ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			384f2: R_X86_64_32S	.rodata.str1.1+0xae
   384f6:	49 8b 9f b8 03 00 00 	mov    0x3b8(%r15),%rbx
   384fd:	e8 00 00 00 00       	callq  38502 <e1000_82547_tx_fifo_stall+0x295>
			384fe: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38502:	8b 43 08             	mov    0x8(%rbx),%eax
   38505:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38508: R_X86_64_32S	.rodata.str1.1+0x379d
   3850c:	41 c7 87 f4 01 00 00 	movl   $0x0,0x1f4(%r15)
   38513:	00 00 00 00 
   38517:	41 c7 87 04 02 00 00 	movl   $0x0,0x204(%r15)
   3851e:	00 00 00 00 
   38522:	e8 00 00 00 00       	callq  38527 <e1000_82547_tx_fifo_stall+0x2ba>
			38523: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38527:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3852a: R_X86_64_32S	.rodata.str1.1+0x2bb2
   3852e:	e8 00 00 00 00       	callq  38533 <e1000_82547_tx_fifo_stall+0x2c6>
			3852f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38533:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   38537:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3853a: R_X86_64_32S	.rodata.str1.1+0x37ae
   3853e:	48 8b 98 00 03 00 00 	mov    0x300(%rax),%rbx
   38545:	e8 00 00 00 00       	callq  3854a <e1000_82547_tx_fifo_stall+0x2dd>
			38546: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3854a:	e8 5b b5 fc ff       	callq  3aaa <netpoll_trap>
   3854f:	85 c0                	test   %eax,%eax
   38551:	74 14                	je     38567 <e1000_82547_tx_fifo_stall+0x2fa>
   38553:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38556: R_X86_64_32S	.rodata.str1.1+0x2c01
   3855a:	e8 00 00 00 00       	callq  3855f <e1000_82547_tx_fifo_stall+0x2f2>
			3855b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3855f:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   38565:	eb 35                	jmp    3859c <e1000_82547_tx_fifo_stall+0x32f>
   38567:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3856a: R_X86_64_32S	.rodata.str1.1+0x37c2
   3856e:	e8 00 00 00 00       	callq  38573 <e1000_82547_tx_fifo_stall+0x306>
			3856f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38573:	f0 0f ba 73 10 00    	lock btrl $0x0,0x10(%rbx)
   38579:	19 c0                	sbb    %eax,%eax
   3857b:	85 c0                	test   %eax,%eax
   3857d:	74 1d                	je     3859c <e1000_82547_tx_fifo_stall+0x32f>
   3857f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   38583:	e8 6d af fc ff       	callq  34f5 <__netif_schedule>
   38588:	eb 12                	jmp    3859c <e1000_82547_tx_fifo_stall+0x32f>
   3858a:	48 8b 35 00 00 00 00 	mov    0(%rip),%rsi        # 38591 <e1000_82547_tx_fifo_stall+0x324>
			3858d: R_X86_64_PC32	jiffies+0xfffffffffffffffc
   38591:	4c 89 ff             	mov    %r15,%rdi
   38594:	48 ff c6             	inc    %rsi
   38597:	e8 d7 ef fc ff       	callq  7573 <mod_timer>
   3859c:	48 83 c4 18          	add    $0x18,%rsp
   385a0:	5b                   	pop    %rbx
   385a1:	41 5c                	pop    %r12
   385a3:	41 5d                	pop    %r13
   385a5:	41 5e                	pop    %r14
   385a7:	41 5f                	pop    %r15
   385a9:	c9                   	leaveq 
   385aa:	c3                   	retq   

00000000000385ab <e1000_set_ringparam>:
   385ab:	55                   	push   %rbp
   385ac:	48 89 e5             	mov    %rsp,%rbp
   385af:	41 57                	push   %r15
   385b1:	49 89 f7             	mov    %rsi,%r15
   385b4:	41 56                	push   %r14
   385b6:	41 55                	push   %r13
   385b8:	41 54                	push   %r12
   385ba:	53                   	push   %rbx
   385bb:	48 89 fb             	mov    %rdi,%rbx
   385be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			385c1: R_X86_64_32S	.rodata.str1.1+0x3bee
   385c5:	4c 8d a3 00 08 00 00 	lea    0x800(%rbx),%r12
   385cc:	48 83 ec 18          	sub    $0x18,%rsp
   385d0:	e8 00 00 00 00       	callq  385d5 <e1000_set_ringparam+0x2a>
			385d1: R_X86_64_PC32	record_function+0xfffffffffffffffc
   385d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			385d8: R_X86_64_32S	.rodata.str1.1+0x1be
   385dc:	e8 00 00 00 00       	callq  385e1 <e1000_set_ringparam+0x36>
			385dd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   385e1:	41 83 7f 18 00       	cmpl   $0x0,0x18(%r15)
   385e6:	41 8b 84 24 c8 03 00 	mov    0x3c8(%r12),%eax
   385ed:	00 
   385ee:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   385f1:	0f 85 b4 02 00 00    	jne    388ab <e1000_set_ringparam+0x300>
   385f7:	41 83 7f 1c 00       	cmpl   $0x0,0x1c(%r15)
   385fc:	0f 85 a9 02 00 00    	jne    388ab <e1000_set_ringparam+0x300>
   38602:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38605: R_X86_64_32S	.rodata.str1.1+0x2b52
   38609:	e8 00 00 00 00       	callq  3860e <e1000_set_ringparam+0x63>
			3860a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3860e:	f0 41 0f ba ac 24 c8 	lock btsl $0x1,0x7c8(%r12)
   38615:	07 00 00 01 
   38619:	19 c0                	sbb    %eax,%eax
   3861b:	85 c0                	test   %eax,%eax
   3861d:	74 0c                	je     3862b <e1000_set_ringparam+0x80>
   3861f:	bf 01 00 00 00       	mov    $0x1,%edi
   38624:	e8 27 f5 fc ff       	callq  7b50 <msleep>
   38629:	eb d7                	jmp    38602 <e1000_set_ringparam+0x57>
   3862b:	49 8b 9c 24 f0 02 00 	mov    0x2f0(%r12),%rbx
   38632:	00 
   38633:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38636: R_X86_64_32S	.rodata.str1.1+0x15c6
   3863a:	e8 00 00 00 00       	callq  3863f <e1000_set_ringparam+0x94>
			3863b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3863f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38642: R_X86_64_32S	.rodata.str1.1+0x15d4
   38646:	e8 00 00 00 00       	callq  3864b <e1000_set_ringparam+0xa0>
			38647: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3864b:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   3864f:	74 08                	je     38659 <e1000_set_ringparam+0xae>
   38651:	4c 89 e7             	mov    %r12,%rdi
   38654:	e8 00 00 00 00       	callq  38659 <e1000_set_ringparam+0xae>
			38655: R_X86_64_PC32	e1000_down+0xfffffffffffffffc
   38659:	49 8b 84 24 b0 01 00 	mov    0x1b0(%r12),%rax
   38660:	00 
   38661:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38664: R_X86_64_32S	.rodata.str1.1+0x2abf
   38668:	48 89 45 c8          	mov    %rax,0xffffffffffffffc8(%rbp)
   3866c:	49 8b 84 24 20 02 00 	mov    0x220(%r12),%rax
   38673:	00 
   38674:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   38678:	49 63 9c 24 b0 02 00 	movslq 0x2b0(%r12),%rbx
   3867f:	00 
   38680:	e8 00 00 00 00       	callq  38685 <e1000_set_ringparam+0xda>
			38681: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38685:	48 81 fb aa aa aa 02 	cmp    $0x2aaaaaa,%rbx
   3868c:	0f 87 f3 01 00 00    	ja     38885 <e1000_set_ringparam+0x2da>
   38692:	48 6b fb 60          	imul   $0x60,%rbx,%rdi
   38696:	be d0 80 00 00       	mov    $0x80d0,%esi
   3869b:	e8 00 00 00 00       	callq  386a0 <e1000_set_ringparam+0xf5>
			3869c: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   386a0:	48 85 c0             	test   %rax,%rax
   386a3:	49 89 c6             	mov    %rax,%r14
   386a6:	0f 84 d9 01 00 00    	je     38885 <e1000_set_ringparam+0x2da>
   386ac:	49 63 9c 24 b4 02 00 	movslq 0x2b4(%r12),%rbx
   386b3:	00 
   386b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			386b7: R_X86_64_32S	.rodata.str1.1+0x2abf
   386bb:	e8 00 00 00 00       	callq  386c0 <e1000_set_ringparam+0x115>
			386bc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   386c0:	48 81 fb 55 55 55 05 	cmp    $0x5555555,%rbx
   386c7:	0f 87 a9 01 00 00    	ja     38876 <e1000_set_ringparam+0x2cb>
   386cd:	48 6b fb 30          	imul   $0x30,%rbx,%rdi
   386d1:	be d0 80 00 00       	mov    $0x80d0,%esi
   386d6:	e8 00 00 00 00       	callq  386db <e1000_set_ringparam+0x130>
			386d7: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   386db:	48 85 c0             	test   %rax,%rax
   386de:	49 89 c5             	mov    %rax,%r13
   386e1:	0f 84 8f 01 00 00    	je     38876 <e1000_set_ringparam+0x2cb>
   386e7:	4d 89 b4 24 b0 01 00 	mov    %r14,0x1b0(%r12)
   386ee:	00 
   386ef:	49 89 84 24 20 02 00 	mov    %rax,0x220(%r12)
   386f6:	00 
   386f7:	b9 50 00 00 00       	mov    $0x50,%ecx
   386fc:	41 8b 47 14          	mov    0x14(%r15),%eax
   38700:	89 ca                	mov    %ecx,%edx
   38702:	83 f8 50             	cmp    $0x50,%eax
   38705:	0f 43 d0             	cmovae %eax,%edx
   38708:	41 89 55 14          	mov    %edx,0x14(%r13)
   3870c:	83 7d c4 03          	cmpl   $0x3,0xffffffffffffffc4(%rbp)
   38710:	0f 87 9c 01 00 00    	ja     388b2 <e1000_set_ringparam+0x307>
   38716:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   3871c:	b8 00 01 00 00       	mov    $0x100,%eax
   38721:	0f 46 c2             	cmovbe %edx,%eax
   38724:	ba 00 01 00 00       	mov    $0x100,%edx
   38729:	83 c0 07             	add    $0x7,%eax
   3872c:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   3872f:	41 89 45 14          	mov    %eax,0x14(%r13)
   38733:	41 8b 47 20          	mov    0x20(%r15),%eax
   38737:	83 f8 50             	cmp    $0x50,%eax
   3873a:	0f 42 c1             	cmovb  %ecx,%eax
   3873d:	41 89 46 14          	mov    %eax,0x14(%r14)
   38741:	39 c2                	cmp    %eax,%edx
   38743:	0f 46 c2             	cmovbe %edx,%eax
   38746:	31 c9                	xor    %ecx,%ecx
   38748:	83 c0 07             	add    $0x7,%eax
   3874b:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   3874e:	41 89 46 14          	mov    %eax,0x14(%r14)
   38752:	41 3b 8c 24 b0 02 00 	cmp    0x2b0(%r12),%ecx
   38759:	00 
   3875a:	7d 14                	jge    38770 <e1000_set_ringparam+0x1c5>
   3875c:	48 63 c1             	movslq %ecx,%rax
   3875f:	41 8b 56 14          	mov    0x14(%r14),%edx
   38763:	ff c1                	inc    %ecx
   38765:	48 6b c0 60          	imul   $0x60,%rax,%rax
   38769:	41 89 54 06 14       	mov    %edx,0x14(%r14,%rax,1)
   3876e:	eb e2                	jmp    38752 <e1000_set_ringparam+0x1a7>
   38770:	31 c9                	xor    %ecx,%ecx
   38772:	41 3b 8c 24 b4 02 00 	cmp    0x2b4(%r12),%ecx
   38779:	00 
   3877a:	7d 14                	jge    38790 <e1000_set_ringparam+0x1e5>
   3877c:	48 63 c1             	movslq %ecx,%rax
   3877f:	41 8b 55 14          	mov    0x14(%r13),%edx
   38783:	ff c1                	inc    %ecx
   38785:	48 6b c0 30          	imul   $0x30,%rax,%rax
   38789:	41 89 54 05 14       	mov    %edx,0x14(%r13,%rax,1)
   3878e:	eb e2                	jmp    38772 <e1000_set_ringparam+0x1c7>
   38790:	49 8b 9c 24 f0 02 00 	mov    0x2f0(%r12),%rbx
   38797:	00 
   38798:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3879b: R_X86_64_32S	.rodata.str1.1+0x15c6
   3879f:	e8 00 00 00 00       	callq  387a4 <e1000_set_ringparam+0x1f9>
			387a0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   387a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			387a7: R_X86_64_32S	.rodata.str1.1+0x15d4
   387ab:	e8 00 00 00 00       	callq  387b0 <e1000_set_ringparam+0x205>
			387ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
   387b0:	f6 43 48 01          	testb  $0x1,0x48(%rbx)
   387b4:	74 78                	je     3882e <e1000_set_ringparam+0x283>
   387b6:	4c 89 e7             	mov    %r12,%rdi
   387b9:	e8 59 d3 fe ff       	callq  25b17 <e1000_setup_all_rx_resources>
   387be:	85 c0                	test   %eax,%eax
   387c0:	89 c3                	mov    %eax,%ebx
   387c2:	0f 85 8c 00 00 00    	jne    38854 <e1000_set_ringparam+0x2a9>
   387c8:	4c 89 e7             	mov    %r12,%rdi
   387cb:	e8 3c dd fe ff       	callq  2650c <e1000_setup_all_tx_resources>
   387d0:	85 c0                	test   %eax,%eax
   387d2:	89 c3                	mov    %eax,%ebx
   387d4:	75 76                	jne    3884c <e1000_set_ringparam+0x2a1>
   387d6:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   387da:	4c 89 e7             	mov    %r12,%rdi
   387dd:	49 89 84 24 20 02 00 	mov    %rax,0x220(%r12)
   387e4:	00 
   387e5:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   387e9:	49 89 84 24 b0 01 00 	mov    %rax,0x1b0(%r12)
   387f0:	00 
   387f1:	e8 df d2 fe ff       	callq  25ad5 <e1000_free_all_rx_resources>
   387f6:	4c 89 e7             	mov    %r12,%rdi
   387f9:	e8 cc dc fe ff       	callq  264ca <e1000_free_all_tx_resources>
   387fe:	48 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%rdi
   38802:	e8 00 00 00 00       	callq  38807 <e1000_set_ringparam+0x25c>
			38803: R_X86_64_PC32	kfree+0xfffffffffffffffc
   38807:	48 8b 7d d0          	mov    0xffffffffffffffd0(%rbp),%rdi
   3880b:	e8 00 00 00 00       	callq  38810 <e1000_set_ringparam+0x265>
			3880c: R_X86_64_PC32	kfree+0xfffffffffffffffc
   38810:	4d 89 ac 24 20 02 00 	mov    %r13,0x220(%r12)
   38817:	00 
   38818:	4d 89 b4 24 b0 01 00 	mov    %r14,0x1b0(%r12)
   3881f:	00 
   38820:	4c 89 e7             	mov    %r12,%rdi
   38823:	e8 cb bb fe ff       	callq  243f3 <e1000_up>
   38828:	85 c0                	test   %eax,%eax
   3882a:	89 c3                	mov    %eax,%ebx
   3882c:	75 64                	jne    38892 <e1000_set_ringparam+0x2e7>
   3882e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38831: R_X86_64_32S	.rodata.str1.1+0x2c01
   38835:	e8 00 00 00 00       	callq  3883a <e1000_set_ringparam+0x28f>
			38836: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3883a:	f0 41 0f ba b4 24 c8 	lock btrl $0x1,0x7c8(%r12)
   38841:	07 00 00 01 
   38845:	31 db                	xor    %ebx,%ebx
   38847:	e9 96 00 00 00       	jmpq   388e2 <e1000_set_ringparam+0x337>
   3884c:	4c 89 e7             	mov    %r12,%rdi
   3884f:	e8 81 d2 fe ff       	callq  25ad5 <e1000_free_all_rx_resources>
   38854:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   38858:	4c 89 ef             	mov    %r13,%rdi
   3885b:	49 89 84 24 20 02 00 	mov    %rax,0x220(%r12)
   38862:	00 
   38863:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   38867:	49 89 84 24 b0 01 00 	mov    %rax,0x1b0(%r12)
   3886e:	00 
   3886f:	e8 00 00 00 00       	callq  38874 <e1000_set_ringparam+0x2c9>
			38870: R_X86_64_PC32	kfree+0xfffffffffffffffc
   38874:	eb 05                	jmp    3887b <e1000_set_ringparam+0x2d0>
   38876:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
   3887b:	4c 89 f7             	mov    %r14,%rdi
   3887e:	e8 00 00 00 00       	callq  38883 <e1000_set_ringparam+0x2d8>
			3887f: R_X86_64_PC32	kfree+0xfffffffffffffffc
   38883:	eb 05                	jmp    3888a <e1000_set_ringparam+0x2df>
   38885:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
   3888a:	4c 89 e7             	mov    %r12,%rdi
   3888d:	e8 61 bb fe ff       	callq  243f3 <e1000_up>
   38892:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38895: R_X86_64_32S	.rodata.str1.1+0x2c01
   38899:	e8 00 00 00 00       	callq  3889e <e1000_set_ringparam+0x2f3>
			3889a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3889e:	f0 41 0f ba b4 24 c8 	lock btrl $0x1,0x7c8(%r12)
   388a5:	07 00 00 01 
   388a9:	eb 37                	jmp    388e2 <e1000_set_ringparam+0x337>
   388ab:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
   388b0:	eb 30                	jmp    388e2 <e1000_set_ringparam+0x337>
   388b2:	81 fa 00 10 00 00    	cmp    $0x1000,%edx
   388b8:	b8 00 10 00 00       	mov    $0x1000,%eax
   388bd:	0f 46 c2             	cmovbe %edx,%eax
   388c0:	ba 00 10 00 00       	mov    $0x1000,%edx
   388c5:	83 c0 07             	add    $0x7,%eax
   388c8:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   388cb:	41 89 45 14          	mov    %eax,0x14(%r13)
   388cf:	41 8b 47 20          	mov    0x20(%r15),%eax
   388d3:	83 f8 50             	cmp    $0x50,%eax
   388d6:	0f 42 c1             	cmovb  %ecx,%eax
   388d9:	41 89 46 14          	mov    %eax,0x14(%r14)
   388dd:	e9 5f fe ff ff       	jmpq   38741 <e1000_set_ringparam+0x196>
   388e2:	48 83 c4 18          	add    $0x18,%rsp
   388e6:	89 d8                	mov    %ebx,%eax
   388e8:	5b                   	pop    %rbx
   388e9:	41 5c                	pop    %r12
   388eb:	41 5d                	pop    %r13
   388ed:	41 5e                	pop    %r14
   388ef:	41 5f                	pop    %r15
   388f1:	c9                   	leaveq 
   388f2:	c3                   	retq   

00000000000388f3 <e1000_get_eeprom>:
   388f3:	55                   	push   %rbp
   388f4:	48 89 e5             	mov    %rsp,%rbp
   388f7:	41 57                	push   %r15
   388f9:	41 56                	push   %r14
   388fb:	41 55                	push   %r13
   388fd:	41 54                	push   %r12
   388ff:	41 bc ea ff ff ff    	mov    $0xffffffea,%r12d
   38905:	53                   	push   %rbx
   38906:	48 89 fb             	mov    %rdi,%rbx
   38909:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3890c: R_X86_64_32S	.rodata.str1.1+0x3c02
   38910:	48 83 ec 18          	sub    $0x18,%rsp
   38914:	48 89 75 c8          	mov    %rsi,0xffffffffffffffc8(%rbp)
   38918:	48 89 55 c0          	mov    %rdx,0xffffffffffffffc0(%rbp)
   3891c:	e8 00 00 00 00       	callq  38921 <e1000_get_eeprom+0x2e>
			3891d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38921:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38924: R_X86_64_32S	.rodata.str1.1+0x1be
   38928:	e8 00 00 00 00       	callq  3892d <e1000_get_eeprom+0x3a>
			38929: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3892d:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   38931:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
   38935:	0f 84 00 01 00 00    	je     38a3b <e1000_get_eeprom+0x148>
   3893b:	4c 8d bb b8 0b 00 00 	lea    0xbb8(%rbx),%r15
   38942:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38945: R_X86_64_32S	.rodata.str1.1+0x3139
   38949:	41 bc f4 ff ff ff    	mov    $0xfffffff4,%r12d
   3894f:	41 0f b7 87 e6 00 00 	movzwl 0xe6(%r15),%eax
   38956:	00 
   38957:	41 0f b7 97 e8 00 00 	movzwl 0xe8(%r15),%edx
   3895e:	00 
   3895f:	c1 e0 10             	shl    $0x10,%eax
   38962:	09 d0                	or     %edx,%eax
   38964:	48 8b 55 c8          	mov    0xffffffffffffffc8(%rbp),%rdx
   38968:	89 42 04             	mov    %eax,0x4(%rdx)
   3896b:	8b 42 08             	mov    0x8(%rdx),%eax
   3896e:	41 89 c6             	mov    %eax,%r14d
   38971:	03 42 0c             	add    0xc(%rdx),%eax
   38974:	41 d1 ee             	shr    %r14d
   38977:	8d 58 ff             	lea    0xffffffffffffffff(%rax),%ebx
   3897a:	b8 01 00 00 00       	mov    $0x1,%eax
   3897f:	44 29 f0             	sub    %r14d,%eax
   38982:	d1 eb                	shr    %ebx
   38984:	01 d8                	add    %ebx,%eax
   38986:	89 45 d0             	mov    %eax,0xffffffffffffffd0(%rbp)
   38989:	e8 00 00 00 00       	callq  3898e <e1000_get_eeprom+0x9b>
			3898a: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3898e:	48 63 7d d0          	movslq 0xffffffffffffffd0(%rbp),%rdi
   38992:	be d0 00 00 00       	mov    $0xd0,%esi
   38997:	48 01 ff             	add    %rdi,%rdi
   3899a:	e8 00 00 00 00       	callq  3899f <e1000_get_eeprom+0xac>
			3899b: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   3899f:	48 85 c0             	test   %rax,%rax
   389a2:	49 89 c5             	mov    %rax,%r13
   389a5:	0f 84 90 00 00 00    	je     38a3b <e1000_get_eeprom+0x148>
   389ab:	c7 45 d4 00 00 00 00 	movl   $0x0,0xffffffffffffffd4(%rbp)
   389b2:	41 83 7f 48 01       	cmpl   $0x1,0x48(%r15)
   389b7:	75 24                	jne    389dd <e1000_get_eeprom+0xea>
   389b9:	89 da                	mov    %ebx,%edx
   389bb:	41 0f b7 f6          	movzwl %r14w,%esi
   389bf:	48 89 c1             	mov    %rax,%rcx
   389c2:	66 44 29 f2          	sub    %r14w,%dx
   389c6:	4c 89 ff             	mov    %r15,%rdi
   389c9:	ff c2                	inc    %edx
   389cb:	0f b7 d2             	movzwl %dx,%edx
   389ce:	e8 3c 3d fe ff       	callq  1c70f <e1000_read_eeprom>
   389d3:	41 89 c4             	mov    %eax,%r12d
   389d6:	eb 36                	jmp    38a0e <e1000_get_eeprom+0x11b>
   389d8:	45 31 e4             	xor    %r12d,%r12d
   389db:	eb 31                	jmp    38a0e <e1000_get_eeprom+0x11b>
   389dd:	8b 55 d4             	mov    0xffffffffffffffd4(%rbp),%edx
   389e0:	0f b7 c2             	movzwl %dx,%eax
   389e3:	3b 45 d0             	cmp    0xffffffffffffffd0(%rbp),%eax
   389e6:	7d f0                	jge    389d8 <e1000_get_eeprom+0xe5>
   389e8:	0f b7 ca             	movzwl %dx,%ecx
   389eb:	42 8d 34 32          	lea    (%rdx,%r14,1),%esi
   389ef:	4c 89 ff             	mov    %r15,%rdi
   389f2:	49 8d 4c 4d 00       	lea    0x0(%r13,%rcx,2),%rcx
   389f7:	ba 01 00 00 00       	mov    $0x1,%edx
   389fc:	0f b7 f6             	movzwl %si,%esi
   389ff:	e8 0b 3d fe ff       	callq  1c70f <e1000_read_eeprom>
   38a04:	ff 45 d4             	incl   0xffffffffffffffd4(%rbp)
   38a07:	85 c0                	test   %eax,%eax
   38a09:	41 89 c4             	mov    %eax,%r12d
   38a0c:	74 cf                	je     389dd <e1000_get_eeprom+0xea>
   38a0e:	31 d2                	xor    %edx,%edx
   38a10:	0f b7 c2             	movzwl %dx,%eax
   38a13:	ff c2                	inc    %edx
   38a15:	3b 45 d0             	cmp    0xffffffffffffffd0(%rbp),%eax
   38a18:	7c f6                	jl     38a10 <e1000_get_eeprom+0x11d>
   38a1a:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   38a1e:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
   38a22:	fc                   	cld    
   38a23:	8b 70 08             	mov    0x8(%rax),%esi
   38a26:	8b 48 0c             	mov    0xc(%rax),%ecx
   38a29:	83 e6 01             	and    $0x1,%esi
   38a2c:	49 8d 74 35 00       	lea    0x0(%r13,%rsi,1),%rsi
   38a31:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   38a33:	4c 89 ef             	mov    %r13,%rdi
   38a36:	e8 00 00 00 00       	callq  38a3b <e1000_get_eeprom+0x148>
			38a37: R_X86_64_PC32	kfree+0xfffffffffffffffc
   38a3b:	48 83 c4 18          	add    $0x18,%rsp
   38a3f:	44 89 e0             	mov    %r12d,%eax
   38a42:	5b                   	pop    %rbx
   38a43:	41 5c                	pop    %r12
   38a45:	41 5d                	pop    %r13
   38a47:	41 5e                	pop    %r14
   38a49:	41 5f                	pop    %r15
   38a4b:	c9                   	leaveq 
   38a4c:	c3                   	retq   

0000000000038a4d <e1000_clean_rx_irq>:
   38a4d:	55                   	push   %rbp
   38a4e:	48 89 e5             	mov    %rsp,%rbp
   38a51:	41 57                	push   %r15
   38a53:	41 56                	push   %r14
   38a55:	41 55                	push   %r13
   38a57:	41 54                	push   %r12
   38a59:	53                   	push   %rbx
   38a5a:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
   38a61:	48 89 bd f8 fe ff ff 	mov    %rdi,0xfffffffffffffef8(%rbp)
   38a68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38a6b: R_X86_64_32S	.rodata.str1.1+0x3c13
   38a6f:	48 89 95 e8 fe ff ff 	mov    %rdx,0xfffffffffffffee8(%rbp)
   38a76:	89 8d e4 fe ff ff    	mov    %ecx,0xfffffffffffffee4(%rbp)
   38a7c:	48 89 b5 f0 fe ff ff 	mov    %rsi,0xfffffffffffffef0(%rbp)
   38a83:	e8 00 00 00 00       	callq  38a88 <e1000_clean_rx_irq+0x3b>
			38a84: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38a88:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   38a8f:	48 8b 95 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdx
   38a96:	48 8b 8d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rcx
   38a9d:	48 8b 9d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rbx
   38aa4:	48 05 b8 03 00 00    	add    $0x3b8,%rax
   38aaa:	48 89 85 10 ff ff ff 	mov    %rax,0xffffffffffffff10(%rbp)
   38ab1:	48 8b 92 f0 02 00 00 	mov    0x2f0(%rdx),%rdx
   38ab8:	48 89 95 18 ff ff ff 	mov    %rdx,0xffffffffffffff18(%rbp)
   38abf:	48 8b 89 f8 02 00 00 	mov    0x2f8(%rcx),%rcx
   38ac6:	48 8b 95 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdx
   38acd:	48 89 8d 20 ff ff ff 	mov    %rcx,0xffffffffffffff20(%rbp)
   38ad4:	8b 5b 1c             	mov    0x1c(%rbx),%ebx
   38ad7:	89 9d 44 ff ff ff    	mov    %ebx,0xffffffffffffff44(%rbp)
   38add:	48 8b 0a             	mov    (%rdx),%rcx
   38ae0:	89 d8                	mov    %ebx,%eax
   38ae2:	48 c1 e0 04          	shl    $0x4,%rax
   38ae6:	31 db                	xor    %ebx,%ebx
   38ae8:	4c 8d 34 00          	lea    (%rax,%rax,1),%r14
   38aec:	48 01 c1             	add    %rax,%rcx
   38aef:	48 89 8d 28 ff ff ff 	mov    %rcx,0xffffffffffffff28(%rbp)
   38af6:	4c 03 72 20          	add    0x20(%rdx),%r14
   38afa:	c7 85 48 ff ff ff 00 	movl   $0x0,0xffffffffffffff48(%rbp)
   38b01:	00 00 00 
   38b04:	c7 85 6c ff ff ff 00 	movl   $0x0,0xffffffffffffff6c(%rbp)
   38b0b:	00 00 00 
   38b0e:	c7 85 4c ff ff ff 00 	movl   $0x0,0xffffffffffffff4c(%rbp)
   38b15:	00 00 00 
   38b18:	eb 26                	jmp    38b40 <e1000_clean_rx_irq+0xf3>
   38b1a:	48 c1 a5 78 ff ff ff 	shlq   $0x5,0xffffffffffffff78(%rbp)
   38b21:	05 
   38b22:	4c 8b b5 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%r14
   38b29:	b3 01                	mov    $0x1,%bl
   38b2b:	48 8b 85 30 ff ff ff 	mov    0xffffffffffffff30(%rbp),%rax
   38b32:	4c 03 b5 78 ff ff ff 	add    0xffffffffffffff78(%rbp),%r14
   38b39:	48 89 85 28 ff ff ff 	mov    %rax,0xffffffffffffff28(%rbp)
   38b40:	48 8b 95 28 ff ff ff 	mov    0xffffffffffffff28(%rbp),%rdx
   38b47:	f6 42 0c 01          	testb  $0x1,0xc(%rdx)
   38b4b:	0f 84 0e 19 00 00    	je     3a45f <e1000_clean_rx_irq+0x1a12>
   38b51:	48 8b 8d e8 fe ff ff 	mov    0xfffffffffffffee8(%rbp),%rcx
   38b58:	8b 01                	mov    (%rcx),%eax
   38b5a:	3b 85 e4 fe ff ff    	cmp    0xfffffffffffffee4(%rbp),%eax
   38b60:	0f 8d f9 18 00 00    	jge    3a45f <e1000_clean_rx_irq+0x1a12>
   38b66:	ff c0                	inc    %eax
   38b68:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38b6b: R_X86_64_32S	.rodata.str1.1+0x2c84
   38b6f:	89 01                	mov    %eax,(%rcx)
   38b71:	8a 5a 0c             	mov    0xc(%rdx),%bl
   38b74:	88 9d 5b ff ff ff    	mov    %bl,0xffffffffffffff5b(%rbp)
   38b7a:	49 8b 06             	mov    (%r14),%rax
   38b7d:	48 89 85 50 ff ff ff 	mov    %rax,0xffffffffffffff50(%rbp)
   38b84:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   38b8b:	48 8b 95 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rdx
   38b92:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   38b99:	48 8b 82 c8 00 00 00 	mov    0xc8(%rdx),%rax
   38ba0:	ff 85 44 ff ff ff    	incl   0xffffffffffffff44(%rbp)
   38ba6:	8b 9d 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%ebx
   38bac:	48 83 e8 02          	sub    $0x2,%rax
   38bb0:	3b 59 14             	cmp    0x14(%rcx),%ebx
   38bb3:	0f 18 08             	prefetcht0 (%rax)
   38bb6:	b8 00 00 00 00       	mov    $0x0,%eax
   38bbb:	0f 45 c3             	cmovne %ebx,%eax
   38bbe:	45 31 e4             	xor    %r12d,%r12d
   38bc1:	89 85 44 ff ff ff    	mov    %eax,0xffffffffffffff44(%rbp)
   38bc7:	89 c0                	mov    %eax,%eax
   38bc9:	48 89 85 78 ff ff ff 	mov    %rax,0xffffffffffffff78(%rbp)
   38bd0:	48 c1 e0 04          	shl    $0x4,%rax
   38bd4:	48 89 85 30 ff ff ff 	mov    %rax,0xffffffffffffff30(%rbp)
   38bdb:	48 8b 11             	mov    (%rcx),%rdx
   38bde:	48 01 d0             	add    %rdx,%rax
   38be1:	48 89 85 30 ff ff ff 	mov    %rax,0xffffffffffffff30(%rbp)
   38be8:	48 8b 49 20          	mov    0x20(%rcx),%rcx
   38bec:	0f 18 08             	prefetcht0 (%rax)
   38bef:	ff 85 6c ff ff ff    	incl   0xffffffffffffff6c(%rbp)
   38bf5:	48 89 8d 70 ff ff ff 	mov    %rcx,0xffffffffffffff70(%rbp)
   38bfc:	45 8b 6e 18          	mov    0x18(%r14),%r13d
   38c00:	4d 8b 7e 08          	mov    0x8(%r14),%r15
   38c04:	e8 00 00 00 00       	callq  38c09 <e1000_clean_rx_irq+0x1bc>
			38c05: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38c09:	48 8b 85 20 ff ff ff 	mov    0xffffffffffffff20(%rbp),%rax
   38c10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38c13: R_X86_64_32S	.rodata.str1.1+0x2c95
   38c17:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   38c1b:	48 83 bd 20 ff ff ff 	cmpq   $0x0,0xffffffffffffff20(%rbp)
   38c22:	00 
   38c23:	4c 0f 45 e0          	cmovne %rax,%r12
   38c27:	e8 00 00 00 00       	callq  38c2c <e1000_clean_rx_irq+0x1df>
			38c28: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38c2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38c2f: R_X86_64_32S	.rodata.str1.1+0x2ca6
   38c33:	e8 00 00 00 00       	callq  38c38 <e1000_clean_rx_irq+0x1eb>
			38c34: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38c38:	4d 85 e4             	test   %r12,%r12
   38c3b:	75 09                	jne    38c46 <e1000_clean_rx_irq+0x1f9>
   38c3d:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 38c44 <e1000_clean_rx_irq+0x1f7>
			38c40: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   38c44:	eb 13                	jmp    38c59 <e1000_clean_rx_irq+0x20c>
   38c46:	49 8b 9c 24 e8 01 00 	mov    0x1e8(%r12),%rbx
   38c4d:	00 
   38c4e:	48 85 db             	test   %rbx,%rbx
   38c51:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 38c59 <e1000_clean_rx_irq+0x20c>
   38c58:	00 
			38c55: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   38c59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38c5c: R_X86_64_32S	.rodata.str1.1+0x2cb2
   38c60:	e8 00 00 00 00       	callq  38c65 <e1000_clean_rx_irq+0x218>
			38c61: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38c65:	48 8b 43 20          	mov    0x20(%rbx),%rax
   38c69:	48 85 c0             	test   %rax,%rax
   38c6c:	74 11                	je     38c7f <e1000_clean_rx_irq+0x232>
   38c6e:	41 0f b7 d5          	movzwl %r13w,%edx
   38c72:	b9 02 00 00 00       	mov    $0x2,%ecx
   38c77:	4c 89 fe             	mov    %r15,%rsi
   38c7a:	4c 89 e7             	mov    %r12,%rdi
   38c7d:	ff d0                	callq  *%rax
   38c7f:	0f b6 95 5b ff ff ff 	movzbl 0xffffffffffffff5b(%rbp),%edx
   38c86:	48 8b 9d 28 ff ff ff 	mov    0xffffffffffffff28(%rbp),%rbx
   38c8d:	8b 43 08             	mov    0x8(%rbx),%eax
   38c90:	89 95 04 ff ff ff    	mov    %edx,0xffffffffffffff04(%rbp)
   38c96:	80 e2 02             	and    $0x2,%dl
   38c99:	0f 84 f7 01 00 00    	je     38e96 <e1000_clean_rx_irq+0x449>
   38c9f:	48 8b 9d 28 ff ff ff 	mov    0xffffffffffffff28(%rbp),%rbx
   38ca6:	44 0f b7 e0          	movzwl %ax,%r12d
   38caa:	0f b6 43 0d          	movzbl 0xd(%rbx),%eax
   38cae:	89 c1                	mov    %eax,%ecx
   38cb0:	81 e1 97 00 00 00    	and    $0x97,%ecx
   38cb6:	0f 84 07 02 00 00    	je     38ec3 <e1000_clean_rx_irq+0x476>
   38cbc:	48 8b 9d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rbx
   38cc3:	44 89 e2             	mov    %r12d,%edx
   38cc6:	48 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%rax
   38ccd:	8a 44 10 ff          	mov    0xffffffffffffffff(%rax,%rdx,1),%al
   38cd1:	48 8b 95 10 ff ff ff 	mov    0xffffffffffffff10(%rbp),%rdx
   38cd8:	80 ba 0f 01 00 00 00 	cmpb   $0x0,0x10f(%rdx)
   38cdf:	0f 84 cf 01 00 00    	je     38eb4 <e1000_clean_rx_irq+0x467>
   38ce5:	ff c9                	dec    %ecx
   38ce7:	0f 85 b8 01 00 00    	jne    38ea5 <e1000_clean_rx_irq+0x458>
   38ced:	3c 0f                	cmp    $0xf,%al
   38cef:	0f 85 a1 01 00 00    	jne    38e96 <e1000_clean_rx_irq+0x449>
   38cf5:	f6 85 04 ff ff ff 08 	testb  $0x8,0xffffffffffffff04(%rbp)
   38cfc:	74 1c                	je     38d1a <e1000_clean_rx_irq+0x2cd>
   38cfe:	8b 82 9c 00 00 00    	mov    0x9c(%rdx),%eax
   38d04:	83 e8 04             	sub    $0x4,%eax
   38d07:	41 39 c4             	cmp    %eax,%r12d
   38d0a:	0f 86 95 01 00 00    	jbe    38ea5 <e1000_clean_rx_irq+0x458>
   38d10:	8b 82 98 00 00 00    	mov    0x98(%rdx),%eax
   38d16:	ff c0                	inc    %eax
   38d18:	eb 1d                	jmp    38d37 <e1000_clean_rx_irq+0x2ea>
   38d1a:	48 8b 8d 10 ff ff ff 	mov    0xffffffffffffff10(%rbp),%rcx
   38d21:	44 3b a1 9c 00 00 00 	cmp    0x9c(%rcx),%r12d
   38d28:	0f 86 77 01 00 00    	jbe    38ea5 <e1000_clean_rx_irq+0x458>
   38d2e:	8b 81 98 00 00 00    	mov    0x98(%rcx),%eax
   38d34:	83 c0 05             	add    $0x5,%eax
   38d37:	41 39 c4             	cmp    %eax,%r12d
   38d3a:	0f 87 65 01 00 00    	ja     38ea5 <e1000_clean_rx_irq+0x458>
   38d40:	4c 8b bd f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%r15
   38d47:	41 ff cc             	dec    %r12d
   38d4a:	49 81 c7 b8 00 00 00 	add    $0xb8,%r15
   38d51:	4c 89 ff             	mov    %r15,%rdi
   38d54:	e8 00 00 00 00       	callq  38d59 <e1000_clean_rx_irq+0x30c>
			38d55: R_X86_64_PC32	.spinlock.text+0x1c0
   38d59:	48 8b 9d f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rbx
   38d60:	48 89 85 38 ff ff ff 	mov    %rax,0xffffffffffffff38(%rbp)
   38d67:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38d6a: R_X86_64_32S	.rodata.str1.1+0x3c26
   38d6e:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   38d75:	48 81 c3 d8 04 00 00 	add    $0x4d8,%rbx
   38d7c:	4c 8b a8 c8 00 00 00 	mov    0xc8(%rax),%r13
   38d83:	e8 00 00 00 00       	callq  38d88 <e1000_clean_rx_irq+0x33b>
			38d84: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38d88:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
   38d8f:	44 89 e0             	mov    %r12d,%eax
   38d92:	48 ff 0b             	decq   (%rbx)
   38d95:	48 ff 83 d8 00 00 00 	incq   0xd8(%rbx)
   38d9c:	48 01 d0             	add    %rdx,%rax
   38d9f:	85 d2                	test   %edx,%edx
   38da1:	48 89 83 f8 00 00 00 	mov    %rax,0xf8(%rbx)
   38da8:	79 0b                	jns    38db5 <e1000_clean_rx_irq+0x368>
   38daa:	85 c0                	test   %eax,%eax
   38dac:	78 07                	js     38db5 <e1000_clean_rx_irq+0x368>
   38dae:	48 ff 83 00 01 00 00 	incq   0x100(%rbx)
   38db5:	41 8a 45 00          	mov    0x0(%r13),%al
   38db9:	3c ff                	cmp    $0xff,%al
   38dbb:	75 10                	jne    38dcd <e1000_clean_rx_irq+0x380>
   38dbd:	41 80 7d 01 ff       	cmpb   $0xff,0x1(%r13)
   38dc2:	75 0d                	jne    38dd1 <e1000_clean_rx_irq+0x384>
   38dc4:	48 ff 83 e0 00 00 00 	incq   0xe0(%rbx)
   38dcb:	eb 0b                	jmp    38dd8 <e1000_clean_rx_irq+0x38b>
   38dcd:	a8 01                	test   $0x1,%al
   38dcf:	74 07                	je     38dd8 <e1000_clean_rx_irq+0x38b>
   38dd1:	48 ff 83 e8 00 00 00 	incq   0xe8(%rbx)
   38dd8:	48 8b 95 10 ff ff ff 	mov    0xffffffffffffff10(%rbp),%rdx
   38ddf:	44 3b a2 98 00 00 00 	cmp    0x98(%rdx),%r12d
   38de6:	75 16                	jne    38dfe <e1000_clean_rx_irq+0x3b1>
   38de8:	48 8b 83 30 01 00 00 	mov    0x130(%rbx),%rax
   38def:	48 85 c0             	test   %rax,%rax
   38df2:	74 0a                	je     38dfe <e1000_clean_rx_irq+0x3b1>
   38df4:	48 ff c8             	dec    %rax
   38df7:	48 89 83 30 01 00 00 	mov    %rax,0x130(%rbx)
   38dfe:	41 83 fc 40          	cmp    $0x40,%r12d
   38e02:	75 10                	jne    38e14 <e1000_clean_rx_irq+0x3c7>
   38e04:	48 ff 83 a8 00 00 00 	incq   0xa8(%rbx)
   38e0b:	48 ff 8b b0 00 00 00 	decq   0xb0(%rbx)
   38e12:	eb 71                	jmp    38e85 <e1000_clean_rx_irq+0x438>
   38e14:	41 83 fc 7f          	cmp    $0x7f,%r12d
   38e18:	75 10                	jne    38e2a <e1000_clean_rx_irq+0x3dd>
   38e1a:	48 ff 83 b0 00 00 00 	incq   0xb0(%rbx)
   38e21:	48 ff 8b b8 00 00 00 	decq   0xb8(%rbx)
   38e28:	eb 5b                	jmp    38e85 <e1000_clean_rx_irq+0x438>
   38e2a:	41 81 fc ff 00 00 00 	cmp    $0xff,%r12d
   38e31:	75 10                	jne    38e43 <e1000_clean_rx_irq+0x3f6>
   38e33:	48 ff 83 b8 00 00 00 	incq   0xb8(%rbx)
   38e3a:	48 ff 8b c0 00 00 00 	decq   0xc0(%rbx)
   38e41:	eb 42                	jmp    38e85 <e1000_clean_rx_irq+0x438>
   38e43:	41 81 fc ff 01 00 00 	cmp    $0x1ff,%r12d
   38e4a:	75 10                	jne    38e5c <e1000_clean_rx_irq+0x40f>
   38e4c:	48 ff 83 c0 00 00 00 	incq   0xc0(%rbx)
   38e53:	48 ff 8b c8 00 00 00 	decq   0xc8(%rbx)
   38e5a:	eb 29                	jmp    38e85 <e1000_clean_rx_irq+0x438>
   38e5c:	41 81 fc ff 03 00 00 	cmp    $0x3ff,%r12d
   38e63:	75 10                	jne    38e75 <e1000_clean_rx_irq+0x428>
   38e65:	48 ff 83 c8 00 00 00 	incq   0xc8(%rbx)
   38e6c:	48 ff 8b d0 00 00 00 	decq   0xd0(%rbx)
   38e73:	eb 10                	jmp    38e85 <e1000_clean_rx_irq+0x438>
   38e75:	41 81 fc f2 05 00 00 	cmp    $0x5f2,%r12d
   38e7c:	75 07                	jne    38e85 <e1000_clean_rx_irq+0x438>
   38e7e:	48 ff 83 d0 00 00 00 	incq   0xd0(%rbx)
   38e85:	48 8b b5 38 ff ff ff 	mov    0xffffffffffffff38(%rbp),%rsi
   38e8c:	4c 89 ff             	mov    %r15,%rdi
   38e8f:	e8 00 00 00 00       	callq  38e94 <e1000_clean_rx_irq+0x447>
			38e90: R_X86_64_PC32	.spinlock.text+0x3d8
   38e94:	eb 2d                	jmp    38ec3 <e1000_clean_rx_irq+0x476>
   38e96:	48 8b 8d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rcx
   38e9d:	49 89 0e             	mov    %rcx,(%r14)
   38ea0:	e9 79 15 00 00       	jmpq   3a41e <e1000_clean_rx_irq+0x19d1>
   38ea5:	48 8b 9d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rbx
   38eac:	49 89 1e             	mov    %rbx,(%r14)
   38eaf:	e9 6a 15 00 00       	jmpq   3a41e <e1000_clean_rx_irq+0x19d1>
   38eb4:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   38ebb:	49 89 06             	mov    %rax,(%r14)
   38ebe:	e9 5b 15 00 00       	jmpq   3a41e <e1000_clean_rx_irq+0x19d1>
   38ec3:	45 8d 6c 24 fc       	lea    0xfffffffffffffffc(%r12),%r13d
   38ec8:	ff 85 4c ff ff ff    	incl   0xffffffffffffff4c(%rbp)
   38ece:	44 01 ad 48 ff ff ff 	add    %r13d,0xffffffffffffff48(%rbp)
   38ed5:	44 3b 2d 00 00 00 00 	cmp    0(%rip),%r13d        # 38edc <e1000_clean_rx_irq+0x48f>
			38ed8: R_X86_64_PC32	.data.read_mostly+0xfffffffffffffffc
   38edc:	0f 83 8e 00 00 00    	jae    38f70 <e1000_clean_rx_irq+0x523>
   38ee2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38ee5: R_X86_64_32S	.rodata.str1.1+0x3c3d
   38ee9:	45 8d 7d 02          	lea    0x2(%r13),%r15d
   38eed:	e8 00 00 00 00       	callq  38ef2 <e1000_clean_rx_irq+0x4a5>
			38eee: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38ef2:	48 8b bd 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rdi
   38ef9:	ba 20 00 00 00       	mov    $0x20,%edx
   38efe:	44 89 fe             	mov    %r15d,%esi
   38f01:	e8 00 00 00 00       	callq  38f06 <e1000_clean_rx_irq+0x4b9>
			38f02: R_X86_64_PC32	__netdev_alloc_skb+0xfffffffffffffffc
   38f06:	48 85 c0             	test   %rax,%rax
   38f09:	49 89 c4             	mov    %rax,%r12
   38f0c:	74 62                	je     38f70 <e1000_clean_rx_irq+0x523>
   38f0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38f11: R_X86_64_32S	.rodata.str1.1+0x2f0a
   38f15:	e8 00 00 00 00       	callq  38f1a <e1000_clean_rx_irq+0x4cd>
			38f16: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38f1a:	49 83 84 24 c8 00 00 	addq   $0x2,0xc8(%r12)
   38f21:	00 02 
   38f23:	41 83 84 24 b4 00 00 	addl   $0x2,0xb4(%r12)
   38f2a:	00 02 
   38f2c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38f2f: R_X86_64_32S	.rodata.str1.1+0x3c4e
   38f33:	48 8b 95 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rdx
   38f3a:	48 8b 9a c8 00 00 00 	mov    0xc8(%rdx),%rbx
   38f41:	e8 00 00 00 00       	callq  38f46 <e1000_clean_rx_irq+0x4f9>
			38f42: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38f46:	49 8b bc 24 c8 00 00 	mov    0xc8(%r12),%rdi
   38f4d:	00 
   38f4e:	44 89 f9             	mov    %r15d,%ecx
   38f51:	48 83 eb 02          	sub    $0x2,%rbx
   38f55:	fc                   	cld    
   38f56:	48 83 ef 02          	sub    $0x2,%rdi
   38f5a:	48 89 de             	mov    %rbx,%rsi
   38f5d:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   38f5f:	48 8b 8d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rcx
   38f66:	49 89 0e             	mov    %rcx,(%r14)
   38f69:	4c 89 a5 50 ff ff ff 	mov    %r12,0xffffffffffffff50(%rbp)
   38f70:	48 8b bd 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rdi
   38f77:	44 89 ee             	mov    %r13d,%esi
   38f7a:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   38f7e:	e8 94 96 fe ff       	callq  22617 <skb_put>
   38f83:	48 8b 9d 28 ff ff ff 	mov    0xffffffffffffff28(%rbp),%rbx
   38f8a:	0f b6 85 5b ff ff ff 	movzbl 0xffffffffffffff5b(%rbp),%eax
   38f91:	48 8b 8d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rcx
   38f98:	48 8b bd f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdi
   38f9f:	0f b6 73 0d          	movzbl 0xd(%rbx),%esi
   38fa3:	0f b7 53 0a          	movzwl 0xa(%rbx),%edx
   38fa7:	48 8d 5d cc          	lea    0xffffffffffffffcc(%rbp),%rbx
   38fab:	c1 e6 18             	shl    $0x18,%esi
   38fae:	09 c6                	or     %eax,%esi
   38fb0:	e8 78 a0 fe ff       	callq  2302d <e1000_rx_checksum>
   38fb5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38fb8: R_X86_64_32S	.rodata.str1.1+0x3c6d
   38fbc:	e8 00 00 00 00       	callq  38fc1 <e1000_clean_rx_irq+0x574>
			38fbd: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38fc1:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   38fc8:	48 8b 95 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rdx
   38fcf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38fd2: R_X86_64_32S	.rodata.str1.1+0x3c7c
   38fd6:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
   38fdd:	00 
   38fde:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   38fe5:	00 
   38fe6:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
   38fed:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
   38ff1:	48 89 55 b8          	mov    %rdx,0xffffffffffffffb8(%rbp)
   38ff5:	e8 00 00 00 00       	callq  38ffa <e1000_clean_rx_irq+0x5ad>
			38ff6: R_X86_64_PC32	record_function+0xfffffffffffffffc
   38ffa:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   38ffe:	48 89 da             	mov    %rbx,%rdx
   39001:	4c 89 e6             	mov    %r12,%rsi
   39004:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39007: R_X86_64_32S	.rodata.str1.1+0x3c6d
   3900b:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   39012:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   39019:	00 
   3901a:	e8 00 00 00 00       	callq  3901f <e1000_clean_rx_irq+0x5d2>
			3901b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3901f:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39023:	48 85 c0             	test   %rax,%rax
   39026:	0f 84 8d 00 00 00    	je     390b9 <e1000_clean_rx_irq+0x66c>
   3902c:	8a 40 7d             	mov    0x7d(%rax),%al
   3902f:	48 8d 4d c4          	lea    0xffffffffffffffc4(%rbp),%rcx
   39033:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39039:	48 89 da             	mov    %rbx,%rdx
   3903c:	4c 89 e6             	mov    %r12,%rsi
   3903f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39042: R_X86_64_32S	.rodata.str1.1+0x3c6d
   39046:	83 e0 07             	and    $0x7,%eax
   39049:	0f b6 c0             	movzbl %al,%eax
   3904c:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
   3904f:	e8 00 00 00 00       	callq  39054 <e1000_clean_rx_irq+0x607>
			39050: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39054:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   39058:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3905e:	48 89 da             	mov    %rbx,%rdx
   39061:	4c 89 e6             	mov    %r12,%rsi
   39064:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39067: R_X86_64_32S	.rodata.str1.1+0x3c6d
   3906b:	48 83 c1 68          	add    $0x68,%rcx
   3906f:	e8 00 00 00 00       	callq  39074 <e1000_clean_rx_irq+0x627>
			39070: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39074:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   39078:	48 89 da             	mov    %rbx,%rdx
   3907b:	4c 89 e6             	mov    %r12,%rsi
   3907e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39081: R_X86_64_32S	.rodata.str1.1+0x3c6d
   39085:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   3908c:	e8 00 00 00 00       	callq  39091 <e1000_clean_rx_irq+0x644>
			3908d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39091:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39095:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   3909c:	48 85 c9             	test   %rcx,%rcx
   3909f:	74 18                	je     390b9 <e1000_clean_rx_irq+0x66c>
   390a1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   390a7:	48 89 da             	mov    %rbx,%rdx
   390aa:	4c 89 e6             	mov    %r12,%rsi
   390ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			390b0: R_X86_64_32S	.rodata.str1.1+0x3c6d
   390b4:	e8 00 00 00 00       	callq  390b9 <e1000_clean_rx_irq+0x66c>
			390b5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   390b9:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
   390bd:	48 8d 55 cc          	lea    0xffffffffffffffcc(%rbp),%rdx
   390c1:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   390c5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			390c8: R_X86_64_32S	.rodata.str1.1+0x3c6d
   390cc:	4c 89 e9             	mov    %r13,%rcx
   390cf:	e8 00 00 00 00       	callq  390d4 <e1000_clean_rx_irq+0x687>
			390d0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   390d4:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   390d8:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
   390dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			390df: R_X86_64_32S	.rodata.str1.1+0x3c6d
   390e3:	48 c7 45 80 b6 05 00 	movq   $0x5b6,0xffffffffffffff80(%rbp)
   390ea:	00 
   390eb:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   390ef:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
   390f2:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   390f5:	e8 00 00 00 00       	callq  390fa <e1000_clean_rx_irq+0x6ad>
			390f6: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   390fa:	48 8b 8d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rcx
   39101:	48 8b 9d 18 ff ff ff 	mov    0xffffffffffffff18(%rbp),%rbx
   39108:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3910b: R_X86_64_32S	.rodata.str1.1+0x3c99
   3910f:	48 89 4d a8          	mov    %rcx,0xffffffffffffffa8(%rbp)
   39113:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
   39117:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   3911b:	e8 00 00 00 00       	callq  39120 <e1000_clean_rx_irq+0x6d3>
			3911c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   39120:	4c 8b 65 90          	mov    0xffffffffffffff90(%rbp),%r12
   39124:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   39128:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   3912e:	48 89 da             	mov    %rbx,%rdx
   39131:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39134: R_X86_64_32S	.rodata.str1.1+0x3c6d
   39138:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   3913f:	4c 89 e6             	mov    %r12,%rsi
   39142:	e8 00 00 00 00       	callq  39147 <e1000_clean_rx_irq+0x6fa>
			39143: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   39147:	48 83 7d a8 00       	cmpq   $0x0,0xffffffffffffffa8(%rbp)
   3914c:	0f 84 9b 00 00 00    	je     391ed <e1000_clean_rx_irq+0x7a0>
   39152:	4d 89 e8             	mov    %r13,%r8
   39155:	b9 01 00 00 00       	mov    $0x1,%ecx
   3915a:	48 89 da             	mov    %rbx,%rdx
   3915d:	4c 89 e6             	mov    %r12,%rsi
   39160:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39163: R_X86_64_32S	.rodata.str1.1+0x3c6d
   39167:	e8 00 00 00 00       	callq  3916c <e1000_clean_rx_irq+0x71f>
			39168: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3916c:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   39170:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   39173:	4c 89 e6             	mov    %r12,%rsi
   39176:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39179: R_X86_64_32S	.rodata.str1.1+0x3c6d
   3917d:	8a 41 7d             	mov    0x7d(%rcx),%al
   39180:	83 e2 07             	and    $0x7,%edx
   39183:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   39186:	09 d0                	or     %edx,%eax
   39188:	48 89 da             	mov    %rbx,%rdx
   3918b:	88 41 7d             	mov    %al,0x7d(%rcx)
   3918e:	4c 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%r8
   39192:	b9 04 00 00 00       	mov    $0x4,%ecx
   39197:	49 83 c0 68          	add    $0x68,%r8
   3919b:	e8 00 00 00 00       	callq  391a0 <e1000_clean_rx_irq+0x753>
			3919c: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   391a0:	48 8b 4d a8          	mov    0xffffffffffffffa8(%rbp),%rcx
   391a4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   391aa:	48 89 da             	mov    %rbx,%rdx
   391ad:	4c 89 e6             	mov    %r12,%rsi
   391b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			391b3: R_X86_64_32S	.rodata.str1.1+0x3c6d
   391b7:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   391be:	e8 00 00 00 00       	callq  391c3 <e1000_clean_rx_irq+0x776>
			391bf: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   391c3:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   391c7:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   391ce:	48 85 c0             	test   %rax,%rax
   391d1:	74 1a                	je     391ed <e1000_clean_rx_irq+0x7a0>
   391d3:	49 89 c0             	mov    %rax,%r8
   391d6:	b9 01 00 00 00       	mov    $0x1,%ecx
   391db:	48 89 da             	mov    %rbx,%rdx
   391de:	4c 89 e6             	mov    %r12,%rsi
   391e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			391e4: R_X86_64_32S	.rodata.str1.1+0x3c6d
   391e8:	e8 00 00 00 00       	callq  391ed <e1000_clean_rx_irq+0x7a0>
			391e9: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   391ed:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   391f1:	48 8d 4d b0          	lea    0xffffffffffffffb0(%rbp),%rcx
   391f5:	41 b8 00 08 00 00    	mov    $0x800,%r8d
   391fb:	4c 89 e6             	mov    %r12,%rsi
   391fe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39201: R_X86_64_32S	.rodata.str1.1+0x3c6d
   39205:	48 89 da             	mov    %rbx,%rdx
   39208:	e8 00 00 00 00       	callq  3920d <e1000_clean_rx_irq+0x7c0>
			39209: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3920d:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   39211:	48 89 da             	mov    %rbx,%rdx
   39214:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39217: R_X86_64_32S	.rodata.str1.1+0x3c6d
   3921b:	b9 02 00 00 00       	mov    $0x2,%ecx
   39220:	4c 89 e6             	mov    %r12,%rsi
   39223:	e8 00 00 00 00       	callq  39228 <e1000_clean_rx_irq+0x7db>
			39224: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   39228:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   3922c:	8b 5d cc             	mov    0xffffffffffffffcc(%rbp),%ebx
   3922f:	48 85 ff             	test   %rdi,%rdi
   39232:	74 0d                	je     39241 <e1000_clean_rx_irq+0x7f4>
   39234:	e8 00 00 00 00       	callq  39239 <e1000_clean_rx_irq+0x7ec>
			39235: R_X86_64_PC32	kfree+0xfffffffffffffffc
   39239:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   39240:	00 
   39241:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   39248:	66 89 58 7e          	mov    %bx,0x7e(%rax)
   3924c:	48 8b 95 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdx
   39253:	31 c0                	xor    %eax,%eax
   39255:	48 8b 92 90 00 00 00 	mov    0x90(%rdx),%rdx
   3925c:	48 85 d2             	test   %rdx,%rdx
   3925f:	48 89 95 08 ff ff ff 	mov    %rdx,0xffffffffffffff08(%rbp)
   39266:	74 0c                	je     39274 <e1000_clean_rx_irq+0x827>
   39268:	8b 85 04 ff ff ff    	mov    0xffffffffffffff04(%rbp),%eax
   3926e:	c1 e8 03             	shr    $0x3,%eax
   39271:	83 e0 01             	and    $0x1,%eax
   39274:	85 c0                	test   %eax,%eax
   39276:	4c 8d 7d a0          	lea    0xffffffffffffffa0(%rbp),%r15
   3927a:	4c 8d 75 98          	lea    0xffffffffffffff98(%rbp),%r14
   3927e:	0f 84 a8 10 00 00    	je     3a32c <e1000_clean_rx_irq+0x18df>
   39284:	48 8b 8d 28 ff ff ff 	mov    0xffffffffffffff28(%rbp),%rcx
   3928b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3928e: R_X86_64_32S	.rodata.str1.1+0x3cb6
   39292:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   39296:	0f b7 59 0e          	movzwl 0xe(%rcx),%ebx
   3929a:	e8 00 00 00 00       	callq  3929f <e1000_clean_rx_irq+0x852>
			3929b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3929f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			392a2: R_X86_64_32S	.rodata.str1.1+0x3ccf
   392a6:	e8 00 00 00 00       	callq  392ab <e1000_clean_rx_irq+0x85e>
			392a7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   392ab:	48 8b 85 08 ff ff ff 	mov    0xffffffffffffff08(%rbp),%rax
   392b2:	89 9d 5c ff ff ff    	mov    %ebx,0xffffffffffffff5c(%rbp)
   392b8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			392bb: R_X86_64_32S	.rodata.str1.1+0x3ce1
   392bf:	8b 95 5c ff ff ff    	mov    0xffffffffffffff5c(%rbp),%edx
   392c5:	48 8b 9d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rbx
   392cc:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
   392d3:	00 
   392d4:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   392db:	00 
   392dc:	48 89 45 a8          	mov    %rax,0xffffffffffffffa8(%rbp)
   392e0:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
   392e7:	66 89 55 cc          	mov    %dx,0xffffffffffffffcc(%rbp)
   392eb:	48 89 5d a0          	mov    %rbx,0xffffffffffffffa0(%rbp)
   392ef:	c7 45 b8 01 00 00 00 	movl   $0x1,0xffffffffffffffb8(%rbp)
   392f6:	e8 00 00 00 00       	callq  392fb <e1000_clean_rx_irq+0x8ae>
			392f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
   392fb:	4c 89 f9             	mov    %r15,%rcx
   392fe:	4c 89 e2             	mov    %r12,%rdx
   39301:	4c 89 f6             	mov    %r14,%rsi
   39304:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39307: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3930b:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   39312:	48 c7 45 98 00 00 00 	movq   $0x0,0xffffffffffffff98(%rbp)
   39319:	00 
   3931a:	e8 00 00 00 00       	callq  3931f <e1000_clean_rx_irq+0x8d2>
			3931b: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3931f:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   39323:	48 85 c0             	test   %rax,%rax
   39326:	0f 84 c7 02 00 00    	je     395f3 <e1000_clean_rx_irq+0xba6>
   3932c:	8a 40 7d             	mov    0x7d(%rax),%al
   3932f:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   39333:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39339:	4c 89 e2             	mov    %r12,%rdx
   3933c:	4c 89 f6             	mov    %r14,%rsi
   3933f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39342: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39346:	48 89 d9             	mov    %rbx,%rcx
   39349:	83 e0 07             	and    $0x7,%eax
   3934c:	0f b6 c0             	movzbl %al,%eax
   3934f:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
   39352:	e8 00 00 00 00       	callq  39357 <e1000_clean_rx_irq+0x90a>
			39353: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39357:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   3935b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39361:	4c 89 e2             	mov    %r12,%rdx
   39364:	4c 89 f6             	mov    %r14,%rsi
   39367:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3936a: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3936e:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   39375:	e8 00 00 00 00       	callq  3937a <e1000_clean_rx_irq+0x92d>
			39376: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3937a:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   3937e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39384:	4c 89 e2             	mov    %r12,%rdx
   39387:	4c 89 f6             	mov    %r14,%rsi
   3938a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3938d: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39391:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   39398:	e8 00 00 00 00       	callq  3939d <e1000_clean_rx_irq+0x950>
			39399: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3939d:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   393a1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   393a7:	48 89 d9             	mov    %rbx,%rcx
   393aa:	4c 89 e2             	mov    %r12,%rdx
   393ad:	4c 89 f6             	mov    %r14,%rsi
   393b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			393b3: R_X86_64_32S	.rodata.str1.1+0x3ccf
   393b7:	8a 40 7c             	mov    0x7c(%rax),%al
   393ba:	c0 e8 02             	shr    $0x2,%al
   393bd:	83 e0 03             	and    $0x3,%eax
   393c0:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
   393c3:	e8 00 00 00 00       	callq  393c8 <e1000_clean_rx_irq+0x97b>
			393c4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   393c8:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   393cc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   393d2:	4c 89 e2             	mov    %r12,%rdx
   393d5:	4c 89 f6             	mov    %r14,%rsi
   393d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			393db: R_X86_64_32S	.rodata.str1.1+0x3ccf
   393df:	48 83 c1 6c          	add    $0x6c,%rcx
   393e3:	e8 00 00 00 00       	callq  393e8 <e1000_clean_rx_irq+0x99b>
			393e4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   393e8:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   393ec:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   393f2:	4c 89 e2             	mov    %r12,%rdx
   393f5:	4c 89 f6             	mov    %r14,%rsi
   393f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			393fb: R_X86_64_32S	.rodata.str1.1+0x3ccf
   393ff:	48 81 c1 a4 00 00 00 	add    $0xa4,%rcx
   39406:	e8 00 00 00 00       	callq  3940b <e1000_clean_rx_irq+0x9be>
			39407: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3940b:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   3940f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39415:	48 89 d9             	mov    %rbx,%rcx
   39418:	4c 89 e2             	mov    %r12,%rdx
   3941b:	4c 89 f6             	mov    %r14,%rsi
   3941e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39421: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39425:	8a 40 7c             	mov    0x7c(%rax),%al
   39428:	d0 e8                	shr    %al
   3942a:	83 e0 01             	and    $0x1,%eax
   3942d:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
   39430:	e8 00 00 00 00       	callq  39435 <e1000_clean_rx_irq+0x9e8>
			39431: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39435:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   39439:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3943f:	4c 89 e2             	mov    %r12,%rdx
   39442:	4c 89 f6             	mov    %r14,%rsi
   39445:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39448: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3944c:	48 83 c1 76          	add    $0x76,%rcx
   39450:	e8 00 00 00 00       	callq  39455 <e1000_clean_rx_irq+0xa08>
			39451: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39455:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   39459:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3945f:	4c 89 e2             	mov    %r12,%rdx
   39462:	4c 89 f6             	mov    %r14,%rsi
   39465:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39468: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3946c:	48 83 c1 74          	add    $0x74,%rcx
   39470:	e8 00 00 00 00       	callq  39475 <e1000_clean_rx_irq+0xa28>
			39471: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39475:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   39479:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3947f:	4c 89 e2             	mov    %r12,%rdx
   39482:	4c 89 f6             	mov    %r14,%rsi
   39485:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39488: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3948c:	48 83 c1 68          	add    $0x68,%rcx
   39490:	e8 00 00 00 00       	callq  39495 <e1000_clean_rx_irq+0xa48>
			39491: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39495:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   39499:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3949f:	4c 89 e2             	mov    %r12,%rdx
   394a2:	4c 89 f6             	mov    %r14,%rsi
   394a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			394a8: R_X86_64_32S	.rodata.str1.1+0x3ccf
   394ac:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   394b3:	e8 00 00 00 00       	callq  394b8 <e1000_clean_rx_irq+0xa6b>
			394b4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   394b8:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   394bc:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   394c2:	4c 89 e2             	mov    %r12,%rdx
   394c5:	4c 89 f6             	mov    %r14,%rsi
   394c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			394cb: R_X86_64_32S	.rodata.str1.1+0x3ccf
   394cf:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   394d6:	e8 00 00 00 00       	callq  394db <e1000_clean_rx_irq+0xa8e>
			394d7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   394db:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   394df:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   394e5:	4c 89 e2             	mov    %r12,%rdx
   394e8:	4c 89 f6             	mov    %r14,%rsi
   394eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			394ee: R_X86_64_32S	.rodata.str1.1+0x3ccf
   394f2:	48 83 c1 7e          	add    $0x7e,%rcx
   394f6:	e8 00 00 00 00       	callq  394fb <e1000_clean_rx_irq+0xaae>
			394f7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   394fb:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   394ff:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39505:	4c 89 e2             	mov    %r12,%rdx
   39508:	4c 89 f6             	mov    %r14,%rsi
   3950b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3950e: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39512:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   39519:	e8 00 00 00 00       	callq  3951e <e1000_clean_rx_irq+0xad1>
			3951a: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3951e:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   39522:	4c 89 e2             	mov    %r12,%rdx
   39525:	4c 89 f6             	mov    %r14,%rsi
   39528:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3952b: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3952f:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   39536:	e8 00 00 00 00       	callq  3953b <e1000_clean_rx_irq+0xaee>
			39537: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3953b:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   3953f:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   39546:	00 
   39547:	74 5d                	je     395a6 <e1000_clean_rx_irq+0xb59>
   39549:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   3954f:	31 db                	xor    %ebx,%ebx
   39551:	e8 00 00 00 00       	callq  39556 <e1000_clean_rx_irq+0xb09>
			39552: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   39556:	48 8d 4d c8          	lea    0xffffffffffffffc8(%rbp),%rcx
   3955a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39560:	4c 89 e2             	mov    %r12,%rdx
   39563:	4c 89 f6             	mov    %r14,%rsi
   39566:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39569: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3956d:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   39570:	e8 00 00 00 00       	callq  39575 <e1000_clean_rx_irq+0xb28>
			39571: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39575:	eb 2a                	jmp    395a1 <e1000_clean_rx_irq+0xb54>
   39577:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   3957b:	48 63 cb             	movslq %ebx,%rcx
   3957e:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   39582:	48 8d 75 98          	lea    0xffffffffffffff98(%rbp),%rsi
   39586:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3958c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3958f: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39593:	ff c3                	inc    %ebx
   39595:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   3959c:	e8 00 00 00 00       	callq  395a1 <e1000_clean_rx_irq+0xb54>
			3959d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   395a1:	3b 5d c8             	cmp    0xffffffffffffffc8(%rbp),%ebx
   395a4:	7c d1                	jl     39577 <e1000_clean_rx_irq+0xb2a>
   395a6:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   395aa:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   395ae:	4c 8d 65 98          	lea    0xffffffffffffff98(%rbp),%r12
   395b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			395b5: R_X86_64_32S	.rodata.str1.1+0x3ccf
   395b9:	48 89 da             	mov    %rbx,%rdx
   395bc:	4c 89 e6             	mov    %r12,%rsi
   395bf:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   395c6:	e8 00 00 00 00       	callq  395cb <e1000_clean_rx_irq+0xb7e>
			395c7: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   395cb:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   395cf:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   395d6:	48 85 c9             	test   %rcx,%rcx
   395d9:	74 18                	je     395f3 <e1000_clean_rx_irq+0xba6>
   395db:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   395e1:	48 89 da             	mov    %rbx,%rdx
   395e4:	4c 89 e6             	mov    %r12,%rsi
   395e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			395ea: R_X86_64_32S	.rodata.str1.1+0x3ccf
   395ee:	e8 00 00 00 00       	callq  395f3 <e1000_clean_rx_irq+0xba6>
			395ef: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   395f3:	48 8d 4d a8          	lea    0xffffffffffffffa8(%rbp),%rcx
   395f7:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   395fb:	48 8d 75 98          	lea    0xffffffffffffff98(%rbp),%rsi
   395ff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39602: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39606:	e8 00 00 00 00       	callq  3960b <e1000_clean_rx_irq+0xbbe>
			39607: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3960b:	48 83 7d a8 00       	cmpq   $0x0,0xffffffffffffffa8(%rbp)
   39610:	0f 84 65 09 00 00    	je     39f7b <e1000_clean_rx_irq+0x152e>
   39616:	48 c7 85 60 ff ff ff 	movq   $0x0,0xffffffffffffff60(%rbp)
   3961d:	00 00 00 00 
   39621:	48 8b 9d 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rbx
   39628:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   3962c:	4c 8d 6d 98          	lea    0xffffffffffffff98(%rbp),%r13
   39630:	44 8b bd 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%r15d
   39637:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3963a: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3963e:	4c 89 e2             	mov    %r12,%rdx
   39641:	4c 89 ee             	mov    %r13,%rsi
   39644:	48 8d 0c dd 20 00 00 	lea    0x20(,%rbx,8),%rcx
   3964b:	00 
   3964c:	48 03 4d a8          	add    0xffffffffffffffa8(%rbp),%rcx
   39650:	49 63 df             	movslq %r15d,%rbx
   39653:	e8 00 00 00 00       	callq  39658 <e1000_clean_rx_irq+0xc0b>
			39654: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39658:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   3965c:	48 8b 4c d8 20       	mov    0x20(%rax,%rbx,8),%rcx
   39661:	48 85 c9             	test   %rcx,%rcx
   39664:	0f 84 fc 08 00 00    	je     39f66 <e1000_clean_rx_irq+0x1519>
   3966a:	4c 89 e2             	mov    %r12,%rdx
   3966d:	4c 89 ee             	mov    %r13,%rsi
   39670:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39673: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39677:	e8 00 00 00 00       	callq  3967c <e1000_clean_rx_irq+0xc2f>
			39678: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3967c:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39680:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39685:	48 8b 00             	mov    (%rax),%rax
   39688:	48 85 c0             	test   %rax,%rax
   3968b:	0f 84 d5 08 00 00    	je     39f66 <e1000_clean_rx_irq+0x1519>
   39691:	48 8d 88 10 03 00 00 	lea    0x310(%rax),%rcx
   39698:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   3969e:	4c 89 e2             	mov    %r12,%rdx
   396a1:	4c 89 ee             	mov    %r13,%rsi
   396a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			396a7: R_X86_64_32S	.rodata.str1.1+0x3ccf
   396ab:	e8 00 00 00 00       	callq  396b0 <e1000_clean_rx_irq+0xc63>
			396ac: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   396b0:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   396b4:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   396ba:	4c 89 e2             	mov    %r12,%rdx
   396bd:	4c 89 ee             	mov    %r13,%rsi
   396c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			396c3: R_X86_64_32S	.rodata.str1.1+0x3ccf
   396c7:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   396cc:	48 8b 08             	mov    (%rax),%rcx
   396cf:	48 81 c1 70 01 00 00 	add    $0x170,%rcx
   396d6:	e8 00 00 00 00       	callq  396db <e1000_clean_rx_irq+0xc8e>
			396d7: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   396db:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   396df:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   396e5:	4c 89 e2             	mov    %r12,%rdx
   396e8:	4c 89 ee             	mov    %r13,%rsi
   396eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			396ee: R_X86_64_32S	.rodata.str1.1+0x3ccf
   396f2:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   396f7:	48 8b 08             	mov    (%rax),%rcx
   396fa:	48 81 c1 48 03 00 00 	add    $0x348,%rcx
   39701:	e8 00 00 00 00       	callq  39706 <e1000_clean_rx_irq+0xcb9>
			39702: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39706:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   3970a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39710:	4c 89 e2             	mov    %r12,%rdx
   39713:	4c 89 ee             	mov    %r13,%rsi
   39716:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39719: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3971d:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39722:	48 8b 08             	mov    (%rax),%rcx
   39725:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
   3972c:	e8 00 00 00 00       	callq  39731 <e1000_clean_rx_irq+0xce4>
			3972d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39731:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39735:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3973b:	4c 89 e2             	mov    %r12,%rdx
   3973e:	4c 89 ee             	mov    %r13,%rsi
   39741:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39744: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39748:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   3974d:	48 8b 08             	mov    (%rax),%rcx
   39750:	48 81 c1 6c 01 00 00 	add    $0x16c,%rcx
   39757:	e8 00 00 00 00       	callq  3975c <e1000_clean_rx_irq+0xd0f>
			39758: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3975c:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39760:	4c 89 e2             	mov    %r12,%rdx
   39763:	4c 89 ee             	mov    %r13,%rsi
   39766:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39769: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3976d:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39772:	48 8b 08             	mov    (%rax),%rcx
   39775:	48 81 c1 78 07 00 00 	add    $0x778,%rcx
   3977c:	e8 00 00 00 00       	callq  39781 <e1000_clean_rx_irq+0xd34>
			3977d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39781:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39785:	4c 89 e2             	mov    %r12,%rdx
   39788:	4c 89 ee             	mov    %r13,%rsi
   3978b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3978e: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39792:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39797:	48 8b 08             	mov    (%rax),%rcx
   3979a:	48 81 c1 58 07 00 00 	add    $0x758,%rcx
   397a1:	e8 00 00 00 00       	callq  397a6 <e1000_clean_rx_irq+0xd59>
			397a2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   397a6:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   397aa:	4c 89 e2             	mov    %r12,%rdx
   397ad:	4c 89 ee             	mov    %r13,%rsi
   397b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			397b3: R_X86_64_32S	.rodata.str1.1+0x3ccf
   397b7:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   397bc:	31 db                	xor    %ebx,%ebx
   397be:	48 8b 08             	mov    (%rax),%rcx
   397c1:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
   397c8:	e8 00 00 00 00       	callq  397cd <e1000_clean_rx_irq+0xd80>
			397c9: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   397cd:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   397d1:	49 63 d7             	movslq %r15d,%rdx
   397d4:	48 8d 75 98          	lea    0xffffffffffffff98(%rbp),%rsi
   397d8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   397de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			397e1: R_X86_64_32S	.rodata.str1.1+0x3ccf
   397e5:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   397ea:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   397ee:	48 8b 08             	mov    (%rax),%rcx
   397f1:	48 81 c1 60 02 00 00 	add    $0x260,%rcx
   397f8:	48 01 d9             	add    %rbx,%rcx
   397fb:	48 ff c3             	inc    %rbx
   397fe:	e8 00 00 00 00       	callq  39803 <e1000_clean_rx_irq+0xdb6>
			397ff: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39803:	48 83 fb 20          	cmp    $0x20,%rbx
   39807:	75 c4                	jne    397cd <e1000_clean_rx_irq+0xd80>
   39809:	45 31 e4             	xor    %r12d,%r12d
   3980c:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39810:	49 63 df             	movslq %r15d,%rbx
   39813:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
   39817:	4c 8d 75 98          	lea    0xffffffffffffff98(%rbp),%r14
   3981b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39821:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39824: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39828:	4c 89 ea             	mov    %r13,%rdx
   3982b:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39830:	4c 89 f6             	mov    %r14,%rsi
   39833:	48 8b 08             	mov    (%rax),%rcx
   39836:	48 81 c1 80 01 00 00 	add    $0x180,%rcx
   3983d:	4c 01 e1             	add    %r12,%rcx
   39840:	49 ff c4             	inc    %r12
   39843:	e8 00 00 00 00       	callq  39848 <e1000_clean_rx_irq+0xdfb>
			39844: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39848:	49 83 fc 20          	cmp    $0x20,%r12
   3984c:	75 be                	jne    3980c <e1000_clean_rx_irq+0xdbf>
   3984e:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39852:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   39858:	4c 89 ea             	mov    %r13,%rdx
   3985b:	4c 89 f6             	mov    %r14,%rsi
   3985e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39861: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39865:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   3986a:	48 8b 08             	mov    (%rax),%rcx
   3986d:	48 81 c1 72 01 00 00 	add    $0x172,%rcx
   39874:	e8 00 00 00 00       	callq  39879 <e1000_clean_rx_irq+0xe2c>
			39875: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39879:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   3987d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   39883:	4c 89 ea             	mov    %r13,%rdx
   39886:	4c 89 f6             	mov    %r14,%rsi
   39889:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3988c: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39890:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39895:	31 db                	xor    %ebx,%ebx
   39897:	48 8b 08             	mov    (%rax),%rcx
   3989a:	48 83 c1 48          	add    $0x48,%rcx
   3989e:	e8 00 00 00 00       	callq  398a3 <e1000_clean_rx_irq+0xe56>
			3989f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   398a3:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   398a7:	49 63 d7             	movslq %r15d,%rdx
   398aa:	48 8d 75 98          	lea    0xffffffffffffff98(%rbp),%rsi
   398ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   398b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			398b7: R_X86_64_32S	.rodata.str1.1+0x3ccf
   398bb:	48 8b 44 d0 20       	mov    0x20(%rax,%rdx,8),%rax
   398c0:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   398c4:	48 8b 08             	mov    (%rax),%rcx
   398c7:	48 81 c1 40 02 00 00 	add    $0x240,%rcx
   398ce:	48 01 d9             	add    %rbx,%rcx
   398d1:	48 ff c3             	inc    %rbx
   398d4:	e8 00 00 00 00       	callq  398d9 <e1000_clean_rx_irq+0xe8c>
			398d5: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   398d9:	48 83 fb 20          	cmp    $0x20,%rbx
   398dd:	75 c4                	jne    398a3 <e1000_clean_rx_irq+0xe56>
   398df:	45 31 e4             	xor    %r12d,%r12d
   398e2:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   398e6:	49 63 df             	movslq %r15d,%rbx
   398e9:	4c 89 e1             	mov    %r12,%rcx
   398ec:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
   398f0:	4c 8d 75 98          	lea    0xffffffffffffff98(%rbp),%r14
   398f4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   398fa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			398fd: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39901:	49 ff c4             	inc    %r12
   39904:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39909:	4c 89 ea             	mov    %r13,%rdx
   3990c:	4c 89 f6             	mov    %r14,%rsi
   3990f:	48 03 08             	add    (%rax),%rcx
   39912:	e8 00 00 00 00       	callq  39917 <e1000_clean_rx_irq+0xeca>
			39913: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39917:	49 83 fc 10          	cmp    $0x10,%r12
   3991b:	75 c5                	jne    398e2 <e1000_clean_rx_irq+0xe95>
   3991d:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39921:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39927:	4c 89 ea             	mov    %r13,%rdx
   3992a:	4c 89 f6             	mov    %r14,%rsi
   3992d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39930: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39934:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39939:	48 8b 08             	mov    (%rax),%rcx
   3993c:	48 81 c1 a0 01 00 00 	add    $0x1a0,%rcx
   39943:	e8 00 00 00 00       	callq  39948 <e1000_clean_rx_irq+0xefb>
			39944: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39948:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   3994c:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39952:	4c 89 ea             	mov    %r13,%rdx
   39955:	4c 89 f6             	mov    %r14,%rsi
   39958:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3995b: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3995f:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39964:	31 db                	xor    %ebx,%ebx
   39966:	48 8b 08             	mov    (%rax),%rcx
   39969:	48 81 c1 e0 01 00 00 	add    $0x1e0,%rcx
   39970:	e8 00 00 00 00       	callq  39975 <e1000_clean_rx_irq+0xf28>
			39971: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39975:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39979:	4d 63 e7             	movslq %r15d,%r12
   3997c:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
   39980:	4c 8d 75 98          	lea    0xffffffffffffff98(%rbp),%r14
   39984:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3998a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3998d: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39991:	4c 89 ea             	mov    %r13,%rdx
   39994:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39999:	4c 89 f6             	mov    %r14,%rsi
   3999c:	48 8b 08             	mov    (%rax),%rcx
   3999f:	48 81 c1 60 05 00 00 	add    $0x560,%rcx
   399a6:	48 01 d9             	add    %rbx,%rcx
   399a9:	48 ff c3             	inc    %rbx
   399ac:	e8 00 00 00 00       	callq  399b1 <e1000_clean_rx_irq+0xf64>
			399ad: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   399b1:	48 83 fb 14          	cmp    $0x14,%rbx
   399b5:	75 be                	jne    39975 <e1000_clean_rx_irq+0xf28>
   399b7:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   399bb:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   399bf:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   399c5:	4c 89 ea             	mov    %r13,%rdx
   399c8:	4c 89 f6             	mov    %r14,%rsi
   399cb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			399ce: R_X86_64_32S	.rodata.str1.1+0x3ccf
   399d2:	48 89 d9             	mov    %rbx,%rcx
   399d5:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   399da:	48 8b 00             	mov    (%rax),%rax
   399dd:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   399e3:	83 e0 01             	and    $0x1,%eax
   399e6:	0f b6 c0             	movzbl %al,%eax
   399e9:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
   399ec:	e8 00 00 00 00       	callq  399f1 <e1000_clean_rx_irq+0xfa4>
			399ed: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   399f1:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   399f5:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   399fb:	48 89 d9             	mov    %rbx,%rcx
   399fe:	4c 89 ea             	mov    %r13,%rdx
   39a01:	4c 89 f6             	mov    %r14,%rsi
   39a04:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39a07: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39a0b:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39a10:	48 8b 00             	mov    (%rax),%rax
   39a13:	8a 80 f4 05 00 00    	mov    0x5f4(%rax),%al
   39a19:	d0 e8                	shr    %al
   39a1b:	83 e0 01             	and    $0x1,%eax
   39a1e:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
   39a21:	e8 00 00 00 00       	callq  39a26 <e1000_clean_rx_irq+0xfd9>
			39a22: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39a26:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39a2a:	4c 89 ea             	mov    %r13,%rdx
   39a2d:	4c 89 f6             	mov    %r14,%rsi
   39a30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39a33: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39a37:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39a3c:	48 8b 08             	mov    (%rax),%rcx
   39a3f:	48 81 c1 50 06 00 00 	add    $0x650,%rcx
   39a46:	e8 00 00 00 00       	callq  39a4b <e1000_clean_rx_irq+0xffe>
			39a47: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39a4b:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39a4f:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39a54:	48 8b 00             	mov    (%rax),%rax
   39a57:	48 8b 80 50 06 00 00 	mov    0x650(%rax),%rax
   39a5e:	48 85 c0             	test   %rax,%rax
   39a61:	0f 84 e3 00 00 00    	je     39b4a <e1000_clean_rx_irq+0x10fd>
   39a67:	48 8d 48 18          	lea    0x18(%rax),%rcx
   39a6b:	4c 89 ea             	mov    %r13,%rdx
   39a6e:	4c 89 f6             	mov    %r14,%rsi
   39a71:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39a74: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39a78:	e8 00 00 00 00       	callq  39a7d <e1000_clean_rx_irq+0x1030>
			39a79: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39a7d:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39a81:	4c 89 ea             	mov    %r13,%rdx
   39a84:	4c 89 f6             	mov    %r14,%rsi
   39a87:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39a8a: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39a8e:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39a93:	48 8b 00             	mov    (%rax),%rax
   39a96:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   39a9d:	48 83 c1 20          	add    $0x20,%rcx
   39aa1:	e8 00 00 00 00       	callq  39aa6 <e1000_clean_rx_irq+0x1059>
			39aa2: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39aa6:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39aaa:	4c 89 ea             	mov    %r13,%rdx
   39aad:	4c 89 f6             	mov    %r14,%rsi
   39ab0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39ab3: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39ab7:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39abc:	48 8b 00             	mov    (%rax),%rax
   39abf:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   39ac6:	48 83 c1 30          	add    $0x30,%rcx
   39aca:	e8 00 00 00 00       	callq  39acf <e1000_clean_rx_irq+0x1082>
			39acb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39acf:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39ad3:	4c 89 ea             	mov    %r13,%rdx
   39ad6:	4c 89 f6             	mov    %r14,%rsi
   39ad9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39adc: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39ae0:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39ae5:	48 8b 00             	mov    (%rax),%rax
   39ae8:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   39aef:	48 83 c1 10          	add    $0x10,%rcx
   39af3:	e8 00 00 00 00       	callq  39af8 <e1000_clean_rx_irq+0x10ab>
			39af4: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39af8:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39afc:	4c 89 ea             	mov    %r13,%rdx
   39aff:	4c 89 f6             	mov    %r14,%rsi
   39b02:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39b05: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39b09:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39b0e:	48 8b 00             	mov    (%rax),%rax
   39b11:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   39b18:	48 83 c1 28          	add    $0x28,%rcx
   39b1c:	e8 00 00 00 00       	callq  39b21 <e1000_clean_rx_irq+0x10d4>
			39b1d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39b21:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39b25:	4c 89 ea             	mov    %r13,%rdx
   39b28:	4c 89 f6             	mov    %r14,%rsi
   39b2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39b2e: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39b32:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39b37:	48 8b 00             	mov    (%rax),%rax
   39b3a:	48 8b 88 50 06 00 00 	mov    0x650(%rax),%rcx
   39b41:	48 83 c1 08          	add    $0x8,%rcx
   39b45:	e8 00 00 00 00       	callq  39b4a <e1000_clean_rx_irq+0x10fd>
			39b46: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39b4a:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39b4e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   39b54:	4c 89 ea             	mov    %r13,%rdx
   39b57:	4c 89 f6             	mov    %r14,%rsi
   39b5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39b5d: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39b61:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39b66:	48 8b 08             	mov    (%rax),%rcx
   39b69:	48 81 c1 20 06 00 00 	add    $0x620,%rcx
   39b70:	e8 00 00 00 00       	callq  39b75 <e1000_clean_rx_irq+0x1128>
			39b71: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39b75:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39b79:	4c 89 ea             	mov    %r13,%rdx
   39b7c:	4c 89 f6             	mov    %r14,%rsi
   39b7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39b82: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39b86:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39b8b:	48 8b 08             	mov    (%rax),%rcx
   39b8e:	48 81 c1 e0 05 00 00 	add    $0x5e0,%rcx
   39b95:	e8 00 00 00 00       	callq  39b9a <e1000_clean_rx_irq+0x114d>
			39b96: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39b9a:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39b9e:	4c 89 ea             	mov    %r13,%rdx
   39ba1:	4c 89 f6             	mov    %r14,%rsi
   39ba4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39ba7: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39bab:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39bb0:	48 8b 08             	mov    (%rax),%rcx
   39bb3:	48 81 c1 18 05 00 00 	add    $0x518,%rcx
   39bba:	e8 00 00 00 00       	callq  39bbf <e1000_clean_rx_irq+0x1172>
			39bbb: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39bbf:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39bc3:	4c 89 ea             	mov    %r13,%rdx
   39bc6:	4c 89 f6             	mov    %r14,%rsi
   39bc9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39bcc: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39bd0:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39bd5:	48 8b 08             	mov    (%rax),%rcx
   39bd8:	48 81 c1 18 06 00 00 	add    $0x618,%rcx
   39bdf:	e8 00 00 00 00       	callq  39be4 <e1000_clean_rx_irq+0x1197>
			39be0: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39be4:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39be8:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39bed:	48 8b 00             	mov    (%rax),%rax
   39bf0:	48 8b 88 18 06 00 00 	mov    0x618(%rax),%rcx
   39bf7:	48 85 c9             	test   %rcx,%rcx
   39bfa:	74 18                	je     39c14 <e1000_clean_rx_irq+0x11c7>
   39bfc:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   39c02:	4c 89 ea             	mov    %r13,%rdx
   39c05:	4c 89 f6             	mov    %r14,%rsi
   39c08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39c0b: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39c0f:	e8 00 00 00 00       	callq  39c14 <e1000_clean_rx_irq+0x11c7>
			39c10: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39c14:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39c18:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39c1e:	4c 89 ea             	mov    %r13,%rdx
   39c21:	4c 89 f6             	mov    %r14,%rsi
   39c24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39c27: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39c2b:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39c30:	48 8b 08             	mov    (%rax),%rcx
   39c33:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
   39c3a:	e8 00 00 00 00       	callq  39c3f <e1000_clean_rx_irq+0x11f2>
			39c3b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39c3f:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39c43:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   39c49:	4c 89 ea             	mov    %r13,%rdx
   39c4c:	4c 89 f6             	mov    %r14,%rsi
   39c4f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39c52: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39c56:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39c5b:	48 8b 08             	mov    (%rax),%rcx
   39c5e:	48 83 c1 70          	add    $0x70,%rcx
   39c62:	e8 00 00 00 00       	callq  39c67 <e1000_clean_rx_irq+0x121a>
			39c63: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39c67:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39c6b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39c71:	4c 89 ea             	mov    %r13,%rdx
   39c74:	4c 89 f6             	mov    %r14,%rsi
   39c77:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39c7a: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39c7e:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39c83:	48 8b 08             	mov    (%rax),%rcx
   39c86:	48 81 c1 50 03 00 00 	add    $0x350,%rcx
   39c8d:	e8 00 00 00 00       	callq  39c92 <e1000_clean_rx_irq+0x1245>
			39c8e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39c92:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39c96:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   39c9c:	4c 89 ea             	mov    %r13,%rdx
   39c9f:	4c 89 f6             	mov    %r14,%rsi
   39ca2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39ca5: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39ca9:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39cae:	48 8b 08             	mov    (%rax),%rcx
   39cb1:	48 81 c1 00 07 00 00 	add    $0x700,%rcx
   39cb8:	e8 00 00 00 00       	callq  39cbd <e1000_clean_rx_irq+0x1270>
			39cb9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39cbd:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39cc1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39cc7:	4c 89 ea             	mov    %r13,%rdx
   39cca:	4c 89 f6             	mov    %r14,%rsi
   39ccd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39cd0: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39cd4:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39cd9:	48 8b 08             	mov    (%rax),%rcx
   39cdc:	48 81 c1 60 01 00 00 	add    $0x160,%rcx
   39ce3:	e8 00 00 00 00       	callq  39ce8 <e1000_clean_rx_irq+0x129b>
			39ce4: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39ce8:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39cec:	4c 89 ea             	mov    %r13,%rdx
   39cef:	4c 89 f6             	mov    %r14,%rsi
   39cf2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39cf5: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39cf9:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39cfe:	48 8b 08             	mov    (%rax),%rcx
   39d01:	48 81 c1 d8 01 00 00 	add    $0x1d8,%rcx
   39d08:	e8 00 00 00 00       	callq  39d0d <e1000_clean_rx_irq+0x12c0>
			39d09: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39d0d:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39d11:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39d16:	48 8b 00             	mov    (%rax),%rax
   39d19:	48 83 b8 d8 01 00 00 	cmpq   $0x0,0x1d8(%rax)
   39d20:	00 
   39d21:	74 6d                	je     39d90 <e1000_clean_rx_irq+0x1343>
   39d23:	31 db                	xor    %ebx,%ebx
   39d25:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39d29:	4d 63 e7             	movslq %r15d,%r12
   39d2c:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
   39d30:	4c 8d 75 98          	lea    0xffffffffffffff98(%rbp),%r14
   39d34:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39d3a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39d3d: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39d41:	4c 89 ea             	mov    %r13,%rdx
   39d44:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39d49:	4c 89 f6             	mov    %r14,%rsi
   39d4c:	48 8b 00             	mov    (%rax),%rax
   39d4f:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   39d56:	48 83 c1 08          	add    $0x8,%rcx
   39d5a:	48 01 d9             	add    %rbx,%rcx
   39d5d:	48 ff c3             	inc    %rbx
   39d60:	e8 00 00 00 00       	callq  39d65 <e1000_clean_rx_irq+0x1318>
			39d61: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39d65:	48 83 fb 20          	cmp    $0x20,%rbx
   39d69:	75 ba                	jne    39d25 <e1000_clean_rx_irq+0x12d8>
   39d6b:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39d6f:	4c 89 ea             	mov    %r13,%rdx
   39d72:	4c 89 f6             	mov    %r14,%rsi
   39d75:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39d78: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39d7c:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39d81:	48 8b 00             	mov    (%rax),%rax
   39d84:	48 8b 88 d8 01 00 00 	mov    0x1d8(%rax),%rcx
   39d8b:	e8 00 00 00 00       	callq  39d90 <e1000_clean_rx_irq+0x1343>
			39d8c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39d90:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39d94:	49 63 df             	movslq %r15d,%rbx
   39d97:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   39d9b:	4c 8d 6d 98          	lea    0xffffffffffffff98(%rbp),%r13
   39d9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39da2: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39da6:	4c 89 e2             	mov    %r12,%rdx
   39da9:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39dae:	4c 89 ee             	mov    %r13,%rsi
   39db1:	48 8b 08             	mov    (%rax),%rcx
   39db4:	48 81 c1 48 01 00 00 	add    $0x148,%rcx
   39dbb:	e8 00 00 00 00       	callq  39dc0 <e1000_clean_rx_irq+0x1373>
			39dbc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39dc0:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39dc4:	4c 89 e2             	mov    %r12,%rdx
   39dc7:	4c 89 ee             	mov    %r13,%rsi
   39dca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39dcd: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39dd1:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39dd6:	48 8b 08             	mov    (%rax),%rcx
   39dd9:	48 81 c1 50 01 00 00 	add    $0x150,%rcx
   39de0:	e8 00 00 00 00       	callq  39de5 <e1000_clean_rx_irq+0x1398>
			39de1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39de5:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39de9:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39dee:	48 8b 00             	mov    (%rax),%rax
   39df1:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
   39df8:	48 85 c0             	test   %rax,%rax
   39dfb:	74 3f                	je     39e3c <e1000_clean_rx_irq+0x13ef>
   39dfd:	48 8d 48 60          	lea    0x60(%rax),%rcx
   39e01:	4c 89 e2             	mov    %r12,%rdx
   39e04:	4c 89 ee             	mov    %r13,%rsi
   39e07:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39e0a: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39e0e:	e8 00 00 00 00       	callq  39e13 <e1000_clean_rx_irq+0x13c6>
			39e0f: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39e13:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39e17:	4c 89 e2             	mov    %r12,%rdx
   39e1a:	4c 89 ee             	mov    %r13,%rsi
   39e1d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39e20: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39e24:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39e29:	48 8b 00             	mov    (%rax),%rax
   39e2c:	48 8b 88 50 01 00 00 	mov    0x150(%rax),%rcx
   39e33:	48 83 c1 58          	add    $0x58,%rcx
   39e37:	e8 00 00 00 00       	callq  39e3c <e1000_clean_rx_irq+0x13ef>
			39e38: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39e3c:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39e40:	4c 89 e2             	mov    %r12,%rdx
   39e43:	4c 89 ee             	mov    %r13,%rsi
   39e46:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39e49: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39e4d:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39e52:	48 8b 08             	mov    (%rax),%rcx
   39e55:	48 81 c1 00 03 00 00 	add    $0x300,%rcx
   39e5c:	e8 00 00 00 00       	callq  39e61 <e1000_clean_rx_irq+0x1414>
			39e5d: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39e61:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39e65:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39e6a:	48 8b 00             	mov    (%rax),%rax
   39e6d:	48 8b 80 00 03 00 00 	mov    0x300(%rax),%rax
   39e74:	48 85 c0             	test   %rax,%rax
   39e77:	74 45                	je     39ebe <e1000_clean_rx_irq+0x1471>
   39e79:	48 8d 48 10          	lea    0x10(%rax),%rcx
   39e7d:	4c 89 e2             	mov    %r12,%rdx
   39e80:	4c 89 ee             	mov    %r13,%rsi
   39e83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39e86: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39e8a:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   39e90:	e8 00 00 00 00       	callq  39e95 <e1000_clean_rx_irq+0x1448>
			39e91: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39e95:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39e99:	4c 89 e2             	mov    %r12,%rdx
   39e9c:	4c 89 ee             	mov    %r13,%rsi
   39e9f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39ea2: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39ea6:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39eab:	48 8b 00             	mov    (%rax),%rax
   39eae:	48 8b 88 00 03 00 00 	mov    0x300(%rax),%rcx
   39eb5:	48 83 c1 08          	add    $0x8,%rcx
   39eb9:	e8 00 00 00 00       	callq  39ebe <e1000_clean_rx_irq+0x1471>
			39eba: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39ebe:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39ec2:	4c 89 e2             	mov    %r12,%rdx
   39ec5:	4c 89 ee             	mov    %r13,%rsi
   39ec8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39ecb: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39ecf:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39ed4:	48 8b 08             	mov    (%rax),%rcx
   39ed7:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
   39ede:	e8 00 00 00 00       	callq  39ee3 <e1000_clean_rx_irq+0x1496>
			39edf: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39ee3:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39ee7:	48 8b 44 d8 20       	mov    0x20(%rax,%rbx,8),%rax
   39eec:	48 8b 00             	mov    (%rax),%rax
   39eef:	48 83 b8 e8 01 00 00 	cmpq   $0x0,0x1e8(%rax)
   39ef6:	00 
   39ef7:	74 6d                	je     39f66 <e1000_clean_rx_irq+0x1519>
   39ef9:	31 db                	xor    %ebx,%ebx
   39efb:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39eff:	4d 63 e7             	movslq %r15d,%r12
   39f02:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
   39f06:	4c 8d 75 98          	lea    0xffffffffffffff98(%rbp),%r14
   39f0a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   39f10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39f13: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39f17:	4c 89 ea             	mov    %r13,%rdx
   39f1a:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39f1f:	4c 89 f6             	mov    %r14,%rsi
   39f22:	48 8b 00             	mov    (%rax),%rax
   39f25:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   39f2c:	48 83 c1 08          	add    $0x8,%rcx
   39f30:	48 01 d9             	add    %rbx,%rcx
   39f33:	48 ff c3             	inc    %rbx
   39f36:	e8 00 00 00 00       	callq  39f3b <e1000_clean_rx_irq+0x14ee>
			39f37: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39f3b:	48 83 fb 20          	cmp    $0x20,%rbx
   39f3f:	75 ba                	jne    39efb <e1000_clean_rx_irq+0x14ae>
   39f41:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
   39f45:	4c 89 ea             	mov    %r13,%rdx
   39f48:	4c 89 f6             	mov    %r14,%rsi
   39f4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39f4e: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39f52:	4a 8b 44 e0 20       	mov    0x20(%rax,%r12,8),%rax
   39f57:	48 8b 00             	mov    (%rax),%rax
   39f5a:	48 8b 88 e8 01 00 00 	mov    0x1e8(%rax),%rcx
   39f61:	e8 00 00 00 00       	callq  39f66 <e1000_clean_rx_irq+0x1519>
			39f62: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   39f66:	48 ff 85 60 ff ff ff 	incq   0xffffffffffffff60(%rbp)
   39f6d:	48 83 bd 60 ff ff ff 	cmpq   $0x8,0xffffffffffffff60(%rbp)
   39f74:	08 
   39f75:	0f 85 a6 f6 ff ff    	jne    39621 <e1000_clean_rx_irq+0xbd4>
   39f7b:	4c 8d 6d c4          	lea    0xffffffffffffffc4(%rbp),%r13
   39f7f:	48 8d 5d 98          	lea    0xffffffffffffff98(%rbp),%rbx
   39f83:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   39f87:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   39f8b:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   39f91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39f94: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39f98:	4c 89 ea             	mov    %r13,%rdx
   39f9b:	48 89 de             	mov    %rbx,%rsi
   39f9e:	e8 00 00 00 00       	callq  39fa3 <e1000_clean_rx_irq+0x1556>
			39f9f: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39fa3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   39fa9:	4c 89 f1             	mov    %r14,%rcx
   39fac:	4c 89 ea             	mov    %r13,%rdx
   39faf:	48 89 de             	mov    %rbx,%rsi
   39fb2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39fb5: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39fb9:	e8 00 00 00 00       	callq  39fbe <e1000_clean_rx_irq+0x1571>
			39fba: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   39fbe:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   39fc2:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
   39fc6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39fc9: R_X86_64_32S	.rodata.str1.1+0x3ccf
   39fcd:	48 c7 45 80 63 04 00 	movq   $0x463,0xffffffffffffff80(%rbp)
   39fd4:	00 
   39fd5:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   39fd9:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
   39fdc:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   39fdf:	e8 00 00 00 00       	callq  39fe4 <e1000_clean_rx_irq+0x1597>
			39fe0: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   39fe4:	48 8b 85 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rax
   39feb:	48 8b 95 08 ff ff ff 	mov    0xffffffffffffff08(%rbp),%rdx
   39ff2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			39ff5: R_X86_64_32S	.rodata.str1.1+0x3d01
   39ff9:	8b 8d 5c ff ff ff    	mov    0xffffffffffffff5c(%rbp),%ecx
   39fff:	c7 45 c8 01 00 00 00 	movl   $0x1,0xffffffffffffffc8(%rbp)
   3a006:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   3a00a:	48 89 55 98          	mov    %rdx,0xffffffffffffff98(%rbp)
   3a00e:	66 89 4d cc          	mov    %cx,0xffffffffffffffcc(%rbp)
   3a012:	e8 00 00 00 00       	callq  3a017 <e1000_clean_rx_irq+0x15ca>
			3a013: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a017:	4c 8b 65 90          	mov    0xffffffffffffff90(%rbp),%r12
   3a01b:	48 8d 4d a0          	lea    0xffffffffffffffa0(%rbp),%rcx
   3a01f:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   3a025:	4c 89 ea             	mov    %r13,%rdx
   3a028:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a02b: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a02f:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   3a036:	4c 89 e6             	mov    %r12,%rsi
   3a039:	e8 00 00 00 00       	callq  3a03e <e1000_clean_rx_irq+0x15f1>
			3a03a: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3a03e:	48 83 7d a0 00       	cmpq   $0x0,0xffffffffffffffa0(%rbp)
   3a043:	0f 84 72 02 00 00    	je     3a2bb <e1000_clean_rx_irq+0x186e>
   3a049:	4d 89 f0             	mov    %r14,%r8
   3a04c:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a051:	4c 89 ea             	mov    %r13,%rdx
   3a054:	4c 89 e6             	mov    %r12,%rsi
   3a057:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a05a: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a05e:	e8 00 00 00 00       	callq  3a063 <e1000_clean_rx_irq+0x1616>
			3a05f: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a063:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   3a067:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   3a06a:	4c 89 e6             	mov    %r12,%rsi
   3a06d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a070: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a074:	8a 41 7d             	mov    0x7d(%rcx),%al
   3a077:	83 e2 07             	and    $0x7,%edx
   3a07a:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   3a07d:	09 d0                	or     %edx,%eax
   3a07f:	4c 89 ea             	mov    %r13,%rdx
   3a082:	88 41 7d             	mov    %al,0x7d(%rcx)
   3a085:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a089:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a08e:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   3a095:	e8 00 00 00 00       	callq  3a09a <e1000_clean_rx_irq+0x164d>
			3a096: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a09a:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a09e:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a0a3:	4c 89 ea             	mov    %r13,%rdx
   3a0a6:	4c 89 e6             	mov    %r12,%rsi
   3a0a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a0ac: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a0b0:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   3a0b7:	e8 00 00 00 00       	callq  3a0bc <e1000_clean_rx_irq+0x166f>
			3a0b8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a0bc:	4d 89 f0             	mov    %r14,%r8
   3a0bf:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a0c4:	4c 89 ea             	mov    %r13,%rdx
   3a0c7:	4c 89 e6             	mov    %r12,%rsi
   3a0ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a0cd: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a0d1:	e8 00 00 00 00       	callq  3a0d6 <e1000_clean_rx_irq+0x1689>
			3a0d2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a0d6:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   3a0da:	8a 55 b8             	mov    0xffffffffffffffb8(%rbp),%dl
   3a0dd:	4c 89 e6             	mov    %r12,%rsi
   3a0e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a0e3: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a0e7:	8a 41 7c             	mov    0x7c(%rcx),%al
   3a0ea:	83 e2 03             	and    $0x3,%edx
   3a0ed:	c1 e2 02             	shl    $0x2,%edx
   3a0f0:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   3a0f3:	09 d0                	or     %edx,%eax
   3a0f5:	4c 89 ea             	mov    %r13,%rdx
   3a0f8:	88 41 7c             	mov    %al,0x7c(%rcx)
   3a0fb:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a0ff:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a104:	49 83 c0 6c          	add    $0x6c,%r8
   3a108:	e8 00 00 00 00       	callq  3a10d <e1000_clean_rx_irq+0x16c0>
			3a109: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a10d:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a111:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a116:	4c 89 ea             	mov    %r13,%rdx
   3a119:	4c 89 e6             	mov    %r12,%rsi
   3a11c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a11f: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a123:	49 83 c0 74          	add    $0x74,%r8
   3a127:	e8 00 00 00 00       	callq  3a12c <e1000_clean_rx_irq+0x16df>
			3a128: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a12c:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a130:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a135:	4c 89 ea             	mov    %r13,%rdx
   3a138:	4c 89 e6             	mov    %r12,%rsi
   3a13b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a13e: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a142:	49 83 c0 68          	add    $0x68,%r8
   3a146:	e8 00 00 00 00       	callq  3a14b <e1000_clean_rx_irq+0x16fe>
			3a147: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a14b:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a14f:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a154:	4c 89 ea             	mov    %r13,%rdx
   3a157:	4c 89 e6             	mov    %r12,%rsi
   3a15a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a15d: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a161:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   3a168:	e8 00 00 00 00       	callq  3a16d <e1000_clean_rx_irq+0x1720>
			3a169: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a16d:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a171:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a176:	4c 89 ea             	mov    %r13,%rdx
   3a179:	4c 89 e6             	mov    %r12,%rsi
   3a17c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a17f: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a183:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   3a18a:	e8 00 00 00 00       	callq  3a18f <e1000_clean_rx_irq+0x1742>
			3a18b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a18f:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a193:	b9 02 00 00 00       	mov    $0x2,%ecx
   3a198:	4c 89 ea             	mov    %r13,%rdx
   3a19b:	4c 89 e6             	mov    %r12,%rsi
   3a19e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a1a1: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a1a5:	49 83 c0 7e          	add    $0x7e,%r8
   3a1a9:	e8 00 00 00 00       	callq  3a1ae <e1000_clean_rx_irq+0x1761>
			3a1aa: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a1ae:	4c 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%r8
   3a1b2:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a1b7:	4c 89 ea             	mov    %r13,%rdx
   3a1ba:	4c 89 e6             	mov    %r12,%rsi
   3a1bd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a1c0: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a1c4:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   3a1cb:	e8 00 00 00 00       	callq  3a1d0 <e1000_clean_rx_irq+0x1783>
			3a1cc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a1d0:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   3a1d4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a1da:	4c 89 ea             	mov    %r13,%rdx
   3a1dd:	4c 89 e6             	mov    %r12,%rsi
   3a1e0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a1e3: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a1e7:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   3a1ee:	e8 00 00 00 00       	callq  3a1f3 <e1000_clean_rx_irq+0x17a6>
			3a1ef: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3a1f3:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   3a1f7:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   3a1fe:	00 
   3a1ff:	74 69                	je     3a26a <e1000_clean_rx_irq+0x181d>
   3a201:	4c 8d 45 a8          	lea    0xffffffffffffffa8(%rbp),%r8
   3a205:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a20a:	4c 89 ea             	mov    %r13,%rdx
   3a20d:	4c 89 e6             	mov    %r12,%rsi
   3a210:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a213: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a217:	31 db                	xor    %ebx,%ebx
   3a219:	e8 00 00 00 00       	callq  3a21e <e1000_clean_rx_irq+0x17d1>
			3a21a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a21e:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   3a222:	8b 75 a8             	mov    0xffffffffffffffa8(%rbp),%esi
   3a225:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a22a:	ba 01 00 00 00       	mov    $0x1,%edx
   3a22f:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   3a236:	e8 00 00 00 00       	callq  3a23b <e1000_clean_rx_irq+0x17ee>
			3a237: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   3a23b:	eb 28                	jmp    3a265 <e1000_clean_rx_irq+0x1818>
   3a23d:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   3a241:	4c 63 c3             	movslq %ebx,%r8
   3a244:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   3a248:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a24d:	4c 89 e6             	mov    %r12,%rsi
   3a250:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a253: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a257:	ff c3                	inc    %ebx
   3a259:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   3a260:	e8 00 00 00 00       	callq  3a265 <e1000_clean_rx_irq+0x1818>
			3a261: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a265:	3b 5d a8             	cmp    0xffffffffffffffa8(%rbp),%ebx
   3a268:	7c d3                	jl     3a23d <e1000_clean_rx_irq+0x17f0>
   3a26a:	48 8b 4d a0          	mov    0xffffffffffffffa0(%rbp),%rcx
   3a26e:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   3a272:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a278:	4c 89 e6             	mov    %r12,%rsi
   3a27b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a27e: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a282:	48 89 da             	mov    %rbx,%rdx
   3a285:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   3a28c:	e8 00 00 00 00       	callq  3a291 <e1000_clean_rx_irq+0x1844>
			3a28d: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3a291:	48 8b 45 a0          	mov    0xffffffffffffffa0(%rbp),%rax
   3a295:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   3a29c:	48 85 c0             	test   %rax,%rax
   3a29f:	74 1a                	je     3a2bb <e1000_clean_rx_irq+0x186e>
   3a2a1:	49 89 c0             	mov    %rax,%r8
   3a2a4:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a2a9:	48 89 da             	mov    %rbx,%rdx
   3a2ac:	4c 89 e6             	mov    %r12,%rsi
   3a2af:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a2b2: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a2b6:	e8 00 00 00 00       	callq  3a2bb <e1000_clean_rx_irq+0x186e>
			3a2b7: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a2bb:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   3a2bf:	48 8d 4d 98          	lea    0xffffffffffffff98(%rbp),%rcx
   3a2c3:	41 b8 70 00 00 00    	mov    $0x70,%r8d
   3a2c9:	4c 89 e6             	mov    %r12,%rsi
   3a2cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a2cf: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a2d3:	48 89 da             	mov    %rbx,%rdx
   3a2d6:	e8 00 00 00 00       	callq  3a2db <e1000_clean_rx_irq+0x188e>
			3a2d7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3a2db:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   3a2df:	b9 02 00 00 00       	mov    $0x2,%ecx
   3a2e4:	48 89 da             	mov    %rbx,%rdx
   3a2e7:	4c 89 e6             	mov    %r12,%rsi
   3a2ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a2ed: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a2f1:	e8 00 00 00 00       	callq  3a2f6 <e1000_clean_rx_irq+0x18a9>
			3a2f2: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a2f6:	4c 8d 45 c8          	lea    0xffffffffffffffc8(%rbp),%r8
   3a2fa:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a2ff:	48 89 da             	mov    %rbx,%rdx
   3a302:	4c 89 e6             	mov    %r12,%rsi
   3a305:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a308: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a30c:	e8 00 00 00 00       	callq  3a311 <e1000_clean_rx_irq+0x18c4>
			3a30d: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a311:	4c 8d 45 b0          	lea    0xffffffffffffffb0(%rbp),%r8
   3a315:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a31a:	48 89 da             	mov    %rbx,%rdx
   3a31d:	4c 89 e6             	mov    %r12,%rsi
   3a320:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a323: R_X86_64_32S	.rodata.str1.1+0x3ccf
   3a327:	e9 d7 00 00 00       	jmpq   3a403 <e1000_clean_rx_irq+0x19b6>
   3a32c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a32f: R_X86_64_32S	.rodata.str1.1+0x3d21
   3a333:	4c 8d 6d a8          	lea    0xffffffffffffffa8(%rbp),%r13
   3a337:	e8 00 00 00 00       	callq  3a33c <e1000_clean_rx_irq+0x18ef>
			3a338: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a33c:	48 8b 9d 50 ff ff ff 	mov    0xffffffffffffff50(%rbp),%rbx
   3a343:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a346: R_X86_64_32S	.rodata.str1.1+0x3d33
   3a34a:	48 c7 45 80 00 00 00 	movq   $0x0,0xffffffffffffff80(%rbp)
   3a351:	00 
   3a352:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   3a359:	00 
   3a35a:	c7 45 88 00 00 00 00 	movl   $0x0,0xffffffffffffff88(%rbp)
   3a361:	48 89 5d a0          	mov    %rbx,0xffffffffffffffa0(%rbp)
   3a365:	e8 00 00 00 00       	callq  3a36a <e1000_clean_rx_irq+0x191d>
			3a366: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a36a:	4c 89 f9             	mov    %r15,%rcx
   3a36d:	4c 89 ea             	mov    %r13,%rdx
   3a370:	4c 89 f6             	mov    %r14,%rsi
   3a373:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a376: R_X86_64_32S	.rodata.str1.1+0x3d21
   3a37a:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
   3a381:	48 c7 45 98 00 00 00 	movq   $0x0,0xffffffffffffff98(%rbp)
   3a388:	00 
   3a389:	e8 00 00 00 00       	callq  3a38e <e1000_clean_rx_irq+0x1941>
			3a38a: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3a38e:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
   3a392:	48 8d 75 80          	lea    0xffffffffffffff80(%rbp),%rsi
   3a396:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a399: R_X86_64_32S	.rodata.str1.1+0x3d21
   3a39d:	48 c7 45 80 e7 05 00 	movq   $0x5e7,0xffffffffffffff80(%rbp)
   3a3a4:	00 
   3a3a5:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
   3a3a9:	8b 45 a8             	mov    0xffffffffffffffa8(%rbp),%eax
   3a3ac:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   3a3af:	e8 00 00 00 00       	callq  3a3b4 <e1000_clean_rx_irq+0x1967>
			3a3b0: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   3a3b4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a3b7: R_X86_64_32S	.rodata.str1.1+0x3d53
   3a3bb:	48 89 5d 98          	mov    %rbx,0xffffffffffffff98(%rbp)
   3a3bf:	48 8d 5d b8          	lea    0xffffffffffffffb8(%rbp),%rbx
   3a3c3:	e8 00 00 00 00       	callq  3a3c8 <e1000_clean_rx_irq+0x197b>
			3a3c4: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a3c8:	4c 8b 65 90          	mov    0xffffffffffffff90(%rbp),%r12
   3a3cc:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   3a3d2:	4c 89 f1             	mov    %r14,%rcx
   3a3d5:	48 89 da             	mov    %rbx,%rdx
   3a3d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a3db: R_X86_64_32S	.rodata.str1.1+0x3d21
   3a3df:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   3a3e6:	4c 89 e6             	mov    %r12,%rsi
   3a3e9:	e8 00 00 00 00       	callq  3a3ee <e1000_clean_rx_irq+0x19a1>
			3a3ea: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3a3ee:	4d 89 e8             	mov    %r13,%r8
   3a3f1:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a3f6:	48 89 da             	mov    %rbx,%rdx
   3a3f9:	4c 89 e6             	mov    %r12,%rsi
   3a3fc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a3ff: R_X86_64_32S	.rodata.str1.1+0x3d21
   3a403:	e8 00 00 00 00       	callq  3a408 <e1000_clean_rx_irq+0x19bb>
			3a404: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a408:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
   3a40c:	48 85 ff             	test   %rdi,%rdi
   3a40f:	74 0d                	je     3a41e <e1000_clean_rx_irq+0x19d1>
   3a411:	e8 00 00 00 00       	callq  3a416 <e1000_clean_rx_irq+0x19c9>
			3a412: R_X86_64_PC32	kfree+0xfffffffffffffffc
   3a416:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   3a41d:	00 
   3a41e:	48 8b 85 28 ff ff ff 	mov    0xffffffffffffff28(%rbp),%rax
   3a425:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
   3a429:	83 bd 6c ff ff ff 0f 	cmpl   $0xf,0xffffffffffffff6c(%rbp)
   3a430:	0f 8e e4 e6 ff ff    	jle    38b1a <e1000_clean_rx_irq+0xcd>
   3a436:	8b 95 6c ff ff ff    	mov    0xffffffffffffff6c(%rbp),%edx
   3a43c:	48 8b b5 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rsi
   3a443:	48 8b bd f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdi
   3a44a:	ff 97 18 02 00 00    	callq  *0x218(%rdi)
   3a450:	c7 85 6c ff ff ff 00 	movl   $0x0,0xffffffffffffff6c(%rbp)
   3a457:	00 00 00 
   3a45a:	e9 bb e6 ff ff       	jmpq   38b1a <e1000_clean_rx_irq+0xcd>
   3a45f:	48 8b 95 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rdx
   3a466:	8b 8d 44 ff ff ff    	mov    0xffffffffffffff44(%rbp),%ecx
   3a46c:	8b 42 18             	mov    0x18(%rdx),%eax
   3a46f:	89 4a 1c             	mov    %ecx,0x1c(%rdx)
   3a472:	31 d2                	xor    %edx,%edx
   3a474:	39 c1                	cmp    %eax,%ecx
   3a476:	77 0a                	ja     3a482 <e1000_clean_rx_irq+0x1a35>
   3a478:	48 8b 8d f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rcx
   3a47f:	8b 51 14             	mov    0x14(%rcx),%edx
   3a482:	f7 d0                	not    %eax
   3a484:	03 85 44 ff ff ff    	add    0xffffffffffffff44(%rbp),%eax
   3a48a:	01 c2                	add    %eax,%edx
   3a48c:	74 14                	je     3a4a2 <e1000_clean_rx_irq+0x1a55>
   3a48e:	48 8b bd f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdi
   3a495:	48 8b b5 f0 fe ff ff 	mov    0xfffffffffffffef0(%rbp),%rsi
   3a49c:	ff 97 18 02 00 00    	callq  *0x218(%rdi)
   3a4a2:	48 8b 85 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rax
   3a4a9:	8b 95 4c ff ff ff    	mov    0xffffffffffffff4c(%rbp),%edx
   3a4af:	01 90 24 01 00 00    	add    %edx,0x124(%rax)
   3a4b5:	8b 8d 48 ff ff ff    	mov    0xffffffffffffff48(%rbp),%ecx
   3a4bb:	01 88 20 01 00 00    	add    %ecx,0x120(%rax)
   3a4c1:	48 8b 95 f8 fe ff ff 	mov    0xfffffffffffffef8(%rbp),%rdx
   3a4c8:	89 c8                	mov    %ecx,%eax
   3a4ca:	48 01 82 10 03 00 00 	add    %rax,0x310(%rdx)
   3a4d1:	8b 85 4c ff ff ff    	mov    0xffffffffffffff4c(%rbp),%eax
   3a4d7:	48 01 82 00 03 00 00 	add    %rax,0x300(%rdx)
   3a4de:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
   3a4e5:	0f b6 c3             	movzbl %bl,%eax
   3a4e8:	5b                   	pop    %rbx
   3a4e9:	41 5c                	pop    %r12
   3a4eb:	41 5d                	pop    %r13
   3a4ed:	41 5e                	pop    %r14
   3a4ef:	41 5f                	pop    %r15
   3a4f1:	c9                   	leaveq 
   3a4f2:	c3                   	retq   

000000000003a4f3 <e1000_alloc_rx_buffers>:
   3a4f3:	55                   	push   %rbp
   3a4f4:	48 89 e5             	mov    %rsp,%rbp
   3a4f7:	41 57                	push   %r15
   3a4f9:	41 56                	push   %r14
   3a4fb:	41 55                	push   %r13
   3a4fd:	41 54                	push   %r12
   3a4ff:	53                   	push   %rbx
   3a500:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   3a507:	48 89 bd 68 ff ff ff 	mov    %rdi,0xffffffffffffff68(%rbp)
   3a50e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a511: R_X86_64_32S	.rodata.str1.1+0x3d73
   3a515:	89 95 5c ff ff ff    	mov    %edx,0xffffffffffffff5c(%rbp)
   3a51b:	48 89 b5 60 ff ff ff 	mov    %rsi,0xffffffffffffff60(%rbp)
   3a522:	e8 00 00 00 00       	callq  3a527 <e1000_alloc_rx_buffers+0x34>
			3a523: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a527:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   3a52e:	48 8b 95 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdx
   3a535:	48 8b 8d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rcx
   3a53c:	48 8b 80 f0 02 00 00 	mov    0x2f0(%rax),%rax
   3a543:	48 89 85 70 ff ff ff 	mov    %rax,0xffffffffffffff70(%rbp)
   3a54a:	48 8b 92 f8 02 00 00 	mov    0x2f8(%rdx),%rdx
   3a551:	48 89 95 78 ff ff ff 	mov    %rdx,0xffffffffffffff78(%rbp)
   3a558:	8b 81 a0 00 00 00    	mov    0xa0(%rcx),%eax
   3a55e:	48 8b 95 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rdx
   3a565:	48 8b 8d 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rcx
   3a56c:	83 c0 02             	add    $0x2,%eax
   3a56f:	89 45 88             	mov    %eax,0xffffffffffffff88(%rbp)
   3a572:	8b 52 18             	mov    0x18(%rdx),%edx
   3a575:	41 89 d7             	mov    %edx,%r15d
   3a578:	89 55 84             	mov    %edx,0xffffffffffffff84(%rbp)
   3a57b:	49 c1 e7 05          	shl    $0x5,%r15
   3a57f:	4c 03 79 20          	add    0x20(%rcx),%r15
   3a583:	ff 8d 5c ff ff ff    	decl   0xffffffffffffff5c(%rbp)
   3a589:	83 bd 5c ff ff ff ff 	cmpl   $0xffffffffffffffff,0xffffffffffffff5c(%rbp)
   3a590:	0f 84 39 09 00 00    	je     3aecf <e1000_alloc_rx_buffers+0x9dc>
   3a596:	4d 8b 37             	mov    (%r15),%r14
   3a599:	4d 85 f6             	test   %r14,%r14
   3a59c:	0f 84 7d 06 00 00    	je     3ac1f <e1000_alloc_rx_buffers+0x72c>
   3a5a2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a5a5: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a5a9:	4c 8d 65 c4          	lea    0xffffffffffffffc4(%rbp),%r12
   3a5ad:	4c 8d 6d b0          	lea    0xffffffffffffffb0(%rbp),%r13
   3a5b1:	e8 00 00 00 00       	callq  3a5b6 <e1000_alloc_rx_buffers+0xc3>
			3a5b2: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a5b6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a5b9: R_X86_64_32S	.rodata.str1.1+0x3d93
   3a5bd:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
   3a5c4:	00 
   3a5c5:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   3a5cc:	00 
   3a5cd:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
   3a5d4:	4c 89 75 b8          	mov    %r14,0xffffffffffffffb8(%rbp)
   3a5d8:	c7 45 c0 00 00 00 00 	movl   $0x0,0xffffffffffffffc0(%rbp)
   3a5df:	e8 00 00 00 00       	callq  3a5e4 <e1000_alloc_rx_buffers+0xf1>
			3a5e0: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a5e4:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
   3a5e8:	4c 89 e2             	mov    %r12,%rdx
   3a5eb:	4c 89 ee             	mov    %r13,%rsi
   3a5ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a5f1: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a5f5:	c7 45 c4 00 00 00 00 	movl   $0x0,0xffffffffffffffc4(%rbp)
   3a5fc:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
   3a603:	00 
   3a604:	e8 00 00 00 00       	callq  3a609 <e1000_alloc_rx_buffers+0x116>
			3a605: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3a609:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3a60d:	48 85 c0             	test   %rax,%rax
   3a610:	0f 84 c7 02 00 00    	je     3a8dd <e1000_alloc_rx_buffers+0x3ea>
   3a616:	8a 40 7d             	mov    0x7d(%rax),%al
   3a619:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   3a61d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a623:	4c 89 e2             	mov    %r12,%rdx
   3a626:	4c 89 ee             	mov    %r13,%rsi
   3a629:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a62c: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a630:	48 89 d9             	mov    %rbx,%rcx
   3a633:	83 e0 07             	and    $0x7,%eax
   3a636:	0f b6 c0             	movzbl %al,%eax
   3a639:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   3a63c:	e8 00 00 00 00       	callq  3a641 <e1000_alloc_rx_buffers+0x14e>
			3a63d: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a641:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a645:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a64b:	4c 89 e2             	mov    %r12,%rdx
   3a64e:	4c 89 ee             	mov    %r13,%rsi
   3a651:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a654: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a658:	48 81 c1 b4 00 00 00 	add    $0xb4,%rcx
   3a65f:	e8 00 00 00 00       	callq  3a664 <e1000_alloc_rx_buffers+0x171>
			3a660: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a664:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a668:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a66e:	4c 89 e2             	mov    %r12,%rdx
   3a671:	4c 89 ee             	mov    %r13,%rsi
   3a674:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a677: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a67b:	48 81 c1 a8 00 00 00 	add    $0xa8,%rcx
   3a682:	e8 00 00 00 00       	callq  3a687 <e1000_alloc_rx_buffers+0x194>
			3a683: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a687:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3a68b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a691:	48 89 d9             	mov    %rbx,%rcx
   3a694:	4c 89 e2             	mov    %r12,%rdx
   3a697:	4c 89 ee             	mov    %r13,%rsi
   3a69a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a69d: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a6a1:	8a 40 7c             	mov    0x7c(%rax),%al
   3a6a4:	c0 e8 02             	shr    $0x2,%al
   3a6a7:	83 e0 03             	and    $0x3,%eax
   3a6aa:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   3a6ad:	e8 00 00 00 00       	callq  3a6b2 <e1000_alloc_rx_buffers+0x1bf>
			3a6ae: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a6b2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a6b6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a6bc:	4c 89 e2             	mov    %r12,%rdx
   3a6bf:	4c 89 ee             	mov    %r13,%rsi
   3a6c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a6c5: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a6c9:	48 83 c1 6c          	add    $0x6c,%rcx
   3a6cd:	e8 00 00 00 00       	callq  3a6d2 <e1000_alloc_rx_buffers+0x1df>
			3a6ce: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a6d2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a6d6:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3a6dc:	4c 89 e2             	mov    %r12,%rdx
   3a6df:	4c 89 ee             	mov    %r13,%rsi
   3a6e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a6e5: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a6e9:	48 81 c1 a4 00 00 00 	add    $0xa4,%rcx
   3a6f0:	e8 00 00 00 00       	callq  3a6f5 <e1000_alloc_rx_buffers+0x202>
			3a6f1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a6f5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3a6f9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a6ff:	48 89 d9             	mov    %rbx,%rcx
   3a702:	4c 89 e2             	mov    %r12,%rdx
   3a705:	4c 89 ee             	mov    %r13,%rsi
   3a708:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a70b: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a70f:	8a 40 7c             	mov    0x7c(%rax),%al
   3a712:	d0 e8                	shr    %al
   3a714:	83 e0 01             	and    $0x1,%eax
   3a717:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
   3a71a:	e8 00 00 00 00       	callq  3a71f <e1000_alloc_rx_buffers+0x22c>
			3a71b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a71f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a723:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3a729:	4c 89 e2             	mov    %r12,%rdx
   3a72c:	4c 89 ee             	mov    %r13,%rsi
   3a72f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a732: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a736:	48 83 c1 76          	add    $0x76,%rcx
   3a73a:	e8 00 00 00 00       	callq  3a73f <e1000_alloc_rx_buffers+0x24c>
			3a73b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a73f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a743:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a749:	4c 89 e2             	mov    %r12,%rdx
   3a74c:	4c 89 ee             	mov    %r13,%rsi
   3a74f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a752: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a756:	48 83 c1 74          	add    $0x74,%rcx
   3a75a:	e8 00 00 00 00       	callq  3a75f <e1000_alloc_rx_buffers+0x26c>
			3a75b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a75f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a763:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a769:	4c 89 e2             	mov    %r12,%rdx
   3a76c:	4c 89 ee             	mov    %r13,%rsi
   3a76f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a772: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a776:	48 83 c1 68          	add    $0x68,%rcx
   3a77a:	e8 00 00 00 00       	callq  3a77f <e1000_alloc_rx_buffers+0x28c>
			3a77b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a77f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a783:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a789:	4c 89 e2             	mov    %r12,%rdx
   3a78c:	4c 89 ee             	mov    %r13,%rsi
   3a78f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a792: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a796:	48 81 c1 ac 00 00 00 	add    $0xac,%rcx
   3a79d:	e8 00 00 00 00       	callq  3a7a2 <e1000_alloc_rx_buffers+0x2af>
			3a79e: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a7a2:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a7a6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a7ac:	4c 89 e2             	mov    %r12,%rdx
   3a7af:	4c 89 ee             	mov    %r13,%rsi
   3a7b2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a7b5: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a7b9:	48 81 c1 b8 00 00 00 	add    $0xb8,%rcx
   3a7c0:	e8 00 00 00 00       	callq  3a7c5 <e1000_alloc_rx_buffers+0x2d2>
			3a7c1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a7c5:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a7c9:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   3a7cf:	4c 89 e2             	mov    %r12,%rdx
   3a7d2:	4c 89 ee             	mov    %r13,%rsi
   3a7d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a7d8: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a7dc:	48 83 c1 7e          	add    $0x7e,%rcx
   3a7e0:	e8 00 00 00 00       	callq  3a7e5 <e1000_alloc_rx_buffers+0x2f2>
			3a7e1: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a7e5:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a7e9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a7ef:	4c 89 e2             	mov    %r12,%rdx
   3a7f2:	4c 89 ee             	mov    %r13,%rsi
   3a7f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a7f8: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a7fc:	48 81 c1 d0 00 00 00 	add    $0xd0,%rcx
   3a803:	e8 00 00 00 00       	callq  3a808 <e1000_alloc_rx_buffers+0x315>
			3a804: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a808:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a80c:	4c 89 e2             	mov    %r12,%rdx
   3a80f:	4c 89 ee             	mov    %r13,%rsi
   3a812:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a815: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a819:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   3a820:	e8 00 00 00 00       	callq  3a825 <e1000_alloc_rx_buffers+0x332>
			3a821: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3a825:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3a829:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   3a830:	00 
   3a831:	74 5d                	je     3a890 <e1000_alloc_rx_buffers+0x39d>
   3a833:	8b b8 b8 00 00 00    	mov    0xb8(%rax),%edi
   3a839:	31 db                	xor    %ebx,%ebx
   3a83b:	e8 00 00 00 00       	callq  3a840 <e1000_alloc_rx_buffers+0x34d>
			3a83c: R_X86_64_PC32	Nonstub_sk_buff_get_length+0xfffffffffffffffc
   3a840:	48 8d 4d cc          	lea    0xffffffffffffffcc(%rbp),%rcx
   3a844:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a84a:	4c 89 e2             	mov    %r12,%rdx
   3a84d:	4c 89 ee             	mov    %r13,%rsi
   3a850:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a853: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a857:	89 45 cc             	mov    %eax,0xffffffffffffffcc(%rbp)
   3a85a:	e8 00 00 00 00       	callq  3a85f <e1000_alloc_rx_buffers+0x36c>
			3a85b: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a85f:	eb 2a                	jmp    3a88b <e1000_alloc_rx_buffers+0x398>
   3a861:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3a865:	48 63 cb             	movslq %ebx,%rcx
   3a868:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   3a86c:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
   3a870:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a876:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a879: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a87d:	ff c3                	inc    %ebx
   3a87f:	48 03 88 c0 00 00 00 	add    0xc0(%rax),%rcx
   3a886:	e8 00 00 00 00       	callq  3a88b <e1000_alloc_rx_buffers+0x398>
			3a887: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a88b:	3b 5d cc             	cmp    0xffffffffffffffcc(%rbp),%ebx
   3a88e:	7c d1                	jl     3a861 <e1000_alloc_rx_buffers+0x36e>
   3a890:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
   3a894:	48 8d 5d c4          	lea    0xffffffffffffffc4(%rbp),%rbx
   3a898:	4c 8d 65 b0          	lea    0xffffffffffffffb0(%rbp),%r12
   3a89c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a89f: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a8a3:	48 89 da             	mov    %rbx,%rdx
   3a8a6:	4c 89 e6             	mov    %r12,%rsi
   3a8a9:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   3a8b0:	e8 00 00 00 00       	callq  3a8b5 <e1000_alloc_rx_buffers+0x3c2>
			3a8b1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
   3a8b5:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
   3a8b9:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
   3a8c0:	48 85 c9             	test   %rcx,%rcx
   3a8c3:	74 18                	je     3a8dd <e1000_alloc_rx_buffers+0x3ea>
   3a8c5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3a8cb:	48 89 da             	mov    %rbx,%rdx
   3a8ce:	4c 89 e6             	mov    %r12,%rsi
   3a8d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a8d4: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a8d8:	e8 00 00 00 00       	callq  3a8dd <e1000_alloc_rx_buffers+0x3ea>
			3a8d9: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a8dd:	48 8d 5d b0          	lea    0xffffffffffffffb0(%rbp),%rbx
   3a8e1:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
   3a8e5:	48 8d 55 c4          	lea    0xffffffffffffffc4(%rbp),%rdx
   3a8e9:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   3a8ef:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a8f2: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a8f6:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
   3a8fa:	48 89 de             	mov    %rbx,%rsi
   3a8fd:	e8 00 00 00 00       	callq  3a902 <e1000_alloc_rx_buffers+0x40f>
			3a8fe: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
   3a902:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   3a906:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
   3a90a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a90d: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a911:	48 c7 45 90 48 06 00 	movq   $0x648,0xffffffffffffff90(%rbp)
   3a918:	00 
   3a919:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
   3a91d:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
   3a920:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
   3a923:	e8 00 00 00 00       	callq  3a928 <e1000_alloc_rx_buffers+0x435>
			3a924: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
   3a928:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a92b: R_X86_64_32S	.rodata.str1.1+0x3daa
   3a92f:	4c 89 75 b0          	mov    %r14,0xffffffffffffffb0(%rbp)
   3a933:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
   3a93a:	e8 00 00 00 00       	callq  3a93f <e1000_alloc_rx_buffers+0x44c>
			3a93b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3a93f:	4c 8b 65 a0          	mov    0xffffffffffffffa0(%rbp),%r12
   3a943:	41 b8 d8 00 00 00    	mov    $0xd8,%r8d
   3a949:	48 89 d9             	mov    %rbx,%rcx
   3a94c:	4c 89 ea             	mov    %r13,%rdx
   3a94f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a952: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a956:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
   3a95d:	4c 89 e6             	mov    %r12,%rsi
   3a960:	e8 00 00 00 00       	callq  3a965 <e1000_alloc_rx_buffers+0x472>
			3a961: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3a965:	48 83 7d b0 00       	cmpq   $0x0,0xffffffffffffffb0(%rbp)
   3a96a:	0f 84 74 02 00 00    	je     3abe4 <e1000_alloc_rx_buffers+0x6f1>
   3a970:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   3a974:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a979:	4c 89 ea             	mov    %r13,%rdx
   3a97c:	4c 89 e6             	mov    %r12,%rsi
   3a97f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a982: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a986:	e8 00 00 00 00       	callq  3a98b <e1000_alloc_rx_buffers+0x498>
			3a987: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a98b:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   3a98f:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   3a992:	4c 89 e6             	mov    %r12,%rsi
   3a995:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a998: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a99c:	8a 41 7d             	mov    0x7d(%rcx),%al
   3a99f:	83 e2 07             	and    $0x7,%edx
   3a9a2:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
   3a9a5:	09 d0                	or     %edx,%eax
   3a9a7:	4c 89 ea             	mov    %r13,%rdx
   3a9aa:	88 41 7d             	mov    %al,0x7d(%rcx)
   3a9ad:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3a9b1:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a9b6:	49 81 c0 b4 00 00 00 	add    $0xb4,%r8
   3a9bd:	e8 00 00 00 00       	callq  3a9c2 <e1000_alloc_rx_buffers+0x4cf>
			3a9be: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a9c2:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3a9c6:	b9 04 00 00 00       	mov    $0x4,%ecx
   3a9cb:	4c 89 ea             	mov    %r13,%rdx
   3a9ce:	4c 89 e6             	mov    %r12,%rsi
   3a9d1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a9d4: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a9d8:	49 81 c0 a8 00 00 00 	add    $0xa8,%r8
   3a9df:	e8 00 00 00 00       	callq  3a9e4 <e1000_alloc_rx_buffers+0x4f1>
			3a9e0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a9e4:	4c 8d 45 c4          	lea    0xffffffffffffffc4(%rbp),%r8
   3a9e8:	b9 01 00 00 00       	mov    $0x1,%ecx
   3a9ed:	4c 89 ea             	mov    %r13,%rdx
   3a9f0:	4c 89 e6             	mov    %r12,%rsi
   3a9f3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a9f6: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3a9fa:	e8 00 00 00 00       	callq  3a9ff <e1000_alloc_rx_buffers+0x50c>
			3a9fb: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3a9ff:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   3aa03:	8a 55 c4             	mov    0xffffffffffffffc4(%rbp),%dl
   3aa06:	4c 89 e6             	mov    %r12,%rsi
   3aa09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aa0c: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aa10:	8a 41 7c             	mov    0x7c(%rcx),%al
   3aa13:	83 e2 03             	and    $0x3,%edx
   3aa16:	c1 e2 02             	shl    $0x2,%edx
   3aa19:	83 e0 f3             	and    $0xfffffffffffffff3,%eax
   3aa1c:	09 d0                	or     %edx,%eax
   3aa1e:	4c 89 ea             	mov    %r13,%rdx
   3aa21:	88 41 7c             	mov    %al,0x7c(%rcx)
   3aa24:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aa28:	b9 04 00 00 00       	mov    $0x4,%ecx
   3aa2d:	49 83 c0 6c          	add    $0x6c,%r8
   3aa31:	e8 00 00 00 00       	callq  3aa36 <e1000_alloc_rx_buffers+0x543>
			3aa32: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aa36:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aa3a:	b9 04 00 00 00       	mov    $0x4,%ecx
   3aa3f:	4c 89 ea             	mov    %r13,%rdx
   3aa42:	4c 89 e6             	mov    %r12,%rsi
   3aa45:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aa48: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aa4c:	49 83 c0 74          	add    $0x74,%r8
   3aa50:	e8 00 00 00 00       	callq  3aa55 <e1000_alloc_rx_buffers+0x562>
			3aa51: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aa55:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aa59:	b9 04 00 00 00       	mov    $0x4,%ecx
   3aa5e:	4c 89 ea             	mov    %r13,%rdx
   3aa61:	4c 89 e6             	mov    %r12,%rsi
   3aa64:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aa67: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aa6b:	49 83 c0 68          	add    $0x68,%r8
   3aa6f:	e8 00 00 00 00       	callq  3aa74 <e1000_alloc_rx_buffers+0x581>
			3aa70: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aa74:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aa78:	b9 04 00 00 00       	mov    $0x4,%ecx
   3aa7d:	4c 89 ea             	mov    %r13,%rdx
   3aa80:	4c 89 e6             	mov    %r12,%rsi
   3aa83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aa86: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aa8a:	49 81 c0 ac 00 00 00 	add    $0xac,%r8
   3aa91:	e8 00 00 00 00       	callq  3aa96 <e1000_alloc_rx_buffers+0x5a3>
			3aa92: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aa96:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aa9a:	b9 04 00 00 00       	mov    $0x4,%ecx
   3aa9f:	4c 89 ea             	mov    %r13,%rdx
   3aaa2:	4c 89 e6             	mov    %r12,%rsi
   3aaa5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aaa8: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aaac:	49 81 c0 b8 00 00 00 	add    $0xb8,%r8
   3aab3:	e8 00 00 00 00       	callq  3aab8 <e1000_alloc_rx_buffers+0x5c5>
			3aab4: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aab8:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aabc:	b9 02 00 00 00       	mov    $0x2,%ecx
   3aac1:	4c 89 ea             	mov    %r13,%rdx
   3aac4:	4c 89 e6             	mov    %r12,%rsi
   3aac7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aaca: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aace:	49 83 c0 7e          	add    $0x7e,%r8
   3aad2:	e8 00 00 00 00       	callq  3aad7 <e1000_alloc_rx_buffers+0x5e4>
			3aad3: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aad7:	4c 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%r8
   3aadb:	b9 04 00 00 00       	mov    $0x4,%ecx
   3aae0:	4c 89 ea             	mov    %r13,%rdx
   3aae3:	4c 89 e6             	mov    %r12,%rsi
   3aae6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aae9: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3aaed:	49 81 c0 d0 00 00 00 	add    $0xd0,%r8
   3aaf4:	e8 00 00 00 00       	callq  3aaf9 <e1000_alloc_rx_buffers+0x606>
			3aaf5: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3aaf9:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   3aafd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3ab03:	4c 89 ea             	mov    %r13,%rdx
   3ab06:	4c 89 e6             	mov    %r12,%rsi
   3ab09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ab0c: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3ab10:	48 81 c1 c0 00 00 00 	add    $0xc0,%rcx
   3ab17:	e8 00 00 00 00       	callq  3ab1c <e1000_alloc_rx_buffers+0x629>
			3ab18: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3ab1c:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   3ab20:	48 83 b8 c0 00 00 00 	cmpq   $0x0,0xc0(%rax)
   3ab27:	00 
   3ab28:	74 69                	je     3ab93 <e1000_alloc_rx_buffers+0x6a0>
   3ab2a:	4c 8d 45 c0          	lea    0xffffffffffffffc0(%rbp),%r8
   3ab2e:	b9 04 00 00 00       	mov    $0x4,%ecx
   3ab33:	4c 89 ea             	mov    %r13,%rdx
   3ab36:	4c 89 e6             	mov    %r12,%rsi
   3ab39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ab3c: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3ab40:	31 db                	xor    %ebx,%ebx
   3ab42:	e8 00 00 00 00       	callq  3ab47 <e1000_alloc_rx_buffers+0x654>
			3ab43: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3ab47:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
   3ab4b:	8b 75 c0             	mov    0xffffffffffffffc0(%rbp),%esi
   3ab4e:	b9 01 00 00 00       	mov    $0x1,%ecx
   3ab53:	ba 01 00 00 00       	mov    $0x1,%edx
   3ab58:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
   3ab5f:	e8 00 00 00 00       	callq  3ab64 <e1000_alloc_rx_buffers+0x671>
			3ab60: R_X86_64_PC32	nooks_ot_alloc_arraymem_user+0xfffffffffffffffc
   3ab64:	eb 28                	jmp    3ab8e <e1000_alloc_rx_buffers+0x69b>
   3ab66:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   3ab6a:	4c 63 c3             	movslq %ebx,%r8
   3ab6d:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   3ab71:	b9 01 00 00 00       	mov    $0x1,%ecx
   3ab76:	4c 89 e6             	mov    %r12,%rsi
   3ab79:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ab7c: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3ab80:	ff c3                	inc    %ebx
   3ab82:	4c 03 80 c0 00 00 00 	add    0xc0(%rax),%r8
   3ab89:	e8 00 00 00 00       	callq  3ab8e <e1000_alloc_rx_buffers+0x69b>
			3ab8a: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3ab8e:	3b 5d c0             	cmp    0xffffffffffffffc0(%rbp),%ebx
   3ab91:	7c d3                	jl     3ab66 <e1000_alloc_rx_buffers+0x673>
   3ab93:	48 8b 4d b0          	mov    0xffffffffffffffb0(%rbp),%rcx
   3ab97:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
   3ab9b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3aba1:	4c 89 e6             	mov    %r12,%rsi
   3aba4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3aba7: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3abab:	48 89 da             	mov    %rbx,%rdx
   3abae:	48 81 c1 c8 00 00 00 	add    $0xc8,%rcx
   3abb5:	e8 00 00 00 00       	callq  3abba <e1000_alloc_rx_buffers+0x6c7>
			3abb6: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
   3abba:	48 8b 45 b0          	mov    0xffffffffffffffb0(%rbp),%rax
   3abbe:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   3abc5:	48 85 c0             	test   %rax,%rax
   3abc8:	74 1a                	je     3abe4 <e1000_alloc_rx_buffers+0x6f1>
   3abca:	49 89 c0             	mov    %rax,%r8
   3abcd:	b9 01 00 00 00       	mov    $0x1,%ecx
   3abd2:	48 89 da             	mov    %rbx,%rdx
   3abd5:	4c 89 e6             	mov    %r12,%rsi
   3abd8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3abdb: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3abdf:	e8 00 00 00 00       	callq  3abe4 <e1000_alloc_rx_buffers+0x6f1>
			3abe0: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3abe4:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
   3abe8:	4c 8d 45 cc          	lea    0xffffffffffffffcc(%rbp),%r8
   3abec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3abef: R_X86_64_32S	.rodata.str1.1+0x3d8a
   3abf3:	b9 04 00 00 00       	mov    $0x4,%ecx
   3abf8:	4c 89 e6             	mov    %r12,%rsi
   3abfb:	e8 00 00 00 00       	callq  3ac00 <e1000_alloc_rx_buffers+0x70d>
			3abfc: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
   3ac00:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
   3ac04:	48 85 ff             	test   %rdi,%rdi
   3ac07:	0f 84 f8 00 00 00    	je     3ad05 <e1000_alloc_rx_buffers+0x812>
   3ac0d:	e8 00 00 00 00       	callq  3ac12 <e1000_alloc_rx_buffers+0x71f>
			3ac0e: R_X86_64_PC32	kfree+0xfffffffffffffffc
   3ac12:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
   3ac19:	00 
   3ac1a:	e9 e6 00 00 00       	jmpq   3ad05 <e1000_alloc_rx_buffers+0x812>
   3ac1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ac22: R_X86_64_32S	.rodata.str1.1+0x3c3d
   3ac26:	e8 00 00 00 00       	callq  3ac2b <e1000_alloc_rx_buffers+0x738>
			3ac27: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ac2b:	8b 75 88             	mov    0xffffffffffffff88(%rbp),%esi
   3ac2e:	48 8b bd 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdi
   3ac35:	ba 20 00 00 00       	mov    $0x20,%edx
   3ac3a:	e8 00 00 00 00       	callq  3ac3f <e1000_alloc_rx_buffers+0x74c>
			3ac3b: R_X86_64_PC32	__netdev_alloc_skb+0xfffffffffffffffc
   3ac3f:	48 85 c0             	test   %rax,%rax
   3ac42:	49 89 c6             	mov    %rax,%r14
   3ac45:	0f 84 b1 02 00 00    	je     3aefc <e1000_alloc_rx_buffers+0xa09>
   3ac4b:	44 8b 65 88          	mov    0xffffffffffffff88(%rbp),%r12d
   3ac4f:	48 8b b0 c8 00 00 00 	mov    0xc8(%rax),%rsi
   3ac56:	48 8b bd 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdi
   3ac5d:	4c 89 e2             	mov    %r12,%rdx
   3ac60:	e8 34 63 fc ff       	callq  f99 <e1000_check_64k_bound>
   3ac65:	84 c0                	test   %al,%al
   3ac67:	75 6b                	jne    3acd4 <e1000_alloc_rx_buffers+0x7e1>
   3ac69:	49 8b 96 c8 00 00 00 	mov    0xc8(%r14),%rdx
   3ac70:	8b 75 88             	mov    0xffffffffffffff88(%rbp),%esi
   3ac73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ac76: R_X86_64_32S	str_234262759
   3ac7a:	e8 00 00 00 00       	callq  3ac7f <e1000_alloc_rx_buffers+0x78c>
			3ac7b: R_X86_64_PC32	printk+0xfffffffffffffffc
   3ac7f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ac82: R_X86_64_32S	.rodata.str1.1+0x3c3d
   3ac86:	e8 00 00 00 00       	callq  3ac8b <e1000_alloc_rx_buffers+0x798>
			3ac87: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ac8b:	8b 75 88             	mov    0xffffffffffffff88(%rbp),%esi
   3ac8e:	48 8b bd 70 ff ff ff 	mov    0xffffffffffffff70(%rbp),%rdi
   3ac95:	ba 20 00 00 00       	mov    $0x20,%edx
   3ac9a:	e8 00 00 00 00       	callq  3ac9f <e1000_alloc_rx_buffers+0x7ac>
			3ac9b: R_X86_64_PC32	__netdev_alloc_skb+0xfffffffffffffffc
   3ac9f:	48 85 c0             	test   %rax,%rax
   3aca2:	48 89 c3             	mov    %rax,%rbx
   3aca5:	0f 84 47 02 00 00    	je     3aef2 <e1000_alloc_rx_buffers+0x9ff>
   3acab:	48 8b b0 c8 00 00 00 	mov    0xc8(%rax),%rsi
   3acb2:	48 8b bd 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdi
   3acb9:	4c 89 e2             	mov    %r12,%rdx
   3acbc:	e8 d8 62 fc ff       	callq  f99 <e1000_check_64k_bound>
   3acc1:	84 c0                	test   %al,%al
   3acc3:	0f 84 21 02 00 00    	je     3aeea <e1000_alloc_rx_buffers+0x9f7>
   3acc9:	4c 89 f7             	mov    %r14,%rdi
   3accc:	49 89 de             	mov    %rbx,%r14
   3accf:	e8 00 00 00 00       	callq  3acd4 <e1000_alloc_rx_buffers+0x7e1>
			3acd0: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   3acd4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3acd7: R_X86_64_32S	.rodata.str1.1+0x2f0a
   3acdb:	e8 00 00 00 00       	callq  3ace0 <e1000_alloc_rx_buffers+0x7ed>
			3acdc: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ace0:	49 83 86 c8 00 00 00 	addq   $0x2,0xc8(%r14)
   3ace7:	02 
   3ace8:	41 83 86 b4 00 00 00 	addl   $0x2,0xb4(%r14)
   3acef:	02 
   3acf0:	4d 89 37             	mov    %r14,(%r15)
   3acf3:	48 8b 95 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rdx
   3acfa:	8b 82 a0 00 00 00    	mov    0xa0(%rdx),%eax
   3ad00:	66 41 89 47 18       	mov    %ax,0x18(%r15)
   3ad05:	48 8b 8d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rcx
   3ad0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ad0f: R_X86_64_32S	.rodata.str1.1+0x2edf
   3ad13:	31 db                	xor    %ebx,%ebx
   3ad15:	8b 89 a0 00 00 00    	mov    0xa0(%rcx),%ecx
   3ad1b:	89 4d 8c             	mov    %ecx,0xffffffffffffff8c(%rbp)
   3ad1e:	4d 8b ae c8 00 00 00 	mov    0xc8(%r14),%r13
   3ad25:	e8 00 00 00 00       	callq  3ad2a <e1000_alloc_rx_buffers+0x837>
			3ad26: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ad2a:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
   3ad31:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ad34: R_X86_64_32S	.rodata.str1.1+0x2eee
   3ad38:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   3ad3c:	48 83 bd 78 ff ff ff 	cmpq   $0x0,0xffffffffffffff78(%rbp)
   3ad43:	00 
   3ad44:	48 0f 45 d8          	cmovne %rax,%rbx
   3ad48:	e8 00 00 00 00       	callq  3ad4d <e1000_alloc_rx_buffers+0x85a>
			3ad49: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ad4d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ad50: R_X86_64_32S	.rodata.str1.1+0x2ca6
   3ad54:	e8 00 00 00 00       	callq  3ad59 <e1000_alloc_rx_buffers+0x866>
			3ad55: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ad59:	48 85 db             	test   %rbx,%rbx
   3ad5c:	75 09                	jne    3ad67 <e1000_alloc_rx_buffers+0x874>
   3ad5e:	4c 8b 25 00 00 00 00 	mov    0(%rip),%r12        # 3ad65 <e1000_alloc_rx_buffers+0x872>
			3ad61: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   3ad65:	eb 15                	jmp    3ad7c <e1000_alloc_rx_buffers+0x889>
   3ad67:	48 8b 83 e8 01 00 00 	mov    0x1e8(%rbx),%rax
   3ad6e:	48 85 c0             	test   %rax,%rax
   3ad71:	49 89 c4             	mov    %rax,%r12
   3ad74:	4c 0f 44 25 00 00 00 	cmove  0(%rip),%r12        # 3ad7c <e1000_alloc_rx_buffers+0x889>
   3ad7b:	00 
			3ad78: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   3ad7c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ad7f: R_X86_64_32S	.rodata.str1.1+0x2cb2
   3ad83:	e8 00 00 00 00       	callq  3ad88 <e1000_alloc_rx_buffers+0x895>
			3ad84: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ad88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ad8b: R_X86_64_32S	.rodata.str1.1+0x2efd
   3ad8f:	e8 00 00 00 00       	callq  3ad94 <e1000_alloc_rx_buffers+0x8a1>
			3ad90: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ad94:	4c 89 ef             	mov    %r13,%rdi
   3ad97:	e8 2d d8 fc ff       	callq  85c9 <__phys_addr>
   3ad9c:	8b 55 8c             	mov    0xffffffffffffff8c(%rbp),%edx
   3ad9f:	48 89 c6             	mov    %rax,%rsi
   3ada2:	b9 02 00 00 00       	mov    $0x2,%ecx
   3ada7:	48 89 df             	mov    %rbx,%rdi
   3adaa:	41 ff 54 24 18       	callq  *0x18(%r12)
   3adaf:	49 89 47 08          	mov    %rax,0x8(%r15)
   3adb3:	48 89 c6             	mov    %rax,%rsi
   3adb6:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   3adbd:	8b 90 a0 00 00 00    	mov    0xa0(%rax),%edx
   3adc3:	48 89 c7             	mov    %rax,%rdi
   3adc6:	e8 ce 61 fc ff       	callq  f99 <e1000_check_64k_bound>
   3adcb:	84 c0                	test   %al,%al
   3adcd:	49 8b 57 08          	mov    0x8(%r15),%rdx
   3add1:	0f 85 c3 00 00 00    	jne    3ae9a <e1000_alloc_rx_buffers+0x9a7>
   3add7:	48 8b 8d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rcx
   3adde:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ade1: R_X86_64_32S	str_410917061
   3ade5:	45 31 e4             	xor    %r12d,%r12d
   3ade8:	8b b1 a0 00 00 00    	mov    0xa0(%rcx),%esi
   3adee:	e8 00 00 00 00       	callq  3adf3 <e1000_alloc_rx_buffers+0x900>
			3adef: R_X86_64_PC32	printk+0xfffffffffffffffc
   3adf3:	4c 89 f7             	mov    %r14,%rdi
   3adf6:	e8 00 00 00 00       	callq  3adfb <e1000_alloc_rx_buffers+0x908>
			3adf7: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   3adfb:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   3ae02:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   3ae09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ae0c: R_X86_64_32S	.rodata.str1.1+0x2c84
   3ae10:	4d 8b 77 08          	mov    0x8(%r15),%r14
   3ae14:	44 8b a8 a0 00 00 00 	mov    0xa0(%rax),%r13d
   3ae1b:	e8 00 00 00 00       	callq  3ae20 <e1000_alloc_rx_buffers+0x92d>
			3ae1c: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ae20:	48 8b 85 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rax
   3ae27:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ae2a: R_X86_64_32S	.rodata.str1.1+0x2c95
   3ae2e:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   3ae32:	48 83 bd 78 ff ff ff 	cmpq   $0x0,0xffffffffffffff78(%rbp)
   3ae39:	00 
   3ae3a:	4c 0f 45 e0          	cmovne %rax,%r12
   3ae3e:	e8 00 00 00 00       	callq  3ae43 <e1000_alloc_rx_buffers+0x950>
			3ae3f: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ae43:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ae46: R_X86_64_32S	.rodata.str1.1+0x2ca6
   3ae4a:	e8 00 00 00 00       	callq  3ae4f <e1000_alloc_rx_buffers+0x95c>
			3ae4b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ae4f:	4d 85 e4             	test   %r12,%r12
   3ae52:	75 09                	jne    3ae5d <e1000_alloc_rx_buffers+0x96a>
   3ae54:	48 8b 1d 00 00 00 00 	mov    0(%rip),%rbx        # 3ae5b <e1000_alloc_rx_buffers+0x968>
			3ae57: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   3ae5b:	eb 16                	jmp    3ae73 <e1000_alloc_rx_buffers+0x980>
   3ae5d:	49 8b 84 24 e8 01 00 	mov    0x1e8(%r12),%rax
   3ae64:	00 
   3ae65:	48 85 c0             	test   %rax,%rax
   3ae68:	48 89 c3             	mov    %rax,%rbx
   3ae6b:	48 0f 44 1d 00 00 00 	cmove  0(%rip),%rbx        # 3ae73 <e1000_alloc_rx_buffers+0x980>
   3ae72:	00 
			3ae6f: R_X86_64_PC32	dma_ops+0xfffffffffffffffc
   3ae73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3ae76: R_X86_64_32S	.rodata.str1.1+0x2cb2
   3ae7a:	e8 00 00 00 00       	callq  3ae7f <e1000_alloc_rx_buffers+0x98c>
			3ae7b: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3ae7f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   3ae83:	48 85 c0             	test   %rax,%rax
   3ae86:	74 47                	je     3aecf <e1000_alloc_rx_buffers+0x9dc>
   3ae88:	44 89 ea             	mov    %r13d,%edx
   3ae8b:	b9 02 00 00 00       	mov    $0x2,%ecx
   3ae90:	4c 89 f6             	mov    %r14,%rsi
   3ae93:	4c 89 e7             	mov    %r12,%rdi
   3ae96:	ff d0                	callq  *%rax
   3ae98:	eb 35                	jmp    3aecf <e1000_alloc_rx_buffers+0x9dc>
   3ae9a:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   3ae9d:	48 8b 8d 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rcx
   3aea4:	48 c1 e0 04          	shl    $0x4,%rax
   3aea8:	48 03 01             	add    (%rcx),%rax
   3aeab:	48 89 10             	mov    %rdx,(%rax)
   3aeae:	ff 45 84             	incl   0xffffffffffffff84(%rbp)
   3aeb1:	8b 45 84             	mov    0xffffffffffffff84(%rbp),%eax
   3aeb4:	3b 41 14             	cmp    0x14(%rcx),%eax
   3aeb7:	b8 00 00 00 00       	mov    $0x0,%eax
   3aebc:	0f 45 45 84          	cmovne 0xffffffffffffff84(%rbp),%eax
   3aec0:	41 89 c7             	mov    %eax,%r15d
   3aec3:	89 45 84             	mov    %eax,0xffffffffffffff84(%rbp)
   3aec6:	49 c1 e7 05          	shl    $0x5,%r15
   3aeca:	e9 b0 f6 ff ff       	jmpq   3a57f <e1000_alloc_rx_buffers+0x8c>
   3aecf:	48 8b 95 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rdx
   3aed6:	8b 4d 84             	mov    0xffffffffffffff84(%rbp),%ecx
   3aed9:	39 4a 18             	cmp    %ecx,0x18(%rdx)
   3aedc:	74 6a                	je     3af48 <e1000_alloc_rx_buffers+0xa55>
   3aede:	85 c9                	test   %ecx,%ecx
   3aee0:	89 4a 18             	mov    %ecx,0x18(%rdx)
   3aee3:	41 89 cd             	mov    %ecx,%r13d
   3aee6:	75 2e                	jne    3af16 <e1000_alloc_rx_buffers+0xa23>
   3aee8:	eb 21                	jmp    3af0b <e1000_alloc_rx_buffers+0xa18>
   3aeea:	48 89 df             	mov    %rbx,%rdi
   3aeed:	e8 00 00 00 00       	callq  3aef2 <e1000_alloc_rx_buffers+0x9ff>
			3aeee: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   3aef2:	4c 89 f7             	mov    %r14,%rdi
   3aef5:	e8 00 00 00 00       	callq  3aefa <e1000_alloc_rx_buffers+0xa07>
			3aef6: R_X86_64_PC32	kfree_skb+0xfffffffffffffffc
   3aefa:	eb d3                	jmp    3aecf <e1000_alloc_rx_buffers+0x9dc>
   3aefc:	48 8b 85 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rax
   3af03:	ff 80 d0 02 00 00    	incl   0x2d0(%rax)
   3af09:	eb c4                	jmp    3aecf <e1000_alloc_rx_buffers+0x9dc>
   3af0b:	48 8b 95 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rdx
   3af12:	44 8b 6a 14          	mov    0x14(%rdx),%r13d
   3af16:	41 ff cd             	dec    %r13d
   3af19:	0f ae f8             	sfence 
   3af1c:	48 8b 85 60 ff ff ff 	mov    0xffffffffffffff60(%rbp),%rax
   3af23:	48 8b 8d 68 ff ff ff 	mov    0xffffffffffffff68(%rbp),%rcx
   3af2a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3af2d: R_X86_64_32S	.rodata.str1.1+0xb4
   3af31:	0f b7 58 2e          	movzwl 0x2e(%rax),%ebx
   3af35:	4c 8b a1 b8 03 00 00 	mov    0x3b8(%rcx),%r12
   3af3c:	e8 00 00 00 00       	callq  3af41 <e1000_alloc_rx_buffers+0xa4e>
			3af3d: R_X86_64_PC32	record_function+0xfffffffffffffffc
   3af41:	49 01 dc             	add    %rbx,%r12
   3af44:	45 89 2c 24          	mov    %r13d,(%r12)
   3af48:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   3af4f:	5b                   	pop    %rbx
   3af50:	41 5c                	pop    %r12
   3af52:	41 5d                	pop    %r13
   3af54:	41 5e                	pop    %r14
   3af56:	41 5f                	pop    %r15
   3af58:	c9                   	leaveq 
   3af59:	c3                   	retq   
   3af5a:	90                   	nop    
   3af5b:	90                   	nop    

000000000003af5c <MJR_call_kern>:
   3af5c:	55                   	push   %rbp
   3af5d:	48 89 e5             	mov    %rsp,%rbp
   3af60:	48 83 ec 20          	sub    $0x20,%rsp
   3af64:	89 75 e8             	mov    %esi,0xffffffffffffffe8(%rbp)
   3af67:	48 8d 75 e0          	lea    0xffffffffffffffe0(%rbp),%rsi
   3af6b:	48 89 7d e0          	mov    %rdi,0xffffffffffffffe0(%rbp)
   3af6f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3af72: R_X86_64_32S	.rodata.str1.1+0x3dc1
   3af76:	48 89 55 f0          	mov    %rdx,0xfffffffffffffff0(%rbp)
   3af7a:	e8 00 00 00 00       	callq  3af7f <MJR_call_kern+0x23>
			3af7b: R_X86_64_PC32	dispatch_user_request+0xfffffffffffffffc
   3af7f:	c9                   	leaveq 
   3af80:	c3                   	retq   

000000000003af81 <nooks_debug_translate_u2k>:
   3af81:	55                   	push   %rbp
   3af82:	be 08 00 00 00       	mov    $0x8,%esi
   3af87:	48 89 e5             	mov    %rsp,%rbp
   3af8a:	48 83 ec 10          	sub    $0x10,%rsp
   3af8e:	48 8d 55 f8          	lea    0xfffffffffffffff8(%rbp),%rdx
   3af92:	48 89 7d f8          	mov    %rdi,0xfffffffffffffff8(%rbp)
   3af96:	bf 70 00 00 00       	mov    $0x70,%edi
   3af9b:	e8 bc ff ff ff       	callq  3af5c <MJR_call_kern>
   3afa0:	48 8b 45 f8          	mov    0xfffffffffffffff8(%rbp),%rax
   3afa4:	c9                   	leaveq 
   3afa5:	c3                   	retq   

000000000003afa6 <nooks_ot_free_range>:
   3afa6:	55                   	push   %rbp
   3afa7:	48 89 e5             	mov    %rsp,%rbp
   3afaa:	48 83 ec 20          	sub    $0x20,%rsp
   3afae:	48 8d 55 e0          	lea    0xffffffffffffffe0(%rbp),%rdx
   3afb2:	48 89 7d e8          	mov    %rdi,0xffffffffffffffe8(%rbp)
   3afb6:	48 89 75 f0          	mov    %rsi,0xfffffffffffffff0(%rbp)
   3afba:	bf 6e 00 00 00       	mov    $0x6e,%edi
   3afbf:	be 20 00 00 00       	mov    $0x20,%esi
   3afc4:	48 c7 45 e0 00 00 00 	movq   $0x0,0xffffffffffffffe0(%rbp)
   3afcb:	00 
   3afcc:	c7 45 f8 00 00 00 00 	movl   $0x0,0xfffffffffffffff8(%rbp)
   3afd3:	c7 45 fc 00 00 00 00 	movl   $0x0,0xfffffffffffffffc(%rbp)
   3afda:	e8 7d ff ff ff       	callq  3af5c <MJR_call_kern>
   3afdf:	c9                   	leaveq 
   3afe0:	c3                   	retq   

000000000003afe1 <nooks_ot_add_range>:
   3afe1:	55                   	push   %rbp
   3afe2:	48 89 e5             	mov    %rsp,%rbp
   3afe5:	48 83 ec 20          	sub    $0x20,%rsp
   3afe9:	89 55 f8             	mov    %edx,0xfffffffffffffff8(%rbp)
   3afec:	48 8d 55 e0          	lea    0xffffffffffffffe0(%rbp),%rdx
   3aff0:	48 89 7d e8          	mov    %rdi,0xffffffffffffffe8(%rbp)
   3aff4:	48 89 75 f0          	mov    %rsi,0xfffffffffffffff0(%rbp)
   3aff8:	bf 6d 00 00 00       	mov    $0x6d,%edi
   3affd:	be 20 00 00 00       	mov    $0x20,%esi
   3b002:	48 c7 45 e0 00 00 00 	movq   $0x0,0xffffffffffffffe0(%rbp)
   3b009:	00 
   3b00a:	89 4d fc             	mov    %ecx,0xfffffffffffffffc(%rbp)
   3b00d:	e8 4a ff ff ff       	callq  3af5c <MJR_call_kern>
   3b012:	c9                   	leaveq 
   3b013:	c3                   	retq   

000000000003b014 <nooks_ot_kern_memory_assoc>:
   3b014:	55                   	push   %rbp
   3b015:	48 89 e5             	mov    %rsp,%rbp
   3b018:	48 83 ec 10          	sub    $0x10,%rsp
   3b01c:	48 8d 55 f0          	lea    0xfffffffffffffff0(%rbp),%rdx
   3b020:	48 89 75 f8          	mov    %rsi,0xfffffffffffffff8(%rbp)
   3b024:	48 89 7d f0          	mov    %rdi,0xfffffffffffffff0(%rbp)
   3b028:	be 10 00 00 00       	mov    $0x10,%esi
   3b02d:	bf 6a 00 00 00       	mov    $0x6a,%edi
   3b032:	e8 25 ff ff ff       	callq  3af5c <MJR_call_kern>
   3b037:	c9                   	leaveq 
   3b038:	c3                   	retq   

000000000003b039 <nooks_ot_register_userfn>:
   3b039:	55                   	push   %rbp
   3b03a:	48 89 e5             	mov    %rsp,%rbp
   3b03d:	48 83 ec 10          	sub    $0x10,%rsp
   3b041:	48 8d 55 f0          	lea    0xfffffffffffffff0(%rbp),%rdx
   3b045:	48 89 7d f0          	mov    %rdi,0xfffffffffffffff0(%rbp)
   3b049:	48 89 75 f8          	mov    %rsi,0xfffffffffffffff8(%rbp)
   3b04d:	bf 69 00 00 00       	mov    $0x69,%edi
   3b052:	be 10 00 00 00       	mov    $0x10,%esi
   3b057:	e8 00 ff ff ff       	callq  3af5c <MJR_call_kern>
   3b05c:	c9                   	leaveq 
   3b05d:	c3                   	retq   

000000000003b05e <nooks_ot_storeoffset_user>:
   3b05e:	55                   	push   %rbp
   3b05f:	48 89 e5             	mov    %rsp,%rbp
   3b062:	41 57                	push   %r15
   3b064:	41 89 d7             	mov    %edx,%r15d
   3b067:	41 56                	push   %r14
   3b069:	4c 63 f6             	movslq %esi,%r14
   3b06c:	be 10 00 00 00       	mov    $0x10,%esi
   3b071:	41 55                	push   %r13
   3b073:	49 89 fd             	mov    %rdi,%r13
   3b076:	41 54                	push   %r12
   3b078:	4c 8d 65 c0          	lea    0xffffffffffffffc0(%rbp),%r12
   3b07c:	53                   	push   %rbx
   3b07d:	4a 8d 1c 37          	lea    (%rdi,%r14,1),%rbx
   3b081:	4c 89 e2             	mov    %r12,%rdx
   3b084:	bf 64 00 00 00       	mov    $0x64,%edi
   3b089:	48 83 ec 18          	sub    $0x18,%rsp
   3b08d:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,0xffffffffffffffc8(%rbp)
   3b094:	ff 
   3b095:	48 89 5d c0          	mov    %rbx,0xffffffffffffffc0(%rbp)
   3b099:	e8 be fe ff ff       	callq  3af5c <MJR_call_kern>
   3b09e:	48 83 7d c8 ff       	cmpq   $0xffffffffffffffff,0xffffffffffffffc8(%rbp)
   3b0a3:	0f 85 8d 00 00 00    	jne    3b136 <nooks_ot_storeoffset_user+0xd8>
   3b0a9:	4c 89 e2             	mov    %r12,%rdx
   3b0ac:	be 10 00 00 00       	mov    $0x10,%esi
   3b0b1:	bf 64 00 00 00       	mov    $0x64,%edi
   3b0b6:	48 c7 45 c8 ff ff ff 	movq   $0xffffffffffffffff,0xffffffffffffffc8(%rbp)
   3b0bd:	ff 
   3b0be:	4c 89 6d c0          	mov    %r13,0xffffffffffffffc0(%rbp)
   3b0c2:	e8 95 fe ff ff       	callq  3af5c <MJR_call_kern>
   3b0c7:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
   3b0cb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3b0cf:	74 57                	je     3b128 <nooks_ot_storeoffset_user+0xca>
   3b0d1:	4e 8d 2c 30          	lea    (%rax,%r14,1),%r13
   3b0d5:	be 10 00 00 00       	mov    $0x10,%esi
   3b0da:	4c 89 e2             	mov    %r12,%rdx
   3b0dd:	bf 67 00 00 00       	mov    $0x67,%edi
   3b0e2:	48 c7 45 c0 ff ff ff 	movq   $0xffffffffffffffff,0xffffffffffffffc0(%rbp)
   3b0e9:	ff 
   3b0ea:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
   3b0ee:	e8 69 fe ff ff       	callq  3af5c <MJR_call_kern>
   3b0f3:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
   3b0f7:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
   3b0fb:	74 0e                	je     3b10b <nooks_ot_storeoffset_user+0xad>
   3b0fd:	48 39 f3             	cmp    %rsi,%rbx
   3b100:	74 09                	je     3b10b <nooks_ot_storeoffset_user+0xad>
   3b102:	49 63 cf             	movslq %r15d,%rcx
   3b105:	48 89 df             	mov    %rbx,%rdi
   3b108:	fc                   	cld    
   3b109:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   3b10b:	48 8d 55 c0          	lea    0xffffffffffffffc0(%rbp),%rdx
   3b10f:	be 10 00 00 00       	mov    $0x10,%esi
   3b114:	bf 66 00 00 00       	mov    $0x66,%edi
   3b119:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
   3b11d:	48 89 5d c0          	mov    %rbx,0xffffffffffffffc0(%rbp)
   3b121:	e8 36 fe ff ff       	callq  3af5c <MJR_call_kern>
   3b126:	eb 0e                	jmp    3b136 <nooks_ot_storeoffset_user+0xd8>
   3b128:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b12b: R_X86_64_32S	.rodata.str1.1+0x3dd4
   3b12f:	31 c0                	xor    %eax,%eax
   3b131:	e8 00 00 00 00       	callq  3b136 <nooks_ot_storeoffset_user+0xd8>
			3b132: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b136:	48 83 c4 18          	add    $0x18,%rsp
   3b13a:	5b                   	pop    %rbx
   3b13b:	41 5c                	pop    %r12
   3b13d:	41 5d                	pop    %r13
   3b13f:	41 5e                	pop    %r14
   3b141:	41 5f                	pop    %r15
   3b143:	c9                   	leaveq 
   3b144:	c3                   	retq   

000000000003b145 <nooks_ot_store_array_numelts_reverse>:
   3b145:	55                   	push   %rbp
   3b146:	31 c0                	xor    %eax,%eax
   3b148:	48 89 f9             	mov    %rdi,%rcx
   3b14b:	fc                   	cld    
   3b14c:	48 89 e5             	mov    %rsp,%rbp
   3b14f:	48 83 ec 20          	sub    $0x20,%rsp
   3b153:	48 8d 55 f0          	lea    0xfffffffffffffff0(%rbp),%rdx
   3b157:	48 89 d7             	mov    %rdx,%rdi
   3b15a:	ab                   	stos   %eax,%es:(%rdi)
   3b15b:	ab                   	stos   %eax,%es:(%rdi)
   3b15c:	48 89 4d f0          	mov    %rcx,0xfffffffffffffff0(%rbp)
   3b160:	ab                   	stos   %eax,%es:(%rdi)
   3b161:	89 75 f8             	mov    %esi,0xfffffffffffffff8(%rbp)
   3b164:	be 10 00 00 00       	mov    $0x10,%esi
   3b169:	48 89 7d e8          	mov    %rdi,0xffffffffffffffe8(%rbp)
   3b16d:	ab                   	stos   %eax,%es:(%rdi)
   3b16e:	bf 6c 00 00 00       	mov    $0x6c,%edi
   3b173:	e8 e4 fd ff ff       	callq  3af5c <MJR_call_kern>
   3b178:	c9                   	leaveq 
   3b179:	c3                   	retq   

000000000003b17a <nooks_ot_alloc_arraymem_user>:
   3b17a:	55                   	push   %rbp
   3b17b:	31 c0                	xor    %eax,%eax
   3b17d:	fc                   	cld    
   3b17e:	48 89 e5             	mov    %rsp,%rbp
   3b181:	41 57                	push   %r15
   3b183:	41 56                	push   %r14
   3b185:	41 89 d6             	mov    %edx,%r14d
   3b188:	48 8d 55 b0          	lea    0xffffffffffffffb0(%rbp),%rdx
   3b18c:	41 55                	push   %r13
   3b18e:	41 89 f5             	mov    %esi,%r13d
   3b191:	be 10 00 00 00       	mov    $0x10,%esi
   3b196:	41 54                	push   %r12
   3b198:	53                   	push   %rbx
   3b199:	48 83 ec 58          	sub    $0x58,%rsp
   3b19d:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
   3b1a1:	48 89 d7             	mov    %rdx,%rdi
   3b1a4:	89 4d 84             	mov    %ecx,0xffffffffffffff84(%rbp)
   3b1a7:	ab                   	stos   %eax,%es:(%rdi)
   3b1a8:	ab                   	stos   %eax,%es:(%rdi)
   3b1a9:	ab                   	stos   %eax,%es:(%rdi)
   3b1aa:	ab                   	stos   %eax,%es:(%rdi)
   3b1ab:	bf 6b 00 00 00       	mov    $0x6b,%edi
   3b1b0:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   3b1b4:	48 8b 01             	mov    (%rcx),%rax
   3b1b7:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
   3b1be:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
   3b1c2:	e8 95 fd ff ff       	callq  3af5c <MJR_call_kern>
   3b1c7:	8b 5d b8             	mov    0xffffffffffffffb8(%rbp),%ebx
   3b1ca:	83 fb ff             	cmp    $0xffffffffffffffff,%ebx
   3b1cd:	75 17                	jne    3b1e6 <nooks_ot_alloc_arraymem_user+0x6c>
   3b1cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b1d2: R_X86_64_32S	.rodata.str1.1+0x3dfe
   3b1d6:	31 c0                	xor    %eax,%eax
   3b1d8:	e8 00 00 00 00       	callq  3b1dd <nooks_ot_alloc_arraymem_user+0x63>
			3b1d9: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b1dd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b1e0: R_X86_64_32S	.rodata.str1.1+0x3e45
   3b1e4:	eb 19                	jmp    3b1ff <nooks_ot_alloc_arraymem_user+0x85>
   3b1e6:	85 db                	test   %ebx,%ebx
   3b1e8:	75 21                	jne    3b20b <nooks_ot_alloc_arraymem_user+0x91>
   3b1ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b1ed: R_X86_64_32S	.rodata.str1.1+0x3e5f
   3b1f1:	31 c0                	xor    %eax,%eax
   3b1f3:	e8 00 00 00 00       	callq  3b1f8 <nooks_ot_alloc_arraymem_user+0x7e>
			3b1f4: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b1f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b1fb: R_X86_64_32S	.rodata.str1.1+0x3ea6
   3b1ff:	31 c0                	xor    %eax,%eax
   3b201:	e8 00 00 00 00       	callq  3b206 <nooks_ot_alloc_arraymem_user+0x8c>
			3b202: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b206:	e9 5d 01 00 00       	jmpq   3b368 <nooks_ot_alloc_arraymem_user+0x1ee>
   3b20b:	44 8b 45 84          	mov    0xffffffffffffff84(%rbp),%r8d
   3b20f:	31 c0                	xor    %eax,%eax
   3b211:	44 89 f1             	mov    %r14d,%ecx
   3b214:	44 89 ea             	mov    %r13d,%edx
   3b217:	89 de                	mov    %ebx,%esi
   3b219:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b21c: R_X86_64_32S	.rodata.str1.1+0x3ef4
   3b220:	e8 00 00 00 00       	callq  3b225 <nooks_ot_alloc_arraymem_user+0xab>
			3b221: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b225:	45 85 ed             	test   %r13d,%r13d
   3b228:	79 10                	jns    3b23a <nooks_ot_alloc_arraymem_user+0xc0>
   3b22a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b22d: R_X86_64_32S	.rodata.str1.1+0x3f66
   3b231:	31 c0                	xor    %eax,%eax
   3b233:	e8 00 00 00 00       	callq  3b238 <nooks_ot_alloc_arraymem_user+0xbe>
			3b234: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b238:	eb 4c                	jmp    3b286 <nooks_ot_alloc_arraymem_user+0x10c>
   3b23a:	44 39 eb             	cmp    %r13d,%ebx
   3b23d:	0f 84 25 01 00 00    	je     3b368 <nooks_ot_alloc_arraymem_user+0x1ee>
   3b243:	45 85 f6             	test   %r14d,%r14d
   3b246:	49 63 fe             	movslq %r14d,%rdi
   3b249:	49 63 cd             	movslq %r13d,%rcx
   3b24c:	74 0e                	je     3b25c <nooks_ot_alloc_arraymem_user+0xe2>
   3b24e:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   3b252:	31 d2                	xor    %edx,%edx
   3b254:	48 f7 f7             	div    %rdi
   3b257:	48 39 c1             	cmp    %rax,%rcx
   3b25a:	77 16                	ja     3b272 <nooks_ot_alloc_arraymem_user+0xf8>
   3b25c:	48 0f af f9          	imul   %rcx,%rdi
   3b260:	be d0 80 00 00       	mov    $0x80d0,%esi
   3b265:	e8 00 00 00 00       	callq  3b26a <nooks_ot_alloc_arraymem_user+0xf0>
			3b266: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   3b26a:	48 85 c0             	test   %rax,%rax
   3b26d:	49 89 c4             	mov    %rax,%r12
   3b270:	75 22                	jne    3b294 <nooks_ot_alloc_arraymem_user+0x11a>
   3b272:	44 89 f2             	mov    %r14d,%edx
   3b275:	44 89 ee             	mov    %r13d,%esi
   3b278:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b27b: R_X86_64_32S	.rodata.str1.1+0x3fcc
   3b27f:	31 c0                	xor    %eax,%eax
   3b281:	e8 00 00 00 00       	callq  3b286 <nooks_ot_alloc_arraymem_user+0x10c>
			3b282: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b286:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b289: R_X86_64_32S	.rodata.str1.1+0x3fb6
   3b28d:	31 c0                	xor    %eax,%eax
   3b28f:	e8 00 00 00 00       	callq  3b294 <nooks_ot_alloc_arraymem_user+0x11a>
			3b290: R_X86_64_PC32	panic+0xfffffffffffffffc
   3b294:	41 39 dd             	cmp    %ebx,%r13d
   3b297:	44 89 f1             	mov    %r14d,%ecx
   3b29a:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3b29e:	41 0f 4e dd          	cmovle %r13d,%ebx
   3b2a2:	4c 89 e7             	mov    %r12,%rdi
   3b2a5:	0f af cb             	imul   %ebx,%ecx
   3b2a8:	48 8d 5d c0          	lea    0xffffffffffffffc0(%rbp),%rbx
   3b2ac:	48 8b 30             	mov    (%rax),%rsi
   3b2af:	fc                   	cld    
   3b2b0:	48 63 c9             	movslq %ecx,%rcx
   3b2b3:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   3b2b5:	be 10 00 00 00       	mov    $0x10,%esi
   3b2ba:	bf 68 00 00 00       	mov    $0x68,%edi
   3b2bf:	48 8b 55 88          	mov    0xffffffffffffff88(%rbp),%rdx
   3b2c3:	48 8b 02             	mov    (%rdx),%rax
   3b2c6:	48 89 da             	mov    %rbx,%rdx
   3b2c9:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
   3b2d0:	00 
   3b2d1:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
   3b2d5:	e8 82 fc ff ff       	callq  3af5c <MJR_call_kern>
   3b2da:	48 89 da             	mov    %rbx,%rdx
   3b2dd:	be 10 00 00 00       	mov    $0x10,%esi
   3b2e2:	bf 66 00 00 00       	mov    $0x66,%edi
   3b2e7:	4c 8b 7d c8          	mov    0xffffffffffffffc8(%rbp),%r15
   3b2eb:	4c 89 65 c0          	mov    %r12,0xffffffffffffffc0(%rbp)
   3b2ef:	e8 68 fc ff ff       	callq  3af5c <MJR_call_kern>
   3b2f4:	83 7d 84 01          	cmpl   $0x1,0xffffffffffffff84(%rbp)
   3b2f8:	75 48                	jne    3b342 <nooks_ot_alloc_arraymem_user+0x1c8>
   3b2fa:	48 8b 4d 88          	mov    0xffffffffffffff88(%rbp),%rcx
   3b2fe:	4c 89 e2             	mov    %r12,%rdx
   3b301:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b304: R_X86_64_32S	.rodata.str1.1+0x4009
   3b308:	45 89 f1             	mov    %r14d,%r9d
   3b30b:	45 89 e8             	mov    %r13d,%r8d
   3b30e:	31 c0                	xor    %eax,%eax
   3b310:	48 8b 31             	mov    (%rcx),%rsi
   3b313:	4c 89 f9             	mov    %r15,%rcx
   3b316:	4c 89 65 a0          	mov    %r12,0xffffffffffffffa0(%rbp)
   3b31a:	4c 89 7d 98          	mov    %r15,0xffffffffffffff98(%rbp)
   3b31e:	44 89 6d a8          	mov    %r13d,0xffffffffffffffa8(%rbp)
   3b322:	44 89 75 ac          	mov    %r14d,0xffffffffffffffac(%rbp)
   3b326:	48 89 75 90          	mov    %rsi,0xffffffffffffff90(%rbp)
   3b32a:	e8 00 00 00 00       	callq  3b32f <nooks_ot_alloc_arraymem_user+0x1b5>
			3b32b: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b32f:	48 8d 55 90          	lea    0xffffffffffffff90(%rbp),%rdx
   3b333:	be 20 00 00 00       	mov    $0x20,%esi
   3b338:	bf 6d 00 00 00       	mov    $0x6d,%edi
   3b33d:	e8 1a fc ff ff       	callq  3af5c <MJR_call_kern>
   3b342:	44 89 ee             	mov    %r13d,%esi
   3b345:	4c 89 e7             	mov    %r12,%rdi
   3b348:	e8 00 00 00 00       	callq  3b34d <nooks_ot_alloc_arraymem_user+0x1d3>
			3b349: R_X86_64_PC32	nooks_ot_store_array_numelts_reverse+0xfffffffffffffffc
   3b34d:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
   3b351:	4c 89 e2             	mov    %r12,%rdx
   3b354:	4c 89 fe             	mov    %r15,%rsi
   3b357:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b35a: R_X86_64_32S	.rodata.str1.1+0x4074
   3b35e:	4c 89 20             	mov    %r12,(%rax)
   3b361:	31 c0                	xor    %eax,%eax
   3b363:	e8 00 00 00 00       	callq  3b368 <nooks_ot_alloc_arraymem_user+0x1ee>
			3b364: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b368:	48 83 c4 58          	add    $0x58,%rsp
   3b36c:	5b                   	pop    %rbx
   3b36d:	41 5c                	pop    %r12
   3b36f:	41 5d                	pop    %r13
   3b371:	41 5e                	pop    %r14
   3b373:	41 5f                	pop    %r15
   3b375:	c9                   	leaveq 
   3b376:	c3                   	retq   

000000000003b377 <nooks_ot_lookup_user>:
   3b377:	55                   	push   %rbp
   3b378:	48 8d 87 00 f0 ff ff 	lea    0xfffffffffffff000(%rdi),%rax
   3b37f:	48 89 e5             	mov    %rsp,%rbp
   3b382:	41 55                	push   %r13
   3b384:	49 89 f5             	mov    %rsi,%r13
   3b387:	41 54                	push   %r12
   3b389:	49 89 fc             	mov    %rdi,%r12
   3b38c:	53                   	push   %rbx
   3b38d:	89 d3                	mov    %edx,%ebx
   3b38f:	48 83 ec 18          	sub    $0x18,%rsp
   3b393:	48 3d 00 e0 ff ff    	cmp    $0xffffffffffffe000,%rax
   3b399:	77 0f                	ja     3b3aa <nooks_ot_lookup_user+0x33>
   3b39b:	48 b8 6b 6b 6b 6b 6b 	mov    $0x6b6b6b6b6b6b6b6b,%rax
   3b3a2:	6b 6b 6b 
   3b3a5:	48 39 c7             	cmp    %rax,%rdi
   3b3a8:	75 2a                	jne    3b3d4 <nooks_ot_lookup_user+0x5d>
   3b3aa:	4d 85 e4             	test   %r12,%r12
   3b3ad:	0f 84 0e 01 00 00    	je     3b4c1 <nooks_ot_lookup_user+0x14a>
   3b3b3:	49 8b 55 00          	mov    0x0(%r13),%rdx
   3b3b7:	4c 89 e1             	mov    %r12,%rcx
   3b3ba:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			3b3bd: R_X86_64_32S	.rodata
   3b3c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b3c4: R_X86_64_32S	.rodata.str1.1+0x40be
   3b3c8:	31 c0                	xor    %eax,%eax
   3b3ca:	e8 00 00 00 00       	callq  3b3cf <nooks_ot_lookup_user+0x58>
			3b3cb: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b3cf:	e9 ad 00 00 00       	jmpq   3b481 <nooks_ot_lookup_user+0x10a>
   3b3d4:	48 85 ff             	test   %rdi,%rdi
   3b3d7:	0f 84 e4 00 00 00    	je     3b4c1 <nooks_ot_lookup_user+0x14a>
   3b3dd:	48 8d 55 d0          	lea    0xffffffffffffffd0(%rbp),%rdx
   3b3e1:	48 89 7d d8          	mov    %rdi,0xffffffffffffffd8(%rbp)
   3b3e5:	be 10 00 00 00       	mov    $0x10,%esi
   3b3ea:	bf 65 00 00 00       	mov    $0x65,%edi
   3b3ef:	48 c7 45 d0 ff ff ff 	movq   $0xffffffffffffffff,0xffffffffffffffd0(%rbp)
   3b3f6:	ff 
   3b3f7:	e8 60 fb ff ff       	callq  3af5c <MJR_call_kern>
   3b3fc:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
   3b400:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   3b404:	0f 85 b1 00 00 00    	jne    3b4bb <nooks_ot_lookup_user+0x144>
   3b40a:	85 db                	test   %ebx,%ebx
   3b40c:	7f 23                	jg     3b431 <nooks_ot_lookup_user+0xba>
   3b40e:	49 8b 55 00          	mov    0x0(%r13),%rdx
   3b412:	89 d9                	mov    %ebx,%ecx
   3b414:	4c 89 e6             	mov    %r12,%rsi
   3b417:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b41a: R_X86_64_32S	.rodata.str1.1+0x40f2
   3b41e:	31 c0                	xor    %eax,%eax
   3b420:	bb 01 00 00 00       	mov    $0x1,%ebx
   3b425:	e8 00 00 00 00       	callq  3b42a <nooks_ot_lookup_user+0xb3>
			3b426: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b42a:	be 01 00 00 00       	mov    $0x1,%esi
   3b42f:	eb 15                	jmp    3b446 <nooks_ot_lookup_user+0xcf>
   3b431:	f6 c3 01             	test   $0x1,%bl
   3b434:	89 de                	mov    %ebx,%esi
   3b436:	75 0e                	jne    3b446 <nooks_ot_lookup_user+0xcf>
   3b438:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b43b: R_X86_64_32S	kmalloc_caches+0x5880
   3b43f:	e8 00 00 00 00       	callq  3b444 <nooks_ot_lookup_user+0xcd>
			3b440: R_X86_64_PC32	kmem_cache_alloc+0xfffffffffffffffc
   3b444:	eb 0a                	jmp    3b450 <nooks_ot_lookup_user+0xd9>
   3b446:	bf d0 00 00 00       	mov    $0xd0,%edi
   3b44b:	e8 00 00 00 00       	callq  3b450 <nooks_ot_lookup_user+0xd9>
			3b44c: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
   3b450:	48 85 c0             	test   %rax,%rax
   3b453:	48 89 c2             	mov    %rax,%rdx
   3b456:	49 89 45 00          	mov    %rax,0x0(%r13)
   3b45a:	75 33                	jne    3b48f <nooks_ot_lookup_user+0x118>
   3b45c:	89 de                	mov    %ebx,%esi
   3b45e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b461: R_X86_64_32S	.rodata.str1.1+0x413b
   3b465:	31 c0                	xor    %eax,%eax
   3b467:	e8 00 00 00 00       	callq  3b46c <nooks_ot_lookup_user+0xf5>
			3b468: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b46c:	49 8b 55 00          	mov    0x0(%r13),%rdx
   3b470:	4c 89 e6             	mov    %r12,%rsi
   3b473:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b476: R_X86_64_32S	.rodata.str1.1+0x416f
   3b47a:	31 c0                	xor    %eax,%eax
   3b47c:	e8 00 00 00 00       	callq  3b481 <nooks_ot_lookup_user+0x10a>
			3b47d: R_X86_64_PC32	printk+0xfffffffffffffffc
   3b481:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b484: R_X86_64_32S	.rodata.str1.1+0x3fb6
   3b488:	31 c0                	xor    %eax,%eax
   3b48a:	e8 00 00 00 00       	callq  3b48f <nooks_ot_lookup_user+0x118>
			3b48b: R_X86_64_PC32	panic+0xfffffffffffffffc
   3b48f:	fc                   	cld    
   3b490:	31 c0                	xor    %eax,%eax
   3b492:	48 63 cb             	movslq %ebx,%rcx
   3b495:	48 89 d7             	mov    %rdx,%rdi
   3b498:	f3 aa                	rep stos %al,%es:(%rdi)
   3b49a:	48 8d 55 d0          	lea    0xffffffffffffffd0(%rbp),%rdx
   3b49e:	be 10 00 00 00       	mov    $0x10,%esi
   3b4a3:	bf 66 00 00 00       	mov    $0x66,%edi
   3b4a8:	4c 89 65 d8          	mov    %r12,0xffffffffffffffd8(%rbp)
   3b4ac:	49 8b 45 00          	mov    0x0(%r13),%rax
   3b4b0:	48 89 45 d0          	mov    %rax,0xffffffffffffffd0(%rbp)
   3b4b4:	e8 a3 fa ff ff       	callq  3af5c <MJR_call_kern>
   3b4b9:	eb 0e                	jmp    3b4c9 <nooks_ot_lookup_user+0x152>
   3b4bb:	49 89 45 00          	mov    %rax,0x0(%r13)
   3b4bf:	eb 08                	jmp    3b4c9 <nooks_ot_lookup_user+0x152>
   3b4c1:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   3b4c8:	00 
   3b4c9:	48 83 c4 18          	add    $0x18,%rsp
   3b4cd:	5b                   	pop    %rbx
   3b4ce:	41 5c                	pop    %r12
   3b4d0:	41 5d                	pop    %r13
   3b4d2:	c9                   	leaveq 
   3b4d3:	c3                   	retq   

000000000003b4d4 <logStackFrame>:
   3b4d4:	55                   	push   %rbp
   3b4d5:	48 89 e5             	mov    %rsp,%rbp
   3b4d8:	c9                   	leaveq 
   3b4d9:	c3                   	retq   

000000000003b4da <logWrite>:
   3b4da:	55                   	push   %rbp
   3b4db:	48 89 e5             	mov    %rsp,%rbp
   3b4de:	c9                   	leaveq 
   3b4df:	c3                   	retq   

000000000003b4e0 <logRead>:
   3b4e0:	55                   	push   %rbp
   3b4e1:	48 89 e5             	mov    %rsp,%rbp
   3b4e4:	c9                   	leaveq 
   3b4e5:	c3                   	retq   
   3b4e6:	90                   	nop    
   3b4e7:	90                   	nop    
Disassembly of section .spinlock.text:

0000000000000000 <_spin_unlock>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 55                	push   %r13
   6:	49 89 fd             	mov    %rdi,%r13
   9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c: R_X86_64_32S	.rodata.str1.1+0xc1e
  10:	41 54                	push   %r12
  12:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
  16:	53                   	push   %rbx
  17:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
  1b:	48 83 ec 38          	sub    $0x38,%rsp
  1f:	e8 00 00 00 00       	callq  24 <_spin_unlock+0x24>
			20: R_X86_64_PC32	record_function+0xfffffffffffffffc
  24:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			27: R_X86_64_32S	.rodata.str1.1+0xc2b
  2b:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
  32:	00 
  33:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
  3a:	00 
  3b:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
  42:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
  46:	e8 00 00 00 00       	callq  4b <_spin_unlock+0x4b>
			47: R_X86_64_PC32	record_function+0xfffffffffffffffc
  4b:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
  4f:	4c 89 e2             	mov    %r12,%rdx
  52:	48 89 de             	mov    %rbx,%rsi
  55:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			58: R_X86_64_32S	.rodata.str1.1+0xc1e
  5c:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
  63:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
  6a:	00 
  6b:	e8 00 00 00 00       	callq  70 <_spin_unlock+0x70>
			6c: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
  70:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
  74:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
  78:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7b: R_X86_64_32S	.rodata.str1.1+0xc1e
  7f:	48 c7 45 b0 67 04 00 	movq   $0x467,0xffffffffffffffb0(%rbp)
  86:	00 
  87:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
  8b:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
  8e:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
  91:	e8 00 00 00 00       	callq  96 <_spin_unlock+0x96>
			92: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
  96:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			99: R_X86_64_32S	.rodata.str1.1+0xc46
  9d:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
  a1:	e8 00 00 00 00       	callq  a6 <_spin_unlock+0xa6>
			a2: R_X86_64_PC32	record_function+0xfffffffffffffffc
  a6:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
  aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ad: R_X86_64_32S	.rodata.str1.1+0xc1e
  b1:	41 b8 30 00 00 00    	mov    $0x30,%r8d
  b7:	48 89 d9             	mov    %rbx,%rcx
  ba:	4c 89 e2             	mov    %r12,%rdx
  bd:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
  c4:	e8 00 00 00 00       	callq  c9 <_spin_unlock+0xc9>
			c5: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
  c9:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
  cd:	48 85 ff             	test   %rdi,%rdi
  d0:	74 05                	je     d7 <_spin_unlock+0xd7>
  d2:	e8 00 00 00 00       	callq  d7 <_spin_unlock+0xd7>
			d3: R_X86_64_PC32	kfree+0xfffffffffffffffc
  d7:	48 83 c4 38          	add    $0x38,%rsp
  db:	5b                   	pop    %rbx
  dc:	41 5c                	pop    %r12
  de:	41 5d                	pop    %r13
  e0:	c9                   	leaveq 
  e1:	c3                   	retq   

00000000000000e2 <_spin_lock>:
  e2:	55                   	push   %rbp
  e3:	48 89 e5             	mov    %rsp,%rbp
  e6:	41 55                	push   %r13
  e8:	49 89 fd             	mov    %rdi,%r13
  eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ee: R_X86_64_32S	.rodata.str1.1+0xc61
  f2:	41 54                	push   %r12
  f4:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
  f8:	53                   	push   %rbx
  f9:	48 8d 5d c8          	lea    0xffffffffffffffc8(%rbp),%rbx
  fd:	48 83 ec 38          	sub    $0x38,%rsp
 101:	e8 00 00 00 00       	callq  106 <_spin_lock+0x24>
			102: R_X86_64_PC32	record_function+0xfffffffffffffffc
 106:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			109: R_X86_64_32S	.rodata.str1.1+0xc6c
 10d:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
 114:	00 
 115:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
 11c:	00 
 11d:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
 124:	4c 89 6d d0          	mov    %r13,0xffffffffffffffd0(%rbp)
 128:	e8 00 00 00 00       	callq  12d <_spin_lock+0x4b>
			129: R_X86_64_PC32	record_function+0xfffffffffffffffc
 12d:	48 8d 4d d0          	lea    0xffffffffffffffd0(%rbp),%rcx
 131:	4c 89 e2             	mov    %r12,%rdx
 134:	48 89 de             	mov    %rbx,%rsi
 137:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13a: R_X86_64_32S	.rodata.str1.1+0xc61
 13e:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
 145:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
 14c:	00 
 14d:	e8 00 00 00 00       	callq  152 <_spin_lock+0x70>
			14e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 152:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
 156:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
 15a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15d: R_X86_64_32S	.rodata.str1.1+0xc61
 161:	48 c7 45 b0 64 04 00 	movq   $0x464,0xffffffffffffffb0(%rbp)
 168:	00 
 169:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
 16d:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
 170:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
 173:	e8 00 00 00 00       	callq  178 <_spin_lock+0x96>
			174: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
 178:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17b: R_X86_64_32S	.rodata.str1.1+0xc85
 17f:	4c 89 6d c8          	mov    %r13,0xffffffffffffffc8(%rbp)
 183:	e8 00 00 00 00       	callq  188 <_spin_lock+0xa6>
			184: R_X86_64_PC32	record_function+0xfffffffffffffffc
 188:	48 8b 75 c0          	mov    0xffffffffffffffc0(%rbp),%rsi
 18c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			18f: R_X86_64_32S	.rodata.str1.1+0xc61
 193:	41 b8 30 00 00 00    	mov    $0x30,%r8d
 199:	48 89 d9             	mov    %rbx,%rcx
 19c:	4c 89 e2             	mov    %r12,%rdx
 19f:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
 1a6:	e8 00 00 00 00       	callq  1ab <_spin_lock+0xc9>
			1a7: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 1ab:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
 1af:	48 85 ff             	test   %rdi,%rdi
 1b2:	74 05                	je     1b9 <_spin_lock+0xd7>
 1b4:	e8 00 00 00 00       	callq  1b9 <_spin_lock+0xd7>
			1b5: R_X86_64_PC32	kfree+0xfffffffffffffffc
 1b9:	48 83 c4 38          	add    $0x38,%rsp
 1bd:	5b                   	pop    %rbx
 1be:	41 5c                	pop    %r12
 1c0:	41 5d                	pop    %r13
 1c2:	c9                   	leaveq 
 1c3:	c3                   	retq   

00000000000001c4 <_spin_lock_irqsave>:
 1c4:	55                   	push   %rbp
 1c5:	48 89 e5             	mov    %rsp,%rbp
 1c8:	41 56                	push   %r14
 1ca:	4c 8d 75 c8          	lea    0xffffffffffffffc8(%rbp),%r14
 1ce:	41 55                	push   %r13
 1d0:	4c 8d 6d d0          	lea    0xffffffffffffffd0(%rbp),%r13
 1d4:	41 54                	push   %r12
 1d6:	4c 8d 65 dc          	lea    0xffffffffffffffdc(%rbp),%r12
 1da:	53                   	push   %rbx
 1db:	48 89 fb             	mov    %rdi,%rbx
 1de:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e1: R_X86_64_32S	.rodata.str1.1+0xdd3
 1e5:	48 83 ec 30          	sub    $0x30,%rsp
 1e9:	e8 00 00 00 00       	callq  1ee <_spin_lock_irqsave+0x2a>
			1ea: R_X86_64_PC32	record_function+0xfffffffffffffffc
 1ee:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f1: R_X86_64_32S	.rodata.str1.1+0xde6
 1f5:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
 1f9:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
 200:	00 
 201:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
 208:	00 
 209:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
 210:	e8 00 00 00 00       	callq  215 <_spin_lock_irqsave+0x51>
			211: R_X86_64_PC32	record_function+0xfffffffffffffffc
 215:	4c 89 f1             	mov    %r14,%rcx
 218:	4c 89 e2             	mov    %r12,%rdx
 21b:	4c 89 ee             	mov    %r13,%rsi
 21e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			221: R_X86_64_32S	.rodata.str1.1+0xdd3
 225:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
 22c:	48 c7 45 d0 00 00 00 	movq   $0x0,0xffffffffffffffd0(%rbp)
 233:	00 
 234:	e8 00 00 00 00       	callq  239 <_spin_lock_irqsave+0x75>
			235: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 239:	48 8b 45 d0          	mov    0xffffffffffffffd0(%rbp),%rax
 23d:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
 241:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244: R_X86_64_32S	.rodata.str1.1+0xdd3
 248:	48 c7 45 b0 65 04 00 	movq   $0x465,0xffffffffffffffb0(%rbp)
 24f:	00 
 250:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
 254:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
 257:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
 25a:	e8 00 00 00 00       	callq  25f <_spin_lock_irqsave+0x9b>
			25b: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
 25f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			262: R_X86_64_32S	.rodata.str1.1+0xe07
 266:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
 26a:	e8 00 00 00 00       	callq  26f <_spin_lock_irqsave+0xab>
			26b: R_X86_64_PC32	record_function+0xfffffffffffffffc
 26f:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
 273:	41 b8 30 00 00 00    	mov    $0x30,%r8d
 279:	4c 89 e9             	mov    %r13,%rcx
 27c:	4c 89 e2             	mov    %r12,%rdx
 27f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			282: R_X86_64_32S	.rodata.str1.1+0xdd3
 286:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
 28d:	48 89 de             	mov    %rbx,%rsi
 290:	e8 00 00 00 00       	callq  295 <_spin_lock_irqsave+0xd1>
			291: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 295:	48 89 de             	mov    %rbx,%rsi
 298:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			29b: R_X86_64_32S	.rodata.str1.1+0xdd3
 29f:	4d 89 f0             	mov    %r14,%r8
 2a2:	b9 08 00 00 00       	mov    $0x8,%ecx
 2a7:	4c 89 e2             	mov    %r12,%rdx
 2aa:	e8 00 00 00 00       	callq  2af <_spin_lock_irqsave+0xeb>
			2ab: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 2af:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
 2b3:	48 8b 5d c8          	mov    0xffffffffffffffc8(%rbp),%rbx
 2b7:	48 85 ff             	test   %rdi,%rdi
 2ba:	74 05                	je     2c1 <_spin_lock_irqsave+0xfd>
 2bc:	e8 00 00 00 00       	callq  2c1 <_spin_lock_irqsave+0xfd>
			2bd: R_X86_64_PC32	kfree+0xfffffffffffffffc
 2c1:	48 83 c4 30          	add    $0x30,%rsp
 2c5:	48 89 d8             	mov    %rbx,%rax
 2c8:	5b                   	pop    %rbx
 2c9:	41 5c                	pop    %r12
 2cb:	41 5d                	pop    %r13
 2cd:	41 5e                	pop    %r14
 2cf:	c9                   	leaveq 
 2d0:	c3                   	retq   

00000000000002d1 <_spin_trylock>:
 2d1:	55                   	push   %rbp
 2d2:	48 89 e5             	mov    %rsp,%rbp
 2d5:	41 56                	push   %r14
 2d7:	4c 8d 75 dc          	lea    0xffffffffffffffdc(%rbp),%r14
 2db:	41 55                	push   %r13
 2dd:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
 2e1:	41 54                	push   %r12
 2e3:	4c 8d 65 d0          	lea    0xffffffffffffffd0(%rbp),%r12
 2e7:	53                   	push   %rbx
 2e8:	48 89 fb             	mov    %rdi,%rbx
 2eb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ee: R_X86_64_32S	.rodata.str1.1+0xe28
 2f2:	48 83 ec 30          	sub    $0x30,%rsp
 2f6:	e8 00 00 00 00       	callq  2fb <_spin_trylock+0x2a>
			2f7: R_X86_64_PC32	record_function+0xfffffffffffffffc
 2fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2fe: R_X86_64_32S	.rodata.str1.1+0xe36
 302:	48 89 5d d0          	mov    %rbx,0xffffffffffffffd0(%rbp)
 306:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
 30d:	00 
 30e:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
 315:	00 
 316:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
 31d:	e8 00 00 00 00       	callq  322 <_spin_trylock+0x51>
			31e: R_X86_64_PC32	record_function+0xfffffffffffffffc
 322:	4c 89 e1             	mov    %r12,%rcx
 325:	4c 89 f2             	mov    %r14,%rdx
 328:	4c 89 ee             	mov    %r13,%rsi
 32b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			32e: R_X86_64_32S	.rodata.str1.1+0xe28
 332:	c7 45 dc 00 00 00 00 	movl   $0x0,0xffffffffffffffdc(%rbp)
 339:	48 c7 45 c8 00 00 00 	movq   $0x0,0xffffffffffffffc8(%rbp)
 340:	00 
 341:	e8 00 00 00 00       	callq  346 <_spin_trylock+0x75>
			342: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 346:	48 8b 45 c8          	mov    0xffffffffffffffc8(%rbp),%rax
 34a:	48 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%rsi
 34e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			351: R_X86_64_32S	.rodata.str1.1+0xe28
 355:	48 c7 45 b0 66 04 00 	movq   $0x466,0xffffffffffffffb0(%rbp)
 35c:	00 
 35d:	48 89 45 c0          	mov    %rax,0xffffffffffffffc0(%rbp)
 361:	8b 45 dc             	mov    0xffffffffffffffdc(%rbp),%eax
 364:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
 367:	e8 00 00 00 00       	callq  36c <_spin_trylock+0x9b>
			368: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
 36c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			36f: R_X86_64_32S	.rodata.str1.1+0xe52
 373:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
 377:	e8 00 00 00 00       	callq  37c <_spin_trylock+0xab>
			378: R_X86_64_PC32	record_function+0xfffffffffffffffc
 37c:	48 8b 5d c0          	mov    0xffffffffffffffc0(%rbp),%rbx
 380:	41 b8 30 00 00 00    	mov    $0x30,%r8d
 386:	4c 89 e9             	mov    %r13,%rcx
 389:	4c 89 e2             	mov    %r12,%rdx
 38c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			38f: R_X86_64_32S	.rodata.str1.1+0xe28
 393:	c7 45 d0 00 00 00 00 	movl   $0x0,0xffffffffffffffd0(%rbp)
 39a:	48 89 de             	mov    %rbx,%rsi
 39d:	e8 00 00 00 00       	callq  3a2 <_spin_trylock+0xd1>
			39e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 3a2:	48 89 de             	mov    %rbx,%rsi
 3a5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3a8: R_X86_64_32S	.rodata.str1.1+0xe28
 3ac:	4d 89 f0             	mov    %r14,%r8
 3af:	b9 04 00 00 00       	mov    $0x4,%ecx
 3b4:	4c 89 e2             	mov    %r12,%rdx
 3b7:	e8 00 00 00 00       	callq  3bc <_spin_trylock+0xeb>
			3b8: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 3bc:	48 8b 7d c0          	mov    0xffffffffffffffc0(%rbp),%rdi
 3c0:	8b 5d dc             	mov    0xffffffffffffffdc(%rbp),%ebx
 3c3:	48 85 ff             	test   %rdi,%rdi
 3c6:	74 05                	je     3cd <_spin_trylock+0xfc>
 3c8:	e8 00 00 00 00       	callq  3cd <_spin_trylock+0xfc>
			3c9: R_X86_64_PC32	kfree+0xfffffffffffffffc
 3cd:	48 83 c4 30          	add    $0x30,%rsp
 3d1:	89 d8                	mov    %ebx,%eax
 3d3:	5b                   	pop    %rbx
 3d4:	41 5c                	pop    %r12
 3d6:	41 5d                	pop    %r13
 3d8:	41 5e                	pop    %r14
 3da:	c9                   	leaveq 
 3db:	c3                   	retq   

00000000000003dc <_spin_unlock_irqrestore>:
 3dc:	55                   	push   %rbp
 3dd:	48 89 e5             	mov    %rsp,%rbp
 3e0:	41 57                	push   %r15
 3e2:	49 89 f7             	mov    %rsi,%r15
 3e5:	41 56                	push   %r14
 3e7:	4c 8d 75 b0          	lea    0xffffffffffffffb0(%rbp),%r14
 3eb:	41 55                	push   %r13
 3ed:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
 3f1:	41 54                	push   %r12
 3f3:	4c 8d 65 cc          	lea    0xffffffffffffffcc(%rbp),%r12
 3f7:	53                   	push   %rbx
 3f8:	48 89 fb             	mov    %rdi,%rbx
 3fb:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3fe: R_X86_64_32S	.rodata.str1.1+0x1a51
 402:	48 83 ec 48          	sub    $0x48,%rsp
 406:	e8 00 00 00 00       	callq  40b <_spin_unlock_irqrestore+0x2f>
			407: R_X86_64_PC32	record_function+0xfffffffffffffffc
 40b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			40e: R_X86_64_32S	.rodata.str1.1+0x1a69
 412:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
 416:	48 c7 45 90 00 00 00 	movq   $0x0,0xffffffffffffff90(%rbp)
 41d:	00 
 41e:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
 425:	00 
 426:	c7 45 98 00 00 00 00 	movl   $0x0,0xffffffffffffff98(%rbp)
 42d:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
 431:	e8 00 00 00 00       	callq  436 <_spin_unlock_irqrestore+0x5a>
			432: R_X86_64_PC32	record_function+0xfffffffffffffffc
 436:	4c 89 f1             	mov    %r14,%rcx
 439:	4c 89 e2             	mov    %r12,%rdx
 43c:	4c 89 ee             	mov    %r13,%rsi
 43f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			442: R_X86_64_32S	.rodata.str1.1+0x1a51
 446:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
 44d:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
 454:	00 
 455:	e8 00 00 00 00       	callq  45a <_spin_unlock_irqrestore+0x7e>
			456: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 45a:	48 8d 4d c0          	lea    0xffffffffffffffc0(%rbp),%rcx
 45e:	41 b8 08 00 00 00    	mov    $0x8,%r8d
 464:	4c 89 e2             	mov    %r12,%rdx
 467:	4c 89 ee             	mov    %r13,%rsi
 46a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			46d: R_X86_64_32S	.rodata.str1.1+0x1a51
 471:	e8 00 00 00 00       	callq  476 <_spin_unlock_irqrestore+0x9a>
			472: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
 476:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
 47a:	48 8d 75 90          	lea    0xffffffffffffff90(%rbp),%rsi
 47e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			481: R_X86_64_32S	.rodata.str1.1+0x1a51
 485:	48 c7 45 90 68 04 00 	movq   $0x468,0xffffffffffffff90(%rbp)
 48c:	00 
 48d:	48 89 45 a0          	mov    %rax,0xffffffffffffffa0(%rbp)
 491:	8b 45 cc             	mov    0xffffffffffffffcc(%rbp),%eax
 494:	89 45 98             	mov    %eax,0xffffffffffffff98(%rbp)
 497:	e8 00 00 00 00       	callq  49c <_spin_unlock_irqrestore+0xc0>
			498: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
 49c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			49f: R_X86_64_32S	.rodata.str1.1+0x1a8f
 4a3:	48 89 5d b0          	mov    %rbx,0xffffffffffffffb0(%rbp)
 4a7:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
 4ab:	e8 00 00 00 00       	callq  4b0 <_spin_unlock_irqrestore+0xd4>
			4ac: R_X86_64_PC32	record_function+0xfffffffffffffffc
 4b0:	48 8b 5d a0          	mov    0xffffffffffffffa0(%rbp),%rbx
 4b4:	41 b8 30 00 00 00    	mov    $0x30,%r8d
 4ba:	4c 89 f1             	mov    %r14,%rcx
 4bd:	4c 89 e2             	mov    %r12,%rdx
 4c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4c3: R_X86_64_32S	.rodata.str1.1+0x1a51
 4c7:	c7 45 cc 00 00 00 00 	movl   $0x0,0xffffffffffffffcc(%rbp)
 4ce:	48 89 de             	mov    %rbx,%rsi
 4d1:	e8 00 00 00 00       	callq  4d6 <_spin_unlock_irqrestore+0xfa>
			4d2: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 4d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4d9: R_X86_64_32S	.rodata.str1.1+0x1a51
 4dd:	4d 89 e8             	mov    %r13,%r8
 4e0:	b9 08 00 00 00       	mov    $0x8,%ecx
 4e5:	4c 89 e2             	mov    %r12,%rdx
 4e8:	48 89 de             	mov    %rbx,%rsi
 4eb:	e8 00 00 00 00       	callq  4f0 <_spin_unlock_irqrestore+0x114>
			4ec: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 4f0:	48 8b 7d a0          	mov    0xffffffffffffffa0(%rbp),%rdi
 4f4:	48 85 ff             	test   %rdi,%rdi
 4f7:	74 05                	je     4fe <_spin_unlock_irqrestore+0x122>
 4f9:	e8 00 00 00 00       	callq  4fe <_spin_unlock_irqrestore+0x122>
			4fa: R_X86_64_PC32	kfree+0xfffffffffffffffc
 4fe:	48 83 c4 48          	add    $0x48,%rsp
 502:	5b                   	pop    %rbx
 503:	41 5c                	pop    %r12
 505:	41 5d                	pop    %r13
 507:	41 5e                	pop    %r14
 509:	41 5f                	pop    %r15
 50b:	c9                   	leaveq 
 50c:	c3                   	retq   
Disassembly of section .devinit.text:

0000000000000000 <e1000_validate_option>:
       0:	55                   	push   %rbp
       1:	48 89 e5             	mov    %rsp,%rbp
       4:	41 55                	push   %r13
       6:	49 89 fd             	mov    %rdi,%r13
       9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c: R_X86_64_32S	.rodata.str1.1+0xec0
      10:	41 54                	push   %r12
      12:	49 89 d4             	mov    %rdx,%r12
      15:	53                   	push   %rbx
      16:	48 89 f3             	mov    %rsi,%rbx
      19:	48 83 ec 08          	sub    $0x8,%rsp
      1d:	e8 00 00 00 00       	callq  22 <e1000_validate_option+0x22>
			1e: R_X86_64_PC32	record_function+0xfffffffffffffffc
      22:	41 8b 55 00          	mov    0x0(%r13),%edx
      26:	83 fa ff             	cmp    $0xffffffffffffffff,%edx
      29:	75 0c                	jne    37 <e1000_validate_option+0x37>
      2b:	8b 43 18             	mov    0x18(%rbx),%eax
      2e:	41 89 45 00          	mov    %eax,0x0(%r13)
      32:	e9 5f 01 00 00       	jmpq   196 <e1000_validate_option+0x196>
      37:	8b 03                	mov    (%rbx),%eax
      39:	85 c0                	test   %eax,%eax
      3b:	74 13                	je     50 <e1000_validate_option+0x50>
      3d:	83 f8 01             	cmp    $0x1,%eax
      40:	74 78                	je     ba <e1000_validate_option+0xba>
      42:	83 f8 02             	cmp    $0x2,%eax
      45:	0f 85 08 01 00 00    	jne    153 <e1000_validate_option+0x153>
      4b:	e9 b4 00 00 00       	jmpq   104 <e1000_validate_option+0x104>
      50:	83 fa 01             	cmp    $0x1,%edx
      53:	74 09                	je     5e <e1000_validate_option+0x5e>
      55:	85 d2                	test   %edx,%edx
      57:	74 33                	je     8c <e1000_validate_option+0x8c>
      59:	e9 f9 00 00 00       	jmpq   157 <e1000_validate_option+0x157>
      5e:	41 f6 84 24 c0 07 00 	testb  $0x2,0x7c0(%r12)
      65:	00 02 
      67:	0f 84 29 01 00 00    	je     196 <e1000_validate_option+0x196>
      6d:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
      71:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
      78:	00 
      79:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			7c: R_X86_64_32S	str_940157451
      80:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			83: R_X86_64_32S	str_381179709
      87:	e9 ba 00 00 00       	jmpq   146 <e1000_validate_option+0x146>
      8c:	41 f6 84 24 c0 07 00 	testb  $0x2,0x7c0(%r12)
      93:	00 02 
      95:	0f 84 fb 00 00 00    	je     196 <e1000_validate_option+0x196>
      9b:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
      9f:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
      a6:	00 
      a7:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			aa: R_X86_64_32S	str_940157451
      ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b1: R_X86_64_32S	str_591233090
      b5:	e9 8c 00 00 00       	jmpq   146 <e1000_validate_option+0x146>
      ba:	3b 53 20             	cmp    0x20(%rbx),%edx
      bd:	0f 82 94 00 00 00    	jb     157 <e1000_validate_option+0x157>
      c3:	3b 53 24             	cmp    0x24(%rbx),%edx
      c6:	0f 87 8b 00 00 00    	ja     157 <e1000_validate_option+0x157>
      cc:	41 f6 84 24 c0 07 00 	testb  $0x2,0x7c0(%r12)
      d3:	00 02 
      d5:	0f 84 bb 00 00 00    	je     196 <e1000_validate_option+0x196>
      db:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
      df:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
      e6:	00 
      e7:	41 89 d0             	mov    %edx,%r8d
      ea:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ed: R_X86_64_32S	str_1027606323
      f1:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			f4: R_X86_64_32S	str_940157451
      f8:	31 c0                	xor    %eax,%eax
      fa:	e8 00 00 00 00       	callq  ff <e1000_validate_option+0xff>
			fb: R_X86_64_PC32	printk+0xfffffffffffffffc
      ff:	e9 92 00 00 00       	jmpq   196 <e1000_validate_option+0x196>
     104:	8b 73 20             	mov    0x20(%rbx),%esi
     107:	31 c9                	xor    %ecx,%ecx
     109:	39 f1                	cmp    %esi,%ecx
     10b:	7d 4a                	jge    157 <e1000_validate_option+0x157>
     10d:	48 63 c1             	movslq %ecx,%rax
     110:	48 c1 e0 04          	shl    $0x4,%rax
     114:	48 03 43 28          	add    0x28(%rbx),%rax
     118:	3b 10                	cmp    (%rax),%edx
     11a:	75 33                	jne    14f <e1000_validate_option+0x14f>
     11c:	48 8b 48 08          	mov    0x8(%rax),%rcx
     120:	80 39 00             	cmpb   $0x0,(%rcx)
     123:	74 71                	je     196 <e1000_validate_option+0x196>
     125:	41 f6 84 24 c0 07 00 	testb  $0x2,0x7c0(%r12)
     12c:	00 02 
     12e:	74 66                	je     196 <e1000_validate_option+0x196>
     130:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
     137:	00 
     138:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			13b: R_X86_64_32S	str_940157451
     13f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			142: R_X86_64_32S	str_777106966
     146:	31 c0                	xor    %eax,%eax
     148:	e8 00 00 00 00       	callq  14d <e1000_validate_option+0x14d>
			149: R_X86_64_PC32	printk+0xfffffffffffffffc
     14d:	eb 47                	jmp    196 <e1000_validate_option+0x196>
     14f:	ff c1                	inc    %ecx
     151:	eb b6                	jmp    109 <e1000_validate_option+0x109>
     153:	0f 0b                	ud2a   
     155:	eb fe                	jmp    155 <e1000_validate_option+0x155>
     157:	41 f6 84 24 c0 07 00 	testb  $0x2,0x7c0(%r12)
     15e:	00 02 
     160:	74 28                	je     18a <e1000_validate_option+0x18a>
     162:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
     166:	49 8b b4 24 f0 02 00 	mov    0x2f0(%r12),%rsi
     16d:	00 
     16e:	41 89 d0             	mov    %edx,%r8d
     171:	4c 8b 4b 10          	mov    0x10(%rbx),%r9
     175:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			178: R_X86_64_32S	str_940157451
     17c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17f: R_X86_64_32S	str_977765343
     183:	31 c0                	xor    %eax,%eax
     185:	e8 00 00 00 00       	callq  18a <e1000_validate_option+0x18a>
			186: R_X86_64_PC32	printk+0xfffffffffffffffc
     18a:	8b 43 18             	mov    0x18(%rbx),%eax
     18d:	41 89 45 00          	mov    %eax,0x0(%r13)
     191:	83 c8 ff             	or     $0xffffffffffffffff,%eax
     194:	eb 02                	jmp    198 <e1000_validate_option+0x198>
     196:	31 c0                	xor    %eax,%eax
     198:	5e                   	pop    %rsi
     199:	5b                   	pop    %rbx
     19a:	41 5c                	pop    %r12
     19c:	41 5d                	pop    %r13
     19e:	c9                   	leaveq 
     19f:	c3                   	retq   

00000000000001a0 <e1000_sw_init>:
     1a0:	55                   	push   %rbp
     1a1:	48 89 e5             	mov    %rsp,%rbp
     1a4:	41 57                	push   %r15
     1a6:	49 89 ff             	mov    %rdi,%r15
     1a9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ac: R_X86_64_32S	.rodata.str1.1+0x2a8b
     1b0:	41 56                	push   %r14
     1b2:	4d 8d b7 b8 03 00 00 	lea    0x3b8(%r15),%r14
     1b9:	41 55                	push   %r13
     1bb:	41 54                	push   %r12
     1bd:	4d 8d a7 8c 04 00 00 	lea    0x48c(%r15),%r12
     1c4:	53                   	push   %rbx
     1c5:	48 83 ec 08          	sub    $0x8,%rsp
     1c9:	e8 00 00 00 00       	callq  1ce <e1000_sw_init+0x2e>
			1ca: R_X86_64_PC32	record_function+0xfffffffffffffffc
     1ce:	49 8b 9f f8 02 00 00 	mov    0x2f8(%r15),%rbx
     1d5:	4d 8b af f0 02 00 00 	mov    0x2f0(%r15),%r13
     1dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1df: R_X86_64_32S	.rodata.str1.1+0x1cd4
     1e3:	8b 43 3c             	mov    0x3c(%rbx),%eax
     1e6:	66 41 89 86 e8 00 00 	mov    %ax,0xe8(%r14)
     1ed:	00 
     1ee:	66 8b 43 3e          	mov    0x3e(%rbx),%ax
     1f2:	66 41 89 86 e6 00 00 	mov    %ax,0xe6(%r14)
     1f9:	00 
     1fa:	8b 43 40             	mov    0x40(%rbx),%eax
     1fd:	66 41 89 86 ec 00 00 	mov    %ax,0xec(%r14)
     204:	00 
     205:	66 8b 43 42          	mov    0x42(%rbx),%ax
     209:	66 41 89 86 ea 00 00 	mov    %ax,0xea(%r14)
     210:	00 
     211:	8a 43 48             	mov    0x48(%rbx),%al
     214:	41 88 86 ee 00 00 00 	mov    %al,0xee(%r14)
     21b:	e8 00 00 00 00       	callq  220 <e1000_sw_init+0x80>
			21c: R_X86_64_PC32	record_function+0xfffffffffffffffc
     220:	8b 73 38             	mov    0x38(%rbx),%esi
     223:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
     227:	4c 89 e1             	mov    %r12,%rcx
     22a:	ba 04 00 00 00       	mov    $0x4,%edx
     22f:	e8 00 00 00 00       	callq  234 <e1000_sw_init+0x94>
			230: R_X86_64_PC32	.text+0x83a4
     234:	41 c7 87 a0 00 00 00 	movl   $0x5f2,0xa0(%r15)
     23b:	f2 05 00 00 
     23f:	41 8b 85 6c 01 00 00 	mov    0x16c(%r13),%eax
     246:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			249: R_X86_64_32S	.rodata.str1.1+0x2a99
     24d:	41 c7 86 9c 00 00 00 	movl   $0x40,0x9c(%r14)
     254:	40 00 00 00 
     258:	83 c0 12             	add    $0x12,%eax
     25b:	41 89 86 98 00 00 00 	mov    %eax,0x98(%r14)
     262:	e8 00 00 00 00       	callq  267 <e1000_sw_init+0xc7>
			263: R_X86_64_PC32	record_function+0xfffffffffffffffc
     267:	66 41 8b 86 e6 00 00 	mov    0xe6(%r14),%ax
     26e:	00 
     26f:	66 3d 00 10          	cmp    $0x1000,%ax
     273:	0f 84 71 02 00 00    	je     4ea <e1000_sw_init+0x34a>
     279:	66 3d 01 10          	cmp    $0x1001,%ax
     27d:	0f 84 96 02 00 00    	je     519 <e1000_sw_init+0x379>
     283:	66 3d 04 10          	cmp    $0x1004,%ax
     287:	0f 84 8c 02 00 00    	je     519 <e1000_sw_init+0x379>
     28d:	66 3d 08 10          	cmp    $0x1008,%ax
     291:	0f 84 8f 02 00 00    	je     526 <e1000_sw_init+0x386>
     297:	66 3d 09 10          	cmp    $0x1009,%ax
     29b:	0f 84 85 02 00 00    	je     526 <e1000_sw_init+0x386>
     2a1:	66 3d 0c 10          	cmp    $0x100c,%ax
     2a5:	0f 84 7b 02 00 00    	je     526 <e1000_sw_init+0x386>
     2ab:	66 3d 0d 10          	cmp    $0x100d,%ax
     2af:	0f 84 71 02 00 00    	je     526 <e1000_sw_init+0x386>
     2b5:	66 3d 0e 10          	cmp    $0x100e,%ax
     2b9:	0f 84 74 02 00 00    	je     533 <e1000_sw_init+0x393>
     2bf:	66 3d 15 10          	cmp    $0x1015,%ax
     2c3:	0f 84 6a 02 00 00    	je     533 <e1000_sw_init+0x393>
     2c9:	66 3d 17 10          	cmp    $0x1017,%ax
     2cd:	0f 84 60 02 00 00    	je     533 <e1000_sw_init+0x393>
     2d3:	66 3d 16 10          	cmp    $0x1016,%ax
     2d7:	0f 84 56 02 00 00    	je     533 <e1000_sw_init+0x393>
     2dd:	66 3d 1e 10          	cmp    $0x101e,%ax
     2e1:	0f 84 4c 02 00 00    	je     533 <e1000_sw_init+0x393>
     2e7:	66 3d 0f 10          	cmp    $0x100f,%ax
     2eb:	0f 84 4f 02 00 00    	je     540 <e1000_sw_init+0x3a0>
     2f1:	66 3d 11 10          	cmp    $0x1011,%ax
     2f5:	0f 84 45 02 00 00    	je     540 <e1000_sw_init+0x3a0>
     2fb:	66 3d 26 10          	cmp    $0x1026,%ax
     2ff:	0f 84 45 02 00 00    	je     54a <e1000_sw_init+0x3aa>
     305:	66 3d 27 10          	cmp    $0x1027,%ax
     309:	0f 84 3b 02 00 00    	je     54a <e1000_sw_init+0x3aa>
     30f:	66 3d 28 10          	cmp    $0x1028,%ax
     313:	0f 84 31 02 00 00    	je     54a <e1000_sw_init+0x3aa>
     319:	66 3d 10 10          	cmp    $0x1010,%ax
     31d:	0f 84 31 02 00 00    	je     554 <e1000_sw_init+0x3b4>
     323:	66 3d 12 10          	cmp    $0x1012,%ax
     327:	0f 84 27 02 00 00    	je     554 <e1000_sw_init+0x3b4>
     32d:	66 3d 1d 10          	cmp    $0x101d,%ax
     331:	0f 84 1d 02 00 00    	je     554 <e1000_sw_init+0x3b4>
     337:	66 3d 79 10          	cmp    $0x1079,%ax
     33b:	0f 84 1d 02 00 00    	je     55e <e1000_sw_init+0x3be>
     341:	66 3d 7a 10          	cmp    $0x107a,%ax
     345:	0f 84 13 02 00 00    	je     55e <e1000_sw_init+0x3be>
     34b:	66 3d 7b 10          	cmp    $0x107b,%ax
     34f:	0f 84 09 02 00 00    	je     55e <e1000_sw_init+0x3be>
     355:	66 3d 8a 10          	cmp    $0x108a,%ax
     359:	0f 84 ff 01 00 00    	je     55e <e1000_sw_init+0x3be>
     35f:	66 3d 99 10          	cmp    $0x1099,%ax
     363:	0f 84 f5 01 00 00    	je     55e <e1000_sw_init+0x3be>
     369:	66 3d b5 10          	cmp    $0x10b5,%ax
     36d:	0f 84 eb 01 00 00    	je     55e <e1000_sw_init+0x3be>
     373:	66 3d 13 10          	cmp    $0x1013,%ax
     377:	0f 84 eb 01 00 00    	je     568 <e1000_sw_init+0x3c8>
     37d:	66 3d 18 10          	cmp    $0x1018,%ax
     381:	0f 84 e1 01 00 00    	je     568 <e1000_sw_init+0x3c8>
     387:	66 3d 14 10          	cmp    $0x1014,%ax
     38b:	0f 84 d7 01 00 00    	je     568 <e1000_sw_init+0x3c8>
     391:	66 3d 78 10          	cmp    $0x1078,%ax
     395:	0f 84 d7 01 00 00    	je     572 <e1000_sw_init+0x3d2>
     39b:	66 3d 76 10          	cmp    $0x1076,%ax
     39f:	0f 84 cd 01 00 00    	je     572 <e1000_sw_init+0x3d2>
     3a5:	66 3d 7c 10          	cmp    $0x107c,%ax
     3a9:	0f 84 c3 01 00 00    	je     572 <e1000_sw_init+0x3d2>
     3af:	66 3d 77 10          	cmp    $0x1077,%ax
     3b3:	0f 84 b9 01 00 00    	je     572 <e1000_sw_init+0x3d2>
     3b9:	66 3d 19 10          	cmp    $0x1019,%ax
     3bd:	0f 84 b9 01 00 00    	je     57c <e1000_sw_init+0x3dc>
     3c3:	66 3d 1a 10          	cmp    $0x101a,%ax
     3c7:	0f 84 af 01 00 00    	je     57c <e1000_sw_init+0x3dc>
     3cd:	66 3d 75 10          	cmp    $0x1075,%ax
     3d1:	0f 84 af 01 00 00    	je     586 <e1000_sw_init+0x3e6>
     3d7:	66 3d 5e 10          	cmp    $0x105e,%ax
     3db:	0f 84 af 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     3e1:	66 3d 5f 10          	cmp    $0x105f,%ax
     3e5:	0f 84 a5 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     3eb:	66 3d 60 10          	cmp    $0x1060,%ax
     3ef:	0f 84 9b 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     3f5:	66 3d d9 10          	cmp    $0x10d9,%ax
     3f9:	0f 84 91 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     3ff:	66 3d da 10          	cmp    $0x10da,%ax
     403:	0f 84 87 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     409:	66 3d a4 10          	cmp    $0x10a4,%ax
     40d:	0f 84 7d 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     413:	66 3d d5 10          	cmp    $0x10d5,%ax
     417:	0f 84 73 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     41d:	66 3d a5 10          	cmp    $0x10a5,%ax
     421:	0f 84 69 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     427:	66 3d bc 10          	cmp    $0x10bc,%ax
     42b:	0f 84 5f 01 00 00    	je     590 <e1000_sw_init+0x3f0>
     431:	66 3d 7d 10          	cmp    $0x107d,%ax
     435:	0f 84 5f 01 00 00    	je     59a <e1000_sw_init+0x3fa>
     43b:	66 3d 7e 10          	cmp    $0x107e,%ax
     43f:	0f 84 55 01 00 00    	je     59a <e1000_sw_init+0x3fa>
     445:	66 3d 7f 10          	cmp    $0x107f,%ax
     449:	0f 84 4b 01 00 00    	je     59a <e1000_sw_init+0x3fa>
     44f:	66 3d b9 10          	cmp    $0x10b9,%ax
     453:	0f 84 41 01 00 00    	je     59a <e1000_sw_init+0x3fa>
     459:	66 3d 8b 10          	cmp    $0x108b,%ax
     45d:	0f 84 41 01 00 00    	je     5a4 <e1000_sw_init+0x404>
     463:	66 3d 8c 10          	cmp    $0x108c,%ax
     467:	0f 84 37 01 00 00    	je     5a4 <e1000_sw_init+0x404>
     46d:	66 3d 9a 10          	cmp    $0x109a,%ax
     471:	0f 84 2d 01 00 00    	je     5a4 <e1000_sw_init+0x404>
     477:	66 3d ba 10          	cmp    $0x10ba,%ax
     47b:	0f 84 2d 01 00 00    	je     5ae <e1000_sw_init+0x40e>
     481:	66 3d bb 10          	cmp    $0x10bb,%ax
     485:	0f 84 23 01 00 00    	je     5ae <e1000_sw_init+0x40e>
     48b:	66 3d 96 10          	cmp    $0x1096,%ax
     48f:	0f 84 19 01 00 00    	je     5ae <e1000_sw_init+0x40e>
     495:	66 3d 98 10          	cmp    $0x1098,%ax
     499:	0f 84 0f 01 00 00    	je     5ae <e1000_sw_init+0x40e>
     49f:	66 3d 49 10          	cmp    $0x1049,%ax
     4a3:	0f 84 0f 01 00 00    	je     5b8 <e1000_sw_init+0x418>
     4a9:	66 3d 4a 10          	cmp    $0x104a,%ax
     4ad:	0f 84 05 01 00 00    	je     5b8 <e1000_sw_init+0x418>
     4b3:	66 3d 4b 10          	cmp    $0x104b,%ax
     4b7:	0f 84 fb 00 00 00    	je     5b8 <e1000_sw_init+0x418>
     4bd:	66 3d 4c 10          	cmp    $0x104c,%ax
     4c1:	0f 84 f1 00 00 00    	je     5b8 <e1000_sw_init+0x418>
     4c7:	66 3d c4 10          	cmp    $0x10c4,%ax
     4cb:	0f 84 e7 00 00 00    	je     5b8 <e1000_sw_init+0x418>
     4d1:	66 3d c5 10          	cmp    $0x10c5,%ax
     4d5:	0f 84 dd 00 00 00    	je     5b8 <e1000_sw_init+0x418>
     4db:	66 3d 4d 10          	cmp    $0x104d,%ax
     4df:	0f 85 75 01 00 00    	jne    65a <e1000_sw_init+0x4ba>
     4e5:	e9 ce 00 00 00       	jmpq   5b8 <e1000_sw_init+0x418>
     4ea:	41 8a 86 ee 00 00 00 	mov    0xee(%r14),%al
     4f1:	3c 02                	cmp    $0x2,%al
     4f3:	74 0a                	je     4ff <e1000_sw_init+0x35f>
     4f5:	3c 03                	cmp    $0x3,%al
     4f7:	0f 85 5d 01 00 00    	jne    65a <e1000_sw_init+0x4ba>
     4fd:	eb 0d                	jmp    50c <e1000_sw_init+0x36c>
     4ff:	41 c7 46 10 01 00 00 	movl   $0x1,0x10(%r14)
     506:	00 
     507:	e9 b4 00 00 00       	jmpq   5c0 <e1000_sw_init+0x420>
     50c:	41 c7 46 10 02 00 00 	movl   $0x2,0x10(%r14)
     513:	00 
     514:	e9 a7 00 00 00       	jmpq   5c0 <e1000_sw_init+0x420>
     519:	41 c7 46 10 03 00 00 	movl   $0x3,0x10(%r14)
     520:	00 
     521:	e9 9a 00 00 00       	jmpq   5c0 <e1000_sw_init+0x420>
     526:	41 c7 46 10 04 00 00 	movl   $0x4,0x10(%r14)
     52d:	00 
     52e:	e9 8d 00 00 00       	jmpq   5c0 <e1000_sw_init+0x420>
     533:	41 c7 46 10 05 00 00 	movl   $0x5,0x10(%r14)
     53a:	00 
     53b:	e9 80 00 00 00       	jmpq   5c0 <e1000_sw_init+0x420>
     540:	41 c7 46 10 06 00 00 	movl   $0x6,0x10(%r14)
     547:	00 
     548:	eb 76                	jmp    5c0 <e1000_sw_init+0x420>
     54a:	41 c7 46 10 07 00 00 	movl   $0x7,0x10(%r14)
     551:	00 
     552:	eb 6c                	jmp    5c0 <e1000_sw_init+0x420>
     554:	41 c7 46 10 08 00 00 	movl   $0x8,0x10(%r14)
     55b:	00 
     55c:	eb 62                	jmp    5c0 <e1000_sw_init+0x420>
     55e:	41 c7 46 10 09 00 00 	movl   $0x9,0x10(%r14)
     565:	00 
     566:	eb 58                	jmp    5c0 <e1000_sw_init+0x420>
     568:	41 c7 46 10 0a 00 00 	movl   $0xa,0x10(%r14)
     56f:	00 
     570:	eb 4e                	jmp    5c0 <e1000_sw_init+0x420>
     572:	41 c7 46 10 0b 00 00 	movl   $0xb,0x10(%r14)
     579:	00 
     57a:	eb 44                	jmp    5c0 <e1000_sw_init+0x420>
     57c:	41 c7 46 10 0c 00 00 	movl   $0xc,0x10(%r14)
     583:	00 
     584:	eb 3a                	jmp    5c0 <e1000_sw_init+0x420>
     586:	41 c7 46 10 0d 00 00 	movl   $0xd,0x10(%r14)
     58d:	00 
     58e:	eb 30                	jmp    5c0 <e1000_sw_init+0x420>
     590:	41 c7 46 10 0e 00 00 	movl   $0xe,0x10(%r14)
     597:	00 
     598:	eb 26                	jmp    5c0 <e1000_sw_init+0x420>
     59a:	41 c7 46 10 0f 00 00 	movl   $0xf,0x10(%r14)
     5a1:	00 
     5a2:	eb 1c                	jmp    5c0 <e1000_sw_init+0x420>
     5a4:	41 c7 46 10 10 00 00 	movl   $0x10,0x10(%r14)
     5ab:	00 
     5ac:	eb 12                	jmp    5c0 <e1000_sw_init+0x420>
     5ae:	41 c7 46 10 11 00 00 	movl   $0x11,0x10(%r14)
     5b5:	00 
     5b6:	eb 08                	jmp    5c0 <e1000_sw_init+0x420>
     5b8:	41 c7 46 10 12 00 00 	movl   $0x12,0x10(%r14)
     5bf:	00 
     5c0:	41 8b 46 10          	mov    0x10(%r14),%eax
     5c4:	83 f8 12             	cmp    $0x12,%eax
     5c7:	74 2a                	je     5f3 <e1000_sw_init+0x453>
     5c9:	83 f8 11             	cmp    $0x11,%eax
     5cc:	74 2f                	je     5fd <e1000_sw_init+0x45d>
     5ce:	83 f8 0e             	cmp    $0xe,%eax
     5d1:	74 32                	je     605 <e1000_sw_init+0x465>
     5d3:	83 f8 0f             	cmp    $0xf,%eax
     5d6:	74 2d                	je     605 <e1000_sw_init+0x465>
     5d8:	83 f8 10             	cmp    $0x10,%eax
     5db:	74 28                	je     605 <e1000_sw_init+0x465>
     5dd:	83 f8 0a             	cmp    $0xa,%eax
     5e0:	74 2b                	je     60d <e1000_sw_init+0x46d>
     5e2:	83 f8 0c             	cmp    $0xc,%eax
     5e5:	74 26                	je     60d <e1000_sw_init+0x46d>
     5e7:	83 f8 0b             	cmp    $0xb,%eax
     5ea:	74 21                	je     60d <e1000_sw_init+0x46d>
     5ec:	83 f8 0d             	cmp    $0xd,%eax
     5ef:	75 24                	jne    615 <e1000_sw_init+0x475>
     5f1:	eb 1a                	jmp    60d <e1000_sw_init+0x46d>
     5f3:	41 c7 46 70 01 00 00 	movl   $0x1,0x70(%r14)
     5fa:	00 
     5fb:	eb 10                	jmp    60d <e1000_sw_init+0x46d>
     5fd:	41 c7 46 6c 01 00 00 	movl   $0x1,0x6c(%r14)
     604:	00 
     605:	41 c7 46 68 01 00 00 	movl   $0x1,0x68(%r14)
     60c:	00 
     60d:	41 c7 46 64 01 00 00 	movl   $0x1,0x64(%r14)
     614:	00 
     615:	41 83 7e 10 03       	cmpl   $0x3,0x10(%r14)
     61a:	75 08                	jne    624 <e1000_sw_init+0x484>
     61c:	41 c6 86 1c 01 00 00 	movb   $0x1,0x11c(%r14)
     623:	01 
     624:	41 83 7e 10 0d       	cmpl   $0xd,0x10(%r14)
     629:	76 08                	jbe    633 <e1000_sw_init+0x493>
     62b:	41 c6 86 1d 01 00 00 	movb   $0x1,0x11d(%r14)
     632:	01 
     633:	41 83 7e 10 11       	cmpl   $0x11,0x10(%r14)
     638:	75 08                	jne    642 <e1000_sw_init+0x4a2>
     63a:	41 c6 86 1e 01 00 00 	movb   $0x1,0x11e(%r14)
     641:	01 
     642:	41 83 7e 10 04       	cmpl   $0x4,0x10(%r14)
     647:	0f 86 2e 01 00 00    	jbe    77b <e1000_sw_init+0x5db>
     64d:	41 c6 86 1f 01 00 00 	movb   $0x1,0x11f(%r14)
     654:	01 
     655:	e9 21 01 00 00       	jmpq   77b <e1000_sw_init+0x5db>
     65a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			65d: R_X86_64_32S	str_186180441
     661:	31 c0                	xor    %eax,%eax
     663:	e8 00 00 00 00       	callq  668 <e1000_sw_init+0x4c8>
			664: R_X86_64_PC32	printk+0xfffffffffffffffc
     668:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
     66d:	e9 6f 01 00 00       	jmpq   7e1 <e1000_sw_init+0x641>
     672:	83 f8 0c             	cmp    $0xc,%eax
     675:	74 0a                	je     681 <e1000_sw_init+0x4e1>
     677:	83 f8 0b             	cmp    $0xb,%eax
     67a:	74 05                	je     681 <e1000_sw_init+0x4e1>
     67c:	83 f8 0d             	cmp    $0xd,%eax
     67f:	75 08                	jne    689 <e1000_sw_init+0x4e9>
     681:	41 c7 46 18 01 00 00 	movl   $0x1,0x18(%r14)
     688:	00 
     689:	4c 89 f7             	mov    %r14,%rdi
     68c:	e8 00 00 00 00       	callq  691 <e1000_sw_init+0x4f1>
			68d: R_X86_64_PC32	.text+0x969
     691:	41 83 7e 1c 00       	cmpl   $0x0,0x1c(%r14)
     696:	41 c6 86 f2 00 00 00 	movb   $0x0,0xf2(%r14)
     69d:	00 
     69e:	41 c6 86 0e 01 00 00 	movb   $0x1,0x10e(%r14)
     6a5:	01 
     6a6:	41 c6 86 16 01 00 00 	movb   $0x1,0x116(%r14)
     6ad:	01 
     6ae:	75 18                	jne    6c8 <e1000_sw_init+0x528>
     6b0:	41 c6 86 f0 00 00 00 	movb   $0x0,0xf0(%r14)
     6b7:	00 
     6b8:	41 c6 86 00 01 00 00 	movb   $0x0,0x100(%r14)
     6bf:	00 
     6c0:	41 c7 46 58 00 00 00 	movl   $0x0,0x58(%r14)
     6c7:	00 
     6c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6cb: R_X86_64_32S	.rodata.str1.1+0x2aac
     6cf:	41 c7 87 b0 02 00 00 	movl   $0x1,0x2b0(%r15)
     6d6:	01 00 00 00 
     6da:	41 c7 87 b4 02 00 00 	movl   $0x1,0x2b4(%r15)
     6e1:	01 00 00 00 
     6e5:	e8 00 00 00 00       	callq  6ea <e1000_sw_init+0x54a>
			6e6: R_X86_64_PC32	record_function+0xfffffffffffffffc
     6ea:	49 63 9f b0 02 00 00 	movslq 0x2b0(%r15),%rbx
     6f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6f4: R_X86_64_32S	.rodata.str1.1+0x2abf
     6f8:	e8 00 00 00 00       	callq  6fd <e1000_sw_init+0x55d>
			6f9: R_X86_64_PC32	record_function+0xfffffffffffffffc
     6fd:	31 c0                	xor    %eax,%eax
     6ff:	48 81 fb aa aa aa 02 	cmp    $0x2aaaaaa,%rbx
     706:	77 0e                	ja     716 <e1000_sw_init+0x576>
     708:	48 6b fb 60          	imul   $0x60,%rbx,%rdi
     70c:	be d0 80 00 00       	mov    $0x80d0,%esi
     711:	e8 00 00 00 00       	callq  716 <e1000_sw_init+0x576>
			712: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
     716:	48 85 c0             	test   %rax,%rax
     719:	49 89 87 b0 01 00 00 	mov    %rax,0x1b0(%r15)
     720:	74 44                	je     766 <e1000_sw_init+0x5c6>
     722:	49 63 9f b4 02 00 00 	movslq 0x2b4(%r15),%rbx
     729:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			72c: R_X86_64_32S	.rodata.str1.1+0x2abf
     730:	e8 00 00 00 00       	callq  735 <e1000_sw_init+0x595>
			731: R_X86_64_PC32	record_function+0xfffffffffffffffc
     735:	31 c0                	xor    %eax,%eax
     737:	48 81 fb 55 55 55 05 	cmp    $0x5555555,%rbx
     73e:	77 0e                	ja     74e <e1000_sw_init+0x5ae>
     740:	48 6b fb 30          	imul   $0x30,%rbx,%rdi
     744:	be d0 80 00 00       	mov    $0x80d0,%esi
     749:	e8 00 00 00 00       	callq  74e <e1000_sw_init+0x5ae>
			74a: R_X86_64_PC32	__kmalloc+0xfffffffffffffffc
     74e:	48 85 c0             	test   %rax,%rax
     751:	49 89 87 20 02 00 00 	mov    %rax,0x220(%r15)
     758:	75 33                	jne    78d <e1000_sw_init+0x5ed>
     75a:	49 8b bf b0 01 00 00 	mov    0x1b0(%r15),%rdi
     761:	e8 00 00 00 00       	callq  766 <e1000_sw_init+0x5c6>
			762: R_X86_64_PC32	kfree+0xfffffffffffffffc
     766:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			769: R_X86_64_32S	str_761963037
     76d:	31 c0                	xor    %eax,%eax
     76f:	e8 00 00 00 00       	callq  774 <e1000_sw_init+0x5d4>
			770: R_X86_64_PC32	printk+0xfffffffffffffffc
     774:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
     779:	eb 66                	jmp    7e1 <e1000_sw_init+0x641>
     77b:	41 8b 46 10          	mov    0x10(%r14),%eax
     77f:	83 f8 0a             	cmp    $0xa,%eax
     782:	0f 85 ea fe ff ff    	jne    672 <e1000_sw_init+0x4d2>
     788:	e9 f4 fe ff ff       	jmpq   681 <e1000_sw_init+0x4e1>
     78d:	49 8d bf e8 00 00 00 	lea    0xe8(%r15),%rdi
     794:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			797: R_X86_64_32S	.bss+0x2c8
     79b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			79e: R_X86_64_32S	str_1067410314
     7a2:	e8 00 00 00 00       	callq  7a7 <e1000_sw_init+0x607>
			7a3: R_X86_64_PC32	.text+0x43f5
     7a7:	4c 89 ff             	mov    %r15,%rdi
     7aa:	e8 00 00 00 00       	callq  7af <e1000_sw_init+0x60f>
			7ab: R_X86_64_PC32	.text+0x89b6
     7af:	49 8d bf b8 00 00 00 	lea    0xb8(%r15),%rdi
     7b6:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			7b9: R_X86_64_32S	.bss+0x2d0
     7bd:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			7c0: R_X86_64_32S	str_290139421
     7c4:	e8 00 00 00 00       	callq  7c9 <e1000_sw_init+0x629>
			7c5: R_X86_64_PC32	.text+0x43f5
     7c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7cc: R_X86_64_32S	.rodata.str1.1+0x2ac7
     7d0:	e8 00 00 00 00       	callq  7d5 <e1000_sw_init+0x635>
			7d1: R_X86_64_PC32	record_function+0xfffffffffffffffc
     7d5:	f0 41 0f ba af c8 07 	lock btsl $0x2,0x7c8(%r15)
     7dc:	00 00 02 
     7df:	31 c0                	xor    %eax,%eax
     7e1:	41 58                	pop    %r8
     7e3:	5b                   	pop    %rbx
     7e4:	41 5c                	pop    %r12
     7e6:	41 5d                	pop    %r13
     7e8:	41 5e                	pop    %r14
     7ea:	41 5f                	pop    %r15
     7ec:	c9                   	leaveq 
     7ed:	c3                   	retq   

00000000000007ee <e1000_probe>:
     7ee:	55                   	push   %rbp
     7ef:	48 89 e5             	mov    %rsp,%rbp
     7f2:	41 57                	push   %r15
     7f4:	41 56                	push   %r14
     7f6:	41 55                	push   %r13
     7f8:	41 54                	push   %r12
     7fa:	53                   	push   %rbx
     7fb:	48 81 ec a8 03 00 00 	sub    $0x3a8,%rsp
     802:	48 89 bd 40 fc ff ff 	mov    %rdi,0xfffffffffffffc40(%rbp)
     809:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			80c: R_X86_64_32S	.rodata.str1.1+0x3983
     810:	e8 00 00 00 00       	callq  815 <e1000_probe+0x27>
			811: R_X86_64_PC32	record_function+0xfffffffffffffffc
     815:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			818: R_X86_64_32S	str_567637109
     81c:	31 c0                	xor    %eax,%eax
     81e:	66 c7 45 ce 00 00    	movw   $0x0,0xffffffffffffffce(%rbp)
     824:	e8 00 00 00 00       	callq  829 <e1000_probe+0x3b>
			825: R_X86_64_PC32	printk+0xfffffffffffffffc
     829:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			82c: R_X86_64_32S	.rodata.str1.1+0x398f
     830:	e8 00 00 00 00       	callq  835 <e1000_probe+0x47>
			831: R_X86_64_PC32	record_function+0xfffffffffffffffc
     835:	48 8b 95 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdx
     83c:	66 8b 42 3e          	mov    0x3e(%rdx),%ax
     840:	66 3d 0e 10          	cmp    $0x100e,%ax
     844:	74 7c                	je     8c2 <e1000_probe+0xd4>
     846:	66 3d 15 10          	cmp    $0x1015,%ax
     84a:	74 76                	je     8c2 <e1000_probe+0xd4>
     84c:	66 3d 17 10          	cmp    $0x1017,%ax
     850:	74 70                	je     8c2 <e1000_probe+0xd4>
     852:	66 3d 16 10          	cmp    $0x1016,%ax
     856:	74 6a                	je     8c2 <e1000_probe+0xd4>
     858:	66 3d 1e 10          	cmp    $0x101e,%ax
     85c:	74 64                	je     8c2 <e1000_probe+0xd4>
     85e:	66 3d 13 10          	cmp    $0x1013,%ax
     862:	74 5e                	je     8c2 <e1000_probe+0xd4>
     864:	66 3d 18 10          	cmp    $0x1018,%ax
     868:	74 58                	je     8c2 <e1000_probe+0xd4>
     86a:	66 3d 78 10          	cmp    $0x1078,%ax
     86e:	74 52                	je     8c2 <e1000_probe+0xd4>
     870:	66 3d 14 10          	cmp    $0x1014,%ax
     874:	74 4c                	je     8c2 <e1000_probe+0xd4>
     876:	66 3d 76 10          	cmp    $0x1076,%ax
     87a:	74 46                	je     8c2 <e1000_probe+0xd4>
     87c:	66 3d 7c 10          	cmp    $0x107c,%ax
     880:	74 40                	je     8c2 <e1000_probe+0xd4>
     882:	66 3d 77 10          	cmp    $0x1077,%ax
     886:	74 3a                	je     8c2 <e1000_probe+0xd4>
     888:	66 3d 08 10          	cmp    $0x1008,%ax
     88c:	74 34                	je     8c2 <e1000_probe+0xd4>
     88e:	66 3d 09 10          	cmp    $0x1009,%ax
     892:	74 2e                	je     8c2 <e1000_probe+0xd4>
     894:	66 3d 0c 10          	cmp    $0x100c,%ax
     898:	74 28                	je     8c2 <e1000_probe+0xd4>
     89a:	66 3d 0d 10          	cmp    $0x100d,%ax
     89e:	74 22                	je     8c2 <e1000_probe+0xd4>
     8a0:	66 3d 0f 10          	cmp    $0x100f,%ax
     8a4:	74 1c                	je     8c2 <e1000_probe+0xd4>
     8a6:	66 3d 11 10          	cmp    $0x1011,%ax
     8aa:	74 16                	je     8c2 <e1000_probe+0xd4>
     8ac:	66 3d 10 10          	cmp    $0x1010,%ax
     8b0:	74 10                	je     8c2 <e1000_probe+0xd4>
     8b2:	66 3d 12 10          	cmp    $0x1012,%ax
     8b6:	74 0a                	je     8c2 <e1000_probe+0xd4>
     8b8:	66 3d 1d 10          	cmp    $0x101d,%ax
     8bc:	0f 85 a5 19 00 00    	jne    2267 <e1000_probe+0x1a79>
     8c2:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     8c9:	be 00 03 00 00       	mov    $0x300,%esi
     8ce:	41 bc 01 00 00 00    	mov    $0x1,%r12d
     8d4:	e8 00 00 00 00       	callq  8d9 <e1000_probe+0xeb>
			8d5: R_X86_64_PC32	.text+0x1ac60
     8d9:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     8e0:	89 85 4c fc ff ff    	mov    %eax,0xfffffffffffffc4c(%rbp)
     8e6:	e8 00 00 00 00       	callq  8eb <e1000_probe+0xfd>
			8e7: R_X86_64_PC32	.text+0x3890
     8eb:	89 c3                	mov    %eax,%ebx
     8ed:	85 db                	test   %ebx,%ebx
     8ef:	0f 85 ae 19 00 00    	jne    22a3 <e1000_probe+0x1ab5>
     8f5:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     8fc:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
     900:	e8 00 00 00 00       	callq  905 <e1000_probe+0x117>
			901: R_X86_64_PC32	.text+0x8ed2
     905:	85 c0                	test   %eax,%eax
     907:	74 3f                	je     948 <e1000_probe+0x15a>
     909:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     910:	be ff ff ff ff       	mov    $0xffffffff,%esi
     915:	e8 00 00 00 00       	callq  91a <e1000_probe+0x12c>
			916: R_X86_64_PC32	.text+0x8ed2
     91a:	85 c0                	test   %eax,%eax
     91c:	74 4a                	je     968 <e1000_probe+0x17a>
     91e:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     925:	be ff ff ff ff       	mov    $0xffffffff,%esi
     92a:	e8 00 00 00 00       	callq  92f <e1000_probe+0x141>
			92b: R_X86_64_PC32	.text+0x3f9b
     92f:	85 c0                	test   %eax,%eax
     931:	89 c3                	mov    %eax,%ebx
     933:	74 33                	je     968 <e1000_probe+0x17a>
     935:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			938: R_X86_64_32S	str_320433102
     93c:	31 c0                	xor    %eax,%eax
     93e:	e8 00 00 00 00       	callq  943 <e1000_probe+0x155>
			93f: R_X86_64_PC32	printk+0xfffffffffffffffc
     943:	e9 11 19 00 00       	jmpq   2259 <e1000_probe+0x1a6b>
     948:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     94f:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
     953:	e8 00 00 00 00       	callq  958 <e1000_probe+0x16a>
			954: R_X86_64_PC32	.text+0x3f9b
     958:	85 c0                	test   %eax,%eax
     95a:	c7 85 48 fc ff ff 01 	movl   $0x1,0xfffffffffffffc48(%rbp)
     961:	00 00 00 
     964:	74 0c                	je     972 <e1000_probe+0x184>
     966:	eb a1                	jmp    909 <e1000_probe+0x11b>
     968:	c7 85 48 fc ff ff 00 	movl   $0x0,0xfffffffffffffc48(%rbp)
     96f:	00 00 00 
     972:	8b b5 4c fc ff ff    	mov    0xfffffffffffffc4c(%rbp),%esi
     978:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     97f:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			982: R_X86_64_32S	e1000_driver_name
     986:	e8 00 00 00 00       	callq  98b <e1000_probe+0x19d>
			987: R_X86_64_PC32	.text+0x12a14
     98b:	85 c0                	test   %eax,%eax
     98d:	89 c3                	mov    %eax,%ebx
     98f:	0f 85 c4 18 00 00    	jne    2259 <e1000_probe+0x1a6b>
     995:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     99c:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
     9a1:	e8 00 00 00 00       	callq  9a6 <e1000_probe+0x1b8>
			9a2: R_X86_64_PC32	.text+0x340f
     9a6:	be 01 00 00 00       	mov    $0x1,%esi
     9ab:	bf e0 07 00 00       	mov    $0x7e0,%edi
     9b0:	e8 00 00 00 00       	callq  9b5 <e1000_probe+0x1c7>
			9b1: R_X86_64_PC32	alloc_etherdev_mq+0xfffffffffffffffc
     9b5:	48 85 c0             	test   %rax,%rax
     9b8:	49 89 c6             	mov    %rax,%r14
     9bb:	0f 84 86 18 00 00    	je     2247 <e1000_probe+0x1a59>
     9c1:	48 8b 85 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rax
     9c8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9cb: R_X86_64_32S	str_567637470
     9cf:	4d 8d ae 00 08 00 00 	lea    0x800(%r14),%r13
     9d6:	4d 8d be b8 0b 00 00 	lea    0xbb8(%r14),%r15
     9dd:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
     9e2:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
     9e6:	49 89 86 18 05 00 00 	mov    %rax,0x518(%r14)
     9ed:	31 c0                	xor    %eax,%eax
     9ef:	e8 00 00 00 00       	callq  9f4 <e1000_probe+0x206>
			9f0: R_X86_64_PC32	printk+0xfffffffffffffffc
     9f4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9f7: R_X86_64_32S	.rodata.str1.1+0x39a4
     9fb:	e8 00 00 00 00       	callq  a00 <e1000_probe+0x212>
			9fc: R_X86_64_PC32	record_function+0xfffffffffffffffc
     a00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a03: R_X86_64_32S	.rodata.str1.1+0x39b4
     a07:	e8 00 00 00 00       	callq  a0c <e1000_probe+0x21e>
			a08: R_X86_64_PC32	record_function+0xfffffffffffffffc
     a0c:	48 8b b5 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rsi
     a13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a16: R_X86_64_32S	.rodata.str1.1+0x1be
     a1a:	4c 89 b6 f8 01 00 00 	mov    %r14,0x1f8(%rsi)
     a21:	e8 00 00 00 00       	callq  a26 <e1000_probe+0x238>
			a22: R_X86_64_PC32	record_function+0xfffffffffffffffc
     a26:	4d 89 b5 f0 02 00 00 	mov    %r14,0x2f0(%r13)
     a2d:	48 8b 85 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rax
     a34:	31 f6                	xor    %esi,%esi
     a36:	49 89 85 f8 02 00 00 	mov    %rax,0x2f8(%r13)
     a3d:	8b 0d 00 00 00 00    	mov    0(%rip),%ecx        # a43 <e1000_probe+0x255>
			a3f: R_X86_64_PC32	.data+0x3d7a4
     a43:	b8 01 00 00 00       	mov    $0x1,%eax
     a48:	d3 e0                	shl    %cl,%eax
     a4a:	ff c8                	dec    %eax
     a4c:	41 89 85 c0 07 00 00 	mov    %eax,0x7c0(%r13)
     a53:	8b 95 4c fc ff ff    	mov    0xfffffffffffffc4c(%rbp),%edx
     a59:	45 89 a5 d8 07 00 00 	mov    %r12d,0x7d8(%r13)
     a60:	41 89 95 d4 07 00 00 	mov    %edx,0x7d4(%r13)
     a67:	4d 89 6f 20          	mov    %r13,0x20(%r15)
     a6b:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     a72:	e8 00 00 00 00       	callq  a77 <e1000_probe+0x289>
			a73: R_X86_64_PC32	.text+0x115fd
     a77:	48 85 c0             	test   %rax,%rax
     a7a:	49 89 86 b8 0b 00 00 	mov    %rax,0xbb8(%r14)
     a81:	0f 84 b8 17 00 00    	je     223f <e1000_probe+0x1a51>
     a87:	eb 0d                	jmp    a96 <e1000_probe+0x2a8>
     a89:	48 8b 86 00 03 00 00 	mov    0x300(%rsi),%rax
     a90:	49 89 47 78          	mov    %rax,0x78(%r15)
     a94:	eb 76                	jmp    b0c <e1000_probe+0x31e>
     a96:	41 83 bd d8 07 00 00 	cmpl   $0x0,0x7d8(%r13)
     a9d:	00 
     a9e:	74 6c                	je     b0c <e1000_probe+0x31e>
     aa0:	48 8b b5 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rsi
     aa7:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     aae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
     ab4:	48 83 c6 38          	add    $0x38,%rsi
     ab8:	48 81 c7 50 03 00 00 	add    $0x350,%rdi
     abf:	48 89 f1             	mov    %rsi,%rcx
     ac2:	48 8b 91 00 03 00 00 	mov    0x300(%rcx),%rdx
     ac9:	48 8b 81 08 03 00 00 	mov    0x308(%rcx),%rax
     ad0:	48 85 d2             	test   %rdx,%rdx
     ad3:	75 0a                	jne    adf <e1000_probe+0x2f1>
     ad5:	48 85 c0             	test   %rax,%rax
     ad8:	74 1d                	je     af7 <e1000_probe+0x309>
     ada:	48 ff c0             	inc    %rax
     add:	eb 06                	jmp    ae5 <e1000_probe+0x2f7>
     adf:	48 ff c0             	inc    %rax
     ae2:	48 29 d0             	sub    %rdx,%rax
     ae5:	48 85 c0             	test   %rax,%rax
     ae8:	74 0d                	je     af7 <e1000_probe+0x309>
     aea:	48 8b 07             	mov    (%rdi),%rax
     aed:	25 00 01 00 00       	and    $0x100,%eax
     af2:	48 85 c0             	test   %rax,%rax
     af5:	75 92                	jne    a89 <e1000_probe+0x29b>
     af7:	41 ff c0             	inc    %r8d
     afa:	48 83 c1 38          	add    $0x38,%rcx
     afe:	48 83 c6 38          	add    $0x38,%rsi
     b02:	48 83 c7 38          	add    $0x38,%rdi
     b06:	41 83 f8 06          	cmp    $0x6,%r8d
     b0a:	75 b6                	jne    ac2 <e1000_probe+0x2d4>
     b0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b0f: R_X86_64_32S	.rodata.str1.1+0x39c4
     b13:	49 c7 86 48 01 00 00 	movq   $0x0,0x148(%r14)
     b1a:	00 00 00 00 
			b1a: R_X86_64_32S	.data+0x3e0a0
     b1e:	e8 00 00 00 00       	callq  b23 <e1000_probe+0x335>
			b1f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b23:	49 8d b5 28 02 00 00 	lea    0x228(%r13),%rsi
     b2a:	b9 40 00 00 00       	mov    $0x40,%ecx
     b2f:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			b32: R_X86_64_32S	.text+0x34cff
     b36:	4c 89 f7             	mov    %r14,%rdi
     b39:	49 c7 86 50 01 00 00 	movq   $0x0,0x150(%r14)
     b40:	00 00 00 00 
			b40: R_X86_64_32S	.data+0x3ea00
     b44:	41 c7 86 50 03 00 00 	movl   $0x1388,0x350(%r14)
     b4b:	88 13 00 00 
     b4f:	e8 00 00 00 00       	callq  b54 <e1000_probe+0x366>
			b50: R_X86_64_PC32	.text+0xeed4
     b54:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b57: R_X86_64_32S	.rodata.str1.1+0x3421
     b5b:	e8 00 00 00 00       	callq  b60 <e1000_probe+0x372>
			b5c: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b63: R_X86_64_32S	.rodata.str1.1+0x342a
     b67:	e8 00 00 00 00       	callq  b6c <e1000_probe+0x37e>
			b68: R_X86_64_PC32	record_function+0xfffffffffffffffc
     b6c:	48 8b b5 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rsi
     b73:	ba 0f 00 00 00       	mov    $0xf,%edx
     b78:	4c 89 f7             	mov    %r14,%rdi
     b7b:	48 81 c6 78 01 00 00 	add    $0x178,%rsi
     b82:	e8 00 00 00 00       	callq  b87 <e1000_probe+0x399>
			b83: R_X86_64_PC32	strncpy+0xfffffffffffffffc
     b87:	8b 05 00 00 00 00    	mov    0(%rip),%eax        # b8d <e1000_probe+0x39f>
			b89: R_X86_64_PC32	.bss+0x27c
     b8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b90: R_X86_64_32S	str_295592627
     b94:	41 89 85 9c 00 00 00 	mov    %eax,0x9c(%r13)
     b9b:	31 c0                	xor    %eax,%eax
     b9d:	e8 00 00 00 00       	callq  ba2 <e1000_probe+0x3b4>
			b9e: R_X86_64_PC32	printk+0xfffffffffffffffc
     ba2:	4c 89 ef             	mov    %r13,%rdi
     ba5:	e8 f6 f5 ff ff       	callq  1a0 <e1000_sw_init>
     baa:	85 c0                	test   %eax,%eax
     bac:	89 c3                	mov    %eax,%ebx
     bae:	0f 85 83 16 00 00    	jne    2237 <e1000_probe+0x1a49>
     bb4:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
     bb9:	75 33                	jne    bee <e1000_probe+0x400>
     bbb:	48 8b b5 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rsi
     bc2:	f6 86 51 03 00 00 02 	testb  $0x2,0x351(%rsi)
     bc9:	74 23                	je     bee <e1000_probe+0x400>
     bcb:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
     bd2:	be 01 00 00 00       	mov    $0x1,%esi
     bd7:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
     bdc:	e8 00 00 00 00       	callq  be1 <e1000_probe+0x3f3>
			bdd: R_X86_64_PC32	.text+0x115fd
     be1:	48 85 c0             	test   %rax,%rax
     be4:	49 89 47 08          	mov    %rax,0x8(%r15)
     be8:	0f 84 31 16 00 00    	je     221f <e1000_probe+0x1a31>
     bee:	4c 89 ff             	mov    %r15,%rdi
     bf1:	e8 00 00 00 00       	callq  bf6 <e1000_probe+0x408>
			bf2: R_X86_64_PC32	.text+0x110
     bf6:	85 c0                	test   %eax,%eax
     bf8:	74 0e                	je     c08 <e1000_probe+0x41a>
     bfa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			bfd: R_X86_64_32S	str_562102884
     c01:	31 c0                	xor    %eax,%eax
     c03:	e8 00 00 00 00       	callq  c08 <e1000_probe+0x41a>
			c04: R_X86_64_PC32	printk+0xfffffffffffffffc
     c08:	41 83 7f 10 02       	cmpl   $0x2,0x10(%r15)
     c0d:	76 17                	jbe    c26 <e1000_probe+0x438>
     c0f:	49 c7 46 70 89 03 00 	movq   $0x389,0x70(%r14)
     c16:	00 
     c17:	41 83 7f 10 12       	cmpl   $0x12,0x10(%r15)
     c1c:	75 08                	jne    c26 <e1000_probe+0x438>
     c1e:	49 c7 46 70 89 01 00 	movq   $0x189,0x70(%r14)
     c25:	00 
     c26:	41 8b 47 10          	mov    0x10(%r15),%eax
     c2a:	83 f8 03             	cmp    $0x3,%eax
     c2d:	76 0d                	jbe    c3c <e1000_probe+0x44e>
     c2f:	83 f8 0c             	cmp    $0xc,%eax
     c32:	74 08                	je     c3c <e1000_probe+0x44e>
     c34:	49 81 4e 70 00 00 01 	orq    $0x10000,0x70(%r14)
     c3b:	00 
     c3c:	41 83 7f 10 0d       	cmpl   $0xd,0x10(%r15)
     c41:	76 08                	jbe    c4b <e1000_probe+0x45d>
     c43:	49 81 4e 70 00 00 10 	orq    $0x100000,0x70(%r14)
     c4a:	00 
     c4b:	83 bd 48 fc ff ff 00 	cmpl   $0x0,0xfffffffffffffc48(%rbp)
     c52:	74 05                	je     c59 <e1000_probe+0x46b>
     c54:	49 83 4e 70 20       	orq    $0x20,0x70(%r14)
     c59:	49 81 4e 70 00 10 00 	orq    $0x1000,0x70(%r14)
     c60:	00 
     c61:	49 81 8e 00 07 00 00 	orq    $0x110009,0x700(%r14)
     c68:	09 00 11 00 
     c6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c6f: R_X86_64_32S	.rodata.str1.1+0x39da
     c73:	e8 00 00 00 00       	callq  c78 <e1000_probe+0x48a>
			c74: R_X86_64_PC32	record_function+0xfffffffffffffffc
     c78:	41 83 7f 64 00       	cmpl   $0x0,0x64(%r15)
     c7d:	0f 84 bd 00 00 00    	je     d40 <e1000_probe+0x552>
     c83:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c86: R_X86_64_32S	.rodata.str1.1+0xae
     c8a:	49 8b 1f             	mov    (%r15),%rbx
     c8d:	e8 00 00 00 00       	callq  c92 <e1000_probe+0x4a4>
			c8e: R_X86_64_PC32	record_function+0xfffffffffffffffc
     c92:	44 8b a3 20 58 00 00 	mov    0x5820(%rbx),%r12d
     c99:	41 f7 c4 00 00 02 00 	test   $0x20000,%r12d
     ca0:	0f 84 9a 00 00 00    	je     d40 <e1000_probe+0x552>
     ca6:	41 f7 c4 00 00 10 00 	test   $0x100000,%r12d
     cad:	0f 84 8d 00 00 00    	je     d40 <e1000_probe+0x552>
     cb3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			cb6: R_X86_64_32S	.rodata.str1.1+0x39f5
     cba:	e8 00 00 00 00       	callq  cbf <e1000_probe+0x4d1>
			cbb: R_X86_64_PC32	record_function+0xfffffffffffffffc
     cbf:	41 8b 47 10          	mov    0x10(%r15),%eax
     cc3:	83 f8 0e             	cmp    $0xe,%eax
     cc6:	74 1a                	je     ce2 <e1000_probe+0x4f4>
     cc8:	83 f8 0f             	cmp    $0xf,%eax
     ccb:	74 15                	je     ce2 <e1000_probe+0x4f4>
     ccd:	83 f8 10             	cmp    $0x10,%eax
     cd0:	74 10                	je     ce2 <e1000_probe+0x4f4>
     cd2:	83 f8 11             	cmp    $0x11,%eax
     cd5:	74 0b                	je     ce2 <e1000_probe+0x4f4>
     cd7:	83 f8 12             	cmp    $0x12,%eax
     cda:	0f 85 b4 15 00 00    	jne    2294 <e1000_probe+0x1aa6>
     ce0:	eb 1d                	jmp    cff <e1000_probe+0x511>
     ce2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			ce5: R_X86_64_32S	.rodata.str1.1+0xae
     ce9:	49 8b 1f             	mov    (%r15),%rbx
     cec:	e8 00 00 00 00       	callq  cf1 <e1000_probe+0x503>
			ced: R_X86_64_PC32	record_function+0xfffffffffffffffc
     cf1:	8b 83 54 5b 00 00    	mov    0x5b54(%rbx),%eax
     cf7:	a8 0e                	test   $0xe,%al
     cf9:	0f 84 95 15 00 00    	je     2294 <e1000_probe+0x1aa6>
     cff:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d02: R_X86_64_32S	.rodata.str1.1+0xae
     d06:	49 8b 1f             	mov    (%r15),%rbx
     d09:	e8 00 00 00 00       	callq  d0e <e1000_probe+0x520>
			d0a: R_X86_64_PC32	record_function+0xfffffffffffffffc
     d0e:	8b 9b 54 5b 00 00    	mov    0x5b54(%rbx),%ebx
     d14:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d17: R_X86_64_32S	.rodata.str1.1+0xae
     d1b:	4d 8b 27             	mov    (%r15),%r12
     d1e:	e8 00 00 00 00       	callq  d23 <e1000_probe+0x535>
			d1f: R_X86_64_PC32	record_function+0xfffffffffffffffc
     d23:	41 8b 84 24 30 5b 00 	mov    0x5b30(%r12),%eax
     d2a:	00 
     d2b:	83 e3 0e             	and    $0xe,%ebx
     d2e:	83 fb 04             	cmp    $0x4,%ebx
     d31:	75 0d                	jne    d40 <e1000_probe+0x552>
     d33:	a9 00 00 00 20       	test   $0x20000000,%eax
     d38:	eb 04                	jmp    d3e <e1000_probe+0x550>
     d3a:	41 80 e4 02          	and    $0x2,%r12b
     d3e:	74 04                	je     d44 <e1000_probe+0x556>
     d40:	31 c0                	xor    %eax,%eax
     d42:	eb 05                	jmp    d49 <e1000_probe+0x55b>
     d44:	b8 01 00 00 00       	mov    $0x1,%eax
     d49:	41 89 85 ac 00 00 00 	mov    %eax,0xac(%r13)
     d50:	4c 89 ff             	mov    %r15,%rdi
     d53:	e8 00 00 00 00       	callq  d58 <e1000_probe+0x56a>
			d54: R_X86_64_PC32	.text+0x1f7c6
     d58:	85 c0                	test   %eax,%eax
     d5a:	74 18                	je     d74 <e1000_probe+0x586>
     d5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d5f: R_X86_64_32S	str_654135934
     d63:	31 c0                	xor    %eax,%eax
     d65:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
     d6a:	e8 00 00 00 00       	callq  d6f <e1000_probe+0x581>
			d6b: R_X86_64_PC32	printk+0xfffffffffffffffc
     d6f:	e9 89 14 00 00       	jmpq   21fd <e1000_probe+0x1a0f>
     d74:	4c 89 ff             	mov    %r15,%rdi
     d77:	e8 00 00 00 00       	callq  d7c <e1000_probe+0x58e>
			d78: R_X86_64_PC32	.text+0x7e41
     d7c:	4c 89 ff             	mov    %r15,%rdi
     d7f:	e8 00 00 00 00       	callq  d84 <e1000_probe+0x596>
			d80: R_X86_64_PC32	.text+0x200a0
     d84:	85 c0                	test   %eax,%eax
     d86:	79 2e                	jns    db6 <e1000_probe+0x5c8>
     d88:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			d8b: R_X86_64_32S	str_191256233
     d8f:	31 c0                	xor    %eax,%eax
     d91:	e8 00 00 00 00       	callq  d96 <e1000_probe+0x5a8>
			d92: R_X86_64_PC32	printk+0xfffffffffffffffc
     d96:	4c 89 ef             	mov    %r13,%rdi
     d99:	e8 00 00 00 00       	callq  d9e <e1000_probe+0x5b0>
			d9a: R_X86_64_PC32	.text+0x26be9
     d9e:	41 0f b6 96 a0 01 00 	movzbl 0x1a0(%r14),%edx
     da5:	00 
     da6:	49 8d bf f4 00 00 00 	lea    0xf4(%r15),%rdi
     dad:	31 f6                	xor    %esi,%esi
     daf:	e8 00 00 00 00       	callq  db4 <e1000_probe+0x5c6>
			db0: R_X86_64_PC32	.text+0x78a7
     db4:	eb 1a                	jmp    dd0 <e1000_probe+0x5e2>
     db6:	4c 89 ff             	mov    %r15,%rdi
     db9:	e8 00 00 00 00       	callq  dbe <e1000_probe+0x5d0>
			dba: R_X86_64_PC32	.text+0x1f6ad
     dbe:	85 c0                	test   %eax,%eax
     dc0:	74 0e                	je     dd0 <e1000_probe+0x5e2>
     dc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			dc5: R_X86_64_32S	str_680042556
     dc9:	31 c0                	xor    %eax,%eax
     dcb:	e8 00 00 00 00       	callq  dd0 <e1000_probe+0x5e2>
			dcc: R_X86_64_PC32	printk+0xfffffffffffffffc
     dd0:	49 8d 87 f4 00 00 00 	lea    0xf4(%r15),%rax
     dd7:	41 0f b6 8e a0 01 00 	movzbl 0x1a0(%r14),%ecx
     dde:	00 
     ddf:	49 8d be 40 02 00 00 	lea    0x240(%r14),%rdi
     de6:	fc                   	cld    
     de7:	48 89 c6             	mov    %rax,%rsi
     dea:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
     dec:	48 89 c6             	mov    %rax,%rsi
     def:	49 8d be 80 01 00 00 	lea    0x180(%r14),%rdi
     df6:	41 0f b6 8e a0 01 00 	movzbl 0x1a0(%r14),%ecx
     dfd:	00 
     dfe:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
     e00:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e03: R_X86_64_32S	.rodata.str1.1+0x352c
     e07:	e8 00 00 00 00       	callq  e0c <e1000_probe+0x61e>
			e08: R_X86_64_PC32	record_function+0xfffffffffffffffc
     e0c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e0f: R_X86_64_32S	.rodata.str1.1+0x3540
     e13:	e8 00 00 00 00       	callq  e18 <e1000_probe+0x62a>
			e14: R_X86_64_PC32	record_function+0xfffffffffffffffc
     e18:	41 f6 86 80 01 00 00 	testb  $0x1,0x180(%r14)
     e1f:	01 
     e20:	75 38                	jne    e5a <e1000_probe+0x66c>
     e22:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e25: R_X86_64_32S	.rodata.str1.1+0x3558
     e29:	e8 00 00 00 00       	callq  e2e <e1000_probe+0x640>
			e2a: R_X86_64_PC32	record_function+0xfffffffffffffffc
     e2e:	41 8a 86 82 01 00 00 	mov    0x182(%r14),%al
     e35:	41 0a 86 81 01 00 00 	or     0x181(%r14),%al
     e3c:	41 0a 86 80 01 00 00 	or     0x180(%r14),%al
     e43:	41 0a 86 83 01 00 00 	or     0x183(%r14),%al
     e4a:	41 0a 86 84 01 00 00 	or     0x184(%r14),%al
     e51:	41 0a 86 85 01 00 00 	or     0x185(%r14),%al
     e58:	75 0e                	jne    e68 <e1000_probe+0x67a>
     e5a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			e5d: R_X86_64_32S	str_176290968
     e61:	31 c0                	xor    %eax,%eax
     e63:	e8 00 00 00 00       	callq  e68 <e1000_probe+0x67a>
			e64: R_X86_64_PC32	printk+0xfffffffffffffffc
     e68:	4c 89 ff             	mov    %r15,%rdi
     e6b:	49 8d 9d 40 01 00 00 	lea    0x140(%r13),%rbx
     e72:	e8 00 00 00 00       	callq  e77 <e1000_probe+0x689>
			e73: R_X86_64_PC32	.text+0xb3f3
     e77:	4c 89 ef             	mov    %r13,%rdi
     e7a:	e8 00 00 00 00       	callq  e7f <e1000_probe+0x691>
			e7b: R_X86_64_PC32	.text+0x332d
     e7f:	49 8d 7d 30          	lea    0x30(%r13),%rdi
     e83:	49 c7 45 18 00 00 00 	movq   $0x0,0x18(%r13)
     e8a:	00 
			e87: R_X86_64_32S	.text+0x3826d
     e8b:	4d 89 6d 20          	mov    %r13,0x20(%r13)
     e8f:	e8 00 00 00 00       	callq  e94 <e1000_probe+0x6a6>
			e90: R_X86_64_PC32	.text+0x332d
     e94:	49 8d 7d 60          	lea    0x60(%r13),%rdi
     e98:	49 c7 45 48 00 00 00 	movq   $0x0,0x48(%r13)
     e9f:	00 
			e9c: R_X86_64_32S	.text+0x36161
     ea0:	4d 89 6d 50          	mov    %r13,0x50(%r13)
     ea4:	e8 00 00 00 00       	callq  ea9 <e1000_probe+0x6bb>
			ea5: R_X86_64_PC32	.text+0x332d
     ea9:	49 c7 45 78 00 00 00 	movq   $0x0,0x78(%r13)
     eb0:	00 
			ead: R_X86_64_32S	.text+0x6dc2
     eb1:	4d 89 ad 80 00 00 00 	mov    %r13,0x80(%r13)
     eb8:	49 8d bd 58 01 00 00 	lea    0x158(%r13),%rdi
     ebf:	48 c7 45 a8 00 00 00 	movq   $0x0,0xffffffffffffffa8(%rbp)
     ec6:	00 
     ec7:	48 8b 45 a8          	mov    0xffffffffffffffa8(%rbp),%rax
     ecb:	31 c9                	xor    %ecx,%ecx
     ecd:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			ed0: R_X86_64_32S	.bss+0x2c0
     ed4:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			ed7: R_X86_64_32S	str_876241111
     edb:	49 89 85 38 01 00 00 	mov    %rax,0x138(%r13)
     ee2:	e8 00 00 00 00       	callq  ee7 <e1000_probe+0x6f9>
			ee3: R_X86_64_PC32	.text+0x40ec
     ee7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			eea: R_X86_64_32S	.rodata.str1.1+0x3a0f
     eee:	e8 00 00 00 00       	callq  ef3 <e1000_probe+0x705>
			eef: R_X86_64_PC32	record_function+0xfffffffffffffffc
     ef3:	48 89 5b 08          	mov    %rbx,0x8(%rbx)
     ef7:	49 89 9d 40 01 00 00 	mov    %rbx,0x140(%r13)
     efe:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f01: R_X86_64_32S	.rodata.str1.1+0x3a1e
     f05:	49 c7 85 50 01 00 00 	movq   $0x0,0x150(%r13)
     f0c:	00 00 00 00 
			f0c: R_X86_64_32S	.text+0x32c47
     f10:	e8 00 00 00 00       	callq  f15 <e1000_probe+0x727>
			f11: R_X86_64_PC32	record_function+0xfffffffffffffffc
     f15:	45 8b a5 9c 00 00 00 	mov    0x9c(%r13),%r12d
     f1c:	41 83 fc 1f          	cmp    $0x1f,%r12d
     f20:	7e 4f                	jle    f71 <e1000_probe+0x783>
     f22:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
     f29:	02 
     f2a:	74 1f                	je     f4b <e1000_probe+0x75d>
     f2c:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
     f33:	44 89 e1             	mov    %r12d,%ecx
     f36:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			f39: R_X86_64_32S	str_423800896
     f3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f40: R_X86_64_32S	str_212082060
     f44:	31 c0                	xor    %eax,%eax
     f46:	e8 00 00 00 00       	callq  f4b <e1000_probe+0x75d>
			f47: R_X86_64_PC32	printk+0xfffffffffffffffc
     f4b:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
     f52:	02 
     f53:	74 1c                	je     f71 <e1000_probe+0x783>
     f55:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
     f5c:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			f5f: R_X86_64_32S	str_423800896
     f63:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f66: R_X86_64_32S	str_350974073
     f6a:	31 c0                	xor    %eax,%eax
     f6c:	e8 00 00 00 00       	callq  f71 <e1000_probe+0x783>
			f6d: R_X86_64_PC32	printk+0xfffffffffffffffc
     f71:	41 8b 85 c8 03 00 00 	mov    0x3c8(%r13),%eax
     f78:	49 8b 9d b0 01 00 00 	mov    0x1b0(%r13),%rbx
     f7f:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
     f86:	c7 85 60 ff ff ff 50 	movl   $0x50,0xffffffffffffff60(%rbp)
     f8d:	00 00 00 
     f90:	c7 85 58 ff ff ff 00 	movl   $0x100,0xffffffffffffff58(%rbp)
     f97:	01 00 00 
     f9a:	48 8d b5 40 ff ff ff 	lea    0xffffffffffffff40(%rbp),%rsi
     fa1:	48 c7 85 50 ff ff ff 	movq   $0x0,0xffffffffffffff50(%rbp)
     fa8:	00 00 00 00 
			fa8: R_X86_64_32S	str_733826661
     fac:	48 c7 85 48 ff ff ff 	movq   $0x0,0xffffffffffffff48(%rbp)
     fb3:	00 00 00 00 
			fb3: R_X86_64_32S	str_562631572
     fb7:	b9 0c 00 00 00       	mov    $0xc,%ecx
     fbc:	83 f8 04             	cmp    $0x4,%eax
     fbf:	c7 85 40 ff ff ff 01 	movl   $0x1,0xffffffffffffff40(%rbp)
     fc6:	00 00 00 
     fc9:	19 c0                	sbb    %eax,%eax
     fcb:	25 00 f1 ff ff       	and    $0xfffff100,%eax
     fd0:	05 00 10 00 00       	add    $0x1000,%eax
     fd5:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # fdc <e1000_probe+0x7ee>
			fd8: R_X86_64_PC32	.bss+0x284
     fdc:	89 85 64 ff ff ff    	mov    %eax,0xffffffffffffff64(%rbp)
     fe2:	fc                   	cld    
     fe3:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
     fe5:	76 2b                	jbe    1012 <e1000_probe+0x824>
     fe7:	49 63 c4             	movslq %r12d,%rax
     fea:	48 8d 7b 14          	lea    0x14(%rbx),%rdi
     fee:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
     ff5:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			ff8: R_X86_64_32S	.devinit.data+0x820
     ffc:	4c 89 ea             	mov    %r13,%rdx
     fff:	89 43 14             	mov    %eax,0x14(%rbx)
    1002:	e8 f9 ef ff ff       	callq  0 <e1000_validate_option>
    1007:	8b 43 14             	mov    0x14(%rbx),%eax
    100a:	83 c0 07             	add    $0x7,%eax
    100d:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
    1010:	eb 03                	jmp    1015 <e1000_probe+0x827>
    1012:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    1015:	89 43 14             	mov    %eax,0x14(%rbx)
    1018:	31 c9                	xor    %ecx,%ecx
    101a:	41 3b 8d b0 02 00 00 	cmp    0x2b0(%r13),%ecx
    1021:	7d 12                	jge    1035 <e1000_probe+0x847>
    1023:	48 63 c1             	movslq %ecx,%rax
    1026:	8b 53 14             	mov    0x14(%rbx),%edx
    1029:	ff c1                	inc    %ecx
    102b:	48 6b c0 60          	imul   $0x60,%rax,%rax
    102f:	89 54 03 14          	mov    %edx,0x14(%rbx,%rax,1)
    1033:	eb e5                	jmp    101a <e1000_probe+0x82c>
    1035:	41 8b 85 c8 03 00 00 	mov    0x3c8(%r13),%eax
    103c:	49 8b 9d 20 02 00 00 	mov    0x220(%r13),%rbx
    1043:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    104a:	c7 85 30 ff ff ff 50 	movl   $0x50,0xffffffffffffff30(%rbp)
    1051:	00 00 00 
    1054:	c7 85 28 ff ff ff 00 	movl   $0x100,0xffffffffffffff28(%rbp)
    105b:	01 00 00 
    105e:	48 8d b5 10 ff ff ff 	lea    0xffffffffffffff10(%rbp),%rsi
    1065:	48 c7 85 20 ff ff ff 	movq   $0x0,0xffffffffffffff20(%rbp)
    106c:	00 00 00 00 
			106c: R_X86_64_32S	str_733826661
    1070:	48 c7 85 18 ff ff ff 	movq   $0x0,0xffffffffffffff18(%rbp)
    1077:	00 00 00 00 
			1077: R_X86_64_32S	str_504221539
    107b:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1080:	83 f8 04             	cmp    $0x4,%eax
    1083:	c7 85 10 ff ff ff 01 	movl   $0x1,0xffffffffffffff10(%rbp)
    108a:	00 00 00 
    108d:	19 c0                	sbb    %eax,%eax
    108f:	25 00 f1 ff ff       	and    $0xfffff100,%eax
    1094:	05 00 10 00 00       	add    $0x1000,%eax
    1099:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 10a0 <e1000_probe+0x8b2>
			109c: R_X86_64_PC32	.bss+0x288
    10a0:	89 85 34 ff ff ff    	mov    %eax,0xffffffffffffff34(%rbp)
    10a6:	fc                   	cld    
    10a7:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    10a9:	76 2b                	jbe    10d6 <e1000_probe+0x8e8>
    10ab:	49 63 c4             	movslq %r12d,%rax
    10ae:	48 8d 7b 14          	lea    0x14(%rbx),%rdi
    10b2:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    10b9:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			10bc: R_X86_64_32S	.devinit.data+0x780
    10c0:	4c 89 ea             	mov    %r13,%rdx
    10c3:	89 43 14             	mov    %eax,0x14(%rbx)
    10c6:	e8 35 ef ff ff       	callq  0 <e1000_validate_option>
    10cb:	8b 43 14             	mov    0x14(%rbx),%eax
    10ce:	83 c0 07             	add    $0x7,%eax
    10d1:	83 e0 f8             	and    $0xfffffffffffffff8,%eax
    10d4:	eb 03                	jmp    10d9 <e1000_probe+0x8eb>
    10d6:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    10d9:	89 43 14             	mov    %eax,0x14(%rbx)
    10dc:	31 c9                	xor    %ecx,%ecx
    10de:	41 3b 8d b4 02 00 00 	cmp    0x2b4(%r13),%ecx
    10e5:	7d 12                	jge    10f9 <e1000_probe+0x90b>
    10e7:	48 63 c1             	movslq %ecx,%rax
    10ea:	8b 53 14             	mov    0x14(%rbx),%edx
    10ed:	ff c1                	inc    %ecx
    10ef:	48 6b c0 30          	imul   $0x30,%rax,%rax
    10f3:	89 54 03 14          	mov    %edx,0x14(%rbx,%rax,1)
    10f7:	eb e5                	jmp    10de <e1000_probe+0x8f0>
    10f9:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 1100 <e1000_probe+0x912>
			10fc: R_X86_64_PC32	.bss+0x29c
    1100:	c7 85 00 ff ff ff 00 	movl   $0x0,0xffffffffffffff00(%rbp)
    1107:	00 00 00 
    110a:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    1111:	48 c7 85 08 ff ff ff 	movq   $0x0,0xffffffffffffff08(%rbp)
    1118:	00 00 00 00 
    111c:	c7 85 f8 fe ff ff 01 	movl   $0x1,0xfffffffffffffef8(%rbp)
    1123:	00 00 00 
    1126:	48 8d b5 e0 fe ff ff 	lea    0xfffffffffffffee0(%rbp),%rsi
    112d:	48 c7 85 f0 fe ff ff 	movq   $0x0,0xfffffffffffffef0(%rbp)
    1134:	00 00 00 00 
			1134: R_X86_64_32S	str_124417679
    1138:	48 c7 85 e8 fe ff ff 	movq   $0x0,0xfffffffffffffee8(%rbp)
    113f:	00 00 00 00 
			113f: R_X86_64_32S	str_989007692
    1143:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1148:	c7 85 e0 fe ff ff 00 	movl   $0x0,0xfffffffffffffee0(%rbp)
    114f:	00 00 00 
    1152:	fc                   	cld    
    1153:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1155:	76 26                	jbe    117d <e1000_probe+0x98f>
    1157:	49 63 c4             	movslq %r12d,%rax
    115a:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    1161:	48 8d 7d c8          	lea    0xffffffffffffffc8(%rbp),%rdi
    1165:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1168: R_X86_64_32S	.devinit.data+0x460
    116c:	4c 89 ea             	mov    %r13,%rdx
    116f:	89 45 c8             	mov    %eax,0xffffffffffffffc8(%rbp)
    1172:	e8 89 ee ff ff       	callq  0 <e1000_validate_option>
    1177:	83 7d c8 00          	cmpl   $0x0,0xffffffffffffffc8(%rbp)
    117b:	eb 04                	jmp    1181 <e1000_probe+0x993>
    117d:	83 7d 88 00          	cmpl   $0x0,0xffffffffffffff88(%rbp)
    1181:	41 0f 95 85 dc 02 00 	setne  0x2dc(%r13)
    1188:	00 
    1189:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 1190 <e1000_probe+0x9a2>
			118c: R_X86_64_PC32	.bss+0x298
    1190:	48 8d 85 50 fc ff ff 	lea    0xfffffffffffffc50(%rbp),%rax
    1197:	c7 85 50 fc ff ff 00 	movl   $0x0,0xfffffffffffffc50(%rbp)
    119e:	00 00 00 
    11a1:	48 c7 85 58 fc ff ff 	movq   $0x0,0xfffffffffffffc58(%rbp)
    11a8:	00 00 00 00 
			11a8: R_X86_64_32S	str_463534873
    11ac:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    11b3:	c7 85 60 fc ff ff 01 	movl   $0x1,0xfffffffffffffc60(%rbp)
    11ba:	00 00 00 
    11bd:	48 c7 85 68 fc ff ff 	movq   $0x0,0xfffffffffffffc68(%rbp)
    11c4:	00 00 00 00 
			11c4: R_X86_64_32S	str_915785734
    11c8:	48 8d b5 b0 fe ff ff 	lea    0xfffffffffffffeb0(%rbp),%rsi
    11cf:	c7 85 70 fc ff ff 02 	movl   $0x2,0xfffffffffffffc70(%rbp)
    11d6:	00 00 00 
    11d9:	48 c7 85 78 fc ff ff 	movq   $0x0,0xfffffffffffffc78(%rbp)
    11e0:	00 00 00 00 
			11e0: R_X86_64_32S	str_411463795
    11e4:	b9 0c 00 00 00       	mov    $0xc,%ecx
    11e9:	c7 85 80 fc ff ff 03 	movl   $0x3,0xfffffffffffffc80(%rbp)
    11f0:	00 00 00 
    11f3:	48 c7 85 88 fc ff ff 	movq   $0x0,0xfffffffffffffc88(%rbp)
    11fa:	00 00 00 00 
			11fa: R_X86_64_32S	str_81487500
    11fe:	c7 85 90 fc ff ff ff 	movl   $0xff,0xfffffffffffffc90(%rbp)
    1205:	00 00 00 
    1208:	48 c7 85 98 fc ff ff 	movq   $0x0,0xfffffffffffffc98(%rbp)
    120f:	00 00 00 00 
			120f: R_X86_64_32S	str_128149890
    1213:	c7 85 d0 fe ff ff 05 	movl   $0x5,0xfffffffffffffed0(%rbp)
    121a:	00 00 00 
    121d:	48 89 85 d8 fe ff ff 	mov    %rax,0xfffffffffffffed8(%rbp)
    1224:	c7 85 c8 fe ff ff ff 	movl   $0xff,0xfffffffffffffec8(%rbp)
    122b:	00 00 00 
    122e:	48 c7 85 c0 fe ff ff 	movq   $0x0,0xfffffffffffffec0(%rbp)
    1235:	00 00 00 00 
			1235: R_X86_64_32S	str_65233932
    1239:	48 c7 85 b8 fe ff ff 	movq   $0x0,0xfffffffffffffeb8(%rbp)
    1240:	00 00 00 00 
			1240: R_X86_64_32S	str_113262351
    1244:	c7 85 b0 fe ff ff 02 	movl   $0x2,0xfffffffffffffeb0(%rbp)
    124b:	00 00 00 
    124e:	fc                   	cld    
    124f:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1251:	76 25                	jbe    1278 <e1000_probe+0xa8a>
    1253:	49 63 c4             	movslq %r12d,%rax
    1256:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    125d:	48 8d 7d c4          	lea    0xffffffffffffffc4(%rbp),%rdi
    1261:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1264: R_X86_64_32S	.devinit.data+0x500
    1268:	4c 89 ea             	mov    %r13,%rdx
    126b:	89 45 c4             	mov    %eax,0xffffffffffffffc4(%rbp)
    126e:	e8 8d ed ff ff       	callq  0 <e1000_validate_option>
    1273:	8b 45 c4             	mov    0xffffffffffffffc4(%rbp),%eax
    1276:	eb 03                	jmp    127b <e1000_probe+0xa8d>
    1278:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    127b:	41 89 85 44 04 00 00 	mov    %eax,0x444(%r13)
    1282:	41 89 85 f0 03 00 00 	mov    %eax,0x3f0(%r13)
    1289:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    1290:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 1297 <e1000_probe+0xaa9>
			1293: R_X86_64_PC32	.bss+0x2a0
    1297:	c7 85 a0 fe ff ff 00 	movl   $0x0,0xfffffffffffffea0(%rbp)
    129e:	00 00 00 
    12a1:	48 8d b5 80 fe ff ff 	lea    0xfffffffffffffe80(%rbp),%rsi
    12a8:	c7 85 a4 fe ff ff ff 	movl   $0xffff,0xfffffffffffffea4(%rbp)
    12af:	ff 00 00 
    12b2:	c7 85 98 fe ff ff 08 	movl   $0x8,0xfffffffffffffe98(%rbp)
    12b9:	00 00 00 
    12bc:	b9 0c 00 00 00       	mov    $0xc,%ecx
    12c1:	48 c7 85 90 fe ff ff 	movq   $0x0,0xfffffffffffffe90(%rbp)
    12c8:	00 00 00 00 
			12c8: R_X86_64_32S	str_793210950
    12cc:	48 c7 85 88 fe ff ff 	movq   $0x0,0xfffffffffffffe88(%rbp)
    12d3:	00 00 00 00 
			12d3: R_X86_64_32S	str_991220654
    12d7:	c7 85 80 fe ff ff 01 	movl   $0x1,0xfffffffffffffe80(%rbp)
    12de:	00 00 00 
    12e1:	fc                   	cld    
    12e2:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    12e4:	76 29                	jbe    130f <e1000_probe+0xb21>
    12e6:	49 63 c4             	movslq %r12d,%rax
    12e9:	49 8d bd cc 01 00 00 	lea    0x1cc(%r13),%rdi
    12f0:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    12f7:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			12fa: R_X86_64_32S	.devinit.data+0x3c0
    12fe:	4c 89 ea             	mov    %r13,%rdx
    1301:	41 89 85 cc 01 00 00 	mov    %eax,0x1cc(%r13)
    1308:	e8 f3 ec ff ff       	callq  0 <e1000_validate_option>
    130d:	eb 0a                	jmp    1319 <e1000_probe+0xb2b>
    130f:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    1312:	41 89 85 cc 01 00 00 	mov    %eax,0x1cc(%r13)
    1319:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 1320 <e1000_probe+0xb32>
			131c: R_X86_64_PC32	.bss+0x2a4
    1320:	c7 85 70 fe ff ff 00 	movl   $0x0,0xfffffffffffffe70(%rbp)
    1327:	00 00 00 
    132a:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    1331:	c7 85 74 fe ff ff ff 	movl   $0xffff,0xfffffffffffffe74(%rbp)
    1338:	ff 00 00 
    133b:	c7 85 68 fe ff ff 20 	movl   $0x20,0xfffffffffffffe68(%rbp)
    1342:	00 00 00 
    1345:	48 8d b5 50 fe ff ff 	lea    0xfffffffffffffe50(%rbp),%rsi
    134c:	48 c7 85 60 fe ff ff 	movq   $0x0,0xfffffffffffffe60(%rbp)
    1353:	00 00 00 00 
			1353: R_X86_64_32S	str_38622469
    1357:	48 c7 85 58 fe ff ff 	movq   $0x0,0xfffffffffffffe58(%rbp)
    135e:	00 00 00 00 
			135e: R_X86_64_32S	str_894216477
    1362:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1367:	c7 85 50 fe ff ff 01 	movl   $0x1,0xfffffffffffffe50(%rbp)
    136e:	00 00 00 
    1371:	fc                   	cld    
    1372:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1374:	76 29                	jbe    139f <e1000_probe+0xbb1>
    1376:	49 63 c4             	movslq %r12d,%rax
    1379:	49 8d bd d0 01 00 00 	lea    0x1d0(%r13),%rdi
    1380:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    1387:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			138a: R_X86_64_32S	.devinit.data+0x320
    138e:	4c 89 ea             	mov    %r13,%rdx
    1391:	41 89 85 d0 01 00 00 	mov    %eax,0x1d0(%r13)
    1398:	e8 63 ec ff ff       	callq  0 <e1000_validate_option>
    139d:	eb 0a                	jmp    13a9 <e1000_probe+0xbbb>
    139f:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    13a2:	41 89 85 d0 01 00 00 	mov    %eax,0x1d0(%r13)
    13a9:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 13b0 <e1000_probe+0xbc2>
			13ac: R_X86_64_PC32	.bss+0x2a8
    13b0:	c7 85 40 fe ff ff 00 	movl   $0x0,0xfffffffffffffe40(%rbp)
    13b7:	00 00 00 
    13ba:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    13c1:	c7 85 44 fe ff ff ff 	movl   $0xffff,0xfffffffffffffe44(%rbp)
    13c8:	ff 00 00 
    13cb:	c7 85 38 fe ff ff 00 	movl   $0x0,0xfffffffffffffe38(%rbp)
    13d2:	00 00 00 
    13d5:	48 8d b5 20 fe ff ff 	lea    0xfffffffffffffe20(%rbp),%rsi
    13dc:	48 c7 85 30 fe ff ff 	movq   $0x0,0xfffffffffffffe30(%rbp)
    13e3:	00 00 00 00 
			13e3: R_X86_64_32S	str_793210942
    13e7:	48 c7 85 28 fe ff ff 	movq   $0x0,0xfffffffffffffe28(%rbp)
    13ee:	00 00 00 00 
			13ee: R_X86_64_32S	str_693100397
    13f2:	b9 0c 00 00 00       	mov    $0xc,%ecx
    13f7:	c7 85 20 fe ff ff 01 	movl   $0x1,0xfffffffffffffe20(%rbp)
    13fe:	00 00 00 
    1401:	fc                   	cld    
    1402:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1404:	76 29                	jbe    142f <e1000_probe+0xc41>
    1406:	49 63 c4             	movslq %r12d,%rax
    1409:	49 8d bd d4 02 00 00 	lea    0x2d4(%r13),%rdi
    1410:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    1417:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			141a: R_X86_64_32S	.devinit.data+0x280
    141e:	4c 89 ea             	mov    %r13,%rdx
    1421:	41 89 85 d4 02 00 00 	mov    %eax,0x2d4(%r13)
    1428:	e8 d3 eb ff ff       	callq  0 <e1000_validate_option>
    142d:	eb 0a                	jmp    1439 <e1000_probe+0xc4b>
    142f:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    1432:	41 89 85 d4 02 00 00 	mov    %eax,0x2d4(%r13)
    1439:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 1440 <e1000_probe+0xc52>
			143c: R_X86_64_PC32	.bss+0x2ac
    1440:	c7 85 10 fe ff ff 00 	movl   $0x0,0xfffffffffffffe10(%rbp)
    1447:	00 00 00 
    144a:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    1451:	c7 85 14 fe ff ff ff 	movl   $0xffff,0xfffffffffffffe14(%rbp)
    1458:	ff 00 00 
    145b:	c7 85 08 fe ff ff 08 	movl   $0x8,0xfffffffffffffe08(%rbp)
    1462:	00 00 00 
    1465:	48 8d b5 f0 fd ff ff 	lea    0xfffffffffffffdf0(%rbp),%rsi
    146c:	48 c7 85 00 fe ff ff 	movq   $0x0,0xfffffffffffffe00(%rbp)
    1473:	00 00 00 00 
			1473: R_X86_64_32S	str_793210950
    1477:	48 c7 85 f8 fd ff ff 	movq   $0x0,0xfffffffffffffdf8(%rbp)
    147e:	00 00 00 00 
			147e: R_X86_64_32S	str_392604906
    1482:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1487:	c7 85 f0 fd ff ff 01 	movl   $0x1,0xfffffffffffffdf0(%rbp)
    148e:	00 00 00 
    1491:	fc                   	cld    
    1492:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1494:	76 29                	jbe    14bf <e1000_probe+0xcd1>
    1496:	49 63 c4             	movslq %r12d,%rax
    1499:	49 8d bd d8 02 00 00 	lea    0x2d8(%r13),%rdi
    14a0:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    14a7:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			14aa: R_X86_64_32S	.devinit.data+0x1e0
    14ae:	4c 89 ea             	mov    %r13,%rdx
    14b1:	41 89 85 d8 02 00 00 	mov    %eax,0x2d8(%r13)
    14b8:	e8 43 eb ff ff       	callq  0 <e1000_validate_option>
    14bd:	eb 0a                	jmp    14c9 <e1000_probe+0xcdb>
    14bf:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    14c2:	41 89 85 d8 02 00 00 	mov    %eax,0x2d8(%r13)
    14c9:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 14d0 <e1000_probe+0xce2>
			14cc: R_X86_64_PC32	.bss+0x2b0
    14d0:	c7 85 e0 fd ff ff 64 	movl   $0x64,0xfffffffffffffde0(%rbp)
    14d7:	00 00 00 
    14da:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    14e1:	c7 85 e4 fd ff ff a0 	movl   $0x186a0,0xfffffffffffffde4(%rbp)
    14e8:	86 01 00 
    14eb:	c7 85 d8 fd ff ff 03 	movl   $0x3,0xfffffffffffffdd8(%rbp)
    14f2:	00 00 00 
    14f5:	48 8d b5 c0 fd ff ff 	lea    0xfffffffffffffdc0(%rbp),%rsi
    14fc:	48 c7 85 d0 fd ff ff 	movq   $0x0,0xfffffffffffffdd0(%rbp)
    1503:	00 00 00 00 
			1503: R_X86_64_32S	str_793210945
    1507:	48 c7 85 c8 fd ff ff 	movq   $0x0,0xfffffffffffffdc8(%rbp)
    150e:	00 00 00 00 
			150e: R_X86_64_32S	str_703943395
    1512:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1517:	c7 85 c0 fd ff ff 01 	movl   $0x1,0xfffffffffffffdc0(%rbp)
    151e:	00 00 00 
    1521:	fc                   	cld    
    1522:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1524:	0f 86 e2 00 00 00    	jbe    160c <e1000_probe+0xe1e>
    152a:	49 63 c4             	movslq %r12d,%rax
    152d:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1530: R_X86_64_32S	.devinit.data+0x140
    1534:	85 c0                	test   %eax,%eax
    1536:	41 89 85 28 01 00 00 	mov    %eax,0x128(%r13)
    153d:	74 10                	je     154f <e1000_probe+0xd61>
    153f:	83 f8 01             	cmp    $0x1,%eax
    1542:	74 41                	je     1585 <e1000_probe+0xd97>
    1544:	83 f8 03             	cmp    $0x3,%eax
    1547:	0f 85 96 00 00 00    	jne    15e3 <e1000_probe+0xdf5>
    154d:	eb 5e                	jmp    15ad <e1000_probe+0xdbf>
    154f:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1556:	02 
    1557:	0f 84 c4 00 00 00    	je     1621 <e1000_probe+0xe33>
    155d:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1564:	48 8b 8d 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rcx
    156b:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			156e: R_X86_64_32S	str_423800896
    1572:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1575: R_X86_64_32S	str_239057043
    1579:	31 c0                	xor    %eax,%eax
    157b:	e8 00 00 00 00       	callq  1580 <e1000_probe+0xd92>
			157c: R_X86_64_PC32	printk+0xfffffffffffffffc
    1580:	e9 9c 00 00 00       	jmpq   1621 <e1000_probe+0xe33>
    1585:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    158c:	02 
    158d:	74 4b                	je     15da <e1000_probe+0xdec>
    158f:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1596:	48 8b 8d 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rcx
    159d:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			15a0: R_X86_64_32S	str_423800896
    15a4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15a7: R_X86_64_32S	str_409120539
    15ab:	eb 26                	jmp    15d3 <e1000_probe+0xde5>
    15ad:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    15b4:	02 
    15b5:	74 23                	je     15da <e1000_probe+0xdec>
    15b7:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    15be:	48 8b 8d 78 ff ff ff 	mov    0xffffffffffffff78(%rbp),%rcx
    15c5:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			15c8: R_X86_64_32S	str_423800896
    15cc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			15cf: R_X86_64_32S	str_31269152
    15d3:	31 c0                	xor    %eax,%eax
    15d5:	e8 00 00 00 00       	callq  15da <e1000_probe+0xdec>
			15d6: R_X86_64_PC32	printk+0xfffffffffffffffc
    15da:	41 8b 85 28 01 00 00 	mov    0x128(%r13),%eax
    15e1:	eb 2c                	jmp    160f <e1000_probe+0xe21>
    15e3:	49 8d bd 28 01 00 00 	lea    0x128(%r13),%rdi
    15ea:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    15f1:	4c 89 ea             	mov    %r13,%rdx
    15f4:	e8 07 ea ff ff       	callq  0 <e1000_validate_option>
    15f9:	41 8b 85 28 01 00 00 	mov    0x128(%r13),%eax
    1600:	83 e0 fc             	and    $0xfffffffffffffffc,%eax
    1603:	41 89 85 2c 01 00 00 	mov    %eax,0x12c(%r13)
    160a:	eb 15                	jmp    1621 <e1000_probe+0xe33>
    160c:	8b 45 88             	mov    0xffffffffffffff88(%rbp),%eax
    160f:	41 89 85 2c 01 00 00 	mov    %eax,0x12c(%r13)
    1616:	41 c7 85 28 01 00 00 	movl   $0x4e20,0x128(%r13)
    161d:	20 4e 00 00 
    1621:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 1628 <e1000_probe+0xe3a>
			1624: R_X86_64_PC32	.bss+0x2b4
    1628:	c7 85 b0 fd ff ff 00 	movl   $0x0,0xfffffffffffffdb0(%rbp)
    162f:	00 00 00 
    1632:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    1639:	48 c7 85 b8 fd ff ff 	movq   $0x0,0xfffffffffffffdb8(%rbp)
    1640:	00 00 00 00 
    1644:	c7 85 a8 fd ff ff 00 	movl   $0x0,0xfffffffffffffda8(%rbp)
    164b:	00 00 00 
    164e:	48 8d b5 90 fd ff ff 	lea    0xfffffffffffffd90(%rbp),%rsi
    1655:	48 c7 85 a0 fd ff ff 	movq   $0x0,0xfffffffffffffda0(%rbp)
    165c:	00 00 00 00 
			165c: R_X86_64_32S	str_205466450
    1660:	48 c7 85 98 fd ff ff 	movq   $0x0,0xfffffffffffffd98(%rbp)
    1667:	00 00 00 00 
			1667: R_X86_64_32S	str_58884767
    166b:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1670:	c7 85 90 fd ff ff 00 	movl   $0x0,0xfffffffffffffd90(%rbp)
    1677:	00 00 00 
    167a:	fc                   	cld    
    167b:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    167d:	76 26                	jbe    16a5 <e1000_probe+0xeb7>
    167f:	49 63 c4             	movslq %r12d,%rax
    1682:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    1689:	48 8d 7d c0          	lea    0xffffffffffffffc0(%rbp),%rdi
    168d:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1690: R_X86_64_32S	.devinit.data+0xa0
    1694:	4c 89 ea             	mov    %r13,%rdx
    1697:	89 45 c0             	mov    %eax,0xffffffffffffffc0(%rbp)
    169a:	e8 61 e9 ff ff       	callq  0 <e1000_validate_option>
    169f:	83 7d c0 00          	cmpl   $0x0,0xffffffffffffffc0(%rbp)
    16a3:	eb 04                	jmp    16a9 <e1000_probe+0xebb>
    16a5:	83 7d 88 00          	cmpl   $0x0,0xffffffffffffff88(%rbp)
    16a9:	41 0f 95 85 c6 07 00 	setne  0x7c6(%r13)
    16b0:	00 
    16b1:	44 39 25 00 00 00 00 	cmp    %r12d,0(%rip)        # 16b8 <e1000_probe+0xeca>
			16b4: R_X86_64_PC32	.bss+0x2b8
    16b8:	48 8d bd 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rdi
    16bf:	c7 85 80 fd ff ff 00 	movl   $0x0,0xfffffffffffffd80(%rbp)
    16c6:	00 00 00 
    16c9:	48 c7 85 88 fd ff ff 	movq   $0x0,0xfffffffffffffd88(%rbp)
    16d0:	00 00 00 00 
    16d4:	48 8d b5 60 fd ff ff 	lea    0xfffffffffffffd60(%rbp),%rsi
    16db:	c7 85 78 fd ff ff 01 	movl   $0x1,0xfffffffffffffd78(%rbp)
    16e2:	00 00 00 
    16e5:	48 c7 85 70 fd ff ff 	movq   $0x0,0xfffffffffffffd70(%rbp)
    16ec:	00 00 00 00 
			16ec: R_X86_64_32S	str_124417679
    16f0:	b9 0c 00 00 00       	mov    $0xc,%ecx
    16f5:	48 c7 85 68 fd ff ff 	movq   $0x0,0xfffffffffffffd68(%rbp)
    16fc:	00 00 00 00 
			16fc: R_X86_64_32S	str_2539257
    1700:	c7 85 60 fd ff ff 00 	movl   $0x0,0xfffffffffffffd60(%rbp)
    1707:	00 00 00 
    170a:	fc                   	cld    
    170b:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    170d:	76 26                	jbe    1735 <e1000_probe+0xf47>
    170f:	49 63 c4             	movslq %r12d,%rax
    1712:	48 8d b5 70 ff ff ff 	lea    0xffffffffffffff70(%rbp),%rsi
    1719:	48 8d 7d bc          	lea    0xffffffffffffffbc(%rbp),%rdi
    171d:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1720: R_X86_64_32S	.devinit.data
    1724:	4c 89 ea             	mov    %r13,%rdx
    1727:	89 45 bc             	mov    %eax,0xffffffffffffffbc(%rbp)
    172a:	e8 d1 e8 ff ff       	callq  0 <e1000_validate_option>
    172f:	83 7d bc 00          	cmpl   $0x0,0xffffffffffffffbc(%rbp)
    1733:	eb 04                	jmp    1739 <e1000_probe+0xf4b>
    1735:	83 7d 88 00          	cmpl   $0x0,0xffffffffffffff88(%rbp)
    1739:	41 8b 85 d4 03 00 00 	mov    0x3d4(%r13),%eax
    1740:	41 0f 94 85 d3 04 00 	sete   0x4d3(%r13)
    1747:	00 
    1748:	83 f8 01             	cmp    $0x1,%eax
    174b:	74 12                	je     175f <e1000_probe+0xf71>
    174d:	83 f8 02             	cmp    $0x2,%eax
    1750:	74 0d                	je     175f <e1000_probe+0xf71>
    1752:	85 c0                	test   %eax,%eax
    1754:	0f 85 66 07 00 00    	jne    1ec0 <e1000_probe+0x16d2>
    175a:	e9 b4 00 00 00       	jmpq   1813 <e1000_probe+0x1025>
    175f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1762: R_X86_64_32S	.rodata.str1.1+0x3a32
    1766:	e8 00 00 00 00       	callq  176b <e1000_probe+0xf7d>
			1767: R_X86_64_PC32	record_function+0xfffffffffffffffc
    176b:	41 8b 9d 9c 00 00 00 	mov    0x9c(%r13),%ebx
    1772:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 1778 <e1000_probe+0xf8a>
			1774: R_X86_64_PC32	.bss+0x28c
    1778:	76 26                	jbe    17a0 <e1000_probe+0xfb2>
    177a:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1781:	02 
    1782:	74 1c                	je     17a0 <e1000_probe+0xfb2>
    1784:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    178b:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			178e: R_X86_64_32S	str_672482465
    1792:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1795: R_X86_64_32S	str_244942894
    1799:	31 c0                	xor    %eax,%eax
    179b:	e8 00 00 00 00       	callq  17a0 <e1000_probe+0xfb2>
			179c: R_X86_64_PC32	printk+0xfffffffffffffffc
    17a0:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 17a6 <e1000_probe+0xfb8>
			17a2: R_X86_64_PC32	.bss+0x290
    17a6:	76 26                	jbe    17ce <e1000_probe+0xfe0>
    17a8:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    17af:	02 
    17b0:	74 1c                	je     17ce <e1000_probe+0xfe0>
    17b2:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    17b9:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			17bc: R_X86_64_32S	str_672482465
    17c0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17c3: R_X86_64_32S	str_745508101
    17c7:	31 c0                	xor    %eax,%eax
    17c9:	e8 00 00 00 00       	callq  17ce <e1000_probe+0xfe0>
			17ca: R_X86_64_PC32	printk+0xfffffffffffffffc
    17ce:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 17d4 <e1000_probe+0xfe6>
			17d0: R_X86_64_PC32	.bss+0x294
    17d4:	0f 86 ea 06 00 00    	jbe    1ec4 <e1000_probe+0x16d6>
    17da:	48 63 c3             	movslq %ebx,%rax
    17dd:	83 3c 85 00 00 00 00 	cmpl   $0x20,0x0(,%rax,4)
    17e4:	20 
			17e0: R_X86_64_32S	.devinit.data+0x5a0
    17e5:	0f 84 d9 06 00 00    	je     1ec4 <e1000_probe+0x16d6>
    17eb:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    17f2:	02 
    17f3:	0f 84 cb 06 00 00    	je     1ec4 <e1000_probe+0x16d6>
    17f9:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1800:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1803: R_X86_64_32S	str_672482465
    1807:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			180a: R_X86_64_32S	str_25184998
    180e:	e9 a4 06 00 00       	jmpq   1eb7 <e1000_probe+0x16c9>
    1813:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1816: R_X86_64_32S	.rodata.str1.1+0x3a4c
    181a:	e8 00 00 00 00       	callq  181f <e1000_probe+0x1031>
			181b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    181f:	41 8b 9d 9c 00 00 00 	mov    0x9c(%r13),%ebx
    1826:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 182c <e1000_probe+0x103e>
			1828: R_X86_64_PC32	.bss+0x28c
    182c:	48 8d bd 30 fd ff ff 	lea    0xfffffffffffffd30(%rbp),%rdi
    1833:	c7 85 20 fd ff ff 04 	movl   $0x4,0xfffffffffffffd20(%rbp)
    183a:	00 00 00 
    183d:	48 c7 85 28 fd ff ff 	movq   $0x0,0xfffffffffffffd28(%rbp)
    1844:	00 00 00 00 
			1844: R_X86_64_32S	.data+0x3dce0
    1848:	48 8d b5 00 fd ff ff 	lea    0xfffffffffffffd00(%rbp),%rsi
    184f:	c7 85 18 fd ff ff 00 	movl   $0x0,0xfffffffffffffd18(%rbp)
    1856:	00 00 00 
    1859:	48 c7 85 10 fd ff ff 	movq   $0x0,0xfffffffffffffd10(%rbp)
    1860:	00 00 00 00 
			1860: R_X86_64_32S	str_928053687
    1864:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1869:	48 c7 85 08 fd ff ff 	movq   $0x0,0xfffffffffffffd08(%rbp)
    1870:	00 00 00 00 
			1870: R_X86_64_32S	str_11623331
    1874:	c7 85 00 fd ff ff 02 	movl   $0x2,0xfffffffffffffd00(%rbp)
    187b:	00 00 00 
    187e:	fc                   	cld    
    187f:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1881:	76 22                	jbe    18a5 <e1000_probe+0x10b7>
    1883:	48 63 c3             	movslq %ebx,%rax
    1886:	48 8d b5 30 fd ff ff 	lea    0xfffffffffffffd30(%rbp),%rsi
    188d:	48 8d 7d b8          	lea    0xffffffffffffffb8(%rbp),%rdi
    1891:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1894: R_X86_64_32S	.devinit.data+0x6e0
    1898:	4c 89 ea             	mov    %r13,%rdx
    189b:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    189e:	e8 5d e7 ff ff       	callq  0 <e1000_validate_option>
    18a3:	eb 09                	jmp    18ae <e1000_probe+0x10c0>
    18a5:	8b 85 48 fd ff ff    	mov    0xfffffffffffffd48(%rbp),%eax
    18ab:	89 45 b8             	mov    %eax,0xffffffffffffffb8(%rbp)
    18ae:	c7 85 f0 fc ff ff 03 	movl   $0x3,0xfffffffffffffcf0(%rbp)
    18b5:	00 00 00 
    18b8:	48 c7 85 f8 fc ff ff 	movq   $0x0,0xfffffffffffffcf8(%rbp)
    18bf:	00 00 00 00 
			18bf: R_X86_64_32S	.data+0x3dd60
    18c3:	48 8d bd 30 fd ff ff 	lea    0xfffffffffffffd30(%rbp),%rdi
    18ca:	c7 85 e8 fc ff ff 00 	movl   $0x0,0xfffffffffffffce8(%rbp)
    18d1:	00 00 00 
    18d4:	48 c7 85 e0 fc ff ff 	movq   $0x0,0xfffffffffffffce0(%rbp)
    18db:	00 00 00 00 
			18db: R_X86_64_32S	str_928053687
    18df:	48 8d b5 d0 fc ff ff 	lea    0xfffffffffffffcd0(%rbp),%rsi
    18e6:	48 c7 85 d8 fc ff ff 	movq   $0x0,0xfffffffffffffcd8(%rbp)
    18ed:	00 00 00 00 
			18ed: R_X86_64_32S	str_184431524
    18f1:	c7 85 d0 fc ff ff 02 	movl   $0x2,0xfffffffffffffcd0(%rbp)
    18f8:	00 00 00 
    18fb:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1900:	fc                   	cld    
    1901:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1903:	49 8d bd b8 03 00 00 	lea    0x3b8(%r13),%rdi
    190a:	e8 00 00 00 00       	callq  190f <e1000_probe+0x1121>
			190b: R_X86_64_PC32	.text+0x110
    190f:	85 c0                	test   %eax,%eax
    1911:	74 28                	je     193b <e1000_probe+0x114d>
    1913:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    191a:	02 
    191b:	0f 84 a3 05 00 00    	je     1ec4 <e1000_probe+0x16d6>
    1921:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1928:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			192b: R_X86_64_32S	str_788695754
    192f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1932: R_X86_64_32S	str_117827335
    1936:	e9 7c 05 00 00       	jmpq   1eb7 <e1000_probe+0x16c9>
    193b:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 1941 <e1000_probe+0x1153>
			193d: R_X86_64_PC32	.bss+0x290
    1941:	76 22                	jbe    1965 <e1000_probe+0x1177>
    1943:	48 63 c3             	movslq %ebx,%rax
    1946:	48 8d b5 30 fd ff ff 	lea    0xfffffffffffffd30(%rbp),%rsi
    194d:	48 8d 7d b4          	lea    0xffffffffffffffb4(%rbp),%rdi
    1951:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1954: R_X86_64_32S	.devinit.data+0x640
    1958:	4c 89 ea             	mov    %r13,%rdx
    195b:	89 45 b4             	mov    %eax,0xffffffffffffffb4(%rbp)
    195e:	e8 9d e6 ff ff       	callq  0 <e1000_validate_option>
    1963:	eb 09                	jmp    196e <e1000_probe+0x1180>
    1965:	8b 85 48 fd ff ff    	mov    0xfffffffffffffd48(%rbp),%eax
    196b:	89 45 b4             	mov    %eax,0xffffffffffffffb4(%rbp)
    196e:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 1974 <e1000_probe+0x1186>
			1970: R_X86_64_PC32	.bss+0x294
    1974:	76 41                	jbe    19b7 <e1000_probe+0x11c9>
    1976:	83 7d b8 00          	cmpl   $0x0,0xffffffffffffffb8(%rbp)
    197a:	75 06                	jne    1982 <e1000_probe+0x1194>
    197c:	83 7d b4 00          	cmpl   $0x0,0xffffffffffffffb4(%rbp)
    1980:	74 35                	je     19b7 <e1000_probe+0x11c9>
    1982:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1989:	02 
    198a:	74 1c                	je     19a8 <e1000_probe+0x11ba>
    198c:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1993:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1996: R_X86_64_32S	str_788695754
    199a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			199d: R_X86_64_32S	str_398459001
    19a1:	31 c0                	xor    %eax,%eax
    19a3:	e8 00 00 00 00       	callq  19a8 <e1000_probe+0x11ba>
			19a4: R_X86_64_PC32	printk+0xfffffffffffffffc
    19a8:	66 41 c7 85 8a 04 00 	movw   $0x2f,0x48a(%r13)
    19af:	00 2f 00 
    19b2:	e9 93 00 00 00       	jmpq   1a4a <e1000_probe+0x125c>
    19b7:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 19bd <e1000_probe+0x11cf>
			19b9: R_X86_64_PC32	.bss+0x294
    19bd:	c7 85 c0 fc ff ff 1f 	movl   $0x1f,0xfffffffffffffcc0(%rbp)
    19c4:	00 00 00 
    19c7:	48 8d bd 30 fd ff ff 	lea    0xfffffffffffffd30(%rbp),%rdi
    19ce:	48 c7 85 c8 fc ff ff 	movq   $0x0,0xfffffffffffffcc8(%rbp)
    19d5:	00 00 00 00 
			19d5: R_X86_64_32S	.data+0x3dea0
    19d9:	c7 85 b8 fc ff ff 2f 	movl   $0x2f,0xfffffffffffffcb8(%rbp)
    19e0:	00 00 00 
    19e3:	48 8d b5 a0 fc ff ff 	lea    0xfffffffffffffca0(%rbp),%rsi
    19ea:	48 c7 85 b0 fc ff ff 	movq   $0x0,0xfffffffffffffcb0(%rbp)
    19f1:	00 00 00 00 
			19f1: R_X86_64_32S	str_928053687
    19f5:	48 c7 85 a8 fc ff ff 	movq   $0x0,0xfffffffffffffca8(%rbp)
    19fc:	00 00 00 00 
			19fc: R_X86_64_32S	str_142369141
    1a00:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1a05:	c7 85 a0 fc ff ff 02 	movl   $0x2,0xfffffffffffffca0(%rbp)
    1a0c:	00 00 00 
    1a0f:	fc                   	cld    
    1a10:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    1a12:	76 22                	jbe    1a36 <e1000_probe+0x1248>
    1a14:	48 63 c3             	movslq %ebx,%rax
    1a17:	48 8d b5 30 fd ff ff 	lea    0xfffffffffffffd30(%rbp),%rsi
    1a1e:	48 8d 7d b0          	lea    0xffffffffffffffb0(%rbp),%rdi
    1a22:	8b 04 85 00 00 00 00 	mov    0x0(,%rax,4),%eax
			1a25: R_X86_64_32S	.devinit.data+0x5a0
    1a29:	4c 89 ea             	mov    %r13,%rdx
    1a2c:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
    1a2f:	e8 cc e5 ff ff       	callq  0 <e1000_validate_option>
    1a34:	eb 09                	jmp    1a3f <e1000_probe+0x1251>
    1a36:	8b 85 48 fd ff ff    	mov    0xfffffffffffffd48(%rbp),%eax
    1a3c:	89 45 b0             	mov    %eax,0xffffffffffffffb0(%rbp)
    1a3f:	8b 45 b0             	mov    0xffffffffffffffb0(%rbp),%eax
    1a42:	66 41 89 85 8a 04 00 	mov    %ax,0x48a(%r13)
    1a49:	00 
    1a4a:	8b 45 b8             	mov    0xffffffffffffffb8(%rbp),%eax
    1a4d:	03 45 b4             	add    0xffffffffffffffb4(%rbp),%eax
    1a50:	74 6e                	je     1ac0 <e1000_probe+0x12d2>
    1a52:	83 f8 01             	cmp    $0x1,%eax
    1a55:	0f 84 c0 00 00 00    	je     1b1b <e1000_probe+0x132d>
    1a5b:	83 f8 02             	cmp    $0x2,%eax
    1a5e:	0f 84 22 01 00 00    	je     1b86 <e1000_probe+0x1398>
    1a64:	83 f8 0a             	cmp    $0xa,%eax
    1a67:	0f 84 84 01 00 00    	je     1bf1 <e1000_probe+0x1403>
    1a6d:	83 f8 0b             	cmp    $0xb,%eax
    1a70:	0f 84 e6 01 00 00    	je     1c5c <e1000_probe+0x146e>
    1a76:	83 f8 0c             	cmp    $0xc,%eax
    1a79:	0f 84 20 02 00 00    	je     1c9f <e1000_probe+0x14b1>
    1a7f:	83 f8 64             	cmp    $0x64,%eax
    1a82:	0f 84 5a 02 00 00    	je     1ce2 <e1000_probe+0x14f4>
    1a88:	83 f8 65             	cmp    $0x65,%eax
    1a8b:	0f 84 bc 02 00 00    	je     1d4d <e1000_probe+0x155f>
    1a91:	83 f8 66             	cmp    $0x66,%eax
    1a94:	0f 84 f3 02 00 00    	je     1d8d <e1000_probe+0x159f>
    1a9a:	3d e8 03 00 00       	cmp    $0x3e8,%eax
    1a9f:	0f 84 35 03 00 00    	je     1dda <e1000_probe+0x15ec>
    1aa5:	3d e9 03 00 00       	cmp    $0x3e9,%eax
    1aaa:	0f 84 4b 03 00 00    	je     1dfb <e1000_probe+0x160d>
    1ab0:	3d ea 03 00 00       	cmp    $0x3ea,%eax
    1ab5:	0f 85 a8 03 00 00    	jne    1e63 <e1000_probe+0x1675>
    1abb:	e9 61 03 00 00       	jmpq   1e21 <e1000_probe+0x1633>
    1ac0:	41 c6 85 70 01 00 00 	movb   $0x1,0x170(%r13)
    1ac7:	01 
    1ac8:	41 c6 85 a7 04 00 00 	movb   $0x1,0x4a7(%r13)
    1acf:	01 
    1ad0:	39 1d 00 00 00 00    	cmp    %ebx,0(%rip)        # 1ad6 <e1000_probe+0x12e8>
			1ad2: R_X86_64_PC32	.bss+0x28c
    1ad6:	0f 86 8b 03 00 00    	jbe    1e67 <e1000_probe+0x1679>
    1adc:	83 7d b8 00          	cmpl   $0x0,0xffffffffffffffb8(%rbp)
    1ae0:	75 0a                	jne    1aec <e1000_probe+0x12fe>
    1ae2:	83 7d b4 00          	cmpl   $0x0,0xffffffffffffffb4(%rbp)
    1ae6:	0f 84 7b 03 00 00    	je     1e67 <e1000_probe+0x1679>
    1aec:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1af3:	02 
    1af4:	0f 84 6d 03 00 00    	je     1e67 <e1000_probe+0x1679>
    1afa:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1b01:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1b04: R_X86_64_32S	str_788695754
    1b08:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b0b: R_X86_64_32S	str_145641939
    1b0f:	31 c0                	xor    %eax,%eax
    1b11:	e8 00 00 00 00       	callq  1b16 <e1000_probe+0x1328>
			1b12: R_X86_64_PC32	printk+0xfffffffffffffffc
    1b16:	e9 4c 03 00 00       	jmpq   1e67 <e1000_probe+0x1679>
    1b1b:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1b22:	02 
    1b23:	74 1c                	je     1b41 <e1000_probe+0x1353>
    1b25:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1b2c:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1b2f: R_X86_64_32S	str_788695754
    1b33:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b36: R_X86_64_32S	str_33678196
    1b3a:	31 c0                	xor    %eax,%eax
    1b3c:	e8 00 00 00 00       	callq  1b41 <e1000_probe+0x1353>
			1b3d: R_X86_64_PC32	printk+0xfffffffffffffffc
    1b41:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1b48:	02 
    1b49:	74 1c                	je     1b67 <e1000_probe+0x1379>
    1b4b:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1b52:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1b55: R_X86_64_32S	str_788695754
    1b59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1b5c: R_X86_64_32S	str_467566158
    1b60:	31 c0                	xor    %eax,%eax
    1b62:	e8 00 00 00 00       	callq  1b67 <e1000_probe+0x1379>
			1b63: R_X86_64_PC32	printk+0xfffffffffffffffc
    1b67:	41 c6 85 70 01 00 00 	movb   $0x1,0x170(%r13)
    1b6e:	01 
    1b6f:	41 c6 85 a7 04 00 00 	movb   $0x1,0x4a7(%r13)
    1b76:	01 
    1b77:	66 41 c7 85 8a 04 00 	movw   $0x5,0x48a(%r13)
    1b7e:	00 05 00 
    1b81:	e9 e1 02 00 00       	jmpq   1e67 <e1000_probe+0x1679>
    1b86:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1b8d:	02 
    1b8e:	74 1c                	je     1bac <e1000_probe+0x13be>
    1b90:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1b97:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1b9a: R_X86_64_32S	str_788695754
    1b9e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ba1: R_X86_64_32S	str_112962584
    1ba5:	31 c0                	xor    %eax,%eax
    1ba7:	e8 00 00 00 00       	callq  1bac <e1000_probe+0x13be>
			1ba8: R_X86_64_PC32	printk+0xfffffffffffffffc
    1bac:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1bb3:	02 
    1bb4:	74 1c                	je     1bd2 <e1000_probe+0x13e4>
    1bb6:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1bbd:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1bc0: R_X86_64_32S	str_788695754
    1bc4:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1bc7: R_X86_64_32S	str_975076538
    1bcb:	31 c0                	xor    %eax,%eax
    1bcd:	e8 00 00 00 00       	callq  1bd2 <e1000_probe+0x13e4>
			1bce: R_X86_64_PC32	printk+0xfffffffffffffffc
    1bd2:	41 c6 85 70 01 00 00 	movb   $0x1,0x170(%r13)
    1bd9:	01 
    1bda:	41 c6 85 a7 04 00 00 	movb   $0x1,0x4a7(%r13)
    1be1:	01 
    1be2:	66 41 c7 85 8a 04 00 	movw   $0x2a,0x48a(%r13)
    1be9:	00 2a 00 
    1bec:	e9 76 02 00 00       	jmpq   1e67 <e1000_probe+0x1679>
    1bf1:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1bf8:	02 
    1bf9:	74 1c                	je     1c17 <e1000_probe+0x1429>
    1bfb:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1c02:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1c05: R_X86_64_32S	str_788695754
    1c09:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c0c: R_X86_64_32S	str_307332076
    1c10:	31 c0                	xor    %eax,%eax
    1c12:	e8 00 00 00 00       	callq  1c17 <e1000_probe+0x1429>
			1c13: R_X86_64_PC32	printk+0xfffffffffffffffc
    1c17:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1c1e:	02 
    1c1f:	74 1c                	je     1c3d <e1000_probe+0x144f>
    1c21:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1c28:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1c2b: R_X86_64_32S	str_788695754
    1c2f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c32: R_X86_64_32S	str_801995118
    1c36:	31 c0                	xor    %eax,%eax
    1c38:	e8 00 00 00 00       	callq  1c3d <e1000_probe+0x144f>
			1c39: R_X86_64_PC32	printk+0xfffffffffffffffc
    1c3d:	41 c6 85 70 01 00 00 	movb   $0x1,0x170(%r13)
    1c44:	01 
    1c45:	41 c6 85 a7 04 00 00 	movb   $0x1,0x4a7(%r13)
    1c4c:	01 
    1c4d:	66 41 c7 85 8a 04 00 	movw   $0x3,0x48a(%r13)
    1c54:	00 03 00 
    1c57:	e9 0b 02 00 00       	jmpq   1e67 <e1000_probe+0x1679>
    1c5c:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1c63:	02 
    1c64:	74 1c                	je     1c82 <e1000_probe+0x1494>
    1c66:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1c6d:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1c70: R_X86_64_32S	str_788695754
    1c74:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c77: R_X86_64_32S	str_168050951
    1c7b:	31 c0                	xor    %eax,%eax
    1c7d:	e8 00 00 00 00       	callq  1c82 <e1000_probe+0x1494>
			1c7e: R_X86_64_PC32	printk+0xfffffffffffffffc
    1c82:	41 c6 85 70 01 00 00 	movb   $0x0,0x170(%r13)
    1c89:	00 
    1c8a:	41 c6 85 a7 04 00 00 	movb   $0x0,0x4a7(%r13)
    1c91:	00 
    1c92:	41 c6 85 a9 04 00 00 	movb   $0x0,0x4a9(%r13)
    1c99:	00 
    1c9a:	e9 2c 01 00 00       	jmpq   1dcb <e1000_probe+0x15dd>
    1c9f:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1ca6:	02 
    1ca7:	74 1c                	je     1cc5 <e1000_probe+0x14d7>
    1ca9:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1cb0:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1cb3: R_X86_64_32S	str_788695754
    1cb7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cba: R_X86_64_32S	str_55986219
    1cbe:	31 c0                	xor    %eax,%eax
    1cc0:	e8 00 00 00 00       	callq  1cc5 <e1000_probe+0x14d7>
			1cc1: R_X86_64_PC32	printk+0xfffffffffffffffc
    1cc5:	41 c6 85 70 01 00 00 	movb   $0x0,0x170(%r13)
    1ccc:	00 
    1ccd:	41 c6 85 a7 04 00 00 	movb   $0x0,0x4a7(%r13)
    1cd4:	00 
    1cd5:	41 c6 85 a9 04 00 00 	movb   $0x1,0x4a9(%r13)
    1cdc:	01 
    1cdd:	e9 e9 00 00 00       	jmpq   1dcb <e1000_probe+0x15dd>
    1ce2:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1ce9:	02 
    1cea:	74 1c                	je     1d08 <e1000_probe+0x151a>
    1cec:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1cf3:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1cf6: R_X86_64_32S	str_788695754
    1cfa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1cfd: R_X86_64_32S	str_83054666
    1d01:	31 c0                	xor    %eax,%eax
    1d03:	e8 00 00 00 00       	callq  1d08 <e1000_probe+0x151a>
			1d04: R_X86_64_PC32	printk+0xfffffffffffffffc
    1d08:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1d0f:	02 
    1d10:	74 1c                	je     1d2e <e1000_probe+0x1540>
    1d12:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1d19:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1d1c: R_X86_64_32S	str_788695754
    1d20:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d23: R_X86_64_32S	str_817977790
    1d27:	31 c0                	xor    %eax,%eax
    1d29:	e8 00 00 00 00       	callq  1d2e <e1000_probe+0x1540>
			1d2a: R_X86_64_PC32	printk+0xfffffffffffffffc
    1d2e:	41 c6 85 70 01 00 00 	movb   $0x1,0x170(%r13)
    1d35:	01 
    1d36:	41 c6 85 a7 04 00 00 	movb   $0x1,0x4a7(%r13)
    1d3d:	01 
    1d3e:	66 41 c7 85 8a 04 00 	movw   $0xc,0x48a(%r13)
    1d45:	00 0c 00 
    1d48:	e9 1a 01 00 00       	jmpq   1e67 <e1000_probe+0x1679>
    1d4d:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1d54:	02 
    1d55:	74 1c                	je     1d73 <e1000_probe+0x1585>
    1d57:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1d5e:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1d61: R_X86_64_32S	str_788695754
    1d65:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1d68: R_X86_64_32S	str_578322891
    1d6c:	31 c0                	xor    %eax,%eax
    1d6e:	e8 00 00 00 00       	callq  1d73 <e1000_probe+0x1585>
			1d6f: R_X86_64_PC32	printk+0xfffffffffffffffc
    1d73:	41 c6 85 70 01 00 00 	movb   $0x0,0x170(%r13)
    1d7a:	00 
    1d7b:	41 c6 85 a7 04 00 00 	movb   $0x0,0x4a7(%r13)
    1d82:	00 
    1d83:	41 c6 85 a9 04 00 00 	movb   $0x2,0x4a9(%r13)
    1d8a:	02 
    1d8b:	eb 3e                	jmp    1dcb <e1000_probe+0x15dd>
    1d8d:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1d94:	02 
    1d95:	74 1c                	je     1db3 <e1000_probe+0x15c5>
    1d97:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1d9e:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1da1: R_X86_64_32S	str_788695754
    1da5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1da8: R_X86_64_32S	str_466258159
    1dac:	31 c0                	xor    %eax,%eax
    1dae:	e8 00 00 00 00       	callq  1db3 <e1000_probe+0x15c5>
			1daf: R_X86_64_PC32	printk+0xfffffffffffffffc
    1db3:	41 c6 85 70 01 00 00 	movb   $0x0,0x170(%r13)
    1dba:	00 
    1dbb:	41 c6 85 a7 04 00 00 	movb   $0x0,0x4a7(%r13)
    1dc2:	00 
    1dc3:	41 c6 85 a9 04 00 00 	movb   $0x3,0x4a9(%r13)
    1dca:	03 
    1dcb:	66 41 c7 85 8a 04 00 	movw   $0x0,0x48a(%r13)
    1dd2:	00 00 00 
    1dd5:	e9 8d 00 00 00       	jmpq   1e67 <e1000_probe+0x1679>
    1dda:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1de1:	02 
    1de2:	74 3d                	je     1e21 <e1000_probe+0x1633>
    1de4:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1deb:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1dee: R_X86_64_32S	str_788695754
    1df2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1df5: R_X86_64_32S	str_116751172
    1df9:	eb 1f                	jmp    1e1a <e1000_probe+0x162c>
    1dfb:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1e02:	02 
    1e03:	74 1c                	je     1e21 <e1000_probe+0x1633>
    1e05:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1e0c:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1e0f: R_X86_64_32S	str_788695754
    1e13:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e16: R_X86_64_32S	str_45950570
    1e1a:	31 c0                	xor    %eax,%eax
    1e1c:	e8 00 00 00 00       	callq  1e21 <e1000_probe+0x1633>
			1e1d: R_X86_64_PC32	printk+0xfffffffffffffffc
    1e21:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1e28:	02 
    1e29:	74 1c                	je     1e47 <e1000_probe+0x1659>
    1e2b:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1e32:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1e35: R_X86_64_32S	str_788695754
    1e39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e3c: R_X86_64_32S	str_93842591
    1e40:	31 c0                	xor    %eax,%eax
    1e42:	e8 00 00 00 00       	callq  1e47 <e1000_probe+0x1659>
			1e43: R_X86_64_PC32	printk+0xfffffffffffffffc
    1e47:	41 c6 85 70 01 00 00 	movb   $0x1,0x170(%r13)
    1e4e:	01 
    1e4f:	41 c6 85 a7 04 00 00 	movb   $0x1,0x4a7(%r13)
    1e56:	01 
    1e57:	66 41 c7 85 8a 04 00 	movw   $0x20,0x48a(%r13)
    1e5e:	00 20 00 
    1e61:	eb 04                	jmp    1e67 <e1000_probe+0x1679>
    1e63:	0f 0b                	ud2a   
    1e65:	eb fe                	jmp    1e65 <e1000_probe+0x1677>
    1e67:	49 8d 9d b8 03 00 00 	lea    0x3b8(%r13),%rbx
    1e6e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1e71: R_X86_64_32S	.rodata.str1.1+0x3a67
    1e75:	e8 00 00 00 00       	callq  1e7a <e1000_probe+0x168c>
			1e76: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1e7a:	80 bb ef 00 00 00 00 	cmpb   $0x0,0xef(%rbx)
    1e81:	75 41                	jne    1ec4 <e1000_probe+0x16d6>
    1e83:	8a 83 f0 00 00 00    	mov    0xf0(%rbx),%al
    1e89:	84 c0                	test   %al,%al
    1e8b:	74 04                	je     1e91 <e1000_probe+0x16a3>
    1e8d:	3c 03                	cmp    $0x3,%al
    1e8f:	75 33                	jne    1ec4 <e1000_probe+0x16d6>
    1e91:	c6 83 f0 00 00 00 01 	movb   $0x1,0xf0(%rbx)
    1e98:	41 f6 85 c0 07 00 00 	testb  $0x2,0x7c0(%r13)
    1e9f:	02 
    1ea0:	74 22                	je     1ec4 <e1000_probe+0x16d6>
    1ea2:	49 8b b5 f0 02 00 00 	mov    0x2f0(%r13),%rsi
    1ea9:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			1eac: R_X86_64_32S	str_788695754
    1eb0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1eb3: R_X86_64_32S	str_845239871
    1eb7:	31 c0                	xor    %eax,%eax
    1eb9:	e8 00 00 00 00       	callq  1ebe <e1000_probe+0x16d0>
			1eba: R_X86_64_PC32	printk+0xfffffffffffffffc
    1ebe:	eb 04                	jmp    1ec4 <e1000_probe+0x16d6>
    1ec0:	0f 0b                	ud2a   
    1ec2:	eb fe                	jmp    1ec2 <e1000_probe+0x16d4>
    1ec4:	41 8b 47 10          	mov    0x10(%r15),%eax
    1ec8:	83 f8 01             	cmp    $0x1,%eax
    1ecb:	0f 84 9b 00 00 00    	je     1f6c <e1000_probe+0x177e>
    1ed1:	83 f8 02             	cmp    $0x2,%eax
    1ed4:	0f 84 92 00 00 00    	je     1f6c <e1000_probe+0x177e>
    1eda:	83 f8 03             	cmp    $0x3,%eax
    1edd:	0f 84 89 00 00 00    	je     1f6c <e1000_probe+0x177e>
    1ee3:	83 f8 04             	cmp    $0x4,%eax
    1ee6:	74 1b                	je     1f03 <e1000_probe+0x1715>
    1ee8:	83 f8 12             	cmp    $0x12,%eax
    1eeb:	74 26                	je     1f13 <e1000_probe+0x1725>
    1eed:	83 f8 08             	cmp    $0x8,%eax
    1ef0:	74 3e                	je     1f30 <e1000_probe+0x1742>
    1ef2:	83 f8 09             	cmp    $0x9,%eax
    1ef5:	74 39                	je     1f30 <e1000_probe+0x1742>
    1ef7:	83 f8 0e             	cmp    $0xe,%eax
    1efa:	74 34                	je     1f30 <e1000_probe+0x1742>
    1efc:	83 f8 11             	cmp    $0x11,%eax
    1eff:	75 55                	jne    1f56 <e1000_probe+0x1768>
    1f01:	eb 2d                	jmp    1f30 <e1000_probe+0x1742>
    1f03:	48 8d 4d ce          	lea    0xffffffffffffffce(%rbp),%rcx
    1f07:	ba 01 00 00 00       	mov    $0x1,%edx
    1f0c:	be 0f 00 00 00       	mov    $0xf,%esi
    1f11:	eb 0e                	jmp    1f21 <e1000_probe+0x1733>
    1f13:	48 8d 4d ce          	lea    0xffffffffffffffce(%rbp),%rcx
    1f17:	ba 01 00 00 00       	mov    $0x1,%edx
    1f1c:	be 0a 00 00 00       	mov    $0xa,%esi
    1f21:	4c 89 ff             	mov    %r15,%rdi
    1f24:	e8 00 00 00 00       	callq  1f29 <e1000_probe+0x173b>
			1f25: R_X86_64_PC32	.text+0x1c70b
    1f29:	b8 04 00 00 00       	mov    $0x4,%eax
    1f2e:	eb 41                	jmp    1f71 <e1000_probe+0x1783>
    1f30:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1f33: R_X86_64_32S	.rodata.str1.1+0xae
    1f37:	49 8b 1f             	mov    (%r15),%rbx
    1f3a:	e8 00 00 00 00       	callq  1f3f <e1000_probe+0x1751>
			1f3b: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1f3f:	8b 43 08             	mov    0x8(%rbx),%eax
    1f42:	a8 04                	test   $0x4,%al
    1f44:	74 10                	je     1f56 <e1000_probe+0x1768>
    1f46:	48 8d 4d ce          	lea    0xffffffffffffffce(%rbp),%rcx
    1f4a:	ba 01 00 00 00       	mov    $0x1,%edx
    1f4f:	be 14 00 00 00       	mov    $0x14,%esi
    1f54:	eb 0e                	jmp    1f64 <e1000_probe+0x1776>
    1f56:	48 8d 4d ce          	lea    0xffffffffffffffce(%rbp),%rcx
    1f5a:	ba 01 00 00 00       	mov    $0x1,%edx
    1f5f:	be 24 00 00 00       	mov    $0x24,%esi
    1f64:	4c 89 ff             	mov    %r15,%rdi
    1f67:	e8 00 00 00 00       	callq  1f6c <e1000_probe+0x177e>
			1f68: R_X86_64_PC32	.text+0x1c70b
    1f6c:	b8 00 04 00 00       	mov    $0x400,%eax
    1f71:	66 85 45 ce          	test   %ax,0xffffffffffffffce(%rbp)
    1f75:	74 08                	je     1f7f <e1000_probe+0x1791>
    1f77:	41 83 8d d0 07 00 00 	orl    $0x2,0x7d0(%r13)
    1f7e:	02 
    1f7f:	48 8b 95 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdx
    1f86:	66 8b 42 3e          	mov    0x3e(%rdx),%ax
    1f8a:	66 3d 8a 10          	cmp    $0x108a,%ax
    1f8e:	74 48                	je     1fd8 <e1000_probe+0x17ea>
    1f90:	66 3d 12 10          	cmp    $0x1012,%ax
    1f94:	74 2c                	je     1fc2 <e1000_probe+0x17d4>
    1f96:	66 3d 7a 10          	cmp    $0x107a,%ax
    1f9a:	74 26                	je     1fc2 <e1000_probe+0x17d4>
    1f9c:	66 3d 5f 10          	cmp    $0x105f,%ax
    1fa0:	74 20                	je     1fc2 <e1000_probe+0x17d4>
    1fa2:	66 3d b5 10          	cmp    $0x10b5,%ax
    1fa6:	74 3d                	je     1fe5 <e1000_probe+0x17f7>
    1fa8:	66 3d a4 10          	cmp    $0x10a4,%ax
    1fac:	74 37                	je     1fe5 <e1000_probe+0x17f7>
    1fae:	66 3d a5 10          	cmp    $0x10a5,%ax
    1fb2:	74 31                	je     1fe5 <e1000_probe+0x17f7>
    1fb4:	66 3d bc 10          	cmp    $0x10bc,%ax
    1fb8:	74 2b                	je     1fe5 <e1000_probe+0x17f7>
    1fba:	66 3d d5 10          	cmp    $0x10d5,%ax
    1fbe:	75 67                	jne    2027 <e1000_probe+0x1839>
    1fc0:	eb 23                	jmp    1fe5 <e1000_probe+0x17f7>
    1fc2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1fc5: R_X86_64_32S	.rodata.str1.1+0xae
    1fc9:	49 8b 1f             	mov    (%r15),%rbx
    1fcc:	e8 00 00 00 00       	callq  1fd1 <e1000_probe+0x17e3>
			1fcd: R_X86_64_PC32	record_function+0xfffffffffffffffc
    1fd1:	8b 43 08             	mov    0x8(%rbx),%eax
    1fd4:	a8 04                	test   $0x4,%al
    1fd6:	74 4f                	je     2027 <e1000_probe+0x1839>
    1fd8:	41 c7 85 d0 07 00 00 	movl   $0x0,0x7d0(%r13)
    1fdf:	00 00 00 00 
    1fe3:	eb 42                	jmp    2027 <e1000_probe+0x1839>
    1fe5:	8b 05 00 00 00 00    	mov    0(%rip),%eax        # 1feb <e1000_probe+0x17fd>
			1fe7: R_X86_64_PC32	.bss+0x280
    1feb:	85 c0                	test   %eax,%eax
    1fed:	74 1a                	je     2009 <e1000_probe+0x181b>
    1fef:	ff c0                	inc    %eax
    1ff1:	41 c7 85 d0 07 00 00 	movl   $0x0,0x7d0(%r13)
    1ff8:	00 00 00 00 
    1ffc:	83 f8 04             	cmp    $0x4,%eax
    1fff:	89 05 00 00 00 00    	mov    %eax,0(%rip)        # 2005 <e1000_probe+0x1817>
			2001: R_X86_64_PC32	.bss+0x280
    2005:	75 20                	jne    2027 <e1000_probe+0x1839>
    2007:	eb 14                	jmp    201d <e1000_probe+0x182f>
    2009:	41 c6 85 c7 07 00 00 	movb   $0x1,0x7c7(%r13)
    2010:	01 
    2011:	c7 05 00 00 00 00 01 	movl   $0x1,0(%rip)        # 201b <e1000_probe+0x182d>
    2018:	00 00 00 
			2013: R_X86_64_PC32	.bss+0x27c
    201b:	eb 0a                	jmp    2027 <e1000_probe+0x1839>
    201d:	c7 05 00 00 00 00 00 	movl   $0x0,0(%rip)        # 2027 <e1000_probe+0x1839>
    2024:	00 00 00 
			201f: R_X86_64_PC32	.bss+0x27c
    2027:	41 8b 9d d0 07 00 00 	mov    0x7d0(%r13),%ebx
    202e:	4d 8b a5 f8 02 00 00 	mov    0x2f8(%r13),%r12
    2035:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2038: R_X86_64_32S	.rodata.str1.1+0x3a82
    203c:	41 89 9d a4 00 00 00 	mov    %ebx,0xa4(%r13)
    2043:	e8 00 00 00 00       	callq  2048 <e1000_probe+0x185a>
			2044: R_X86_64_PC32	record_function+0xfffffffffffffffc
    2048:	41 8a 84 24 0c 02 00 	mov    0x20c(%r12),%al
    204f:	00 
    2050:	85 db                	test   %ebx,%ebx
    2052:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			2055: R_X86_64_32S	str_140832182
    2059:	0f 95 c2             	setne  %dl
    205c:	01 d2                	add    %edx,%edx
    205e:	83 e0 fd             	and    $0xfffffffffffffffd,%eax
    2061:	09 d0                	or     %edx,%eax
    2063:	41 88 84 24 0c 02 00 	mov    %al,0x20c(%r12)
    206a:	00 
    206b:	41 8b 47 40          	mov    0x40(%r15),%eax
    206f:	83 f8 06             	cmp    $0x6,%eax
    2072:	74 20                	je     2094 <e1000_probe+0x18a6>
    2074:	83 f8 04             	cmp    $0x4,%eax
    2077:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			207a: R_X86_64_32S	str_291992706
    207e:	74 14                	je     2094 <e1000_probe+0x18a6>
    2080:	ff c8                	dec    %eax
    2082:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
			2085: R_X86_64_32S	str_291992703
    2089:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			208c: R_X86_64_32S	str_133143243
    2090:	48 0f 45 c8          	cmovne %rax,%rcx
    2094:	41 8b 47 3c          	mov    0x3c(%r15),%eax
    2098:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			209b: R_X86_64_32S	str_326141344
    209f:	83 f8 06             	cmp    $0x6,%eax
    20a2:	74 39                	je     20dd <e1000_probe+0x18ef>
    20a4:	83 f8 05             	cmp    $0x5,%eax
    20a7:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			20aa: R_X86_64_32S	str_128354318
    20ae:	74 2d                	je     20dd <e1000_probe+0x18ef>
    20b0:	83 f8 04             	cmp    $0x4,%eax
    20b3:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			20b6: R_X86_64_32S	str_128203420
    20ba:	74 21                	je     20dd <e1000_probe+0x18ef>
    20bc:	83 f8 03             	cmp    $0x3,%eax
    20bf:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			20c2: R_X86_64_32S	str_127942778
    20c6:	74 15                	je     20dd <e1000_probe+0x18ef>
    20c8:	83 f8 02             	cmp    $0x2,%eax
    20cb:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			20ce: R_X86_64_32S	str_7437007
    20d2:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			20d5: R_X86_64_32S	str_7025467
    20d9:	48 0f 45 d0          	cmovne %rax,%rdx
    20dd:	41 8b 47 44          	mov    0x44(%r15),%eax
    20e1:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			20e4: R_X86_64_32S	str_943
    20e8:	83 f8 02             	cmp    $0x2,%eax
    20eb:	74 15                	je     2102 <e1000_probe+0x1914>
    20ed:	83 f8 03             	cmp    $0x3,%eax
    20f0:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			20f3: R_X86_64_32S	str_1024097060
    20f7:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			20fa: R_X86_64_32S	str_0
    20fe:	48 0f 45 f0          	cmovne %rax,%rsi
    2102:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2105: R_X86_64_32S	str_240954119
    2109:	31 c0                	xor    %eax,%eax
    210b:	e8 00 00 00 00       	callq  2110 <e1000_probe+0x1922>
			210c: R_X86_64_PC32	printk+0xfffffffffffffffc
    2110:	49 8d b6 40 02 00 00 	lea    0x240(%r14),%rsi
    2117:	31 c0                	xor    %eax,%eax
    2119:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			211c: R_X86_64_32S	str_295688
    2120:	e8 00 00 00 00       	callq  2125 <e1000_probe+0x1937>
			2121: R_X86_64_PC32	printk+0xfffffffffffffffc
    2125:	41 83 7f 44 03       	cmpl   $0x3,0x44(%r15)
    212a:	75 2b                	jne    2157 <e1000_probe+0x1969>
    212c:	48 8b b5 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rsi
    2133:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2136: R_X86_64_32S	str_1000257171
    213a:	31 c0                	xor    %eax,%eax
    213c:	0f b7 56 3e          	movzwl 0x3e(%rsi),%edx
    2140:	0f b7 76 3c          	movzwl 0x3c(%rsi),%esi
    2144:	e8 00 00 00 00       	callq  2149 <e1000_probe+0x195b>
			2145: R_X86_64_PC32	printk+0xfffffffffffffffc
    2149:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			214c: R_X86_64_32S	str_207468293
    2150:	31 c0                	xor    %eax,%eax
    2152:	e8 00 00 00 00       	callq  2157 <e1000_probe+0x1969>
			2153: R_X86_64_PC32	printk+0xfffffffffffffffc
    2157:	4c 89 ef             	mov    %r13,%rdi
    215a:	e8 00 00 00 00       	callq  215f <e1000_probe+0x1971>
			215b: R_X86_64_PC32	.text+0x21472
    215f:	41 83 7f 10 10       	cmpl   $0x10,0x10(%r15)
    2164:	75 0c                	jne    2172 <e1000_probe+0x1984>
    2166:	4c 89 ff             	mov    %r15,%rdi
    2169:	e8 00 00 00 00       	callq  216e <e1000_probe+0x1980>
			216a: R_X86_64_PC32	.text+0x1eb
    216e:	84 c0                	test   %al,%al
    2170:	75 08                	jne    217a <e1000_probe+0x198c>
    2172:	4c 89 ef             	mov    %r13,%rdi
    2175:	e8 00 00 00 00       	callq  217a <e1000_probe+0x198c>
			2176: R_X86_64_PC32	.text+0x112f
    217a:	4c 89 f7             	mov    %r14,%rdi
    217d:	e8 00 00 00 00       	callq  2182 <e1000_probe+0x1994>
			217e: R_X86_64_PC32	.text+0x16317
    2182:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2185: R_X86_64_32S	.rodata.str1.1+0x2ba1
    2189:	e8 00 00 00 00       	callq  218e <e1000_probe+0x19a0>
			218a: R_X86_64_PC32	record_function+0xfffffffffffffffc
    218e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2191: R_X86_64_32S	.rodata.str1.1+0x2bb2
    2195:	e8 00 00 00 00       	callq  219a <e1000_probe+0x19ac>
			2196: R_X86_64_PC32	record_function+0xfffffffffffffffc
    219a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			219d: R_X86_64_32S	.rodata.str1.1+0x2bc6
    21a1:	49 8b 9e 00 03 00 00 	mov    0x300(%r14),%rbx
    21a8:	e8 00 00 00 00       	callq  21ad <e1000_probe+0x19bf>
			21a9: R_X86_64_PC32	record_function+0xfffffffffffffffc
    21ad:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21b0: R_X86_64_32S	.rodata.str1.1+0x2ac7
    21b4:	e8 00 00 00 00       	callq  21b9 <e1000_probe+0x19cb>
			21b5: R_X86_64_PC32	record_function+0xfffffffffffffffc
    21b9:	f0 0f ba 6b 10 00    	lock btsl $0x0,0x10(%rbx)
    21bf:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			21c2: R_X86_64_32S	str_13996412
    21c6:	4c 89 f7             	mov    %r14,%rdi
    21c9:	e8 00 00 00 00       	callq  21ce <e1000_probe+0x19e0>
			21ca: R_X86_64_PC32	strcpy+0xfffffffffffffffc
    21ce:	4c 89 f7             	mov    %r14,%rdi
    21d1:	e8 00 00 00 00       	callq  21d6 <e1000_probe+0x19e8>
			21d2: R_X86_64_PC32	.text+0x16458
    21d6:	85 c0                	test   %eax,%eax
    21d8:	89 c3                	mov    %eax,%ebx
    21da:	75 19                	jne    21f5 <e1000_probe+0x1a07>
    21dc:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21df: R_X86_64_32S	str_773682590
    21e3:	31 c0                	xor    %eax,%eax
    21e5:	e8 00 00 00 00       	callq  21ea <e1000_probe+0x19fc>
			21e6: R_X86_64_PC32	printk+0xfffffffffffffffc
    21ea:	ff 05 00 00 00 00    	incl   0(%rip)        # 21f0 <e1000_probe+0x1a02>
			21ec: R_X86_64_PC32	.bss+0x27c
    21f0:	e9 ae 00 00 00       	jmpq   22a3 <e1000_probe+0x1ab5>
    21f5:	4c 89 ef             	mov    %r13,%rdi
    21f8:	e8 00 00 00 00       	callq  21fd <e1000_probe+0x1a0f>
			21f9: R_X86_64_PC32	.text+0x11e2
    21fd:	4c 89 ff             	mov    %r15,%rdi
    2200:	e8 00 00 00 00       	callq  2205 <e1000_probe+0x1a17>
			2201: R_X86_64_PC32	.text+0x110
    2205:	85 c0                	test   %eax,%eax
    2207:	75 08                	jne    2211 <e1000_probe+0x1a23>
    2209:	4c 89 ff             	mov    %r15,%rdi
    220c:	e8 00 00 00 00       	callq  2211 <e1000_probe+0x1a23>
			220d: R_X86_64_PC32	.text+0x1ca28
    2211:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    2215:	48 85 ff             	test   %rdi,%rdi
    2218:	74 05                	je     221f <e1000_probe+0x1a31>
    221a:	e8 00 00 00 00       	callq  221f <e1000_probe+0x1a31>
			221b: R_X86_64_PC32	.text+0x36b5
    221f:	49 8b bd b0 01 00 00 	mov    0x1b0(%r13),%rdi
    2226:	e8 00 00 00 00       	callq  222b <e1000_probe+0x1a3d>
			2227: R_X86_64_PC32	kfree+0xfffffffffffffffc
    222b:	49 8b bd 20 02 00 00 	mov    0x220(%r13),%rdi
    2232:	e8 00 00 00 00       	callq  2237 <e1000_probe+0x1a49>
			2233: R_X86_64_PC32	kfree+0xfffffffffffffffc
    2237:	49 8b 3f             	mov    (%r15),%rdi
    223a:	e8 00 00 00 00       	callq  223f <e1000_probe+0x1a51>
			223b: R_X86_64_PC32	.text+0x36b5
    223f:	4c 89 f7             	mov    %r14,%rdi
    2242:	e8 00 00 00 00       	callq  2247 <e1000_probe+0x1a59>
			2243: R_X86_64_PC32	.text+0x45a0
    2247:	8b b5 4c fc ff ff    	mov    0xfffffffffffffc4c(%rbp),%esi
    224d:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
    2254:	e8 00 00 00 00       	callq  2259 <e1000_probe+0x1a6b>
			2255: R_X86_64_PC32	.text+0xcad5
    2259:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
    2260:	e8 00 00 00 00       	callq  2265 <e1000_probe+0x1a77>
			2261: R_X86_64_PC32	.text+0x35d3
    2265:	eb 3c                	jmp    22a3 <e1000_probe+0x1ab5>
    2267:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
    226e:	be 00 02 00 00       	mov    $0x200,%esi
    2273:	45 31 e4             	xor    %r12d,%r12d
    2276:	e8 00 00 00 00       	callq  227b <e1000_probe+0x1a8d>
			2277: R_X86_64_PC32	.text+0x1ac60
    227b:	48 8b bd 40 fc ff ff 	mov    0xfffffffffffffc40(%rbp),%rdi
    2282:	89 85 4c fc ff ff    	mov    %eax,0xfffffffffffffc4c(%rbp)
    2288:	e8 00 00 00 00       	callq  228d <e1000_probe+0x1a9f>
			2289: R_X86_64_PC32	.text+0x18869
    228d:	89 c3                	mov    %eax,%ebx
    228f:	e9 59 e6 ff ff       	jmpq   8ed <e1000_probe+0xff>
    2294:	41 f6 c4 01          	test   $0x1,%r12b
    2298:	0f 85 9c ea ff ff    	jne    d3a <e1000_probe+0x54c>
    229e:	e9 9d ea ff ff       	jmpq   d40 <e1000_probe+0x552>
    22a3:	48 81 c4 a8 03 00 00 	add    $0x3a8,%rsp
    22aa:	89 d8                	mov    %ebx,%eax
    22ac:	5b                   	pop    %rbx
    22ad:	41 5c                	pop    %r12
    22af:	41 5d                	pop    %r13
    22b1:	41 5e                	pop    %r14
    22b3:	41 5f                	pop    %r15
    22b5:	c9                   	leaveq 
    22b6:	c3                   	retq   
Disassembly of section .devexit.text:

0000000000000000 <e1000_remove>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	4c 8d 75 b8          	lea    0xffffffffffffffb8(%rbp),%r14
   c:	41 55                	push   %r13
   e:	4c 8d 6d c0          	lea    0xffffffffffffffc0(%rbp),%r13
  12:	41 54                	push   %r12
  14:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
  18:	53                   	push   %rbx
  19:	48 83 ec 58          	sub    $0x58,%rsp
  1d:	48 89 7d 88          	mov    %rdi,0xffffffffffffff88(%rbp)
  21:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			24: R_X86_64_32S	.rodata.str1.1+0x3470
  28:	e8 00 00 00 00       	callq  2d <e1000_remove+0x2d>
			29: R_X86_64_PC32	record_function+0xfffffffffffffffc
  2d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30: R_X86_64_32S	.rodata.str1.1+0x2d9d
  34:	e8 00 00 00 00       	callq  39 <e1000_remove+0x39>
			35: R_X86_64_PC32	record_function+0xfffffffffffffffc
  39:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c: R_X86_64_32S	.rodata.str1.1+0x2dad
  40:	e8 00 00 00 00       	callq  45 <e1000_remove+0x45>
			41: R_X86_64_PC32	record_function+0xfffffffffffffffc
  45:	48 8b 45 88          	mov    0xffffffffffffff88(%rbp),%rax
  49:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4c: R_X86_64_32S	.rodata.str1.1+0x1be
  50:	4c 8b b8 f8 01 00 00 	mov    0x1f8(%rax),%r15
  57:	e8 00 00 00 00       	callq  5c <e1000_remove+0x5c>
			58: R_X86_64_PC32	record_function+0xfffffffffffffffc
  5c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			5f: R_X86_64_32S	.rodata.str1.1+0x347d
  63:	49 8d 87 00 08 00 00 	lea    0x800(%r15),%rax
  6a:	49 8d 9f 38 09 00 00 	lea    0x938(%r15),%rbx
  71:	48 89 45 90          	mov    %rax,0xffffffffffffff90(%rbp)
  75:	49 8d 87 b8 0b 00 00 	lea    0xbb8(%r15),%rax
  7c:	48 89 45 98          	mov    %rax,0xffffffffffffff98(%rbp)
  80:	e8 00 00 00 00       	callq  85 <e1000_remove+0x85>
			81: R_X86_64_PC32	record_function+0xfffffffffffffffc
  85:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			88: R_X86_64_32S	.rodata.str1.1+0x348e
  8c:	48 89 5d c8          	mov    %rbx,0xffffffffffffffc8(%rbp)
  90:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
  97:	00 
  98:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
  9f:	00 
  a0:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
  a7:	e8 00 00 00 00       	callq  ac <e1000_remove+0xac>
			a8: R_X86_64_PC32	record_function+0xfffffffffffffffc
  ac:	4c 89 e1             	mov    %r12,%rcx
  af:	4c 89 f2             	mov    %r14,%rdx
  b2:	4c 89 ee             	mov    %r13,%rsi
  b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			b8: R_X86_64_32S	.rodata.str1.1+0x347d
  bc:	c7 45 b8 00 00 00 00 	movl   $0x0,0xffffffffffffffb8(%rbp)
  c3:	48 c7 45 c0 00 00 00 	movq   $0x0,0xffffffffffffffc0(%rbp)
  ca:	00 
  cb:	e8 00 00 00 00       	callq  d0 <e1000_remove+0xd0>
			cc: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
  d0:	48 8b 45 c0          	mov    0xffffffffffffffc0(%rbp),%rax
  d4:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
  d8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			db: R_X86_64_32S	.rodata.str1.1+0x347d
  df:	48 c7 45 a0 6c 04 00 	movq   $0x46c,0xffffffffffffffa0(%rbp)
  e6:	00 
  e7:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
  eb:	8b 45 b8             	mov    0xffffffffffffffb8(%rbp),%eax
  ee:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
  f1:	e8 00 00 00 00       	callq  f6 <e1000_remove+0xf6>
			f2: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
  f6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f9: R_X86_64_32S	.rodata.str1.1+0x34ad
  fd:	48 89 5d c0          	mov    %rbx,0xffffffffffffffc0(%rbp)
 101:	e8 00 00 00 00       	callq  106 <e1000_remove+0x106>
			102: R_X86_64_PC32	record_function+0xfffffffffffffffc
 106:	48 8b 5d b0          	mov    0xffffffffffffffb0(%rbp),%rbx
 10a:	41 b8 fe ff ff ff    	mov    $0xfffffffe,%r8d
 110:	4c 89 e9             	mov    %r13,%rcx
 113:	4c 89 e2             	mov    %r12,%rdx
 116:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			119: R_X86_64_32S	.rodata.str1.1+0x347d
 11d:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
 124:	48 89 de             	mov    %rbx,%rsi
 127:	e8 00 00 00 00       	callq  12c <e1000_remove+0x12c>
			128: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 12c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12f: R_X86_64_32S	.rodata.str1.1+0x347d
 133:	4d 89 f0             	mov    %r14,%r8
 136:	b9 04 00 00 00       	mov    $0x4,%ecx
 13b:	4c 89 e2             	mov    %r12,%rdx
 13e:	48 89 de             	mov    %rbx,%rsi
 141:	e8 00 00 00 00       	callq  146 <e1000_remove+0x146>
			142: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 146:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
 14a:	48 85 ff             	test   %rdi,%rdi
 14d:	74 0d                	je     15c <e1000_remove+0x15c>
 14f:	e8 00 00 00 00       	callq  154 <e1000_remove+0x154>
			150: R_X86_64_PC32	kfree+0xfffffffffffffffc
 154:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
 15b:	00 
 15c:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
 160:	e8 00 00 00 00       	callq  165 <e1000_remove+0x165>
			161: R_X86_64_PC32	.text+0xfe6
 165:	48 8b 7d 90          	mov    0xffffffffffffff90(%rbp),%rdi
 169:	e8 00 00 00 00       	callq  16e <e1000_remove+0x16e>
			16a: R_X86_64_PC32	.text+0x11e2
 16e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			171: R_X86_64_32S	.rodata.str1.1+0x34cc
 175:	e8 00 00 00 00       	callq  17a <e1000_remove+0x17a>
			176: R_X86_64_PC32	record_function+0xfffffffffffffffc
 17a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			17d: R_X86_64_32S	.rodata.str1.1+0x34de
 181:	48 c7 45 a0 00 00 00 	movq   $0x0,0xffffffffffffffa0(%rbp)
 188:	00 
 189:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
 190:	00 
 191:	c7 45 a8 00 00 00 00 	movl   $0x0,0xffffffffffffffa8(%rbp)
 198:	4c 89 7d c0          	mov    %r15,0xffffffffffffffc0(%rbp)
 19c:	e8 00 00 00 00       	callq  1a1 <e1000_remove+0x1a1>
			19d: R_X86_64_PC32	record_function+0xfffffffffffffffc
 1a1:	4c 89 e9             	mov    %r13,%rcx
 1a4:	4c 89 e2             	mov    %r12,%rdx
 1a7:	4c 89 f6             	mov    %r14,%rsi
 1aa:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ad: R_X86_64_32S	.rodata.str1.1+0x34cc
 1b1:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
 1b8:	48 c7 45 b8 00 00 00 	movq   $0x0,0xffffffffffffffb8(%rbp)
 1bf:	00 
 1c0:	e8 00 00 00 00       	callq  1c5 <e1000_remove+0x1c5>
			1c1: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 1c5:	48 83 7d c0 00       	cmpq   $0x0,0xffffffffffffffc0(%rbp)
 1ca:	0f 84 b2 00 00 00    	je     282 <e1000_remove+0x282>
 1d0:	31 db                	xor    %ebx,%ebx
 1d2:	48 89 d9             	mov    %rbx,%rcx
 1d5:	48 03 4d c0          	add    0xffffffffffffffc0(%rbp),%rcx
 1d9:	4c 8d 65 c8          	lea    0xffffffffffffffc8(%rbp),%r12
 1dd:	4c 8d 6d b8          	lea    0xffffffffffffffb8(%rbp),%r13
 1e1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 1e7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1ea: R_X86_64_32S	.rodata.str1.1+0x34cc
 1ee:	4c 89 e2             	mov    %r12,%rdx
 1f1:	48 ff c3             	inc    %rbx
 1f4:	4c 89 ee             	mov    %r13,%rsi
 1f7:	e8 00 00 00 00       	callq  1fc <e1000_remove+0x1fc>
			1f8: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
 1fc:	48 83 fb 10          	cmp    $0x10,%rbx
 200:	75 d0                	jne    1d2 <e1000_remove+0x1d2>
 202:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
 206:	41 b8 04 00 00 00    	mov    $0x4,%r8d
 20c:	4c 89 e2             	mov    %r12,%rdx
 20f:	4c 89 ee             	mov    %r13,%rsi
 212:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			215: R_X86_64_32S	.rodata.str1.1+0x34cc
 219:	48 81 c1 30 04 00 00 	add    $0x430,%rcx
 220:	e8 00 00 00 00       	callq  225 <e1000_remove+0x225>
			221: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
 225:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
 229:	41 b8 04 00 00 00    	mov    $0x4,%r8d
 22f:	4c 89 e2             	mov    %r12,%rdx
 232:	4c 89 ee             	mov    %r13,%rsi
 235:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			238: R_X86_64_32S	.rodata.str1.1+0x34cc
 23c:	48 81 c1 f0 01 00 00 	add    $0x1f0,%rcx
 243:	e8 00 00 00 00       	callq  248 <e1000_remove+0x248>
			244: R_X86_64_PC32	fill_marshbuf+0xfffffffffffffffc
 248:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
 24c:	4c 89 e2             	mov    %r12,%rdx
 24f:	4c 89 ee             	mov    %r13,%rsi
 252:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			255: R_X86_64_32S	.rodata.str1.1+0x34cc
 259:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
 260:	e8 00 00 00 00       	callq  265 <e1000_remove+0x265>
			261: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 265:	48 8b 4d c0          	mov    0xffffffffffffffc0(%rbp),%rcx
 269:	4c 89 e2             	mov    %r12,%rdx
 26c:	4c 89 ee             	mov    %r13,%rsi
 26f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			272: R_X86_64_32S	.rodata.str1.1+0x34cc
 276:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
 27d:	e8 00 00 00 00       	callq  282 <e1000_remove+0x282>
			27e: R_X86_64_PC32	fill_marshbuf_ptr+0xfffffffffffffffc
 282:	48 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%rax
 286:	48 8d 75 a0          	lea    0xffffffffffffffa0(%rbp),%rsi
 28a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			28d: R_X86_64_32S	.rodata.str1.1+0x34cc
 291:	48 c7 45 a0 42 07 00 	movq   $0x742,0xffffffffffffffa0(%rbp)
 298:	00 
 299:	48 89 45 b0          	mov    %rax,0xffffffffffffffb0(%rbp)
 29d:	8b 45 c8             	mov    0xffffffffffffffc8(%rbp),%eax
 2a0:	89 45 a8             	mov    %eax,0xffffffffffffffa8(%rbp)
 2a3:	e8 00 00 00 00       	callq  2a8 <e1000_remove+0x2a8>
			2a4: R_X86_64_PC32	disp_kern+0xfffffffffffffffc
 2a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ab: R_X86_64_32S	.rodata.str1.1+0x34fe
 2af:	4c 89 7d b8          	mov    %r15,0xffffffffffffffb8(%rbp)
 2b3:	e8 00 00 00 00       	callq  2b8 <e1000_remove+0x2b8>
			2b4: R_X86_64_PC32	record_function+0xfffffffffffffffc
 2b8:	4c 8b 65 b0          	mov    0xffffffffffffffb0(%rbp),%r12
 2bc:	48 8d 4d b8          	lea    0xffffffffffffffb8(%rbp),%rcx
 2c0:	48 8d 55 c8          	lea    0xffffffffffffffc8(%rbp),%rdx
 2c4:	41 b8 00 08 00 00    	mov    $0x800,%r8d
 2ca:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2cd: R_X86_64_32S	.rodata.str1.1+0x34cc
 2d1:	c7 45 c8 00 00 00 00 	movl   $0x0,0xffffffffffffffc8(%rbp)
 2d8:	4c 89 e6             	mov    %r12,%rsi
 2db:	e8 00 00 00 00       	callq  2e0 <e1000_remove+0x2e0>
			2dc: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 2e0:	48 83 7d b8 00       	cmpq   $0x0,0xffffffffffffffb8(%rbp)
 2e5:	0f 84 dd 00 00 00    	je     3c8 <e1000_remove+0x3c8>
 2eb:	31 db                	xor    %ebx,%ebx
 2ed:	49 89 d8             	mov    %rbx,%r8
 2f0:	4c 03 45 b8          	add    0xffffffffffffffb8(%rbp),%r8
 2f4:	4c 8d 6d c8          	lea    0xffffffffffffffc8(%rbp),%r13
 2f8:	b9 01 00 00 00       	mov    $0x1,%ecx
 2fd:	4c 89 e6             	mov    %r12,%rsi
 300:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			303: R_X86_64_32S	.rodata.str1.1+0x34cc
 307:	4c 89 ea             	mov    %r13,%rdx
 30a:	48 ff c3             	inc    %rbx
 30d:	e8 00 00 00 00       	callq  312 <e1000_remove+0x312>
			30e: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 312:	48 83 fb 10          	cmp    $0x10,%rbx
 316:	75 d5                	jne    2ed <e1000_remove+0x2ed>
 318:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
 31c:	ba 10 00 00 00       	mov    $0x10,%edx
 321:	be 18 04 00 00       	mov    $0x418,%esi
 326:	e8 00 00 00 00       	callq  32b <e1000_remove+0x32b>
			327: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
 32b:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
 32f:	b9 04 00 00 00       	mov    $0x4,%ecx
 334:	4c 89 ea             	mov    %r13,%rdx
 337:	4c 89 e6             	mov    %r12,%rsi
 33a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33d: R_X86_64_32S	.rodata.str1.1+0x34cc
 341:	49 81 c0 30 04 00 00 	add    $0x430,%r8
 348:	e8 00 00 00 00       	callq  34d <e1000_remove+0x34d>
			349: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 34d:	4c 8b 45 b8          	mov    0xffffffffffffffb8(%rbp),%r8
 351:	b9 04 00 00 00       	mov    $0x4,%ecx
 356:	4c 89 ea             	mov    %r13,%rdx
 359:	4c 89 e6             	mov    %r12,%rsi
 35c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			35f: R_X86_64_32S	.rodata.str1.1+0x34cc
 363:	49 81 c0 f0 01 00 00 	add    $0x1f0,%r8
 36a:	e8 00 00 00 00       	callq  36f <e1000_remove+0x36f>
			36b: R_X86_64_PC32	fetch_marshbuf+0xfffffffffffffffc
 36f:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
 373:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 379:	4c 89 ea             	mov    %r13,%rdx
 37c:	4c 89 e6             	mov    %r12,%rsi
 37f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			382: R_X86_64_32S	.rodata.str1.1+0x34cc
 386:	48 81 c1 18 07 00 00 	add    $0x718,%rcx
 38d:	e8 00 00 00 00       	callq  392 <e1000_remove+0x392>
			38e: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 392:	48 8b 7d b8          	mov    0xffffffffffffffb8(%rbp),%rdi
 396:	ba 10 00 00 00       	mov    $0x10,%edx
 39b:	be 10 00 00 00       	mov    $0x10,%esi
 3a0:	e8 00 00 00 00       	callq  3a5 <e1000_remove+0x3a5>
			3a1: R_X86_64_PC32	nooks_ot_storeoffset_user+0xfffffffffffffffc
 3a5:	48 8b 4d b8          	mov    0xffffffffffffffb8(%rbp),%rcx
 3a9:	41 b8 38 00 00 00    	mov    $0x38,%r8d
 3af:	4c 89 ea             	mov    %r13,%rdx
 3b2:	4c 89 e6             	mov    %r12,%rsi
 3b5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3b8: R_X86_64_32S	.rodata.str1.1+0x34cc
 3bc:	48 81 c1 e8 01 00 00 	add    $0x1e8,%rcx
 3c3:	e8 00 00 00 00       	callq  3c8 <e1000_remove+0x3c8>
			3c4: R_X86_64_PC32	fetch_marshbuf_ptr+0xfffffffffffffffc
 3c8:	48 8b 7d b0          	mov    0xffffffffffffffb0(%rbp),%rdi
 3cc:	48 85 ff             	test   %rdi,%rdi
 3cf:	74 0d                	je     3de <e1000_remove+0x3de>
 3d1:	e8 00 00 00 00       	callq  3d6 <e1000_remove+0x3d6>
			3d2: R_X86_64_PC32	kfree+0xfffffffffffffffc
 3d6:	48 c7 45 b0 00 00 00 	movq   $0x0,0xffffffffffffffb0(%rbp)
 3dd:	00 
 3de:	48 8b 7d 98          	mov    0xffffffffffffff98(%rbp),%rdi
 3e2:	e8 00 00 00 00       	callq  3e7 <e1000_remove+0x3e7>
			3e3: R_X86_64_PC32	.text+0x110
 3e7:	85 c0                	test   %eax,%eax
 3e9:	75 09                	jne    3f4 <e1000_remove+0x3f4>
 3eb:	48 8b 7d 98          	mov    0xffffffffffffff98(%rbp),%rdi
 3ef:	e8 00 00 00 00       	callq  3f4 <e1000_remove+0x3f4>
			3f0: R_X86_64_PC32	.text+0x1ca28
 3f4:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
 3f8:	48 8b b8 b0 01 00 00 	mov    0x1b0(%rax),%rdi
 3ff:	e8 00 00 00 00       	callq  404 <e1000_remove+0x404>
			400: R_X86_64_PC32	kfree+0xfffffffffffffffc
 404:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
 408:	48 8b b8 20 02 00 00 	mov    0x220(%rax),%rdi
 40f:	e8 00 00 00 00       	callq  414 <e1000_remove+0x414>
			410: R_X86_64_PC32	kfree+0xfffffffffffffffc
 414:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
 418:	48 8b 38             	mov    (%rax),%rdi
 41b:	e8 00 00 00 00       	callq  420 <e1000_remove+0x420>
			41c: R_X86_64_PC32	.text+0x36b5
 420:	48 8b 45 98          	mov    0xffffffffffffff98(%rbp),%rax
 424:	48 8b 78 08          	mov    0x8(%rax),%rdi
 428:	48 85 ff             	test   %rdi,%rdi
 42b:	74 05                	je     432 <e1000_remove+0x432>
 42d:	e8 00 00 00 00       	callq  432 <e1000_remove+0x432>
			42e: R_X86_64_PC32	.text+0x36b5
 432:	48 8b 45 90          	mov    0xffffffffffffff90(%rbp),%rax
 436:	48 8b 7d 88          	mov    0xffffffffffffff88(%rbp),%rdi
 43a:	8b b0 d4 07 00 00    	mov    0x7d4(%rax),%esi
 440:	e8 00 00 00 00       	callq  445 <e1000_remove+0x445>
			441: R_X86_64_PC32	.text+0xcad5
 445:	4c 89 ff             	mov    %r15,%rdi
 448:	e8 00 00 00 00       	callq  44d <e1000_remove+0x44d>
			449: R_X86_64_PC32	.text+0x45a0
 44d:	48 8b 7d 88          	mov    0xffffffffffffff88(%rbp),%rdi
 451:	e8 00 00 00 00       	callq  456 <e1000_remove+0x456>
			452: R_X86_64_PC32	.text+0x35d3
 456:	48 83 c4 58          	add    $0x58,%rsp
 45a:	5b                   	pop    %rbx
 45b:	41 5c                	pop    %r12
 45d:	41 5d                	pop    %r13
 45f:	41 5e                	pop    %r14
 461:	41 5f                	pop    %r15
 463:	c9                   	leaveq 
 464:	c3                   	retq   
